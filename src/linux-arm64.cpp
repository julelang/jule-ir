// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 10/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <pthread.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1a4322437_acceptRange;
struct _1a4361861_LittleEndian;
struct _1a437b57e_u128;
struct _1a9a3896c_group;
struct _1b1bd7cac_group;
struct _1a9a36629__Map;
struct _1b1bd5b78__Map;
struct _1a9a42da5_mapIterator;
struct _1b1be0259_mapIterator;
struct _1a387dcd5_Builder;
struct _1a87a3d8c_foldPair;
struct _1a87a4387_CaseRange;
struct _1a87a483d_Range16;
struct _1a87a4d6b_Range32;
struct _1a87a52de_RangeTable;
struct _1a87b3671_lazyBuff;
struct _1a68cec56_File;
struct _1a696ca5d_cmdAttrs;
struct _1a696ebc5_Stat;
struct _1a388d1ac_Log;
struct _1a940502b_floatInfo;
struct _1a9405b75_decimalSlice;
struct _1a9417bed_leftCheat;
struct _1a9418715_decimal;
struct _1a87e67c5_AnsiEscape;
struct _1a941dc48_Logger;
struct _1ab6a54d8_Token;
struct _1ab6aadb2_Fileset;
struct _1ab6acee6_kindPair;
struct _1ab6b3e86_lex;
struct _1ab6bd9b8_AST;
struct _1ab6be876_Node;
struct _1ab6bec94_Directive;
struct _1ab6c0877_TypeDecl;
struct _1ab6c0e82_IdentTypeDecl;
struct _1ab6c124b_SubIdentTypeDecl;
struct _1ab6c1625_NamespaceTypeDecl;
struct _1ab6c1922_SptrTypeDecl;
struct _1ab6c1ca7_SlcTypeDecl;
struct _1ab6c20a4_TupleTypeDecl;
struct _1ab6c23a1_PtrTypeDecl;
struct _1ab6c2b43_ArrTypeDecl;
struct _1ab6c3391_MapTypeDecl;
struct _1ab6c376a_RetTypeDecl;
struct _1ab6c4bab_Expr;
struct _1ab6c4e75_RangeExpr;
struct _1ab6c5580_UseExpr;
struct _1ab6c57a0_TupleExpr;
struct _1ab6c5b46_LitExpr;
struct _1ab6c6020_UnsafeExpr;
struct _1ab6c64c6_IdentExpr;
struct _1ab6c6c68_UnaryExpr;
struct _1ab6c7142_VariadicExpr;
struct _1a3788481_CastExpr;
struct _1a378885a_NamespaceExpr;
struct _1a3788c34_SubIdentExpr;
struct _1a37891da_BinaryExpr;
struct _1a378984a_FnCallExpr;
struct _1a378a340_FieldExprPair;
struct _1a378ab6a_StructLit;
struct _1a378b121_BraceLit;
struct _1a378b94b_KeyValPair;
struct _1a378c386_SliceExpr;
struct _1a378cdae_IndexingExpr;
struct _1a378d51e_SlicingExpr;
struct _1a378d81b_Constraint;
struct _1a378dcc2_GenericDecl;
struct _1a378e19b_LabelSt;
struct _1a378e575_GotoSt;
struct _1a378e872_FallSt;
struct _1a378eed2_AssignLeft;
struct _1a3790565_AssignSt;
struct _1a3791555_Stmt;
struct _1a3791bb5_ScopeTree;
struct _1a3792402_ParamDecl;
struct _1a3793854_FnDecl;
struct _1a3794a0e_VarDecl;
struct _1a3794dd8_RetSt;
struct _1a3795658_Iter;
struct _1a3795e83_WhileKind;
struct _1a379688a_RangeKind;
struct _1a3796c64_BreakSt;
struct _1a379713d_ContSt;
struct _1a37975e4_If;
struct _1a37979bd_Else;
struct _1a3797e74_Conditional;
struct _1a37986b1_TypeAliasDecl;
struct _1a3798b67_Case;
struct _1a3799481_MatchCase;
struct _1a3799a14_UseDecl;
struct _1a3799eba_EnumItemDecl;
struct _1a379aa7b_EnumDecl;
struct _1a379b3a6_TypeEnumItemDecl;
struct _1a379ba16_TypeEnumDecl;
struct _1a379bcd0_FieldDecl;
struct _1a379c6c6_StructDecl;
struct _1a379ce13_TraitDecl;
struct _1a379d573_Impl;
struct _1ab070c61_Const;
struct _1a379e651_Field;
struct _1a37a1664_Operators;
struct _1a37a2577_Struct;
struct _1a37a4832_FieldIns;
struct _1a37a53d2_StructIns;
struct _1ab07c124_OperandExprModel;
struct _1ab07c61e_BinaryExprModel;
struct _1ab07c9e8_UnaryExprModel;
struct _1ab07d026_StructArgExprModel;
struct _1ab07d3bc_StructLitExprModel;
struct _1ab07d6b9_AllocStructLitExprModel;
struct _1ab07dc4c_CastingExprModel;
struct _1ab07e5ee_FnCallExprModel;
struct _1ab07e9c8_SliceExprModel;
struct _1ab07ee7e_IndexingExprModel;
struct _1ab080435_AnonFnExprModel;
struct _1ab08080e_KeyValPairExprModel;
struct _1ab080bd8_MapExprModel;
struct _1ab08126b_SlicingExprModel;
struct _1ab0817ee_TraitSubIdentExprModel;
struct _1ab082190_StructSubIdentExprModel;
struct _1ab082536_StructStaticIdentExprModel;
struct _1ab082910_ArrayExprModel;
struct _1ab082c0c_TupleExprModel;
struct _1ab083009_BuiltinPrintCallExprModel;
struct _1ab083306_BuiltinPrintlnCallExprModel;
struct _1ab0836d0_BuiltinNewCallExprModel;
struct _1ab083aa9_BuiltinPanicCallExprModel;
struct _1ab084060_BuiltinMakeCallExprModel;
struct _1ab084439_BuiltinAppendCallExprModel;
struct _1ab084736_BuiltinLenCallExprModel;
struct _1ab084a33_BuiltinCapCallExprModel;
struct _1ab084e0c_BuiltinDeleteCallExprModel;
struct _1ab0852d6_BuiltinCopyCallExprModel;
struct _1ab0856b0_BuiltinErrorCallExprModel;
struct _1ab0859ac_SizeofExprModel;
struct _1ab086161_AlignofExprModel;
struct _1ab08634d_RuneExprModel;
struct _1ab0866c2_BackendEmitExprModel;
struct _1ab0869be_FreeExprModel;
struct _1ab087849_RetType;
struct _1ab087e21_Param;
struct _1ab0898e5_Fn;
struct _1ab08b84d_ParamIns;
struct _1ab08c9a3_FnIns;
struct _1ab090be8_SymTab;
struct _1ab095109_Trait;
struct _1ab096c54_EnumItem;
struct _1ab0977b0_Enum;
struct _1ab0988e3_TypeEnumItem;
struct _1ab098eba_TypeEnum;
struct _1ab119cc7_comptimeRange;
struct _1ab11a833_comptimeStructField;
struct _1ab11c0c6_comptimeStructFields;
struct _1ab11da56_comptimeStatic;
struct _1ab12030a_comptimeStatics;
struct _1ab121c79_comptimeEnumField;
struct _1ab123088_comptimeEnumFields;
struct _1ab124a90_comptimeParam;
struct _1ab1268e9_comptimeParams;
struct _1ab128258_comptimeTypeInfos;
struct _1ab129bc7_comptimeTypeInfo;
struct _1ab130ccc_comptimeValue;
struct _1ab133a38_comptimeFiles;
struct _1ab1354a7_comptimeFile;
struct _1ab1370d0_comptimeDecls;
struct _1ab1393bd_comptimeDecl;
struct _1ab82e2bb_constraintChecker;
struct _1ab8315ba_Impl;
struct _1ab835bc9_Scope;
struct _1ab8360e7_If;
struct _1ab8363e4_Else;
struct _1ab836812_Conditional;
struct _1ab836b0e_InfIter;
struct _1ab8370b5_WhileIter;
struct _1ab837a11_RangeIter;
struct _1ab837d96_ContSt;
struct _1ab838270_BreakSt;
struct _1ab838726_Label;
struct _1ab838d86_GotoSt;
struct _1ab839260_Postfix;
struct _1ab839716_Assign;
struct _1ab839bbc_MultiAssign;
struct _1ab83a409_Match;
struct _1ab83ae32_Case;
struct _1ab83b62a_FallSt;
struct _1ab83b9c1_RetSt;
struct _1ab83be77_scopeLabel;
struct _1ab83ce67_scopeChecker;
struct _1ab851ce4_directiveChecker;
struct _1ab854577_ReferenceStack;
struct _1ab855a51_Pass;
struct _1ab85a506_symBuilder;
struct _1ab866578_ImportInfo;
struct _1ab868cea_Package;
struct _1ab88294b_commonSemaMeta;
struct _1ab883573_sema;
struct _1ab8a37a2_missingRetChecker;
struct _1ab8a7289_Var;
struct _1ab8a8114_FuncPattern;
struct _1ab8e30a5_typeCompatibilityChecker;
struct _1ab8e4e31_assignTypeChecker;
struct _1ab8e6806_dynamicTypeAnnotation;
struct _1ab8eb663_fnCallArgChecker;
struct _1ab8ee59a_structLitChecker;
struct _1ab90137c_rangeChecker;
struct _1ab903add_retTypeChecker;
struct _1ab906a8b_Data;
struct _1ab907c13_Value;
struct _1ab9087b3_eval;
struct _1ab927aac_unaryEval;
struct _1ab929a48_binaryEval;
struct _1ab937e30_InsGeneric;
struct _1ab938a24_TypeAlias;
struct _1ab939816_Type;
struct _1ab942027_TypeSym;
struct _1ab94292e_Prim;
struct _1ab94645a_Sptr;
struct _1ab946e2d_Slc;
struct _1ab947a22_Tuple;
struct _1ab9485c2_Map;
struct _1ab94924e_Arr;
struct _1ab949c22_Ptr;
struct _1ab94ac23_referencer;
struct _1ab94bc13_typeChecker;
struct _1ab954cc6_identTypeLookup;
struct _1ab39bba2_FileInfo;
struct _1ab39e49b_stmt;
struct _1ab39ed3c_scopeParser;
struct _1ab3ac762_exprBuilder;
struct _1ab3b9d57_assignInfo;
struct _1ab3bd047_parser;
struct _1ab3ce201_typeBuilder;
struct _1aba618d8_CompileInfo;
struct _1aba62ca2_directiveEval;
struct _1ab3d3447_Importer;
struct _1ab3d977d_ExprInspector;
struct _1ab3e15a9_MetaStrBuilder;
struct _1ab3e19c7_Meta;
struct _1ab3e29ea_OrderedDefines;
struct _1ad1cca25_specialCaseDefines;
struct _1ad1cd33e_liveTable;
struct _1ad1cd7e5_ObjectDeadCode;
struct _1ad1d2860_scopeDeadCode;
struct _1ad1d6de7_exprDeadCode;
struct _1ad12156d_ExceptionalForwardingExprModel;
struct _1ad12175a_FnCallIgnoreExceptionalExprModel;
struct _1ad121b01_SwapExprModel;
struct _1ad12201e_EmptyCompareExprModel;
struct _1ad12231b_RefExprModel;
struct _1ad1227c2_StrCompExprModel;
struct _1ad122d55_MutSlicingExprModel;
struct _1ad1231da_UnsafeBinaryExprModel;
struct _1ad1234d7_UnsafeIndexingExprModel;
struct _1ad1238b1_PushToSliceExprModel;
struct _1ad123c8a_AppendToSliceExprModel;
struct _1ad124164_StrRuneIter;
struct _1ad124461_UnsafeDerefExprModel;
struct _1ad12475d_UnsafeCastingExprModel;
struct _1ad125385_nilVar;
struct _1ad1256c6_nils;
struct _1ad128344_scopeOptimizer;
struct _1ad12ebec_exprOptimizer;
struct _1ad135186_dynamicVar;
struct _1ad1354c7_dynamic;
struct _1ad1383a9_data;
struct _1ad139850_boundaryVar;
struct _1ad139b91_boundary;
struct _1ad1d80d5_Optimizer;
struct _1ad4b2e70_AbsTime;
struct _1ad4b3646_Time;
struct _1ad1dc2a4_scopeCoder;
struct _1ad1e8799_exprCoder;
struct _1ad20ad2d_TestCoder;
struct _1ad20d979_identCoder;
struct _1ad4bd277_SerializationInfo;
struct _1ad4bd695_traitCast;
struct _1ad4bda6e_anonHash;
struct _1ad4bde8c_traitHash;
struct _1ad4be289_metadata;
struct _1ad4c0a2c_ObjectCoder;
struct _1ad4ced5a_customType;
struct _1ad4d0982_typeCoder;
struct _1ad4d856c_resultCoder;
struct _1b2389ded_Flag;
struct _1b238d781_Flag;
struct _1b2391e8d_Flag;
struct _1b23956de_Flag;
struct _1b2398deb_Flag;
struct _1ad54d725_FlagSet;
struct _1ad5511d9_argParser;
struct _1a68ca14c_Dir;
struct _1ad137cd2_dataCheckpoint;
struct _1ab3d5ec7_IR;
struct _1a68cac74_Cmd;
struct _1a4322437_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1a4322437_acceptRange_eq(_1a4322437_acceptRange *_self_, _1a4322437_acceptRange _other_);


struct _1a4361861_LittleEndian {
};
inline jule::Bool _1a4361861_LittleEndian_eq(_1a4361861_LittleEndian *_self_, _1a4361861_LittleEndian _other_);


struct _1a437b57e_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1a437b57e_u128_eq(_1a437b57e_u128 *_self_, _1a437b57e_u128 _other_);


struct _1a9a3896c_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1a9a3896c_group_eq(_1a9a3896c_group *_self_, _1a9a3896c_group _other_);

struct _1b1bd7cac_group {
	jule::Array<jule::Ptr<_1ab08c9a3_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1a9a36629__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1a9a3896c_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
};struct _1b1bd5b78__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b1bd7cac_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
};
struct _1a9a42da5_mapIterator {
	jule::Ptr<_1a9a36629__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1a9a3896c_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
};struct _1b1be0259_mapIterator {
	jule::Ptr<_1b1bd5b78__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b1bd7cac_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
};
struct _1a387dcd5_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _1a87a3d8c_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _1a87a3d8c_foldPair_eq(_1a87a3d8c_foldPair *_self_, _1a87a3d8c_foldPair _other_);


struct _1a87a4387_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _1a87a4387_CaseRange_eq(_1a87a4387_CaseRange *_self_, _1a87a4387_CaseRange _other_);


struct _1a87a483d_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _1a87a483d_Range16_eq(_1a87a483d_Range16 *_self_, _1a87a483d_Range16 _other_);


struct _1a87a4d6b_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _1a87a4d6b_Range32_eq(_1a87a4d6b_Range32 *_self_, _1a87a4d6b_Range32 _other_);


struct _1a87a52de_RangeTable {
	jule::Slice<_1a87a483d_Range16> _field_R16;
	jule::Slice<_1a87a4d6b_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
};
struct _1a87b3671_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
};
struct _1a68cec56_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1a68cec56_File_eq(_1a68cec56_File *_self_, _1a68cec56_File _other_);


struct _1a696ca5d_cmdAttrs {
	jule::I64 _field_pid;
};
inline jule::Bool _1a696ca5d_cmdAttrs_eq(_1a696ca5d_cmdAttrs *_self_, _1a696ca5d_cmdAttrs _other_);


struct _1a696ebc5_Stat {
	jule::I64 _field_mode;
	jule::U64 _field_size;
};
inline jule::Bool _1a696ebc5_Stat_eq(_1a696ebc5_Stat *_self_, _1a696ebc5_Stat _other_);


struct _1a388d1ac_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1a388d1ac_Log_eq(_1a388d1ac_Log *_self_, _1a388d1ac_Log _other_);


struct _1a940502b_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
};
inline jule::Bool _1a940502b_floatInfo_eq(_1a940502b_floatInfo *_self_, _1a940502b_floatInfo _other_);


struct _1a9405b75_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
};
struct _1a9417bed_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1a9417bed_leftCheat_eq(_1a9417bed_leftCheat *_self_, _1a9417bed_leftCheat _other_);


struct _1a9418715_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1a9418715_decimal_eq(_1a9418715_decimal *_self_, _1a9418715_decimal _other_);


struct _1a87e67c5_AnsiEscape {
};
inline jule::Bool _1a87e67c5_AnsiEscape_eq(_1a87e67c5_AnsiEscape *_self_, _1a87e67c5_AnsiEscape _other_);


struct _1a941dc48_Logger {
};
inline jule::Bool _1a941dc48_Logger_eq(_1a941dc48_Logger *_self_, _1a941dc48_Logger _other_);


struct _1ab6a54d8_Token {
	jule::Ptr<_1ab6aadb2_Fileset> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
};
inline jule::Bool _1ab6a54d8_Token_eq(_1ab6a54d8_Token *_self_, _1ab6a54d8_Token _other_);


struct _1ab6aadb2_Fileset {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_Tokens;
};
struct _1ab6acee6_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
};
inline jule::Bool _1ab6acee6_kindPair_eq(_1ab6acee6_kindPair *_self_, _1ab6acee6_kindPair _other_);


struct _1ab6b3e86_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_tokens;
	jule::Ptr<_1ab6aadb2_Fileset> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_1a388d1ac_Log> _field_errors;
};
struct _1ab6bd9b8_AST {
	jule::Ptr<_1ab6aadb2_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a3799a14_UseDecl>> _field_UseDecls;
	jule::Slice<_1ab6be876_Node> _field_Nodes;
};
struct _1ab6be876_Node {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1ab6be876_Node_eq(_1ab6be876_Node *_self_, _1ab6be876_Node _other_);


struct _1ab6bec94_Directive {
	jule::Ptr<_1ab6a54d8_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_Args;
};
struct _1ab6c0877_TypeDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1ab6c0877_TypeDecl_eq(_1ab6c0877_TypeDecl *_self_, _1ab6c0877_TypeDecl _other_);


struct _1ab6c0e82_IdentTypeDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _field_Generics;
};
struct _1ab6c124b_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>> _field_Idents;
};
struct _1ab6c1625_NamespaceTypeDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Namespace;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
};
inline jule::Bool _1ab6c1625_NamespaceTypeDecl_eq(_1ab6c1625_NamespaceTypeDecl *_self_, _1ab6c1625_NamespaceTypeDecl _other_);


struct _1ab6c1922_SptrTypeDecl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Elem;
};
inline jule::Bool _1ab6c1922_SptrTypeDecl_eq(_1ab6c1922_SptrTypeDecl *_self_, _1ab6c1922_SptrTypeDecl _other_);


struct _1ab6c1ca7_SlcTypeDecl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Elem;
};
inline jule::Bool _1ab6c1ca7_SlcTypeDecl_eq(_1ab6c1ca7_SlcTypeDecl *_self_, _1ab6c1ca7_SlcTypeDecl _other_);


struct _1ab6c20a4_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _field_Types;
};
struct _1ab6c23a1_PtrTypeDecl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Elem;
};
inline jule::Bool _1ab6c23a1_PtrTypeDecl_eq(_1ab6c23a1_PtrTypeDecl *_self_, _1ab6c23a1_PtrTypeDecl _other_);


struct _1ab6c2b43_ArrTypeDecl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Elem;
	jule::Ptr<_1ab6c4bab_Expr> _field_Size;
};
inline jule::Bool _1ab6c2b43_ArrTypeDecl_eq(_1ab6c2b43_ArrTypeDecl *_self_, _1ab6c2b43_ArrTypeDecl _other_);


struct _1ab6c3391_MapTypeDecl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Key;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Val;
};
inline jule::Bool _1ab6c3391_MapTypeDecl_eq(_1ab6c3391_MapTypeDecl *_self_, _1ab6c3391_MapTypeDecl _other_);


struct _1ab6c376a_RetTypeDecl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_Idents;
};
struct _1ab6c4bab_Expr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1ab6c4bab_Expr_eq(_1ab6c4bab_Expr *_self_, _1ab6c4bab_Expr _other_);


struct _1ab6c4e75_RangeExpr {
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1ab6c4e75_RangeExpr_eq(_1ab6c4e75_RangeExpr *_self_, _1ab6c4e75_RangeExpr _other_);


struct _1ab6c5580_UseExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1ab6c5580_UseExpr_eq(_1ab6c5580_UseExpr *_self_, _1ab6c5580_UseExpr _other_);


struct _1ab6c57a0_TupleExpr {
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_Expr;
};
struct _1ab6c5b46_LitExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1ab6c5b46_LitExpr_eq(_1ab6c5b46_LitExpr *_self_, _1ab6c5b46_LitExpr _other_);


struct _1ab6c6020_UnsafeExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1ab6c6020_UnsafeExpr_eq(_1ab6c6020_UnsafeExpr *_self_, _1ab6c6020_UnsafeExpr _other_);


struct _1ab6c64c6_IdentExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1ab6c64c6_IdentExpr_eq(_1ab6c64c6_IdentExpr *_self_, _1ab6c64c6_IdentExpr _other_);


struct _1ab6c6c68_UnaryExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Op;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1ab6c6c68_UnaryExpr_eq(_1ab6c6c68_UnaryExpr *_self_, _1ab6c6c68_UnaryExpr _other_);


struct _1ab6c7142_VariadicExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1ab6c7142_VariadicExpr_eq(_1ab6c7142_VariadicExpr *_self_, _1ab6c7142_VariadicExpr _other_);


struct _1a3788481_CastExpr {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1a3788481_CastExpr_eq(_1a3788481_CastExpr *_self_, _1a3788481_CastExpr _other_);


struct _1a378885a_NamespaceExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Namespace;
	jule::Ptr<_1ab6a54d8_Token> _field_Ident;
};
inline jule::Bool _1a378885a_NamespaceExpr_eq(_1a378885a_NamespaceExpr *_self_, _1a378885a_NamespaceExpr _other_);


struct _1a3788c34_SubIdentExpr {
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Ptr<_1ab6a54d8_Token> _field_Ident;
};
inline jule::Bool _1a3788c34_SubIdentExpr_eq(_1a3788c34_SubIdentExpr *_self_, _1a3788c34_SubIdentExpr _other_);


struct _1a37891da_BinaryExpr {
	jule::Ptr<_1ab6c4bab_Expr> _field_Left;
	jule::Ptr<_1ab6c4bab_Expr> _field_Right;
	jule::Ptr<_1ab6a54d8_Token> _field_Op;
};
inline jule::Bool _1a37891da_BinaryExpr_eq(_1a37891da_BinaryExpr *_self_, _1a37891da_BinaryExpr _other_);


struct _1a378984a_FnCallExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_Args;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1a378a340_FieldExprPair {
	jule::Ptr<_1ab6a54d8_Token> _field_Field;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1a378a340_FieldExprPair_eq(_1a378a340_FieldExprPair *_self_, _1a378a340_FieldExprPair _other_);


struct _1a378ab6a_StructLit {
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_Exprs;
};
struct _1a378b121_BraceLit {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_Exprs;
};
struct _1a378b94b_KeyValPair {
	jule::Ptr<_1ab6c4bab_Expr> _field_Key;
	jule::Ptr<_1ab6c4bab_Expr> _field_Val;
	jule::Ptr<_1ab6a54d8_Token> _field_Colon;
};
inline jule::Bool _1a378b94b_KeyValPair_eq(_1a378b94b_KeyValPair *_self_, _1a378b94b_KeyValPair _other_);


struct _1a378c386_SliceExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_Exprs;
};
struct _1a378cdae_IndexingExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Ptr<_1ab6c4bab_Expr> _field_Index;
};
inline jule::Bool _1a378cdae_IndexingExpr_eq(_1a378cdae_IndexingExpr *_self_, _1a378cdae_IndexingExpr _other_);


struct _1a378d51e_SlicingExpr {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Ptr<_1ab6c4bab_Expr> _field_Start;
	jule::Ptr<_1ab6c4bab_Expr> _field_To;
};
inline jule::Bool _1a378d51e_SlicingExpr_eq(_1a378d51e_SlicingExpr *_self_, _1a378d51e_SlicingExpr _other_);


struct _1a378d81b_Constraint {
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _field_Mask;
};
struct _1a378dcc2_GenericDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a378d81b_Constraint> _field_Constraint;
};
inline jule::Bool _1a378dcc2_GenericDecl_eq(_1a378dcc2_GenericDecl *_self_, _1a378dcc2_GenericDecl _other_);


struct _1a378e19b_LabelSt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1a378e19b_LabelSt_eq(_1a378e19b_LabelSt *_self_, _1a378e19b_LabelSt _other_);


struct _1a378e575_GotoSt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_Label;
};
inline jule::Bool _1a378e575_GotoSt_eq(_1a378e575_GotoSt *_self_, _1a378e575_GotoSt _other_);


struct _1a378e872_FallSt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
};
inline jule::Bool _1a378e872_FallSt_eq(_1a378e872_FallSt *_self_, _1a378e872_FallSt _other_);


struct _1a378eed2_AssignLeft {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1a378eed2_AssignLeft_eq(_1a378eed2_AssignLeft *_self_, _1a378eed2_AssignLeft _other_);


struct _1a3790565_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1ab6a54d8_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>> _field_Left;
	jule::Ptr<_1ab6c4bab_Expr> _field_Right;
};
struct _1a3791555_Stmt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1a3791555_Stmt_eq(_1a3791555_Stmt *_self_, _1a3791555_Stmt _other_);


struct _1a3791bb5_ScopeTree {
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1a3791555_Stmt> _field_Stmts;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
};
struct _1a3792402_ParamDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1a3792402_ParamDecl_eq(_1a3792402_ParamDecl *_self_, _1a3792402_ParamDecl _other_);


struct _1a3793854_FnDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_Directives;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab6c376a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a3792402_ParamDecl>> _field_Params;
};
struct _1a3794a0e_VarDecl {
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_Directives;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
struct _1a3794dd8_RetSt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1a3794dd8_RetSt_eq(_1a3794dd8_RetSt *_self_, _1a3794dd8_RetSt _other_);


struct _1a3795658_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
};
inline jule::Bool _1a3795658_Iter_eq(_1a3795658_Iter *_self_, _1a3795658_Iter _other_);


struct _1a3795e83_WhileKind {
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1ab6a54d8_Token> _field_NextToken;
};
inline jule::Bool _1a3795e83_WhileKind_eq(_1a3795e83_WhileKind *_self_, _1a3795e83_WhileKind _other_);


struct _1a379688a_RangeKind {
	jule::Ptr<_1ab6a54d8_Token> _field_InToken;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Ptr<_1a3794a0e_VarDecl> _field_KeyA;
	jule::Ptr<_1a3794a0e_VarDecl> _field_KeyB;
};
inline jule::Bool _1a379688a_RangeKind_eq(_1a379688a_RangeKind *_self_, _1a379688a_RangeKind _other_);


struct _1a3796c64_BreakSt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_Label;
};
inline jule::Bool _1a3796c64_BreakSt_eq(_1a3796c64_BreakSt *_self_, _1a3796c64_BreakSt _other_);


struct _1a379713d_ContSt {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_Label;
};
inline jule::Bool _1a379713d_ContSt_eq(_1a379713d_ContSt *_self_, _1a379713d_ContSt _other_);


struct _1a37975e4_If {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
};
inline jule::Bool _1a37975e4_If_eq(_1a37975e4_If *_self_, _1a37975e4_If _other_);


struct _1a37979bd_Else {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
};
inline jule::Bool _1a37979bd_Else_eq(_1a37979bd_Else *_self_, _1a37979bd_Else _other_);


struct _1a3797e74_Conditional {
	jule::Ptr<_1a37975e4_If> _field_Head;
	jule::Slice<jule::Ptr<_1a37975e4_If>> _field_Tail;
	jule::Ptr<_1a37979bd_Else> _field_Default;
};
struct _1a37986b1_TypeAliasDecl {
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
};
inline jule::Bool _1a37986b1_TypeAliasDecl_eq(_1a37986b1_TypeAliasDecl *_self_, _1a37986b1_TypeAliasDecl _other_);


struct _1a3798b67_Case {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_Exprs;
};
struct _1a3799481_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a3798b67_Case>> _field_Cases;
	jule::Ptr<_1a37979bd_Else> _field_Default;
};
struct _1a3799a14_UseDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_Path;
	jule::Ptr<_1ab6a54d8_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a3799a14_UseDecl_eq(_1a3799a14_UseDecl *_self_, _1a3799a14_UseDecl _other_);


struct _1a3799eba_EnumItemDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
};
inline jule::Bool _1a3799eba_EnumItemDecl_eq(_1a3799eba_EnumItemDecl *_self_, _1a3799eba_EnumItemDecl _other_);


struct _1a379aa7b_EnumDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
};
struct _1a379b3a6_TypeEnumItemDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
};
inline jule::Bool _1a379b3a6_TypeEnumItemDecl_eq(_1a379b3a6_TypeEnumItemDecl *_self_, _1a379b3a6_TypeEnumItemDecl _other_);


struct _1a379ba16_TypeEnumDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
};
struct _1a379bcd0_FieldDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Kind;
	jule::Ptr<_1ab6c4bab_Expr> _field_Default;
};
inline jule::Bool _1a379bcd0_FieldDecl_eq(_1a379bcd0_FieldDecl *_self_, _1a379bcd0_FieldDecl _other_);


struct _1a379c6c6_StructDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _field_Generics;
};
struct _1a379ce13_TraitDecl {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a3793854_FnDecl>> _field_Methods;
};
struct _1a379d573_Impl {
	jule::Ptr<_1ab6a54d8_Token> _field_End;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Base;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a3793854_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _field_Statics;
};
inline jule::Bool _1ab076805_Eq(_1ab070c61_Const* _self_, _1ab070c61_Const _25814_x);
inline jule::Bool _1ab076b46_Lt(_1ab070c61_Const* _self_, _1ab070c61_Const _28514_x);
inline jule::Bool _1ab076e87_LtEq(_1ab070c61_Const* _self_, _1ab070c61_Const _30816_x);
inline jule::Bool _1ab0772c8_Gt(_1ab070c61_Const* _self_, _1ab070c61_Const _33114_x);
inline jule::Bool _1ab077619_GtEq(_1ab070c61_Const* _self_, _1ab070c61_Const _35416_x);
struct _1ab070c61_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
struct _1a379e651_Field {
	jule::Ptr<_1a37a2577_Struct> _field_Owner;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
	jule::Ptr<_1ab6c4bab_Expr> _field_Default;
};
inline jule::Bool _1a379e651_Field_eq(_1a379e651_Field *_self_, _1a379e651_Field _other_);


struct _1a37a1664_Operators {
	jule::Ptr<_1ab08c9a3_FnIns> _field_Eq;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Gt;
	jule::Ptr<_1ab08c9a3_FnIns> _field_GtEq;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Lt;
	jule::Ptr<_1ab08c9a3_FnIns> _field_LtEq;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Shl;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Shr;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Add;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Sub;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Div;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Mul;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Mod;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitAnd;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitOr;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitXor;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Neg;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Pos;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitNot;
	jule::Ptr<_1ab08c9a3_FnIns> _field_AddAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_SubAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_DivAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_MulAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_ModAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_ShlAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_ShrAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ab08c9a3_FnIns> _field_BitXorAssign;
};
inline jule::Bool _1a37a1664_Operators_eq(_1a37a1664_Operators *_self_, _1a37a1664_Operators _other_);


struct _1a37a2577_Struct {
	jule::Ptr<_1ab883573_sema> _field_sema;
	jule::Slice<jule::Ptr<_1a37a2577_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a37a2577_Struct>> _field_Uses;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a379e651_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab095109_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a37a53d2_StructIns>> _field_Instances;
};
struct _1a37a4832_FieldIns {
	jule::Ptr<_1a37a53d2_StructIns> _field_Owner;
	jule::Ptr<_1a379e651_Field> _field_Decl;
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Ptr<_1ab906a8b_Data> _field_Default;
};
inline jule::Bool _1a37a4832_FieldIns_eq(_1a37a4832_FieldIns *_self_, _1a37a4832_FieldIns _other_);


struct _1a37a53d2_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1a37a2577_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a37a4832_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1ab854577_ReferenceStack> _field_Refers;
	_1a37a1664_Operators _field_Operators;
};
struct _1ab07c124_OperandExprModel {
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1ab07c124_OperandExprModel_eq(_1ab07c124_OperandExprModel *_self_, _1ab07c124_OperandExprModel _other_);


struct _1ab07c61e_BinaryExprModel {
	jule::Ptr<_1ab07c124_OperandExprModel> _field_Left;
	jule::Ptr<_1ab07c124_OperandExprModel> _field_Right;
	jule::Ptr<_1ab6a54d8_Token> _field_Op;
};
inline jule::Bool _1ab07c61e_BinaryExprModel_eq(_1ab07c61e_BinaryExprModel *_self_, _1ab07c61e_BinaryExprModel _other_);


struct _1ab07c9e8_UnaryExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Ptr<_1ab6a54d8_Token> _field_Op;
};
inline jule::Bool _1ab07c9e8_UnaryExprModel_eq(_1ab07c9e8_UnaryExprModel *_self_, _1ab07c9e8_UnaryExprModel _other_);


struct _1ab07d026_StructArgExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1a37a4832_FieldIns> _field_Field;
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
};
inline jule::Bool _1ab07d026_StructArgExprModel_eq(_1ab07d026_StructArgExprModel *_self_, _1ab07d026_StructArgExprModel _other_);


struct _1ab07d3bc_StructLitExprModel {
	jule::Ptr<_1a37a53d2_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ab07d026_StructArgExprModel>> _field_Args;
};
struct _1ab07d6b9_AllocStructLitExprModel {
	jule::Ptr<_1ab07d3bc_StructLitExprModel> _field_Lit;
};
inline jule::Bool _1ab07d6b9_AllocStructLitExprModel_eq(_1ab07d6b9_AllocStructLitExprModel *_self_, _1ab07d6b9_AllocStructLitExprModel _other_);


struct _1ab07dc4c_CastingExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Ptr<_1ab939816_Type> _field_ExprType;
};
inline jule::Bool _1ab07dc4c_CastingExprModel_eq(_1ab07dc4c_CastingExprModel *_self_, _1ab07dc4c_CastingExprModel _other_);


struct _1ab07e5ee_FnCallExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ab835bc9_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1ab07e9c8_SliceExprModel {
	jule::Ptr<_1ab939816_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1ab07ee7e_IndexingExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Ptr<_1ab906a8b_Data> _field_Index;
};
inline jule::Bool _1ab07ee7e_IndexingExprModel_eq(_1ab07ee7e_IndexingExprModel *_self_, _1ab07ee7e_IndexingExprModel _other_);


struct _1ab080435_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Captured;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1ab08080e_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1ab08080e_KeyValPairExprModel_eq(_1ab08080e_KeyValPairExprModel *_self_, _1ab08080e_KeyValPairExprModel _other_);


struct _1ab080bd8_MapExprModel {
	jule::Ptr<_1ab9485c2_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1ab08080e_KeyValPairExprModel>> _field_Entries;
};
struct _1ab08126b_SlicingExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1ab08126b_SlicingExprModel_eq(_1ab08126b_SlicingExprModel *_self_, _1ab08126b_SlicingExprModel _other_);


struct _1ab0817ee_TraitSubIdentExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1ab0898e5_Fn> _field_Method;
	jule::Ptr<_1ab095109_Trait> _field_Trt;
};
inline jule::Bool _1ab0817ee_TraitSubIdentExprModel_eq(_1ab0817ee_TraitSubIdentExprModel *_self_, _1ab0817ee_TraitSubIdentExprModel _other_);


struct _1ab082190_StructSubIdentExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Method;
	jule::Ptr<_1a37a4832_FieldIns> _field_Field;
	jule::Ptr<_1a37a53d2_StructIns> _field_Owner;
};
inline jule::Bool _1ab082190_StructSubIdentExprModel_eq(_1ab082190_StructSubIdentExprModel *_self_, _1ab082190_StructSubIdentExprModel _other_);


struct _1ab082536_StructStaticIdentExprModel {
	jule::Ptr<_1a37a53d2_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1ab08c9a3_FnIns> _field_Method;
};
inline jule::Bool _1ab082536_StructStaticIdentExprModel_eq(_1ab082536_StructStaticIdentExprModel *_self_, _1ab082536_StructStaticIdentExprModel _other_);


struct _1ab082910_ArrayExprModel {
	jule::Ptr<_1ab94924e_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1ab082c0c_TupleExprModel {
	jule::Slice<jule::Ptr<_1ab906a8b_Data>> _field_Datas;
};
struct _1ab083009_BuiltinPrintCallExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
};
inline jule::Bool _1ab083009_BuiltinPrintCallExprModel_eq(_1ab083009_BuiltinPrintCallExprModel *_self_, _1ab083009_BuiltinPrintCallExprModel _other_);


struct _1ab083306_BuiltinPrintlnCallExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
};
inline jule::Bool _1ab083306_BuiltinPrintlnCallExprModel_eq(_1ab083306_BuiltinPrintlnCallExprModel *_self_, _1ab083306_BuiltinPrintlnCallExprModel _other_);


struct _1ab0836d0_BuiltinNewCallExprModel {
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1ab0836d0_BuiltinNewCallExprModel_eq(_1ab0836d0_BuiltinNewCallExprModel *_self_, _1ab0836d0_BuiltinNewCallExprModel _other_);


struct _1ab083aa9_BuiltinPanicCallExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1ab083aa9_BuiltinPanicCallExprModel_eq(_1ab083aa9_BuiltinPanicCallExprModel *_self_, _1ab083aa9_BuiltinPanicCallExprModel _other_);


struct _1ab084060_BuiltinMakeCallExprModel {
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1ab084060_BuiltinMakeCallExprModel_eq(_1ab084060_BuiltinMakeCallExprModel *_self_, _1ab084060_BuiltinMakeCallExprModel _other_);


struct _1ab084439_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1ab084439_BuiltinAppendCallExprModel_eq(_1ab084439_BuiltinAppendCallExprModel *_self_, _1ab084439_BuiltinAppendCallExprModel _other_);


struct _1ab084736_BuiltinLenCallExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
};
inline jule::Bool _1ab084736_BuiltinLenCallExprModel_eq(_1ab084736_BuiltinLenCallExprModel *_self_, _1ab084736_BuiltinLenCallExprModel _other_);


struct _1ab084a33_BuiltinCapCallExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
};
inline jule::Bool _1ab084a33_BuiltinCapCallExprModel_eq(_1ab084a33_BuiltinCapCallExprModel *_self_, _1ab084a33_BuiltinCapCallExprModel _other_);


struct _1ab084e0c_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Dest;
	jule::Ptr<_1ab906a8b_Data> _field_Key;
};
inline jule::Bool _1ab084e0c_BuiltinDeleteCallExprModel_eq(_1ab084e0c_BuiltinDeleteCallExprModel *_self_, _1ab084e0c_BuiltinDeleteCallExprModel _other_);


struct _1ab0852d6_BuiltinCopyCallExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Dest;
	jule::Ptr<_1ab906a8b_Data> _field_Src;
};
inline jule::Bool _1ab0852d6_BuiltinCopyCallExprModel_eq(_1ab0852d6_BuiltinCopyCallExprModel *_self_, _1ab0852d6_BuiltinCopyCallExprModel _other_);


struct _1ab0856b0_BuiltinErrorCallExprModel {
	jule::Ptr<_1ab08c9a3_FnIns> _field_Func;
	jule::Ptr<_1ab906a8b_Data> _field_Err;
};
inline jule::Bool _1ab0856b0_BuiltinErrorCallExprModel_eq(_1ab0856b0_BuiltinErrorCallExprModel *_self_, _1ab0856b0_BuiltinErrorCallExprModel _other_);


struct _1ab0859ac_SizeofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1ab0859ac_SizeofExprModel_eq(_1ab0859ac_SizeofExprModel *_self_, _1ab0859ac_SizeofExprModel _other_);


struct _1ab086161_AlignofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1ab086161_AlignofExprModel_eq(_1ab086161_AlignofExprModel *_self_, _1ab086161_AlignofExprModel _other_);


struct _1ab08634d_RuneExprModel {
	jule::I32 _field_Code;
};
inline jule::Bool _1ab08634d_RuneExprModel_eq(_1ab08634d_RuneExprModel *_self_, _1ab08634d_RuneExprModel _other_);


struct _1ab0866c2_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1ab0869be_FreeExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1ab0869be_FreeExprModel_eq(_1ab0869be_FreeExprModel *_self_, _1ab0869be_FreeExprModel _other_);


struct _1ab087849_RetType {
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_Idents;
};
struct _1ab087e21_Param {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1ab087e21_Param_eq(_1ab087e21_Param *_self_, _1ab087e21_Param _other_);


struct _1ab0898e5_Fn {
	jule::Ptr<_1ab883573_sema> _field_sema;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_Directives;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab087849_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ab087e21_Param>> _field_Params;
	jule::Ptr<_1a37a2577_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> _field_Instances;
};
struct _1ab08b84d_ParamIns {
	jule::Ptr<_1ab087e21_Param> _field_Decl;
	jule::Ptr<_1ab939816_Type> _field_Type;
};
inline jule::Bool _1ab08b84d_ParamIns_eq(_1ab08b84d_ParamIns *_self_, _1ab08b84d_ParamIns _other_);


struct _1ab08c9a3_FnIns {
	jule::Ptr<_1a37a53d2_StructIns> _field_Owner;
	jule::Ptr<_1ab0898e5_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _field_Params;
	jule::Ptr<_1ab939816_Type> _field_Result;
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::Ptr<_1ab854577_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1ab090be8_SymTab {
	jule::Ptr<_1ab6aadb2_Fileset> _field_File;
	jule::Slice<_1ab855a51_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a37a2577_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ab095109_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ab0977b0_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ab098eba_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ab8315ba_Impl>> _field_Impls;
};
struct _1ab095109_Trait {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1ab942027_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a37a2577_Struct>> _field_Implemented;
};
struct _1ab096c54_EnumItem {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab907c13_Value> _field_Value;
};
inline jule::Bool _1ab096c54_EnumItem_eq(_1ab096c54_EnumItem *_self_, _1ab096c54_EnumItem _other_);


struct _1ab0977b0_Enum {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _field_Items;
};
struct _1ab0988e3_TypeEnumItem {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
};
inline jule::Bool _1ab0988e3_TypeEnumItem_eq(_1ab0988e3_TypeEnumItem *_self_, _1ab0988e3_TypeEnumItem _other_);


struct _1ab098eba_TypeEnum {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> _field_Items;
};
struct _1ab119cc7_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1ab119cc7_comptimeRange_eq(_1ab119cc7_comptimeRange *_self_, _1ab119cc7_comptimeRange _other_);


struct _1ab11a833_comptimeStructField {
	jule::Ptr<_1a37a4832_FieldIns> _field_field;
};
inline jule::Bool _1ab11a833_comptimeStructField_eq(_1ab11a833_comptimeStructField *_self_, _1ab11a833_comptimeStructField _other_);


struct _1ab11c0c6_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a37a4832_FieldIns>> _field_fields;
};
struct _1ab11da56_comptimeStatic {
	jule::Ptr<_1ab8a7289_Var> _field_field;
};
inline jule::Bool _1ab11da56_comptimeStatic_eq(_1ab11da56_comptimeStatic *_self_, _1ab11da56_comptimeStatic _other_);


struct _1ab12030a_comptimeStatics {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_fields;
};
struct _1ab121c79_comptimeEnumField {
	jule::Ptr<_1ab096c54_EnumItem> _field_field;
};
inline jule::Bool _1ab121c79_comptimeEnumField_eq(_1ab121c79_comptimeEnumField *_self_, _1ab121c79_comptimeEnumField _other_);


struct _1ab123088_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _field_fields;
};
struct _1ab124a90_comptimeParam {
	jule::Ptr<_1ab08b84d_ParamIns> _field_param;
};
inline jule::Bool _1ab124a90_comptimeParam_eq(_1ab124a90_comptimeParam *_self_, _1ab124a90_comptimeParam _other_);


struct _1ab1268e9_comptimeParams {
	jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _field_params;
};
struct _1ab128258_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ab129bc7_comptimeTypeInfo>> _field_types;
};
struct _1ab129bc7_comptimeTypeInfo {
	jule::Ptr<_1ab939816_Type> _field_base;
};
inline jule::Bool _1ab129bc7_comptimeTypeInfo_eq(_1ab129bc7_comptimeTypeInfo *_self_, _1ab129bc7_comptimeTypeInfo _other_);


struct _1ab130ccc_comptimeValue {
	jule::Ptr<_1ab906a8b_Data> _field_data;
};
inline jule::Bool _1ab130ccc_comptimeValue_eq(_1ab130ccc_comptimeValue *_self_, _1ab130ccc_comptimeValue _other_);


struct _1ab133a38_comptimeFiles {
	jule::Slice<jule::Ptr<_1ab090be8_SymTab>> _field_files;
};
struct _1ab1354a7_comptimeFile {
	jule::Ptr<_1ab090be8_SymTab> _field_file;
};
inline jule::Bool _1ab1354a7_comptimeFile_eq(_1ab1354a7_comptimeFile *_self_, _1ab1354a7_comptimeFile _other_);


struct _1ab1370d0_comptimeDecls {
	jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>> _field_decls;
};
struct _1ab1393bd_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1ab1393bd_comptimeDecl_eq(_1ab1393bd_comptimeDecl *_self_, _1ab1393bd_comptimeDecl _other_);


struct _1ab82e2bb_constraintChecker {
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ab08c9a3_FnIns> _field_fi;
	jule::Ptr<_1a37a53d2_StructIns> _field_si;
	jule::Ptr<_1ab6a54d8_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1ab8315ba_Impl {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Base;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Statics;
};
struct _1ab835bc9_Scope {
	jule::Ptr<_1ab835bc9_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
};
struct _1ab8360e7_If {
	jule::Any _field_Expr;
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
};
inline jule::Bool _1ab8360e7_If_eq(_1ab8360e7_If *_self_, _1ab8360e7_If _other_);


struct _1ab8363e4_Else {
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
};
inline jule::Bool _1ab8363e4_Else_eq(_1ab8363e4_Else *_self_, _1ab8363e4_Else _other_);


struct _1ab836812_Conditional {
	jule::Slice<jule::Ptr<_1ab8360e7_If>> _field_Elifs;
	jule::Ptr<_1ab8363e4_Else> _field_Default;
};
struct _1ab836b0e_InfIter {
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
};
inline jule::Bool _1ab836b0e_InfIter_eq(_1ab836b0e_InfIter *_self_, _1ab836b0e_InfIter _other_);


struct _1ab8370b5_WhileIter {
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1ab8370b5_WhileIter_eq(_1ab8370b5_WhileIter *_self_, _1ab8370b5_WhileIter _other_);


struct _1ab837a11_RangeIter {
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Ptr<_1ab8a7289_Var> _field_KeyA;
	jule::Ptr<_1ab8a7289_Var> _field_KeyB;
};
inline jule::Bool _1ab837a11_RangeIter_eq(_1ab837a11_RangeIter *_self_, _1ab837a11_RangeIter _other_);


struct _1ab837d96_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1ab837d96_ContSt_eq(_1ab837d96_ContSt *_self_, _1ab837d96_ContSt _other_);


struct _1ab838270_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1ab838270_BreakSt_eq(_1ab838270_BreakSt *_self_, _1ab838270_BreakSt _other_);


struct _1ab838726_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::I64 _field_Index;
};
inline jule::Bool _1ab838726_Label_eq(_1ab838726_Label *_self_, _1ab838726_Label _other_);


struct _1ab838d86_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Ptr<_1ab838726_Label> _field_Label;
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::I64 _field_Index;
};
inline jule::Bool _1ab838d86_GotoSt_eq(_1ab838d86_GotoSt *_self_, _1ab838d86_GotoSt _other_);


struct _1ab839260_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1ab839260_Postfix_eq(_1ab839260_Postfix *_self_, _1ab839260_Postfix _other_);


struct _1ab839716_Assign {
	jule::Ptr<_1ab07c124_OperandExprModel> _field_Left;
	jule::Ptr<_1ab07c124_OperandExprModel> _field_Right;
	jule::Ptr<_1ab6a54d8_Token> _field_Op;
};
inline jule::Bool _1ab839716_Assign_eq(_1ab839716_Assign *_self_, _1ab839716_Assign _other_);


struct _1ab839bbc_MultiAssign {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1ab906a8b_Data>> _field_Left;
	jule::Any _field_Right;
};
struct _1ab83a409_Match {
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1ab83ae32_Case>> _field_Cases;
	jule::Ptr<_1ab83ae32_Case> _field_Default;
};
struct _1ab83ae32_Case {
	jule::Ptr<_1ab83a409_Match> _field_Owner;
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ab906a8b_Data>> _field_Exprs;
	jule::Ptr<_1ab83ae32_Case> _field_Next;
};
struct _1ab83b62a_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1ab83b62a_FallSt_eq(_1ab83b62a_FallSt *_self_, _1ab83b62a_FallSt _other_);


struct _1ab83b9c1_RetSt {
	jule::Ptr<_1ab08c9a3_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1ab83b9c1_RetSt_eq(_1ab83b9c1_RetSt *_self_, _1ab83b9c1_RetSt _other_);


struct _1ab83be77_scopeLabel {
	jule::Ptr<_1ab6a54d8_Token> _field_token;
	jule::Ptr<_1ab838726_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1ab83be77_scopeLabel_eq(_1ab83be77_scopeLabel *_self_, _1ab83be77_scopeLabel _other_);


struct _1ab83ce67_scopeChecker {
	jule::Ptr<_1ab6a54d8_Token> _field_calledFrom;
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Ptr<_1ab08c9a3_FnIns> _field_owner;
	jule::Ptr<_1ab83ce67_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1ab090be8_SymTab> _field_table;
	jule::Ptr<_1ab835bc9_Scope> _field_scope;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_tree;
	jule::Ptr<_1ab08c9a3_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab8a7289_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab83be77_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
};
inline jule::Bool _1ab83ce67_scopeChecker_eq(_1ab83ce67_scopeChecker *_self_, _1ab83ce67_scopeChecker _other_);


struct _1ab851ce4_directiveChecker {
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab6bec94_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1ab851ce4_directiveChecker_eq(_1ab851ce4_directiveChecker *_self_, _1ab851ce4_directiveChecker _other_);


struct _1ab854577_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1ab855a51_Pass {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1ab855a51_Pass_eq(_1ab855a51_Pass *_self_, _1ab855a51_Pass _other_);


struct _1ab85a506_symBuilder {
	jule::Ptr<_1ab85a506_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1a388d1ac_Log> _field_errors;
	jule::Ptr<_1ab6bd9b8_AST> _field_ast;
	jule::Ptr<_1ab090be8_SymTab> _field_table;
};
struct _1ab866578_ImportInfo {
	jule::Ptr<_1a3799a14_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1ab868cea_Package> _field_Package;
	jule::I64 _field_ModId;
};
inline jule::Bool _1ab866578_ImportInfo_eq(_1ab866578_ImportInfo *_self_, _1ab866578_ImportInfo _other_);


struct _1ab868cea_Package {
	jule::Slice<jule::Ptr<_1ab090be8_SymTab>> _field_Files;
};
struct _1ab88294b_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ab129bc7_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1ab866578_ImportInfo> _field_runtime;
};
struct _1ab883573_sema {
	jule::Slice<_1a388d1ac_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ab090be8_SymTab>> _field_files;
	jule::Ptr<_1ab090be8_SymTab> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1ab88294b_commonSemaMeta> _field_meta;
};
struct _1ab8a37a2_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1ab8a7289_Var {
	jule::Ptr<_1ab835bc9_Scope> _field_Scope;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
	jule::Ptr<_1ab907c13_Value> _field_Value;
	jule::Ptr<_1ab854577_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Depends;
};
struct _1ab8a8114_FuncPattern {
};
struct _1ab8e30a5_typeCompatibilityChecker {
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Ptr<_1ab939816_Type> _field_dest;
	jule::Ptr<_1ab939816_Type> _field_src;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
};
inline jule::Bool _1ab8e30a5_typeCompatibilityChecker_eq(_1ab8e30a5_typeCompatibilityChecker *_self_, _1ab8e30a5_typeCompatibilityChecker _other_);


struct _1ab8e4e31_assignTypeChecker {
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Ptr<_1ab939816_Type> _field_dest;
	jule::Ptr<_1ab906a8b_Data> _field_d;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
	jule::Ptr<_1ab854577_ReferenceStack> _field_refers;
};
inline jule::Bool _1ab8e4e31_assignTypeChecker_eq(_1ab8e4e31_assignTypeChecker *_self_, _1ab8e4e31_assignTypeChecker _other_);


struct _1ab8e6806_dynamicTypeAnnotation {
	jule::Ptr<_1ab9087b3_eval> _field_e;
	jule::Ptr<_1ab08c9a3_FnIns> _field_f;
	jule::Ptr<_1ab08b84d_ParamIns> _field_p;
	jule::Ptr<_1ab906a8b_Data> _field_a;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
	jule::Ptr<_1ab939816_Type>* _field_k;
	jule::Ptr<_1ab6c0877_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_ignored;
};
struct _1ab8eb663_fnCallArgChecker {
	jule::Ptr<_1ab9087b3_eval> _field_e;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_args;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
	jule::Ptr<_1ab08c9a3_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_ignored;
};
struct _1ab8ee59a_structLitChecker {
	jule::Ptr<_1ab9087b3_eval> _field_e;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
	jule::Ptr<_1a37a53d2_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ab07d026_StructArgExprModel>> _field_args;
};
struct _1ab90137c_rangeChecker {
	jule::Ptr<_1ab83ce67_scopeChecker> _field_sc;
	jule::Ptr<_1a379688a_RangeKind> _field_rang;
	jule::Ptr<_1ab837a11_RangeIter> _field_Kind;
	jule::Ptr<_1ab906a8b_Data> _field_d;
};
inline jule::Bool _1ab90137c_rangeChecker_eq(_1ab90137c_rangeChecker *_self_, _1ab90137c_rangeChecker _other_);


struct _1ab903add_retTypeChecker {
	jule::Ptr<_1ab83ce67_scopeChecker> _field_sc;
	jule::Ptr<_1ab08c9a3_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_types;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _field_exprs;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
	jule::Any _field_model;
};
struct _1ab906a8b_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1ab070c61_Const> _field_Constant;
};
inline jule::Bool _1ab906a8b_Data_eq(_1ab906a8b_Data *_self_, _1ab906a8b_Data _other_);


struct _1ab907c13_Value {
	jule::Ptr<_1ab6c4bab_Expr> _field_Expr;
	jule::Ptr<_1ab906a8b_Data> _field_Data;
};
inline jule::Bool _1ab907c13_Value_eq(_1ab907c13_Value *_self_, _1ab907c13_Value _other_);


struct _1ab9087b3_eval {
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1ab939816_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1ab8a7289_Var> _field_owner;
	jule::Ptr<_1a37a4832_FieldIns> _field_field;
	jule::Bool _field_arg;
};
inline jule::Bool _1ab9087b3_eval_eq(_1ab9087b3_eval *_self_, _1ab9087b3_eval _other_);


struct _1ab927aac_unaryEval {
	jule::Ptr<_1ab9087b3_eval> _field_e;
	jule::Ptr<_1ab906a8b_Data> _field_d;
	jule::Ptr<_1ab6c6c68_UnaryExpr> _field_u;
};
inline jule::Bool _1ab927aac_unaryEval_eq(_1ab927aac_unaryEval *_self_, _1ab927aac_unaryEval _other_);


struct _1ab929a48_binaryEval {
	jule::Ptr<_1ab9087b3_eval> _field_e;
	jule::Ptr<_1ab906a8b_Data> _field_l;
	jule::Ptr<_1ab906a8b_Data> _field_r;
	jule::Ptr<_1ab6a54d8_Token> _field_op;
};
inline jule::Bool _1ab929a48_binaryEval_eq(_1ab929a48_binaryEval *_self_, _1ab929a48_binaryEval _other_);


struct _1ab937e30_InsGeneric {
	jule::Ptr<_1ab939816_Type> _field_Type;
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_Constraint;
};
struct _1ab938a24_TypeAlias {
	jule::Ptr<_1a3791bb5_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab942027_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _field_Generics;
};
struct _1ab939816_Type {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1ab939816_Type_eq(_1ab939816_Type *_self_, _1ab939816_Type _other_);


struct _1ab942027_TypeSym {
	jule::Ptr<_1ab6c0877_TypeDecl> _field_Decl;
	jule::Ptr<_1ab939816_Type> _field_Type;
};
inline jule::Bool _1ab942027_TypeSym_eq(_1ab942027_TypeSym *_self_, _1ab942027_TypeSym _other_);


struct _1ab94292e_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1ab94292e_Prim_eq(_1ab94292e_Prim *_self_, _1ab94292e_Prim _other_);


struct _1ab94645a_Sptr {
	jule::Ptr<_1ab939816_Type> _field_Elem;
};
inline jule::Bool _1ab94645a_Sptr_eq(_1ab94645a_Sptr *_self_, _1ab94645a_Sptr _other_);


struct _1ab946e2d_Slc {
	jule::Ptr<_1ab939816_Type> _field_Elem;
};
inline jule::Bool _1ab946e2d_Slc_eq(_1ab946e2d_Slc *_self_, _1ab946e2d_Slc _other_);


struct _1ab947a22_Tuple {
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_Types;
};
struct _1ab9485c2_Map {
	jule::Ptr<_1ab939816_Type> _field_Key;
	jule::Ptr<_1ab939816_Type> _field_Val;
};
inline jule::Bool _1ab9485c2_Map_eq(_1ab9485c2_Map *_self_, _1ab9485c2_Map _other_);


struct _1ab94924e_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1ab939816_Type> _field_Elem;
};
inline jule::Bool _1ab94924e_Arr_eq(_1ab94924e_Arr *_self_, _1ab94924e_Arr _other_);


struct _1ab949c22_Ptr {
	jule::Ptr<_1ab939816_Type> _field_Elem;
};
inline jule::Bool _1ab949c22_Ptr_eq(_1ab949c22_Ptr *_self_, _1ab949c22_Ptr _other_);


struct _1ab94ac23_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1ab94ac23_referencer_eq(_1ab94ac23_referencer *_self_, _1ab94ac23_referencer _other_);


struct _1ab94bc13_typeChecker {
	jule::Ptr<_1ab883573_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1ab94ac23_referencer> _field_referencer;
	jule::Ptr<_1ab854577_ReferenceStack> _field_refers;
	jule::Ptr<_1ab6a54d8_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ab939816_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1ab938a24_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1ab954cc6_identTypeLookup {
};
inline jule::Bool _1ab954cc6_identTypeLookup_eq(_1ab954cc6_identTypeLookup *_self_, _1ab954cc6_identTypeLookup _other_);


struct _1ab39bba2_FileInfo {
	jule::Ptr<_1ab6bd9b8_AST> _field_Ast;
	jule::Slice<_1a388d1ac_Log> _field_Errors;
};
struct _1ab39e49b_stmt {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1ab39ed3c_scopeParser {
	jule::Ptr<_1ab3bd047_parser> _field_p;
	jule::Ptr<_1a3791bb5_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _field_stmts;
	jule::I64 _field_pos;
};
struct _1ab3ac762_exprBuilder {
	jule::Ptr<_1ab3bd047_parser> _field_p;
};
inline jule::Bool _1ab3ac762_exprBuilder_eq(_1ab3ac762_exprBuilder *_self_, _1ab3ac762_exprBuilder _other_);


struct _1ab3b9d57_assignInfo {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_r;
	jule::Ptr<_1ab6a54d8_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1ab3bd047_parser {
	jule::Ptr<_1ab6bd9b8_AST> _field_ast;
	jule::Slice<jule::Ptr<_1ab6bec94_Directive>> _field_directives;
	jule::Slice<_1a388d1ac_Log> _field_errors;
	jule::Ptr<_1ab3ac762_exprBuilder> _field_ep;
};
struct _1ab3ce201_typeBuilder {
	jule::Ptr<_1ab3bd047_parser> _field_p;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
};
struct _1aba618d8_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1aba618d8_CompileInfo_eq(_1aba618d8_CompileInfo *_self_, _1aba618d8_CompileInfo _other_);


struct _1aba62ca2_directiveEval {
	jule::Slice<_1a388d1ac_Log> _field_logs;
	jule::Ptr<_1ab6bec94_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1ab3d3447_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1ab3d977d_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1ab3e15a9_MetaStrBuilder {
	jule::Ptr<_1ab08c9a3_FnIns> _field_Write;
	jule::Ptr<_1ab08c9a3_FnIns> _field_WriteByte;
	jule::Ptr<_1ab08c9a3_FnIns> _field_WriteRune;
	jule::Ptr<_1ab08c9a3_FnIns> _field_WriteStr;
};
inline jule::Bool _1ab3e15a9_MetaStrBuilder_eq(_1ab3e15a9_MetaStrBuilder *_self_, _1ab3e15a9_MetaStrBuilder _other_);


struct _1ab3e19c7_Meta {
	jule::Ptr<_1ab3e15a9_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1ab0898e5_Fn> _field_EntryPoint;
};
inline jule::Bool _1ab3e19c7_Meta_eq(_1ab3e19c7_Meta *_self_, _1ab3e19c7_Meta _other_);


struct _1ab3e29ea_OrderedDefines {
	jule::Slice<jule::Ptr<_1a37a2577_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_Globals;
};
struct _1ad1cca25_specialCaseDefines {
	jule::Ptr<_1a37a2577_Struct> _field_runtime_Map;
	jule::Ptr<_1a37a2577_Struct> _field_runtime_mapIterator;
};
inline jule::Bool _1ad1cca25_specialCaseDefines_eq(_1ad1cca25_specialCaseDefines *_self_, _1ad1cca25_specialCaseDefines _other_);


struct _1ad1cd33e_liveTable {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a37a53d2_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ab095109_Trait>> _field_traits;
};
struct _1ad1cd7e5_ObjectDeadCode {
	_1ad1cd33e_liveTable _field_live;
	jule::Ptr<_1ab3d5ec7_IR> _field_ir;
	_1ad1cca25_specialCaseDefines _field_scd;
};
struct _1ad1d2860_scopeDeadCode {
	jule::Ptr<_1ad1d2860_scopeDeadCode> _field_parent;
	jule::Ptr<_1ab835bc9_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab838726_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1ad1d2860_scopeDeadCode_eq(_1ad1d2860_scopeDeadCode *_self_, _1ad1d2860_scopeDeadCode _other_);


struct _1ad1d6de7_exprDeadCode {
	jule::Ptr<_1ad1d2860_scopeDeadCode> _field_s;
};
inline jule::Bool _1ad1d6de7_exprDeadCode_eq(_1ad1d6de7_exprDeadCode *_self_, _1ad1d6de7_exprDeadCode _other_);


struct _1ad12156d_ExceptionalForwardingExprModel {
	jule::Ptr<_1ab07e5ee_FnCallExprModel> _field_Expr;
};
inline jule::Bool _1ad12156d_ExceptionalForwardingExprModel_eq(_1ad12156d_ExceptionalForwardingExprModel *_self_, _1ad12156d_ExceptionalForwardingExprModel _other_);


struct _1ad12175a_FnCallIgnoreExceptionalExprModel {
	jule::Ptr<_1ab07e5ee_FnCallExprModel> _field_Base;
};
inline jule::Bool _1ad12175a_FnCallIgnoreExceptionalExprModel_eq(_1ad12175a_FnCallIgnoreExceptionalExprModel *_self_, _1ad12175a_FnCallIgnoreExceptionalExprModel _other_);


struct _1ad121b01_SwapExprModel {
	jule::Ptr<_1ab906a8b_Data> _field_Left;
	jule::Ptr<_1ab906a8b_Data> _field_Right;
};
inline jule::Bool _1ad121b01_SwapExprModel_eq(_1ad121b01_SwapExprModel *_self_, _1ad121b01_SwapExprModel _other_);


struct _1ad12201e_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1ad12201e_EmptyCompareExprModel_eq(_1ad12201e_EmptyCompareExprModel *_self_, _1ad12201e_EmptyCompareExprModel _other_);


struct _1ad12231b_RefExprModel {
	jule::Ptr<_1ab8a7289_Var> _field_Var;
};
inline jule::Bool _1ad12231b_RefExprModel_eq(_1ad12231b_RefExprModel *_self_, _1ad12231b_RefExprModel _other_);


struct _1ad1227c2_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1ab070c61_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1ad1227c2_StrCompExprModel_eq(_1ad1227c2_StrCompExprModel *_self_, _1ad1227c2_StrCompExprModel _other_);


struct _1ad122d55_MutSlicingExprModel {
	jule::Ptr<_1ab6a54d8_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1ad122d55_MutSlicingExprModel_eq(_1ad122d55_MutSlicingExprModel *_self_, _1ad122d55_MutSlicingExprModel _other_);


struct _1ad1231da_UnsafeBinaryExprModel {
	jule::Ptr<_1ab07c61e_BinaryExprModel> _field_Node;
};
inline jule::Bool _1ad1231da_UnsafeBinaryExprModel_eq(_1ad1231da_UnsafeBinaryExprModel *_self_, _1ad1231da_UnsafeBinaryExprModel _other_);


struct _1ad1234d7_UnsafeIndexingExprModel {
	jule::Ptr<_1ab07ee7e_IndexingExprModel> _field_Node;
};
inline jule::Bool _1ad1234d7_UnsafeIndexingExprModel_eq(_1ad1234d7_UnsafeIndexingExprModel *_self_, _1ad1234d7_UnsafeIndexingExprModel _other_);


struct _1ad1238b1_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1ab07e9c8_SliceExprModel> _field_Elems;
};
inline jule::Bool _1ad1238b1_PushToSliceExprModel_eq(_1ad1238b1_PushToSliceExprModel *_self_, _1ad1238b1_PushToSliceExprModel _other_);


struct _1ad123c8a_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1ad123c8a_AppendToSliceExprModel_eq(_1ad123c8a_AppendToSliceExprModel *_self_, _1ad123c8a_AppendToSliceExprModel _other_);


struct _1ad124164_StrRuneIter {
	jule::Ptr<_1ab906a8b_Data> _field_Expr;
	jule::Ptr<_1ab837a11_RangeIter> _field_Base;
};
inline jule::Bool _1ad124164_StrRuneIter_eq(_1ad124164_StrRuneIter *_self_, _1ad124164_StrRuneIter _other_);


struct _1ad124461_UnsafeDerefExprModel {
	jule::Ptr<_1ab07c9e8_UnaryExprModel> _field_Base;
};
inline jule::Bool _1ad124461_UnsafeDerefExprModel_eq(_1ad124461_UnsafeDerefExprModel *_self_, _1ad124461_UnsafeDerefExprModel _other_);


struct _1ad12475d_UnsafeCastingExprModel {
	jule::Ptr<_1ab07dc4c_CastingExprModel> _field_Base;
};
inline jule::Bool _1ad12475d_UnsafeCastingExprModel_eq(_1ad12475d_UnsafeCastingExprModel *_self_, _1ad12475d_UnsafeCastingExprModel _other_);


struct _1ad125385_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1ad125385_nilVar_eq(_1ad125385_nilVar *_self_, _1ad125385_nilVar _other_);


struct _1ad1256c6_nils {
	jule::Slice<_1ad125385_nilVar> _field_vars;
};
struct _1ad128344_scopeOptimizer {
	jule::Ptr<_1ad128344_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1ab835bc9_Scope> _field_scope;
	jule::Ptr<_1ad1383a9_data> _field_data;
};
inline jule::Bool _1ad128344_scopeOptimizer_eq(_1ad128344_scopeOptimizer *_self_, _1ad128344_scopeOptimizer _other_);


struct _1ad12ebec_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1ad1383a9_data> _field_data;
	jule::Ptr<_1ab3d977d_ExprInspector> _field_inspector;
};
inline jule::Bool _1ad12ebec_exprOptimizer_eq(_1ad12ebec_exprOptimizer *_self_, _1ad12ebec_exprOptimizer _other_);


struct _1ad135186_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1ab939816_Type> _field_kind;
};
inline jule::Bool _1ad135186_dynamicVar_eq(_1ad135186_dynamicVar *_self_, _1ad135186_dynamicVar _other_);


struct _1ad1354c7_dynamic {
	jule::Slice<_1ad135186_dynamicVar> _field_vars;
};
struct _1ad1383a9_data {
	jule::Ptr<_1ad139b91_boundary> _field_boundary;
	jule::Ptr<_1ad1256c6_nils> _field_nils;
	jule::Ptr<_1ad1354c7_dynamic> _field_dynamic;
	jule::I64 _field_flags;
};
inline jule::Bool _1ad1383a9_data_eq(_1ad1383a9_data *_self_, _1ad1383a9_data _other_);


struct _1ad139850_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1ad139b91_boundary {
	jule::Slice<_1ad139850_boundaryVar> _field_vars;
};
struct _1ad1d80d5_Optimizer {
	jule::Ptr<_1ab3d5ec7_IR> _field_ir;
};
inline jule::Bool _1ad1d80d5_Optimizer_eq(_1ad1d80d5_Optimizer *_self_, _1ad1d80d5_Optimizer _other_);


struct _1ad4b2e70_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1ad4b2e70_AbsTime_eq(_1ad4b2e70_AbsTime *_self_, _1ad4b2e70_AbsTime _other_);


struct _1ad4b3646_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1ad4b3646_Time_eq(_1ad4b3646_Time *_self_, _1ad4b3646_Time _other_);


struct _1ad1dc2a4_scopeCoder {
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _field_oc;
};
inline jule::Bool _1ad1dc2a4_scopeCoder_eq(_1ad1dc2a4_scopeCoder *_self_, _1ad1dc2a4_scopeCoder _other_);


struct _1ad1e8799_exprCoder {
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ab8a7289_Var>>> _field_varPrefixes;
};
struct _1ad20ad2d_TestCoder {
	jule::Ptr<_1a37a53d2_StructIns> _field_t;
	jule::Ptr<_1ab0898e5_Fn> _field_tmReset;
	jule::Ptr<_1ab0898e5_Fn> _field_tmFailed;
	jule::Ptr<_1ab0898e5_Fn> _field_tmSkipped;
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _field_oc;
};
inline jule::Bool _1ad20ad2d_TestCoder_eq(_1ad20ad2d_TestCoder *_self_, _1ad20ad2d_TestCoder _other_);


struct _1ad20d979_identCoder {
};
inline jule::Bool _1ad20d979_identCoder_eq(_1ad20d979_identCoder *_self_, _1ad20d979_identCoder _other_);


struct _1ad4bd277_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1ad4bd277_SerializationInfo_eq(_1ad4bd277_SerializationInfo *_self_, _1ad4bd277_SerializationInfo _other_);


struct _1ad4bd695_traitCast {
	jule::Ptr<_1ab095109_Trait> _field_t1;
	jule::Ptr<_1ab095109_Trait> _field_t2;
};
inline jule::Bool _1ad4bd695_traitCast_eq(_1ad4bd695_traitCast *_self_, _1ad4bd695_traitCast _other_);


struct _1ad4bda6e_anonHash {
	jule::Ptr<_1ab080435_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1ad4bda6e_anonHash_eq(_1ad4bda6e_anonHash *_self_, _1ad4bda6e_anonHash _other_);


struct _1ad4bde8c_traitHash {
	jule::Ptr<_1ab095109_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _field_methods;
};
struct _1ad4be289_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1ad4be289_metadata_eq(_1ad4be289_metadata *_self_, _1ad4be289_metadata _other_);


struct _1ad4c0a2c_ObjectCoder {
	_1a387dcd5_Builder _field_Buf;
	_1a387dcd5_Builder _field_resultDecls;
	_1a387dcd5_Builder _field_anyObj;
	_1a387dcd5_Builder _field_anonObj;
	_1a387dcd5_Builder _field_deallocObj;
	_1a387dcd5_Builder _field_coSpawnObj;
	jule::Ptr<_1ab3d5ec7_IR> _field_ir;
	_1ad4bd277_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ad4bda6e_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1a9a36629__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1ab939816_Type>> _field_anyTypeMap;
	jule::Slice<_1ad4bd695_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1ad4bde8c_traitHash>> _field_traitMap;
	jule::Ptr<_1b1bd5b78__Map> _field_traitMetMap;
	jule::Ptr<_1ad1e8799_exprCoder> _field_ec;
	jule::Ptr<_1ad1dc2a4_scopeCoder> _field_sc;
	jule::Ptr<_1ad4d0982_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_1ad4be289_metadata _field_meta;
};
struct _1ad4ced5a_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1ad4ced5a_customType_eq(_1ad4ced5a_customType *_self_, _1ad4ced5a_customType _other_);


struct _1ad4d0982_typeCoder {
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _field_oc;
	jule::Ptr<_1ad4d856c_resultCoder> _field_rc;
};
inline jule::Bool _1ad4d0982_typeCoder_eq(_1ad4d0982_typeCoder *_self_, _1ad4d0982_typeCoder _other_);


struct _1ad4d856c_resultCoder {
	jule::Ptr<_1ad4d0982_typeCoder> _field_tc;
};
inline jule::Bool _1ad4d856c_resultCoder_eq(_1ad4d856c_resultCoder *_self_, _1ad4d856c_resultCoder _other_);


struct _1b2389ded_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1b2389ded_Flag_eq(_1b2389ded_Flag *_self_, _1b2389ded_Flag _other_);

struct _1b238d781_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1b238d781_Flag_eq(_1b238d781_Flag *_self_, _1b238d781_Flag _other_);

struct _1b2391e8d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1b2391e8d_Flag_eq(_1b2391e8d_Flag *_self_, _1b2391e8d_Flag _other_);

struct _1b23956de_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1b23956de_Flag_eq(_1b23956de_Flag *_self_, _1b23956de_Flag _other_);

struct _1b2398deb_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1b2398deb_Flag_eq(_1b2398deb_Flag *_self_, _1b2398deb_Flag _other_);


struct _1ad54d725_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1ad5511d9_argParser {
	_1ad54d725_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
};
struct _1a68ca14c_Dir {
	jule::Str _field_Name;
	_1a696ebc5_Stat _field_Stat;
};
inline jule::Bool _1a68ca14c_Dir_eq(_1a68ca14c_Dir *_self_, _1a68ca14c_Dir _other_);


struct _1ad137cd2_dataCheckpoint {
	_1ad139b91_boundary _field_boundary;
	_1ad1256c6_nils _field_nils;
	_1ad1354c7_dynamic _field_dynamic;
};
struct _1ab3d5ec7_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ab868cea_Package> _field_Main;
	jule::Ptr<_1ab866578_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _field_Used;
	_1ab3e29ea_OrderedDefines _field_Ordered;
};
struct _1a68cac74_Cmd {
	_1a696ca5d_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1ab08c9a3_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1ab08c9a3_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab906a8b_Data__jule_tuple_x_1ab906a8b_Data {
	jule::Ptr<_1ab906a8b_Data> __jule_result_arg0;
	jule::Ptr<_1ab906a8b_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ab906a8b_Data__jule_tuple_bool {
	jule::Ptr<_1ab906a8b_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab6c4bab_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3798b67_Case__jule_tuple_bool {
	jule::Ptr<_1a3798b67_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3798b67_Case__jule_tuple_x_1a37979bd_Else {
	jule::Slice<jule::Ptr<_1a3798b67_Case>> __jule_result_arg0;
	jule::Ptr<_1a37979bd_Else> __jule_result_arg1;
};
struct __jule_tuple__1a3791225_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3790565_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a3790565_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab6c0877_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab6c376a_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log {
	jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a388d1ac_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab08c9a3_FnIns__jule_tuple_bool {
	jule::Ptr<_1ab08c9a3_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab3d5ec7_IR__jule_tuple_s_1a388d1ac_Log {
	jule::Ptr<_1ab3d5ec7_IR> __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a8cd8349_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a8cd8349_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8cd8349_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab090be8_SymTab__jule_tuple_s_1a388d1ac_Log {
	jule::Ptr<_1ab090be8_SymTab> __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log {
	jule::Ptr<_1ab868cea_Package> __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log {
	jule::Ptr<_1ab6bd9b8_AST> __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> __jule_result_arg0;
	jule::Slice<_1a388d1ac_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1a4377525_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1a4377e4e_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1a9a36629__Map> static__1a9a36be0_make(void);
inline void _1a9a36d44_initData(_1a9a36629__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1a9a36e98_hash(_1a9a36629__Map* _self_, jule::Str _14616_k);
inline void _1a9a370ec_rehash(_1a9a36629__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1a9a37251_nextSize(_1a9a36629__Map* _self_);
inline void _1a9a373a5_lookup(jule::Ptr<_1a9a36629__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1a9a37509_get(jule::Ptr<_1a9a36629__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1a9a3765d_set(_1a9a36629__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1a9a377b2_del(jule::Ptr<_1a9a36629__Map> _self_, jule::Str _27624_k);
inline void _1a9a37916_clear(jule::Ptr<_1a9a36629__Map> _self_);
inline jule::I64 _1a9a37a6a_len(jule::Ptr<_1a9a36629__Map> _self_);
inline jule::I64 _1a9a37bbe_cap(_1a9a36629__Map* _self_);
inline _1a9a42da5_mapIterator _1a9a37d23_iterator(jule::Ptr<_1a9a36629__Map> _self_);
inline jule::Ptr<_1b1bd5b78__Map> static__1b1bd6195_make(void);
inline void _1b1bd62e9_initData(_1b1bd5b78__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1b1bd644d_hash(_1b1bd5b78__Map* _self_, jule::Ptr<_1ab08c9a3_FnIns> _14616_k);
inline void _1b1bd65a2_rehash(_1b1bd5b78__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1b1bd6706_nextSize(_1b1bd5b78__Map* _self_);
inline void _1b1bd685a_lookup(jule::Ptr<_1b1bd5b78__Map> _self_, jule::Ptr<_1ab08c9a3_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1b1bd69ae_get(jule::Ptr<_1b1bd5b78__Map> _self_, jule::Ptr<_1ab08c9a3_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1b1bd6b13_set(_1b1bd5b78__Map* _self_, jule::Ptr<_1ab08c9a3_FnIns> _24123_k);
inline jule::Bool _1b1bd6c67_del(jule::Ptr<_1b1bd5b78__Map> _self_, jule::Ptr<_1ab08c9a3_FnIns> _27624_k);
inline void _1b1bd6dbb_clear(jule::Ptr<_1b1bd5b78__Map> _self_);
inline jule::I64 _1b1bd7020_len(jule::Ptr<_1b1bd5b78__Map> _self_);
inline jule::I64 _1b1bd7174_cap(_1b1bd5b78__Map* _self_);
inline _1b1be0259_mapIterator _1b1bd72c8_iterator(jule::Ptr<_1b1bd5b78__Map> _self_);
inline void _1a9a43438_init(_1a9a42da5_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1a9a4358c_next(_1a9a42da5_mapIterator* _self_);
inline void _1b1be07dc_init(_1b1be0259_mapIterator* _self_);
inline __jule_tuple_px_1ab08c9a3_FnIns__jule_tuple_psuintptr _1b1be0941_next(_1b1be0259_mapIterator* _self_);
inline _1a387dcd5_Builder static__1a387e654_New(jule::I64 _2316_cap);
inline jule::Exceptional<jule::I64> _1a387e995_Write(_1a387dcd5_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I64> _1a387ecd6_WriteStr(_1a387dcd5_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1a388008e_WriteByte(_1a387dcd5_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I64> _1a38803d0_WriteRune(_1a387dcd5_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1a3880666_Str(_1a387dcd5_Builder* _self_);
inline void _1a3880864_Clear(_1a387dcd5_Builder* _self_);
inline jule::I64 _1a3880aea_Len(_1a387dcd5_Builder* _self_);
inline jule::Slice<jule::U8> _1a3881117_Buf(_1a387dcd5_Builder* _self_);
inline void _1a38813c0_SetBuf(_1a387dcd5_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _1a87b3b38_index(_1a87b3671_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1a87b3de1_append(_1a87b3671_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1a87b4177_string(_1a87b3671_lazyBuff* _self_);
inline jule::Exceptional<jule::Ptr<_1a68cec56_File>> static__1a68c90a2_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode);
inline jule::VoidExceptional static__1a68c92d3_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I64> _1a68c9767_Write(_1a68cec56_File* _self_, jule::Slice<jule::U8> _5021_buf);
inline jule::Exceptional<jule::I64> _1a68c9aa8_Read(_1a68cec56_File* _self_, jule::Slice<jule::U8> _7324_buf);
inline jule::Ptr<_1a68cec56_File> static__1a68d073a_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1a68cec56_File>> static__1a68d0a04_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1a68d0cbd_Read(jule::Str _9017_path);
inline jule::VoidExceptional static__1a68d1164_Write(jule::Str _12918_path, jule::Slice<jule::U8> _12929_data, jule::I64 _12943_perm);
inline jule::VoidExceptional _1a68d196c_Close(_1a68cec56_File* _self_);
inline jule::Exceptional<_1a696ebc5_Stat> static__1a68cc193_Of(jule::Str _1215_path);
inline jule::Bool _1a69700d2_IsDir(_1a696ebc5_Stat* _self_);
inline jule::Bool _1a6970368_IsReg(_1a696ebc5_Stat* _self_);
inline jule::U64 _1a69705ee_Size(_1a696ebc5_Stat* _self_);
inline jule::Bool _1a94101ce_set(_1a9418715_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1a9410520_floatBits(_1a9418715_decimal* _self_, _1a940502b_floatInfo* _33226_flt);
inline void _1a9418b00_assign(_1a9418715_decimal* _self_, jule::U64 _15126_v);
inline void _1a9418da8_shift(_1a9418715_decimal* _self_, jule::I64 _17625_k);
inline void _1a9419161_roundDown(_1a9418715_decimal* _self_, jule::I64 _19625_nd);
inline void _1a9419419_roundUp(_1a9418715_decimal* _self_, jule::I64 _20523_nd);
inline void _1a94196c2_round(_1a9418715_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1a9419958_roundedInteger(_1a9418715_decimal* _self_);
inline void static__1a87c5133_Reset(void);
inline void static__1a87e69b2_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a941e045_LogFlat(_1a388d1ac_Log* _1421_l);
inline void static__1a941e276_LogError(_1a388d1ac_Log* _1922_l);
inline void static__1a941e4a7_Log(_1a388d1ac_Log* _6417_l);
inline void static__1a941e6d8_PrintLogs(jule::Slice<_1a388d1ac_Log>* _7423_logs);
inline jule::U8 _1ab6a5890_Prec(_1ab6a54d8_Token* _self_);
inline jule::Ptr<_1ab6aadb2_Fileset> static__1ab6ab313_New(jule::Str _1616_path);
inline void _1ab6ab5bb_Fill(_1ab6aadb2_Fileset* _self_, jule::Slice<jule::U8> _2324_data);
inline jule::Str _1ab6ab852_Dir(_1ab6aadb2_Fileset* _self_);
inline jule::Str _1ab6abad8_Name(_1ab6aadb2_Fileset* _self_);
inline jule::Str _1ab6ac1b0_GetRow(_1ab6aadb2_Fileset* _self_, jule::I64 _4418_row);
inline void _1ab6b454c_pushErr(_1ab6b3e86_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1ab6b4aad_lex(_1ab6b3e86_lex* _self_);
inline jule::Str _1ab6b4dee_id(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1ab6b5185_resume(_1ab6b3e86_lex* _self_);
inline void _1ab6b543d_lexLineComment(_1ab6b3e86_lex* _self_, jule::Ptr<_1ab6a54d8_Token>* _52235_token);
inline void _1ab6b56e6_lexRangeComment(_1ab6b3e86_lex* _self_, jule::Ptr<_1ab6a54d8_Token>* _53736_token);
inline jule::Str _1ab6b5a37_num(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1ab6b5d78_escapeSeq(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1ab6b6274_getRune(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1ab6b65b5_lexRune(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1ab6b684b_lexStr(_1ab6b3e86_lex* _self_);
inline void _1ab6b6cd0_newLine(_1ab6b3e86_lex* _self_);
inline jule::Bool _1ab6b7341_isOp(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U64 _70845_id, jule::Ptr<_1ab6a54d8_Token>* _70858_t);
inline jule::Bool _1ab6b773c_lexBasicOps(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1ab6a54d8_Token>* _71845_tok);
inline jule::Bool _1ab6b7b38_lexId(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1ab6a54d8_Token>* _72740_t);
inline jule::Bool _1ab6b8034_lexNum(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1ab6a54d8_Token>* _73741_t);
inline jule::Ptr<_1ab6a54d8_Token> _1ab6bd15a_token(_1ab6b3e86_lex* _self_);
inline jule::Bool _1ab6c2747_IsUnsafe(_1ab6c23a1_PtrTypeDecl* _self_);
inline jule::Bool _1ab6c2ed9_AutoSized(_1ab6c2b43_ArrTypeDecl* _self_);
inline jule::Bool _1a3789c02_Unhandled(_1a378984a_FnCallExpr* _self_);
inline jule::Bool _1a3789e88_Ignored(_1a378984a_FnCallExpr* _self_);
inline jule::Bool _1a37927a9_IsSelf(_1a3792402_ParamDecl* _self_);
inline jule::Bool _1a3793bea_IsAnon(_1a3793854_FnDecl* _self_);
inline jule::Bool _1a37959ee_IsInf(_1a3795658_Iter* _self_);
inline jule::Bool _1a3796329_IsWhileNext(_1a3795e83_WhileKind* _self_);
inline jule::Ptr<_1ab070c61_Const> static__1ab071190_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1ab070c61_Const> static__1ab071459_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1ab070c61_Const> static__1ab071723_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1ab070c61_Const> static__1ab0719dc_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1ab070c61_Const> static__1ab071ca6_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1ab070c61_Const> static__1ab071eb5_NewNil(void);
inline jule::I64 _1ab072625_ReadI64(_1ab070c61_Const* _self_);
inline jule::U64 _1ab0728ab_ReadU64(_1ab070c61_Const* _self_);
inline jule::Bool _1ab072b42_ReadBool(_1ab070c61_Const* _self_);
inline jule::Str _1ab072dc8_ReadStr(_1ab070c61_Const* _self_);
inline jule::F64 _1ab07315e_ReadF64(_1ab070c61_Const* _self_);
inline jule::I64 _1ab0733e5_AsI64(_1ab070c61_Const* _self_);
inline jule::U64 _1ab07367b_AsU64(_1ab070c61_Const* _self_);
inline jule::F64 _1ab073912_AsF64(_1ab070c61_Const* _self_);
inline void _1ab073bba_SetI64(_1ab070c61_Const* _self_, jule::I64 _13622_x);
inline void _1ab073e73_SetU64(_1ab070c61_Const* _self_, jule::U64 _13922_x);
inline void _1ab07422b_SetBool(_1ab070c61_Const* _self_, jule::Bool _14223_x);
inline void _1ab0744d4_SetStr(_1ab070c61_Const* _self_, jule::Str _14522_x);
inline void _1ab07478c_SetF64(_1ab070c61_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1ab074c21_IsI64(_1ab070c61_Const* _self_);
inline jule::Bool _1ab074ea7_IsU64(_1ab070c61_Const* _self_);
inline jule::Bool _1ab07523d_IsBool(_1ab070c61_Const* _self_);
inline jule::Bool _1ab0754c4_IsStr(_1ab070c61_Const* _self_);
inline jule::Bool _1ab07575a_IsF64(_1ab070c61_Const* _self_);
inline jule::Bool _1ab0759e1_IsNil(_1ab070c61_Const* _self_);
inline jule::Bool _1ab076173_And(_1ab070c61_Const* _self_, _1ab070c61_Const _23615_x);
inline jule::Bool _1ab0764b4_Or(_1ab070c61_Const* _self_, _1ab070c61_Const _24714_x);
inline jule::Bool _1ab07795a_Add(_1ab070c61_Const* _self_, _1ab070c61_Const _37519_x);
inline jule::Bool _1ab077c9b_Sub(_1ab070c61_Const* _self_, _1ab070c61_Const _40419_x);
inline jule::Bool _1ab0780dc_Mul(_1ab070c61_Const* _self_, _1ab070c61_Const _42819_x);
inline jule::Bool _1ab07842d_Div(_1ab070c61_Const* _self_, _1ab070c61_Const _45619_x);
inline jule::Bool _1ab07876e_Mod(_1ab070c61_Const* _self_, _1ab070c61_Const _48519_x);
inline jule::Bool _1ab078ab0_BitwiseAnd(_1ab070c61_Const* _self_, _1ab070c61_Const _50726_x);
inline jule::Bool _1ab078e01_BitwiseOr(_1ab070c61_Const* _self_, _1ab070c61_Const _52125_x);
inline jule::Bool _1ab079242_Xor(_1ab070c61_Const* _self_, _1ab070c61_Const _53519_x);
inline jule::Bool _1ab079583_Lshift(_1ab070c61_Const* _self_, _1ab070c61_Const _54922_x);
inline jule::Bool _1ab0798c4_Rshift(_1ab070c61_Const* _self_, _1ab070c61_Const _56922_x);
inline jule::Ptr<_1a37a4832_FieldIns> _1a379ea3b_instance(jule::Ptr<_1a379e651_Field> _self_);
inline jule::Ptr<_1a37a53d2_StructIns> _1a37a2a1c_instance(jule::Ptr<_1a37a2577_Struct> _self_);
inline jule::Ptr<_1a37a53d2_StructIns> _1a37a2d2a_appendInstance(_1a37a2577_Struct* _self_, jule::Ptr<_1a37a53d2_StructIns>* _13535_ins);
inline jule::Ptr<_1ab0898e5_Fn> _1a37a3226_FindMethod(_1a37a2577_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1ab8a7289_Var> _1a37a3567_FindStatic(_1a37a2577_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1a379e651_Field> _1a37a38a8_FindField(_1a37a2577_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1a37a3be9_IsImplements(_1a37a2577_Struct* _self_, jule::Ptr<_1ab095109_Trait> _18524_t);
inline jule::Bool _1a37a403a_IsUses(_1a37a2577_Struct* _self_, jule::Ptr<_1a37a2577_Struct> _19518_s);
inline jule::Str _1a37a5789_Str(_1a37a53d2_StructIns* _self_);
inline jule::Bool _1a37a5aca_Equal(jule::Ptr<_1a37a53d2_StructIns> _self_, jule::Ptr<_1ab939816_Type> _25718_other);
inline jule::Bool _1a37a6081_Same(_1a37a53d2_StructIns* _self_, jule::Ptr<_1a37a53d2_StructIns> _28516_s);
inline jule::Ptr<_1ab0898e5_Fn> _1a37a647c_FindMethod(_1a37a53d2_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1a37a4832_FieldIns> _1a37a67bd_FindField(_1a37a53d2_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1ab8a7289_Var> _1a37a6b0e_FindStatic(_1a37a53d2_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1ab08b84d_ParamIns> _1ab0882d9_instance(jule::Ptr<_1ab087e21_Param> _self_);
inline jule::Bool _1ab088570_IsSelf(_1ab087e21_Param* _self_);
inline jule::Bool _1ab088806_IsRef(_1ab087e21_Param* _self_);
inline jule::Bool _1ab089d9b_IsVoid(_1ab0898e5_Fn* _self_);
inline jule::Bool _1ab08a132_IsMethod(_1ab0898e5_Fn* _self_);
inline jule::Bool _1ab08a3b8_IsEntryPoint(_1ab0898e5_Fn* _self_);
inline jule::Bool _1ab08a64e_IsInit(_1ab0898e5_Fn* _self_);
inline jule::Bool _1ab08a8d5_IsAnon(_1ab0898e5_Fn* _self_);
inline jule::Bool _1ab08ab6b_AnyVar(_1ab0898e5_Fn* _self_);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab08ae02_instanceForce(jule::Ptr<_1ab0898e5_Fn> _self_);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab08b188_instance(jule::Ptr<_1ab0898e5_Fn> _self_);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab08b496_appendInstance(_1ab0898e5_Fn* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _13835_ins);
inline jule::Str _1ab08bbe4_Str(_1ab08b84d_ParamIns* _self_);
inline jule::Str _1ab08cd27_Str(_1ab08c9a3_FnIns* _self_);
inline jule::Bool _1ab08d168_Equal(jule::Ptr<_1ab08c9a3_FnIns> _self_, jule::Ptr<_1ab939816_Type> _22918_other);
inline jule::Bool _1ab08d60d_EqualFn(jule::Ptr<_1ab08c9a3_FnIns> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _24021_f);
inline jule::Bool _1ab08d94e_equalTrait(jule::Ptr<_1ab08c9a3_FnIns> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1ab939816_Type>> _1ab08dbd5_Types(_1ab08c9a3_FnIns* _self_);
inline jule::Bool _1ab08de6b_IsBuiltin(_1ab08c9a3_FnIns* _self_);
inline jule::Bool _1ab08e202_IsAnon(_1ab08c9a3_FnIns* _self_);
inline jule::Bool _1ab08e543_Same(_1ab08c9a3_FnIns* _self_, jule::Ptr<_1ab08c9a3_FnIns> _34216_f);
inline jule::Str _1ab08e884_GetKindStr(_1ab08c9a3_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab091215_SelectPackage(_1ab090be8_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _2729_selector);
inline jule::Ptr<_1ab8a7289_Var> _1ab091611_FindVar(_1ab090be8_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab091a0c_FindTypeAlias(_1ab090be8_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a37a2577_Struct> _1ab091e08_FindStruct(_1ab090be8_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1ab0898e5_Fn> _1ab092304_FindFn(_1ab090be8_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1ab095109_Trait> _1ab092645_FindTrait(_1ab090be8_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1ab0977b0_Enum> _1ab092986_FindEnum(_1ab090be8_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab092cc7_FindTypeEnum(_1ab090be8_SymTab* _self_, jule::Str _9728_ident);
inline jule::I64 _1ab09328e_findVar1(_1ab090be8_SymTab* _self_, jule::Ptr<_1ab8a7289_Var>* _10825_v);
inline jule::Ptr<_1ab8a7289_Var> _1ab093745_findVar(_1ab090be8_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab093beb_findTypeAlias(_1ab090be8_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1ab0940e7_defByIdent(_1ab090be8_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1ab09459d_isDuplicatedIdent(_1ab090be8_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1ab095505_Str(_1ab095109_Trait* _self_);
inline jule::Bool _1ab095846_Equal(jule::Ptr<_1ab095109_Trait> _self_, jule::Ptr<_1ab939816_Type> _2518_other);
inline jule::Ptr<_1ab0898e5_Fn> _1ab095cdb_FindMethod(_1ab095109_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1ab0898e5_Fn> _1ab09646d_findMethodInherit(_1ab095109_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1ab09712d_AutoExpr(_1ab096c54_EnumItem* _self_);
inline jule::Str _1ab097b67_Str(_1ab0977b0_Enum* _self_);
inline jule::Bool _1ab097ea8_Equal(jule::Ptr<_1ab0977b0_Enum> _self_, jule::Ptr<_1ab939816_Type> _3818_other);
inline jule::Ptr<_1ab096c54_EnumItem> _1ab0983d7_FindItem(_1ab0977b0_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1ab09933e_Str(_1ab098eba_TypeEnum* _self_);
inline jule::Bool _1ab099680_Equal(jule::Ptr<_1ab098eba_TypeEnum> _self_, jule::Ptr<_1ab939816_Type> _8018_other);
inline jule::Ptr<_1ab0988e3_TypeEnumItem> _1ab099aae_FindItem(_1ab098eba_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1ab11a1c3_Str(_1ab119cc7_comptimeRange* _self_);
inline jule::Bool _1ab11a514_Equal(jule::Ptr<_1ab119cc7_comptimeRange> _self_, jule::Ptr<_1ab939816_Type> _2718_other);
inline jule::Str _1ab11abda_Str(_1ab11a833_comptimeStructField* _self_);
inline jule::Bool _1ab11b02b_Equal(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Ptr<_1ab939816_Type> _3718_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab11b537__Decl(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Ptr<_1ab9087b3_eval>* _4127_e, jule::Ptr<_1a378984a_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab11b933__Type(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Ptr<_1ab9087b3_eval>* _5327_e, jule::Ptr<_1a378984a_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab11bc74_subIdent(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1ab11c48e_Str(_1ab11c0c6_comptimeStructFields* _self_);
inline jule::Bool _1ab11c7d0_Equal(jule::Ptr<_1ab11c0c6_comptimeStructFields> _self_, jule::Ptr<_1ab939816_Type> _9018_other);
inline void _1ab11cc64_ready(_1ab11c0c6_comptimeStructFields* _self_, jule::Ptr<_1ab8a7289_Var>* _9426_keyA, jule::Ptr<_1ab8a7289_Var>* _9443_keyB);
inline void _1ab11d0c7_index(_1ab11c0c6_comptimeStructFields* _self_, jule::Ptr<_1ab906a8b_Data>* _11526_d, jule::I64 _11536_i);
inline void _1ab11d4e5_step(_1ab11c0c6_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1ab8a7289_Var>* _12633_keyA, jule::Ptr<_1ab8a7289_Var>* _12650_keyB);
inline jule::I64 _1ab11d77b_len(_1ab11c0c6_comptimeStructFields* _self_);
inline jule::Str _1ab11de0d_Str(_1ab11da56_comptimeStatic* _self_);
inline jule::Bool _1ab11e24e_Equal(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Ptr<_1ab939816_Type> _15018_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab11e75a__Decl(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Ptr<_1ab9087b3_eval>* _15427_e, jule::Ptr<_1a378984a_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab11eb56__Type(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Ptr<_1ab9087b3_eval>* _16627_e, jule::Ptr<_1a378984a_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab11ee97_subIdent(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1ab1206b2_Str(_1ab12030a_comptimeStatics* _self_);
inline jule::Bool _1ab120a03_Equal(jule::Ptr<_1ab12030a_comptimeStatics> _self_, jule::Ptr<_1ab939816_Type> _20318_other);
inline void _1ab120e87_ready(_1ab12030a_comptimeStatics* _self_, jule::Ptr<_1ab8a7289_Var>* _20726_keyA, jule::Ptr<_1ab8a7289_Var>* _20743_keyB);
inline void _1ab1212ea_index(_1ab12030a_comptimeStatics* _self_, jule::Ptr<_1ab906a8b_Data>* _22826_d, jule::I64 _22836_i);
inline void _1ab121718_step(_1ab12030a_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1ab8a7289_Var>* _23933_keyA, jule::Ptr<_1ab8a7289_Var>* _23950_keyB);
inline jule::I64 _1ab12199e_len(_1ab12030a_comptimeStatics* _self_);
inline jule::Str _1ab122131_Str(_1ab121c79_comptimeEnumField* _self_);
inline jule::Bool _1ab122472_Equal(jule::Ptr<_1ab121c79_comptimeEnumField> _self_, jule::Ptr<_1ab939816_Type> _26318_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab12296c__Decl(jule::Ptr<_1ab121c79_comptimeEnumField> _self_, jule::Ptr<_1ab9087b3_eval>* _26727_e, jule::Ptr<_1a378984a_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab122cad_subIdent(jule::Ptr<_1ab121c79_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1ab123550_Str(_1ab123088_comptimeEnumFields* _self_);
inline jule::Bool _1ab123891_Equal(jule::Ptr<_1ab123088_comptimeEnumFields> _self_, jule::Ptr<_1ab939816_Type> _30118_other);
inline void _1ab123c9d_ready(_1ab123088_comptimeEnumFields* _self_, jule::Ptr<_1ab8a7289_Var>* _30526_keyA, jule::Ptr<_1ab8a7289_Var>* _30543_keyB);
inline void _1ab124111_index(_1ab123088_comptimeEnumFields* _self_, jule::Ptr<_1ab906a8b_Data>* _32626_d, jule::I64 _32636_i);
inline void _1ab12452e_step(_1ab123088_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1ab8a7289_Var>* _33733_keyA, jule::Ptr<_1ab8a7289_Var>* _33750_keyB);
inline jule::I64 _1ab1247b5_len(_1ab123088_comptimeEnumFields* _self_);
inline jule::Str _1ab124e47_Str(_1ab124a90_comptimeParam* _self_);
inline jule::Bool _1ab125288_Equal(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab939816_Type> _36118_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab1257a5__Decl(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab9087b3_eval>* _36527_e, jule::Ptr<_1a378984a_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab125ba1__Type(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab9087b3_eval>* _37727_e, jule::Ptr<_1a378984a_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12609c__Recv(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab9087b3_eval>* _38527_e, jule::Ptr<_1a378984a_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab1263dd_subIdent(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1ab126b91_Str(_1ab1268e9_comptimeParams* _self_);
inline jule::Bool _1ab126ed2_Equal(jule::Ptr<_1ab1268e9_comptimeParams> _self_, jule::Ptr<_1ab939816_Type> _43418_other);
inline void _1ab127466_ready(_1ab1268e9_comptimeParams* _self_, jule::Ptr<_1ab8a7289_Var>* _43826_keyA, jule::Ptr<_1ab8a7289_Var>* _43843_keyB);
inline void _1ab1277c9_index(_1ab1268e9_comptimeParams* _self_, jule::Ptr<_1ab906a8b_Data>* _45926_d, jule::I64 _45936_i);
inline void _1ab127be7_step(_1ab1268e9_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1ab8a7289_Var>* _47033_keyA, jule::Ptr<_1ab8a7289_Var>* _47050_keyB);
inline jule::I64 _1ab127e7d_len(_1ab1268e9_comptimeParams* _self_);
inline jule::Str _1ab128610_Str(_1ab128258_comptimeTypeInfos* _self_);
inline jule::Bool _1ab128951_Equal(jule::Ptr<_1ab128258_comptimeTypeInfos> _self_, jule::Ptr<_1ab939816_Type> _49418_other);
inline void _1ab128dd5_ready(_1ab128258_comptimeTypeInfos* _self_, jule::Ptr<_1ab8a7289_Var>* _49826_keyA, jule::Ptr<_1ab8a7289_Var>* _49843_keyB);
inline void _1ab129248_index(_1ab128258_comptimeTypeInfos* _self_, jule::Ptr<_1ab906a8b_Data>* _51926_d, jule::I64 _51936_i);
inline void _1ab129666_step(_1ab128258_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1ab8a7289_Var>* _52833_keyA, jule::Ptr<_1ab8a7289_Var>* _52850_keyB);
inline jule::I64 _1ab1298ec_len(_1ab128258_comptimeTypeInfos* _self_);
inline jule::Str _1ab12a07e_Str(_1ab129bc7_comptimeTypeInfo* _self_);
inline jule::Bool _1ab12a3c0_Equal(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab939816_Type> _55218_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab12aa0d__Decl(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _55627_e, jule::Ptr<_1a378984a_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12ae09__Str(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _59322_e, jule::Ptr<_1a378984a_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12b305__Kind(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _60627_e, jule::Ptr<_1a378984a_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12b701__Bits(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _68627_e, jule::Ptr<_1a378984a_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12baec__Elem(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _71027_e, jule::Ptr<_1a378984a_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12bee8__Size(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _74327_e, jule::Ptr<_1a378984a_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12c3e4__Key(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _76226_e, jule::Ptr<_1a378984a_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12c7e0__Value(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _77528_e, jule::Ptr<_1a378984a_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12cbdb__Fields(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _78829_e, jule::Ptr<_1a378984a_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12d0d7__Statics(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _81730_e, jule::Ptr<_1a378984a_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12d4d3__Binded(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _83629_e, jule::Ptr<_1a378984a_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12d8ce__Ordered(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _84926_e, jule::Ptr<_1a378984a_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12dcca__Comparable(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _86229_e, jule::Ptr<_1a378984a_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12e1c6__Mutable(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _87526_e, jule::Ptr<_1a378984a_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12e5c2__Types(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _88828_e, jule::Ptr<_1a378984a_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12e9bd__CanNil(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _91129_e, jule::Ptr<_1a378984a_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab12edb9__GC(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _92425_e, jule::Ptr<_1a378984a_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab1302b5__Result(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _93729_e, jule::Ptr<_1a378984a_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab1306b1__Params(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _95329_e, jule::Ptr<_1a378984a_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab130a02_subIdent(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1ab131184_Str(_1ab130ccc_comptimeValue* _self_);
inline jule::Bool _1ab1314c5_Equal(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab939816_Type> _111818_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab131a36__Unwrap(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _112229_e, jule::Ptr<_1a378984a_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab131e32__Type(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _113027_e, jule::Ptr<_1a378984a_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab13232d__Lvalue(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _113829_e, jule::Ptr<_1a378984a_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab132729__Mutable(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _115130_e, jule::Ptr<_1a378984a_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab132b25__Const(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _116428_e, jule::Ptr<_1a378984a_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab133021__Field(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _117728_e, jule::Ptr<_1a378984a_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab13341c__Method(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _121229_e, jule::Ptr<_1a378984a_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab13375d_subIdent(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1ab133de0_Str(_1ab133a38_comptimeFiles* _self_);
inline jule::Bool _1ab134231_Equal(jule::Ptr<_1ab133a38_comptimeFiles> _self_, jule::Ptr<_1ab939816_Type> _132218_other);
inline void _1ab1346b5_ready(_1ab133a38_comptimeFiles* _self_, jule::Ptr<_1ab8a7289_Var>* _132626_keyA, jule::Ptr<_1ab8a7289_Var>* _132643_keyB);
inline void _1ab134a28_index(_1ab133a38_comptimeFiles* _self_, jule::Ptr<_1ab906a8b_Data>* _134726_d, jule::I64 _134736_i);
inline void _1ab134e46_step(_1ab133a38_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1ab8a7289_Var>* _135833_keyA, jule::Ptr<_1ab8a7289_Var>* _135850_keyB);
inline jule::I64 _1ab1351cc_len(_1ab133a38_comptimeFiles* _self_);
inline jule::Str _1ab13585e_Str(_1ab1354a7_comptimeFile* _self_);
inline jule::Bool _1ab135ba0_Equal(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab939816_Type> _138218_other);
inline jule::Ptr<_1ab906a8b_Data> _1ab1361bc__Path(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab9087b3_eval>* _138627_e, jule::Ptr<_1a378984a_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab1365b8__Name(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab9087b3_eval>* _139927_e, jule::Ptr<_1a378984a_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab1369b4__Dir(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab9087b3_eval>* _141226_e, jule::Ptr<_1a378984a_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab136d05_subIdent(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1ab1376b8_Str(_1ab1370d0_comptimeDecls* _self_);
inline jule::Bool _1ab137a09_Equal(jule::Ptr<_1ab1370d0_comptimeDecls> _self_, jule::Ptr<_1ab939816_Type> _146118_other);
inline void _1ab137d7d_ready(_1ab1370d0_comptimeDecls* _self_, jule::Ptr<_1ab8a7289_Var>* _146526_keyA, jule::Ptr<_1ab8a7289_Var>* _146543_keyB);
inline void _1ab1381e1_index(_1ab1370d0_comptimeDecls* _self_, jule::Ptr<_1ab906a8b_Data>* _148626_d, jule::I64 _148636_i);
inline void _1ab13860e_step(_1ab1370d0_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1ab8a7289_Var>* _149533_keyA, jule::Ptr<_1ab8a7289_Var>* _149550_keyB);
inline jule::I64 _1ab138895_len(_1ab1370d0_comptimeDecls* _self_);
inline jule::Str _1ab139775_Str(_1ab1393bd_comptimeDecl* _self_);
inline jule::Bool _1ab139ab6_Equal(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab939816_Type> _153418_other);
inline jule::Str _1ab13a017_declAsStr(_1ab1393bd_comptimeDecl* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab13a413__Name(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _156527_e, jule::Ptr<_1a378984a_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab828d21__Public(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _160329_e, jule::Ptr<_1a378984a_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82921c__Binded(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _164129_e, jule::Ptr<_1a378984a_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab829618__Exceptional(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _167534_e, jule::Ptr<_1a378984a_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab829a14__Mutable(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _169630_e, jule::Ptr<_1a378984a_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab829e10__Variadic(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _172931_e, jule::Ptr<_1a378984a_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82a30b__Reference(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _176032_e, jule::Ptr<_1a378984a_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82a707__Params(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _179229_e, jule::Ptr<_1a378984a_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82ab03__Fields(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _182729_e, jule::Ptr<_1a378984a_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82aeee__Statics(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _186830_e, jule::Ptr<_1a378984a_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82b3ea__Methods(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _190430_e, jule::Ptr<_1a378984a_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab82b73b_subIdent(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*> _1ab82e6ea_readyFn(jule::Ptr<_1ab82e2bb_constraintChecker> _self_);
inline jule::Bool _1ab82e981_readyFi(jule::Ptr<_1ab82e2bb_constraintChecker> _self_);
inline jule::Bool _1ab82ec17_readySi(jule::Ptr<_1ab82e2bb_constraintChecker> _self_);
inline jule::Bool _1ab82ee9d_ready(jule::Ptr<_1ab82e2bb_constraintChecker> _self_);
inline jule::Bool _1ab830234_check(jule::Ptr<_1ab82e2bb_constraintChecker> _self_);
inline jule::Bool _1ab8319b6_IsTraitImpl(_1ab8315ba_Impl* _self_);
inline jule::Bool _1ab831c4c_IsStructImpl(_1ab8315ba_Impl* _self_);
inline jule::Bool _1ab83745b_IsWhileNext(_1ab8370b5_WhileIter* _self_);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab83d440_SelectPackage(_1ab83ce67_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _34829_selector);
inline jule::Ptr<_1ab8a7289_Var> _1ab83d83b_FindVar(_1ab83ce67_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab83dc37_FindTypeAlias(_1ab83ce67_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded);
inline jule::Ptr<_1a37a2577_Struct> _1ab83e133_FindStruct(_1ab83ce67_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded);
inline jule::Ptr<_1ab0898e5_Fn> _1ab83e52e_FindFn(_1ab83ce67_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded);
inline jule::Ptr<_1ab095109_Trait> _1ab83e870_FindTrait(_1ab83ce67_scopeChecker* _self_, jule::Str _41925_ident);
inline jule::Ptr<_1ab0977b0_Enum> _1ab83ebb1_FindEnum(_1ab83ce67_scopeChecker* _self_, jule::Str _42824_ident);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab840002_FindTypeEnum(_1ab83ce67_scopeChecker* _self_, jule::Str _43728_ident);
inline jule::Bool _1ab840354_isUnsafe(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline jule::Bool _1ab8405da_isRoot(_1ab83ce67_scopeChecker* _self_);
inline void _1ab8407d8_stop(_1ab83ce67_scopeChecker* _self_);
inline jule::Bool _1ab840a6e_stopped(_1ab83ce67_scopeChecker* _self_);
inline jule::Bool _1ab840d05_isDeferred(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline void _1ab8410ad_pushCaptured(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab8a7289_Var>* _49934_v);
inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab841344_getRoot(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab8415ca_getHardRoot(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline jule::Ptr<_1ab854577_ReferenceStack> _1ab841861_getOwnerRefers(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline jule::Ptr<_1ab8a7289_Var> _1ab841ba2_findVar(_1ab83ce67_scopeChecker* _self_, jule::Str _54623_ident);
inline jule::Ptr<_1ab838726_Label> _1ab841ee3_findLabel(_1ab83ce67_scopeChecker* _self_, jule::Str* _56726_ident);
inline jule::Ptr<_1ab83be77_scopeLabel> _1ab842334_findLabelScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Str* _58332_ident);
inline jule::Ptr<_1ab83be77_scopeLabel> _1ab842675_findLabelAll(_1ab83ce67_scopeChecker* _self_, jule::Str* _59429_ident);
inline jule::Bool _1ab842a71_isDuplicatedIdent(_1ab83ce67_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident);
inline void _1ab842d29_checkVarDecl(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3794a0e_VarDecl> _62633_decl);
inline void _1ab8430d2_checkTypeAlias(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _65736_ta);
inline void _1ab84338a_checkTypeAliasDecl(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37986b1_TypeAliasDecl> _67339_decl);
inline jule::Ptr<_1ab835bc9_Scope> _1ab843621_getChild(_1ab83ce67_scopeChecker* _self_);
inline void _1ab843a3e_checkChildSsc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _68435_tree, jule::Ptr<_1ab835bc9_Scope>* _68463_s, jule::Ptr<_1ab83ce67_scopeChecker>* _68479_ssc);
inline jule::Ptr<_1ab835bc9_Scope> _1ab843e3a_checkChildSc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _69134_tree, jule::Ptr<_1ab83ce67_scopeChecker>* _69162_ssc);
inline jule::Ptr<_1ab835bc9_Scope> _1ab84427b_checkChild(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _69732_tree);
inline void _1ab844534_checkAnonScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree> _70235_tree);
inline void _1ab844897_processErrorCall(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1ab6a54d8_Token> _70769_err);
inline void _1ab844b50_checkExpr(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab6c4bab_Expr> _72030_expr);
inline jule::Ptr<_1ab8360e7_If> _1ab844e91_checkIf(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37975e4_If> _75028_i);
inline jule::Ptr<_1ab8363e4_Else> _1ab8452d2_checkElse(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37979bd_Else> _77030_e);
inline void _1ab84558a_checkConditional(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3797e74_Conditional> _77637_conditional);
inline void _1ab845a63_checkIterScopeSsc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1a3791bb5_ScopeTree> _79251_tree, jule::Ptr<_1ab835bc9_Scope>* _79279_s, jule::Ptr<_1ab83ce67_scopeChecker> _79294_ssc);
inline jule::Ptr<_1ab835bc9_Scope> _1ab846019_checkIterScopeSc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1a3791bb5_ScopeTree> _79750_tree, jule::Ptr<_1ab83ce67_scopeChecker> _79777_ssc);
inline jule::Ptr<_1ab835bc9_Scope> _1ab846415_checkIterScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1a3791bb5_ScopeTree>* _80349_tree);
inline void _1ab8466bd_checkInfIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _80834_it);
inline void _1ab846976_checkWhileIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _81436_it);
inline void _1ab846d94_checkComptimeRangeIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _86444_it, jule::Ptr<_1ab837a11_RangeIter>* _86465_kind, jule::Ptr<_1ab906a8b_Data>* _86488_d);
inline void _1ab84714c_checkRangeIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _92136_it);
inline void _1ab847405_checkIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter> _98130_it);
inline jule::Bool _1ab847746_checkValidContLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _100536_it);
inline jule::Bool _1ab847a87_checkValidBreakLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _102137_ptr);
inline jule::Ptr<_1ab837d96_ContSt> _1ab847dc8_checkContValidScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a379713d_ContSt> _104436_c);
inline void _1ab848181_checkCont(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a379713d_ContSt> _106826_c);
inline void _1ab848439_checkLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a378e19b_LabelSt> _111531_l);
inline void _1ab8486e2_pushGoto(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a378e575_GotoSt> _113429_gt);
inline void _1ab84899a_checkPostfix(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt> _114533_a);
inline jule::Bool _1ab848cdb_isNewAssignIdent(_1ab83ce67_scopeChecker* _self_, jule::Str _117832_ident);
inline void _1ab849094_removeInteriorMutRisk(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab906a8b_Data>* _119143_d);
inline jule::Bool _1ab84954a_checkStructureAssignOp(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37a53d2_StructIns>* _120544_s, jule::Ptr<_1a3790565_AssignSt>* _120564_a, jule::Ptr<_1ab906a8b_Data>* _120588_r);
inline void _1ab849803_checkSingleAssign(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt>* _124439_a);
inline void _1ab849e41_processEndPartOfMultiAssign(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _132649_st, jule::Ptr<_1a3790565_AssignSt>* _132672_a, jule::Ptr<_1a378eed2_AssignLeft>* _13278_lexpr, jule::Ptr<_1ab906a8b_Data>* _132738_l, jule::Ptr<_1ab906a8b_Data>* _132753_r, jule::Bool _132763_strict);
inline void _1ab84a1e9_checkMultiAssign(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt>* _140238_a);
inline void _1ab84a4a2_checkAssignSt(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt> _146934_a);
inline jule::Ptr<_1ab835bc9_Scope> _1ab84a89d_checkCaseScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83ae32_Case>* _148032_c, jule::Ptr<_1a3791bb5_ScopeTree>* _148047_tree);
inline jule::Ptr<_1ab83ae32_Case> _1ab84ae0e_checkCase(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83a409_Match> _148630_m, jule::I64 _148641_i, jule::Ptr<_1a3798b67_Case> _148653_c, jule::Ptr<_1ab906a8b_Data> _148672_expr);
inline void _1ab84b32c_checkCases(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase>* _156332_m, jule::Ptr<_1ab83a409_Match> _156356_rm, jule::Ptr<_1ab906a8b_Data> _156372_expr);
inline jule::Ptr<_1ab83ae32_Case> _1ab84b728_checkDefault(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83a409_Match> _158433_m, jule::Ptr<_1a37979bd_Else> _158448_d);
inline void _1ab84ba8b_checkComptimePanic(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab6a54d8_Token> _159239_callToken, jule::Ptr<_1ab835bc9_Scope>* _159266_s);
inline void _1ab84bdee_processConstMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83a409_Match>* _162439_tm, jule::Ptr<_1a3799481_MatchCase>* _162456_m);
inline void _1ab84c1a7_checkTypeMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase>* _165336_m);
inline void _1ab84c460_checkCommonMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase>* _169638_m);
inline void _1ab84c718_checkMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase> _174731_m);
inline void _1ab84c9c1_checkFall(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a378e872_FallSt> _175526_f);
inline jule::Ptr<_1ab838270_BreakSt> _1ab84cd12_checkBreakWithLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3796c64_BreakSt> _177836_b);
inline jule::Ptr<_1ab838270_BreakSt> _1ab84d153_checkPlainBreak(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3796c64_BreakSt> _183632_b);
inline void _1ab84d40b_checkBreak(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3796c64_BreakSt> _185827_b);
inline void _1ab84d6b4_checkRet(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3794dd8_RetSt> _186929_r);
inline void _1ab84d96c_checkUseExpr(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab6c5580_UseExpr> _189429_ue);
inline void _1ab84dc25_checkNode(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Any* _191031_node);
inline void _1ab84de23_checkResult(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline void _1ab84e121_checkTree(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline void _1ab84e484_checkGoto(_1ab83ce67_scopeChecker* _self_, jule::Ptr<_1ab838d86_GotoSt>* _201230_gt, jule::Ptr<_1ab83be77_scopeLabel>* _201248_label);
inline void _1ab84e682_checkGotos(_1ab83ce67_scopeChecker* _self_);
inline void _1ab84e880_checkLabels(_1ab83ce67_scopeChecker* _self_);
inline void _1ab84ea7d_checkVars(_1ab83ce67_scopeChecker* _self_);
inline void _1ab84ec7b_checkAliases(_1ab83ce67_scopeChecker* _self_);
inline void _1ab8500de_check(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _210727_tree, jule::Ptr<_1ab835bc9_Scope>* _210755_s);
inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab850375_newChildChecker(jule::Ptr<_1ab83ce67_scopeChecker> _self_);
inline void _1ab852245_checkCdef(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _1626_d);
inline void _1ab8524ed_checkTypedef(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _3229_d);
inline void _1ab8527a6_checkNamespace(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _4835_d);
inline void _1ab852a5e_checkDeprecated(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _10036_d);
inline void _1ab852d17_checkTest(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _14126_d);
inline void _1ab8530c0_checkExport(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _16232_d);
inline void _1ab853378_checkDirective(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _20035_d);
inline void _1ab853576_check(_1ab851ce4_directiveChecker* _self_);
inline jule::Ptr<_1ab854577_ReferenceStack> static__1ab854863_new(void);
inline jule::I64 _1ab854c5e_Len(_1ab854577_ReferenceStack* _self_);
inline jule::Any _1ab8550a0_At(_1ab854577_ReferenceStack* _self_, jule::I64 _4218_i);
inline void _1ab855358_Push(_1ab854577_ReferenceStack* _self_, jule::Any _4724_ref);
inline jule::Bool _1b0b752de_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1ab08c9a3_FnIns> _5220_t);
inline jule::Bool _1b0b8b921_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1ab8a7289_Var> _5220_t);
inline jule::Bool _1b0c74168_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1a37a53d2_StructIns> _5220_t);
inline jule::Bool _1b111a3ee_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1ab095109_Trait> _5220_t);
inline void _1ab85b00c_pushErr(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab6a54d8_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args);
inline void _1ab85b78d_pushSuggestion(_1ab85a506_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args);
inline jule::Bool _1ab85bb89_checkCppUseDeclPath(_1ab85a506_symBuilder* _self_, jule::Ptr<_1a3799a14_UseDecl>* _31936_decl, jule::Str* _31958_path);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab85be97_buildCppHeaderImport(_1ab85a506_symBuilder* _self_, jule::Ptr<_1a3799a14_UseDecl>* _33941_decl);
inline jule::Str _1ab85c393_checkAbsPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1a3799a14_UseDecl>* _36953_decl);
inline jule::Str _1ab85c78e_checkStdAbsPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1a3799a14_UseDecl>* _39856_decl);
inline __jule_tuple_bool__jule_tuple_str _1ab85cad0_checkImpPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1a3799a14_UseDecl>* _42134_decl);
inline void _1ab85cd88_assignAlias(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab866578_ImportInfo>* _45133_imp);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab85d1c9_buildImport(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1a3799a14_UseDecl>* _45833_decl);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab85d51a_findUseDecl(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab866578_ImportInfo>* _48528_pkg);
inline jule::Bool _1ab85d85b_checkDuplicateUseDecl(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab866578_ImportInfo>* _49342_pkg);
inline jule::Str _1ab85db9c_getAsLinkPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Str _50334_path);
inline void _1ab85e0ba_pushCycleError(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab85a506_symBuilder>* _52432_sb, jule::Str _52449_path, _1a387dcd5_Builder* _52465_message);
inline void _1ab85e4d8_pushCrossCycleError(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab85a506_symBuilder>* _53737_target, jule::Ptr<_1ab866578_ImportInfo>* _53759_imp, jule::Ptr<_1ab6a54d8_Token>* _53778_errorToken);
inline jule::Bool _1ab85e8d4_checkImportCycles(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab866578_ImportInfo> _56034_imp, jule::Ptr<_1a3799a14_UseDecl>* _56053_decl);
inline void _1ab85ed02_checkPackageAccessibility(_1ab85a506_symBuilder* _self_, jule::Ptr<_1a3799a14_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path);
inline jule::Bool _1ab8601ed_importPackage(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab866578_ImportInfo>* _62135_imp, jule::Ptr<_1a3799a14_UseDecl>* _62158_decl);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab86053e_importUseDecl(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1a3799a14_UseDecl>* _66735_decl);
inline void _1ab86073c_importUseDecls(jule::Ptr<_1ab85a506_symBuilder> _self_);
inline void _1ab8609e5_appendNode(_1ab85a506_symBuilder* _self_, _1ab6be876_Node* _69631_node);
inline void _1ab860be3_appendNodes(_1ab85a506_symBuilder* _self_);
inline void _1ab860e9b_pushDirectivePass(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab6bec94_Directive>* _73238_d);
inline void _1ab861199_appendTopDirectives(_1ab85a506_symBuilder* _self_);
inline void _1ab861397_build(jule::Ptr<_1ab85a506_symBuilder> _self_);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab866a95_SelectPackage(_1ab866578_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> );
inline jule::Ptr<_1ab8a7289_Var> _1ab866e91_FindVar(_1ab866578_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab86738c_FindTypeAlias(_1ab866578_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a37a2577_Struct> _1ab867788_FindStruct(_1ab866578_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1ab0898e5_Fn> _1ab867b84_FindFn(_1ab866578_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1ab095109_Trait> _1ab867ec5_FindTrait(_1ab866578_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1ab0977b0_Enum> _1ab868316_FindEnum(_1ab866578_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab868657_FindTypeEnum(_1ab866578_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1ab868a20_isLookupable(_1ab866578_ImportInfo* _self_);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab8692c3_SelectPackage(_1ab868cea_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> );
inline jule::Ptr<_1ab8a7289_Var> _1ab8696be_FindVar(_1ab868cea_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab869aba_FindTypeAlias(_1ab868cea_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1a37a2577_Struct> _1ab869eb6_FindStruct(_1ab868cea_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1ab0898e5_Fn> _1ab86a3b2_FindFn(_1ab868cea_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1ab095109_Trait> _1ab86a703_FindTrait(_1ab868cea_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1ab0977b0_Enum> _1ab86aa44_FindEnum(_1ab868cea_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab86ad85_FindTypeEnum(_1ab868cea_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1ab129bc7_comptimeTypeInfo> _1ab882de1_pushComptimeTypeInfo(_1ab88294b_commonSemaMeta* _self_, jule::Ptr<_1ab939816_Type>* _21241_t);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab883a4b_SelectPackage(_1ab883573_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _24129_selector);
inline jule::Ptr<_1ab8a7289_Var> _1ab883e47_FindVar(_1ab883573_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab884343_FindTypeAlias(_1ab883573_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded);
inline jule::Ptr<_1a37a2577_Struct> _1ab88473e_FindStruct(_1ab883573_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded);
inline jule::Ptr<_1ab0898e5_Fn> _1ab884b3a_FindFn(_1ab883573_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded);
inline jule::Ptr<_1ab095109_Trait> _1ab884e7b_FindTrait(_1ab883573_sema* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1ab0977b0_Enum> _1ab8852bc_FindEnum(_1ab883573_sema* _self_, jule::Str _32624_ident);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab88560d_FindTypeEnum(_1ab883573_sema* _self_, jule::Str _34128_ident);
inline jule::Bool _1ab885a1a_isFlag(_1ab883573_sema* _self_, jule::I64 _35318_flags);
inline jule::Ptr<_1ab090be8_SymTab> _1ab885ca1_getCurrentFile(_1ab883573_sema* _self_);
inline void _1ab886059_setCurrentFile(_1ab883573_sema* _self_, jule::Ptr<_1ab090be8_SymTab> _35634_f);
inline void _1ab886477_pushErr(_1ab883573_sema* _self_, jule::Ptr<_1ab6a54d8_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args);
inline void _1ab8867da_pushSuggestion(_1ab883573_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args);
inline jule::Bool _1ab886bd6_isAccessibleDefine(_1ab883573_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1ab6a54d8_Token> _36944_token);
inline jule::Bool _1ab88718c_isDuplicatedIdent(_1ab883573_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded);
inline void _1ab887500_checkDirectives(jule::Ptr<_1ab883573_sema> _self_, jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _40137_d, jule::Any _40163_o);
inline jule::Bool _1ab8879a6_checkGenericQuantity(_1ab883573_sema* _self_, jule::I64 _41036_required, jule::I64 _41051_given, jule::Ptr<_1ab6a54d8_Token> _41063_token);
inline jule::Bool _1ab8889da_isUseAliasDuplication(_1ab883573_sema* _self_, jule::Ptr<_1ab866578_ImportInfo>* _46838_imp);
inline jule::Bool _1ab888d2b_checkAutoAlias(_1ab883573_sema* _self_, jule::Ptr<_1ab866578_ImportInfo>* _48035_imp);
inline jule::Bool _1ab88916c_checkImport(_1ab883573_sema* _self_, jule::Ptr<_1ab866578_ImportInfo>* _49832_imp);
inline void _1ab88936a_checkImports(_1ab883573_sema* _self_);
inline void _1ab889568_implFileImpls(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab889766_implImpls(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab889964_checkEnums(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab889b62_checkFileInherits(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab889d60_checkInherits(jule::Ptr<_1ab883573_sema> _self_);
inline _1ab94bc13_typeChecker _1ab88a316_typeChecker(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _59147_generics, jule::Ptr<_1ab94ac23_referencer> _5927_referencer);
inline jule::Ptr<_1ab939816_Type> _1ab88a877_buildTypeWithRefers(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _6197_generics, jule::Ptr<_1ab94ac23_referencer> _61935_referencer);
inline jule::Bool _1ab88add8_checkTypeSymWithRefers(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab942027_TypeSym>* _62544_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _6267_generics, jule::Ptr<_1ab94ac23_referencer> _62635_referencer);
inline jule::Ptr<_1ab82e2bb_constraintChecker> _1ab88b16e_constraintChecker(jule::Ptr<_1ab883573_sema> _self_);
inline jule::Bool _1ab88b56a_checkTypeSym(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab942027_TypeSym>* _64034_t, jule::Trait _64051_l);
inline jule::Ptr<_1ab939816_Type> _1ab88ba21_checkTypeSymRefers(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _64540_t, jule::Trait _64563_l, jule::Ptr<_1ab854577_ReferenceStack> _64578_refers);
inline jule::Ptr<_1ab939816_Type> _1ab88bec7_buildTypeWithGenerics(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _6587_generics, jule::Ptr<_1ab854577_ReferenceStack> _65835_refers);
inline jule::Ptr<_1ab939816_Type> _1ab88c659_selectType(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _67532_t);
inline jule::Ptr<_1ab9087b3_eval> _1ab88cb10_evalpd(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1ab939816_Type> _68742_p, jule::Ptr<_1ab8a7289_Var> _68756_owner);
inline jule::Ptr<_1ab9087b3_eval> _1ab88d00b_evalp(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1ab939816_Type> _70241_p);
inline jule::Ptr<_1ab9087b3_eval> _1ab88d34c_eval(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _70725_l);
inline jule::Bool _1ab88d968_checkAssignType(jule::Ptr<_1ab883573_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1ab939816_Type>* _71154_dest, jule::Ptr<_1ab906a8b_Data>* _7128_d, jule::Ptr<_1ab6a54d8_Token> _71222_errorToken, jule::Ptr<_1ab854577_ReferenceStack> _71253_refers);
inline jule::Bool _1ab88de1e__checkTypeCompatibility(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab939816_Type>* _75445_dest, jule::Ptr<_1ab939816_Type>* _75463_src, jule::Ptr<_1ab6a54d8_Token> _7557_errorToken);
inline jule::Bool _1ab88e3c5_checkTypeCompatibility(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab939816_Type>* _77244_dest, jule::Ptr<_1ab939816_Type>* _7738_src, jule::Ptr<_1ab6a54d8_Token>* _77325_errorToken);
inline void _1ab88e7e3_pushCompatiblityError(_1ab883573_sema* _self_, jule::Ptr<_1ab939816_Type>* _78142_dest, jule::Ptr<_1ab906a8b_Data>* _78160_src, jule::Ptr<_1ab6a54d8_Token>* _7828_errorToken);
inline jule::Bool _1ab88ec99_checkTypeCompatibility1(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab939816_Type>* _79945_dest, jule::Ptr<_1ab906a8b_Data>* _79963_src, jule::Ptr<_1ab6a54d8_Token>* _8008_errorToken);
inline jule::Ptr<_1ab939816_Type> _1ab890250_buildNonGenericType(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _81441_ast, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1ab939816_Type>>* _81544_ignored);
inline jule::Bool _1ab89064b_buildFnNonGenericTypes(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns> _82643_f, jule::Slice<jule::Ptr<_1ab939816_Type>>* _82659_ignored);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab89098c_getTraitCheckFnKind(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _84941_f);
inline jule::Bool _1ab890e43_checkConstraintsFn(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _87840_f, jule::Ptr<_1ab6a54d8_Token>* _87856_et, jule::Ptr<_1ab08c9a3_FnIns> _87879_exist);
inline jule::Bool _1ab8913e9_checkConstraintsStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _89244_s, jule::Ptr<_1ab6a54d8_Token>* _89264_et, jule::Ptr<_1a37a53d2_StructIns> _89287_exist);
inline jule::Bool _1ab8917e5_basicFnEnvironment(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*> _90951_algo);
inline jule::Bool _1ab891be1_fnEnvironment(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*> _92946_algo);
inline void _1ab891e99_checkFnParamKind(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08b84d_ParamIns>* _94138_p);
inline jule::Bool _1ab8922da_reloadFnInsTypes(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns> _94837_f);
inline jule::Bool _1ab892791_checkRefValidityForInitExpr(jule::Ptr<_1ab883573_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1ab906a8b_Data>* _98864_d, jule::Ptr<_1ab6a54d8_Token>* _98879_errorToken);
inline jule::Bool _1ab892ad2_isMutRiskyStruct(_1ab883573_sema* _self_, jule::Ptr<_1a37a53d2_StructIns>* _100529_s);
inline jule::Bool _1ab8931ed_checkValidityForInitExpr(jule::Ptr<_1ab883573_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1ab939816_Type>* _10334_leftKind, jule::Ptr<_1ab906a8b_Data>* _103326_d, jule::Ptr<_1ab6a54d8_Token>* _103341_errorToken);
inline jule::Bool _1ab8935e9_checkTypeAliasDeclKind(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _106044_ta, jule::Trait _106064_l);
inline void _1ab89395c_checkTypeAliasDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _108340_ta, jule::Trait _108360_l);
inline void _1ab893c15_checkTypeAliasDeclDup(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _109143_ta);
inline jule::Bool _1ab893e9b_checkTypeAliasDecls(jule::Ptr<_1ab883573_sema> _self_);
inline void _1b07d4448_checkEnumItemsDup(_1ab883573_sema* _self_, jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _111536_items);
inline void _1b07e2489_checkEnumItemsDup(_1ab883573_sema* _self_, jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> _111536_items);
inline void _1ab89450c_checkEnumItemsStr(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0977b0_Enum>* _113539_e);
inline void _1b07b3427_checkEnumItemInt(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab9087b3_eval>* _116243_eval, jule::Ptr<_1ab0977b0_Enum>* _116261_e, jule::Ptr<_1ab94292e_Prim>* _116272_prim, jule::Ptr<_1ab096c54_EnumItem>* _116290_item, jule::U64* _1162112_n);
inline void _1b07c3e82_checkEnumItemInt(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab9087b3_eval>* _116243_eval, jule::Ptr<_1ab0977b0_Enum>* _116261_e, jule::Ptr<_1ab94292e_Prim>* _116272_prim, jule::Ptr<_1ab096c54_EnumItem>* _116290_item, jule::I64* _1162112_n);
inline void _1b07ae5aa_checkEnumItemsInt1(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab94292e_Prim>* _119841_prim, jule::Ptr<_1ab0977b0_Enum>* _119859_e);
inline void _1b07ae896_checkEnumItemsInt1(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab94292e_Prim>* _119841_prim, jule::Ptr<_1ab0977b0_Enum>* _119859_e);
inline void _1ab8951ab_checkEnumItemsInt(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0977b0_Enum>* _123339_e);
inline void _1ab895464_checkEnumDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0977b0_Enum>* _124335_e);
inline void _1ab89571c_checkTypeEnumDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab098eba_TypeEnum>* _128439_e);
inline jule::Bool _1ab8959a3_checkEnumDecls(jule::Ptr<_1ab883573_sema> _self_);
inline jule::Bool _1ab895c39_checkTypeEnumDecls(jule::Ptr<_1ab883573_sema> _self_);
inline jule::Bool _1ab89607a_checkDeclGenerics(_1ab883573_sema* _self_, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _134734_generics);
inline jule::Bool _1ab8963bb_checkFnDeclParamsDup(_1ab883573_sema* _self_, jule::Ptr<_1ab0898e5_Fn>* _137437_f);
inline jule::Bool _1ab89670c_checkFnDeclResultDup(_1ab883573_sema* _self_, jule::Ptr<_1ab0898e5_Fn>* _141137_f);
inline jule::Bool _1ab896a4d_checkFnVariadicParam(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _145642_f);
inline void _1ab896d06_checkFnDeclPrototype(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _146942_f);
inline jule::Bool _1ab8972ac_catchTraitInheritCycle(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait> _149139_t1, jule::Ptr<_1ab095109_Trait> _149155_t2, _1a387dcd5_Builder* _149172_message);
inline jule::Bool _1ab8975ed__checkTraitDeclInherits(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _151045_t);
inline void _1ab8978a6_checkTraitDeclInherits(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _155144_t);
inline void _1ab897b5e_checkTraitDeclMethod(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _157642_f);
inline void _1ab897e17_checkTraitDeclMethods(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _159043_t);
inline void _1ab8981c0_checkTraitDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _162636_t);
inline jule::Bool _1ab898456_checkTraitDecls(jule::Ptr<_1ab883573_sema> _self_);
inline jule::Bool _1ab898852_checkTraitImplMethods(_1ab883573_sema* _self_, jule::Ptr<_1ab095109_Trait>* _165042_base, jule::Ptr<_1ab8315ba_Impl>* _165057_ipl);
inline jule::Bool _1ab898c4d_implToStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _166134_dest, jule::Ptr<_1ab8315ba_Impl>* _166154_ipl);
inline void _1ab899006_implTrait(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8315ba_Impl>* _170331_decl);
inline void _1ab8992ae_implStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8315ba_Impl>* _174632_decl);
inline void _1ab899567_implImpl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8315ba_Impl>* _177030_decl);
inline void _1ab8998ca_checkVarDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _178134_decl, jule::Trait _178150_l);
inline void _1ab899b83_checkGlobalVarDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _182740_decl);
inline jule::Bool _1ab899e19_checkGlobalDecls(jule::Ptr<_1ab883573_sema> _self_);
inline jule::Bool _1ab89a315_checkStructTraitImpl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _185542_strct, jule::Ptr<_1ab095109_Trait>* _185563_trt);
inline jule::Bool _1ab89a656_checkStructImpls(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _188138_s);
inline jule::Bool _1ab89a997_checkStructFields(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _188939_st);
inline void _1ab89ac50_checkStructDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _190637_s);
inline jule::Bool _1ab89aed6_checkStructDecls(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab89b28e_checkAnonFuncDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _193639_f);
inline void _1ab89b547_checkFuncDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _194135_f);
inline jule::Bool _1ab89b888_checkFuncDeclsBy(jule::Ptr<_1ab883573_sema> _self_, jule::Slice<jule::Ptr<_1ab0898e5_Fn>>* _196338_funcs);
inline jule::Bool _1ab89bb1e_checkFuncDecls(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab89c03c_pushCycleError(_1ab883573_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _1a387dcd5_Builder* _197953_message);
inline void _1ab89c6e1_checkPackageDecls(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab89ca54_checkDataForTypeInference(_1ab883573_sema* _self_, jule::Ptr<_1ab906a8b_Data>* _203942_d, jule::Ptr<_1ab6a54d8_Token>* _203953_errToken);
inline void _1ab89cd0c_checkVarValue(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _205135_v);
inline void _1ab89d170_evalVarValue(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _210434_decl, jule::Trait _210450_l);
inline void _1ab89d4d3_checkVar(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _212130_decl, jule::Trait _212146_l);
inline void _1ab89d6d1_checkGlobals(jule::Ptr<_1ab883573_sema> _self_);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab89dacc_readyToCheckFn(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _214436_s, jule::Ptr<_1ab0898e5_Fn>* _214456_f);
inline __jule_tuple_bool__jule_tuple_bool _1ab89dec8_checkGenericFn(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _216036_f, jule::Ptr<_1ab6a54d8_Token>* _216052_et);
inline void _1ab89e33b_checkTypeMethod(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _218337_s, jule::Ptr<_1ab0898e5_Fn>* _218357_f);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab89e7e2_checkStructInsOp(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _219638_s, jule::Ptr<_1ab0898e5_Fn>* _219658_f, jule::Fn<jule::Bool,jule::Ptr<_1ab0898e5_Fn>> _219666_p);
inline jule::Bool _1ab89ebdd_checkStructEnv(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _220636_s, jule::Ptr<_1ab6a54d8_Token> _220655_errorToken);
inline jule::Bool _1ab8a00d9_precheckStructIns(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _230339_s, jule::Ptr<_1ab6a54d8_Token> _230358_errorToken);
inline void _1ab8a0392_checkStructIns(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _234036_s);
inline void _1ab8a064a_checkTypeStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _234637_s);
inline void _1ab8a0848_checkStructTypes(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a0b01_checkStructInsOperators(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns> _237044_s);
inline void _1ab8a0da9_precheckStructType(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _243440_s);
inline void _1ab8a10a7_precheckStructTypes(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a1360_checkRets(_1ab883573_sema* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _246330_f);
inline void _1ab8a16c3_checkFnInsSc(_1ab883573_sema* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _247433_f, jule::Ptr<_1ab83ce67_scopeChecker>* _247449_sc);
inline void _1ab8a1a36_checkFnInsCaller(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _248738_f, jule::Ptr<_1ab6a54d8_Token> _248753_caller);
inline void _1ab8a1cde_checkFnIns(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _250932_f);
inline void _1ab8a2097_checkFunc(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _251331_f);
inline void _1ab8a2350_checkTestFn(_1ab883573_sema* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _252832_f);
inline void _1ab8a2608_precheckFunc(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _256134_f);
inline void _1ab8a2806_precheckFuncs(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a2a04_checkFuncs(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a2c02_checkPackageTypes(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a2e00_setFileSemaFields(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a30ed_setSemaFields(jule::Ptr<_1ab883573_sema> _self_);
inline void _1ab8a33a6_check(jule::Ptr<_1ab883573_sema> _self_, jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _263927_files);
inline _1ab8a37a2_missingRetChecker static__1ab8a3b9d_new(void);
inline jule::Bool _1ab8a3eab_checkConditional(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab836812_Conditional> _268732_c);
inline jule::Bool _1ab8a42ec_checkMatch(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab83a409_Match> _269926_m);
inline jule::Bool _1ab8a46e8_checkInfIter(_1ab8a37a2_missingRetChecker* _self_, jule::Uintptr _272524_it, jule::Ptr<_1ab835bc9_Scope>* _272542_s);
inline jule::Bool _1ab8a4a39_checkScope(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab835bc9_Scope> _274326_s);
inline jule::Bool _1ab8a4d7a_check(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab835bc9_Scope> _279821_s);
inline jule::Bool _1ab8a7696_IsInitialized(_1ab8a7289_Var* _self_);
inline jule::Bool _1ab8a792c_IsTypeInferred(_1ab8a7289_Var* _self_);
inline jule::Bool _1ab8a7bb3_untypedConstant(_1ab8a7289_Var* _self_);
inline jule::Bool static__1ab8a8752_Str(jule::Ptr<_1ab0898e5_Fn> _1016_f);
inline jule::Bool static__1ab8a8ac6_logical(jule::Ptr<_1ab0898e5_Fn>* _3221_f, jule::Str _3229_ident);
inline jule::Bool static__1ab8a8d90_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _5815_f);
inline jule::Bool static__1ab8a9159_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _6315_f);
inline jule::Bool static__1ab8a9423_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _6817_f);
inline jule::Bool static__1ab8a96dc_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _7315_f);
inline jule::Bool static__1ab8a99a6_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _7817_f);
inline jule::Bool static__1ab8a9d2a_result(jule::Ptr<_1ab0898e5_Fn>* _8220_f, jule::Str _8228_ident);
inline jule::Bool static__1ab8aa0e4_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _10416_f);
inline jule::Bool static__1ab8aa3ad_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _10916_f);
inline jule::Bool static__1ab8aa677_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _11416_f);
inline jule::Bool static__1ab8aa941_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _11916_f);
inline jule::Bool static__1ab8aac0a_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _12416_f);
inline jule::Bool static__1ab8aaec4_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _12916_f);
inline jule::Bool static__1ab8ab28d_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _13416_f);
inline jule::Bool static__1ab8ab557_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _13919_f);
inline jule::Bool static__1ab8ab821_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _14418_f);
inline jule::Bool static__1ab8abada_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _14919_f);
inline jule::Bool static__1ab8abe5e_unary(jule::Ptr<_1ab0898e5_Fn>* _15319_f, jule::Str _15327_ident);
inline jule::Bool static__1ab8ac228_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _17316_f);
inline jule::Bool static__1ab8ac4e2_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _17816_f);
inline jule::Bool static__1ab8ac7ab_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _18319_f);
inline jule::Bool static__1ab8acb30_assign(jule::Ptr<_1ab0898e5_Fn>* _18720_f, jule::Str _18728_ident);
inline jule::Bool static__1ab8acde9_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _20722_f);
inline jule::Bool static__1ab8ad1b3_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _21222_f);
inline jule::Bool static__1ab8ad47c_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _21722_f);
inline jule::Bool static__1ab8ad746_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _22222_f);
inline jule::Bool static__1ab8ada10_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _22722_f);
inline jule::Bool static__1ab8adcc9_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _23222_f);
inline jule::Bool static__1ab8ae093_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _23722_f);
inline jule::Bool static__1ab8ae35c_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _24224_f);
inline jule::Bool static__1ab8ae626_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _24725_f);
inline jule::Bool static__1ab8ae8e0_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _25225_f);
inline void _1ab8e35d3_pushErr(_1ab8e30a5_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1ab8e3869_checkTrait(_1ab8e30a5_typeCompatibilityChecker* _self_);
inline jule::Bool _1ab8e3b00_checkPtr(_1ab8e30a5_typeCompatibilityChecker* _self_);
inline jule::Bool _1ab8e3d86_checkPrim(_1ab8e30a5_typeCompatibilityChecker* _self_);
inline jule::Bool _1ab8e4282_typeEnum(_1ab8e30a5_typeCompatibilityChecker* _self_, jule::Ptr<_1ab098eba_TypeEnum>* _18725_e, jule::Ptr<_1ab939816_Type>* _18744_t2);
inline jule::Bool _1ab8e4518_checkTypeEnum(_1ab8e30a5_typeCompatibilityChecker* _self_);
inline jule::Bool _1ab8e479e_check(_1ab8e30a5_typeCompatibilityChecker* _self_);
inline void _1ab8e53e8_pushErr(_1ab8e4e31_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1ab8e567e_checkValidity(_1ab8e4e31_assignTypeChecker* _self_);
inline jule::Bool _1ab8e5915_checkConst(_1ab8e4e31_assignTypeChecker* _self_);
inline jule::Bool _1ab8e5b9b_checkCompatibility(_1ab8e4e31_assignTypeChecker* _self_);
inline jule::Bool _1ab8e5e32_check(_1ab8e4e31_assignTypeChecker* _self_);
inline jule::Bool _1b09c8dce_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k);
inline jule::Bool _1b09c9176_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k);
inline jule::Bool _1b09d106d_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k);
inline jule::Bool _1b09db61c_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k);
inline jule::Bool _1ab8e7230_annotateConstraintMap(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _36642_k);
inline jule::Bool _1ab8e7571_annotateConstraintTup(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _38142_k);
inline jule::Bool _1ab8e78b2_annotateConstraintFn(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _39841_k);
inline jule::Bool _1ab8e7c03_annotateConstraintIdent(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _41944_k);
inline jule::Bool _1ab8e8044_annotateConstraint(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _44839_k);
inline void _1ab8e83a7_pushGeneric(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _47332_k, jule::I64 _47342_i);
inline jule::Bool _1ab8e86e8_annotatePrim(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _48840_k);
inline jule::Bool _1ab8e8a39_annotateArr(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _49239_k);
inline jule::Bool _1ab8e8d7a_annotateSlc(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _50239_k);
inline jule::Bool _1ab8e9276_checkMapKey(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _51238_k, jule::Ptr<_1ab939816_Type>* _51254_ck);
inline jule::Bool _1ab8e95b7_annotateMap(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _52039_k);
inline jule::Bool _1ab8e9908_annotateFn(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _53038_k);
inline jule::Bool _1ab8e9c49_annotatePtr(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _55939_k);
inline jule::Bool _1ab8ea08a_annotateSptr(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _56940_k);
inline jule::Bool _1ab8ea3cb_annotateStruct(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _57942_k);
inline jule::Bool _1ab8ea71c_annotateAny(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _60139_k);
inline jule::Bool _1ab8eaa5d_annotateKind(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _62240_k);
inline jule::Bool _1ab8eace4_annotate(_1ab8e6806_dynamicTypeAnnotation* _self_);
inline void _1ab8ebc07_pushErrToken(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab6a54d8_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1ab8ec06a_pushErr(_1ab8eb663_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _1ab8ec301_getParams(_1ab8eb663_fnCallArgChecker* _self_);
inline jule::Bool _1ab8ec642_checkCounts(_1ab8eb663_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>* _68428_params);
inline jule::Bool _1ab8ecae8_checkArg(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab08b84d_ParamIns>* _71629_p, jule::Ptr<_1ab906a8b_Data>* _71648_arg, jule::Ptr<_1ab6a54d8_Token>* _71665_errorToken);
inline jule::Bool _1ab8ecee4_push(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab08b84d_ParamIns>* _74525_p, jule::Ptr<_1ab6c4bab_Expr> _74543_arg);
inline jule::Bool _1ab8ed3e0_pushVariadic(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab08b84d_ParamIns>* _76933_p, jule::I64 _76951_i);
inline jule::Bool _1ab8ed731_checkArgs(_1ab8eb663_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>* _85030_params);
inline jule::Bool _1ab8ed9b7_checkDynamicTypeAnnotation(_1ab8eb663_fnCallArgChecker* _self_);
inline jule::Bool _1ab8edc4d_check(_1ab8eb663_fnCallArgChecker* _self_);
inline void _1ab8eeb2d_pushErr(_1ab8ee59a_structLitChecker* _self_, jule::Ptr<_1ab6a54d8_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1ab8eee91_pushSuggestion(_1ab8ee59a_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1ab9003ae_pushMatch(_1ab8ee59a_structLitChecker* _self_, jule::Ptr<_1a37a4832_FieldIns>* _93930_f, jule::Ptr<_1ab906a8b_Data>* _93949_d, jule::Ptr<_1ab6a54d8_Token>* _93964_errorToken);
inline void _1ab900722_checkPair(_1ab8ee59a_structLitChecker* _self_, jule::Ptr<_1a378a340_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _95862_exprs);
inline jule::Bool _1ab900a63_readyExprs(_1ab8ee59a_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _99731_exprs);
inline void _1ab900d1b_check(_1ab8ee59a_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _102126_exprs);
inline jule::Ptr<_1ab8a7289_Var> _1ab901899_buildVar(_1ab90137c_rangeChecker* _self_, jule::Ptr<_1a3794a0e_VarDecl>* _109725_decl);
inline void _1ab901a97_setSizeKey(_1ab90137c_rangeChecker* _self_);
inline void _1ab901eb5_checkRangeExprValidity(_1ab90137c_rangeChecker* _self_, jule::Ptr<_1ab906a8b_Data>* _111643_d, jule::Ptr<_1ab8a7289_Var>* _111654_key, jule::Ptr<_1ab939816_Type>* _111670_k);
inline void _1ab9021b3_checkSlice(_1ab90137c_rangeChecker* _self_);
inline void _1ab9023b1_checkArray(_1ab90137c_rangeChecker* _self_);
inline void _1ab9025ae_checkMapKeyA(_1ab90137c_rangeChecker* _self_);
inline void _1ab9027ac_checkMapKeyB(_1ab90137c_rangeChecker* _self_);
inline void _1ab9029aa_checkMap(_1ab90137c_rangeChecker* _self_);
inline void _1ab902ba8_checkStr(_1ab90137c_rangeChecker* _self_);
inline void _1ab902da6_checkComptime(_1ab90137c_rangeChecker* _self_);
inline jule::Bool _1ab90313c_checkComptimeRange(_1ab90137c_rangeChecker* _self_);
inline jule::Bool _1ab9033c3_check(_1ab90137c_rangeChecker* _self_);
inline void _1ab904050_prepareTypes(_1ab903add_retTypeChecker* _self_);
inline void _1ab904308_prepareExprs(_1ab903add_retTypeChecker* _self_, jule::Ptr<_1ab6c4bab_Expr>* _127533_e);
inline void _1ab904506_checkExprs(_1ab903add_retTypeChecker* _self_);
inline jule::Bool _1ab90478c_tryFuncMultiRetForward(_1ab903add_retTypeChecker* _self_);
inline jule::Bool _1ab904acd_check(_1ab903add_retTypeChecker* _self_, jule::Ptr<_1ab6c4bab_Expr>* _137726_e);
inline jule::Bool _1ab906ea9_IsNil(_1ab906a8b_Data* _self_);
inline jule::Bool _1ab907240_IsVoid(_1ab906a8b_Data* _self_);
inline jule::Bool _1ab9074c6_IsConst(_1ab906a8b_Data* _self_);
inline jule::Bool _1ab907817_GoodOperand(_1ab906a8b_Data* _self_, jule::Ptr<_1ab906a8b_Data>* _6128_other);
inline void _1ab908d46_pushErr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args);
inline void _1ab9091a9_pushSuggestion(_1ab9087b3_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args);
inline void _1ab9093a7_allowBuiltin(_1ab9087b3_eval* _self_);
inline void _1ab9095a5_disallowBuiltin(_1ab9087b3_eval* _self_);
inline jule::Bool _1ab90983b_isUnsafe(_1ab9087b3_eval* _self_);
inline jule::Bool _1ab909ac2_isGlobal(_1ab9087b3_eval* _self_);
inline jule::Bool _1ab909dd0_applyNumericPrefix(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _12439_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab90a221_litStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _15919_l);
inline jule::Ptr<_1ab906a8b_Data> _1ab90a562_litRune(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _17620_l);
inline jule::Ptr<_1ab906a8b_Data> _1ab90a8a3_litFloat(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _19521_l);
inline jule::Ptr<_1ab906a8b_Data> _1ab90abe4_litInt(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _20723_l);
inline jule::Ptr<_1ab906a8b_Data> _1ab90b035_litNum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _26223_l);
inline jule::Ptr<_1ab906a8b_Data> _1ab90b376_evalLit(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr> _27123_lit);
inline jule::Any _1ab90b6b7_findBuiltins(_1ab9087b3_eval* _self_, jule::Str* _28429_ident);
inline jule::Any _1ab90bab3_getDef(_1ab9087b3_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded);
inline jule::Ptr<_1ab854577_ReferenceStack> _1ab90bd49_getOwnerRefers(_1ab9087b3_eval* _self_);
inline void _1b0b72d47_pushReference(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _36937_ref);
inline void _1b0b895cd_pushReference(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _36937_ref);
inline void _1b0c71b9e_pushReference(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a53d2_StructIns>* _36937_ref);
inline jule::Ptr<_1ab906a8b_Data> _1ab90c443__evalEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0977b0_Enum> _37625_enm);
inline jule::Ptr<_1ab906a8b_Data> _1ab90c83e_evalEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0977b0_Enum> _38528_enm, jule::Ptr<_1ab6a54d8_Token> _38540_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab90cb80__evalTypeEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab098eba_TypeEnum> _39429_enm);
inline jule::Ptr<_1ab906a8b_Data> _1ab90d07b_evalTypeEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab098eba_TypeEnum> _40332_enm, jule::Ptr<_1ab6a54d8_Token> _40348_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab90d3bc__evalStruct(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a53d2_StructIns> _41227_s);
inline jule::Ptr<_1ab906a8b_Data> _1ab90d7b8_evalStruct(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a2577_Struct> _42630_s, jule::Ptr<_1ab6a54d8_Token> _42646_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab90db09_evalFnIns(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns> _45525_f);
inline void _1ab90de6c_checkDeprecated(_1ab9087b3_eval* _self_, jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _46436_directives, jule::Ptr<_1ab6a54d8_Token> _46467_tok);
inline jule::Ptr<_1ab906a8b_Data> _1ab90e368_evalFn(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0898e5_Fn> _48026_f, jule::Ptr<_1ab6a54d8_Token> _48034_errorToken);
inline void _1ab90e786_pushIllegalCycleError(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _50538_v1, jule::Ptr<_1ab8a7289_Var>* _50549_v2, _1a387dcd5_Builder* _50564_message);
inline jule::Bool _1ab90eb82_checkCrossCycle(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _51532_v, _1a387dcd5_Builder* _51546_message);
inline jule::Bool _1ab91007d_checkIllegalCycles(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _53239_v, jule::Ptr<_1ab6a54d8_Token> _53248_declToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab910479_evalVar(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var> _56027_v, jule::Ptr<_1ab6a54d8_Token> _56036_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab910875_evalTypeAlias(_1ab9087b3_eval* _self_, jule::Ptr<_1ab938a24_TypeAlias> _66033_ta, jule::Ptr<_1ab6a54d8_Token> _66049_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab910c71_evalDef(_1ab9087b3_eval* _self_, jule::Any* _69928_def, jule::Ptr<_1ab6a54d8_Token> _69942_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab9110b2_evalIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c64c6_IdentExpr> _72329_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab911403_evalUnary(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c6c68_UnaryExpr> _72830_u);
inline jule::Ptr<_1ab906a8b_Data> _1ab911744_evalVariadic(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c7142_VariadicExpr> _73333_v);
inline jule::Ptr<_1ab906a8b_Data> _1ab911a85_evalUnsafe(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c6020_UnsafeExpr> _75531_u);
inline jule::Ptr<_1ab906a8b_Data> _1ab911dc6_evalArr(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378c386_SliceExpr> _76328_s);
inline jule::Ptr<_1ab906a8b_Data> _1ab91237c_evalExpSlc(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378c386_SliceExpr> _84031_s, jule::Ptr<_1ab939816_Type> _84055_t, jule::Any _84069_first);
inline jule::Ptr<_1ab906a8b_Data> _1ab9126bd_evalSliceExpr(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378c386_SliceExpr> _87834_s);
inline jule::Bool _1ab912ab9_checkIntegerIndexingByData(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _91447_d, jule::Ptr<_1ab6a54d8_Token> _91461_token);
inline void _1ab912ed7_indexingPtr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _92732_d, jule::Ptr<_1ab906a8b_Data>* _92747_index, jule::Ptr<_1a378cdae_IndexingExpr>* _92766_i);
inline void _1ab913405_indexingArr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _94332_d, jule::Ptr<_1ab906a8b_Data>* _94347_index, jule::Ptr<_1a378cdae_IndexingExpr>* _94366_i);
inline void _1ab913823_indexingSlc(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _95332_d, jule::Ptr<_1ab906a8b_Data>* _95347_index, jule::Ptr<_1a378cdae_IndexingExpr>* _95366_i);
inline void _1ab913c41_indexingMap(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _97632_d, jule::Ptr<_1ab906a8b_Data>* _97647_index, jule::Ptr<_1a378cdae_IndexingExpr>* _97666_i);
inline void _1ab91415e_indexingStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _99332_d, jule::Ptr<_1ab906a8b_Data>* _99347_index, jule::Ptr<_1a378cdae_IndexingExpr>* _99366_i);
inline void _1ab91457c_comptimeRange(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _102134_d, jule::Ptr<_1ab906a8b_Data>* _102149_index, jule::Ptr<_1a378cdae_IndexingExpr>* _102168_i);
inline void _1ab91499a_toIndexing(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _104631_d, jule::Ptr<_1ab906a8b_Data>* _104646_index, jule::Ptr<_1a378cdae_IndexingExpr>* _104665_i);
inline jule::Bool _1ab914e51_pushGenericsFromExprSubIdent(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3788c34_SubIdentExpr>* _107450_sexpr, jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>* _10758_generics, jule::Ptr<_1ab6c4bab_Expr>* _107541_expr);
inline jule::Bool _1ab91534c_pushGenericsFromData(jule::Ptr<_1ab9087b3_eval> _self_, jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>* _108542_generics, jule::Ptr<_1ab6c4bab_Expr>* _108575_expr);
inline void _1ab9156b0_evalIdentDeclFromIndexing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab906a8b_Data>* _115547_d, jule::Ptr<_1a378cdae_IndexingExpr>* _115562_i);
inline __jule_tuple_bool__jule_tuple_bool _1ab915b66_checkGenericFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _119836_f, jule::Ptr<_1ab6a54d8_Token>* _119852_et, jule::Any* _119876_model);
inline void _1ab915ec9_evalFnGenericFromIndexing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab906a8b_Data>* _121447_d, jule::Ptr<_1a378cdae_IndexingExpr>* _121462_i);
inline jule::Ptr<_1ab906a8b_Data> _1ab91631a_evalIndexing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378cdae_IndexingExpr> _125433_i);
inline __jule_tuple_x_1ab906a8b_Data__jule_tuple_x_1ab906a8b_Data _1ab91665b_evalSlicingExprs(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378d51e_SlicingExpr>* _131438_s);
inline void _1ab916914_slicingArr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _135027_d);
inline void _1ab916d32_slicingStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _136527_d, jule::Ptr<_1ab906a8b_Data>* _136538_l, jule::Ptr<_1ab906a8b_Data>* _136549_r);
inline void _1ab91730a_checkSlicing(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _140333_d, jule::Ptr<_1ab906a8b_Data>* _140344_l, jule::Ptr<_1ab906a8b_Data>* _140355_r, jule::Ptr<_1a378d51e_SlicingExpr>* _140366_s);
inline jule::Ptr<_1ab906a8b_Data> _1ab91764b_evalSlicing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378d51e_SlicingExpr> _142232_s);
inline void _1ab917a69_castPtr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _145927_t, jule::Ptr<_1ab906a8b_Data> _145941_d, jule::Ptr<_1ab6a54d8_Token> _145951_errorToken);
inline void _1ab917e87_castStruct(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _148130_t, jule::Ptr<_1ab906a8b_Data> _148144_d, jule::Ptr<_1ab6a54d8_Token> _148154_errorToken);
inline void _1ab9183a5_castRef(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _149827_t, jule::Ptr<_1ab906a8b_Data> _149841_d, jule::Ptr<_1ab6a54d8_Token> _149851_errorToken);
inline void _1ab9187c3_castSlc(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _152127_t, jule::Ptr<_1ab906a8b_Data> _152141_d, jule::Ptr<_1ab6a54d8_Token> _152151_errorToken);
inline void _1ab918b36_castStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _157627_d, jule::Ptr<_1ab6a54d8_Token> _157637_errorToken);
inline void _1ab919054_castInt(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _162327_t, jule::Ptr<_1ab906a8b_Data> _162341_d, jule::Ptr<_1ab6a54d8_Token> _162351_errorToken);
inline void _1ab919472_castNum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _166927_t, jule::Ptr<_1ab906a8b_Data> _166941_d, jule::Ptr<_1ab6a54d8_Token> _166951_errorToken);
inline void _1ab919890_castPrim(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _170028_t, jule::Ptr<_1ab906a8b_Data> _170042_d, jule::Ptr<_1ab6a54d8_Token> _170052_errorToken);
inline void _1ab919c03_castConstant(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type>* _171633_t, jule::Ptr<_1ab906a8b_Data>* _171648_d);
inline void _1ab91a121_castTypeEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type>* _172533_t, jule::Ptr<_1ab906a8b_Data>* _172548_d, jule::Ptr<_1ab6a54d8_Token>* _172563_errorToken);
inline void _1ab91a53e_castTypeEnumT(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type>* _173534_t, jule::Ptr<_1ab906a8b_Data>* _173549_d, jule::Ptr<_1ab6a54d8_Token>* _173564_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab91a9e5_evalCastByTypeNData(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _174539_t, jule::Ptr<_1ab906a8b_Data> _174553_d, jule::Ptr<_1ab6a54d8_Token> _174567_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab91ae9b_evalCastT(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab939816_Type>* _182231_t, jule::Ptr<_1ab6c4bab_Expr>* _182246_e, jule::Ptr<_1ab6a54d8_Token>* _182266_et);
inline jule::Ptr<_1ab906a8b_Data> _1ab91b2dc_evalCast(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3788481_CastExpr> _183929_c);
inline jule::Ptr<_1ab906a8b_Data> _1ab91b62d_evalNamespace(_1ab9087b3_eval* _self_, jule::Ptr<_1a378885a_NamespaceExpr> _184833_s);
inline jule::Ptr<_1ab906a8b_Data> _1ab91bad4_evalStructLitExplicit(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a37a53d2_StructIns> _186742_s, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _18687_exprs, jule::Ptr<_1ab6a54d8_Token> _186832_errorToken);
inline jule::Ptr<_1ab906a8b_Data> _1ab91be25_evalStructLit(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378ab6a_StructLit> _190534_lit);
inline _1ab94bc13_typeChecker _1ab91c1ab_typeChecker(_1ab9087b3_eval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab91c4ec_evalType(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c0877_TypeDecl> _193728_t);
inline void _1ab91c860_callTypeFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr>* _195032_fc, jule::Ptr<_1ab906a8b_Data>* _195059_d);
inline void _1ab91cbc3_callBuiltinFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr>* _197635_fc, jule::Ptr<_1ab906a8b_Data>* _197662_d);
inline void _1ab91d036_checkFnOfConcurrentCall(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _198840_f, jule::Ptr<_1ab6a54d8_Token> _198851_errorToken);
inline void _1ab91d454_processExceptionalHandler(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _200746_f, jule::Ptr<_1a378984a_FnCallExpr>* _200762_fc, jule::Ptr<_1ab906a8b_Data>* _200789_d);
inline void _1ab91d7b7_callFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr>* _203428_fc, jule::Ptr<_1ab906a8b_Data>* _203455_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab91db08_evalFnCall(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr> _218331_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab91e004_evalEnumStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0977b0_Enum> _221634_enm, jule::Ptr<_1ab6a54d8_Token> _221650_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab91e400_evalTypeEnumStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab098eba_TypeEnum> _222438_enm, jule::Ptr<_1ab6a54d8_Token> _222454_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab91e7eb_evalStructStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a53d2_StructIns> _224736_s, jule::Ptr<_1ab6a54d8_Token> _224751_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab91eca2_evalTraitSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _228237_d, jule::Ptr<_1ab095109_Trait> _228251_trt, jule::Ptr<_1ab6a54d8_Token> _228268_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab920313_evalStructSubIdentField(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _230444_d, jule::Ptr<_1a37a53d2_StructIns>* _230459_s, jule::Ptr<_1ab6a54d8_Token>* _230479_tok, jule::Ptr<_1a37a4832_FieldIns>* _2304104_f);
inline jule::Ptr<_1ab906a8b_Data> _1ab92092e_evalStructSubIdentMethod(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _232945_d, jule::Ptr<_1a37a53d2_StructIns>* _232960_s, jule::Ptr<_1ab6a54d8_Token>* _232980_tok, jule::Ptr<_1ab0898e5_Fn>* _2329105_m, jule::Bool _2329113_ref);
inline jule::Ptr<_1ab906a8b_Data> _1ab920e90_evalStructSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _235038_d, jule::Ptr<_1a37a53d2_StructIns> _235052_s, jule::Ptr<_1a3788c34_SubIdentExpr> _235071_si, jule::Bool _235095_ref);
inline jule::Ptr<_1ab906a8b_Data> _1ab9212d1_evalIntTypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _237433_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab921622_evalUintTypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _240134_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab921963_evalI8TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _241932_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab921ca4_evalI16TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _244833_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab9220e5_evalI32TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _247733_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab922436_evalI64TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _250633_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab922777_evalU8TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _253532_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab922ab8_evalU16TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _255433_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab922e09_evalU32TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _257333_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab92324a_evalU64TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _259233_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab92358b_evalF32TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _261133_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab9238cc_evalF64TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _265033_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab923cc8_evalPrimStatic(_1ab9087b3_eval* _self_, jule::Str _268930_kind, jule::Ptr<_1ab6a54d8_Token> _268941_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab9241c4_evalTypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _272134_d, jule::Ptr<_1a3788c34_SubIdentExpr> _272148_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0da9db4_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab129bc7_comptimeTypeInfo>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0dae67c_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab11a833_comptimeStructField>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0db3e01_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab121c79_comptimeEnumField>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0db86b9_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab124a90_comptimeParam>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0dbd081_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab11da56_comptimeStatic>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0dc2805_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab130ccc_comptimeValue>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0dc7079_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab1354a7_comptimeFile>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1ab906a8b_Data> _1b0dcb886_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab1393bd_comptimeDecl>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si);
inline __jule_tuple_x_1ab906a8b_Data__jule_tuple_bool _1ab924a76_tryComptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _274543_d, jule::Ptr<_1a3788c34_SubIdentExpr> _274557_si);
inline jule::Ptr<_1ab906a8b_Data> _1ab924e72_evalObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _277635_d, jule::Ptr<_1a3788c34_SubIdentExpr> _277649_si);
inline jule::Ptr<_1ab906a8b_Data> _1ab9252b3_evalSubIdent(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3788c34_SubIdentExpr> _282033_si);
inline jule::Ptr<_1ab906a8b_Data> _1ab925604_evalTuple(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c57a0_TupleExpr> _283430_tup);
inline jule::Ptr<_1ab906a8b_Data> _1ab925a00_evalMap(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab9485c2_Map> _286328_m, jule::Ptr<_1a378b121_BraceLit> _286341_lit);
inline jule::Ptr<_1ab906a8b_Data> _1ab925d41_evalBraceLit(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378b121_BraceLit> _291133_lit);
inline jule::Ptr<_1ab906a8b_Data> _1ab926182_evalAnonFunc(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3793854_FnDecl> _292633_decl);
inline jule::Ptr<_1ab906a8b_Data> _1ab9264c3_evalBinary(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a37891da_BinaryExpr> _296431_op);
inline jule::Ptr<_1ab906a8b_Data> _1ab926814_evalExprKind(jule::Ptr<_1ab9087b3_eval> _self_, jule::Any _297933_kind);
inline jule::Ptr<_1ab906a8b_Data> _1ab926b55_eval1(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _302726_expr);
inline jule::Ptr<_1ab906a8b_Data> _1ab926e96_eval(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _307225_expr);
inline jule::Ptr<_1ab906a8b_Data> _1ab9272d7_evalExpr1(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _308730_expr);
inline jule::Ptr<_1ab906a8b_Data> _1ab927628_evalExpr(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _310329_expr);
inline _1ab927aac_unaryEval static__1ab928030_new(jule::Ptr<_1ab9087b3_eval> _312420_e);
inline void _1ab92822d_minus(_1ab927aac_unaryEval* _self_);
inline void _1ab92842b_plus(_1ab927aac_unaryEval* _self_);
inline void _1ab928629_caret(_1ab927aac_unaryEval* _self_);
inline void _1ab928827_excl(_1ab927aac_unaryEval* _self_);
inline void _1ab928a25_star(_1ab927aac_unaryEval* _self_);
inline void _1ab928c23_amper(_1ab927aac_unaryEval* _self_);
inline void _1ab928e21_typeDecl(_1ab927aac_unaryEval* _self_);
inline void _1ab92911e_evalData(_1ab927aac_unaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab929460_eval(_1ab927aac_unaryEval* _self_, jule::Ptr<_1ab6c6c68_UnaryExpr> _341124_u);
inline _1ab929a48_binaryEval static__1ab92a131_newPlain(jule::Ptr<_1ab9087b3_eval> _345925_e);
inline _1ab929a48_binaryEval static__1ab92a4a5_new(jule::Ptr<_1ab9087b3_eval> _346520_e, jule::Ptr<_1ab6a54d8_Token> _346534_op);
inline jule::Bool _1ab92a73b_checkTypeCompatibility(_1ab929a48_binaryEval* _self_);
inline jule::Bool _1ab92a9c2_checkStructCommonOperatorCompatibility(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92ac58_evalComptimeTypeInfo(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92aede_evalNil(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92b275_evalEnum(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92b50b_evalTypeEnum(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92b792_evalSptr(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92ba28_evalPtr(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92bcae_evalArr(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92c045_evalStruct(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92c2cb_evalTrait(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92c562_evalAny(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92c7e8_evalBool(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92ca7e_evalStr(_1ab929a48_binaryEval* _self_);
inline void _1ab92cc7c_setTypeToGreater(_1ab929a48_binaryEval* _self_);
inline void _1ab92d035_checkModData(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _386433_d);
inline void _1ab92d233_mod(_1ab929a48_binaryEval* _self_);
inline jule::Bool _1ab92d62e_numbersAreCompatibile(_1ab929a48_binaryEval* _self_, jule::Str* _388634_lk, jule::Str* _388644_rk);
inline jule::Ptr<_1ab906a8b_Data> _1ab92d8b5_shift(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92db4b_evalFloat(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92ddd2_evalInt(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92e168_evalPrim(_1ab929a48_binaryEval* _self_);
inline jule::Bool _1ab92e3ee_checkSpecialCases(_1ab929a48_binaryEval* _self_);
inline jule::Ptr<_1ab906a8b_Data> _1ab92e685_evalOp(_1ab929a48_binaryEval* _self_);
inline void _1ab92e93d_evalConst(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _417630_d);
inline void _1ab92ebe6_checkData(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _425430_d);
inline void _1ab92ede4_checkDatas(_1ab929a48_binaryEval* _self_);
inline void _1ab93019c_setModel(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _426629_d);
inline void _1ab930455_postEval(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _429529_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab930851_solveExplicit(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _430034_l, jule::Ptr<_1ab906a8b_Data>* _430049_r);
inline jule::Ptr<_1ab906a8b_Data> _1ab930b92_eval(_1ab929a48_binaryEval* _self_, jule::Ptr<_1a37891da_BinaryExpr>* _432025_op);
inline jule::Str _1ab939c12_Str(_1ab939816_Type* _self_);
inline jule::Bool _1ab93a053_Equal(jule::Ptr<_1ab939816_Type> _self_, jule::Ptr<_1ab939816_Type> _7218_other);
inline jule::Bool _1ab93a6b3_Binded(_1ab939816_Type* _self_);
inline jule::Bool _1ab93a949_IsNil(_1ab939816_Type* _self_);
inline jule::Bool _1ab93abd0_Void(_1ab939816_Type* _self_);
inline jule::Bool _1ab93ae66_Comparable(_1ab939816_Type* _self_);
inline jule::Bool _1ab93b1ec_Mutable(_1ab939816_Type* _self_);
inline jule::Bool _1ab93b483_Ordered(_1ab939816_Type* _self_);
inline jule::Bool _1ab93b719_NilCompatible(_1ab939816_Type* _self_);
inline jule::Bool _1ab93b9a0_GC(_1ab939816_Type* _self_);
inline jule::Bool _1ab93bc36_Variadicable(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab94292e_Prim> _1ab93bebc_Prim(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab94645a_Sptr> _1ab93c253_Sptr(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab949c22_Ptr> _1ab93c4d9_Ptr(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab0977b0_Enum> _1ab93c770_Enum(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab93ca06_TypeEnum(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab94924e_Arr> _1ab93cc8c_Arr(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab946e2d_Slc> _1ab93d023_Slc(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab93d2a9_Fn(_1ab939816_Type* _self_);
inline jule::Ptr<_1a37a53d2_StructIns> _1ab93d540_Struct(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab095109_Trait> _1ab93d7c6_Trait(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab9485c2_Map> _1ab93da5c_Map(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab947a22_Tuple> _1ab93dce3_Tup(_1ab939816_Type* _self_);
inline jule::Bool _1ab93e079_comptime(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab11c0c6_comptimeStructFields> _1ab93e310_comptimeStructFields(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab11a833_comptimeStructField> _1ab93e596_comptimeStructField(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab123088_comptimeEnumFields> _1ab93e82c_comptimeEnumFields(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab121c79_comptimeEnumField> _1ab93eab3_comptimeEnumField(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab1268e9_comptimeParams> _1ab93ed49_comptimeParams(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab124a90_comptimeParam> _1ab9400d0_comptimeParam(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab119cc7_comptimeRange> _1ab940366_comptimeRange(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab128258_comptimeTypeInfos> _1ab9405ec_comptimeTypeInfos(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab129bc7_comptimeTypeInfo> _1ab940883_comptimeTypeInfo(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab12030a_comptimeStatics> _1ab940b19_comptimeStatics(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab11da56_comptimeStatic> _1ab940da0_comptimeStatic(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab130ccc_comptimeValue> _1ab941136_comptimeValue(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab1393bd_comptimeDecl> _1ab9413bc_comptimeDecl(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab1370d0_comptimeDecls> _1ab941653_comptimeDecls(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab1354a7_comptimeFile> _1ab9418d9_comptimeFile(_1ab939816_Type* _self_);
inline jule::Ptr<_1ab133a38_comptimeFiles> _1ab941b70_comptimeFiles(_1ab939816_Type* _self_);
inline jule::Bool _1ab9423ce_checked(_1ab942027_TypeSym* _self_);
inline jule::Str _1ab942ca3_Str(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab9430e4_Equal(jule::Ptr<_1ab94292e_Prim> _self_, jule::Ptr<_1ab939816_Type> _51418_other);
inline jule::Bool _1ab943589_IsConstraint(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab943820_IsI8(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab943aa6_IsI16(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab943d3c_IsI32(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab9440c3_IsI64(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab944359_IsU8(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab9445e0_IsU16(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab944876_IsU32(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab944b0c_IsU64(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab944d93_IsF32(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab945129_IsF64(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab9453b0_IsInt(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab945646_IsUint(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab9458cc_IsUintptr(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab945b63_IsBool(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab945de9_IsStr(_1ab94292e_Prim* _self_);
inline jule::Bool _1ab946180_IsAny(_1ab94292e_Prim* _self_);
inline jule::Str _1ab946812_Str(_1ab94645a_Sptr* _self_);
inline jule::Bool _1ab946b53_Equal(jule::Ptr<_1ab94645a_Sptr> _self_, jule::Ptr<_1ab939816_Type> _59118_other);
inline jule::Str _1ab9473e5_Str(_1ab946e2d_Slc* _self_);
inline jule::Bool _1ab947736_Equal(jule::Ptr<_1ab946e2d_Slc> _self_, jule::Ptr<_1ab939816_Type> _61018_other);
inline jule::Str _1ab947dc9_Str(_1ab947a22_Tuple* _self_);
inline jule::Bool _1ab94821a_Equal(jule::Ptr<_1ab947a22_Tuple> _self_, jule::Ptr<_1ab939816_Type> _63918_other);
inline jule::Str _1ab948979_Str(_1ab9485c2_Map* _self_);
inline jule::Bool _1ab948cba_Equal(jule::Ptr<_1ab9485c2_Map> _self_, jule::Ptr<_1ab939816_Type> _67618_other);
inline jule::Str _1ab949606_Str(_1ab94924e_Arr* _self_);
inline jule::Bool _1ab949947_Equal(jule::Ptr<_1ab94924e_Arr> _self_, jule::Ptr<_1ab939816_Type> _70418_other);
inline jule::Str _1ab94a0c9_Str(_1ab949c22_Ptr* _self_);
inline jule::Bool _1ab94a41a_Equal(jule::Ptr<_1ab949c22_Ptr> _self_, jule::Ptr<_1ab939816_Type> _72818_other);
inline jule::Bool _1ab94a78e_IsUnsafe(_1ab949c22_Ptr* _self_);
inline void _1ab94c494_pushErr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6a54d8_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1ab94c692_allowBuiltin(_1ab94bc13_typeChecker* _self_);
inline void _1ab94c890_disallowBuiltin(_1ab94bc13_typeChecker* _self_);
inline void _1b1115c24_pushReference(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a53d2_StructIns>* _83237_t);
inline void _1b11186e9_pushReference(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab095109_Trait>* _83237_t);
inline void _1ab94ce01_pushReferenceByKind(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab939816_Type>* _84240_k);
inline void _1ab94d31e_pushCycleError(_1ab94bc13_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1a387dcd5_Builder* _85353_message);
inline jule::Bool _1ab94d71a_checkCrossCycle(_1ab94bc13_typeChecker* _self_, jule::Any _87527_decl, _1a387dcd5_Builder* _87543_message);
inline jule::Bool _1ab94db16_checkIllegalCycles(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1ab94e012_fromTypeAlias(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _95930_decl, jule::Ptr<_1ab938a24_TypeAlias>* _95962_ta);
inline jule::Ptr<_1ab0977b0_Enum> _1ab94e40d_fromEnum(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _103625_decl, jule::Ptr<_1ab0977b0_Enum>* _103657_e);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab94e809_fromTypeEnum(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _104829_decl, jule::Ptr<_1ab098eba_TypeEnum>* _104861_e);
inline jule::Ptr<_1ab095109_Trait> _1ab94ec05_fromTrait(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _106026_decl, jule::Ptr<_1ab095109_Trait>* _106058_t);
inline jule::Bool _1ab950101_checkStructIns(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a53d2_StructIns>* _107335_ins, jule::Ptr<_1ab6a54d8_Token>* _107357_errorToken);
inline void _1ab9503a9_appendUsedStructReference(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a2577_Struct>* _109446_s);
inline jule::Ptr<_1a37a53d2_StructIns> _1ab9507a5_buildStructInstance(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _110740_decl, jule::Ptr<_1a37a2577_Struct>* _110772_s);
inline jule::Ptr<_1a37a53d2_StructIns> _1ab950ba1_fromStructIns(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a53d2_StructIns>* _115534_ins, jule::Ptr<_1ab6a54d8_Token> _115555_token);
inline jule::Ptr<_1a37a53d2_StructIns> _1ab95109c_fromStruct(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _117331_decl, jule::Ptr<_1a37a2577_Struct>* _117363_s);
inline jule::Trait _1ab9513dd_getDef(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1ab95172e_buildIdent(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl> _127830_decl);
inline jule::Trait _1ab951a70_buildSubIdent(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c124b_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1ab94645a_Sptr> _1ab951db1_buildSptrFromType(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab939816_Type>* _131638_elem);
inline jule::Ptr<_1ab94645a_Sptr> _1ab952202_buildSptr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c1922_SptrTypeDecl> _133629_decl);
inline jule::Ptr<_1ab949c22_Ptr> _1ab952543_buildPtrFromType(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab939816_Type>* _134537_elem);
inline jule::Ptr<_1ab949c22_Ptr> _1ab952884_buildPtr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c23a1_PtrTypeDecl> _136028_decl);
inline jule::Ptr<_1ab946e2d_Slc> _1ab952bc5_buildSlc(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c1ca7_SlcTypeDecl> _137728_decl);
inline jule::Ptr<_1ab94924e_Arr> _1ab953016_buildArr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c2b43_ArrTypeDecl> _139828_decl);
inline jule::Ptr<_1ab9485c2_Map> _1ab953357_buildMap(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c3391_MapTypeDecl> _144728_decl);
inline jule::Ptr<_1ab947a22_Tuple> _1ab953698_buildTuple(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c20a4_TupleTypeDecl> _147930_decl);
inline jule::Bool _1ab9539d9_checkFuncTypes(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _149235_f);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab953d2a_buildFunc(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a3793854_FnDecl> _151029_decl);
inline jule::Trait _1ab95416b_buildNamespace(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c1625_NamespaceTypeDecl> _154034_ns);
inline jule::Ptr<_1ab939816_Type> _1ab9544ac_build(_1ab94bc13_typeChecker* _self_, jule::Any* _155626_declKind);
inline jule::Ptr<_1ab939816_Type> _1ab9547ed_checkDecl(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _164430_decl);
inline jule::Bool static__1ab955249_prim(jule::Str* _167118_ident, jule::Ptr<_1ab94292e_Prim> _167130_t);
inline jule::Bool static__1ab9555bd_exist(jule::Str* _167519_ident, jule::Ptr<_1ab939816_Type>* _167536_k);
inline void _1ab3a04e1_stop(_1ab39ed3c_scopeParser* _self_);
inline jule::Bool _1ab3a0777_stopped(_1ab39ed3c_scopeParser* _self_);
inline jule::Bool _1ab3a0a0d_finished(_1ab39ed3c_scopeParser* _self_);
inline jule::Bool _1ab3a0c94_isLastSt(_1ab39ed3c_scopeParser* _self_);
inline void _1ab3a1107_pushErr(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab6a54d8_Token> _15423_token, jule::Str _15445_fmt);
inline void _1ab3a146a_pushSuggestion(_1ab39ed3c_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1ab3a1723_insertAsNext(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _16333_tokens);
inline jule::Ptr<_1ab39e49b_stmt> _1ab3a19a9_next(_1ab39ed3c_scopeParser* _self_);
inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3a1da5_buildScope(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _17331_tokens, jule::Ptr<_1ab6a54d8_Token> _17360_end);
inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3a21e6_buildVarSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _18431_tokens);
inline jule::Ptr<_1a3794dd8_RetSt> _1ab3a2537_buildRetSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _19230_tokens);
inline jule::Ptr<_1a3795658_Iter> _1ab3a2878_buildWhileNextIter(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _20339_s);
inline jule::Ptr<_1a3795e83_WhileKind> _1ab3a2bb9_buildWhileIterKind(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3a300a_getRangeKindKeysTokens(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _25443_toks);
inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3a334b_buildRangeKindKey(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _1ab3a368c_buildRangeKindKeys(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _28639_parts);
inline void _1ab3a3a00_setupRangeKindKeysPlain(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1a379688a_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _29471_tokens);
inline void _1ab3a3d63_setupRangeKindKeysExplicit(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1a379688a_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _30974_tokens);
inline void _1ab3a41c6_setupRangeKindKeys(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1a379688a_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _31866_tokens);
inline jule::Ptr<_1a379688a_RangeKind> _1ab3a467c_buildRangeIterKind(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3278_exprTokens, jule::Ptr<_1ab6a54d8_Token>* _32742_inToken);
inline jule::Any _1ab3a4a78_buildCommonIterKind(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _34240_tokens, jule::Ptr<_1ab6a54d8_Token>* _34266_errTok);
inline jule::Ptr<_1a3795658_Iter> _1ab3a4db9_buildCommonIter(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _36935_tokens);
inline jule::Ptr<_1a3795658_Iter> _1ab3a520a_buildIterSt(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _39932_st);
inline jule::Ptr<_1a3796c64_BreakSt> _1ab3a554b_buildBreakSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _40633_tokens);
inline jule::Ptr<_1a379713d_ContSt> _1ab3a588c_buildContSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _42432_tokens);
inline jule::Ptr<_1a37975e4_If> _1ab3a5bcd_buildIf(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _44228_tokens);
inline jule::Ptr<_1a37979bd_Else> _1ab3a601e_buildElse(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _47530_tokens);
inline jule::Ptr<_1a3797e74_Conditional> _1ab3a6360_buildIfElseChain(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _49936_tokens);
inline jule::Ptr<_1ab6c4bab_Expr> _1ab3a66a1_buildCoCallSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _52233_tokens);
inline jule::Ptr<_1a378e575_GotoSt> _1ab3a69e2_buildGotoSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _53832_tokens);
inline jule::Ptr<_1a378e872_FallSt> _1ab3a6d33_buildFallSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _55832_tokens);
inline jule::Ptr<_1a37986b1_TypeAliasDecl> _1ab3a7174_buildTypeAliasSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _56837_tokens);
inline void _1ab3a764c_pushCaseExpr(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _57432_tokens, jule::Ptr<_1ab6a54d8_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1ab6c4bab_Expr__jule_tuple_bool _1ab3a7b03_buildCaseExprs(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _59735_tokens, jule::Ptr<_1ab6a54d8_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3a7e44_buildCaseScope(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _63935_tokens);
inline __jule_tuple_x_1a3798b67_Case__jule_tuple_bool _1ab3a8340_buildCase(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1a3798b67_Case__jule_tuple_x_1a37979bd_Else _1ab3a873b_buildCases(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1a3799481_MatchCase> _1ab3a8a7c_buildMatchCase(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _71934_tokens);
inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3a8dbd_buildScopeSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _75232_tokens);
inline jule::Ptr<_1a378e19b_LabelSt> _1ab3a920e_buildLabelSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _79533_tokens);
inline __jule_tuple__1a3791225_StmtData__jule_tuple_bool _1ab3a9550_buildIdSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _81030_tokens);
inline jule::Ptr<_1ab3b9d57_assignInfo> _1ab3a9891_buildAssignInfo(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _82436_tokens);
inline jule::Ptr<_1a378eed2_AssignLeft> _1ab3a9bd2_buildAssignL(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>> _1ab3aa023_buildAssignLs(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _88034_parts);
inline __jule_tuple__1a3791225_StmtData__jule_tuple_bool _1ab3aa364_buildPlainAssign(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _88937_tokens);
inline jule::Bool _1ab3aa760_buildDeclAssign1(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _94337_lefts, jule::Ptr<_1a3790565_AssignSt>* _94366_assign);
inline __jule_tuple_x_1a3790565_AssignSt__jule_tuple_bool _1ab3aaaa1_buildDeclAssign(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _99135_tokens);
inline __jule_tuple__1a3791225_StmtData__jule_tuple_bool _1ab3aade2_buildAssignSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _102534_tokens);
inline jule::Ptr<_1ab6c5580_UseExpr> _1ab3ab233_buildUseExpr(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _103833_tokens);
inline jule::Any _1ab3ab574_buildConstSt(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _105133_st);
inline jule::Any _1ab3ab8b5_buildSt(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _107628_st);
inline void _1ab3abc28_build(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _114026_tokens, jule::Ptr<_1a3791bb5_ScopeTree>* _114056_s);
inline void _1ab3ace6b_pushErr(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1ab3ad2ce_pushSuggestion(_1ab3ac762_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1ab6c57a0_TupleExpr> _1ab3ad620_buildTuple(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _2331_parts);
inline jule::Ptr<_1ab6c5b46_LitExpr> _1ab3ad961_buildLit(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _3324_token);
inline jule::Any _1ab3ae0e3_buildSingle(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _4431_token);
inline jule::Ptr<_1ab6c64c6_IdentExpr> _1ab3ae434_buildBindIdent(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _6135_tokens);
inline jule::Ptr<_1ab6c6c68_UnaryExpr> _1ab3ae775_buildUnary(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _8030_tokens);
inline jule::Ptr<_1a3788c34_SubIdentExpr> _1ab3aeab6_buildObjSubIdent(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _10136_tokens);
inline jule::Ptr<_1a378885a_NamespaceExpr> _1ab3aee07_buildNamespace(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _11635_tokens);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3b0248_buildType(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _15030_tokens);
inline jule::Any _1ab3b0589_buildSubIdent(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _16434_tokens);
inline jule::Ptr<_1ab6c7142_VariadicExpr> _1ab3b08ca_buildVariadic(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _18633_tokens);
inline jule::Ptr<_1ab6c4e75_RangeExpr> _1ab3b0c1b_buildBetweenParentheses(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _19543_tokens);
inline jule::Ptr<_1a3788481_CastExpr> _1ab3b105c_tryBuildCast(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _20733_tokens);
inline void _1ab3b147a_pushArg(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _28152_tokens, jule::Ptr<_1ab6a54d8_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _1ab3b17bb_buildArgs(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _29029_tokens);
inline jule::Ptr<_1a378984a_FnCallExpr> _1ab3b20b3_buildFnCall(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token>* _35632_token, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _35687_args);
inline jule::Any _1ab3b2404_buildParenthesesRange(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _36442_tokens);
inline jule::Ptr<_1ab6c6020_UnsafeExpr> _1ab3b2745_buildUnsafeExpr(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _38635_tokens);
inline jule::Ptr<_1a3793854_FnDecl> _1ab3b2a86_buildAnonFn(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _40132_tokens);
inline jule::Any _1ab3b2dc7_buildUnsafe(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _41032_tokens);
inline void _1ab3b32e5_pushRangeLitPart(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _42036_part, jule::Ptr<_1ab6a54d8_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3b3636_getBraceRangeLitExprParts(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _43145_tokens);
inline jule::Ptr<_1a378a340_FieldExprPair> _1ab3b3977_buildFieldExprPair(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _47338_tokens);
inline jule::Ptr<_1ab6c4bab_Expr> _1ab3b3cb8_buildStructLitExpr(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _1ab3b4109_buildStructLitExprs(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _50140_tokens);
inline jule::Ptr<_1a378ab6a_StructLit> _1ab3b444a_buildTypedStructLiteral(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _51443_tokens);
inline jule::Ptr<_1ab6c4bab_Expr> _1ab3b478b_buildBraceLitPart(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _53838_tokens);
inline jule::Ptr<_1a378b121_BraceLit> _1ab3b4acc_buildBraceLit(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _55534_tokens);
inline jule::Any _1ab3b4e1d_buildBraceRange(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3b525e_getEnumerableParts(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _62638_tokens);
inline jule::Ptr<_1a378c386_SliceExpr> _1ab3b55a0_buildSlice(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _63330_tokens);
inline jule::Ptr<_1a378cdae_IndexingExpr> _1ab3b5a56_buildIndexing(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6567_tokens, jule::Ptr<_1ab6a54d8_Token> _65636_errorToken);
inline jule::Ptr<_1a378d51e_SlicingExpr> _1ab3b6172_buildSlicing(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _67967_start, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _6808_to, jule::Ptr<_1ab6a54d8_Token>* _68034_errorToken, jule::Ptr<_1ab6a54d8_Token> _68065_end);
inline jule::Any _1ab3b64b3_buildBracketRange(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _69537_tokens);
inline jule::Any _1ab3b6804_buildExclRight(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _72035_tokens);
inline jule::Any _1ab3b6b45_buildData(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _73830_tokens);
inline jule::Any _1ab3b7041_buildBinary(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _80732_tokens, jule::I64 _80757_i);
inline jule::Any _1ab3b7382_build(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _83226_tokens);
inline jule::Any _1ab3b76c3_buildKind(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _84330_tokens);
inline jule::Ptr<_1ab6c4bab_Expr> _1ab3b7a14_buildFromTokens(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _85435_tokens);
inline void _1ab3bd377_stop(_1ab3bd047_parser* _self_);
inline jule::Bool _1ab3bd60d_stopped(_1ab3bd047_parser* _self_);
inline void _1ab3bda2b_pushErr(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6a54d8_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1ab3bdd8e_pushSuggestion(_1ab3bd047_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1ab6c4bab_Expr> _1ab3be1d0_buildExpr(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _17831_tokens);
inline jule::Ptr<_1ab6bec94_Directive> _1ab3be521_buildDirective(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _18234_tokens);
inline void _1ab3be7c9_pushDirective(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6bec94_Directive> _19733_d);
inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3bebc5_buildScope(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _21032_tokens, jule::Ptr<_1ab6a54d8_Token> _21061_end);
inline __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool _1ab3c017b__buildType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool _1ab3c0632_buildType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1a37986b1_TypeAliasDecl> _1ab3c0973_buildTypeAliasDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _24240_tokens);
inline void _1ab3c0cd6_buildVarTypeAndExpr(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3794a0e_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _28264_tokens);
inline void _1ab3c1149_buildVarCommon(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3794a0e_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _31558_tokens);
inline void _1ab3c14ac_buildVarBegin(_1ab3bd047_parser* _self_, jule::Ptr<_1a3794a0e_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _33157_tokens);
inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3c17ed_buildVar(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _35929_tokens);
inline jule::Ptr<_1a378dcc2_GenericDecl> _1ab3c1b3e_buildGeneric(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _1ab3c203a_buildGenerics(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _41535_tokens, jule::Ptr<_1ab6a54d8_Token>* _41561_errorToken);
inline jule::Ptr<_1a3792402_ParamDecl> _1ab3c237b_buildSelfParam(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _43534_tokens);
inline void _1ab3c2799_paramTypeBegin(_1ab3bd047_parser* _self_, jule::Ptr<_1a3792402_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _47573_tokens);
inline void _1ab3c2b0c_buildParamType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3792402_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _49065_tokens);
inline void _1ab3c2e70_buildParamBody(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3792402_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _50364_tokens);
inline jule::Ptr<_1a3792402_ParamDecl> _1ab3c32b1_buildParam(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _52331_tokens);
inline void _1ab3c3569_checkParams(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1a3792402_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1a3792402_ParamDecl>> _1ab3c3965_buildParams(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool _1ab3c3d61_buildMultiRetType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _61639_tokens, jule::I64* _61669_i);
inline __jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool _1ab3c425c_buildRetType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _68734_tokens, jule::I64* _68764_i);
inline jule::Ptr<_1a3793854_FnDecl> _1ab3c4713_buildFnPrototype(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1a3793854_FnDecl> _1ab3c4bb9_buildFn(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1ab3c502c_buildBindUseDecl(_1ab3bd047_parser* _self_, jule::Ptr<_1a3799a14_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _83763_tokens);
inline void _1ab3c5390_parseUseDecl(_1ab3bd047_parser* _self_, jule::Ptr<_1a3799a14_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _85058_tokens);
inline jule::Ptr<_1a3799a14_UseDecl> _1ab3c578b_buildUseDecl(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _88032_tokens, jule::Bool _88057_binded);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3c5b87_buildTypeEnumItemKind(jule::Ptr<_1ab3bd047_parser> _self_, jule::I64* _89443_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _89456_tokens);
inline jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>> _1ab3c5ec8_buildTypeEnumItems(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _93140_tokens);
inline jule::Ptr<_1a379ba16_TypeEnumDecl> _1ab3c6319_buildTypeEnumDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _95539_tokens);
inline jule::Ptr<_1ab6c4bab_Expr> _1ab3c6715_buildEnumItemExpr(jule::Ptr<_1ab3bd047_parser> _self_, jule::I64* _98239_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _98252_tokens);
inline jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>> _1ab3c6a56_buildEnumItems(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _101436_tokens);
inline jule::Ptr<_1a379aa7b_EnumDecl> _1ab3c6d97_buildEnumDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _105135_tokens);
inline jule::Any _1ab3c71d8_buildNodeEnumDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _109639_tokens);
inline jule::Ptr<_1a379bcd0_FieldDecl> _1ab3c7529_buildField(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _110531_tokens);
inline jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>> _1ab3c786a_buildStructDeclFields(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _115442_tokens);
inline jule::Ptr<_1a379c6c6_StructDecl> _1ab3c7bab_buildStructDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _116537_tokens);
inline void _1ab3c7e64_checkMethodReceiver(_1ab3bd047_parser* _self_, jule::Ptr<_1a3793854_FnDecl>* _121336_f);
inline void _1ab3c82c7_buildTraitBody(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a379ce13_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _123260_tokens);
inline jule::Ptr<_1a379ce13_TraitDecl> _1ab3c8618_buildTraitDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _126436_tokens);
inline jule::Ptr<_1a3793854_FnDecl> _1ab3c8959_buildBindFn(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _129432_tokens);
inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3c8c9a_buildBindVar(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _130433_tokens);
inline jule::Ptr<_1a379c6c6_StructDecl> _1ab3c90db_buildBindStruct(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _131736_tokens);
inline jule::Ptr<_1a37986b1_TypeAliasDecl> _1ab3c942c_buildBindTypeAlias(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _133139_tokens);
inline jule::Ptr<_1a3799a14_UseDecl> _1ab3c976d_buildBindUse(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _134133_tokens);
inline jule::Any _1ab3c9aae_buildBind(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _135231_tokens);
inline jule::Ptr<_1a3793854_FnDecl> _1ab3c9e00_getMethod(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _137631_tokens);
inline void _1ab3ca263_parseImplBody(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a379d573_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _140557_tokens);
inline jule::Ptr<_1a379d573_Impl> _1ab3ca5a4_buildImpl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _143830_tokens);
inline jule::Any _1ab3ca8e5_buildNodeData(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _150935_tokens);
inline void _1ab3cab9d_applyFnMeta(_1ab3bd047_parser* _self_, jule::Ptr<_1a3793854_FnDecl>* _154232_f);
inline void _1ab3cae56_applyMeta(_1ab3bd047_parser* _self_, _1ab6be876_Node* _154730_node);
inline void _1ab3cb20e_pushUseDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3799a14_UseDecl>* _157233_decl);
inline jule::Bool _1ab3cb550_pushMetaNodes(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _158035_tokens);
inline _1ab6be876_Node _1ab3cb891_parseNode(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _160031_st);
inline void _1ab3cbb49_appendNode(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _162432_st);
inline void _1ab3cc122_removeRange(_1ab3bd047_parser* _self_, jule::I64 _163427_i, jule::U64 _163435_id, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _163451_tokens, jule::Slice<jule::I64>* _163481_ranges);
inline void _1ab3cc540_pushWrongOrderCloseErr(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6a54d8_Token>* _164639_t, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _164658_tokens, jule::Slice<jule::I64>* _164684_ranges);
inline void _1ab3cca18_pushRangeClose(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6a54d8_Token> _165730_t, jule::U64 _165748_left, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _165766_tokens, jule::Slice<jule::I64>* _165796_ranges);
inline void _1ab3cccc1_checkRanges(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _167528_tokens);
inline void _1ab3cd079_parse(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1ab6aadb2_Fileset>* _170627_f);
inline void _1ab3ce7c8_pushErr(_1ab3ce201_typeBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _3123_token, jule::Str _3145_fmt);
inline void _1ab3ceb3b_pushSuggestion(_1ab3ce201_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3cedc2_buildNamespace(_1ab3ce201_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _1ab3d0158_buildGenerics(_1ab3ce201_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3d03de_identGenerics(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d0675_buildIdent(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d090b_buildCppLink(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d0b92_buildFn(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d0e28_buildPtr(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d11ae_buildSptr(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1445_buildSlc(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d16cb_buildArr(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1962_buildMap(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1be8_buildEnumerable(_1ab3ce201_typeBuilder* _self_);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1e7e_step(_1ab3ce201_typeBuilder* _self_);
inline __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool _1ab3d2215_build(_1ab3ce201_typeBuilder* _self_);
inline void _1aba63335_pushErr(_1aba62ca2_directiveEval* _self_, jule::Ptr<_1ab6a54d8_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1aba63731_splitOperans(_1aba62ca2_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3348_tokens);
inline jule::Bool _1aba63a72_evalDirectiveIdent(_1aba62ca2_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1aba63db3_evalDirectivePart(_1aba62ca2_directiveEval* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7837_part);
inline jule::Bool _1aba64149_eval(_1aba62ca2_directiveEval* _self_);
inline jule::Ptr<_1ab3d3447_Importer> static__1ab3d3876_New(_1aba618d8_CompileInfo _4416_info);
inline jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _1ab3d3b0c_AllPackages(_1ab3d3447_Importer* _self_);
inline void _1ab3d404c_SetModPath(_1ab3d3447_Importer* _self_, jule::Str _6126_path);
inline jule::Str _1ab3d42d3_GetModPath(_1ab3d3447_Importer* _self_);
inline jule::Str _1ab3d4624_ModById(_1ab3d3447_Importer* _self_, jule::I64 _6919_id);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab3d4965_GetImport(_1ab3d3447_Importer* _self_, jule::Str _7325_path);
inline __jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log _1ab3d4d61_ImportPackage(_1ab3d3447_Importer* _self_, jule::Str _8329_path, jule::Bool _8340_updateMod);
inline void _1ab3d5119_Imported(_1ab3d3447_Importer* _self_, jule::Ptr<_1ab866578_ImportInfo> _14028_imp);
inline __jule_tuple_bool__jule_tuple_s_1a388d1ac_Log _1ab3d5548_isPassBuildDirectives(_1ab3d3447_Importer* _self_, jule::Ptr<_1ab6bd9b8_AST>* _16742_file);
inline jule::Ptr<_1ab3d977d_ExprInspector> static__1ab3d9aad_New(void);
inline void _1ab3d9d66_args(_1ab3d977d_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1ab3da11e_inspect(_1ab3d977d_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1ab3da482_Inspect(_1ab3d977d_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Ptr<_1ab3e19c7_Meta> static__1ab3e1db2_Collect(jule::Ptr<_1ab3d5ec7_IR> _3624_ir);
inline jule::Ptr<_1ab3e15a9_MetaStrBuilder> static__1ab3e217b_CollectStrBuilder(jule::Ptr<_1ab3d5ec7_IR>* _4335_ir);
inline jule::Bool _1ad1ccc89_isAllMethodsLive(_1ad1cca25_specialCaseDefines* _self_, jule::Ptr<_1a37a2577_Struct> _1928_s);
inline jule::Ptr<_1ad1cd7e5_ObjectDeadCode> static__1ad1cdd67_new(jule::Ptr<_1ab3d5ec7_IR>* _3921_ir);
inline jule::Bool _1b182ea8b_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1a37a53d2_StructIns>* _4527_t);
inline jule::Bool _1b1836983_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _4527_t);
inline jule::Bool _1b185b788_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab095109_Trait>* _4527_t);
inline jule::Bool _1b18669b3_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab8a7289_Var>* _4527_t);
inline void _1b1832275_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1a37a53d2_StructIns> _6532_t);
inline void _1b183a16d_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab08c9a3_FnIns> _6532_t);
inline void _1b185c217_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab095109_Trait> _6532_t);
inline void _1b1869e28_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab8a7289_Var> _6532_t);
inline void _1ad1ce6d6_pushStructAsLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1a37a53d2_StructIns>* _7838_s);
inline void _1ad1ce98e_setReferencesAsLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab854577_ReferenceStack>* _13441_rs);
inline void _1ad1cec47_inits(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab868cea_Package>* _18427_pkg);
inline void _1ad1d0000_collectLivePackage(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab868cea_Package>* _19840_pkg);
inline void _1ad1d01ed_collectLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_);
inline void _1ad1d04a6_removeDeadGlobals(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _27439_vars);
inline void _1ad1d075e_removeDeadFns(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab0898e5_Fn>>* _28635_funcs);
inline void _1ad1d0a17_removeDeadStructs(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a37a2577_Struct>>* _30739_structs);
inline void _1ad1d0cc0_removeDeadTraits(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab095109_Trait>>* _32938_traits);
inline void _1ad1d1078_removeDeadsFile(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab090be8_SymTab>* _35037_file);
inline void _1ad1d1331_removeDeadsPackage(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab868cea_Package>* _35740_pkg);
inline void _1ad1d152e_removeDeads(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_);
inline void _1ad1d172c_collectSpecialCaseDefines(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_);
inline void _1ad1d192a_elimanate(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_);
inline void _1ad1d2d7c_optimizeChild(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab835bc9_Scope>* _1935_s);
inline void _1ad1d3135_optimizeBodyChildExceptional(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab835bc9_Scope>* _2950_s);
inline void _1ad1d33dd_optimizeBodyChild(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab835bc9_Scope>* _3939_s);
inline void _1ad1d3696_optimizeExprModel(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1ad1d3894_eliminateFollowed(_1ad1d2860_scopeDeadCode* _self_);
inline void _1ad1d3b4c_pushGoto(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab838d86_GotoSt> _6929_gt);
inline void _1ad1d3e05_pushLabel(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab838726_Label> _7930_l);
inline void _1ad1d41ad_optimizeRangeIter(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab837a11_RangeIter> _9238_it);
inline void _1ad1d4466_optimizeWhileIter(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab8370b5_WhileIter> _9738_it);
inline void _1ad1d471e_optimizeInfIter(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab836b0e_InfIter> _10536_it);
inline void _1ad1d49c7_optimizeConditional(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab836812_Conditional> _10940_c);
inline void _1ad1d4c80_optimizeMatch(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab83a409_Match> _12734_m);
inline void _1ad1d5038_optimizeAssign(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab839716_Assign> _14535_assign);
inline void _1ad1d52e1_optimizeMultiAssign(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab839bbc_MultiAssign> _15040_assign);
inline void _1ad1d5599_optimizeStmt(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1ad1d5797_optimizeStmts(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_);
inline _1ad1d6de7_exprDeadCode static__1ad1d7315_new(jule::Ptr<_1ad1d2860_scopeDeadCode>* _1421_s);
inline void _1ad1d75bd_optimize(_1ad1d6de7_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1ad125b6b_pushVar(_1ad1256c6_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1ad125eac_removeVar(_1ad1256c6_nils* _self_, jule::Uintptr _4625_var);
inline jule::Bool _1ad1262ed_isSafe(_1ad1256c6_nils* _self_, jule::Uintptr _6022_var);
inline jule::Ptr<_1ad128344_scopeOptimizer> static__1ad1288a5_new(jule::Ptr<_1ab835bc9_Scope> _2320_scope);
inline void _1ad128b5d_setCurrentStmt(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1ad128d5b_removeCurrent(jule::Ptr<_1ad128344_scopeOptimizer> _self_);
inline jule::Bool _1ad1290e2_isLastStmt(jule::Ptr<_1ad128344_scopeOptimizer> _self_);
inline jule::Bool _1ad129378_isIter(jule::Ptr<_1ad128344_scopeOptimizer> _self_);
inline void _1ad129631_optimizeData(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab906a8b_Data> _6733_d);
inline void _1ad1298d9_optimizeVar(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab8a7289_Var> _10032_v);
inline void _1ad129b92_optimizeConditional(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab836812_Conditional> _12140_c);
inline void _1ad12a0b0_buildDefaultConstantTrueCase(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab83ae32_Case> _19549_case, jule::I64* _19573_i, jule::Ptr<_1ab83a409_Match>* _19586_m);
inline void _1ad12a368_optimizeMatch(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab83a409_Match> _22134_m);
inline void _1ad12a621_optimizeRangeIter(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab837a11_RangeIter> _30338_it);
inline void _1ad12a8c9_optimizeWhileIter(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab8370b5_WhileIter> _34838_it);
inline jule::Bool _1ad12ac1a_substr(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _35427_a);
inline jule::Bool _1ad12b05b_strAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _37430_a);
inline jule::Bool _1ad12b39c_sliceAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _38532_a);
inline void _1ad12b655_optimizePostfix(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839260_Postfix> _39336_postfix);
inline void _1ad12b90d_optimizeAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _40035_assign);
inline jule::Bool _1ad12bc4e_tryOptimizeSwap(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _52437_assign);
inline void _1ad12c007_optimizeMultiAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839bbc_MultiAssign> _56140_assign);
inline void _1ad12c2b0_optimizeRet(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab83b9c1_RetSt> _60732_r);
inline void _1ad12c568_optimizeStmt(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Any _63133_stmt);
inline void _1ad12c821_optimizeChild(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab835bc9_Scope> _66034_child);
inline void _1ad12ca1e_optimize(jule::Ptr<_1ad128344_scopeOptimizer> _self_);
inline void static__1ad1300c6_optimize(jule::Any* _2226_model);
inline void static__1ad1303b2_optimizeData(jule::Any* _2630_model, jule::Ptr<_1ad1383a9_data>* _2659_d);
inline jule::Bool _1ad130703_selfCmpCond(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _3828_m);
inline jule::Bool _1ad130a44_boolCond(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _6725_m);
inline jule::Bool _1ad130d85_strCond(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _12023_m);
inline jule::Bool _1ad13133b_tryNeutralElement1(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _17735_m, jule::Ptr<_1ab070c61_Const> _17766_c, jule::Ptr<_1ab07c124_OperandExprModel>* _17792_nc);
inline jule::Bool _1ad13167c_tryNeutralElement(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _22734_m);
inline void _1ad131935_checkBinaryForBoundary(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _24239_m);
inline void _1ad131bdd_checkBinaryForNil(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _29434_m);
inline void _1ad131e96_binary(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _32622_m);
inline void _1ad13224e_unary(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c9e8_UnaryExprModel> _43321_m);
inline void _1ad132507_structureLit(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07d3bc_StructLitExprModel> _47628_m);
inline void _1ad1327b0_casting(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07dc4c_CastingExprModel> _49223_m);
inline void _1ad132b23_args(_1ad12ebec_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _50620_params, jule::Slice<jule::Any>* _50652_args);
inline void _1ad132dcb_scope(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab835bc9_Scope>* _52822_s);
inline void _1ad133184_optimizeStrBuilderCall(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _53439_m);
inline void _1ad13343c_funcCall(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel> _55024_m);
inline void _1ad1336e5_indexing(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07ee7e_IndexingExprModel> _56124_m);
inline void _1ad13399d_anonFunc(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab080435_AnonFnExprModel> _58524_m);
inline void _1ad133b9b_do(_1ad12ebec_exprOptimizer* _self_);
inline void _1ad13596c_pushVar(jule::Ptr<_1ad1354c7_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1ab939816_Type> _2442_kind);
inline jule::Bool _1ad135cad_removeVar(_1ad1354c7_dynamic* _self_, jule::Uintptr _4725_var);
inline jule::Bool _1ad1361a9_isFits(_1ad1354c7_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1ab939816_Type> _6136_kind);
inline _1ad137cd2_dataCheckpoint _1ad138761_getCheckpoint(_1ad1383a9_data* _self_);
inline void _1ad138a19_loadCheckpoint(_1ad1383a9_data* _self_, _1ad137cd2_dataCheckpoint* _4435_c);
inline void _1ad13a136_pushVar(_1ad139b91_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1ad13a873_fitsMaxSize(_1ad139b91_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1ad1d80d5_Optimizer> static__1ad1d859c_New(jule::Ptr<_1ab3d5ec7_IR>* _2121_ir);
inline void _1ad1d8855_optimizeExpr(_1ad1d80d5_Optimizer* _self_, jule::Any* _2733_model);
inline void _1ad1d8b0d_optimizeGlobal(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab8a7289_Var>* _3135_v);
inline void _1ad1d8db6_optimizeFunction(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab0898e5_Fn>* _3737_func);
inline void _1ad1d916e_optimizeStruct(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1a37a2577_Struct>* _4735_s);
inline void _1ad1d9427_optimizeGlobals(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _6336_p);
inline void _1ad1d96d0_optimizeFunctions(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _7138_p);
inline void _1ad1d9988_optimizeStructs(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _7936_p);
inline void _1ad1d9c41_optimizePackage(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _8736_p);
inline void _1ad1d9e3e_Optimize(_1ad1d80d5_Optimizer* _self_);
inline _1ad4b3646_Time static__1ad4b3a31_Unix(jule::U64 _9117_sec);
inline _1ad4b3646_Time static__1ad4b3c40_Now(void);
inline _1ad4b2e70_AbsTime _1ad4b5428_Abs(_1ad4b3646_Time* _self_);
inline jule::Ptr<_1ad1dc2a4_scopeCoder> static__1ad1dc99c_new(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _3721_oc);
inline void _1b1727e90_iterHead(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1ad1dd173_rangeIndexIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter>* _9336_it);
inline void _1ad1dd42b_rangeHashmapIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter>* _16038_it);
inline void _1ad1dd6d4_strRuneIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad124164_StrRuneIter> _24332_it);
inline void _1ad1dd98c_ifCase(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab8360e7_If> _35527_i);
inline void _1ad1ddc45_conditional(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab836812_Conditional> _36432_c);
inline void _1ad1ddeed_infIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab836b0e_InfIter> _38428_it);
inline void _1ad1de2a6_whileIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab8370b5_WhileIter> _40130_it);
inline void _1ad1de55e_rangeIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter> _44030_it);
inline void _1ad1de817_cont(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837d96_ContSt> _45321_c);
inline void _1ad1deac0_label(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab838726_Label> _45822_l);
inline void _1ad1ded78_gotoSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab838d86_GotoSt> _46323_gt);
inline void _1ad1e0131_postfix(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839260_Postfix> _46828_p);
inline void _1ad1e03d9_assignLeft(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Any* _47532_model);
inline void _1ad1e0692_shl(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _50724_a);
inline void _1ad1e094a_shr(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _51324_a);
inline void _1ad1e0c03_divByZeroAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _51936_a);
inline void _1ad1e11cb_operatorOverloadingAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _52547_s, jule::Ptr<_1ab07c124_OperandExprModel>* _52573_l, jule::Ptr<_1ab07c124_OperandExprModel>* _5268_r, jule::U64 _52636_op);
inline void _1ad1e1484_assign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _54027_a);
inline void _1ad1e173c_mapLookupAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _57337_a);
inline void _1ad1e19e5_multiAssignTup(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _60636_a);
inline void _1ad1e1c9d_multiAssignFn(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _67635_a);
inline void _1ad1e2056_multiAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign> _73532_a);
inline jule::Fn<void> _1ad1e2397_matchExpr(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83a409_Match> _76130_m);
inline void _1ad1e270a_case(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83a409_Match> _77125_m, jule::Ptr<_1ab83ae32_Case> _77146_c);
inline void _1ad1e29b3_matchSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83a409_Match> _84128_m);
inline void _1ad1e2c6b_fallSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83b62a_FallSt> _89623_f);
inline void _1ad1e3024_breakSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab838270_BreakSt> _90124_b);
inline void _1ad1e32cc_setResult(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83b9c1_RetSt> _91030_r);
inline void _1ad1e3585_retSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83b9c1_RetSt> _93826_r);
inline void _1ad1e383d_var(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab8a7289_Var> _97424_v);
inline void _1ad1e3ae6_mutSlicing(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad122d55_MutSlicingExprModel> _98031_m);
inline void _1ad1e3d9e_swap(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad121b01_SwapExprModel> _99725_m);
inline void _1ad1e4157_exceptionalForwarding(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad12156d_ExceptionalForwardingExprModel> _100542_m);
inline void _1ad1e4410_st(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Any _101123_st);
inline void _1ad1e46b8_scopeStmts(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab835bc9_Scope>* _106732_s);
inline void _1ad1e4971_scope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab835bc9_Scope> _107626_s);
inline void _1ad1e4c29_commonFuncScope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _109137_f);
inline void _1ad1e508c_anonFuncScope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel> _113134_m, jule::Str _113161_ident);
inline void _1ad1e5345_funcScope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _116330_f);
inline jule::Ptr<_1ad1e8799_exprCoder> static__1ad1e8b95_new(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _4821_oc);
inline void _1ad1e8e4d_string(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const>* _5424_c);
inline void _1ad1e9206_boolean(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Bool _6924_b);
inline void _1ad1e9404_nilLit(jule::Ptr<_1ad1e8799_exprCoder> _self_);
inline jule::Bool _1ad1e9745_ftoaSpecialCases(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::F64* _8134_x);
inline void _1ad1e99ed_float32(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const>* _9525_c);
inline void _1ad1e9ca6_float64(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const>* _11425_c);
inline void _1ad1ea05e_constant(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const> _13229_c);
inline void _1ad1ea47c_operatorOverloadingUnary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _15646_s, jule::U64 _15667_op, jule::Any _15686_e);
inline void _1ad1ea89a_divByZeroBinary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab6a54d8_Token>* _16833_op, jule::Ptr<_1ab07c124_OperandExprModel>* _16857_l, jule::Ptr<_1ab07c124_OperandExprModel>* _16890_r);
inline void _1ad1eb093__unsafeBinary(jule::Ptr<_1ad1e8799_exprCoder> _self_, _1a387dcd5_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1ab939816_Type>* _2088_lk, jule::Ptr<_1ab939816_Type>* _20830_rk, jule::U64 _20847_op, jule::Str _20862_kind);
inline void _1ad1eb34b_unsafeBinary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _27833_m);
inline void _1ad1eb6ae_shl(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c124_OperandExprModel>* _29025_l, jule::Ptr<_1ab07c124_OperandExprModel>* _29058_r);
inline void _1ad1eba22_shr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c124_OperandExprModel>* _31825_l, jule::Ptr<_1ab07c124_OperandExprModel>* _31858_r);
inline void _1ad1ebcca_binary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _34627_m);
inline void _1ad1ec083_var(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab8a7289_Var> _37024_m);
inline void _1ad1ec33b_structureIns(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a53d2_StructIns> _38633_m);
inline void _1ad1ec5e4_unary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c9e8_UnaryExprModel> _39026_m);
inline void _1ad1ec89c_structureLit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07d3bc_StructLitExprModel> _42133_m);
inline void _1ad1ecb55_allocStructure(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07d6b9_AllocStructLitExprModel> _46435_m);
inline void _1ad1ece0d_possibleRefExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _47232_expr);
inline void _1ad1ed32b_castTraitFromTrait(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07dc4c_CastingExprModel>* _48640_m, jule::Ptr<_1ab095109_Trait> _48672_t1, jule::Ptr<_1ab095109_Trait> _48694_t2);
inline void _1ad1ed5d4_casting(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07dc4c_CastingExprModel> _49928_m);
inline void _1ad1ed88c_args(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _64626_m);
inline void _1ad1edb45_modelForCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _67733_expr);
inline void _1ad1edded_pushCallInf(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _69229_m);
inline jule::Bool _1ad1ee23e_isWrapped(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _71531_m);
inline jule::Bool _1ad1ee580_writeReceiver(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _73934_m);
inline void _1ad1ee838_pureFuncCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _75234_m);
inline void _1ad1eeae1_coFuncCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _84232_m);
inline void _1ad1eee54_writeUseExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _92034_f, jule::Ptr<_1ab906a8b_Data> _92055_d);
inline void _1ad2002b7_funcCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional);
inline void _1ad200570_slice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e9c8_SliceExprModel> _102426_m);
inline void _1ad200828_indexing(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07ee7e_IndexingExprModel> _105329_m);
inline void _1ad200ad1_unsafeIndexing(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad1234d7_UnsafeIndexingExprModel> _110535_m);
inline void _1ad200d89_anonFunc(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel> _112229_m);
inline void _1ad201142_mapExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab080bd8_MapExprModel> _115328_m);
inline void _1ad2013ea_slicing(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08126b_SlicingExprModel> _118928_m);
inline void _1ad2016a3_traitSub(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0817ee_TraitSubIdentExprModel> _120529_m);
inline void _1ad20195b_structureSub(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082190_StructSubIdentExprModel> _122133_m);
inline void _1ad201c14_array(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082910_ArrayExprModel> _123026_m);
inline void _1ad201ebc_funcInsCommon(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _128034_m);
inline void _1ad202275_funcIns(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _128728_m);
inline void _1ad20252d_tuple(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082c0c_TupleExprModel> _129826_m);
inline void _1ad2027d6_newCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0836d0_BuiltinNewCallExprModel> _130928_m);
inline void _1ad202a8e_printCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab083009_BuiltinPrintCallExprModel> _132130_m);
inline void _1ad202d47_printlnCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab083306_BuiltinPrintlnCallExprModel> _133132_m);
inline void _1ad203100_panicCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> _134130_m);
inline void _1ad2033a8_errorCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _134930_m);
inline void _1ad203661_copyCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0852d6_BuiltinCopyCallExprModel> _138129_m);
inline void _1ad203919_lenCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _138928_m);
inline void _1ad203bc2_capCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084a33_BuiltinCapCallExprModel> _140628_m);
inline void _1ad203e7a_deleteCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> _141131_m);
inline void _1ad204233_makeCallSlice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084060_BuiltinMakeCallExprModel>* _143635_m);
inline void _1ad2044db_makeCallStr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084060_BuiltinMakeCallExprModel>* _146033_m);
inline void _1ad204794_makeCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> _147129_m);
inline void _1ad204a4c_pushToSlice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad1238b1_PushToSliceExprModel> _147932_m);
inline void _1ad204d05_appendToSlice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad123c8a_AppendToSliceExprModel> _153934_m);
inline void _1ad2050ad_appendCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> _154731_m);
inline void _1ad205366_sizeof(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0859ac_SizeofExprModel> _155527_m);
inline void _1ad20561e_alignof(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab086161_AlignofExprModel> _156128_m);
inline void _1ad2058c7_runeLit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08634d_RuneExprModel> _156724_m);
inline void _1ad205b80_structureStatic(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082536_StructStaticIdentExprModel> _158136_m);
inline void _1ad205e38_backendEmit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0866c2_BackendEmitExprModel> _158532_m);
inline void _1ad2061e1_free(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0869be_FreeExprModel> _160125_m);
inline void _1ad206499_strComp(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad1227c2_StrCompExprModel> _161028_m);
inline void _1ad206752_emptyCompare(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad12201e_EmptyCompareExprModel> _162633_m);
inline void _1ad206a0a_unsafeDeref(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad124461_UnsafeDerefExprModel> _163532_m);
inline void _1ad206cb3_unsafeCasting(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad12475d_UnsafeCastingExprModel> _164634_m);
inline void _1ad20706b_model(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _166326_m);
inline jule::Bool _1ad2073ac_handleFieldByDefault(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a4832_FieldIns>* _176542_f);
inline void _1ad207665_initStructLit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _178635_s);
inline void _1ad20791d_fillCollectionByDefault(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab939816_Type>* _180845_elem);
inline void _1ad207bc6_initCollection(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab939816_Type>* _182336_elem);
inline void _1ad207e7e_initArray(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab94924e_Arr>* _183731_arr);
inline void _1ad208237_initExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab939816_Type> _185129_t);
inline jule::Ptr<_1ad20ad2d_TestCoder> static__1ad20b2d4_New(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1ab866578_ImportInfo> _1ad20b56a_findTestingPackage(jule::Ptr<_1ad20ad2d_TestCoder> _self_);
inline void _1ad20b823_appendTest(jule::Ptr<_1ad20ad2d_TestCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _3531_f);
inline void _1ad20bacb_appendPackageTests(jule::Ptr<_1ad20ad2d_TestCoder> _self_, jule::Ptr<_1ab868cea_Package>* _5040_p);
inline jule::Bool _1ad20bd62_readyTestingPackage(jule::Ptr<_1ad20ad2d_TestCoder> _self_);
inline void _1ad20c060_callTmReset(jule::Ptr<_1ad20ad2d_TestCoder> _self_);
inline void _1ad20c25d_callTmFailed(jule::Ptr<_1ad20ad2d_TestCoder> _self_);
inline void _1ad20c45b_callTmSkipped(jule::Ptr<_1ad20ad2d_TestCoder> _self_);
inline void _1ad20c659_Serialize(jule::Ptr<_1ad20ad2d_TestCoder> _self_);
inline void static__1ad20deb8_writeIdentTo(_1a387dcd5_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1ad20e35e_toOut(_1a387dcd5_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1ad20e7b0_toLocal(_1a387dcd5_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident);
inline void static__1ad20ea9b_func(_1a387dcd5_Builder* _7722_buf, jule::Ptr<_1ab0898e5_Fn>* _7750_f);
inline void static__1ad20ed87_funcIns(_1a387dcd5_Builder* _9525_buf, jule::Ptr<_1ab08c9a3_FnIns>* _9553_f);
inline void static__1ad210173_traitDecl(_1a387dcd5_Builder* _11027_buf, jule::Ptr<_1ab095109_Trait> _11050_t);
inline void static__1ad21045e_param(_1a387dcd5_Builder* _11423_buf, jule::Ptr<_1ab087e21_Param>* _11447_p);
inline void static__1ad21074a_structure(_1a387dcd5_Builder* _12927_buf, jule::Ptr<_1a37a2577_Struct>* _12951_s);
inline void static__1ad210a36_structureIns(_1a387dcd5_Builder* _14030_buf, jule::Ptr<_1a37a53d2_StructIns>* _14054_s);
inline void static__1ad210d22_field(_1a387dcd5_Builder* _14823_buf, jule::Ptr<_1a379e651_Field>* _14847_f);
inline void static__1ad21110d_var(_1a387dcd5_Builder* _15821_buf, jule::Ptr<_1ab8a7289_Var> _15848_v);
inline void static__1ad2113e9_iterBegin(_1a387dcd5_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1ad2116d5_iterEnd(_1a387dcd5_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1ad2119c1_iterNext(_1a387dcd5_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1ad211cac_label(_1a387dcd5_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1ad212098_matchEnd(_1a387dcd5_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1ad212384_caseBegin(_1a387dcd5_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1ad4c0a2c_ObjectCoder> static__1ad4c0e8e_New(jule::Ptr<_1ab3d5ec7_IR>* _12021_ir, _1ad4bd277_SerializationInfo _12035_info);
inline void _1ad4c1247_write(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Str _13322_s);
inline void _1ad4c1500_writeBytes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b);
inline void _1ad4c16ed_addIndent(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c18eb_doneIndent(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c1ae9_indent(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline jule::I64 _1ad4c1e3a_findAnyType(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab939816_Type>* _15633_t);
inline jule::I64 _1ad4c227b_pushCoSpawn(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _16532_f);
inline jule::I64 _1ad4c25bc_pushDealloc(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab939816_Type> _26832_t);
inline jule::Str _1ad4c290d_pushAnonFn(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel>* _28432_m);
inline jule::I64 _1ad4c2c4e_pushAnyType(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab939816_Type> _32632_t);
inline void _1ad4c3007_pushResultIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _43135_f);
inline void _1ad4c32b0_pushResult(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _45232_f);
inline void _1ad4c3623_pushAndWriteMaskMapper(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab095109_Trait> _46543_t1, jule::Ptr<_1ab095109_Trait> _46565_t2);
inline void _1ad4c38cb_locInfo(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab6a54d8_Token>* _51625_t);
inline void _1ad4c3ac9_head(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c3d82_links(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Bool _58322_std);
inline void _1ad4c413a_prepareStructure(_1ad4c0a2c_ObjectCoder* _self_, jule::Ptr<_1a37a2577_Struct>* _60637_s);
inline void _1ad4c4338_prepareStructures(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c45e1_structurePlainDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a2577_Struct>* _63740_s);
inline void _1ad4c47de_structurePlainDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c4a97_fieldDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a4832_FieldIns>* _65331_f);
inline void _1ad4c4eb5_structureOperatorEq(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Str _66036_ident, jule::Ptr<_1a37a53d2_StructIns>* _66053_s, jule::Bool _66074_decl);
inline void _1ad4c5328_structureOperators(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _72840_s, jule::Bool _72861_decl);
inline void _1ad4c55d1_structureInsDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _73738_s);
inline void _1ad4c5889_structureDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a2577_Struct>* _76335_s);
inline void _1ad4c5a87_structureDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c5c85_structureMethodDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c625d_funcHead(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _79730_buf, jule::Ptr<_1ab08c9a3_FnIns>* _79758_f, jule::Bool _79775_ptr, jule::Str _79786_ident);
inline void _1ad4c65c1_funcDeclIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _81633_f, jule::Bool _81650_ptr);
inline void _1ad4c6934_funcDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _82430_f, jule::Bool _82444_ptr);
inline void _1ad4c6bdc_funcDeclTrait(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _83035_f);
inline void _1ad4c6dda_funcDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c7193_traitDataTypeMethods(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ad4bde8c_traitHash>* _85242_hash);
inline void _1ad4c7391_traitDataTypes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c7704_paramIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _88030_buf, jule::Ptr<_1ab08b84d_ParamIns>* _88058_p);
inline void _1ad4c7a67_paramsIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _88631_buf, jule::Ptr<_1ab08c9a3_FnIns>* _88659_f);
inline void _1ad4c7dca_varInitExpr(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab8a7289_Var>* _90733_v, jule::Fn<void> _90748_init);
inline void _1ad4c8183_var(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab8a7289_Var> _92524_v);
inline void _1ad4c84e6_anonFuncInsDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel>* _95637_m, jule::Str _95664_ident);
inline void _1ad4c8859_anonFuncIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel>* _96233_m, jule::Str _96260_ident);
inline void _1ad4c8bbc_funcIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _97228_f, jule::Str _97245_ident);
inline void _1ad4c8e75_func(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _98226_f);
inline void _1ad4c92d8_funcTrait(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _98827_s, jule::Ptr<_1ab08c9a3_FnIns>* _98853_f);
inline __jule_tuple_x_1ab08c9a3_FnIns__jule_tuple_bool _1ad4c9629_findTraitMetMap(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _100337_m);
inline void _1ad4c998c_traitWrapper(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab095109_Trait>* _101534_t, jule::Ptr<_1ab0898e5_Fn>* _101556_m);
inline void _1ad4c9b8a_traitWrappers(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4c9eed_traitDataMethods(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ad4bde8c_traitHash>* _107938_hash, jule::Ptr<_1a37a53d2_StructIns> _107956_s);
inline void _1ad4ca41b_traitData(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ad4bde8c_traitHash>* _109731_hash, jule::I64 _109749_i, jule::Ptr<_1a37a53d2_StructIns>* _109762_s);
inline void _1ad4ca619_traitDatas(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4ca817_globalDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4caa15_decls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cacbd_structureMethods(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _115738_s);
inline void _1ad4cb076_structureIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _116434_s);
inline void _1ad4cb32e_structure(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a2577_Struct>* _117031_s);
inline void _1ad4cb52c_structures(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cb72a_funcs(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cb9d3_pushInit(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab868cea_Package>* _120930_pkg);
inline void _1ad4cbbd1_anonHashes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cbdce_initGlobals(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cc0cc_initCaller(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cc2ca_end(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cc583_buildTraitHash(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab095109_Trait>* _128136_t);
inline void _1ad4cc781_buildTraitHashes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4ccae4_insertBuf(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _131131_buf, jule::I64 _131154_pos);
inline void _1ad4ccce2_implementRC(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4ccee0_serializeHead(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline void _1ad4cd1dd_Serialize(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_);
inline jule::Str _1ad4d0245_Str(_1ad4ced5a_customType* _self_);
inline jule::Bool _1ad4d0586_Equal(jule::Ptr<_1ad4ced5a_customType> _self_, jule::Ptr<_1ab939816_Type> _2518_k);
inline jule::Ptr<_1ad4d0982_typeCoder> static__1ad4d0ed2_new(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _5021_oc);
inline void _1ad4d1345_toType(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _5727_buf, jule::Str _5754_id);
inline void _1ad4d16a8_prim(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _7125_buf, jule::Ptr<_1ab94292e_Prim> _7148_p);
inline void _1ad4d1a1b_tuple(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _7626_buf, jule::Ptr<_1ab947a22_Tuple> _7653_t);
inline void _1ad4d1d7e_asSptr(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1ad4d21e2_sptr(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _9525_buf, jule::Ptr<_1ab94645a_Sptr> _9552_sptr);
inline void _1ad4d2555_ptr(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _10224_buf, jule::Ptr<_1ab949c22_Ptr> _10251_p);
inline void _1ad4d28b8_enumDecl(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _11329_buf, jule::Ptr<_1ab0977b0_Enum> _11356_e);
inline void _1ad4d2c2b_typeEnumDecl(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _11833_buf, jule::Ptr<_1ab098eba_TypeEnum> _11860_e);
inline void _1ad4d308e_asSlice(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _12228_buf, jule::Ptr<_1ab939816_Type> _12255_elem);
inline void _1ad4d3402_slice(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _12926_buf, jule::Ptr<_1ab946e2d_Slc> _12953_s);
inline void _1ad4d3765_mapType(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _13428_buf, jule::Ptr<_1ab9485c2_Map> _13455_m);
inline void _1ad4d3e3b_structureIns(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _14833_buf, jule::Ptr<_1a37a53d2_StructIns> _14860_s);
inline void _1ad4d429e_array(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _17226_buf, jule::Ptr<_1ab94924e_Arr> _17253_a);
inline void _1ad4d4975_paramIns(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _19529_buf, jule::Ptr<_1ab08b84d_ParamIns>* _19557_p);
inline void _1ad4d514b_funcInsResult(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _22734_s, jule::Ptr<_1ab08c9a3_FnIns>* _22760_f);
inline void _1ad4d54ae_anonFunc(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _24529_buf, jule::Ptr<_1ab08c9a3_FnIns> _24556_f);
inline void _1ad4d5822_func(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _26625_buf, jule::Ptr<_1ab08c9a3_FnIns> _26652_f);
inline void _1ad4d5b85_kind(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _27325_buf, jule::Ptr<_1ab939816_Type> _27352_k);
inline jule::Ptr<_1ad4d856c_resultCoder> static__1ad4d8a78_new(jule::Ptr<_1ad4d0982_typeCoder>* _34121_tc);
inline void _1ad4d8ddb_ptr(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _34524_s, jule::Ptr<_1ab949c22_Ptr> _34549_p);
inline void _1ad4d924e_sptr(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _35025_s, jule::Ptr<_1ab94645a_Sptr> _35050_p);
inline void _1ad4d95b2_mapType(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _35528_s, jule::Ptr<_1ab9485c2_Map> _35553_p);
inline void _1ad4d9925_slice(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _36126_s, jule::Ptr<_1ab946e2d_Slc> _36151_slc);
inline void _1ad4d9c88_arr(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _36624_s, jule::Ptr<_1ab94924e_Arr> _36649_arr);
inline void _1ad4da0eb_func(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _37225_s, jule::Ptr<_1ab08c9a3_FnIns> _37250_f);
inline void _1ad4da45e_tup(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _38524_s, jule::Ptr<_1ab947a22_Tuple> _38549_tup);
inline void _1ad4da7c2_codeMut(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _39228_s, jule::Ptr<_1ab939816_Type>* _39254_t);
inline void _1ad4dab35_codeMut1(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _43229_s, jule::Ptr<_1ab939816_Type>* _43255_t);
inline jule::Slice<jule::U8> _1ad4dae43_code(_1ad4d856c_resultCoder* _self_, jule::Ptr<_1ab939816_Type>* _44125_t);
inline jule::Str _1b238a1d9_Name(_1b2389ded_Flag* _self_);
inline jule::Str _1b238a32c_What(_1b2389ded_Flag* _self_);
inline void _1b238a470_Reset(_1b2389ded_Flag* _self_);
inline jule::I32 _1b238a5b3_Short(_1b2389ded_Flag* _self_);
inline jule::Str _1b238d40c_Name(_1b238d781_Flag* _self_);
inline jule::Str _1b238da6c_What(_1b238d781_Flag* _self_);
inline void _1b238dbb0_Reset(_1b238d781_Flag* _self_);
inline jule::I32 _1b238dd03_Short(_1b238d781_Flag* _self_);
inline jule::Str _1b2391b19_Name(_1b2391e8d_Flag* _self_);
inline jule::Str _1b2392279_What(_1b2391e8d_Flag* _self_);
inline void _1b23923bc_Reset(_1b2391e8d_Flag* _self_);
inline jule::I32 _1b2392510_Short(_1b2391e8d_Flag* _self_);
inline jule::Str _1b239536a_Name(_1b23956de_Flag* _self_);
inline jule::Str _1b23959ca_What(_1b23956de_Flag* _self_);
inline void _1b2395b1d_Reset(_1b23956de_Flag* _self_);
inline jule::I32 _1b2395c61_Short(_1b23956de_Flag* _self_);
inline jule::Str _1b2398a77_Name(_1b2398deb_Flag* _self_);
inline jule::Str _1b23991d7_What(_1b2398deb_Flag* _self_);
inline void _1b239932a_Reset(_1b2398deb_Flag* _self_);
inline jule::I32 _1b239946d_Short(_1b2398deb_Flag* _self_);
inline jule::Ptr<_1ad54d725_FlagSet> static__1ad54da44_New(void);
inline jule::Trait _1ad54deea_FindFlag(_1ad54d725_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1ad54e33b_FindFlagShort(_1ad54d725_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ad54e913_Parse(_1ad54d725_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1b2398deb_Flag> _1b242ab4d_addFlagCommon(_1ad54d725_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1b23956de_Flag> _1b2434c23_addFlagCommon(_1ad54d725_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1b2428420_AddVar(_1ad54d725_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1b2432539_AddVar(_1ad54d725_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1b23abbbc_parseInteger(_1ad5511d9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1b23b4796_parseInteger(_1ad5511d9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1ad551a36_getData(_1ad5511d9_argParser* _self_);
inline jule::VoidExceptional _1ad551cab_processFlag(_1ad5511d9_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1ad552064_singleDash(_1ad5511d9_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1ad55231c_doubleDash(_1ad5511d9_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1ad55251a_tryArg(_1ad5511d9_argParser* _self_);
inline jule::VoidExceptional _1ad552718_parse(_1ad5511d9_argParser* _self_);
inline jule::Exceptional<jule::Slice<_1a68ca14c_Dir>> static__1a87b8038_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1a87b8269_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__1a87b849a_Remove(jule::Str _5319_path);
inline __jule_tuple_x_1ab3d5ec7_IR__jule_tuple_s_1a388d1ac_Log static__1ab3d64a0_Build(jule::Str _3018_path, jule::I64 _3029_flags);
inline void _1ab3d6989_appendStructs(_1ab3d5ec7_IR* _self_, jule::Ptr<_1ab868cea_Package>* _6830_p, jule::Slice<jule::Ptr<_1a37a2577_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1a37a2577_Struct>> _1ab3d6c20_GetAllStructures(_1ab3d5ec7_IR* _self_);
inline void _1ab3d7083_appendGlobals(_1ab3d5ec7_IR* _self_, jule::Ptr<_1ab868cea_Package>* _9130_p, jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1ab8a7289_Var>> _1ab3d7319_GetAllGlobals(_1ab3d5ec7_IR* _self_);
inline void _1ab3d7517_Order(_1ab3d5ec7_IR* _self_);
inline jule::Ptr<_1a68cac74_Cmd> static__1a68cb1c5_New(jule::Str _3516_path);
inline jule::VoidExceptional _1a68cb3c3_Spawn(_1a68cac74_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1a68cb857_Wait(_1a68cac74_Cmd* _self_);
inline jule::VoidExceptional _1a696d80b_spawn(_1a68cac74_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1a696dc90_wait(_1a68cac74_Cmd* _self_);
inline void _1a41813d9_Free(void* _4520_ptr);
inline jule::Str _1a41ae9bc_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _1a41aec53_StrToBytes(jule::Str _9015_s);
inline jule::I64 _1a3a989b1_GetLastErrno(void);
inline jule::I64 _1a41be1b3_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg);
inline jule::I64 _1a41be537_Stat(jule::U8* _6016_path, struct stat* _6033_stat);
inline jule::I64 _1a41be966_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode);
inline jule::U8* _1a41becda_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen);
inline DIR* _1a41c02d5_Opendir(jule::U8* _7619_path);
inline struct dirent* _1a41c04b1_Readdir(DIR* _7923_dir);
inline jule::I64 _1a41c0758_Closedir(DIR* _8224_dir);
inline jule::I64 _1a41c1160_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode);
inline jule::I64 _1a41c1429_Rmdir(jule::U8* _9617_path);
inline jule::I64 _1a41c16e3_Unlink(jule::U8* _9918_path);
inline jule::I64 _1a41c6c7b_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _1a41c7155_Close(jule::I64 _2510_handle);
inline jule::I64 _1a41c750c_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _1a41c773d_Exit(jule::I64 _339_code);
inline jule::Str _1a4202180_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1ad5d7605_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _1a421833e_StrBytes(jule::Str _4013_s);
inline jule::Str _1a42185c5_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1a421888e_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1a4323119_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1a432345a_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1a43239aa_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1a4324505_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1a4324879_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _1a4324e0c_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1a43251c6_RuneStart(jule::U8 _51714_b);
inline jule::I64 _1a3da1868_LeadingZeros64(jule::U64 _5919_x);
inline jule::I64 _1a3da27ae_TrailingZeros(jule::U64 _8118_x);
inline jule::I64 _1a3da3194_TrailingZeros32(jule::U32 _10320_x);
inline jule::I64 _1a3da345d_TrailingZeros64(jule::U64 _11220_x);
inline jule::I64 _1a3da8e36_Len32(jule::U32 _35014_x);
inline jule::I64 _1a3da9200_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1a3da9e8c_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1a3dab796_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1ba89a823_f64bits(jule::F64 _612_f);
inline jule::I64 _1ba89b192_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1ad7e6e30_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1ad8454de_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1ae89982d_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1a9a391a9_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _1a4200ce9__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline jule::U64 _1ad71ec8c_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _1ad71ee57_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Str _1a422039b_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _1a4229042_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1b23ea04b_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1b23deddc_structToStr(_1a387dcd5_Builder _17519_x);
inline jule::Str _1ad7900b5_toStr(jule::Any _21613_x);
inline jule::Str _1ad792293_toStr(jule::Str _21613_x);
inline jule::Str _1ad7929e1_toStr(jule::I64 _21613_x);
inline jule::Str _1ad79774e_toStr(jule::I8 _21613_x);
inline jule::Str _1ad795483_toStr(jule::I16 _21613_x);
inline jule::Str _1ad79cb61_toStr(jule::I32 _21613_x);
inline jule::Str _1ad7a0647_toStr(jule::I64 _21613_x);
inline jule::Str _1ad7a3194_toStr(jule::U64 _21613_x);
inline jule::Str _1ad7a0ba8_toStr(jule::Uintptr _21613_x);
inline jule::Str _1ad7a5d78_toStr(jule::U8 _21613_x);
inline jule::Str _1ad7a82ba_toStr(jule::U16 _21613_x);
inline jule::Str _1ad7aa70c_toStr(jule::U32 _21613_x);
inline jule::Str _1ad7acb4e_toStr(jule::U64 _21613_x);
inline jule::Str _1ad7b102b_toStr(jule::F32 _21613_x);
inline jule::Str _1ad7b13a0_toStr(jule::F64 _21613_x);
inline jule::Str _1ad79d03a_toStr(jule::Bool _21613_x);
inline jule::Str _1ae58dbb5_toStr(jule::I64 _21613_x);
inline jule::Str _1ae598197_toStr(jule::I64 _21613_x);
inline jule::Str _1ae5cd6c7_toStr(jule::I64 _21613_x);
inline jule::Str _1ae93db03_toStr(jule::I64 _21613_x);
inline jule::Str _1b0112a46_toStr(jule::Ptr<_1ab8a7289_Var> _21613_x);
inline jule::Str _1b01150dc_toStr(jule::Ptr<_1ab938a24_TypeAlias> _21613_x);
inline jule::Str _1b0118a80_toStr(jule::Ptr<_1a37a2577_Struct> _21613_x);
inline jule::Str _1b011c347_toStr(jule::Ptr<_1ab0898e5_Fn> _21613_x);
inline jule::Str _1b0120e0b_toStr(jule::Ptr<_1ab095109_Trait> _21613_x);
inline jule::Str _1b01244c5_toStr(jule::Ptr<_1ab0977b0_Enum> _21613_x);
inline jule::Str _1b0127a7d_toStr(jule::Ptr<_1ab098eba_TypeEnum> _21613_x);
inline jule::Str _1b0146140_toStr(jule::Ptr<_1a379e651_Field> _21613_x);
inline jule::Str _1b015822e_toStr(jule::Ptr<_1ab070c61_Const> _21613_x);
inline jule::Str _1b0172435_toStr(jule::Ptr<_1ab096c54_EnumItem> _21613_x);
inline jule::Str _1b0183a2e_toStr(jule::Ptr<_1ab087e21_Param> _21613_x);
inline jule::Str _1b026d971_toStr(jule::Str _21613_x);
inline jule::Str _1b0345592_toStr(jule::Ptr<_1ab6c0e82_IdentTypeDecl> _21613_x);
inline jule::Str _1b03625c0_toStr(jule::Ptr<_1ab082c0c_TupleExprModel> _21613_x);
inline jule::Str _1b0364e74_toStr(jule::Ptr<_1ab6c57a0_TupleExpr> _21613_x);
inline jule::Str _1b0374912_toStr(jule::Ptr<_1a3790565_AssignSt> _21613_x);
inline jule::Str _1b037798c_toStr(jule::Ptr<_1ab6c4bab_Expr> _21613_x);
inline jule::Str _1b037701e_toStr(jule::Ptr<_1ab839260_Postfix> _21613_x);
inline jule::Str _1b037a187_toStr(jule::Ptr<_1ab839716_Assign> _21613_x);
inline jule::Str _1b037a275_toStr(jule::Ptr<_1ab839bbc_MultiAssign> _21613_x);
inline jule::Str _1b03817ed_toStr(jule::Ptr<_1ab906a8b_Data> _21613_x);
inline jule::Str _1b0386759_toStr(jule::Ptr<_1ab07e5ee_FnCallExprModel> _21613_x);
inline jule::Str _1b03b8181_toStr(jule::Ptr<_1ab838726_Label> _21613_x);
inline jule::Str _1b03d6952_toStr(jule::Ptr<_1ab835bc9_Scope> _21613_x);
inline jule::Str _1b03e0de0_toStr(jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _21613_x);
inline jule::Str _1b03e5532_toStr(jule::Ptr<_1ab0866c2_BackendEmitExprModel> _21613_x);
inline jule::Str _1b03e6de6_toStr(jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> _21613_x);
inline jule::Str _1b03e803a_toStr(jule::Ptr<_1ab083009_BuiltinPrintCallExprModel> _21613_x);
inline jule::Str _1b03eb0b5_toStr(jule::Ptr<_1ab083306_BuiltinPrintlnCallExprModel> _21613_x);
inline jule::Str _1b04018d4_toStr(jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> _21613_x);
inline jule::Str _1b040162b_toStr(jule::Ptr<_1ab0852d6_BuiltinCopyCallExprModel> _21613_x);
inline jule::Str _1b0406c80_toStr(jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> _21613_x);
inline jule::Str _1b0409832_toStr(jule::Ptr<_1ab0869be_FreeExprModel> _21613_x);
inline jule::Str _1b0413cd1_toStr(jule::Ptr<_1ab836812_Conditional> _21613_x);
inline jule::Str _1b041e6b0_toStr(jule::Ptr<_1ab836b0e_InfIter> _21613_x);
inline jule::Str _1b04254eb_toStr(jule::Ptr<_1ab8370b5_WhileIter> _21613_x);
inline jule::Str _1b044bc2b_toStr(jule::Ptr<_1ab837a11_RangeIter> _21613_x);
inline jule::Str _1b045b840_toStr(jule::Ptr<_1a3795e83_WhileKind> _21613_x);
inline jule::Str _1b045e4ad_toStr(jule::Ptr<_1a379688a_RangeKind> _21613_x);
inline jule::Str _1b047aa29_toStr(jule::Ptr<_1ab837d96_ContSt> _21613_x);
inline jule::Str _1b048488a_toStr(jule::Ptr<_1ab838d86_GotoSt> _21613_x);
inline jule::Str _1b04c03a9_toStr(jule::Ptr<_1ab6c64c6_IdentExpr> _21613_x);
inline jule::Str _1b04d4d2a_toStr(jule::Ptr<_1ab07ee7e_IndexingExprModel> _21613_x);
inline jule::Str _1b052c5ae_toStr(jule::Ptr<_1ab83a409_Match> _21613_x);
inline jule::Str _1b0541628_toStr(jule::Ptr<_1ab83b62a_FallSt> _21613_x);
inline jule::Str _1b055c699_toStr(jule::Ptr<_1ab838270_BreakSt> _21613_x);
inline jule::Str _1b0563d21_toStr(jule::Ptr<_1ab83b9c1_RetSt> _21613_x);
inline jule::Str _1b056d754_toStr(jule::Ptr<_1a3791bb5_ScopeTree> _21613_x);
inline jule::Str _1b056da0c_toStr(jule::Ptr<_1a3794a0e_VarDecl> _21613_x);
inline jule::Str _1b0570a0e_toStr(jule::Ptr<_1a37986b1_TypeAliasDecl> _21613_x);
inline jule::Str _1b0577472_toStr(jule::Ptr<_1a3797e74_Conditional> _21613_x);
inline jule::Str _1b057765e_toStr(jule::Ptr<_1a3795658_Iter> _21613_x);
inline jule::Str _1b057a93c_toStr(jule::Ptr<_1a379713d_ContSt> _21613_x);
inline jule::Str _1b057e787_toStr(jule::Ptr<_1a378e19b_LabelSt> _21613_x);
inline jule::Str _1b0581cc8_toStr(jule::Ptr<_1a378e575_GotoSt> _21613_x);
inline jule::Str _1b0588384_toStr(jule::Ptr<_1a3799481_MatchCase> _21613_x);
inline jule::Str _1b058b84e_toStr(jule::Ptr<_1a378e872_FallSt> _21613_x);
inline jule::Str _1b0590666_toStr(jule::Ptr<_1a3796c64_BreakSt> _21613_x);
inline jule::Str _1b0593834_toStr(jule::Ptr<_1a3794dd8_RetSt> _21613_x);
inline jule::Str _1b0596a02_toStr(jule::Ptr<_1ab6c5580_UseExpr> _21613_x);
inline jule::Str _1b068332a_toStr(jule::Ptr<_1a379d573_Impl> _21613_x);
inline jule::Str _1b0687de0_toStr(jule::Ptr<_1a379c6c6_StructDecl> _21613_x);
inline jule::Str _1b068a84e_toStr(jule::Ptr<_1a3793854_FnDecl> _21613_x);
inline jule::Str _1b068e446_toStr(jule::Ptr<_1a379ce13_TraitDecl> _21613_x);
inline jule::Str _1b06954c4_toStr(jule::Ptr<_1a379aa7b_EnumDecl> _21613_x);
inline jule::Str _1b0697a7b_toStr(jule::Ptr<_1a379ba16_TypeEnumDecl> _21613_x);
inline jule::Str _1b06c0b4d_toStr(jule::Ptr<_1ab082190_StructSubIdentExprModel> _21613_x);
inline jule::Str _1b06c116a_toStr(jule::Ptr<_1ab07c9e8_UnaryExprModel> _21613_x);
inline jule::Str _1b0704148_toStr(jule::Ptr<_1ab08c9a3_FnIns> _21613_x);
inline jule::Str _1b09b1cda_toStr(jule::Ptr<_1ab6c3391_MapTypeDecl> _21613_x);
inline jule::Str _1b09b764d_toStr(jule::Ptr<_1ab6c20a4_TupleTypeDecl> _21613_x);
inline jule::Str _1b09ca9c4_toStr(jule::Ptr<_1ab6c2b43_ArrTypeDecl> _21613_x);
inline jule::Str _1b09d1eb4_toStr(jule::Ptr<_1ab6c1ca7_SlcTypeDecl> _21613_x);
inline jule::Str _1b09d84a4_toStr(jule::Ptr<_1ab6c23a1_PtrTypeDecl> _21613_x);
inline jule::Str _1b09de675_toStr(jule::Ptr<_1ab6c1922_SptrTypeDecl> _21613_x);
inline jule::Str _1b0a39b10_toStr(jule::Ptr<_1ab6c7142_VariadicExpr> _21613_x);
inline jule::Str _1b0a4084c_toStr(jule::Ptr<_1ab07e9c8_SliceExprModel> _21613_x);
inline jule::Str _1b0a603a5_toStr(jule::Ptr<_1a378a340_FieldExprPair> _21613_x);
inline jule::Str _1b0a68c71_toStr(jule::Ptr<_1a378b94b_KeyValPair> _21613_x);
inline jule::Str _1b0abee2b_toStr(jule::Ptr<_1a378984a_FnCallExpr> _21613_x);
inline jule::Str _1b0ad29bb_toStr(jule::Ptr<_1ab07d6b9_AllocStructLitExprModel> _21613_x);
inline jule::Str _1b0ae59ac_toStr(jule::Ptr<_1ab07dc4c_CastingExprModel> _21613_x);
inline jule::Str _1b0b0ca7e_toStr(jule::Ptr<_1ab082536_StructStaticIdentExprModel> _21613_x);
inline jule::Str _1b0b10763_toStr(jule::Ptr<_1a3788c34_SubIdentExpr> _21613_x);
inline jule::Str _1b0b1c473_toStr(jule::Ptr<_1ab07d3bc_StructLitExprModel> _21613_x);
inline jule::Str _1b0b3e121_toStr(jule::Ptr<_1ab08634d_RuneExprModel> _21613_x);
inline jule::Str _1b0b61dad_toStr(jule::Ptr<_1a37a53d2_StructIns> _21613_x);
inline jule::Str _1b0b9d9dd_toStr(jule::Ptr<_1ab939816_Type> _21613_x);
inline jule::Str _1b0bc588e_toStr(jule::Ptr<_1ab082910_ArrayExprModel> _21613_x);
inline jule::Str _1b0c0e80c_toStr(jule::Ptr<_1ab6c124b_SubIdentTypeDecl> _21613_x);
inline jule::Str _1b0c13e1b_toStr(jule::Ptr<_1ab6c6c68_UnaryExpr> _21613_x);
inline jule::Str _1b0c1d09b_toStr(jule::Ptr<_1ab6c0877_TypeDecl> _21613_x);
inline jule::Str _1b0c226aa_toStr(jule::Ptr<_1a378885a_NamespaceExpr> _21613_x);
inline jule::Str _1b0c294d6_toStr(jule::Ptr<_1ab6c1625_NamespaceTypeDecl> _21613_x);
inline jule::Str _1b0c64ab5_toStr(jule::Ptr<_1ab08126b_SlicingExprModel> _21613_x);
inline jule::Str _1b0cd276a_toStr(jule::Ptr<_1a378c386_SliceExpr> _21613_x);
inline jule::Str _1b0d5316a_toStr(jule::Ptr<_1ab0817ee_TraitSubIdentExprModel> _21613_x);
inline jule::Str _1b0dec621_toStr(jule::Ptr<_1ab080bd8_MapExprModel> _21613_x);
inline jule::Str _1b0e0c9a5_toStr(jule::Ptr<_1ab080435_AnonFnExprModel> _21613_x);
inline jule::Str _1b0e14a45_toStr(jule::Ptr<_1ab6c4e75_RangeExpr> _21613_x);
inline jule::Str _1b0e17b9c_toStr(jule::Ptr<_1ab6c5b46_LitExpr> _21613_x);
inline jule::Str _1b0e17817_toStr(jule::Ptr<_1ab6c6020_UnsafeExpr> _21613_x);
inline jule::Str _1b0e21090_toStr(jule::Ptr<_1a378cdae_IndexingExpr> _21613_x);
inline jule::Str _1b0e239aa_toStr(jule::Ptr<_1a378d51e_SlicingExpr> _21613_x);
inline jule::Str _1b0e23b42_toStr(jule::Ptr<_1a3788481_CastExpr> _21613_x);
inline jule::Str _1b0e26a35_toStr(jule::Ptr<_1a378ab6a_StructLit> _21613_x);
inline jule::Str _1b0e2dbd5_toStr(jule::Ptr<_1a378b121_BraceLit> _21613_x);
inline jule::Str _1b0e33965_toStr(jule::Ptr<_1a37891da_BinaryExpr> _21613_x);
inline jule::Str _1b1085b72_toStr(jule::Ptr<_1ab07c61e_BinaryExprModel> _21613_x);
inline jule::Str _1b1224706_toStr(jule::Ptr<_1ab0836d0_BuiltinNewCallExprModel> _21613_x);
inline jule::Str _1b123ee3b_toStr(jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> _21613_x);
inline jule::Str _1b1274954_toStr(jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _21613_x);
inline jule::Str _1b128e5c8_toStr(jule::Ptr<_1ab084a33_BuiltinCapCallExprModel> _21613_x);
inline jule::Str _1b12d5ad6_toStr(jule::Ptr<_1ab0859ac_SizeofExprModel> _21613_x);
inline jule::Str _1b12de98b_toStr(jule::Ptr<_1ab086161_AlignofExprModel> _21613_x);
inline jule::Str _1abc17dd0_toStr(jule::Str _21613_x);
inline jule::Str _1aeae2bca_toStr(jule::Ptr<_1ad12156d_ExceptionalForwardingExprModel> _21613_x);
inline jule::Str _1aeb2b6c5_toStr(jule::Ptr<_1ad124164_StrRuneIter> _21613_x);
inline jule::Str _1aeb34139_toStr(jule::Ptr<_1ad122d55_MutSlicingExprModel> _21613_x);
inline jule::Str _1aeb5b381_toStr(jule::Ptr<_1ad123c8a_AppendToSliceExprModel> _21613_x);
inline jule::Str _1aeb5dbd0_toStr(jule::Ptr<_1ad1238b1_PushToSliceExprModel> _21613_x);
inline jule::Str _1aeb6b7d1_toStr(jule::Ptr<_1ad121b01_SwapExprModel> _21613_x);
inline jule::Str _1b1ab02d3_toStr(jule::Ptr<_1ad12201e_EmptyCompareExprModel> _21613_x);
inline jule::Str _1b1ab3061_toStr(jule::Ptr<_1ad1227c2_StrCompExprModel> _21613_x);
inline jule::Str _1a9958dcb_toStr(jule::Ptr<_1ad1231da_UnsafeBinaryExprModel> _21613_x);
inline jule::Str _1a996229c_toStr(jule::Ptr<_1ad124461_UnsafeDerefExprModel> _21613_x);
inline jule::Str _1a9968c65_toStr(jule::Ptr<_1ad12231b_RefExprModel> _21613_x);
inline jule::Str _1a996d30d_toStr(jule::Ptr<_1ab07d026_StructArgExprModel> _21613_x);
inline jule::Str _1a9974ac8_toStr(jule::Ptr<_1ad12475d_UnsafeCastingExprModel> _21613_x);
inline jule::Str _1a99826a7_toStr(jule::Ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel> _21613_x);
inline jule::Str _1a998ceba_toStr(jule::Ptr<_1ad1234d7_UnsafeIndexingExprModel> _21613_x);
inline jule::Str _1b1b42ab3_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1b23d9e2b_toStr(_1a387dcd5_Builder _21613_x);
inline jule::Str _1b23e6773_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1b23e1b25_toStr(jule::Str _21613_x);
inline jule::Str _1b23ed8ce_toStr(jule::Str _21613_x);
inline void _1a422a1db_rev(jule::Slice<jule::U8> _26912_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _1a4327dbb_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _1a43283c7_args(void);
inline jule::I64 _1a432896b_strlen(jule::U8* _3122_p);
inline jule::Bool _1a4329c8b__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _1a437b936_hash128to64(_1a437b57e_u128 _4316_sum);
inline jule::U64 _1a437bc44_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1a437c00d_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1a437c34e_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1a437c690_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1a437ca14_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1a437ce43_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1a437d3c7_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _1a437b57e_u128 _1a437d77e_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _1a437b57e_u128 _10342_seed);
inline _1a437b57e_u128 _1a437ddcd_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1a437b57e_u128 _1a437e30c_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1a437b57e_u128 _1a437e73b_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _1a437b57e_u128 _16048_seed);
inline jule::U64 _1a437ea05_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1a3db0e93_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1a3db12a1_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1a3db156a_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1a3db18ab_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1a3db1b42_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _1a3db1e0b_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _1a3db211a_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1a3db24e4_splitHash(jule::U64 _9414_h);
inline jule::U32 _1a3db27e1_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _1a3db2b65_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline __jule_tuple_int__jule_tuple_bool _1a6923580_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _1a692bea1_Itoa(jule::I64 _89_x);
inline jule::Str _1a692c204_Utoa(jule::U64 _1613_x);
inline void _1a692c435_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::I64 _1a6968e11_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1a69695b5_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1a6969939_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1a697a4e9_Getwd(void);
inline jule::Bool _1a873ab59_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1a87a65cb_is16(jule::Slice<_1a87a483d_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1a87a6950_is32(jule::Slice<_1a87a4d6b_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1a87a7258_isExcludingLatin(jule::Ptr<_1a87a52de_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1a87a749a_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1a87a7b93_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_1a87a4387_CaseRange> _31336_cr);
inline jule::Ptr<_1a87a4387_CaseRange> _1a87a8017_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1a87a4387_CaseRange> _33329_caseRange);
inline jule::I32 _1a87a82d1_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1a87a8754_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1a87a8b1c_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1a87a8e91_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1a87a9447_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1a87a9788_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1a87a9bb7_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1a87aa03b_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1a87ab823_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1a87abb97_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1a87ac5c1_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1a87acc64_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Slice<jule::Str> _1a87ad0d8_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _1a87ad45c_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _1a87adec9_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I64 _1a87ae34d_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _1a87ae837_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I64 _29044_n);
inline jule::Str _1a87aec66_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _1a87b09e2_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _1a87b0d66_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _1a87b1471_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Str _1a87b17a1_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep);
inline jule::Bool _1a87b2e78_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _1a87b450c_Clean(jule::Str _10914_path);
inline jule::Str _1a87b4ad4_FromSlash(jule::Str _21214_path);
inline jule::Str _1a87b4e25_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1a87b51ab_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1a87b5475_Abs(jule::Str _2468_path);
inline jule::Str _1a87b573e_Base(jule::Str _25213_path);
inline jule::Str _1a87b5b18_Dir(jule::Str _2838_path);
inline jule::Str _1a87b5d5a_VolumeName(jule::Str _30115_path);
inline jule::Bool _1a87b6c07_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1a87b7015_IsAbs(jule::Str _5310_path);
inline jule::I64 _1a87b72ce_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1a87b7620_abs(jule::Str _638_path);
inline jule::Str _1a87b78a6_join(jule::Slice<jule::Str> _749_elem);
inline jule::Slice<char*> _1a696cec0_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs);
inline jule::I64 _1a696d344_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv);
inline jule::VoidExceptional _1a696d575_setenv(jule::Slice<jule::Str>* _5712_envv);
inline jule::I64 _1a696e125_cmdErrorFromCode(jule::I64 _14921_code);
inline jule::I64 _1a696e334_getLastCmdError(void);
inline void _1a697d750_Exit(jule::I64 _119_code);
inline jule::Str _1a697d9b4_Executable(void);
inline jule::Slice<jule::Str> _1a697db7e_Args(void);
inline jule::Exceptional<jule::Str> _1a697e0e1_Getwd(void);
inline jule::I64 _1a698446a_getLastFsError(void);
inline jule::I64 _1a6984976_getLastOsError(void);
inline jule::Bool _1a3e447b8_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1a3e44a93_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1a3e44d5c_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1a388d61e_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _1a388d92c_argToStr(jule::Any _32813_arg);
inline jule::I64 _1a388dbe6_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _1a388e0ae_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _1a389005a_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1a38914bd_IsWindows(jule::Str _3714_os);
inline jule::Bool _1a38917cb_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1a3891a95_IsLinux(jule::Str _4312_os);
inline jule::Bool _1a3891dd6_IsI386(jule::Str _4611_arch);
inline jule::Bool _1a389216c_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1a3892436_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1a3892700_IsUnix(jule::Str _5511_os);
inline jule::Bool _1a3892ac9_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1a3892d1b_Is64Bit(jule::Str _6112_arch);
inline void _1a87b9b72_init(void);
inline jule::U32 _1a93b8c8c_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1a93b909a_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1a93b9364_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1a93b96a5_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1a93bbc18_Frexp(jule::F64 _4714_f);
inline jule::F64 _1a93c2180_NaN(void);
inline jule::Bool _1a93c248d_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1a93c2757_Inf(jule::I64 _618_sign);
inline jule::Bool _1a93c2b20_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1a93c2dd9_normalize(jule::F64 _8214_x);
inline jule::F64 _1a93c48ad_Log(jule::F64 _1118_x);
inline jule::F64 _1a93c5293_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1a93cbd16_Modf(jule::F64 _449_f);
inline jule::F64 _1a93cc61e_Log2(jule::F64 _449_x);
inline jule::Str _1a9406208_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1a94067e1_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1a9406eea_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1a940502b_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1a94076c1_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a9405b75_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1a9407ade_roundShortest(_1a9418715_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1a940502b_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1a9408183_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a9405b75_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1a940866c_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a9405b75_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1a9408d21_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1a940502b_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1a94094a3_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1a940502b_floatInfo* _51232_flt);
inline jule::I64 _1a9409827_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1a9409b9b_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1a940a839_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a8cd8349_ConvError _1a940acac_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1a940b1db_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1a940b692_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1a940c330_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a940c71a_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1a940e442_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a940e750_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a940ea19_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1a9411565_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a9411994_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a8cd8349_ConvError _1a9412038_atofHex(_1a940502b_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8cd8349_ConvError _1a9412412_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError _1a9412654_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError _1a94129c8_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1a9412d4c_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1a9413677_ryuFtoaFixed32(_1a9405b75_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1a9413b1c_ryuFtoaFixed64(_1a9405b75_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1a9414458_formatDecimal(_1a9405b75_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1a9414931_ryuFtoaShortest(_1a9405b75_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a940502b_floatInfo* _26168_flt);
inline jule::I64 _1a9414bb7_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1a9414e81_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a94153b0_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a940502b_floatInfo* _3963_flt);
inline void _1a9415a0e_ryuDigits(_1a9405b75_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1a9416180_ryuDigits32(_1a9405b75_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a94165ae_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a94169dd_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1a9416d62_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1a941712b_divmod1e9(jule::U64 _60214_x);
inline void _1a941a063_trim(_1a9418715_decimal* _27414_a);
inline void _1a941a34e_rightShift(_1a9418715_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1a941a805_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1a941aaad_leftShift(_1a9418715_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1a941ae32_shouldRoundUp(_1a9418715_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1a941c609_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1a941c9c2_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1a941cc8b_Itoa(jule::I64 _819_i);
inline jule::Str _1a941d0cc_small(jule::I64 _8610_i);
inline jule::Bool _1a941d363_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1a941d907_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1a9420112_Throw(jule::Str _910_msg);
inline jule::Bool _1ab6a5c25_IsUnaryOp(jule::U64 _33314_id);
inline jule::Bool _1ab6a6033_IsBinOp(jule::U64 _34312_id);
inline jule::Bool _1ab6a663d_IsStr(jule::Str _36310_k);
inline jule::Bool _1ab6a68c4_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1ab6a6b8d_IsRune(jule::Str _37011_k);
inline jule::Bool _1ab6a7573_IsFloat(jule::Str _37912_k);
inline jule::Bool _1ab6a783c_IsNum(jule::Str _38710_k);
inline jule::Bool _1ab6a7dc0_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1ab6a8189_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1ab6a871c_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1ab6a8c17_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1ab6a918a_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1ab6a9454_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1ab6a971d_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1ab6a99d7_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1ab6a9ca1_IsHex(jule::I32 _46710_r);
inline jule::Bool _1ab6aa06a_IsAssign(jule::U64 _48213_id);
inline jule::Bool _1ab6aa334_IsPostfixOp(jule::U64 _49416_id);
inline jule::Bool _1ab6aa5ed_IsAssignOp(jule::U64 _50415_id);
inline _1a388d1ac_Log _1ab6adc50_makeErr(jule::I64 _10112_row, jule::I64 _10122_col, jule::Ptr<_1ab6aadb2_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1ab6ae118_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1ab6ae48c_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I64 _12332_i);
inline jule::Str _1ab6ae855_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I64 _15728_i);
inline jule::Str _1ab6aebc9_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I64 _16136_i);
inline jule::Str _1ab6b004d_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I64 _18236_i);
inline jule::Str _1ab6b03c2_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I64 _18735_i);
inline jule::Str _1ab6b0856_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I64 _19231_i);
inline jule::Str _1ab6b0a98_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1ab6b0d62_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1ab6b11d6_isFloatFmtE(jule::U8 _26216_b, jule::I64 _26225_i);
inline jule::Bool _1ab6b155a_isFloatFmtP(jule::U8 _26616_b, jule::I64 _26625_i);
inline jule::Bool _1ab6b18ce_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I64 _27038_i);
inline jule::Bool _1ab6b1c53_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I64 _29133_i);
inline jule::Bool _1ab6b20c7_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I64 _30434_i);
inline jule::Str _1ab6b25c2_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1ab6b279d_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1ab6b2b00_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I64 _39428_n);
inline jule::Str _1ab6b2db9_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1ab6b3183_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1ab6b344c_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1ab6b3716_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1a388d1ac_Log> _1ab6bd567_Lex(jule::Ptr<_1ab6aadb2_Fileset> _80712_f, jule::I64 _80725_mode);
inline void _1ab079c37_lshiftUnsig(_1ab070c61_Const* _58821_c, _1ab070c61_Const* _58832_x);
inline void _1ab07a067_rshiftUnsig(_1ab070c61_Const* _59421_c, _1ab070c61_Const* _59432_x);
inline jule::Str _1ab10ee43_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1ab11020c_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1ab11054d_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1ab1107d4_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1ab110a9d_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1ab1116a3_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1ab11196c_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1ab111c36_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1ab112000_BitSizeOfUint(jule::U64 _19718_x);
inline void _1ab112198_UpdateTarget(void);
inline void _1ab11231e_init(void);
inline jule::I64 _1ab115dd3_MinI(jule::Str _6113_k);
inline jule::I64 _1ab1161e1_MaxI(jule::Str _7913_k);
inline jule::U64 _1ab1164aa_MaxU(jule::Str _9713_k);
inline jule::F64 _1ab1167eb_Min(jule::Str _11512_k);
inline jule::F64 _1ab116a82_Max(jule::Str _13312_k);
inline jule::Bool _1ab117ba4_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1ab117eb2_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1ab11827b_IsInt(jule::Str _4610_k);
inline jule::Bool _1ab1185bc_IsFloat(jule::Str _5112_k);
inline jule::Bool _1ab118853_IsNum(jule::Str _5610_k);
inline jule::Bool _1ab118b1c_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1ab87ea03_FindModuleFile(jule::Slice<_1a68ca14c_Dir>* _1320_dirents);
inline jule::Str _1ab87ec12_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1a388d1ac_Log> _1ab87eecb_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1ab88076d_IsPub(jule::Str _910_ident);
inline jule::Bool _1ab8dd7cb_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1ab8c5263_ToRune(jule::Str _2015_lit);
inline jule::Str _1ab8e0701_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1ab8e0a42_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1ab8e0cc8_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1ab8e114c_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1ab8e14e3_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1ab9a69c6_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1ab9ad56b_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1ab9ad857_FmtByDefault(_1a387dcd5_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1ab9adc75_applyFmtByDefault(_1a387dcd5_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1ab9ae193_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1a387dcd5_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1ab9ae517_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1ab9b16b2_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1ab0898e5_Fn> _1aa776643_runtimeFindFn(jule::Ptr<_1ab866578_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1a37a2577_Struct> _1aa776b93_runtimeFindStruct(jule::Ptr<_1ab866578_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1ab08ec80_parameterUsesGenerics(jule::Ptr<_1ab08b84d_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1ab906a8b_Data> _1ab82bdbd_buildAsComptimeMethodData(jule::Ptr<_1ab08c9a3_FnIns>* _203035_f);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab82c0cc_findComptimePackage(jule::Ptr<_1ab883573_sema>* _203829_s);
inline jule::Ptr<_1ab906a8b_Data> _1ab82c451_buildComptimeTypeInfoData(jule::Ptr<_1ab883573_sema>* _204435_s, jule::Ptr<_1ab939816_Type>* _204450_t);
inline jule::Ptr<_1ab906a8b_Data> _1ab82c792_buildComptimeValue(jule::Ptr<_1ab906a8b_Data>* _205228_d);
inline jule::Str _1ab8305b9_toStrConstraints(jule::Ptr<_1ab937e30_InsGeneric> _14321_g);
inline jule::Bool _1ab830982_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ab939816_Type>* _15434_g);
inline jule::Bool _1ab830c4b_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab833633_newScopeCheckerBase(jule::Ptr<_1ab883573_sema>* _3229_s, jule::Ptr<_1ab08c9a3_FnIns> _3243_owner);
inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab8339eb_newScopeChecker(jule::Ptr<_1ab883573_sema>* _4025_s, jule::Ptr<_1ab08c9a3_FnIns> _4039_owner);
inline jule::Ptr<_1ab83be77_scopeLabel> _1ab833d70_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1ab83ce67_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1ab906a8b_Data>> _1ab8341b1_getDatasFromTupleData(jule::Ptr<_1ab906a8b_Data>* _6231_d);
inline jule::Bool _1ab834931_checkMut(jule::Ptr<_1ab883573_sema>* _9718_s, jule::Ptr<_1ab906a8b_Data>* _9729_left, jule::Ptr<_1ab906a8b_Data> _9746_right, jule::Ptr<_1ab6a54d8_Token> _9760_op);
inline jule::Bool _1ab834e1a_checkAssign(jule::Ptr<_1ab883573_sema>* _11621_s, jule::Ptr<_1ab906a8b_Data>* _11636_left, jule::Ptr<_1ab906a8b_Data> _11653_right, jule::Ptr<_1ab6a54d8_Token> _11667_op);
inline jule::Bool _1ab8352e4_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1ab835536_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U64 _1ab8506b6_removeEqFromOp(jule::U64 _214019_op);
inline void _1ab8508e7_makeComptimeRange(jule::Ptr<_1ab906a8b_Data>* _216927_d);
inline jule::Bool _1ab850bb1_canComptimeMatch(jule::Ptr<_1ab906a8b_Data>* _219226_d);
inline jule::Bool _1ab850e7a_stmtIsDef(jule::Any* _220015_stmt);
inline jule::I64 _1ab8512ee_countMatchType(jule::Ptr<_1ab83a409_Match>* _221220_m, jule::Ptr<_1ab939816_Type>* _221232_t);
inline jule::Ptr<_1ab942027_TypeSym> _1ab855db4_buildType(jule::Ptr<_1ab6c0877_TypeDecl> _6818_t);
inline jule::Ptr<_1ab907c13_Value> _1ab8561c2_buildExpr(jule::Ptr<_1ab6c4bab_Expr> _7718_expr);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab85648b_buildTypeAlias(jule::Ptr<_1a37986b1_TypeAliasDecl> _8623_decl);
inline jule::Ptr<_1a379e651_Field> _1ab8567cc_buildField(jule::Ptr<_1a379bcd0_FieldDecl> _9719_decl);
inline jule::Slice<jule::Ptr<_1a379e651_Field>> _1ab856a63_buildFields(jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>>* _10821_decls);
inline jule::Ptr<_1a37a2577_Struct> _1ab856d2c_buildStruct(jule::Ptr<_1a379c6c6_StructDecl> _11620_decl);
inline jule::Ptr<_1ab087e21_Param> _1ab8570e6_buildParam(jule::Ptr<_1a3792402_ParamDecl> _12819_decl);
inline jule::Slice<jule::Ptr<_1ab087e21_Param>> _1ab8574c0_buildParams(jule::Slice<jule::Ptr<_1a3792402_ParamDecl>>* _13921_decls);
inline jule::Ptr<_1ab087849_RetType> _1ab857712_buildRetType(jule::Ptr<_1ab6c376a_RetTypeDecl> _14721_decl);
inline jule::Ptr<_1ab0898e5_Fn> _1ab8579cb_buildFunc(jule::Ptr<_1a3793854_FnDecl> _15718_decl);
inline jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _1ab857c95_buildMethods(jule::Slice<jule::Ptr<_1a3793854_FnDecl>>* _17522_decls);
inline jule::Slice<jule::Ptr<_1ab942027_TypeSym>> _1ab85805e_buildTraitInherits(jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>* _18328_inherits);
inline jule::Ptr<_1ab095109_Trait> _1ab858328_buildTrait(jule::Ptr<_1a379ce13_TraitDecl> _19119_decl);
inline jule::Ptr<_1ab096c54_EnumItem> _1ab8585e2_buildEnumItem(jule::Ptr<_1a3799eba_EnumItemDecl> _20122_decl);
inline jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _1ab8588ab_buildEnumItems(jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>>* _20924_decls);
inline jule::Ptr<_1ab0977b0_Enum> _1ab858da6_buildEnum(jule::Ptr<_1a379aa7b_EnumDecl> _21718_decl);
inline jule::Ptr<_1ab0988e3_TypeEnumItem> _1ab859082_buildTypeEnumItem(jule::Ptr<_1a379b3a6_TypeEnumItemDecl> _22726_decl);
inline jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> _1ab859329_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>>* _23528_decls);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab8595e3_buildTypeEnum(jule::Ptr<_1a379ba16_TypeEnumDecl> _24322_decl);
inline jule::Ptr<_1ab8a7289_Var> _1ab8598ac_buildVar(jule::Ptr<_1a3794a0e_VarDecl> _25217_decl);
inline jule::Slice<jule::Ptr<_1ab8a7289_Var>> _1ab859b76_buildVars(jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _26918_decls);
inline jule::Ptr<_1ab8315ba_Impl> _1ab859e40_buildImpl(jule::Ptr<_1a379d573_Impl> _27718_decl);
inline jule::Bool _1ab861760_isImplicitImport(jule::Ptr<_1ab866578_ImportInfo> _79021_imp);
inline jule::Ptr<_1ab090be8_SymTab> _1ab8638b6_findVarFileInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _4430_files, jule::Ptr<_1ab8a7289_Var>* _4449_v);
inline jule::Ptr<_1ab8a7289_Var> _1ab863d39_findVarInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab864268_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1a37a2577_Struct> _1ab86471e_findStructInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1ab0898e5_Fn> _1ab864b1a_findFnInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1ab095109_Trait> _1ab864e8e_findTraitInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1ab0977b0_Enum> _1ab865313_findEnumInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1ab098eba_TypeEnum> _1ab865797_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1ab86b2c5_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1ab880e33_isValidModelForRef(jule::Any* _1428_m);
inline _1a388d1ac_Log _1ab881461_compilerErr(jule::Ptr<_1ab6a54d8_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args);
inline void _1ab88174c_appendRetVars(jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _6223_dest, jule::Ptr<_1ab08c9a3_FnIns>* _6242_f);
inline void _1ab881a7c_appendParamVars(jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _9225_dest, jule::Ptr<_1ab08c9a3_FnIns>* _9244_f);
inline void _1ab881d68_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>* _15234_dest, jule::Ptr<_1ab08c9a3_FnIns>* _15259_f);
inline jule::Ptr<_1ab090be8_SymTab> _1ab8821dc_findFile(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _19318_files, jule::Ptr<_1ab6aadb2_Fileset>* _19337_handler);
inline void _1ab882583_pushSuggestion(_1a388d1ac_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args);
inline void _1ab8a51dd_pushImplemented(jule::Ptr<_1ab095109_Trait> _280324_t, jule::Ptr<_1a37a2577_Struct>* _280340_d);
inline void _1ab8a54c9_pushImplements(jule::Ptr<_1a37a2577_Struct>* _282124_s, jule::Ptr<_1ab095109_Trait> _282140_t);
inline void _1ab8a592a_pushRuntimeToStr(jule::Ptr<_1ab883573_sema>* _283926_s, jule::Ptr<_1ab939816_Type>* _283941_t, jule::Ptr<_1ab6a54d8_Token>* _283956_token, jule::Ptr<_1ab854577_ReferenceStack> _28406_refers);
inline jule::Bool _1ab8a5be4_isValidImpAlias(jule::Str _285724_alias);
inline jule::Bool _1ab8e1b42_traitHasReferenceReceiver(jule::Ptr<_1ab095109_Trait>* _1631_t);
inline jule::Bool _1ab8e200a_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1ab906a8b_Data>* _3133_d);
inline jule::Bool _1ab8e237e_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1ab906a8b_Data>* _3630_d);
inline jule::Bool _1ab8e2747_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1ab906a8b_Data>* _5932_d);
inline jule::Bool _1ab8e2abb_intAssignable(jule::Str _8818_kind, jule::Ptr<_1ab906a8b_Data>* _8830_d);
inline void _1ab8ee0b1_checkMutRiskOfStructLit(jule::Ptr<_1ab883573_sema>* _90933_s, jule::Ptr<_1ab07d3bc_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1ab939816_Type> _1ab904dec_lenKind(void);
inline jule::Bool _1ab90524e_isGoodValueToInfer(jule::Ptr<_1ab906a8b_Data>* _141224_d);
inline jule::Ptr<_1ab6bec94_Directive> _1ab93108d_findDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _435423_directives, jule::Str _435454_d);
inline jule::Any _1ab931456_findBuiltinsImport(jule::Str* _436324_ident, jule::Ptr<_1ab866578_ImportInfo> _436336_imp);
inline void _1ab931687_fitBitsize(jule::Ptr<_1ab906a8b_Data>* _437220_d);
inline void _1ab9319b7_makeStructLitAlloc(jule::Ptr<_1ab906a8b_Data>* _440128_d, jule::Ptr<_1ab07d3bc_StructLitExprModel>* _440143_lit);
inline jule::Ptr<_1ab8a7289_Var> _1ab931d3b_buildErrorVar(jule::Ptr<_1ab835bc9_Scope>* _441223_s, jule::Ptr<_1a378984a_FnCallExpr>* _441239_fc);
inline jule::Any _1ab9321b0_findBuiltinsSema(jule::Str* _442722_ident, jule::Ptr<_1ab883573_sema> _442738_s);
inline jule::Bool _1ab932479_isOkForShifting(jule::Ptr<_1ab906a8b_Data>* _444225_d);
inline jule::Bool _1ab932853_isInstancedStruct(jule::Ptr<_1a37a53d2_StructIns> _445922_s);
inline jule::Bool _1ab932b50_isPtrArithmeticCompatible(jule::Ptr<_1ab906a8b_Data>* _446335_l, jule::Ptr<_1ab906a8b_Data>* _446350_r);
inline void _1ab93315b_applyRuntimeToStr(jule::Ptr<_1ab883573_sema>* _448427_s, jule::Ptr<_1ab939816_Type>* _448442_from, jule::Ptr<_1ab939816_Type>* _448460_to, jule::Ptr<_1ab6a54d8_Token>* _44857_token, jule::Ptr<_1ab854577_ReferenceStack> _448533_refers);
inline void _1ab933667_applyCastKindModel(jule::Ptr<_1ab883573_sema>* _449928_s, jule::Ptr<_1ab906a8b_Data>* _449943_d, jule::Ptr<_1ab939816_Type>* _449958_t, jule::Ptr<_1ab6a54d8_Token>* _45007_token, jule::Ptr<_1ab854577_ReferenceStack> _450033_refers);
inline void _1ab933b73_applyCastKind(jule::Ptr<_1ab883573_sema>* _451023_s, jule::Ptr<_1ab906a8b_Data>* _451038_d, jule::Ptr<_1ab939816_Type>* _451053_t, jule::Ptr<_1ab6a54d8_Token>* _45117_token, jule::Ptr<_1ab854577_ReferenceStack> _451133_refers);
inline jule::Ptr<_1ab906a8b_Data> _1ab933d82_buildVoidData(void);
inline jule::Str _1ab93436b_checkDataForIntegerIndexing(jule::Ptr<_1ab883573_sema>* _452237_s, jule::Ptr<_1ab906a8b_Data>* _452252_d, jule::Ptr<_1ab6a54d8_Token>* _45237_token, jule::Ptr<_1ab854577_ReferenceStack> _452333_refers);
inline void _1ab934877_applyCastModelByEnum(jule::Ptr<_1ab883573_sema>* _454830_s, jule::Ptr<_1ab906a8b_Data>* _454845_d, jule::Ptr<_1ab0977b0_Enum> _454859_e, jule::Ptr<_1ab6a54d8_Token>* _45497_token, jule::Ptr<_1ab854577_ReferenceStack> _454933_refers);
inline void _1ab934d94_castConstByType(jule::Str* _455621_t, jule::Ptr<_1ab906a8b_Data>* _455634_d);
inline void _1ab935070_updateModelToGenericIns(jule::Any* _459033_m, jule::Ptr<_1ab08c9a3_FnIns>* _459052_f);
inline jule::Bool _1ab9353e4_pushSubIdentFromExpr(jule::Any _460129_expr, jule::Ptr<_1ab6c124b_SubIdentTypeDecl>* _460155_t);
inline jule::Str _1ab9356ad_constoa(jule::Ptr<_1ab070c61_Const>* _462413_c);
inline jule::Ptr<_1ab906a8b_Data> _1ab935c52_evalEnumStatic(jule::Ptr<_1ab883573_sema>* _463524_s, jule::Ptr<_1ab0977b0_Enum>* _463539_enm, jule::Ptr<_1ab096c54_EnumItem>* _463556_item, jule::Ptr<_1ab6a54d8_Token>* _46367_token, jule::Ptr<_1ab854577_ReferenceStack> _463633_refers);
inline jule::Ptr<_1ab07d3bc_StructLitExprModel> _1ab93601b_isLitBased(jule::Any* _465320_m);
inline void _1ab936307_makeImplicitDeref(jule::Ptr<_1ab906a8b_Data>* _467027_d, jule::Ptr<_1ab6a54d8_Token> _467041_baseToken);
inline void _1b0c37813_updateRefer(jule::Ptr<_1ab854577_ReferenceStack> _468123_ref, jule::Ptr<_1ab08c9a3_FnIns>* _468146_old, jule::Ptr<_1ab08c9a3_FnIns>* _468159_new);
inline void _1ab936989_makeVariadic(jule::Ptr<_1ab906a8b_Data>* _468922_d, jule::Ptr<_1ab939816_Type> _468936_elem);
inline jule::Bool _1ab936db8_isVarCaptured(jule::Ptr<_1ab83ce67_scopeChecker> _470318_r, jule::Ptr<_1ab83ce67_scopeChecker> _470340_s, jule::Ptr<_1ab8a7289_Var> _470358_v);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab93723c_findNamespace(jule::Trait _472022_lookup, jule::Str _472038_namespace);
inline jule::Bool _1ab9559b9_kindUsesGenerics(jule::Ptr<_1ab939816_Type>* _173126_k, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _173137_generics);
inline jule::Bool _1ab955d82_hasDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _174122_directives, jule::Str _174153_tag);
inline jule::Bool _1ab95614b_canGetPtr(jule::Ptr<_1ab906a8b_Data>* _175019_d);
inline jule::Bool _1ab95648c_isValidForSptrType(jule::Ptr<_1ab939816_Type>* _175328_t);
inline jule::Bool _1ab956723_isValidForRef(jule::Ptr<_1ab939816_Type>* _176223_t);
inline jule::Bool _1ab9569dc_isBuiltinStrConvertable(jule::Ptr<_1ab939816_Type>* _176533_t);
inline jule::Ptr<_1ab94292e_Prim> _1ab956ca6_buildPrimType(jule::Str _176918_kind);
inline void _1ab957614_applyImplicitCast(jule::Ptr<_1ab883573_sema>* _179727_s, jule::Ptr<_1ab939816_Type>* _179742_dest, jule::Ptr<_1ab906a8b_Data>* _179760_d, jule::Ptr<_1ab6a54d8_Token>* _17987_token, jule::Ptr<_1ab854577_ReferenceStack> _179833_refers);
inline jule::Bool _1ab9578cd_validTypeForXof(jule::Ptr<_1ab939816_Type>* _182725_t);
inline __jule_tuple_x_1ab090be8_SymTab__jule_tuple_s_1a388d1ac_Log _1ab95a8d1_buildSymbols(jule::Ptr<_1ab6bd9b8_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1ab85a506_symBuilder> _1667_owner);
inline void _1ab95ac11_collectImplicitImports(jule::Ptr<_1ab883573_sema>* _3132_s, jule::Ptr<_1ab090be8_SymTab>* _3147_file);
inline __jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log _1ab95b140_analyzePackage(jule::Slice<jule::Ptr<_1ab6bd9b8_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags);
inline __jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log _1ab95b5e6_AnalyzePackage(jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab9b211e_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab9b240a_primTypeAlias(jule::Ptr<_1ab939816_Type>* _5723_k);
inline jule::Ptr<_1ab8a7289_Var> _1ab9b5cb0_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1ab938a24_TypeAlias> _1ab9b6101_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1ab9b6387_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1ab9b6651_findBuiltinDefStdMem(jule::Str* _20426_ident);
inline jule::Any _1ab9b691a_findBuiltinDefStdComptime(jule::Str* _22031_ident);
inline jule::Any _1ab9b6ce4_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident);
inline jule::Any _1ab9b70e1_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b7465_builtinCallerError(jule::Ptr<_1ab9087b3_eval>* _27328_e, jule::Ptr<_1a378984a_FnCallExpr>* _27343_fc);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b7894_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _30428_e, jule::Ptr<_1a378984a_FnCallExpr>* _30443_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9b7cc3_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _33130_e, jule::Ptr<_1a378984a_FnCallExpr>* _33145_fc, jule::Ptr<_1ab906a8b_Data>* _33172_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b8202_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _34326_e, jule::Ptr<_1a378984a_FnCallExpr>* _34341_fc, jule::Ptr<_1ab906a8b_Data>* _34368_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b8631_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _40528_e, jule::Ptr<_1a378984a_FnCallExpr>* _40543_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9b8a60_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _43127_e, jule::Ptr<_1a378984a_FnCallExpr>* _43142_fc, jule::Ptr<_1ab906a8b_Data>* _43169_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b91c0_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _48229_e, jule::Ptr<_1a378984a_FnCallExpr>* _48244_fc, jule::Ptr<_1ab906a8b_Data>* _48271_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b9599_callerCopySlice(jule::Ptr<_1ab906a8b_Data>* _60225_dest, jule::Ptr<_1ab9087b3_eval>* _60243_e, jule::Ptr<_1a378984a_FnCallExpr>* _60258_fc, jule::Ptr<_1ab906a8b_Data>* _60285_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b99c8_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _63627_e, jule::Ptr<_1a378984a_FnCallExpr>* _63642_fc, jule::Ptr<_1ab906a8b_Data>* _63669_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9b9d4c_callerLenSlice(jule::Ptr<_1ab906a8b_Data>* _66124_expr, jule::Ptr<_1ab906a8b_Data>* _66142_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9ba1c1_callerLenMap(jule::Ptr<_1ab906a8b_Data>* _66922_expr, jule::Ptr<_1ab906a8b_Data>* _66940_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9ba545_callerLenArr(jule::Ptr<_1ab906a8b_Data>* _67722_expr, jule::Ptr<_1ab906a8b_Data>* _67740_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9ba8b9_callerLenStr(jule::Ptr<_1ab906a8b_Data>* _68422_expr, jule::Ptr<_1ab906a8b_Data>* _68440_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bac3d_callerLenComptime(jule::Ptr<_1ab906a8b_Data>* _69727_d, jule::I64 _69737_n);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bb16c_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _70426_e, jule::Ptr<_1a378984a_FnCallExpr>* _70441_fc, jule::Ptr<_1ab906a8b_Data>* _70468_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bb4e1_callerCapSlice(jule::Ptr<_1ab906a8b_Data>* _74424_expr, jule::Ptr<_1ab906a8b_Data>* _74442_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bb920_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _75226_e, jule::Ptr<_1a378984a_FnCallExpr>* _75241_fc, jule::Ptr<_1ab906a8b_Data>* _75268_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bbe09_callerDeleteMap(jule::Ptr<_1ab9087b3_eval>* _77525_e, jule::Ptr<_1a378984a_FnCallExpr>* _77540_fc, jule::Ptr<_1ab906a8b_Data>* _77567_expr, jule::Ptr<_1ab906a8b_Data>* _77585_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bc338_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _80429_e, jule::Ptr<_1a378984a_FnCallExpr>* _80444_fc, jule::Ptr<_1ab906a8b_Data>* _80471_d);
inline jule::Ptr<_1ab906a8b_Data> _1ab9bc767_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _82740_e, jule::Ptr<_1a378984a_FnCallExpr>* _82755_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9bcb96_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _86341_e, jule::Ptr<_1a378984a_FnCallExpr>* _86356_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9bd0c5_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _88338_e, jule::Ptr<_1a378984a_FnCallExpr>* _88353_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9bd746_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _89538_e, jule::Ptr<_1a378984a_FnCallExpr>* _89553_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9bdb75_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _90839_e, jule::Ptr<_1a378984a_FnCallExpr>* _90854_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9be0a4_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _92143_e, jule::Ptr<_1a378984a_FnCallExpr>* _92158_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9be4d3_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _98135_e, jule::Ptr<_1a378984a_FnCallExpr>* _98150_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9be912_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _100636_e, jule::Ptr<_1a378984a_FnCallExpr>* _100651_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9bed41_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _103133_e, jule::Ptr<_1a378984a_FnCallExpr>* _103148_fc, jule::Ptr<_1ab906a8b_Data>* );
inline jule::Ptr<_1ab906a8b_Data> _1ab9c0270_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _105444_e, jule::Ptr<_1a378984a_FnCallExpr>* _105459_fc, jule::Ptr<_1ab906a8b_Data>* _105486_d);
inline jule::Ptr<_1ab39bba2_FileInfo> _1ab39c2bd_ParseFile(jule::Ptr<_1ab6aadb2_Fileset> _2318_f);
inline __jule_tuple_x_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log _1ab39c895_parseFileset(jule::Ptr<_1ab6aadb2_Fileset> _5521_f);
inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab39d225_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ab39d5aa_isSt(jule::Ptr<_1ab6a54d8_Token> _149_current, jule::Ptr<_1ab6a54d8_Token> _1433_prev);
inline jule::Bool _1ab39d92e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _2026_tokens, jule::I64* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1ab39dce7_nextStPos(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3415_tokens, jule::I64 _3440_start);
inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_bool _1ab39e16b_skipSt(jule::I64* _9616_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _1ab39e853_splitStmts(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _11720_tokens);
inline jule::Bool _1ab3b7d99_isTypeOp(jule::U64* _87114_id);
inline jule::Bool _1ab3b81a7_isTypeRange(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1ab3b8471_getBlockExpr(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _91122_tokens);
inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token _1ab3b8839_splitDelim(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _94320_tokens, jule::U64 _94345_delim);
inline jule::I64 _1ab3b8b03_findLowestPrecOp(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _98222_tokens);
inline jule::Ptr<_1ab6c64c6_IdentExpr> _1ab3b8dbc_buildIdentExpr(jule::Ptr<_1ab6a54d8_Token>* _104724_token);
inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_int _1ab3b9186_getRangeExprTokens(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _105528_tokens);
inline jule::Bool _1ab3b9560_isAnonFnHead(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _107818_tokens);
inline jule::Bool _1ab3ba20e_checkAssignTokens(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _1623_tokens);
inline _1a388d1ac_Log _1ab3bb1bb_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1ab6aadb2_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1ab3bb6e9_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3063_tokens);
inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token _1ab3bb9b3_rangeLast(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log _1ab3bbe69_parts(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust);
inline jule::U64 _1ab3bc200_getCloseOfBrace(jule::U64 _12820_left);
inline _1a388d1ac_Log _1ab3bc62e_compilerErr(jule::Ptr<_1ab6a54d8_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1ab3bc9c5_pushSuggestion(_1a388d1ac_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3cd93c_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1aba4a6e6_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1aba45aed_checkArch(jule::Str _2814_arg);
inline jule::Bool _1aba60a80_isPassFileAnnotation(jule::Str _5029_p);
inline void _1aba61c07_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1aba61e7c_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1aba62268_initVars(jule::Slice<jule::Str>* _5518_vars, _1aba618d8_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1ab3d2b50_readBuff(jule::Str _1613_path);
inline _1a388d1ac_Log _1ab3d2e5d_flatCompilerErr(jule::Str _2720_text);
inline jule::Ptr<_1ab0898e5_Fn> _1ab9c0bdd_RuntimeFindFn(jule::Ptr<_1ab866578_ImportInfo>* _1823_runtime, jule::Str _1851_ident);
inline jule::Ptr<_1a37a2577_Struct> _1ab9c12d7_RuntimeFindStruct(jule::Ptr<_1ab866578_ImportInfo>* _3327_runtime, jule::Str _3355_ident);
inline void _1ab3d787a_pushPasses(jule::Ptr<_1ab868cea_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1ab3d7c43_getAllUniquePasses(jule::Ptr<_1ab868cea_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _14053_uses);
inline _1aba618d8_CompileInfo _1ab3d7e52_buildCompileInfo(void);
inline void _1ab3d820a_pushRuntimeToAST(jule::Ptr<_1ab6bd9b8_AST>* _17926_f);
inline void _1ab3d8958_IterPackages(jule::Ptr<_1ab3d5ec7_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ab868cea_Package>*> _731_f);
inline void _1ab3d8bcd_IterFiles(jule::Ptr<_1ab868cea_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1ab090be8_SymTab>*> _1640_f);
inline void _1ab3d8eb9_IterTraitMethods(jule::Ptr<_1ab095109_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1ab0898e5_Fn>*> _2443_f);
inline jule::Bool _1ab3db20d_IsForwarded(jule::Ptr<_1ab835bc9_Scope>* _1217_s);
inline jule::Bool _1ab3db3d9_IsExprComesFromBind(jule::Ptr<_1ab906a8b_Data>* _2825_d);
inline jule::Bool _1ab3db6a3_IsAny(jule::Ptr<_1ab939816_Type>* _4015_t);
inline jule::Bool _1ab3db9e4_IsClosure(jule::Ptr<_1ab080435_AnonFnExprModel>* _4915_m);
inline jule::Bool _1ab3dbc7a_IsOpMethod(jule::Ptr<_1ab0898e5_Fn>* _5216_m);
inline jule::Bool _1ab3dc0ee_IsTraitMethod(jule::Ptr<_1a37a53d2_StructIns>* _6823_owner, jule::Ptr<_1ab08c9a3_FnIns>* _6849_f);
inline jule::Bool _1ab3dc473_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1ab6bec94_Directive> _1ab3dd30e_FindDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1ab3dd6c7_HasDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::I64 _1ab3de211_FindTraitTypeOffsetS(jule::Ptr<_1ab095109_Trait> _3925_t, jule::Ptr<_1a37a53d2_StructIns> _3946_s);
inline jule::I64 _1ab3de585_FindTraitTypeOffset(jule::Ptr<_1ab095109_Trait> _6224_t, jule::Ptr<_1ab939816_Type> _6245_k);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab3de9b4_FindOperator(jule::Ptr<_1a37a53d2_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1ab08c9a3_FnIns> _1ab3ded38_FindFnGenericInstance(jule::Ptr<_1ab0898e5_Fn>* _14731_f, jule::Slice<jule::Ptr<_1ab939816_Type>> _14745_generics);
inline jule::Ptr<_1a37a53d2_StructIns> _1ab3e02bc_FindStructGenericInstance(jule::Ptr<_1a37a2577_Struct>* _16335_s, jule::Slice<jule::Ptr<_1ab939816_Type>> _16353_generics);
inline jule::Ptr<_1ab866578_ImportInfo> _1ab3e05b9_SelectImport(jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _17821_imports, jule::Str _17851_linkpath);
inline jule::Bool _1abc362d8_isOrdered(jule::Ptr<_1ab8a7289_Var>* _1418_t, jule::Slice<jule::Ptr<_1ab8a7289_Var>> _1425_s);
inline jule::Bool _1abc3c058_isOrdered(jule::Ptr<_1a37a2577_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a37a2577_Struct>> _1425_s);
inline void _1abc33912_order(jule::Slice<jule::Ptr<_1ab8a7289_Var>> _3717_s);
inline void _1abc344e5_order(jule::Slice<jule::Ptr<_1a37a2577_Struct>> _3717_s);
inline void _1ad1d1bd3_EliminateDefines(jule::Ptr<_1ab3d5ec7_IR>* _38426_ir);
inline void _1ad1d5a94_eliminateDeadCodeOfScope(jule::Ptr<_1ab835bc9_Scope> _21833_s);
inline void _1ad1d5d19_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ab0898e5_Fn>>* _23033_funcs);
inline void _1ad1d604a_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a37a2577_Struct>>* _23937_structs);
inline void _1ad1d6303_eliminateFunctionsScopePackage(jule::Ptr<_1ab868cea_Package>* _24740_pkg);
inline void _1ad1d6501_eliminateScopePackage(jule::Ptr<_1ab868cea_Package>* _25431_pkg);
inline void _1ad1d6732_EliminateScopes(jule::Ptr<_1ab3d5ec7_IR>* _25925_ir);
inline jule::Uintptr _1ad10dc75_typeData(jule::Any* _914_m);
inline jule::Bool _1ad10deea_equalConst(jule::Ptr<_1ab070c61_Const> _1315_l, jule::Ptr<_1ab070c61_Const> _1336_r);
inline jule::Bool _1ad11eabb_equalCasting(jule::Ptr<_1ab07dc4c_CastingExprModel> _3217_l, jule::Ptr<_1ab07dc4c_CastingExprModel> _3245_r);
inline jule::Bool _1ad11ee84_equalUnary(jule::Ptr<_1ab07c9e8_UnaryExprModel> _3915_l, jule::Ptr<_1ab07c9e8_UnaryExprModel> _3941_r);
inline jule::Bool _1ad120308_equalIndexing(jule::Ptr<_1ab07ee7e_IndexingExprModel> _4618_l, jule::Ptr<_1ab07ee7e_IndexingExprModel> _4647_r);
inline jule::Bool _1ad12067c_equalBinary(jule::Ptr<_1ab07c61e_BinaryExprModel> _5116_l, jule::Ptr<_1ab07c61e_BinaryExprModel> _5143_r);
inline jule::Bool _1ad120a01_equalModels(jule::Any _6216_l, jule::Any _6236_r);
inline void _1ad1266a5_possibleNilRemove(jule::Ptr<_1ad1256c6_nils>* _7227_n, jule::Any _7237_m);
inline jule::Bool _1ad126a6d_isGuaranteedNonNilExpr(jule::Ptr<_1ad1256c6_nils>* _7832_n, jule::Any _7842_m);
inline jule::Bool _1ad126d37_isNilValidType(jule::Ptr<_1ab939816_Type> _8623_t);
inline jule::Uintptr _1ad127178_getNilVar(jule::Any _8814_m);
inline jule::Bool _1ad12cda4_isConstantValidConditionalCase(jule::Ptr<_1ab8360e7_If>* _67636_i);
inline jule::Bool _1ad12d1b2_isUnreachableExpr(jule::Any* _68523_expr);
inline jule::Bool _1ad12d47b_isConstantValidMatchCase(jule::Ptr<_1ab83ae32_Case>* _70030_case);
inline jule::Bool _1ad12d7bc_isUnreachableConditionalCase(jule::Ptr<_1ab8360e7_If>* _70934_i);
inline jule::Bool _1ad12da53_isUnreachableMatchCase(jule::Ptr<_1ab83ae32_Case>* _71328_case);
inline __jule_tuple_bool__jule_tuple_u64 _1ad1340db_checkForBitShiftOpt(jule::Ptr<_1ab07c124_OperandExprModel>* _62225_l, jule::Ptr<_1ab07c124_OperandExprModel>* _62254_r);
inline jule::Bool _1ad1344a4_areSameLvalueExprModel(jule::Any* _63928_l, jule::Any* _63949_r);
inline void _1ad136561_possibleDynamicRemove(jule::Ptr<_1ad1354c7_dynamic>* _7331_d, jule::Any _7344_m);
inline jule::Bool _1ad13686e_isDynamicValidType(jule::Ptr<_1ab939816_Type> _7927_t);
inline jule::Ptr<_1ab939816_Type> _1ad136c9d_isTypeGuaranteedDynamicData(jule::Ptr<_1ad1354c7_dynamic>* _8137_dy, jule::Ptr<_1ab939816_Type> _8155_t, jule::Any _8175_m);
inline jule::Uintptr _1ad1370de_getDynamicVar(jule::Any _10618_m);
inline jule::Bool _1ad13ac08_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1ad13b0c1_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr);
inline jule::Bool _1ad13b445_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2);
inline void _1ad13b775_possibleBoundaryRemove(jule::Ptr<_1ad139b91_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1ad13ba3e_isBoundaryRiskyType(jule::Ptr<_1ab939816_Type> _13628_t);
inline jule::Bool _1ad13bd08_isBoundaryValidType(jule::Ptr<_1ab939816_Type> _14128_t);
inline jule::Uintptr _1ad13c0c2_getBoundaryVar(jule::Any _14319_m);
inline void _1ad14069c_PushOptLevel(jule::I64 _3817_level);
inline void _1ad1da1a3_detectEnabled(void);
inline void _1b21bddca_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1b21bc9de_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I64 _4230_r);
inline void _1b21b8ce8_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I64 _4831_r);
inline jule::Bool _1b21b7489_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::U8> _1b21b30de_Insert(jule::Slice<jule::U8> _7226_s, jule::I64 _7232_i, jule::Slice<jule::U8> _7240_v);
inline jule::U64 _1ad4b5736_unix(void);
inline jule::Bool _1ad1e56ca_isCopyOptimizable(jule::Ptr<_1ab906a8b_Data>* _117623_expr);
inline jule::Bool _1ad1e5a93_isIterCopyOptimizable(jule::Ptr<_1ab906a8b_Data>* _118727_expr, jule::Ptr<_1ab8a7289_Var>* _118747_v);
inline jule::Bool _1ad1e5ec2_captureVarHandling(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _119428_oc, jule::Ptr<_1ab080435_AnonFnExprModel>* _119451_m, jule::Ptr<_1ab8a7289_Var>* _119483_v);
inline jule::Str _1ad2085bc_decomposeCommonEsq(jule::U8 _191623_b);
inline jule::Str _1ad2088ca_sbtoa(jule::U8 _194310_b);
inline void _1ad208bb6_cstrBytes(_1a387dcd5_Builder* _196319_s, jule::Str _196340_ctx);
inline void _1ad208ee6_cstrLit(_1a387dcd5_Builder* _196917_s, jule::Str _196938_ctx);
inline void _1ad20938c_ftoa(_1a387dcd5_Builder* _197514_s, jule::F64 _197535_f, jule::I64 _197543_bitsize);
inline void _1ad209678_itoa(_1a387dcd5_Builder* _199314_s, jule::I64 _199335_x);
inline void _1ad209964_utoa(_1a387dcd5_Builder* _201014_s, jule::U64 _201035_x);
inline void _1ad20a0b3_operatorOverloadingBinary(_1a387dcd5_Builder* _202435_buf, jule::Ptr<_1a37a53d2_StructIns>* _202463_s, jule::Str* _202485_l, jule::Str* _20253_r, jule::U64 _202511_op, jule::Str _202526_kind);
inline jule::Slice<jule::U8> _1ad4cd573_concatAllParts(jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _138019_parts);
inline jule::Bool _1ad4cd881_isHeadDecl(jule::Ptr<_1ab0898e5_Fn>* _139620_m);
inline jule::Bool _1ad4cdb4a_defaultEq(jule::Ptr<_1a37a53d2_StructIns>* _140415_s);
inline jule::Bool _1ad4dca38_ableToInit(jule::Ptr<_1ab939816_Type>* _44920_t);
inline jule::Bool _1ad4dcd13_shouldInitialized(jule::Ptr<_1ab939816_Type>* _45627_t);
inline void _1a87c3087_printErrorMessage(jule::Str _3022_msg);
inline void _1a87c330c_help(jule::Slice<jule::Str>* _3510_args);
inline void _1a87c353d_version(jule::Slice<jule::Str>* _6313_args);
inline void _1a87c374c_toolDistos(void);
inline void _1a87c38b2_toolDistarch(void);
inline void _1a87c3ab0_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1a87c3ce1_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1a87c4132_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1a87c4374_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1a87c451c_showInfo(void);
void _1a87c4693_main(void);
inline void _1ad553ac1_init(void);
inline jule::Ptr<_1a68cec56_File> _1ad553d8a_openOutput(jule::Str* _2916_path);
inline void _1ad554033_clearObjects(void);
inline void _1ad554341_compileIr(jule::Str _5814_compiler, jule::Str _5829_compilerCmd);
inline jule::Bool _1ad55460a_isCppSourceFile(jule::Str _8520_path);
inline void _1ad55483b_pushCompCmdClang(_1a387dcd5_Builder* _9326_cmd);
inline void _1ad554a6c_pushCompCmdGcc(_1a387dcd5_Builder* _11924_cmd);
inline __jule_tuple_str__jule_tuple_str _1ad555001_genCompileCmd(jule::Str _14518_sourcePath, jule::Ptr<_1ab3d5ec7_IR>* _14536_ir);
inline jule::Str _1ad555188_getCompilePath(void);
inline void _1ad5553b9_applyTargetIndependentOptimizations(jule::Ptr<_1ab3d5ec7_IR>* _19145_ir);
inline void _1ad555562_checkCompilerFlag(void);
inline void _1ad555771_checkTargetArch(jule::Str _21320_arch);
inline void _1ad5559a2_checkTargetOs(jule::Str _22118_os);
inline void _1ad555bd3_checkTargetFlag(jule::Str* _22921_target);
inline void _1ad555e14_checkOptFlag(jule::Str* _25218_opt);
inline void _1ad5562cc_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ad556497_checkFlags(jule::Slice<jule::Str>* _28016_args);
inline void _1ad5566a6_setupSemaFlags(jule::I64* _32624_flags);
inline jule::Ptr<_1ab3d5ec7_IR> _1ad556970_buildIr(jule::Slice<jule::Str>* _33213_args);
inline void _1ad556ba1_compileCommand(jule::Slice<jule::Str>* _37224_args);


struct _1ab119aa7_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ab118e3b_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1ab11929e_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB);
	void(*_1ab1196bc_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB);
	jule::I64(*_1ab119953_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1ab863575_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ab8623ed_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1ab8625da_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ab86292b_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1ab866578_ImportInfo>(*_1ab862c6c_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log(*_1ab863168_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1ab863421_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab866578_ImportInfo> _4128__0);
};

struct _1ab939360_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1ab938dba_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1ab93920b_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other);
};

struct _1ab959bee_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1ab866578_ImportInfo>(*_1ab957ed8_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _929_selector);
	jule::Ptr<_1ab8a7289_Var>(*_1ab9583d4_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1ab938a24_TypeAlias>(*_1ab9587d0_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a37a2577_Struct>(*_1ab958bcb_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1ab0898e5_Fn>(*_1ab9590c7_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1ab095109_Trait>(*_1ab959418_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1ab0977b0_Enum>(*_1ab959759_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1ab098eba_TypeEnum>(*_1ab959a9a_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1ad54bb52_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1ad51a01b_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1ad51a15e_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ad51a33a_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1ad54ba0e_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab11c0c6_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab12030a_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab123088_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1268e9_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab128258_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab133a38_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1370d0_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3d3447_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a37a53d2_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08c9a3_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab095109_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0977b0_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab098eba_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab119cc7_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab11a833_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab11da56_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab121c79_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab124a90_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab129bc7_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab130ccc_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1354a7_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1393bd_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab939816_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab94292e_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab94645a_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab946e2d_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab947a22_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab9485c2_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab94924e_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab949c22_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad4ced5a_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab090be8_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab83ce67_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab866578_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab868cea_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab883573_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2389ded_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b238d781_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2391e8d_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b23956de_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2398deb_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab8a7289_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab938a24_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a37a2577_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0898e5_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379e651_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab070c61_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab096c54_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab087e21_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab838726_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab835bc9_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0856b0_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab906a8b_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0866c2_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab084439_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab083009_BuiltinPrintCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab083306_BuiltinPrintlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab083aa9_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0852d6_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab084e0c_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0869be_FreeExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07e5ee_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab836812_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab836b0e_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3795e83_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab8370b5_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379688a_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab837a11_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab837d96_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab838d86_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab839260_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab839716_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c64c6_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07ee7e_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab839bbc_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab83a409_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab83b62a_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab838270_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab83b9c1_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3791bb5_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3794a0e_VarDecl>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a37986b1_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c4bab_Expr>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3797e74_Conditional>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3795658_Iter>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379713d_ContSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378e19b_LabelSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378e575_GotoSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3790565_AssignSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3799481_MatchCase>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378e872_FallSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3796c64_BreakSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3794dd8_RetSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c5580_UseExpr>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379d573_Impl>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379c6c6_StructDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3793854_FnDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379ce13_TraitDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379aa7b_EnumDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a379ba16_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c2b43_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c1ca7_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c23a1_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c1922_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c3391_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c20a4_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c0e82_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c7142_VariadicExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07e9c8_SliceExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378a340_FieldExprPair>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378b94b_KeyValPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c57a0_TupleExpr>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab082c0c_TupleExprModel>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378984a_FnCallExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08634d_RuneExprModel>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab082910_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3788c34_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c124b_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c6c68_UnaryExpr>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c0877_TypeDecl>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378885a_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c1625_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08126b_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07dc4c_CastingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378c386_SliceExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07d3bc_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab082536_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0817ee_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab082190_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab080bd8_MapExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab080435_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c4e75_RangeExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c5b46_LitExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6c6020_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378cdae_IndexingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378d51e_SlicingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3788481_CastExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378ab6a_StructLit>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a378b121_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a37891da_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07c9e8_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07c61e_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07d6b9_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0836d0_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab084060_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab084736_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab084a33_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0859ac_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab086161_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad12156d_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad124164_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad122d55_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad1238b1_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad123c8a_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad121b01_SwapExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad12201e_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad1227c2_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad1231da_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad124461_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad12231b_RefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07d026_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad12475d_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad12175a_FnCallIgnoreExceptionalExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad1234d7_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1aeedae3b_1aee84742(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab11d0c7_index(_self_.as<_1ab11c0c6_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedae3b_1aee9d1a6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab1212ea_index(_self_.as<_1ab12030a_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedae3b_1aee8aa78(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab124111_index(_self_.as<_1ab123088_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedae3b_1aee91584(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab1277c9_index(_self_.as<_1ab1268e9_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedae3b_1aee998cd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab129248_index(_self_.as<_1ab128258_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedae3b_1aeeba04c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab134a28_index(_self_.as<_1ab133a38_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedae3b_1aeeb33db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab906a8b_Data>* _1426_d, jule::I64 _1436_i) {
	_1ab1381e1_index(_self_.as<_1ab1370d0_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1aeedb4d0_1aee84742(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab11cc64_ready(_self_.as<_1ab11c0c6_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedb4d0_1aee9d1a6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab120e87_ready(_self_.as<_1ab12030a_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedb4d0_1aee8aa78(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab123c9d_ready(_self_.as<_1ab123088_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedb4d0_1aee91584(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab127466_ready(_self_.as<_1ab1268e9_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedb4d0_1aee998cd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab128dd5_ready(_self_.as<_1ab128258_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedb4d0_1aeeba04c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab1346b5_ready(_self_.as<_1ab133a38_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedb4d0_1aeeb33db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab8a7289_Var>* _1526_keyA, jule::Ptr<_1ab8a7289_Var>* _1543_keyB) {
	_1ab137d7d_ready(_self_.as<_1ab1370d0_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aee84742(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab11d4e5_step(_self_.as<_1ab11c0c6_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aee9d1a6(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab121718_step(_self_.as<_1ab12030a_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aee8aa78(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab12452e_step(_self_.as<_1ab123088_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aee91584(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab127be7_step(_self_.as<_1ab1268e9_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aee998cd(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab129666_step(_self_.as<_1ab128258_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aeeba04c(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab134e46_step(_self_.as<_1ab133a38_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1aeedbba6_1aeeb33db(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ab8a7289_Var>* _1633_keyA, jule::Ptr<_1ab8a7289_Var>* _1650_keyB) {
	_1ab13860e_step(_self_.as<_1ab1370d0_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aee84742(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab11d77b_len(_self_.as<_1ab11c0c6_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aee9d1a6(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab12199e_len(_self_.as<_1ab12030a_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aee8aa78(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab1247b5_len(_self_.as<_1ab123088_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aee91584(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab127e7d_len(_self_.as<_1ab1268e9_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aee998cd(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab1298ec_len(_self_.as<_1ab128258_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aeeba04c(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab1351cc_len(_self_.as<_1ab133a38_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1aeedc38d_1aeeb33db(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab138895_len(_self_.as<_1ab1370d0_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1aeedc6ce_1abbb2242(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1ab3d404c_SetModPath(_self_.as<_1ab3d3447_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1aeedcb30_1abbb2242(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab3d42d3_GetModPath(_self_.as<_1ab3d3447_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1aeedd03c_1abbb2242(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1ab3d4624_ModById(_self_.as<_1ab3d3447_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1ab866578_ImportInfo> __jule_trait_method_1aeedd504_1abbb2242(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1ab3d4965_GetImport(_self_.as<_1ab3d3447_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log __jule_trait_method_1aeeddadc_1abbb2242(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1ab3d4d61_ImportPackage(_self_.as<_1ab3d3447_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1aeede4a0_1abbb2242(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab866578_ImportInfo> _4128__0) {
	_1ab3d5119_Imported(_self_.as<_1ab3d3447_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1aeede989_1aed62675(jule::Ptr<jule::Uintptr> _self_) {
	return _1a37a5789_Str(_self_.as<_1a37a53d2_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed619e8(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab08cd27_Str(_self_.as<_1ab08c9a3_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed79c0e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab095505_Str(_self_.as<_1ab095109_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed53996(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab097b67_Str(_self_.as<_1ab0977b0_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed5aabe(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab09933e_Str(_self_.as<_1ab098eba_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee981e5(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab11a1c3_Str(_self_.as<_1ab119cc7_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee87a0e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab11abda_Str(_self_.as<_1ab11a833_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee84742(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab11c48e_Str(_self_.as<_1ab11c0c6_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aeea1473(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab11de0d_Str(_self_.as<_1ab11da56_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee9d1a6(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab1206b2_Str(_self_.as<_1ab12030a_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee8dd45(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab122131_Str(_self_.as<_1ab121c79_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee8aa78(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab123550_Str(_self_.as<_1ab123088_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee94851(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab124e47_Str(_self_.as<_1ab124a90_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee91584(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab126b91_Str(_self_.as<_1ab1268e9_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aee998cd(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab128610_Str(_self_.as<_1ab128258_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed8b836(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab12a07e_Str(_self_.as<_1ab129bc7_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aeea44dc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab131184_Str(_self_.as<_1ab130ccc_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aeeba04c(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab133de0_Str(_self_.as<_1ab133a38_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aeeb66a8(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab13585e_Str(_self_.as<_1ab1354a7_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aeeb33db(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab1376b8_Str(_self_.as<_1ab1370d0_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aeeaa13b(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab139775_Str(_self_.as<_1ab1393bd_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed447cd(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab939c12_Str(_self_.as<_1ab939816_Type>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed48b45(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab942ca3_Str(_self_.as<_1ab94292e_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed50454(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab946812_Str(_self_.as<_1ab94645a_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed60167(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab9473e5_Str(_self_.as<_1ab946e2d_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aedc72ab(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab947dc9_Str(_self_.as<_1ab947a22_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aedc573d(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab948979_Str(_self_.as<_1ab9485c2_Map>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed5d71a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab949606_Str(_self_.as<_1ab94924e_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1aed51c19(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab94a0c9_Str(_self_.as<_1ab949c22_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1aeede989_1b1720053(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad4d0245_Str(_self_.as<_1ad4ced5a_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed62675(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1a37a5aca_Equal(_self_.as<_1a37a53d2_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed619e8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab08d168_Equal(_self_.as<_1ab08c9a3_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed79c0e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab095846_Equal(_self_.as<_1ab095109_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed53996(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab097ea8_Equal(_self_.as<_1ab0977b0_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed5aabe(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab099680_Equal(_self_.as<_1ab098eba_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee981e5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab11a514_Equal(_self_.as<_1ab119cc7_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee87a0e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab11b02b_Equal(_self_.as<_1ab11a833_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee84742(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab11c7d0_Equal(_self_.as<_1ab11c0c6_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aeea1473(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab11e24e_Equal(_self_.as<_1ab11da56_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee9d1a6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab120a03_Equal(_self_.as<_1ab12030a_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee8dd45(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab122472_Equal(_self_.as<_1ab121c79_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee8aa78(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab123891_Equal(_self_.as<_1ab123088_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee94851(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab125288_Equal(_self_.as<_1ab124a90_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee91584(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab126ed2_Equal(_self_.as<_1ab1268e9_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aee998cd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab128951_Equal(_self_.as<_1ab128258_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed8b836(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab12a3c0_Equal(_self_.as<_1ab129bc7_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aeea44dc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab1314c5_Equal(_self_.as<_1ab130ccc_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aeeba04c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab134231_Equal(_self_.as<_1ab133a38_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aeeb66a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab135ba0_Equal(_self_.as<_1ab1354a7_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aeeb33db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab137a09_Equal(_self_.as<_1ab1370d0_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aeeaa13b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab139ab6_Equal(_self_.as<_1ab1393bd_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed447cd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab93a053_Equal(_self_.as<_1ab939816_Type>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed48b45(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab9430e4_Equal(_self_.as<_1ab94292e_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed50454(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab946b53_Equal(_self_.as<_1ab94645a_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed60167(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab947736_Equal(_self_.as<_1ab946e2d_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aedc72ab(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab94821a_Equal(_self_.as<_1ab947a22_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aedc573d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab948cba_Equal(_self_.as<_1ab9485c2_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed5d71a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab949947_Equal(_self_.as<_1ab94924e_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1aed51c19(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ab94a41a_Equal(_self_.as<_1ab949c22_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1aeeded0d_1b1720053(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	return _1ad4d0586_Equal(_self_.as<_1ad4ced5a_customType>(), _3818_other);
}
inline jule::Ptr<_1ab866578_ImportInfo> __jule_trait_method_1aeee0380_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _929_selector) {
	return _1ab091215_SelectPackage(_self_.as<_1ab090be8_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1ab866578_ImportInfo> __jule_trait_method_1aeee0380_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _929_selector) {
	return _1ab83d440_SelectPackage(_self_.as<_1ab83ce67_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1ab866578_ImportInfo> __jule_trait_method_1aeee0380_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _929_selector) {
	return _1ab866a95_SelectPackage(_self_.as<_1ab866578_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1ab866578_ImportInfo> __jule_trait_method_1aeee0380_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _929_selector) {
	return _1ab8692c3_SelectPackage(_self_.as<_1ab868cea_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1ab866578_ImportInfo> __jule_trait_method_1aeee0380_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _929_selector) {
	return _1ab883a4b_SelectPackage(_self_.as<_1ab883573_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1ab8a7289_Var> __jule_trait_method_1aeee120a_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ab091611_FindVar(_self_.as<_1ab090be8_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ab8a7289_Var> __jule_trait_method_1aeee120a_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ab83d83b_FindVar(_self_.as<_1ab83ce67_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ab8a7289_Var> __jule_trait_method_1aeee120a_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ab866e91_FindVar(_self_.as<_1ab866578_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ab8a7289_Var> __jule_trait_method_1aeee120a_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ab8696be_FindVar(_self_.as<_1ab868cea_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ab8a7289_Var> __jule_trait_method_1aeee120a_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ab883e47_FindVar(_self_.as<_1ab883573_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ab938a24_TypeAlias> __jule_trait_method_1aeee17d2_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ab091a0c_FindTypeAlias(_self_.as<_1ab090be8_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ab938a24_TypeAlias> __jule_trait_method_1aeee17d2_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ab83dc37_FindTypeAlias(_self_.as<_1ab83ce67_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ab938a24_TypeAlias> __jule_trait_method_1aeee17d2_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ab86738c_FindTypeAlias(_self_.as<_1ab866578_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ab938a24_TypeAlias> __jule_trait_method_1aeee17d2_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ab869aba_FindTypeAlias(_self_.as<_1ab868cea_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ab938a24_TypeAlias> __jule_trait_method_1aeee17d2_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ab884343_FindTypeAlias(_self_.as<_1ab883573_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a37a2577_Struct> __jule_trait_method_1aeee1ddc_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ab091e08_FindStruct(_self_.as<_1ab090be8_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a37a2577_Struct> __jule_trait_method_1aeee1ddc_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ab83e133_FindStruct(_self_.as<_1ab83ce67_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a37a2577_Struct> __jule_trait_method_1aeee1ddc_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ab867788_FindStruct(_self_.as<_1ab866578_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a37a2577_Struct> __jule_trait_method_1aeee1ddc_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ab869eb6_FindStruct(_self_.as<_1ab868cea_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a37a2577_Struct> __jule_trait_method_1aeee1ddc_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ab88473e_FindStruct(_self_.as<_1ab883573_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ab0898e5_Fn> __jule_trait_method_1aeee24e7_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ab092304_FindFn(_self_.as<_1ab090be8_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ab0898e5_Fn> __jule_trait_method_1aeee24e7_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ab83e52e_FindFn(_self_.as<_1ab83ce67_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ab0898e5_Fn> __jule_trait_method_1aeee24e7_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ab867b84_FindFn(_self_.as<_1ab866578_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ab0898e5_Fn> __jule_trait_method_1aeee24e7_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ab86a3b2_FindFn(_self_.as<_1ab868cea_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ab0898e5_Fn> __jule_trait_method_1aeee24e7_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ab884b3a_FindFn(_self_.as<_1ab883573_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ab095109_Trait> __jule_trait_method_1aeee2b02_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ab092645_FindTrait(_self_.as<_1ab090be8_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1ab095109_Trait> __jule_trait_method_1aeee2b02_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ab83e870_FindTrait(_self_.as<_1ab83ce67_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1ab095109_Trait> __jule_trait_method_1aeee2b02_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ab867ec5_FindTrait(_self_.as<_1ab866578_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1ab095109_Trait> __jule_trait_method_1aeee2b02_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ab86a703_FindTrait(_self_.as<_1ab868cea_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1ab095109_Trait> __jule_trait_method_1aeee2b02_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ab884e7b_FindTrait(_self_.as<_1ab883573_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1ab0977b0_Enum> __jule_trait_method_1aeee3152_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ab092986_FindEnum(_self_.as<_1ab090be8_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1ab0977b0_Enum> __jule_trait_method_1aeee3152_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ab83ebb1_FindEnum(_self_.as<_1ab83ce67_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1ab0977b0_Enum> __jule_trait_method_1aeee3152_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ab868316_FindEnum(_self_.as<_1ab866578_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1ab0977b0_Enum> __jule_trait_method_1aeee3152_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ab86aa44_FindEnum(_self_.as<_1ab868cea_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1ab0977b0_Enum> __jule_trait_method_1aeee3152_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ab8852bc_FindEnum(_self_.as<_1ab883573_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1ab098eba_TypeEnum> __jule_trait_method_1aeee36a2_1aed64985(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ab092cc7_FindTypeEnum(_self_.as<_1ab090be8_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1ab098eba_TypeEnum> __jule_trait_method_1aeee36a2_1aee390cb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ab840002_FindTypeEnum(_self_.as<_1ab83ce67_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1ab098eba_TypeEnum> __jule_trait_method_1aeee36a2_1aed660b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ab868657_FindTypeEnum(_self_.as<_1ab866578_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1ab098eba_TypeEnum> __jule_trait_method_1aeee36a2_1aed66dd8(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ab86ad85_FindTypeEnum(_self_.as<_1ab868cea_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1ab098eba_TypeEnum> __jule_trait_method_1aeee36a2_1aed63e90(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ab88560d_FindTypeEnum(_self_.as<_1ab883573_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1b239ae20_1b2389ded(jule::Ptr<jule::Uintptr> _self_) {
	return _1b238a1d9_Name(_self_.as<_1b2389ded_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239ae20_1b238d781(jule::Ptr<jule::Uintptr> _self_) {
	return _1b238d40c_Name(_self_.as<_1b238d781_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239ae20_1b2391e8d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2391b19_Name(_self_.as<_1b2391e8d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239ae20_1b23956de(jule::Ptr<jule::Uintptr> _self_) {
	return _1b239536a_Name(_self_.as<_1b23956de_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239ae20_1b2398deb(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2398a77_Name(_self_.as<_1b2398deb_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b239b00d_1b2389ded(jule::Ptr<jule::Uintptr> _self_) {
	return _1b238a5b3_Short(_self_.as<_1b2389ded_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b239b00d_1b238d781(jule::Ptr<jule::Uintptr> _self_) {
	return _1b238dd03_Short(_self_.as<_1b238d781_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b239b00d_1b2391e8d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2392510_Short(_self_.as<_1b2391e8d_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b239b00d_1b23956de(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2395c61_Short(_self_.as<_1b23956de_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b239b00d_1b2398deb(jule::Ptr<jule::Uintptr> _self_) {
	return _1b239946d_Short(_self_.as<_1b2398deb_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239c8d3_1b2389ded(jule::Ptr<jule::Uintptr> _self_) {
	return _1b238a32c_What(_self_.as<_1b2389ded_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239c8d3_1b238d781(jule::Ptr<jule::Uintptr> _self_) {
	return _1b238da6c_What(_self_.as<_1b238d781_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239c8d3_1b2391e8d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2392279_What(_self_.as<_1b2391e8d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239c8d3_1b23956de(jule::Ptr<jule::Uintptr> _self_) {
	return _1b23959ca_What(_self_.as<_1b23956de_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b239c8d3_1b2398deb(jule::Ptr<jule::Uintptr> _self_) {
	return _1b23991d7_What(_self_.as<_1b2398deb_Flag>().alloc);
}
inline void __jule_trait_method_1b239cce0_1b2389ded(jule::Ptr<jule::Uintptr> _self_) {
	_1b238a470_Reset(_self_.as<_1b2389ded_Flag>().alloc);
}
inline void __jule_trait_method_1b239cce0_1b238d781(jule::Ptr<jule::Uintptr> _self_) {
	_1b238dbb0_Reset(_self_.as<_1b238d781_Flag>().alloc);
}
inline void __jule_trait_method_1b239cce0_1b2391e8d(jule::Ptr<jule::Uintptr> _self_) {
	_1b23923bc_Reset(_self_.as<_1b2391e8d_Flag>().alloc);
}
inline void __jule_trait_method_1b239cce0_1b23956de(jule::Ptr<jule::Uintptr> _self_) {
	_1b2395b1d_Reset(_self_.as<_1b23956de_Flag>().alloc);
}
inline void __jule_trait_method_1b239cce0_1b2398deb(jule::Ptr<jule::Uintptr> _self_) {
	_1b239932a_Reset(_self_.as<_1b2398deb_Flag>().alloc);
}


static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aee84742,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aee84742,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aee84742,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aee84742,
};
static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aee9d1a6,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aee9d1a6,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aee9d1a6,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aee9d1a6,
};
static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aee8aa78,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aee8aa78,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aee8aa78,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aee8aa78,
};
static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aee91584,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aee91584,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aee91584,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aee91584,
};
static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aee998cd,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aee998cd,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aee998cd,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aee998cd,
};
static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aeeba04c,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aeeba04c,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aeeba04c,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aeeba04c,
};
static _1ab119aa7_comptimeRangeKindMptrData _1ab119aa7_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1ab118e3b_index=__jule_trait_method_1aeedae3b_1aeeb33db,
	._1ab11929e_ready=__jule_trait_method_1aeedb4d0_1aeeb33db,
	._1ab1196bc_step=__jule_trait_method_1aeedbba6_1aeeb33db,
	._1ab119953_len=__jule_trait_method_1aeedc38d_1aeeb33db,
};
static _1ab863575_ImporterMptrData _1ab863575_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1ab8623ed_SetModPath=__jule_trait_method_1aeedc6ce_1abbb2242,
	._1ab8625da_GetModPath=__jule_trait_method_1aeedcb30_1abbb2242,
	._1ab86292b_ModById=__jule_trait_method_1aeedd03c_1abbb2242,
	._1ab862c6c_GetImport=__jule_trait_method_1aeedd504_1abbb2242,
	._1ab863168_ImportPackage=__jule_trait_method_1aeeddadc_1abbb2242,
	._1ab863421_Imported=__jule_trait_method_1aeede4a0_1abbb2242,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed62675,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed62675,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed619e8,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed619e8,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed79c0e,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed79c0e,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed53996,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed53996,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed5aabe,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed5aabe,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee981e5,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee981e5,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee87a0e,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee87a0e,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee84742,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee84742,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aeea1473,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aeea1473,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee9d1a6,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee9d1a6,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee8dd45,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee8dd45,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee8aa78,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee8aa78,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee94851,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee94851,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee91584,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee91584,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aee998cd,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aee998cd,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed8b836,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed8b836,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aeea44dc,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aeea44dc,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aeeba04c,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aeeba04c,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aeeb66a8,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aeeb66a8,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aeeb33db,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aeeb33db,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aeeaa13b,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aeeaa13b,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed447cd,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed447cd,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed48b45,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed48b45,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed50454,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed50454,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed60167,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed60167,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aedc72ab,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aedc72ab,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aedc573d,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aedc573d,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed5d71a,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed5d71a,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1aed51c19,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1aed51c19,
};
static _1ab939360_KindMptrData _1ab939360_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1ab938dba_Str=__jule_trait_method_1aeede989_1b1720053,
	._1ab93920b_Equal=__jule_trait_method_1aeeded0d_1b1720053,
};
static _1ab959bee_LookupMptrData _1ab959bee_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1ab957ed8_SelectPackage=__jule_trait_method_1aeee0380_1aed64985,
	._1ab9583d4_FindVar=__jule_trait_method_1aeee120a_1aed64985,
	._1ab9587d0_FindTypeAlias=__jule_trait_method_1aeee17d2_1aed64985,
	._1ab958bcb_FindStruct=__jule_trait_method_1aeee1ddc_1aed64985,
	._1ab9590c7_FindFn=__jule_trait_method_1aeee24e7_1aed64985,
	._1ab959418_FindTrait=__jule_trait_method_1aeee2b02_1aed64985,
	._1ab959759_FindEnum=__jule_trait_method_1aeee3152_1aed64985,
	._1ab959a9a_FindTypeEnum=__jule_trait_method_1aeee36a2_1aed64985,
};
static _1ab959bee_LookupMptrData _1ab959bee_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1ab957ed8_SelectPackage=__jule_trait_method_1aeee0380_1aee390cb,
	._1ab9583d4_FindVar=__jule_trait_method_1aeee120a_1aee390cb,
	._1ab9587d0_FindTypeAlias=__jule_trait_method_1aeee17d2_1aee390cb,
	._1ab958bcb_FindStruct=__jule_trait_method_1aeee1ddc_1aee390cb,
	._1ab9590c7_FindFn=__jule_trait_method_1aeee24e7_1aee390cb,
	._1ab959418_FindTrait=__jule_trait_method_1aeee2b02_1aee390cb,
	._1ab959759_FindEnum=__jule_trait_method_1aeee3152_1aee390cb,
	._1ab959a9a_FindTypeEnum=__jule_trait_method_1aeee36a2_1aee390cb,
};
static _1ab959bee_LookupMptrData _1ab959bee_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1ab957ed8_SelectPackage=__jule_trait_method_1aeee0380_1aed660b3,
	._1ab9583d4_FindVar=__jule_trait_method_1aeee120a_1aed660b3,
	._1ab9587d0_FindTypeAlias=__jule_trait_method_1aeee17d2_1aed660b3,
	._1ab958bcb_FindStruct=__jule_trait_method_1aeee1ddc_1aed660b3,
	._1ab9590c7_FindFn=__jule_trait_method_1aeee24e7_1aed660b3,
	._1ab959418_FindTrait=__jule_trait_method_1aeee2b02_1aed660b3,
	._1ab959759_FindEnum=__jule_trait_method_1aeee3152_1aed660b3,
	._1ab959a9a_FindTypeEnum=__jule_trait_method_1aeee36a2_1aed660b3,
};
static _1ab959bee_LookupMptrData _1ab959bee_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1ab957ed8_SelectPackage=__jule_trait_method_1aeee0380_1aed66dd8,
	._1ab9583d4_FindVar=__jule_trait_method_1aeee120a_1aed66dd8,
	._1ab9587d0_FindTypeAlias=__jule_trait_method_1aeee17d2_1aed66dd8,
	._1ab958bcb_FindStruct=__jule_trait_method_1aeee1ddc_1aed66dd8,
	._1ab9590c7_FindFn=__jule_trait_method_1aeee24e7_1aed66dd8,
	._1ab959418_FindTrait=__jule_trait_method_1aeee2b02_1aed66dd8,
	._1ab959759_FindEnum=__jule_trait_method_1aeee3152_1aed66dd8,
	._1ab959a9a_FindTypeEnum=__jule_trait_method_1aeee36a2_1aed66dd8,
};
static _1ab959bee_LookupMptrData _1ab959bee_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1ab957ed8_SelectPackage=__jule_trait_method_1aeee0380_1aed63e90,
	._1ab9583d4_FindVar=__jule_trait_method_1aeee120a_1aed63e90,
	._1ab9587d0_FindTypeAlias=__jule_trait_method_1aeee17d2_1aed63e90,
	._1ab958bcb_FindStruct=__jule_trait_method_1aeee1ddc_1aed63e90,
	._1ab9590c7_FindFn=__jule_trait_method_1aeee24e7_1aed63e90,
	._1ab959418_FindTrait=__jule_trait_method_1aeee2b02_1aed63e90,
	._1ab959759_FindEnum=__jule_trait_method_1aeee3152_1aed63e90,
	._1ab959a9a_FindTypeEnum=__jule_trait_method_1aeee36a2_1aed63e90,
};
static _1ad54bb52_CommonFlagMptrData _1ad54bb52_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1ad51a01b_Name=__jule_trait_method_1b239ae20_1b2389ded,
	._1ad51a15e_Short=__jule_trait_method_1b239b00d_1b2389ded,
	._1ad51a33a_What=__jule_trait_method_1b239c8d3_1b2389ded,
	._1ad54ba0e_Reset=__jule_trait_method_1b239cce0_1b2389ded,
};
static _1ad54bb52_CommonFlagMptrData _1ad54bb52_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1ad51a01b_Name=__jule_trait_method_1b239ae20_1b238d781,
	._1ad51a15e_Short=__jule_trait_method_1b239b00d_1b238d781,
	._1ad51a33a_What=__jule_trait_method_1b239c8d3_1b238d781,
	._1ad54ba0e_Reset=__jule_trait_method_1b239cce0_1b238d781,
};
static _1ad54bb52_CommonFlagMptrData _1ad54bb52_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1ad51a01b_Name=__jule_trait_method_1b239ae20_1b2391e8d,
	._1ad51a15e_Short=__jule_trait_method_1b239b00d_1b2391e8d,
	._1ad51a33a_What=__jule_trait_method_1b239c8d3_1b2391e8d,
	._1ad54ba0e_Reset=__jule_trait_method_1b239cce0_1b2391e8d,
};
static _1ad54bb52_CommonFlagMptrData _1ad54bb52_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1ad51a01b_Name=__jule_trait_method_1b239ae20_1b23956de,
	._1ad51a15e_Short=__jule_trait_method_1b239b00d_1b23956de,
	._1ad51a33a_What=__jule_trait_method_1b239c8d3_1b23956de,
	._1ad54ba0e_Reset=__jule_trait_method_1b239cce0_1b23956de,
};
static _1ad54bb52_CommonFlagMptrData _1ad54bb52_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1ad51a01b_Name=__jule_trait_method_1b239ae20_1b2398deb,
	._1ad51a15e_Short=__jule_trait_method_1b239b00d_1b2398deb,
	._1ad51a33a_What=__jule_trait_method_1b239c8d3_1b2398deb,
	._1ad54ba0e_Reset=__jule_trait_method_1b239cce0_1b2398deb,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1ae58dbb5_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1ad79cb61_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1ad7a0647_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1ad7acb4e_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1ad79d03a_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1ad792293_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1ad7b13a0_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ab8a7289_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ab938a24_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a37a2577_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ab0898e5_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ab095109_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1ab0977b0_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ab098eba_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a379e651_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ab070c61_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ab096c54_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ab087e21_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ab838726_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ab835bc9_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ab906a8b_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ab0866c2_BackendEmitExprModel> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ab083009_BuiltinPrintCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ab083306_BuiltinPrintlnCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ab0852d6_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ab0869be_FreeExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ab07e5ee_FnCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ab836812_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ab836b0e_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a3795e83_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ab8370b5_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a379688a_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ab837a11_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ab837d96_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ab838d86_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ab839260_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ab839716_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ab6c64c6_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ab07ee7e_IndexingExprModel> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ab839bbc_MultiAssign> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ab83a409_Match> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ab83b62a_FallSt> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ab838270_BreakSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ab83b9c1_RetSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a3791bb5_ScopeTree> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a3794a0e_VarDecl> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a37986b1_TypeAliasDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ab6c4bab_Expr> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a3797e74_Conditional> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a3795658_Iter> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a379713d_ContSt> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a378e19b_LabelSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a378e575_GotoSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a3790565_AssignSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a3799481_MatchCase> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a378e872_FallSt> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a3796c64_BreakSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a3794dd8_RetSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ab6c5580_UseExpr> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ab08c9a3_FnIns> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a37a53d2_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a379d573_Impl> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a379c6c6_StructDecl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a3793854_FnDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a379ce13_TraitDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a379aa7b_EnumDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a379ba16_TypeEnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ab6c2b43_ArrTypeDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1ab6c1ca7_SlcTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1ab6c23a1_PtrTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1ab6c1922_SptrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1ab6c3391_MapTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ab6c20a4_TupleTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1ab6c0e82_IdentTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ab6c7142_VariadicExpr> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ab07e9c8_SliceExprModel> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a378a340_FieldExprPair> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a378b94b_KeyValPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ab6c57a0_TupleExpr> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ab082c0c_TupleExprModel> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a378984a_FnCallExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ab08634d_RuneExprModel> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ab939816_Type> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ab082910_ArrayExprModel> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a3788c34_SubIdentExpr> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ab6c124b_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1ab6c6c68_UnaryExpr> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ab6c0877_TypeDecl> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a378885a_NamespaceExpr> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ab6c1625_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ab08126b_SlicingExprModel> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ab07dc4c_CastingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a378c386_SliceExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ab07d3bc_StructLitExprModel> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ab082536_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ab0817ee_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1ab082190_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1ab080bd8_MapExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1ab080435_AnonFnExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ab6c4e75_RangeExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ab6c5b46_LitExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ab6c6020_UnsafeExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a378cdae_IndexingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a378d51e_SlicingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a3788481_CastExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a378ab6a_StructLit> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a378b121_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a37891da_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ab07c9e8_UnaryExprModel> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ab07c61e_BinaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ab07d6b9_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ab0836d0_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ab084736_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ab084a33_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ab0859ac_SizeofExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ab086161_AlignofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ad12156d_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ad124164_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ad122d55_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ad1238b1_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ad123c8a_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ad121b01_SwapExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ad12201e_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ad1227c2_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1ad1231da_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1ad124461_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1ad12231b_RefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1ab07d026_StructArgExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1ad12475d_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1ad1234d7_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1ad7a5d78_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1ad7b102b_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1ad79774e_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1ad795483_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1ad7a82ba_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1ad7aa70c_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
inline jule::Bool __jule_anon1b00d6e5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab08b84d_ParamIns> _25021_p1, jule::Ptr<_1ab08b84d_ParamIns> _25036_p2);
struct __jule_anon_1b014c993_ctx{
	jule::Ptr<_1ab11a833_comptimeStructField> _self_;
};
static void __jule_anon_1b014c993_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b014c993_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b014c993(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _6521_e, jule::Ptr<_1a378984a_FnCallExpr>* _6536_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b014e91d_ctx{
	jule::Ptr<_1ab11a833_comptimeStructField> _self_;
};
static void __jule_anon_1b014e91d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b014e91d_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b014e91d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _7221_e, jule::Ptr<_1a378984a_FnCallExpr>* _7236_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b016347b_ctx{
	jule::Ptr<_1ab11da56_comptimeStatic> _self_;
};
static void __jule_anon_1b016347b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b016347b_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b016347b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _17821_e, jule::Ptr<_1a378984a_FnCallExpr>* _17836_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0165406_ctx{
	jule::Ptr<_1ab11da56_comptimeStatic> _self_;
};
static void __jule_anon_1b0165406_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0165406_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0165406(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _18521_e, jule::Ptr<_1a378984a_FnCallExpr>* _18536_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0176868_ctx{
	jule::Ptr<_1ab121c79_comptimeEnumField> _self_;
};
static void __jule_anon_1b0176868_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0176868_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0176868(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _28321_e, jule::Ptr<_1a378984a_FnCallExpr>* _28336_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b018dab1_ctx{
	jule::Ptr<_1ab124a90_comptimeParam> _self_;
};
static void __jule_anon_1b018dab1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b018dab1_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b018dab1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _40221_e, jule::Ptr<_1a378984a_FnCallExpr>* _40236_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0190a3b_ctx{
	jule::Ptr<_1ab124a90_comptimeParam> _self_;
};
static void __jule_anon_1b0190a3b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0190a3b_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0190a3b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _40921_e, jule::Ptr<_1a378984a_FnCallExpr>* _40936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b01929b6_ctx{
	jule::Ptr<_1ab124a90_comptimeParam> _self_;
};
static void __jule_anon_1b01929b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b01929b6_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b01929b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _41621_e, jule::Ptr<_1a378984a_FnCallExpr>* _41636_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b02322d6_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b02322d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02322d6_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02322d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _97421_e, jule::Ptr<_1a378984a_FnCallExpr>* _97436_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0234261_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0234261_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0234261_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0234261(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _98121_e, jule::Ptr<_1a378984a_FnCallExpr>* _98136_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b02361db_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b02361db_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02361db_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02361db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _98821_e, jule::Ptr<_1a378984a_FnCallExpr>* _98836_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0238166_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0238166_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0238166_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0238166(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _99521_e, jule::Ptr<_1a378984a_FnCallExpr>* _99536_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b023a0e1_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b023a0e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b023a0e1_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b023a0e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _100221_e, jule::Ptr<_1a378984a_FnCallExpr>* _100236_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b023c06b_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b023c06b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b023c06b_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b023c06b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _100921_e, jule::Ptr<_1a378984a_FnCallExpr>* _100936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b023dee6_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b023dee6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b023dee6_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b023dee6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _101621_e, jule::Ptr<_1a378984a_FnCallExpr>* _101636_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0240e71_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0240e71_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0240e71_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0240e71(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _102321_e, jule::Ptr<_1a378984a_FnCallExpr>* _102336_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b024303e_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b024303e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b024303e_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024303e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _103021_e, jule::Ptr<_1a378984a_FnCallExpr>* _103036_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0244eb9_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0244eb9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0244eb9_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0244eb9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _103721_e, jule::Ptr<_1a378984a_FnCallExpr>* _103736_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0246e44_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0246e44_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0246e44_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0246e44(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _104421_e, jule::Ptr<_1a378984a_FnCallExpr>* _104436_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0248dbe_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0248dbe_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0248dbe_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0248dbe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _105121_e, jule::Ptr<_1a378984a_FnCallExpr>* _105136_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b024ad49_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b024ad49_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b024ad49_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024ad49(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _105821_e, jule::Ptr<_1a378984a_FnCallExpr>* _105836_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b024ccc4_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b024ccc4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b024ccc4_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024ccc4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _106521_e, jule::Ptr<_1a378984a_FnCallExpr>* _106536_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b024ec4e_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b024ec4e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b024ec4e_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024ec4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _107221_e, jule::Ptr<_1a378984a_FnCallExpr>* _107236_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0251bc9_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0251bc9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0251bc9_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0251bc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _107921_e, jule::Ptr<_1a378984a_FnCallExpr>* _107936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0253b54_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0253b54_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0253b54_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0253b54(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _108621_e, jule::Ptr<_1a378984a_FnCallExpr>* _108636_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0255ace_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0255ace_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0255ace_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0255ace(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _109321_e, jule::Ptr<_1a378984a_FnCallExpr>* _109336_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0257a59_ctx{
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0257a59_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0257a59_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0257a59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _110021_e, jule::Ptr<_1a378984a_FnCallExpr>* _110036_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0283d3d_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b0283d3d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0283d3d_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0283d3d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _126221_e, jule::Ptr<_1a378984a_FnCallExpr>* _126236_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0285cb8_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b0285cb8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0285cb8_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0285cb8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _126921_e, jule::Ptr<_1a378984a_FnCallExpr>* _126936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0287c43_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b0287c43_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0287c43_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0287c43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _127621_e, jule::Ptr<_1a378984a_FnCallExpr>* _127636_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0289bbd_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b0289bbd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0289bbd_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0289bbd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _128321_e, jule::Ptr<_1a378984a_FnCallExpr>* _128336_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b028bb48_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b028bb48_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b028bb48_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b028bb48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _129021_e, jule::Ptr<_1a378984a_FnCallExpr>* _129036_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b028dac3_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b028dac3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b028dac3_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b028dac3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _129721_e, jule::Ptr<_1a378984a_FnCallExpr>* _129736_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0290a4d_ctx{
	jule::Ptr<_1ab130ccc_comptimeValue> _self_;
};
static void __jule_anon_1b0290a4d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0290a4d_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0290a4d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _130421_e, jule::Ptr<_1a378984a_FnCallExpr>* _130436_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b02a5766_ctx{
	jule::Ptr<_1ab1354a7_comptimeFile> _self_;
};
static void __jule_anon_1b02a5766_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02a5766_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02a5766(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _142921_e, jule::Ptr<_1a378984a_FnCallExpr>* _142936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b02a76e1_ctx{
	jule::Ptr<_1ab1354a7_comptimeFile> _self_;
};
static void __jule_anon_1b02a76e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02a76e1_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02a76e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _143621_e, jule::Ptr<_1a378984a_FnCallExpr>* _143636_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b02a966b_ctx{
	jule::Ptr<_1ab1354a7_comptimeFile> _self_;
};
static void __jule_anon_1b02a966b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02a966b_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02a966b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _144321_e, jule::Ptr<_1a378984a_FnCallExpr>* _144336_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b031d559_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b031d559_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b031d559_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b031d559(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _194921_e, jule::Ptr<_1a378984a_FnCallExpr>* _194936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b03204d4_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b03204d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03204d4_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03204d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _195621_e, jule::Ptr<_1a378984a_FnCallExpr>* _195636_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b032245e_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b032245e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b032245e_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032245e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _196321_e, jule::Ptr<_1a378984a_FnCallExpr>* _196336_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b03243d9_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b03243d9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03243d9_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03243d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _197021_e, jule::Ptr<_1a378984a_FnCallExpr>* _197036_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b0326364_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b0326364_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0326364_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0326364(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _197721_e, jule::Ptr<_1a378984a_FnCallExpr>* _197736_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b03282de_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b03282de_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03282de_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03282de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _198421_e, jule::Ptr<_1a378984a_FnCallExpr>* _198436_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b032a269_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b032a269_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b032a269_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032a269(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _199121_e, jule::Ptr<_1a378984a_FnCallExpr>* _199136_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b032c1e4_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b032c1e4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b032c1e4_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032c1e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _199821_e, jule::Ptr<_1a378984a_FnCallExpr>* _199836_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b032e2b2_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b032e2b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b032e2b2_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032e2b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _200521_e, jule::Ptr<_1a378984a_FnCallExpr>* _200536_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b033123c_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b033123c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b033123c_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b033123c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _201221_e, jule::Ptr<_1a378984a_FnCallExpr>* _201236_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b03331b7_ctx{
	jule::Ptr<_1ab1393bd_comptimeDecl> _self_;
};
static void __jule_anon_1b03331b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03331b7_ctx>().dealloc(); }
inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03331b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _201921_e, jule::Ptr<_1a378984a_FnCallExpr>* _201936_fc, jule::Ptr<_1ab906a8b_Data>* );
struct __jule_anon_1b033e48c_ctx{
	jule::Ptr<_1ab82e2bb_constraintChecker> _self_;
};
static void __jule_anon_1b033e48c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b033e48c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b033e48c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _6415_sema, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>* _6433_generics);
struct __jule_anon_1b065809c_ctx{
	jule::Ptr<_1ab866578_ImportInfo> *_48528_pkg;
};
static void __jule_anon_1b065809c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b065809c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b065809c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab866578_ImportInfo> _48635_spkg);
struct __jule_anon_1b07643d9_ctx{
	jule::Ptr<_1ab08c9a3_FnIns> _82643_f;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _82711_generics;
	jule::Slice<jule::Ptr<_1ab939816_Type>> *_82659_ignored;
};
static void __jule_anon_1b07643d9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b07643d9_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b07643d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _83342_sema);
struct __jule_anon_1b077c3ad_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*> _92946_algo;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _9347_generics;
};
static void __jule_anon_1b077c3ad_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b077c3ad_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b077c3ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _93642_sema);
struct __jule_anon_1b0786a05_ctx{
	jule::Ptr<_1ab08c9a3_FnIns> _94837_f;
	jule::Ptr<_1ab883573_sema> _self_;
};
static void __jule_anon_1b0786a05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0786a05_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b0786a05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _95237_sema, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>* _95255_generics);
inline jule::Str __jule_anon1b111c7b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1b1870d0d_ctx{
	jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_;
};
static void __jule_anon_1b1870d0d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b1870d0d_ctx>().dealloc(); }
inline void __jule_anon_1b1870d0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _20331_file);
struct __jule_anon_1b18c8ddd_ctx{
	_1ad1d6de7_exprDeadCode *_self_;
};
static void __jule_anon_1b18c8ddd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b18c8ddd_ctx>().dealloc(); }
inline void __jule_anon_1b18c8ddd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1a9996699_ctx{
	_1ad12ebec_exprOptimizer *_self_;
};
static void __jule_anon_1a9996699_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9996699_ctx>().dealloc(); }
inline void __jule_anon_1a9996699(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _59047_m);
struct __jule_anon_1b17389a6_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1b17389a6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b17389a6_ctx>().dealloc(); }
inline void __jule_anon_1b17389a6(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b173c4b0_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
	jule::Ptr<_1ab837a11_RangeIter> *_9336_it;
};
static void __jule_anon_1b173c4b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b173c4b0_ctx>().dealloc(); }
inline void __jule_anon_1b173c4b0(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b175ca96_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
};
static void __jule_anon_1b175ca96_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b175ca96_ctx>().dealloc(); }
inline void __jule_anon_1b175ca96(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad15b9d7_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
};
static void __jule_anon_1ad15b9d7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad15b9d7_ctx>().dealloc(); }
inline void __jule_anon_1ad15b9d7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad1761c7_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
};
static void __jule_anon_1ad1761c7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad1761c7_ctx>().dealloc(); }
inline void __jule_anon_1ad1761c7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b19a433c_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
};
static void __jule_anon_1b19a433c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b19a433c_ctx>().dealloc(); }
inline void __jule_anon_1b19a433c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b19a566d_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
	jule::Ptr<_1ab83a409_Match> _76130_m;
};
static void __jule_anon_1b19a566d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b19a566d_ctx>().dealloc(); }
inline void __jule_anon_1b19a566d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b1a26986_ctx{
	jule::Ptr<_1ad1dc2a4_scopeCoder> _self_;
	jule::Ptr<_1ab080435_AnonFnExprModel> _113134_m;
};
static void __jule_anon_1b1a26986_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b1a26986_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b1a26986(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab8a7289_Var> _113767_v);
struct __jule_anon_1b2321060_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b2321060_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2321060_ctx>().dealloc(); }
inline void __jule_anon_1b2321060(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _84038_pkg);
struct __jule_anon_1b2335d88_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
	jule::Ptr<_1ab8a7289_Var> _92524_v;
};
static void __jule_anon_1b2335d88_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2335d88_ctx>().dealloc(); }
inline void __jule_anon_1b2335d88(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b2337e78_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
	jule::Ptr<_1ab8a7289_Var> _92524_v;
};
static void __jule_anon_1b2337e78_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2337e78_ctx>().dealloc(); }
inline void __jule_anon_1b2337e78(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b233a684_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b233a684_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b233a684_ctx>().dealloc(); }
inline void __jule_anon_1b233a684(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b233b82d_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
	jule::Ptr<_1ab8a7289_Var> _92524_v;
};
static void __jule_anon_1b233b82d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b233b82d_ctx>().dealloc(); }
inline void __jule_anon_1b233b82d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b2199702_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b2199702_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2199702_ctx>().dealloc(); }
inline void __jule_anon_1b2199702(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _118738_pkg);
struct __jule_anon_1b219ac20_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b219ac20_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b219ac20_ctx>().dealloc(); }
inline void __jule_anon_1b219ac20(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _121031_file);
struct __jule_anon_1b21a70b1_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b21a70b1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b21a70b1_ctx>().dealloc(); }
inline void __jule_anon_1b21a70b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _124938_pkg);
struct __jule_anon_1b21ac2d6_ctx{
	jule::Ptr<_1ad4bde8c_traitHash> _12827_hash;
};
static void __jule_anon_1b21ac2d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b21ac2d6_ctx>().dealloc(); }
inline void __jule_anon_1b21ac2d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn>* _128636_m);
struct __jule_anon_1b21ae8b0_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b21ae8b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b21ae8b0_ctx>().dealloc(); }
inline void __jule_anon_1b21ae8b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _130038_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b23b06c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b23bd195(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1b0141305(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab866578_ImportInfo> _203925_pkg);
struct __jule_anon_1b0b2821a_ctx{
	jule::Str _472038_namespace;
};
static void __jule_anon_1b0b2821a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0b2821a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b0b2821a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab866578_ImportInfo> _472130_imp);
struct __jule_anon_1b2321e95_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b2321e95_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2321e95_ctx>().dealloc(); }
inline void __jule_anon_1b2321e95(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _84132_file);
struct __jule_anon_1b219a637_ctx{
	jule::Ptr<_1ab868cea_Package> *_118738_pkg;
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b219a637_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b219a637_ctx>().dealloc(); }
inline void __jule_anon_1b219a637(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _118832_file);
struct __jule_anon_1b21b07c3_ctx{
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_;
};
static void __jule_anon_1b21b07c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b21b07c3_ctx>().dealloc(); }
inline void __jule_anon_1b21b07c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _130132_file);
jule::Array<jule::Array<jule::Str,2>,5> _1a87c2dab_HelpMap;
jule::Str _1ad553362_OutDir;
jule::Str _1ad55365e_OutName;
jule::Str _1ad553917_Out;
jule::Uintptr _1a41bd118_STDIN;
jule::Uintptr _1a41bd448_STDOUT;
jule::Uintptr _1a41bd734_STDERR;
jule::Array<jule::U8,256> _1a4321d82_first;
jule::Array<_1a4322437_acceptRange,16> _1a43227cd_acceptRanges;
jule::Array<jule::U8,32> _1a3da1e62__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1a3da254a__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1a87a52de_RangeTable> _1a873cc38__L;
jule::Ptr<_1a87a52de_RangeTable> _1a873db4b__LU;
jule::Ptr<_1a87a52de_RangeTable> _1a8744b30_Letter;
jule::Ptr<_1a87a52de_RangeTable> _1a874ae00_Upper;
jule::Slice<_1a87a4387_CaseRange> _1a879d44c__CaseRanges;
jule::Array<jule::U8,256> _1a879d738__PROPERTIES;
jule::Array<jule::U16,128> _1a87a051a_asciiFold;
jule::Slice<_1a87a3d8c_foldPair> _1a87a0806_caseOrbit;
jule::Array<jule::Str,4> _1a3e43dd3_CppHeaderExts;
jule::Array<jule::Str,3> _1a3e4280a_CppExts;
jule::Array<jule::Str,1> _1a3e44598_ObjectiveCppExts;
jule::Str _1a87b8bd7_PathStdlib;
jule::Str _1a87b8e3a_PathExec;
jule::Str _1a87b91c1_PathWd;
jule::Str _1a87b94bd_PathApi;
jule::Str _1a87b9776_OS;
jule::Str _1a87b9a2e_Arch;
jule::Str _1a87be418_Compiler;
jule::Str _1a87c0815_CompilerPath;
jule::Str _1a87c0a24_CppStd;
jule::Bool _1a87c0cbb_Shadowing;
jule::Bool _1a87c1074_Transpilation;
jule::Bool _1a87c132c_Test;
jule::Bool _1a87c15d5_RC;
jule::Bool _1a87c199d_Safety;
jule::Bool _1a87c1be0_Production;
_1a940502b_floatInfo _1a94053e4_f32info;
_1a940502b_floatInfo _1a94056e1_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1a940d111_detailedPowsOfTen;
jule::Slice<jule::I64> _1a940ed6b_powtab;
jule::Slice<jule::F64> _1a941092c_f64pow10;
jule::Slice<jule::F32> _1a9410c5c_f32pow10;
jule::Array<jule::U64,20> _1a9413e5d_u64pow10;
jule::Slice<_1a9417bed_leftCheat> _1a941812c_leftCheats;
jule::Array<jule::I32,5> _1ab6073e6_Spaces;
jule::Array<jule::U64,6> _1ab607605_UnaryOps;
jule::Array<jule::U64,18> _1ab6078d0_BinOps;
jule::Array<jule::U64,2> _1ab69e9bb_PostfixOps;
jule::Array<jule::U64,11> _1ab69eca7_AssignOps;
jule::Array<_1ab6acee6_kindPair,28> _1ab6ad3d1_keywords;
jule::Array<_1ab6acee6_kindPair,46> _1ab6ad711_basicOps;
jule::I64 _1ab10e1ea_BitSize;
jule::Str _1ab10e45e_SysInt;
jule::Str _1ab10e717_SysUint;
jule::Slice<jule::Str> _1ab82d980_builtinConstraints;
jule::Ptr<_1ab939816_Type> _1ab9b2718_primNil;
jule::Ptr<_1ab939816_Type> _1ab9b2a15_primVoid;
jule::Ptr<_1ab939816_Type> _1ab9b2cbd_primAny;
jule::Ptr<_1ab939816_Type> _1ab9b30ba_primStr;
jule::Ptr<_1ab939816_Type> _1ab9b3373_primBool;
jule::Ptr<_1ab939816_Type> _1ab9b362b_primUintptr;
jule::Ptr<_1ab939816_Type> _1ab9b38d4_primUint;
jule::Ptr<_1ab939816_Type> _1ab9b3c9c_primInt;
jule::Ptr<_1ab939816_Type> _1ab9b3ede_primI8;
jule::Ptr<_1ab939816_Type> _1ab9b4286_primI16;
jule::Ptr<_1ab939816_Type> _1ab9b453e_primI32;
jule::Ptr<_1ab939816_Type> _1ab9b47e7_primI64;
jule::Ptr<_1ab939816_Type> _1ab9b4aa0_primU8;
jule::Ptr<_1ab939816_Type> _1ab9b4d58_primU16;
jule::Ptr<_1ab939816_Type> _1ab9b5111_primU32;
jule::Ptr<_1ab939816_Type> _1ab9b55ea_primU64;
jule::Ptr<_1ab939816_Type> _1ab9b583c_primF32;
jule::Ptr<_1ab939816_Type> _1ab9b5a4b_primF64;
jule::Ptr<_1ab3e19c7_Meta> _1ab3e1136_ProgramMeta;
jule::Ptr<_1ad1383a9_data> _1ad1378e7_emptyData;
jule::Bool _1ad13c897_Copy;
jule::Bool _1ad13cb94_Deadcode;
jule::Bool _1ad13ce4c_Append;
jule::Bool _1ad13d249_Math;
jule::Bool _1ad13d502_Access;
jule::Bool _1ad13d7aa_Inline;
jule::Bool _1ad13da63_Ptr;
jule::Bool _1ad13de2b_Cond;
jule::Bool _1ad13e16d_Str;
jule::Bool _1ad13e415_Slice;
jule::Bool _1ad13e6bd_Assign;
jule::Bool _1ad13e976_Exceptional;
jule::Bool _1ad13ec2e_Iter;
jule::Bool _1ad13eed7_Dynamic;
jule::Bool _1ad140290_StdStrings;
jule::Bool _1ad1d7a52_exprEnabled;
jule::Bool _1ad1d7dd7_scopeEnabled;
jule::Array<jule::U64,12> _1ad4b23d1_mdays;
jule::Str _1ad1dba45_assignArgName;
jule::Ptr<_1ab939816_Type> _1ad4bce9c_generalGCPtr;
jule::Slice<_1a87a4387_CaseRange> _1a879d161_CaseRanges;


inline jule::Bool _1a4322437_acceptRange_eq(_1a4322437_acceptRange *_self_, _1a4322437_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1a4361861_LittleEndian_eq(_1a4361861_LittleEndian *_self_, _1a4361861_LittleEndian _other_) { return true; }

inline jule::U32 static__1a4377525_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1a4377e4e_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1a437b57e_u128_eq(_1a437b57e_u128 *_self_, _1a437b57e_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1a9a3896c_group_eq(_1a9a3896c_group *_self_, _1a9a3896c_group _other_) {
	return 
		_1ad7e6e30_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1a9a391a9_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1a9a36629__Map> static__1a9a36be0_make(void) {
	return jule::new_ptr<_1a9a36629__Map>(_1a9a36629__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1a9a3896c_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1a9a36d44_initData(_1a9a36629__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _1a3db1e0b_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1a9a3896c_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9a3896c_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a55e84:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1a3db211a_newEmptyMetadata();
			}
			_iter_next_1a9a55e84:;
			++it;
			_1407_i++;
			goto _iter_begin_1a9a55e84;
		}
		_iter_end_1a9a55e84:;
	};
}



inline jule::U64 _1a9a36e98_hash(_1a9a36629__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1ad792293_toStr(_14616_k);;
	return _1a437ea05_hash(_1a421833e_StrBytes(_1473_bytes));;
}



inline void _1a9a370ec_rehash(_1a9a36629__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1a9a36d44_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1a9a3896c_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1a9a3896c_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1a9a3896c_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9a3896c_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a59592:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1a3db211a_newEmptyMetadata();
			}
			_iter_next_1a9a59592:;
			++it;
			_1617_i++;
			goto _iter_begin_1a9a59592;
		}
		_iter_end_1a9a59592:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a591da:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9a5b066:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1a9a5b066;
							};
							{
								(*(_1a9a3765d_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1a9a5b066:;
						++it;
						_1678_s++;
						goto _iter_begin_1a9a5b066;
					}
					_iter_end_1a9a5b066:;
				};
			}
			_iter_next_1a9a591da:;
			++it;
			_1667_g++;
			goto _iter_begin_1a9a591da;
		}
		_iter_end_1a9a591da:;
	};
}



inline jule::I64 _1a9a37251_nextSize(_1a9a36629__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1a9a373a5_lookup(jule::Ptr<_1a9a36629__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a3db24e4_splitHash(_1a9a36e98_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1a3db27e1_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1a3db0e93_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1a3db156a_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1a9a62754:;
			}
			_iter_end_1a9a62754:;;
			_2018_matches=_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1a9a5e454:;
	}
	_iter_end_1a9a5e454:;;
}



inline jule::Bool _1a9a37509_get(jule::Ptr<_1a9a36629__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1a9a373a5_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1a9a3765d_set(_1a9a36629__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1a9a370ec_rehash(_self_, _1a9a37251_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a3db24e4_splitHash(_1a9a36e98_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1a3db27e1_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1a3db0e93_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1a3db156a_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1a9a6a592:;
			}
			_iter_end_1a9a6a592:;;
			_2488_matches=_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1a3db156a_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1a9a6953b:;
	}
	_iter_end_1a9a6953b:;;
}



inline jule::Bool _1a9a377b2_del(jule::Ptr<_1a9a36629__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a3db24e4_splitHash(_1a9a36e98_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1a3db27e1_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1a3db0e93_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1a3db156a_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1a9a7327b:;
			}
			_iter_end_1a9a7327b:;;
			_2838_matches=_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1a9a72005:;
	}
	_iter_end_1a9a72005:;;
}



inline void _1a9a37916_clear(jule::Ptr<_1a9a36629__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a79a24:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9a7a492:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1a9a7a492:;
						++it;
						_3298_j++;
						goto _iter_begin_1a9a7a492;
					}
					_iter_end_1a9a7a492:;
				};
			}
			_iter_next_1a9a79a24:;
			++it;
			_3287_i++;
			goto _iter_begin_1a9a79a24;
		}
		_iter_end_1a9a79a24:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a725aa:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1a9a3896c_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9a7cae3:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1a9a7cae3:;
							++it;
							_3389_j++;
							goto _iter_begin_1a9a7cae3;
						}
						_iter_end_1a9a7cae3:;
					};
				};
			}
			_iter_next_1a9a725aa:;
			++it;
			_3357_i++;
			goto _iter_begin_1a9a725aa;
		}
		_iter_end_1a9a725aa:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1a9a37a6a_len(jule::Ptr<_1a9a36629__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1a9a37bbe_cap(_1a9a36629__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1a9a42da5_mapIterator _1a9a37d23_iterator(jule::Ptr<_1a9a36629__Map> _self_) {
	_1a9a42da5_mapIterator _3607_iterator = _1a9a42da5_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1a9a3896c_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1a9a43438_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1b1bd5b78__Map> static__1b1bd6195_make(void) {
	return jule::new_ptr<_1b1bd5b78__Map>(_1b1bd5b78__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b1bd7cac_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1b1bd62e9_initData(_1b1bd5b78__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _1a3db1e0b_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b1bd7cac_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b1bd7cac_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1ab08c9a3_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab08c9a3_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b166d90d:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1a3db211a_newEmptyMetadata();
			}
			_iter_next_1b166d90d:;
			++it;
			_1407_i++;
			goto _iter_begin_1b166d90d;
		}
		_iter_end_1b166d90d:;
	};
}



inline jule::U64 _1b1bd644d_hash(_1b1bd5b78__Map* _self_, jule::Ptr<_1ab08c9a3_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1b0704148_toStr(_14616_k);;
	return _1a437ea05_hash(_1a421833e_StrBytes(_1473_bytes));;
}



inline void _1b1bd65a2_rehash(_1b1bd5b78__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1b1bd62e9_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1b1bd7cac_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1b1bd7cac_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b1bd7cac_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b1bd7cac_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1ab08c9a3_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab08c9a3_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b167201b:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1a3db211a_newEmptyMetadata();
			}
			_iter_next_1b167201b:;
			++it;
			_1617_i++;
			goto _iter_begin_1b167201b;
		}
		_iter_end_1b167201b:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1671b64:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b16739e0:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1b16739e0;
							};
							{
								(*(_1b1bd6b13_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1b16739e0:;
						++it;
						_1678_s++;
						goto _iter_begin_1b16739e0;
					}
					_iter_end_1b16739e0:;
				};
			}
			_iter_next_1b1671b64:;
			++it;
			_1667_g++;
			goto _iter_begin_1b1671b64;
		}
		_iter_end_1b1671b64:;
	};
}



inline jule::I64 _1b1bd6706_nextSize(_1b1bd5b78__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1b1bd685a_lookup(jule::Ptr<_1b1bd5b78__Map> _self_, jule::Ptr<_1ab08c9a3_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a3db24e4_splitHash(_1b1bd644d_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1a3db27e1_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1a3db0e93_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1a3db156a_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1b167a1cd:;
			}
			_iter_end_1b167a1cd:;;
			_2018_matches=_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1b1676dcd:;
	}
	_iter_end_1b1676dcd:;;
}



inline jule::Slice<jule::Uintptr> _1b1bd69ae_get(jule::Ptr<_1b1bd5b78__Map> _self_, jule::Ptr<_1ab08c9a3_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1b1bd685a_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1b1bd6b13_set(_1b1bd5b78__Map* _self_, jule::Ptr<_1ab08c9a3_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1b1bd65a2_rehash(_self_, _1b1bd6706_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a3db24e4_splitHash(_1b1bd644d_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1a3db27e1_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1a3db0e93_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1a3db156a_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1b168301b:;
			}
			_iter_end_1b168301b:;;
			_2488_matches=_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1a3db156a_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1b1681eb5:;
	}
	_iter_end_1b1681eb5:;;
}



inline jule::Bool _1b1bd6c67_del(jule::Ptr<_1b1bd5b78__Map> _self_, jule::Ptr<_1ab08c9a3_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a3db24e4_splitHash(_1b1bd644d_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1a3db27e1_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1a3db0e93_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1a3db156a_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1ab08c9a3_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1b168ac05:;
			}
			_iter_end_1b168ac05:;;
			_2838_matches=_1a3db12a1_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1b168997e:;
	}
	_iter_end_1b168997e:;;
}



inline void _1b1bd6dbb_clear(jule::Ptr<_1b1bd5b78__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b169249d:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1692e1b:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1b1692e1b:;
						++it;
						_3298_j++;
						goto _iter_begin_1b1692e1b;
					}
					_iter_end_1b1692e1b:;
				};
			}
			_iter_next_1b169249d:;
			++it;
			_3287_i++;
			goto _iter_begin_1b169249d;
		}
		_iter_end_1b169249d:;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b168a034:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1b1bd7cac_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b169556c:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1b169556c:;
							++it;
							_3389_j++;
							goto _iter_begin_1b169556c;
						}
						_iter_end_1b169556c:;
					};
				};
			}
			_iter_next_1b168a034:;
			++it;
			_3357_i++;
			goto _iter_begin_1b168a034;
		}
		_iter_end_1b168a034:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1b1bd7020_len(jule::Ptr<_1b1bd5b78__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1b1bd7174_cap(_1b1bd5b78__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1b1be0259_mapIterator _1b1bd72c8_iterator(jule::Ptr<_1b1bd5b78__Map> _self_) {
	_1b1be0259_mapIterator _3607_iterator = _1b1be0259_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b1bd7cac_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1b1be07dc_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1a9a43438_init(_1a9a42da5_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1a9a3896c_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1a9a37a6a_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1ba89b192_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1a9a4358c_next(_1a9a42da5_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1a9a4b023;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1a9a4b023:;
			}
			_iter_end_1a9a4b023:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1a9a4a2a8:;
	}
	_iter_end_1a9a4a2a8:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1b1be07dc_init(_1b1be0259_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1b1bd7cac_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1b1bd7020_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1ba89b192_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1ab08c9a3_FnIns__jule_tuple_psuintptr _1b1be0941_next(_1b1be0259_mapIterator* _self_) {
	__jule_tuple_px_1ab08c9a3_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1b16639e1;
					};
					jule::Ptr<_1ab08c9a3_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1b16639e1:;
			}
			_iter_end_1b16639e1:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1b165d7ee:;
	}
	_iter_end_1b165d7ee:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _1a387dcd5_Builder static__1a387e654_New(jule::I64 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1a387dcd5_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I64> _1a387e995_Write(_1a387dcd5_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I64 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _1a387ecd6_WriteStr(_1a387dcd5_Builder* _self_, jule::Str _4124_s) {
	jule::I64 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1a388008e_WriteByte(_1a387dcd5_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1a38803d0_WriteRune(_1a387dcd5_Builder* _self_, jule::I32 _5525_r) {
	jule::I64 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1a4324505_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Str _1a3880666_Str(_1a387dcd5_Builder* _self_) {
	jule::Str _687_s = _1a421888e_StrFromBytes((*(_self_))._field_buf);;
	_1a3880864_Clear(_self_);
	return _687_s;;
}



inline void _1a3880864_Clear(_1a387dcd5_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1a3880aea_Len(_1a387dcd5_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1a3881117_Buf(_1a387dcd5_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1a38813c0_SetBuf(_1a387dcd5_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _1a87a3d8c_foldPair_eq(_1a87a3d8c_foldPair *_self_, _1a87a3d8c_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1a87a4387_CaseRange_eq(_1a87a4387_CaseRange *_self_, _1a87a4387_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1ad8454de_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1a87a483d_Range16_eq(_1a87a483d_Range16 *_self_, _1a87a483d_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1a87a4d6b_Range32_eq(_1a87a4d6b_Range32 *_self_, _1a87a4d6b_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _1a87b3b38_index(_1a87b3671_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1a87b3de1_append(_1a87b3671_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1a87b4177_string(_1a87b3671_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1a42185c5_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1a68cec56_File_eq(_1a68cec56_File *_self_, _1a68cec56_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1a68cec56_File>> static__1a68c90a2_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _1a41aec53_StrToBytes(_2017_path);;
	jule::I64 _223_handle = _1a41be966_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1a68cec56_File>>{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1a68cec56_File>>{.result=static__1a68d073a_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__1a68c92d3_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _1a41aec53_StrToBytes(_3319_path);;
	if ((_1a41c16e3_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1a68c9767_Write(_1a68cec56_File* _self_, jule::Slice<jule::U8> _5021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1a4327dbb_handleRW(&(_5021_buf));
	__jule_func_result=_1a41c750c_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5021_buf[0LL])), static_cast<jule::U64>(_5021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _1a68c9aa8_Read(_1a68cec56_File* _self_, jule::Slice<jule::U8> _7324_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_7324_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1a4327dbb_handleRW(&(_7324_buf));
	__jule_func_result=_1a41c6c7b_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_7324_buf[0LL])), static_cast<jule::U64>(_7324_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_1a68cec56_File> static__1a68d073a_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1a68cec56_File>(_1a68cec56_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1a68cec56_File>> static__1a68d0a04_Create(jule::Str _7819_path) {
	return static__1a68c90a2_Open(_7819_path, static_cast<jule::I64>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1a68d0cbd_Read(jule::Str _9017_path) {
	_1a696ebc5_Stat _913_s = ({
		auto except = static__1a68cc193_Of(_9017_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a6970368_IsReg(&_913_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _967_sz = static_cast<jule::I64>(_1a69705ee_Size(&_913_s));;
	if ((_967_sz != static_cast<jule::I64>(_1a69705ee_Size(&_913_s)))) {
		_967_sz=0LL;
	};
	if ((_967_sz < 512LLU)) {
		_967_sz=512LLU;
	};
	jule::Ptr<_1a68cec56_File> _1097_f = ({
		auto except = static__1a68c90a2_Open(_9017_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1a68cec56_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1107_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_967_sz, _967_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1117_n = 0LL;;
	while ((_1117_n < _967_sz)) {
		{
			jule::I64 _1134_rn = ({
				auto except = _1a68c9aa8_Read(_1097_f.ptr(), _1107_buf.slice(_1117_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1134_rn == 0LL)) {
				goto _iter_end_1ae5b27dd;
			};
			_1117_n+=_1134_rn;
		}
	_iter_next_1ae5b27dd:;
	}
	_iter_end_1ae5b27dd:;;
	({
		auto except = _1a68d196c_Close(_1097_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1107_buf.slice(0LL, _1117_n)};;
}



inline jule::VoidExceptional static__1a68d1164_Write(jule::Str _12918_path, jule::Slice<jule::U8> _12929_data, jule::I64 _12943_perm) {
	jule::Ptr<_1a68cec56_File> _1307_f = ({
		auto except = static__1a68c90a2_Open(_12918_path, static_cast<jule::I64>(577LL), _12943_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1a68cec56_File>(nullptr);});
	});;
	jule::I64 _1317_n = 0LL;;
	while ((_1317_n < _12929_data.len())) {
		{
			_1317_n+=({
				auto except = _1a68c9767_Write(_1307_f.ptr(), _12929_data.slice(_1317_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1ae5b799c:;
	}
	_iter_end_1ae5b799c:;;
	return _1a68d196c_Close(_1307_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a68d196c_Close(_1a68cec56_File* _self_) {
	if ((_1a41c7155_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1a696ca5d_cmdAttrs_eq(_1a696ca5d_cmdAttrs *_self_, _1a696ca5d_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _1a696ebc5_Stat_eq(_1a696ebc5_Stat *_self_, _1a696ebc5_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<_1a696ebc5_Stat> static__1a68cc193_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<_1a696ebc5_Stat>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _1a41aec53_StrToBytes(_1215_path);;
	jule::I64 _183_code = _1a41be537_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<_1a696ebc5_Stat>{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	_1a696ebc5_Stat _227_stat = _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};;
	_227_stat._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		_227_stat._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		_227_stat._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<_1a696ebc5_Stat>{.result=_227_stat};;
}



inline jule::Bool _1a69700d2_IsDir(_1a696ebc5_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1a6970368_IsReg(_1a696ebc5_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1a69705ee_Size(_1a696ebc5_Stat* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _1a388d1ac_Log_eq(_1a388d1ac_Log *_self_, _1a388d1ac_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1a940502b_floatInfo_eq(_1a940502b_floatInfo *_self_, _1a940502b_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1a9417bed_leftCheat_eq(_1a9417bed_leftCheat *_self_, _1a9417bed_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1a9418715_decimal_eq(_1a9418715_decimal *_self_, _1a9418715_decimal _other_) {
	return 
		_1ae89982d_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1a94101ce_set(_1a9418715_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1aea8e87a:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1aea8ea12:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1aea8e814:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1aea9145e:;
					{
						goto _iter_next_1aea90bde;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1aea91508:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1aea90bde;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1aea9156e:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1aea90bde;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1aea90bde;
					}
				}
				_match_end_1aea9132c:;
			};
			goto _iter_end_1aea90bde;
		}
	_iter_next_1aea90bde:;
	}
	_iter_end_1aea90bde:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1a940a839_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1aea97388;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1aea97388:;
		}
		_iter_end_1aea97388:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a9410520_floatBits(_1a9418715_decimal* _self_, _1a940502b_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aeaa5dd0;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aeaa4e34;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aeaa5dd0;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a940ed6b_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1a940ed6b_powtab[(*(_self_))._field_dp];
			};
			_1a9418da8_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1aea9c745:;
	}
	_iter_end_1aea9c745:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a940ed6b_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1a940ed6b_powtab[(-((*(_self_))._field_dp))];
			};
			_1a9418da8_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1aea9ac93:;
	}
	_iter_end_1aea9ac93:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1a9418da8_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1aeaa4e34;
	};
	_1a9418da8_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1a9419958_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1aeaa4e34;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1aeaa5dd0;
	_julec_label_1aeaa4e34:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aeaa5dd0:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a9418b00_assign(_1a9418715_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1aeaa8652:;
	}
	_iter_end_1aeaa8652:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aeaa90c0:;
	}
	_iter_end_1aeaa90c0:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a941a063_trim(_self_);
}



inline void _1a9418da8_shift(_1a9418715_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aeaab04a:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1aeaab0e4:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1a941aaad_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1aeaabbe9:;
				}
				_iter_end_1aeaabbe9:;;
				_1a941aaad_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1aeaab15a:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1a941a34e_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1aeaabb1c:;
				}
				_iter_end_1aeaabb1c:;;
				_1a941a34e_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1aeaaadd5:;
	};
}



inline void _1a9419161_roundDown(_1a9418715_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1a941a063_trim(_self_);
}



inline void _1a9419419_roundUp(_1a9418715_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1aeab00a4:;
	}
	_iter_end_1aeab00a4:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a94196c2_round(_1a9418715_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a941ae32_shouldRoundUp(_self_, _23221_nd)) {
		_1a9419419_roundUp(_self_, _23221_nd);
	} else {
		_1a9419161_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1a9419958_roundedInteger(_1a9418715_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1aeab300d:;
	}
	_iter_end_1aeab300d:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1aeab5010:;
	}
	_iter_end_1aeab5010:;;
	if (_1a941ae32_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1a87e67c5_AnsiEscape_eq(_1a87e67c5_AnsiEscape *_self_, _1a87e67c5_AnsiEscape _other_) { return true; }

inline void static__1a87c5133_Reset(void) {
	jule::print(_1ad792293_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1a87e69b2_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1ad792293_toStr(_1918_escape));
	jule::print(_1ad792293_toStr(_1931_text));
	static__1a87c5133_Reset();
}








inline jule::Bool _1a941dc48_Logger_eq(_1a941dc48_Logger *_self_, _1a941dc48_Logger _other_) { return true; }

inline void static__1a941e045_LogFlat(_1a388d1ac_Log* _1421_l) {
	jule::println(_1ad792293_toStr((*(_1421_l))._field_Text));
}



inline void static__1a941e276_LogError(_1a388d1ac_Log* _1922_l) {
	jule::print(_1ad792293_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1ad792293_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1ad792293_toStr((*(_1922_l))._field_Text));
	static__1a87c5133_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1ad792293_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1ad792293_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1ad792293_toStr(jule::Str::lit(":", 1)));
		jule::print(_1ad792293_toStr(_1a941cc8b_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1ad792293_toStr(jule::Str::lit(":", 1)));
		jule::print(_1ad792293_toStr(_1a941cc8b_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1a87b1471_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1a87aec66_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1ad792293_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1a941cc8b_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1ad792293_toStr(_434_row));
		jule::print(_1ad792293_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1ad792293_toStr(_388_line));
		jule::print(_1ad792293_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1ad792293_toStr(_1a87a8754_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1ad792293_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1ad792293_toStr(_1a87a8754_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1ad792293_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1ad792293_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1ad792293_toStr(_1a87a8754_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1ad792293_toStr(jule::Str::lit(" | ", 3)));
			static__1a87e69b2_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1ad792293_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1ad792293_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1a941e4a7_Log(_1a388d1ac_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1acd964e1:;
			{
				static__1a941e045_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1acd96799:;
			{
				static__1a941e276_LogError(_6417_l);
			}
		}
		_match_end_1acd9669a:;
	};
}



inline void static__1a941e6d8_PrintLogs(jule::Slice<_1a388d1ac_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd9726c:;
		if (it != expr_end) {
			_1a388d1ac_Log *_7510_l = it;
			{
				static__1a941e4a7_Log(_7510_l);
			}
			_iter_next_1acd9726c:;
			++it;
			goto _iter_begin_1acd9726c;
		}
		_iter_end_1acd9726c:;
	};
	jule::print(_1ad792293_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1ad792293_toStr(_1a941cc8b_Itoa((*(_7423_logs)).len())));
	jule::println(_1ad792293_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1ab6a54d8_Token_eq(_1ab6a54d8_Token *_self_, _1ab6a54d8_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1ab6a5890_Prec(_1ab6a54d8_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aeba1e21:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aeba1c67:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aeba1ccd:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aeba1e87:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aeba200e:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aeba174a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aeba1b8a:;
	};
}







inline jule::Ptr<_1ab6aadb2_Fileset> static__1ab6ab313_New(jule::Str _1616_path) {
	return jule::new_ptr<_1ab6aadb2_Fileset>(_1ab6aadb2_Fileset{._field_Path=_1616_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr)});;
}



inline void _1ab6ab5bb_Fill(_1ab6aadb2_Fileset* _self_, jule::Slice<jule::U8> _2324_data) {
	(*(_self_))._field_Data=_2324_data;
}



inline jule::Str _1ab6ab852_Dir(_1ab6aadb2_Fileset* _self_) {
	return _1a87b5b18_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ab6abad8_Name(_1ab6aadb2_Fileset* _self_) {
	return _1a87b573e_Base((*(_self_))._field_Path);;
}



inline jule::Str _1ab6ac1b0_GetRow(_1ab6aadb2_Fileset* _self_, jule::I64 _4418_row) {
	jule::I64 _457_n = 0LL;;
	jule::I64 _467_lineStart = 0LL;;
	jule::I64 _477_i = 0LL;;
	for (; (_477_i < (*(_self_))._field_Data.len()); (_477_i)++) {
		{
			if (((*(_self_))._field_Data[_477_i] != '\n')) {
				goto _iter_next_1aeba76c9;
			};
			(_457_n)++;
			if ((_457_n == _4418_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_467_lineStart, _477_i));;
			};
			_467_lineStart=(_477_i + 1LL);
		}
	_iter_next_1aeba76c9:;
	}
	_iter_end_1aeba76c9:;;
	return jule::Str();;
}








inline jule::Bool _1ab6acee6_kindPair_eq(_1ab6acee6_kindPair *_self_, _1ab6acee6_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1ab6b454c_pushErr(_1ab6b3e86_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1a388d1ac_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab6adc50_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1ab6b4aad_lex(_1ab6b3e86_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ab6b6cd0_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1ab6a54d8_Token> _4638_token = _1ab6bd15a_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ab6a54d8_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1aebd641c:;
	}
	_iter_end_1aebd641c:;;
}



inline jule::Str _1ab6b4dee_id(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I64 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1ab6a8c17_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I64 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1ab6a9454_IsDecimal(_4824_pr)))) && (!(_1ab6a8c17_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1a421888e_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1aebd9ac4:;
	}
	_iter_end_1aebd9ac4:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1a421888e_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1ab6b5185_resume(_1ab6b3e86_lex* _self_) {
	jule::I64 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_Data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4977_i]);;
			if (_1ab6a871c_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aebdd6dd:;
						{
							_1ab6b6cd0_newLine(_self_);
						}
					}
					else {
						_case_begin_1aebdd06c:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1aebdd358:;
				};
				goto _iter_next_1aebdbdc3;
			};
			jule::I64 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5118_j] == '\n')) {
						goto _iter_end_1aebdcb2c;
					};
				}
			_iter_next_1aebdcb2c:;
			}
			_iter_end_1aebdcb2c:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1aebdbdc3:;
	}
	_iter_end_1aebdbdc3:;;
	return nullptr;;
}



inline void _1ab6b543d_lexLineComment(_1ab6b3e86_lex* _self_, jule::Ptr<_1ab6a54d8_Token>* _52235_token) {
	jule::I64 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1aebe0c51;
			};
		}
	_iter_next_1aebe0c51:;
	}
	_iter_end_1aebe0c51:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1a421888e_StrFromBytes((*(*(_self_))._field_file.alloc)._field_Data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1ab6b56e6_lexRangeComment(_1ab6b3e86_lex* _self_, jule::Ptr<_1ab6a54d8_Token>* _53736_token) {
	jule::I64 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1aebe43b4;
			};
			if ((_5414_r == '\n')) {
				_1ab6b6cd0_newLine(_self_);
				goto _iter_next_1aebe43b4;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1a421888e_StrFromBytes((*(*(_self_))._field_file.alloc)._field_Data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aebe43b4:;
	}
	_iter_end_1aebe43b4:;;
	_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1ab6b5a37_num(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ab6b279d_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aebeb168;
	};
	__jule_func_result=_1ab6b25c2_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aebeb168;
	};
	__jule_func_result=_1ab6b0d62_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aebeb168;
	};
	__jule_func_result=_1ab6b0a98_commonNum(_56520_txt);
	_julec_label_1aebeb168:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ab6b5d78_escapeSeq(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1aebeee2a;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aebecd18:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1a421888e_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aebecbc5:;
			{
				_5887_seq=_1ab6b2db9_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aebecc3b:;
			{
				_5887_seq=_1ab6b3183_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aebec8a6:;
			{
				_5887_seq=_1ab6b344c_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1aebec17a:;
			{
				_5887_seq=_1ab6b3716_byteEscape(_58726_txt);
			}
		}
		_match_end_1aebec730:;
	};
	_julec_label_1aebeee2a:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1ab6b6274_getRune(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1ab6b5d78_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I64 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1ab6b65b5_lexRune(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1a387dcd5_Builder _6277_run = static__1a387e654_New(8LL);;
	({
		auto except = _1a388008e_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I64 _6307_n = 0LL;;
	jule::I64 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1aec03c31;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ab6b6cd0_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1ab6b6274_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1a387ecd6_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1a4324e0c_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1aec03c31;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1aec03c31:;
	}
	_iter_end_1aec03c31:;;
	if ((_6307_n == 0LL)) {
		_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1a3880666_Str(&_6277_run);;
}



inline jule::Str _1ab6b684b_lexStr(_1ab6b3e86_lex* _self_) {
	_1a387dcd5_Builder _6677_s = static__1a387e654_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1a388008e_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1aec09a6c;
			};
			if ((_6754_ch == '\n')) {
				_1ab6b6cd0_newLine(_self_);
				if ((!(_6703_raw))) {
					_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1ab6b6274_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1a387ecd6_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1a4324e0c_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1aec09a6c;
			};
		}
	_iter_next_1aec09a6c:;
	}
	_iter_end_1aec09a6c:;;
	return _1a3880666_Str(&_6677_s);;
}



inline void _1ab6b6cd0_newLine(_1ab6b3e86_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ab6b7341_isOp(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U64 _70845_id, jule::Ptr<_1ab6a54d8_Token>* _70858_t) {
	if ((!(_1ab6ae118_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1ab6b773c_lexBasicOps(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1ab6a54d8_Token>* _71845_tok) {
	{
		auto expr = &(_1ab6ad711_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aec11227:;
		if (it != expr_end) {
			_1ab6acee6_kindPair *_71910_pair = it;
			{
				if (_1ab6b7341_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1aec11227:;
			++it;
			goto _iter_begin_1aec11227;
		}
		_iter_end_1aec11227:;
	};
	return false;;
}



inline jule::Bool _1ab6b7b38_lexId(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1ab6a54d8_Token>* _72740_t) {
	jule::Str _7283_lex = _1ab6b4dee_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1ab6b8034_lexNum(_1ab6b3e86_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1ab6a54d8_Token>* _73741_t) {
	jule::Str _7383_lex = _1ab6b5a37_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1ab6a54d8_Token> _1ab6bd15a_token(_1ab6b3e86_lex* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _7497_t = jule::new_ptr<_1ab6a54d8_Token>(_1ab6a54d8_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1ab6b5185_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ab6b8034_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1aec16e53:;
			{
				goto _match_end_1aec16b78;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1aec16eb9:;
			{
				(*_7497_t.alloc)._field_Kind=_1ab6b65b5_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1aec17030:;
			{
				(*_7497_t.alloc)._field_Kind=_1ab6b684b_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1ab6ae118_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1aec17096:;
			{
				_1ab6b543d_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1ab6ae118_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1aec1710c:;
			{
				_1ab6b56e6_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1ab6b773c_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1aec17173:;
			{
				goto _match_end_1aec16b78;
			}
		}
		else if (_1ab6b7b38_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1aec18592:;
			{
				{
					auto expr = &(_1ab6ad3d1_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aec1c40e:;
					if (it != expr_end) {
						_1ab6acee6_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1aec1c40e;
							};
						}
						_iter_next_1aec1c40e:;
						++it;
						goto _iter_begin_1aec1c40e;
					}
					_iter_end_1aec1c40e:;
				};
			}
		}
		else {
			_case_begin_1aec16ddc:;
			{
				jule::I32 _7934_r;
				jule::I64 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ab6b454c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1aec16b78:;
	};
	(*(_self_))._field_column+=_1a4324e0c_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1ab6be876_Node_eq(_1ab6be876_Node *_self_, _1ab6be876_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1ab6c0877_TypeDecl_eq(_1ab6c0877_TypeDecl *_self_, _1ab6c0877_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1ab6c1625_NamespaceTypeDecl_eq(_1ab6c1625_NamespaceTypeDecl *_self_, _1ab6c1625_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1ab6c1922_SptrTypeDecl_eq(_1ab6c1922_SptrTypeDecl *_self_, _1ab6c1922_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1ab6c1ca7_SlcTypeDecl_eq(_1ab6c1ca7_SlcTypeDecl *_self_, _1ab6c1ca7_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1ab6c23a1_PtrTypeDecl_eq(_1ab6c23a1_PtrTypeDecl *_self_, _1ab6c23a1_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1ab6c2747_IsUnsafe(_1ab6c23a1_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1ab6c2b43_ArrTypeDecl_eq(_1ab6c2b43_ArrTypeDecl *_self_, _1ab6c2b43_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1ab6c2ed9_AutoSized(_1ab6c2b43_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1ab6c3391_MapTypeDecl_eq(_1ab6c3391_MapTypeDecl *_self_, _1ab6c3391_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ab6c4bab_Expr_eq(_1ab6c4bab_Expr *_self_, _1ab6c4bab_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1ab6c4e75_RangeExpr_eq(_1ab6c4e75_RangeExpr *_self_, _1ab6c4e75_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab6c5580_UseExpr_eq(_1ab6c5580_UseExpr *_self_, _1ab6c5580_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ab6c5b46_LitExpr_eq(_1ab6c5b46_LitExpr *_self_, _1ab6c5b46_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1ab6c6020_UnsafeExpr_eq(_1ab6c6020_UnsafeExpr *_self_, _1ab6c6020_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ab6c64c6_IdentExpr_eq(_1ab6c64c6_IdentExpr *_self_, _1ab6c64c6_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1ab6c6c68_UnaryExpr_eq(_1ab6c6c68_UnaryExpr *_self_, _1ab6c6c68_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ab6c7142_VariadicExpr_eq(_1ab6c7142_VariadicExpr *_self_, _1ab6c7142_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a3788481_CastExpr_eq(_1a3788481_CastExpr *_self_, _1a3788481_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a378885a_NamespaceExpr_eq(_1a378885a_NamespaceExpr *_self_, _1a378885a_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a3788c34_SubIdentExpr_eq(_1a3788c34_SubIdentExpr *_self_, _1a3788c34_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a37891da_BinaryExpr_eq(_1a37891da_BinaryExpr *_self_, _1a37891da_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1a3789c02_Unhandled(_1a378984a_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a3789e88_Ignored(_1a378984a_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1a378a340_FieldExprPair_eq(_1a378a340_FieldExprPair *_self_, _1a378a340_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1a378b94b_KeyValPair_eq(_1a378b94b_KeyValPair *_self_, _1a378b94b_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1a378cdae_IndexingExpr_eq(_1a378cdae_IndexingExpr *_self_, _1a378cdae_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a378d51e_SlicingExpr_eq(_1a378d51e_SlicingExpr *_self_, _1a378d51e_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1a378dcc2_GenericDecl_eq(_1a378dcc2_GenericDecl *_self_, _1a378dcc2_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1a378e19b_LabelSt_eq(_1a378e19b_LabelSt *_self_, _1a378e19b_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a378e575_GotoSt_eq(_1a378e575_GotoSt *_self_, _1a378e575_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a378e872_FallSt_eq(_1a378e872_FallSt *_self_, _1a378e872_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1a378eed2_AssignLeft_eq(_1a378eed2_AssignLeft *_self_, _1a378eed2_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a3791555_Stmt_eq(_1a3791555_Stmt *_self_, _1a3791555_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a3792402_ParamDecl_eq(_1a3792402_ParamDecl *_self_, _1a3792402_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1a37927a9_IsSelf(_1a3792402_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1a3793bea_IsAnon(_1a3793854_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1a3794dd8_RetSt_eq(_1a3794dd8_RetSt *_self_, _1a3794dd8_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a3795658_Iter_eq(_1a3795658_Iter *_self_, _1a3795658_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1a37959ee_IsInf(_1a3795658_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1a3795e83_WhileKind_eq(_1a3795e83_WhileKind *_self_, _1a3795e83_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1a3796329_IsWhileNext(_1a3795e83_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a379688a_RangeKind_eq(_1a379688a_RangeKind *_self_, _1a379688a_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a3796c64_BreakSt_eq(_1a3796c64_BreakSt *_self_, _1a3796c64_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a379713d_ContSt_eq(_1a379713d_ContSt *_self_, _1a379713d_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a37975e4_If_eq(_1a37975e4_If *_self_, _1a37975e4_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a37979bd_Else_eq(_1a37979bd_Else *_self_, _1a37979bd_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1a37986b1_TypeAliasDecl_eq(_1a37986b1_TypeAliasDecl *_self_, _1a37986b1_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a3799a14_UseDecl_eq(_1a3799a14_UseDecl *_self_, _1a3799a14_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a3799eba_EnumItemDecl_eq(_1a3799eba_EnumItemDecl *_self_, _1a3799eba_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a379b3a6_TypeEnumItemDecl_eq(_1a379b3a6_TypeEnumItemDecl *_self_, _1a379b3a6_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1a379bcd0_FieldDecl_eq(_1a379bcd0_FieldDecl *_self_, _1a379bcd0_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1ab070c61_Const> static__1ab071190_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1ab070c61_Const>(_1ab070c61_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1ab070c61_Const> static__1ab071459_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1ab070c61_Const>(_1ab070c61_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1ab070c61_Const> static__1ab071723_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1ab070c61_Const>(_1ab070c61_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1ab070c61_Const> static__1ab0719dc_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1ab070c61_Const>(_1ab070c61_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1ab070c61_Const> static__1ab071ca6_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1ab070c61_Const>(_1ab070c61_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1ab070c61_Const> static__1ab071eb5_NewNil(void) {
	return jule::new_ptr<_1ab070c61_Const>(_1ab070c61_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1ab072625_ReadI64(_1ab070c61_Const* _self_) {
	if ((!(_1ab074c21_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1ab0728ab_ReadU64(_1ab070c61_Const* _self_) {
	if ((!(_1ab074ea7_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1ab072b42_ReadBool(_1ab070c61_Const* _self_) {
	if ((!(_1ab07523d_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1ab072dc8_ReadStr(_1ab070c61_Const* _self_) {
	if ((!(_1ab0754c4_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1ab07315e_ReadF64(_1ab070c61_Const* _self_) {
	if ((!(_1ab07575a_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1ab0733e5_AsI64(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aec77766:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aec781b2:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aec78228:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aec77c1c:;
			{
				return 0LL;;
			}
		}
		_match_end_1aec77a74:;
	};
}



inline jule::U64 _1ab07367b_AsU64(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aec78d0b:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aec79a32:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aec79a98:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aec792d4:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aec7926d:;
	};
}



inline jule::F64 _1ab073912_AsF64(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aec7b58e:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aec7a66a:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aec7b380:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1aec7ab32:;
			{
				return 0LL;;
			}
		}
		_match_end_1aec7aabb:;
	};
}



inline void _1ab073bba_SetI64(_1ab070c61_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1ab073e73_SetU64(_1ab070c61_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1ab07422b_SetBool(_1ab070c61_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1ab0744d4_SetStr(_1ab070c61_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1ab07478c_SetF64(_1ab070c61_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1ab074c21_IsI64(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aec7ee88:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aec801b9:;
			{
				return false;;
			}
		}
		_match_end_1aec80153:;
	};
}



inline jule::Bool _1ab074ea7_IsU64(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aec80a27:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aec802eb:;
			{
				return false;;
			}
		}
		_match_end_1aec80285:;
	};
}



inline jule::Bool _1ab07523d_IsBool(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aec80e67:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aec81451:;
			{
				return false;;
			}
		}
		_match_end_1aec813da:;
	};
}



inline jule::Bool _1ab0754c4_IsStr(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aec818e6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aec81dd0:;
			{
				return false;;
			}
		}
		_match_end_1aec81d69:;
	};
}



inline jule::Bool _1ab07575a_IsF64(_1ab070c61_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aec82375:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aec8285e:;
			{
				return false;;
			}
		}
		_match_end_1aec827e8:;
	};
}



inline jule::Bool _1ab0759e1_IsNil(_1ab070c61_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1ab076173_And(_1ab070c61_Const* _self_, _1ab070c61_Const _23615_x) {
	{
		
		if ((_1ab07523d_IsBool(_self_) && _1ab07523d_IsBool(&_23615_x))) {
			_case_begin_1aec86d08:;
			{
				return (_1ab072b42_ReadBool(_self_) && _1ab072b42_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1aec86c92:;
			{
				return false;;
			}
		}
		_match_end_1aec86852:;
	};
}



inline jule::Bool _1ab0764b4_Or(_1ab070c61_Const* _self_, _1ab070c61_Const _24714_x) {
	{
		
		if ((_1ab07523d_IsBool(_self_) && _1ab07523d_IsBool(&_24714_x))) {
			_case_begin_1aec88106:;
			{
				return (_1ab072b42_ReadBool(_self_) || _1ab072b42_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1aec877dc:;
			{
				return false;;
			}
		}
		_match_end_1aec876ee:;
	};
}



inline jule::Bool _1ab076805_Eq(_1ab070c61_Const* _self_, _1ab070c61_Const _25814_x) {
	{
		
		if (_1ab0759e1_IsNil(_self_)) {
			_case_begin_1aec8946a:;
			{
				return _1ab0759e1_IsNil(&_25814_x);;
			}
		}
		else if (_1ab07523d_IsBool(_self_)) {
			_case_begin_1aec894d1:;
			{
				return (_1ab07523d_IsBool(&_25814_x) && (_1ab072b42_ReadBool(_self_) == _1ab072b42_ReadBool(&_25814_x)));;
			}
		}
		else if (_1ab0754c4_IsStr(_self_)) {
			_case_begin_1aec89547:;
			{
				return (_1ab0754c4_IsStr(&_25814_x) && (_1ab072dc8_ReadStr(_self_) == _1ab072dc8_ReadStr(&_25814_x)));;
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec895be:;
			{
				return (_1ab072625_ReadI64(_self_) == _1ab0733e5_AsI64(&_25814_x));;
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec89646:;
			{
				return (_1ab0728ab_ReadU64(_self_) == _1ab07367b_AsU64(&_25814_x));;
			}
		}
		else if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec897de:;
			{
				return (_1ab07315e_ReadF64(_self_) == _1ab073912_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1aec88ac9:;
			{
				return false;;
			}
		}
		_match_end_1aec889db:;
	};
}



inline jule::Bool _1ab076b46_Lt(_1ab070c61_Const* _self_, _1ab070c61_Const _28514_x) {
	{
		
		if (_1ab0754c4_IsStr(_self_)) {
			_case_begin_1aec8d194:;
			{
				return (_1ab0754c4_IsStr(&_28514_x) && (_1ab072dc8_ReadStr(_self_) < _1ab072dc8_ReadStr(&_28514_x)));;
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec8d20a:;
			{
				return (_1ab072625_ReadI64(_self_) < _1ab0733e5_AsI64(&_28514_x));;
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec8d271:;
			{
				return (_1ab0728ab_ReadU64(_self_) < _1ab07367b_AsU64(&_28514_x));;
			}
		}
		else if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec8d2e8:;
			{
				return (_1ab07315e_ReadF64(_self_) < _1ab073912_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1aec89e2c:;
			{
				return false;;
			}
		}
		_match_end_1aec89d50:;
	};
}



inline jule::Bool _1ab076e87_LtEq(_1ab070c61_Const* _self_, _1ab070c61_Const _30816_x) {
	{
		
		if (_1ab0754c4_IsStr(_self_)) {
			_case_begin_1aec90d9a:;
			{
				return (_1ab0754c4_IsStr(&_30816_x) && (_1ab072dc8_ReadStr(_self_) <= _1ab072dc8_ReadStr(&_30816_x)));;
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec90e11:;
			{
				return (_1ab072625_ReadI64(_self_) <= _1ab0733e5_AsI64(&_30816_x));;
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec90e77:;
			{
				return (_1ab0728ab_ReadU64(_self_) <= _1ab07367b_AsU64(&_30816_x));;
			}
		}
		else if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec90eee:;
			{
				return (_1ab07315e_ReadF64(_self_) <= _1ab073912_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1aec8da57:;
			{
				return false;;
			}
		}
		_match_end_1aec8d97a:;
	};
}



inline jule::Bool _1ab0772c8_Gt(_1ab070c61_Const* _self_, _1ab070c61_Const _33114_x) {
	{
		
		if (_1ab0754c4_IsStr(_self_)) {
			_case_begin_1aec93aa1:;
			{
				return (_1ab0754c4_IsStr(&_33114_x) && (_1ab072dc8_ReadStr(_self_) > _1ab072dc8_ReadStr(&_33114_x)));;
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec93b17:;
			{
				return (_1ab072625_ReadI64(_self_) > _1ab0733e5_AsI64(&_33114_x));;
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec93b7d:;
			{
				return (_1ab0728ab_ReadU64(_self_) > _1ab07367b_AsU64(&_33114_x));;
			}
		}
		else if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec93c05:;
			{
				return (_1ab07315e_ReadF64(_self_) > _1ab073912_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1aec9175d:;
			{
				return false;;
			}
		}
		_match_end_1aec91681:;
	};
}



inline jule::Bool _1ab077619_GtEq(_1ab070c61_Const* _self_, _1ab070c61_Const _35416_x) {
	{
		
		if (_1ab0754c4_IsStr(_self_)) {
			_case_begin_1aec967a7:;
			{
				return (_1ab0754c4_IsStr(&_35416_x) && (_1ab072dc8_ReadStr(_self_) >= _1ab072dc8_ReadStr(&_35416_x)));;
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec9681d:;
			{
				return (_1ab072625_ReadI64(_self_) >= _1ab0733e5_AsI64(&_35416_x));;
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec96884:;
			{
				return (_1ab0728ab_ReadU64(_self_) >= _1ab07367b_AsU64(&_35416_x));;
			}
		}
		else if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec9690b:;
			{
				return (_1ab07315e_ReadF64(_self_) >= _1ab073912_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1aec94464:;
			{
				return false;;
			}
		}
		_match_end_1aec94387:;
	};
}



inline jule::Bool _1ab07795a_Add(_1ab070c61_Const* _self_, _1ab070c61_Const _37519_x) {
	{
		
		if (_1ab0754c4_IsStr(_self_)) {
			_case_begin_1aec994ad:;
			{
				if ((!(_1ab0754c4_IsStr(&_37519_x)))) {
					return false;;
				};
				_1ab0744d4_SetStr(_self_, (_1ab072dc8_ReadStr(_self_) + _1ab072dc8_ReadStr(&_37519_x)));
			}
		}
		else if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec99524:;
			{
				_1ab07478c_SetF64(_self_, (_1ab07315e_ReadF64(_self_) + _1ab073912_AsF64(&_37519_x)));
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec9958a:;
			{
				if (_1ab07575a_IsF64(&_37519_x)) {
					_1ab07478c_SetF64(_self_, (_1ab073912_AsF64(_self_) + _1ab07315e_ReadF64(&_37519_x)));
				} else {
					_1ab073bba_SetI64(_self_, (_1ab072625_ReadI64(_self_) + _1ab0733e5_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec99612:;
			{
				if (_1ab07575a_IsF64(&_37519_x)) {
					_1ab07478c_SetF64(_self_, (_1ab073912_AsF64(_self_) + _1ab07315e_ReadF64(&_37519_x)));
				} else {
					_1ab073e73_SetU64(_self_, (jule::U64)(_1ab0728ab_ReadU64(_self_) + _1ab07367b_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1aec9716a:;
			{
				return false;;
			}
		}
		_match_end_1aec9708d:;
	};
	return true;;
}



inline jule::Bool _1ab077c9b_Sub(_1ab070c61_Const* _self_, _1ab070c61_Const _40419_x) {
	{
		
		if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aec9e2d7:;
			{
				_1ab07478c_SetF64(_self_, (_1ab07315e_ReadF64(_self_) - _1ab073912_AsF64(&_40419_x)));
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aec9e34d:;
			{
				if (_1ab07575a_IsF64(&_40419_x)) {
					_1ab07478c_SetF64(_self_, (_1ab073912_AsF64(_self_) - _1ab07315e_ReadF64(&_40419_x)));
				} else {
					_1ab073bba_SetI64(_self_, (_1ab072625_ReadI64(_self_) - _1ab0733e5_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aec9e3b4:;
			{
				if (_1ab07575a_IsF64(&_40419_x)) {
					_1ab07478c_SetF64(_self_, (_1ab073912_AsF64(_self_) - _1ab07315e_ReadF64(&_40419_x)));
				} else {
					_1ab073e73_SetU64(_self_, (jule::U64)(_1ab0728ab_ReadU64(_self_) - _1ab07367b_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1aec9da23:;
			{
				return false;;
			}
		}
		_match_end_1aec9d924:;
	};
	return true;;
}



inline jule::Bool _1ab0780dc_Mul(_1ab070c61_Const* _self_, _1ab070c61_Const _42819_x) {
	{
		
		if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aeca31ed:;
			{
				_1ab07478c_SetF64(_self_, (_1ab07315e_ReadF64(_self_) * _1ab073912_AsF64(&_42819_x)));
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aeca3264:;
			{
				if (_1ab07575a_IsF64(&_42819_x)) {
					_1ab07478c_SetF64(_self_, (_1ab073912_AsF64(_self_) * _1ab07315e_ReadF64(&_42819_x)));
				} else {
					_1ab073bba_SetI64(_self_, (_1ab072625_ReadI64(_self_) * _1ab0733e5_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aeca32ca:;
			{
				if (_1ab07575a_IsF64(&_42819_x)) {
					_1ab07478c_SetF64(_self_, (_1ab073912_AsF64(_self_) * _1ab07315e_ReadF64(&_42819_x)));
				} else {
					_1ab073e73_SetU64(_self_, (jule::U64)(_1ab0728ab_ReadU64(_self_) * _1ab07367b_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1aeca27c4:;
			{
				return false;;
			}
		}
		_match_end_1aeca26d6:;
	};
	return true;;
}



inline jule::Bool _1ab07842d_Div(_1ab070c61_Const* _self_, _1ab070c61_Const _45619_x) {
	{
		
		if (_1ab07575a_IsF64(_self_)) {
			_case_begin_1aeca7103:;
			{
				jule::F64 _4594_l = _1ab073912_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1ab07478c_SetF64(_self_, ({ jule::F64 __jule_x = _1ab07315e_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aeca7169:;
			{
				jule::F64 _4654_l = _1ab073912_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1ab07478c_SetF64(_self_, ({ jule::F64 __jule_x = _1ab073912_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aeca71d0:;
			{
				jule::F64 _4714_l = _1ab073912_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1ab07478c_SetF64(_self_, ({ jule::F64 __jule_x = _1ab073912_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1aeca66c9:;
			{
				return false;;
			}
		}
		_match_end_1aeca65db:;
	};
	return true;;
}



inline jule::Bool _1ab07876e_Mod(_1ab070c61_Const* _self_, _1ab070c61_Const _48519_x) {
	{
		
		if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aecaaed6:;
			{
				jule::I64 _4884_l = _1ab0733e5_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1ab073bba_SetI64(_self_, ({ jule::I64 __jule_x = _1ab072625_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aecab3e3:;
			{
				jule::U64 _4944_l = _1ab07367b_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1ab073e73_SetU64(_self_, ({ jule::U64 __jule_x = _1ab0728ab_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1aecaae5e:;
			{
				return false;;
			}
		}
		_match_end_1aecaad4e:;
	};
	return true;;
}



inline jule::Bool _1ab078ab0_BitwiseAnd(_1ab070c61_Const* _self_, _1ab070c61_Const _50726_x) {
	{
		
		if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aecadd52:;
			{
				_1ab073bba_SetI64(_self_, (_1ab072625_ReadI64(_self_) & _1ab0733e5_AsI64(&_50726_x)));
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aecae25e:;
			{
				_1ab073e73_SetU64(_self_, (_1ab0728ab_ReadU64(_self_) & _1ab07367b_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1aecadcca:;
			{
				return false;;
			}
		}
		_match_end_1aecadbba:;
	};
	return true;;
}



inline jule::Bool _1ab078e01_BitwiseOr(_1ab070c61_Const* _self_, _1ab070c61_Const _52125_x) {
	{
		
		if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aecb0b23:;
			{
				_1ab073bba_SetI64(_self_, (_1ab072625_ReadI64(_self_) | _1ab0733e5_AsI64(&_52125_x)));
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aecb1030:;
			{
				_1ab073e73_SetU64(_self_, (_1ab0728ab_ReadU64(_self_) | _1ab07367b_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1aecb0a9b:;
			{
				return false;;
			}
		}
		_match_end_1aecb098b:;
	};
	return true;;
}



inline jule::Bool _1ab079242_Xor(_1ab070c61_Const* _self_, _1ab070c61_Const _53519_x) {
	{
		
		if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aecb28e4:;
			{
				_1ab073bba_SetI64(_self_, (_1ab072625_ReadI64(_self_) ^ _1ab0733e5_AsI64(&_53519_x)));
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aecb2d01:;
			{
				_1ab073e73_SetU64(_self_, (_1ab0728ab_ReadU64(_self_) ^ _1ab07367b_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1aecb286c:;
			{
				return false;;
			}
		}
		_match_end_1aecb275c:;
	};
	return true;;
}



inline jule::Bool _1ab079583_Lshift(_1ab070c61_Const* _self_, _1ab070c61_Const _54922_x) {
	{
		
		if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aecb46b5:;
			{
				jule::I64 _5524_l = _1ab0733e5_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1ab07367b_AsU64(&_54922_x);;
					_1ab073bba_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1ab079c37_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aecb4ac2:;
			{
				_1ab079c37_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1aecb463d:;
			{
				return false;;
			}
		}
		_match_end_1aecb452d:;
	};
	return true;;
}



inline jule::Bool _1ab0798c4_Rshift(_1ab070c61_Const* _self_, _1ab070c61_Const _56922_x) {
	{
		
		if (_1ab074c21_IsI64(_self_)) {
			_case_begin_1aecb6c4a:;
			{
				jule::I64 _5724_l = _1ab0733e5_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1ab07367b_AsU64(&_56922_x);;
					_1ab073bba_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1ab07a067_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1ab074ea7_IsU64(_self_)) {
			_case_begin_1aecb7157:;
			{
				_1ab07a067_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1aecb6bc3:;
			{
				return false;;
			}
		}
		_match_end_1aecb6ac4:;
	};
	return true;;
}








inline jule::Bool _1a379e651_Field_eq(_1a379e651_Field *_self_, _1a379e651_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1a37a4832_FieldIns> _1a379ea3b_instance(jule::Ptr<_1a379e651_Field> _self_) {
	return jule::new_ptr<_1a37a4832_FieldIns>(_1a37a4832_FieldIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Default=jule::Ptr<_1ab906a8b_Data>(nullptr)});;
}








inline jule::Bool _1a37a1664_Operators_eq(_1a37a1664_Operators *_self_, _1a37a1664_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1a37a53d2_StructIns> _1a37a2a1c_instance(jule::Ptr<_1a37a2577_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a37a53d2_StructIns> _997_ins = jule::new_ptr<_1a37a53d2_StructIns>(_1a37a53d2_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a4832_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a37a4832_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab8a7289_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1ab0898e5_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1ab854863_new(), ._field_Operators=_1a37a1664_Operators{._field_Eq=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Add=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Div=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00a050b:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab8a7289_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1b00a050b:;
			++it;
			goto _iter_begin_1b00a050b;
		}
		_iter_end_1b00a050b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00a13b9:;
		if (it != expr_end) {
			jule::Ptr<_1a379e651_Field> _11015_f = *it;
			{
				jule::Ptr<_1a37a4832_FieldIns> _1118_f2 = _1a379ea3b_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*_997_ins.alloc)._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a4832_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1ab93b1ec_Mutable((*((*(_11015_f))._field_TypeSym))._field_Type))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1b00a13b9:;
			++it;
			goto _iter_begin_1b00a13b9;
		}
		_iter_end_1b00a13b9:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_997_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_997_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0898e5_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab0898e5_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b00a5720:;
			if (it != expr_end) {
				jule::Ptr<_1ab0898e5_Fn> _12316_f = *it;
				{
					jule::Ptr<_1ab0898e5_Fn> _1249_fins = jule::new_ptr<_1ab0898e5_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0898e5_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1b00a5720:;
				++it;
				goto _iter_begin_1b00a5720;
			}
			_iter_end_1b00a5720:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1a37a53d2_StructIns> _1a37a2d2a_appendInstance(_1a37a2577_Struct* _self_, jule::Ptr<_1a37a53d2_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00a5ac7:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _14115_ains = *it;
			{
				if (_1a37a6081_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1b00a5ac7:;
			++it;
			goto _iter_begin_1b00a5ac7;
		}
		_iter_end_1b00a5ac7:;
	};
	{ jule::Slice<jule::Ptr<_1a37a53d2_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ab0898e5_Fn> _1a37a3226_FindMethod(_1a37a2577_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00a9119:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1b00a9119:;
			++it;
			goto _iter_begin_1b00a9119;
		}
		_iter_end_1b00a9119:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab8a7289_Var> _1a37a3567_FindStatic(_1a37a2577_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00aa44a:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1b00aa44a:;
			++it;
			goto _iter_begin_1b00aa44a;
		}
		_iter_end_1b00aa44a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a379e651_Field> _1a37a38a8_FindField(_1a37a2577_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00ab44b:;
		if (it != expr_end) {
			jule::Ptr<_1a379e651_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1b00ab44b:;
			++it;
			goto _iter_begin_1b00ab44b;
		}
		_iter_end_1b00ab44b:;
	};
	return nullptr;;
}



inline jule::Bool _1a37a3be9_IsImplements(_1a37a2577_Struct* _self_, jule::Ptr<_1ab095109_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00ac43b:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1b00ac43b:;
			++it;
			goto _iter_begin_1b00ac43b;
		}
		_iter_end_1b00ac43b:;
	};
	return false;;
}



inline jule::Bool _1a37a403a_IsUses(_1a37a2577_Struct* _self_, jule::Ptr<_1a37a2577_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00acdba:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1b00ad8e3:;
				}
				_iter_end_1b00ad8e3:;;
			}
			_iter_next_1b00acdba:;
			++it;
			goto _iter_begin_1b00acdba;
		}
		_iter_end_1b00acdba:;
	};
	return false;;
}








inline jule::Bool _1a37a4832_FieldIns_eq(_1a37a4832_FieldIns *_self_, _1a37a4832_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1a37a5789_Str(_1a37a53d2_StructIns* _self_) {
	_1a387dcd5_Builder _2417_kind = static__1a387e654_New(32LL);;
	({
		auto except = _1a387ecd6_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:242:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1a388008e_WriteByte(&_2417_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:244:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b00b160a:;
			if (it != expr_end) {
				jule::I64 _2458_i = it - expr->begin();
				jule::Ptr<_1ab937e30_InsGeneric> *_24511_g = it;
				{
					({
						auto except = _1a387ecd6_WriteStr(&_2417_kind, _1ab939c12_Str((*((*(_24511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:246:5"));
						(except.result);
					});
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1a388008e_WriteByte(&_2417_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:248:6"));
						});
					};
				}
				_iter_next_1b00b160a:;
				++it;
				_2458_i++;
				goto _iter_begin_1b00b160a;
			}
			_iter_end_1b00b160a:;
		};
		({
			auto except = _1a388008e_WriteByte(&_2417_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:251:4"));
		});
	};
	return _1a3880666_Str(&_2417_kind);;
}



inline jule::Bool _1a37a5aca_Equal(jule::Ptr<_1a37a53d2_StructIns> _self_, jule::Ptr<_1ab939816_Type> _25718_other) {
	jule::Ptr<_1a37a53d2_StructIns> _2583_s = _1ab93d540_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2717_i = 0LL;;
	for (; (_2717_i < (*_self_.alloc)._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1ab93a053_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Type, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1b00b59a5:;
	}
	_iter_end_1b00b59a5:;;
	return true;;
}



inline jule::Bool _1a37a6081_Same(_1a37a53d2_StructIns* _self_, jule::Ptr<_1a37a53d2_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00b7bc7:;
		if (it != expr_end) {
			jule::I64 _2897_i = it - expr->begin();
			jule::Ptr<_1ab937e30_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1ab937e30_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Type))._field_BindIdent != (*(*(_2904_g2))._field_Type.alloc)._field_BindIdent) || (!(_1ab93a053_Equal((*((*(_28910_g))))._field_Type, (*(_2904_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1b00b7bc7:;
			++it;
			_2897_i++;
			goto _iter_begin_1b00b7bc7;
		}
		_iter_end_1b00b7bc7:;
	};
	return true;;
}



inline jule::Ptr<_1ab0898e5_Fn> _1a37a647c_FindMethod(_1a37a53d2_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00bae94:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1b00bae94:;
			++it;
			goto _iter_begin_1b00bae94;
		}
		_iter_end_1b00bae94:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a37a4832_FieldIns> _1a37a67bd_FindField(_1a37a53d2_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00bc2c5:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1b00bc2c5:;
			++it;
			goto _iter_begin_1b00bc2c5;
		}
		_iter_end_1b00bc2c5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab8a7289_Var> _1a37a6b0e_FindStatic(_1a37a53d2_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00bca89:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1b00bca89:;
			++it;
			goto _iter_begin_1b00bca89;
		}
		_iter_end_1b00bca89:;
	};
	return nullptr;;
}








inline jule::Bool _1ab07c124_OperandExprModel_eq(_1ab07c124_OperandExprModel *_self_, _1ab07c124_OperandExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1ab07c61e_BinaryExprModel_eq(_1ab07c61e_BinaryExprModel *_self_, _1ab07c61e_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ab07c9e8_UnaryExprModel_eq(_1ab07c9e8_UnaryExprModel *_self_, _1ab07c9e8_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ab07d026_StructArgExprModel_eq(_1ab07d026_StructArgExprModel *_self_, _1ab07d026_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ab07d6b9_AllocStructLitExprModel_eq(_1ab07d6b9_AllocStructLitExprModel *_self_, _1ab07d6b9_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1ab07dc4c_CastingExprModel_eq(_1ab07dc4c_CastingExprModel *_self_, _1ab07dc4c_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _1ab07ee7e_IndexingExprModel_eq(_1ab07ee7e_IndexingExprModel *_self_, _1ab07ee7e_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1ab08080e_KeyValPairExprModel_eq(_1ab08080e_KeyValPairExprModel *_self_, _1ab08080e_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ab08126b_SlicingExprModel_eq(_1ab08126b_SlicingExprModel *_self_, _1ab08126b_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ab0817ee_TraitSubIdentExprModel_eq(_1ab0817ee_TraitSubIdentExprModel *_self_, _1ab0817ee_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1ab082190_StructSubIdentExprModel_eq(_1ab082190_StructSubIdentExprModel *_self_, _1ab082190_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1ab082536_StructStaticIdentExprModel_eq(_1ab082536_StructStaticIdentExprModel *_self_, _1ab082536_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1ab083009_BuiltinPrintCallExprModel_eq(_1ab083009_BuiltinPrintCallExprModel *_self_, _1ab083009_BuiltinPrintCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab083306_BuiltinPrintlnCallExprModel_eq(_1ab083306_BuiltinPrintlnCallExprModel *_self_, _1ab083306_BuiltinPrintlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab0836d0_BuiltinNewCallExprModel_eq(_1ab0836d0_BuiltinNewCallExprModel *_self_, _1ab0836d0_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1ab083aa9_BuiltinPanicCallExprModel_eq(_1ab083aa9_BuiltinPanicCallExprModel *_self_, _1ab083aa9_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ab084060_BuiltinMakeCallExprModel_eq(_1ab084060_BuiltinMakeCallExprModel *_self_, _1ab084060_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1ab084439_BuiltinAppendCallExprModel_eq(_1ab084439_BuiltinAppendCallExprModel *_self_, _1ab084439_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1ab084736_BuiltinLenCallExprModel_eq(_1ab084736_BuiltinLenCallExprModel *_self_, _1ab084736_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab084a33_BuiltinCapCallExprModel_eq(_1ab084a33_BuiltinCapCallExprModel *_self_, _1ab084a33_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab084e0c_BuiltinDeleteCallExprModel_eq(_1ab084e0c_BuiltinDeleteCallExprModel *_self_, _1ab084e0c_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1ab0852d6_BuiltinCopyCallExprModel_eq(_1ab0852d6_BuiltinCopyCallExprModel *_self_, _1ab0852d6_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1ab0856b0_BuiltinErrorCallExprModel_eq(_1ab0856b0_BuiltinErrorCallExprModel *_self_, _1ab0856b0_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1ab0859ac_SizeofExprModel_eq(_1ab0859ac_SizeofExprModel *_self_, _1ab0859ac_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab086161_AlignofExprModel_eq(_1ab086161_AlignofExprModel *_self_, _1ab086161_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ab08634d_RuneExprModel_eq(_1ab08634d_RuneExprModel *_self_, _1ab08634d_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1ab0869be_FreeExprModel_eq(_1ab0869be_FreeExprModel *_self_, _1ab0869be_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1ab087e21_Param_eq(_1ab087e21_Param *_self_, _1ab087e21_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1ab08b84d_ParamIns> _1ab0882d9_instance(jule::Ptr<_1ab087e21_Param> _self_) {
	return jule::new_ptr<_1ab08b84d_ParamIns>(_1ab08b84d_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr)});;
}



inline jule::Bool _1ab088570_IsSelf(_1ab087e21_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ab088806_IsRef(_1ab087e21_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1ab089d9b_IsVoid(_1ab0898e5_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ab08a132_IsMethod(_1ab0898e5_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1ab087e21_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1ab088570_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ab08a3b8_IsEntryPoint(_1ab0898e5_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ab08a64e_IsInit(_1ab0898e5_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ab08a8d5_IsAnon(_1ab0898e5_Fn* _self_) {
	return _1ab6a8189_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ab08ab6b_AnyVar(_1ab0898e5_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab08ae02_instanceForce(jule::Ptr<_1ab0898e5_Fn> _self_) {
	jule::Ptr<_1ab08c9a3_FnIns> _1107_ins = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::new_ptr<_1ab835bc9_Scope>(_1ab835bc9_Scope{._field_Parent=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1ab854863_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab08b84d_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00c6851:;
		if (it != expr_end) {
			jule::Ptr<_1ab087e21_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab0882d9_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1b00c6851:;
			++it;
			goto _iter_begin_1b00c6851;
		}
		_iter_end_1b00c6851:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab08b188_instance(jule::Ptr<_1ab0898e5_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ab08ae02_instanceForce(_self_);;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab08b496_appendInstance(_1ab0898e5_Fn* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00cb812:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _15415_ains = *it;
			{
				if (_1ab08e543_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1b00cb812:;
			++it;
			goto _iter_begin_1b00cb812;
		}
		_iter_end_1b00cb812:;
	};
	{ jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1ab08b84d_ParamIns_eq(_1ab08b84d_ParamIns *_self_, _1ab08b84d_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1ab08bbe4_Str(_1ab08b84d_ParamIns* _self_) {
	_1a387dcd5_Builder _1767_s = static__1a387e654_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1a387ecd6_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:178:4"));
			(except.result);
		});
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		({
			auto except = _1a387ecd6_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:182:4"));
			(except.result);
		});
	};
	if (_1ab088570_IsSelf((*(_self_))._field_Decl)) {
		if (_1ab088806_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1a388008e_WriteByte(&_1767_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:187:5"));
			});
		};
		({
			auto except = _1a387ecd6_WriteStr(&_1767_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
		return _1a3880666_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		({
			auto except = _1a387ecd6_WriteStr(&_1767_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1a387ecd6_WriteStr(&_1767_s, _1ab939c12_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:197:4"));
			(except.result);
		});
	};
	return _1a3880666_Str(&_1767_s);;
}







inline jule::Str _1ab08cd27_Str(_1ab08c9a3_FnIns* _self_) {
	;
	return _1ab08e884_GetKindStr(_self_, false);;
}



inline jule::Bool _1ab08d168_Equal(jule::Ptr<_1ab08c9a3_FnIns> _self_, jule::Ptr<_1ab939816_Type> _22918_other) {
	jule::Ptr<_1ab08c9a3_FnIns> _2303_f = _1ab93d2a9_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1ab08d60d_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1ab08d60d_EqualFn(jule::Ptr<_1ab08c9a3_FnIns> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1ab089d9b_IsVoid((*(_self_))._field_Decl) != _1ab089d9b_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1ab08b84d_ParamIns>,jule::Ptr<_1ab08b84d_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1ab08b84d_ParamIns>,jule::Ptr<_1ab08b84d_ParamIns>>((void*)__jule_anon1b00d6e5a, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1b00dccb8:;
	}
	_iter_end_1b00dccb8:;;
	if ((!(_1ab089d9b_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1ab93a053_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ab08d94e_equalTrait(jule::Ptr<_1ab08c9a3_FnIns> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1ab08d60d_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ab939816_Type>> _1ab08dbd5_Types(_1ab08c9a3_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b00e395b:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab93dce3_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b00e39c2:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1b00e34d8:;
			{
				return (*(_1ab93dce3_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1b00e33c8:;
	};
}



inline jule::Bool _1ab08de6b_IsBuiltin(_1ab08c9a3_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ab08e202_IsAnon(_1ab08c9a3_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ab08a8d5_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1ab08e543_Same(_1ab08c9a3_FnIns* _self_, jule::Ptr<_1ab08c9a3_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b00e6673:;
		if (it != expr_end) {
			jule::I64 _3477_i = it - expr->begin();
			jule::Ptr<_1ab937e30_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1ab937e30_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Type))._field_BindIdent != (*(*(_3484_g2))._field_Type.alloc)._field_BindIdent) || (!(_1ab93a053_Equal((*((*(_34710_g))))._field_Type, (*(_3484_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1b00e6673:;
			++it;
			_3477_i++;
			goto _iter_begin_1b00e6673;
		}
		_iter_end_1b00e6673:;
	};
	return true;;
}



inline jule::Str _1ab08e884_GetKindStr(_1ab08c9a3_FnIns* _self_, jule::Bool _35922_ident) {
	_1a387dcd5_Builder _3607_s = static__1a387e654_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1a387ecd6_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:363:4"));
			(except.result);
		});
	};
	({
		auto except = _1a387ecd6_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:366:3"));
		(except.result);
	});
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1a388008e_WriteByte(&_3607_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:369:4"));
		});
		({
			auto except = _1a387ecd6_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1a388008e_WriteByte(&_3607_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
	});
	jule::I64 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b00ec58b:;
			if (it != expr_end) {
				jule::I64 _3768_i = it - expr->begin();
				jule::Ptr<_1ab08b84d_ParamIns> *_37611_p = it;
				{
					({
						auto except = _1a387ecd6_WriteStr(&_3607_s, _1ab08bbe4_Str((*(_37611_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:5"));
						(except.result);
					});
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1a388008e_WriteByte(&_3607_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:379:6"));
						});
					};
				}
				_iter_next_1b00ec58b:;
				++it;
				_3768_i++;
				goto _iter_begin_1b00ec58b;
			}
			_iter_end_1b00ec58b:;
		};
	};
	({
		auto except = _1a388008e_WriteByte(&_3607_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:383:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1a388008e_WriteByte(&_3607_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:385:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1ab089d9b_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1a388008e_WriteByte(&_3607_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:388:4"));
		});
		({
			auto except = _1a387ecd6_WriteStr(&_3607_s, _1ab939c12_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:389:4"));
			(except.result);
		});
	};
	return _1a3880666_Str(&_3607_s);;
}







inline jule::Ptr<_1ab866578_ImportInfo> _1ab091215_SelectPackage(_1ab090be8_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b010133c:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1b010133c:;
			++it;
			goto _iter_begin_1b010133c;
		}
		_iter_end_1b010133c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab091611_FindVar(_1ab090be8_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1ab093745_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab091a0c_FindTypeAlias(_1ab090be8_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1ab093beb_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab091e08_FindStruct(_1ab090be8_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01030b9:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1b01030b9:;
			++it;
			goto _iter_begin_1b01030b9;
		}
		_iter_end_1b01030b9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab092304_FindFn(_1ab090be8_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0104cd0:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1b0104cd0:;
			++it;
			goto _iter_begin_1b0104cd0;
		}
		_iter_end_1b0104cd0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab095109_Trait> _1ab092645_FindTrait(_1ab090be8_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0106100:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1b0106100:;
			++it;
			goto _iter_begin_1b0106100;
		}
		_iter_end_1b0106100:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab092986_FindEnum(_1ab090be8_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0107112:;
		if (it != expr_end) {
			jule::Ptr<_1ab0977b0_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1b0107112:;
			++it;
			goto _iter_begin_1b0107112;
		}
		_iter_end_1b0107112:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab092cc7_FindTypeEnum(_1ab090be8_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0108102:;
		if (it != expr_end) {
			jule::Ptr<_1ab098eba_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1b0108102:;
			++it;
			goto _iter_begin_1b0108102;
		}
		_iter_end_1b0108102:;
	};
	return nullptr;;
}



inline jule::I64 _1ab09328e_findVar1(_1ab090be8_SymTab* _self_, jule::Ptr<_1ab8a7289_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01090e2:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1b01090e2:;
			++it;
			_1097_i++;
			goto _iter_begin_1b01090e2;
		}
		_iter_end_1b01090e2:;
	};
	return -1LL;;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab093745_findVar(_1ab090be8_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1ab8a7289_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1b010ae5c:;
		}
		_iter_end_1b010ae5c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b010c3e2:;
			if (it != expr_end) {
				jule::Ptr<_1ab8a7289_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1b010c3e2:;
				++it;
				goto _iter_begin_1b010c3e2;
			}
			_iter_end_1b010c3e2:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab093beb_findTypeAlias(_1ab090be8_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1ab938a24_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1b010e2a1:;
		}
		_iter_end_1b010e2a1:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b0110736:;
			if (it != expr_end) {
				jule::Ptr<_1ab938a24_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1b0110736:;
				++it;
				goto _iter_begin_1b0110736;
			}
			_iter_end_1b0110736:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ab0940e7_defByIdent(_1ab090be8_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b011199b:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1b011199b:;
			++it;
			goto _iter_begin_1b011199b;
		}
		_iter_end_1b011199b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0112738:;
		if (it != expr_end) {
			jule::Ptr<_1ab938a24_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1b0112738:;
			++it;
			goto _iter_begin_1b0112738;
		}
		_iter_end_1b0112738:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0115ac1:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1b0115ac1:;
			++it;
			goto _iter_begin_1b0115ac1;
		}
		_iter_end_1b0115ac1:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01153d9:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1b01153d9:;
			++it;
			goto _iter_begin_1b01153d9;
		}
		_iter_end_1b01153d9:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0121934:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1b0121934:;
			++it;
			goto _iter_begin_1b0121934;
		}
		_iter_end_1b0121934:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01215b0:;
		if (it != expr_end) {
			jule::Ptr<_1ab0977b0_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1b01215b0:;
			++it;
			goto _iter_begin_1b01215b0;
		}
		_iter_end_1b01215b0:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0122a89:;
		if (it != expr_end) {
			jule::Ptr<_1ab098eba_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1b0122a89:;
			++it;
			goto _iter_begin_1b0122a89;
		}
		_iter_end_1b0122a89:;
	};
	return nullptr;;
}



inline jule::Bool _1ab09459d_isDuplicatedIdent(_1ab090be8_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0120a65:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b0120a65:;
			++it;
			goto _iter_begin_1b0120a65;
		}
		_iter_end_1b0120a65:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01281ee:;
		if (it != expr_end) {
			jule::Ptr<_1ab938a24_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b01281ee:;
			++it;
			goto _iter_begin_1b01281ee;
		}
		_iter_end_1b01281ee:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0128243:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b0128243:;
			++it;
			goto _iter_begin_1b0128243;
		}
		_iter_end_1b0128243:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b012e348:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b012e348:;
			++it;
			goto _iter_begin_1b012e348;
		}
		_iter_end_1b012e348:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01317bd:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b01317bd:;
			++it;
			goto _iter_begin_1b01317bd;
		}
		_iter_end_1b01317bd:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0131867:;
		if (it != expr_end) {
			jule::Ptr<_1ab0977b0_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b0131867:;
			++it;
			goto _iter_begin_1b0131867;
		}
		_iter_end_1b0131867:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0132868:;
		if (it != expr_end) {
			jule::Ptr<_1ab098eba_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b0132868:;
			++it;
			goto _iter_begin_1b0132868;
		}
		_iter_end_1b0132868:;
	};
	return false;;
}







inline jule::Str _1ab095505_Str(_1ab095109_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab095846_Equal(jule::Ptr<_1ab095109_Trait> _self_, jule::Ptr<_1ab939816_Type> _2518_other) {
	jule::Ptr<_1ab095109_Trait> _263_trt = _1ab93d7c6_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab095cdb_FindMethod(_1ab095109_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0135250:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1b0135250:;
			++it;
			goto _iter_begin_1b0135250;
		}
		_iter_end_1b0135250:;
	};
	return _1ab09646d_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab09646d_findMethodInherit(_1ab095109_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b013841d:;
		if (it != expr_end) {
			jule::Ptr<_1ab942027_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_1b013841d;
				};
				jule::Ptr<_1ab095109_Trait> _608_t = _1ab93d7c6_Trait((*_5615_i.alloc)._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1ab0898e5_Fn> _629_f2 = _1ab095cdb_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1b013841d:;
			++it;
			goto _iter_begin_1b013841d;
		}
		_iter_end_1b013841d:;
	};
	return nullptr;;
}








inline jule::Bool _1ab096c54_EnumItem_eq(_1ab096c54_EnumItem *_self_, _1ab096c54_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1ab09712d_AutoExpr(_1ab096c54_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1ab097b67_Str(_1ab0977b0_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab097ea8_Equal(jule::Ptr<_1ab0977b0_Enum> _self_, jule::Ptr<_1ab939816_Type> _3818_other) {
	jule::Ptr<_1ab0977b0_Enum> _393_enm = _1ab93c770_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1ab096c54_EnumItem> _1ab0983d7_FindItem(_1ab0977b0_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b013bc29:;
		if (it != expr_end) {
			jule::Ptr<_1ab096c54_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1b013bc29:;
			++it;
			goto _iter_begin_1b013bc29;
		}
		_iter_end_1b013bc29:;
	};
	return nullptr;;
}








inline jule::Bool _1ab0988e3_TypeEnumItem_eq(_1ab0988e3_TypeEnumItem *_self_, _1ab0988e3_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1ab09933e_Str(_1ab098eba_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab099680_Equal(jule::Ptr<_1ab098eba_TypeEnum> _self_, jule::Ptr<_1ab939816_Type> _8018_other) {
	jule::Ptr<_1ab098eba_TypeEnum> _813_tenm = _1ab93ca06_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1ab0988e3_TypeEnumItem> _1ab099aae_FindItem(_1ab098eba_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b013dec3:;
		if (it != expr_end) {
			jule::Ptr<_1ab0988e3_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1b013dec3:;
			++it;
			goto _iter_begin_1b013dec3;
		}
		_iter_end_1b013dec3:;
	};
	return nullptr;;
}








inline jule::Bool _1ab119cc7_comptimeRange_eq(_1ab119cc7_comptimeRange *_self_, _1ab119cc7_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ab11a1c3_Str(_1ab119cc7_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ab11a514_Equal(jule::Ptr<_1ab119cc7_comptimeRange> _self_, jule::Ptr<_1ab939816_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1ab11a833_comptimeStructField_eq(_1ab11a833_comptimeStructField *_self_, _1ab11a833_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ab11abda_Str(_1ab11a833_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ab11b02b_Equal(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Ptr<_1ab939816_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab11b537__Decl(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Ptr<_1ab9087b3_eval>* _4127_e, jule::Ptr<_1a378984a_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab11b933__Type(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Ptr<_1ab9087b3_eval>* _5327_e, jule::Ptr<_1a378984a_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab11bc74_subIdent(jule::Ptr<_1ab11a833_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b014b71c:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _648_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b014c993, jule::Ptr<__jule_anon_1b014c993_ctx>::make(__jule_anon_1b014c993_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b014c993_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b014b7a5:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _718_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b014e91d, jule::Ptr<__jule_anon_1b014e91d_ctx>::make(__jule_anon_1b014e91d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b014e91d_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1b014b552:;
			{
				return nullptr;;
			}
		}
		_match_end_1b014b662:;
	};
}







inline jule::Str _1ab11c48e_Str(_1ab11c0c6_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ab11c7d0_Equal(jule::Ptr<_1ab11c0c6_comptimeStructFields> _self_, jule::Ptr<_1ab939816_Type> _9018_other) {
	return false;;
}



inline void _1ab11cc64_ready(_1ab11c0c6_comptimeStructFields* _self_, jule::Ptr<_1ab8a7289_Var>* _9426_keyA, jule::Ptr<_1ab8a7289_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab11a833_comptimeStructField>(_1ab11a833_comptimeStructField{._field_field=jule::Ptr<_1a37a4832_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data6)})});
	};
}



inline void _1ab11d0c7_index(_1ab11c0c6_comptimeStructFields* _self_, jule::Ptr<_1ab906a8b_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab11a833_comptimeStructField>(_1ab11a833_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data6)});
}



inline void _1ab11d4e5_step(_1ab11c0c6_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1ab8a7289_Var>* _12633_keyA, jule::Ptr<_1ab8a7289_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1ab93e596_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1ab11d77b_len(_1ab11c0c6_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ab11da56_comptimeStatic_eq(_1ab11da56_comptimeStatic *_self_, _1ab11da56_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ab11de0d_Str(_1ab11da56_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ab11e24e_Equal(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Ptr<_1ab939816_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab11e75a__Decl(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Ptr<_1ab9087b3_eval>* _15427_e, jule::Ptr<_1a378984a_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab11eb56__Type(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Ptr<_1ab9087b3_eval>* _16627_e, jule::Ptr<_1a378984a_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab11ee97_subIdent(jule::Ptr<_1ab11da56_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b0162205:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _1778_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b016347b, jule::Ptr<__jule_anon_1b016347b_ctx>::make(__jule_anon_1b016347b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b016347b_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b016228d:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _1848_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0165406, jule::Ptr<__jule_anon_1b0165406_ctx>::make(__jule_anon_1b0165406_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0165406_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1b016203a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b016214a:;
	};
}







inline jule::Str _1ab1206b2_Str(_1ab12030a_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ab120a03_Equal(jule::Ptr<_1ab12030a_comptimeStatics> _self_, jule::Ptr<_1ab939816_Type> _20318_other) {
	return false;;
}



inline void _1ab120e87_ready(_1ab12030a_comptimeStatics* _self_, jule::Ptr<_1ab8a7289_Var>* _20726_keyA, jule::Ptr<_1ab8a7289_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab11da56_comptimeStatic>(_1ab11da56_comptimeStatic{._field_field=jule::Ptr<_1ab8a7289_Var>(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data8)})});
	};
}



inline void _1ab1212ea_index(_1ab12030a_comptimeStatics* _self_, jule::Ptr<_1ab906a8b_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab11da56_comptimeStatic>(_1ab11da56_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data8)});
}



inline void _1ab121718_step(_1ab12030a_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1ab8a7289_Var>* _23933_keyA, jule::Ptr<_1ab8a7289_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1ab940da0_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1ab12199e_len(_1ab12030a_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ab121c79_comptimeEnumField_eq(_1ab121c79_comptimeEnumField *_self_, _1ab121c79_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ab122131_Str(_1ab121c79_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ab122472_Equal(jule::Ptr<_1ab121c79_comptimeEnumField> _self_, jule::Ptr<_1ab939816_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12296c__Decl(jule::Ptr<_1ab121c79_comptimeEnumField> _self_, jule::Ptr<_1ab9087b3_eval>* _26727_e, jule::Ptr<_1a378984a_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab122cad_subIdent(jule::Ptr<_1ab121c79_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b0172710:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _2828_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0176868, jule::Ptr<__jule_anon_1b0176868_ctx>::make(__jule_anon_1b0176868_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0176868_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1b0172cc6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0171c3c:;
	};
}







inline jule::Str _1ab123550_Str(_1ab123088_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ab123891_Equal(jule::Ptr<_1ab123088_comptimeEnumFields> _self_, jule::Ptr<_1ab939816_Type> _30118_other) {
	return false;;
}



inline void _1ab123c9d_ready(_1ab123088_comptimeEnumFields* _self_, jule::Ptr<_1ab8a7289_Var>* _30526_keyA, jule::Ptr<_1ab8a7289_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab121c79_comptimeEnumField>(_1ab121c79_comptimeEnumField{._field_field=jule::Ptr<_1ab096c54_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data10)})});
	};
}



inline void _1ab124111_index(_1ab123088_comptimeEnumFields* _self_, jule::Ptr<_1ab906a8b_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab121c79_comptimeEnumField>(_1ab121c79_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data10)});
}



inline void _1ab12452e_step(_1ab123088_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1ab8a7289_Var>* _33733_keyA, jule::Ptr<_1ab8a7289_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1ab93eab3_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1ab1247b5_len(_1ab123088_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ab124a90_comptimeParam_eq(_1ab124a90_comptimeParam *_self_, _1ab124a90_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1ab124e47_Str(_1ab124a90_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ab125288_Equal(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab939816_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1257a5__Decl(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab9087b3_eval>* _36527_e, jule::Ptr<_1a378984a_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab125ba1__Type(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab9087b3_eval>* _37727_e, jule::Ptr<_1a378984a_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12609c__Recv(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Ptr<_1ab9087b3_eval>* _38527_e, jule::Ptr<_1a378984a_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _3907_constant = static__1ab071723_NewBool(_1ab088570_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1263dd_subIdent(jule::Ptr<_1ab124a90_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b018c791:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _4018_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b018dab1, jule::Ptr<__jule_anon_1b018dab1_ctx>::make(__jule_anon_1b018dab1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b018dab1_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1b018c83a:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _4088_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0190a3b, jule::Ptr<__jule_anon_1b0190a3b_ctx>::make(__jule_anon_1b0190a3b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0190a3b_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b018c8b2:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _4158_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b01929b6, jule::Ptr<__jule_anon_1b01929b6_ctx>::make(__jule_anon_1b01929b6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b01929b6_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1b018c483:;
			{
				return nullptr;;
			}
		}
		_match_end_1b018c6a3:;
	};
}







inline jule::Str _1ab126b91_Str(_1ab1268e9_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ab126ed2_Equal(jule::Ptr<_1ab1268e9_comptimeParams> _self_, jule::Ptr<_1ab939816_Type> _43418_other) {
	return false;;
}



inline void _1ab127466_ready(_1ab1268e9_comptimeParams* _self_, jule::Ptr<_1ab8a7289_Var>* _43826_keyA, jule::Ptr<_1ab8a7289_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab124a90_comptimeParam>(_1ab124a90_comptimeParam{._field_param=jule::Ptr<_1ab08b84d_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data12)})});
	};
}



inline void _1ab1277c9_index(_1ab1268e9_comptimeParams* _self_, jule::Ptr<_1ab906a8b_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab124a90_comptimeParam>(_1ab124a90_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data12)});
}



inline void _1ab127be7_step(_1ab1268e9_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1ab8a7289_Var>* _47033_keyA, jule::Ptr<_1ab8a7289_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1ab9400d0_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1ab127e7d_len(_1ab1268e9_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1ab128610_Str(_1ab128258_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ab128951_Equal(jule::Ptr<_1ab128258_comptimeTypeInfos> _self_, jule::Ptr<_1ab939816_Type> _49418_other) {
	return false;;
}



inline void _1ab128dd5_ready(_1ab128258_comptimeTypeInfos* _self_, jule::Ptr<_1ab8a7289_Var>* _49826_keyA, jule::Ptr<_1ab8a7289_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab129bc7_comptimeTypeInfo>(_1ab129bc7_comptimeTypeInfo{._field_base=jule::Ptr<_1ab939816_Type>(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data15)})});
	};
}



inline void _1ab129248_index(_1ab128258_comptimeTypeInfos* _self_, jule::Ptr<_1ab906a8b_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1ab939360_Kind_mptr_data15)});
}



inline void _1ab129666_step(_1ab128258_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1ab8a7289_Var>* _52833_keyA, jule::Ptr<_1ab8a7289_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1ab939360_Kind_mptr_data15);
	};
}



inline jule::I64 _1ab1298ec_len(_1ab128258_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1ab129bc7_comptimeTypeInfo_eq(_1ab129bc7_comptimeTypeInfo *_self_, _1ab129bc7_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1ab12a07e_Str(_1ab129bc7_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ab939c12_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ab12a3c0_Equal(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab939816_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12aa0d__Decl(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _55627_e, jule::Ptr<_1a378984a_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1ab93d540_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01a99bc:;
			{
				_5617_decl=jule::Any((*(_1ab93d540_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1ab93d7c6_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01a9a33:;
			{
				_5617_decl=jule::Any(_1ab93d7c6_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1ab93c770_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01a8504:;
			{
				_5617_decl=jule::Any(_1ab93c770_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1ab93ca06_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01a856a:;
			{
				_5617_decl=jule::Any(_1ab93ca06_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1ab93d2a9_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01a85d1:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _5728_f = _1ab93d2a9_Fn((*(_self_))._field_base);;
				{
					
					if (_1ab08de6b_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1b01aea5a:;
						{
							_1ab908d46_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1ab08e202_IsAnon(_5728_f.ptr())) {
						_case_begin_1b01aeb04:;
						{
							_1ab908d46_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1b01ae9c2:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1b01a848d:;
			{
				_1ab908d46_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b01a836c:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12ae09__Str(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _59322_e, jule::Ptr<_1a378984a_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _5987_constant = static__1ab0719dc_NewStr(_1ab939c12_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b30ba_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12b305__Kind(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _60627_e, jule::Ptr<_1a378984a_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab0977b0_Enum> _6117_enm = _1ab868316_FindEnum(_1ab82c0cc_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ab096c54_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1ab93abd0_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1b01b8976:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ab93d540_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b8888:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ab93d7c6_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b8635:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ab93c4d9_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b869b:;
			{
				if (_1ab94a78e_IsUnsafe(_1ab93c4d9_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ab93c253_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b8712:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1ab93c770_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b8778:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ab93ca06_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b91d5:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1ab93da5c_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b924b:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ab93d023_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b92b2:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ab93cc8c_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b9328:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ab93d2a9_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b93a0:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ab93dce3_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b9427:;
			{
				_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ab93bebc_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b01b949e:;
			{
				jule::Ptr<_1ab94292e_Prim> _6434_prim = _1ab93bebc_Prim((*(_self_))._field_base);;
				{
					
					if (_1ab946180_IsAny(_6434_prim.ptr())) {
						_case_begin_1b01c5e06:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ab945b63_IsBool(_6434_prim.ptr())) {
						_case_begin_1b01c5d18:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ab945de9_IsStr(_6434_prim.ptr())) {
						_case_begin_1b01c5ae8:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ab944d93_IsF32(_6434_prim.ptr())) {
						_case_begin_1b01c5b5e:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ab945129_IsF64(_6434_prim.ptr())) {
						_case_begin_1b01c5bc5:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ab943820_IsI8(_6434_prim.ptr())) {
						_case_begin_1b01c5c3b:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ab943aa6_IsI16(_6434_prim.ptr())) {
						_case_begin_1b01c6665:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ab943d3c_IsI32(_6434_prim.ptr())) {
						_case_begin_1b01c66dc:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ab9440c3_IsI64(_6434_prim.ptr())) {
						_case_begin_1b01c6764:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ab944359_IsU8(_6434_prim.ptr())) {
						_case_begin_1b01c67db:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ab9445e0_IsU16(_6434_prim.ptr())) {
						_case_begin_1b01c6863:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ab944876_IsU32(_6434_prim.ptr())) {
						_case_begin_1b01c68da:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ab944b0c_IsU64(_6434_prim.ptr())) {
						_case_begin_1b01c6962:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ab9453b0_IsInt(_6434_prim.ptr())) {
						_case_begin_1b01c69d9:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ab945646_IsUint(_6434_prim.ptr())) {
						_case_begin_1b01c6a61:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ab9458cc_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1b01c6ad8:;
						{
							_61211_item=_1ab0983d7_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b01c5950:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1ab939c12_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1b01c58c8:;
				};
			}
		}
		else {
			_case_begin_1b01b84c0:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1ab939c12_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1b01b8415:;
	};
	return _1ab935c52_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1ab90bd49_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12b701__Bits(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _68627_e, jule::Ptr<_1a378984a_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab94292e_Prim> _6913_prim = _1ab93bebc_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1ab908d46_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1ab11020c_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1ab908d46_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _7017_constant = static__1ab071190_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b3c9c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12baec__Elem(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _71027_e, jule::Ptr<_1a378984a_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab949c22_Ptr> _7157_ptr = _1ab93c4d9_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1ab94a78e_IsUnsafe(_7157_ptr)) {
			_1ab908d46_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ab94645a_Sptr> _7237_sptr = _1ab93c253_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ab946e2d_Slc> _7277_slice = _1ab93d023_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1ab94924e_Arr> _7317_array = _1ab93cc8c_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1ab0977b0_Enum> _7357_enm = _1ab93c770_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1ab908d46_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12bee8__Size(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _74327_e, jule::Ptr<_1a378984a_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab94924e_Arr> _7487_arr = _1ab93cc8c_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1ab908d46_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _7537_constant = static__1ab071190_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b3c9c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12c3e4__Key(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _76226_e, jule::Ptr<_1a378984a_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab9485c2_Map> _7677_m = _1ab93da5c_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1ab908d46_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12c7e0__Value(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _77528_e, jule::Ptr<_1a378984a_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab9485c2_Map> _7807_m = _1ab93da5c_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1ab908d46_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12cbdb__Fields(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _78829_e, jule::Ptr<_1a378984a_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _7937_s = _1ab93d540_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab11c0c6_comptimeStructFields>(_1ab11c0c6_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	};
	jule::Ptr<_1ab0977b0_Enum> _8037_enm = _1ab93c770_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab123088_comptimeEnumFields>(_1ab123088_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	};
	_1ab908d46_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12d0d7__Statics(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _81730_e, jule::Ptr<_1a378984a_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _8227_s = _1ab93d540_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1ab908d46_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab12030a_comptimeStatics>(_1ab12030a_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12d4d3__Binded(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _83629_e, jule::Ptr<_1a378984a_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _8417_constant = static__1ab071723_NewBool(_1ab93a6b3_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12d8ce__Ordered(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _84926_e, jule::Ptr<_1a378984a_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _8547_constant = static__1ab071723_NewBool(_1ab93b483_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12dcca__Comparable(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _86229_e, jule::Ptr<_1a378984a_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _8677_constant = static__1ab071723_NewBool(_1ab93ae66_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12e1c6__Mutable(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _87526_e, jule::Ptr<_1a378984a_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _8807_constant = static__1ab071723_NewBool(_1ab93b1ec_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12e5c2__Types(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _88828_e, jule::Ptr<_1a378984a_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab947a22_Tuple> _8937_tup = _1ab93dce3_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1ab908d46_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab128258_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1ab128258_comptimeTypeInfos>(_1ab128258_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab129bc7_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab129bc7_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b021e559:;
		if (it != expr_end) {
			jule::Ptr<_1ab939816_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab129bc7_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab882de1_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1b021e559:;
			++it;
			goto _iter_begin_1b021e559;
		}
		_iter_end_1b021e559:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12e9bd__CanNil(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _91129_e, jule::Ptr<_1a378984a_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _9167_constant = static__1ab071723_NewBool(_1ab93b719_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab12edb9__GC(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _92425_e, jule::Ptr<_1a378984a_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _9297_constant = static__1ab071723_NewBool(_1ab93b9a0_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1302b5__Result(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _93729_e, jule::Ptr<_1a378984a_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _9427_f = _1ab93d2a9_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1ab908d46_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1ab9b2a15_primVoid));;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1306b1__Params(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Ptr<_1ab9087b3_eval>* _95329_e, jule::Ptr<_1a378984a_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _9587_f = _1ab93d2a9_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1ab908d46_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1268e9_comptimeParams>(_1ab1268e9_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab130a02_subIdent(jule::Ptr<_1ab129bc7_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b0230724:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _9738_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b02322d6, jule::Ptr<__jule_anon_1b02322d6_ctx>::make(__jule_anon_1b02322d6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02322d6_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1b023078a:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _9808_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0234261, jule::Ptr<__jule_anon_1b0234261_ctx>::make(__jule_anon_1b0234261_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0234261_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1b0230801:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _9878_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b02361db, jule::Ptr<__jule_anon_1b02361db_ctx>::make(__jule_anon_1b02361db_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02361db_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1b0230988:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _9948_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0238166, jule::Ptr<__jule_anon_1b0238166_ctx>::make(__jule_anon_1b0238166_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0238166_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1b0230a10:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10018_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b023a0e1, jule::Ptr<__jule_anon_1b023a0e1_ctx>::make(__jule_anon_1b023a0e1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b023a0e1_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1b0230a87:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10088_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b023c06b, jule::Ptr<__jule_anon_1b023c06b_ctx>::make(__jule_anon_1b023c06b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b023c06b_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1b0230b0e:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10158_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b023dee6, jule::Ptr<__jule_anon_1b023dee6_ctx>::make(__jule_anon_1b023dee6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b023dee6_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b0230c1e:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10228_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0240e71, jule::Ptr<__jule_anon_1b0240e71_ctx>::make(__jule_anon_1b0240e71_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0240e71_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b0230c85:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10298_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b024303e, jule::Ptr<__jule_anon_1b024303e_ctx>::make(__jule_anon_1b024303e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b024303e_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b0230ceb:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10368_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0244eb9, jule::Ptr<__jule_anon_1b0244eb9_ctx>::make(__jule_anon_1b0244eb9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0244eb9_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1b0230d62:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10438_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0246e44, jule::Ptr<__jule_anon_1b0246e44_ctx>::make(__jule_anon_1b0246e44_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0246e44_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b0230dd9:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10508_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0248dbe, jule::Ptr<__jule_anon_1b0248dbe_ctx>::make(__jule_anon_1b0248dbe_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0248dbe_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1b0230e61:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10578_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b024ad49, jule::Ptr<__jule_anon_1b024ad49_ctx>::make(__jule_anon_1b024ad49_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b024ad49_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1b0230ed8:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10648_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b024ccc4, jule::Ptr<__jule_anon_1b024ccc4_ctx>::make(__jule_anon_1b024ccc4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b024ccc4_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b0231060:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10718_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b024ec4e, jule::Ptr<__jule_anon_1b024ec4e_ctx>::make(__jule_anon_1b024ec4e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b024ec4e_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1b02310d7:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10788_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0251bc9, jule::Ptr<__jule_anon_1b0251bc9_ctx>::make(__jule_anon_1b0251bc9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0251bc9_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1b023115e:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10858_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0253b54, jule::Ptr<__jule_anon_1b0253b54_ctx>::make(__jule_anon_1b0253b54_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0253b54_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1b02311d6:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10928_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0255ace, jule::Ptr<__jule_anon_1b0255ace_ctx>::make(__jule_anon_1b0255ace_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0255ace_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1b023125d:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10998_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0257a59, jule::Ptr<__jule_anon_1b0257a59_ctx>::make(__jule_anon_1b0257a59_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0257a59_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1b022d1d3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0230504:;
	};
}








inline jule::Bool _1ab130ccc_comptimeValue_eq(_1ab130ccc_comptimeValue *_self_, _1ab130ccc_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1ab131184_Str(_1ab130ccc_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ab1314c5_Equal(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab939816_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab131a36__Unwrap(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _112229_e, jule::Ptr<_1a378984a_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab131e32__Type(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _113027_e, jule::Ptr<_1a378984a_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab13232d__Lvalue(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _113829_e, jule::Ptr<_1a378984a_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _11437_constant = static__1ab071723_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab132729__Mutable(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _115130_e, jule::Ptr<_1a378984a_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _11567_constant = static__1ab071723_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab132b25__Const(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _116428_e, jule::Ptr<_1a378984a_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _11697_constant = static__1ab071723_NewBool(_1ab9074c6_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab133021__Field(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _117728_e, jule::Ptr<_1a378984a_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _11827_s = _1ab93d540_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_1ab908d46_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1ab906a8b_Data> _11887_d = _1ab927628_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab9074c6_IsConst(_11887_d.ptr())))) {
		_1ab908d46_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab94292e_Prim> _11963_prim = _1ab93bebc_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_1ab945de9_IsStr(_11963_prim.ptr()))))) {
		_1ab908d46_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1ab072dc8_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1a37a4832_FieldIns> _12027_f = _1a37a67bd_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1ab908d46_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1ab920313_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1ab82c792_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab13341c__Method(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Ptr<_1ab9087b3_eval>* _121229_e, jule::Ptr<_1a378984a_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1a37a53d2_StructIns> _12187_s = static_cast<jule::Ptr<_1a37a53d2_StructIns>>(nullptr);;
	if ((_1ab93c253_Sptr((*((*(_self_))._field_data))._field_Type.ptr()) != nullptr)) {
		_12187_s=_1ab93d540_Struct((*(_1ab93c253_Sptr((*((*(_self_))._field_data))._field_Type)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1ab93d540_Struct((*((*(_self_))._field_data))._field_Type.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1ab908d46_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1ab906a8b_Data> _12307_d = _1ab927628_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab9074c6_IsConst(_12307_d.ptr())))) {
		_1ab908d46_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab94292e_Prim> _12383_prim = _1ab93bebc_Prim((*(_12307_d))._field_Type);;
	if (((_12383_prim == nullptr) || (!(_1ab945de9_IsStr(_12383_prim.ptr()))))) {
		_1ab908d46_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_12307_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1ab072dc8_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1ab0898e5_Fn> _12457_m = _1a37a647c_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1ab908d46_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1ab936307_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1ab92092e_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1ab82c792_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab13375d_subIdent(jule::Ptr<_1ab130ccc_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1b0282875:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _12618_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0283d3d, jule::Ptr<__jule_anon_1b0283d3d_ctx>::make(__jule_anon_1b0283d3d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0283d3d_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b02828db:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _12688_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0285cb8, jule::Ptr<__jule_anon_1b0285cb8_ctx>::make(__jule_anon_1b0285cb8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0285cb8_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1b0282952:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _12758_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0287c43, jule::Ptr<__jule_anon_1b0287c43_ctx>::make(__jule_anon_1b0287c43_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0287c43_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b02829c9:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _12828_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0289bbd, jule::Ptr<__jule_anon_1b0289bbd_ctx>::make(__jule_anon_1b0289bbd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0289bbd_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1b0282bb6:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _12898_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b028bb48, jule::Ptr<__jule_anon_1b028bb48_ctx>::make(__jule_anon_1b028bb48_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b028bb48_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1b0282c2c:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _12968_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b028dac3, jule::Ptr<__jule_anon_1b028dac3_ctx>::make(__jule_anon_1b028dac3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b028dac3_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1b0282c93:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _13038_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0290a4d, jule::Ptr<__jule_anon_1b0290a4d_ctx>::make(__jule_anon_1b0290a4d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0290a4d_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1b0282347:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0282732:;
	};
}







inline jule::Str _1ab133de0_Str(_1ab133a38_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ab134231_Equal(jule::Ptr<_1ab133a38_comptimeFiles> _self_, jule::Ptr<_1ab939816_Type> _132218_other) {
	return false;;
}



inline void _1ab1346b5_ready(_1ab133a38_comptimeFiles* _self_, jule::Ptr<_1ab8a7289_Var>* _132626_keyA, jule::Ptr<_1ab8a7289_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1354a7_comptimeFile>(_1ab1354a7_comptimeFile{._field_file=jule::Ptr<_1ab090be8_SymTab>(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data18)})});
	};
}



inline void _1ab134a28_index(_1ab133a38_comptimeFiles* _self_, jule::Ptr<_1ab906a8b_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1354a7_comptimeFile>(_1ab1354a7_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data18)});
}



inline void _1ab134e46_step(_1ab133a38_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1ab8a7289_Var>* _135833_keyA, jule::Ptr<_1ab8a7289_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1ab1354a7_comptimeFile>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1ab1351cc_len(_1ab133a38_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1ab1354a7_comptimeFile_eq(_1ab1354a7_comptimeFile *_self_, _1ab1354a7_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1ab13585e_Str(_1ab1354a7_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ab135ba0_Equal(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab939816_Type> _138218_other) {
	return false;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1361bc__Path(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab9087b3_eval>* _138627_e, jule::Ptr<_1a378984a_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _13917_constant = static__1ab0719dc_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b30ba_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1365b8__Name(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab9087b3_eval>* _139927_e, jule::Ptr<_1a378984a_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _14047_constant = static__1ab0719dc_NewStr(_1ab6abad8_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b30ba_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab1369b4__Dir(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Ptr<_1ab9087b3_eval>* _141226_e, jule::Ptr<_1a378984a_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab070c61_Const> _14177_constant = static__1ab0719dc_NewStr(_1ab6ab852_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b30ba_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab136d05_subIdent(jule::Ptr<_1ab1354a7_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1b02a4446:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _14288_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b02a5766, jule::Ptr<__jule_anon_1b02a5766_ctx>::make(__jule_anon_1b02a5766_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02a5766_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b02a44e0:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _14358_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b02a76e1, jule::Ptr<__jule_anon_1b02a76e1_ctx>::make(__jule_anon_1b02a76e1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02a76e1_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1b02a4567:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _14428_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b02a966b, jule::Ptr<__jule_anon_1b02a966b_ctx>::make(__jule_anon_1b02a966b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02a966b_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1b02a4138:;
			{
				return nullptr;;
			}
		}
		_match_end_1b02a4358:;
	};
}







inline jule::Str _1ab1376b8_Str(_1ab1370d0_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1ab137a09_Equal(jule::Ptr<_1ab1370d0_comptimeDecls> _self_, jule::Ptr<_1ab939816_Type> _146118_other) {
	return false;;
}



inline void _1ab137d7d_ready(_1ab1370d0_comptimeDecls* _self_, jule::Ptr<_1ab8a7289_Var>* _146526_keyA, jule::Ptr<_1ab8a7289_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)})});
	};
}



inline void _1ab1381e1_index(_1ab1370d0_comptimeDecls* _self_, jule::Ptr<_1ab906a8b_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)});
}



inline void _1ab13860e_step(_1ab1370d0_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1ab8a7289_Var>* _149533_keyA, jule::Ptr<_1ab8a7289_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1ab1393bd_comptimeDecl>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1ab138895_len(_1ab1370d0_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1ab1393bd_comptimeDecl_eq(_1ab1393bd_comptimeDecl *_self_, _1ab1393bd_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1ab139775_Str(_1ab1393bd_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1ab139ab6_Equal(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab939816_Type> _153418_other) {
	return false;;
}



inline jule::Str _1ab13a017_declAsStr(_1ab1393bd_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b02b4764:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b02b4214:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b02b4621:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b02b4698:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b02b491d:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b02b4995:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b02b4c1a:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b02b4c81:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b02b4ce7:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b02b4d5d:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1b02b45aa:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1b02b4346:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab13a413__Name(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _156527_e, jule::Ptr<_1a378984a_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b02b944a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b02b9802:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab0898e5_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b02b9868:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab0977b0_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b02b98e0:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab098eba_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b02b9967:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab095109_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b02b99de:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a379e651_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b02b9d96:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab938a24_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b02b9e0c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b02b9e73:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab096c54_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b02b9ed9:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab087e21_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1b02b978b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1b02b9725:;
	};
	jule::Ptr<_1ab070c61_Const> _15957_constant = static__1ab0719dc_NewStr(_15707_name);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b30ba_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab828d21__Public(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _160329_e, jule::Ptr<_1a378984a_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1b02c382d:;
			{
				_1ab908d46_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b02c3bc4:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b02c3c3a:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab0898e5_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b02c3ca1:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab0977b0_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b02c3d28:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab098eba_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b02c3da0:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab095109_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b02c3e27:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a379e651_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b02c4279:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab938a24_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b02c4301:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1b02c3b5d:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1b02c3ae7:;
	};
	jule::Ptr<_1ab070c61_Const> _16337_constant = static__1ab071723_NewBool(_16087_public);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82921c__Binded(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _164129_e, jule::Ptr<_1a378984a_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1b02cd30a:;
			{
				_1ab908d46_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b02ccedb:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b02cd052:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab0898e5_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b02cd0b8:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab938a24_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b02cd12e:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1b02cce75:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1b02cce0e:;
	};
	jule::Ptr<_1ab070c61_Const> _16677_constant = static__1ab071723_NewBool(_16467_binded);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab829618__Exceptional(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _167534_e, jule::Ptr<_1a378984a_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b02d37c7:;
			{
				goto _match_end_1b02d4b5d;
			}
		}
		else {
			_case_begin_1b02d4bc4:;
			{
				_1ab908d46_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b02d4b5d:;
	};
	jule::Ptr<_1ab0898e5_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1ab0898e5_Fn>(&__jule_any_type10);;
	jule::Ptr<_1ab070c61_Const> _16887_constant = static__1ab071723_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab829a14__Mutable(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _169630_e, jule::Ptr<_1a378984a_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1b02d9bb8:;
			{
				_1ab908d46_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b02d9899:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab087e21_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b02d9910:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a379e651_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b02d9976:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1b02d9833:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1b02d97bc:;
	};
	jule::Ptr<_1ab070c61_Const> _17217_constant = static__1ab071723_NewBool(_17017_mutable);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab829e10__Variadic(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _172931_e, jule::Ptr<_1a378984a_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1b02e150a:;
			{
				_1ab908d46_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b02e11db:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab087e21_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1b02e1175:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1b02e110e:;
	};
	jule::Ptr<_1ab070c61_Const> _17527_constant = static__1ab071723_NewBool(_17347_variadic);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82a30b__Reference(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _176032_e, jule::Ptr<_1a378984a_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1b02e6c5d:;
			{
				_1ab908d46_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b02e693e:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b02e69a5:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ab087e21_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1b02e68c8:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1b02e6862:;
	};
	jule::Ptr<_1ab070c61_Const> _17847_constant = static__1ab071723_NewBool(_17657_ref);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82a707__Params(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _179229_e, jule::Ptr<_1a378984a_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1b02eb13b:;
			{
				_1ab908d46_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b02ec934:;
			{
				jule::Ptr<_1ab0898e5_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1ab0898e5_Fn>();;
				jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab1393bd_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0300e65:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1ab087e21_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1b0300e65:;
						++it;
						_18129_i++;
						goto _iter_begin_1b0300e65;
					}
					_iter_end_1b0300e65:;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1370d0_comptimeDecls>(_1ab1370d0_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b02ec538:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1b02ec4c2:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82ab03__Fields(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _182729_e, jule::Ptr<_1a378984a_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1b0304980:;
			{
				_1ab908d46_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b0304661:;
			{
				jule::Ptr<_1ab0977b0_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1ab0977b0_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab1393bd_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0307b81:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1ab096c54_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1b0307b81:;
						++it;
						_18479_i++;
						goto _iter_begin_1b0307b81;
					}
					_iter_end_1b0307b81:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b03046c7:;
			{
				jule::Ptr<_1a37a2577_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a37a2577_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab1393bd_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0309a95:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1a379e651_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1b0309a95:;
						++it;
						_18539_i++;
						goto _iter_begin_1b0309a95;
					}
					_iter_end_1b0309a95:;
				};
			}
		}
		else {
			_case_begin_1b03045ea:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1b0304584:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1370d0_comptimeDecls>(_1ab1370d0_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82aeee__Statics(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _186830_e, jule::Ptr<_1a378984a_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1b030d626:;
			{
				_1ab908d46_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b030d307:;
			{
				jule::Ptr<_1a37a2577_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a37a2577_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab1393bd_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0311915:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1ab8a7289_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1b0311915:;
						++it;
						_18899_i++;
						goto _iter_begin_1b0311915;
					}
					_iter_end_1b0311915:;
				};
			}
		}
		else {
			_case_begin_1b030d291:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1b030d22a:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1370d0_comptimeDecls>(_1ab1370d0_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82b3ea__Methods(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Ptr<_1ab9087b3_eval>* _190430_e, jule::Ptr<_1a378984a_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1b0315496:;
			{
				_1ab908d46_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab13a017_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b0315177:;
			{
				jule::Ptr<_1ab095109_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1ab095109_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab1393bd_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0318697:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1ab0898e5_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1b0318697:;
						++it;
						_19249_i++;
						goto _iter_begin_1b0318697;
					}
					_iter_end_1b0318697:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b03151dd:;
			{
				jule::Ptr<_1a37a2577_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a37a2577_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab1393bd_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab1393bd_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b031a5ab:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1ab0898e5_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1ab1393bd_comptimeDecl>(_1ab1393bd_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1b031a5ab:;
						++it;
						_19309_i++;
						goto _iter_begin_1b031a5ab;
					}
					_iter_end_1b031a5ab:;
				};
			}
		}
		else {
			_case_begin_1b0315111:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1b031509a:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1370d0_comptimeDecls>(_1ab1370d0_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82b73b_subIdent(jule::Ptr<_1ab1393bd_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b031bd71:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19488_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b031d559, jule::Ptr<__jule_anon_1b031d559_ctx>::make(__jule_anon_1b031d559_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b031d559_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b031bdd7:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19558_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b03204d4, jule::Ptr<__jule_anon_1b03204d4_ctx>::make(__jule_anon_1b03204d4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03204d4_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b031be5e:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19628_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b032245e, jule::Ptr<__jule_anon_1b032245e_ctx>::make(__jule_anon_1b032245e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b032245e_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1b031bed6:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19698_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b03243d9, jule::Ptr<__jule_anon_1b03243d9_ctx>::make(__jule_anon_1b03243d9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03243d9_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b031c190:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19768_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b0326364, jule::Ptr<__jule_anon_1b0326364_ctx>::make(__jule_anon_1b0326364_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0326364_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1b031c206:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19838_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b03282de, jule::Ptr<__jule_anon_1b03282de_ctx>::make(__jule_anon_1b03282de_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03282de_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1b031c27d:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19908_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b032a269, jule::Ptr<__jule_anon_1b032a269_ctx>::make(__jule_anon_1b032a269_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b032a269_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b031c305:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _19978_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b032c1e4, jule::Ptr<__jule_anon_1b032c1e4_ctx>::make(__jule_anon_1b032c1e4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b032c1e4_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b031c426:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _20048_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b032e2b2, jule::Ptr<__jule_anon_1b032e2b2_ctx>::make(__jule_anon_1b032e2b2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b032e2b2_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b031c48c:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _20118_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b033123c, jule::Ptr<__jule_anon_1b033123c_ctx>::make(__jule_anon_1b033123c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b033123c_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1b031c503:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _20188_method = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>((void*)__jule_anon_1b03331b7, jule::Ptr<__jule_anon_1b03331b7_ctx>::make(__jule_anon_1b03331b7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03331b7_ctx_handler), ._field_reloaded=false});;
				return _1ab82bdbd_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1b031761e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b031bb2e:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*> _1ab82e6ea_readyFn(jule::Ptr<_1ab82e2bb_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*>((void*)__jule_anon_1b033e48c, jule::Ptr<__jule_anon_1b033e48c_ctx>::make(__jule_anon_1b033e48c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b033e48c_ctx_handler);;
}



inline jule::Bool _1ab82e981_readyFi(jule::Ptr<_1ab82e2bb_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ab891be1_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1ab82e6ea_readyFn(_self_)));;
}



inline jule::Bool _1ab82ec17_readySi(jule::Ptr<_1ab82e2bb_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ab82e6ea_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1ab82ee9d_ready(jule::Ptr<_1ab82e2bb_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ab82e981_readyFi(_self_);;
	};
	return _1ab82ec17_readySi(_self_);;
}



inline jule::Bool _1ab830234_check(jule::Ptr<_1ab82e2bb_constraintChecker> _self_) {
	if ((!(_1ab82ee9d_ready(_self_)))) {
		return false;;
	};
	_julec_label_1b0350091:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0350547:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1ab937e30_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1b0350547;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0351757:;
					if (it != expr_end) {
						jule::Ptr<_1ab939816_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1ab94292e_Prim> _1259_prim = _1ab93bebc_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1ab943589_IsConstraint(_1259_prim))) {
								if (_1ab830982_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Type))) {
									goto _iter_next_1b0350547;
								};
								goto _iter_next_1b0351757;
							};
							if (_1ab93a053_Equal(_12416_c2, (*_12015_g.alloc)._field_Type)) {
								goto _iter_next_1b0350547;
							};
						}
						_iter_next_1b0351757:;
						++it;
						goto _iter_begin_1b0351757;
					}
					_iter_end_1b0351757:;
				};
				_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ab8305b9_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1b0350547:;
			++it;
			_1208_i++;
			goto _iter_begin_1b0350547;
		}
		_iter_end_1b0350547:;
	};
	return true;;
}







inline jule::Bool _1ab8319b6_IsTraitImpl(_1ab8315ba_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ab831c4c_IsStructImpl(_1ab8315ba_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1ab8360e7_If_eq(_1ab8360e7_If *_self_, _1ab8360e7_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ab8363e4_Else_eq(_1ab8363e4_Else *_self_, _1ab8363e4_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1ab836b0e_InfIter_eq(_1ab836b0e_InfIter *_self_, _1ab836b0e_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1ab8370b5_WhileIter_eq(_1ab8370b5_WhileIter *_self_, _1ab8370b5_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1ab83745b_IsWhileNext(_1ab8370b5_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ab837a11_RangeIter_eq(_1ab837a11_RangeIter *_self_, _1ab837a11_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ab837d96_ContSt_eq(_1ab837d96_ContSt *_self_, _1ab837d96_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1ab838270_BreakSt_eq(_1ab838270_BreakSt *_self_, _1ab838270_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1ab838726_Label_eq(_1ab838726_Label *_self_, _1ab838726_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ab838d86_GotoSt_eq(_1ab838d86_GotoSt *_self_, _1ab838d86_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ab839260_Postfix_eq(_1ab839260_Postfix *_self_, _1ab839260_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ab839716_Assign_eq(_1ab839716_Assign *_self_, _1ab839716_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1ab83b62a_FallSt_eq(_1ab83b62a_FallSt *_self_, _1ab83b62a_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1ab83b9c1_RetSt_eq(_1ab83b9c1_RetSt *_self_, _1ab83b9c1_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ab83be77_scopeLabel_eq(_1ab83be77_scopeLabel *_self_, _1ab83be77_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1ab83ce67_scopeChecker_eq(_1ab83ce67_scopeChecker *_self_, _1ab83ce67_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1ab866578_ImportInfo> _1ab83d440_SelectPackage(_1ab83ce67_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _34829_selector) {
	return _1ab883a4b_SelectPackage((*(_self_))._field_s.ptr(), _34829_selector);;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab83d83b_FindVar(_1ab83ce67_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded) {
	if ((!(_35935_binded))) {
		jule::Ptr<_1ab8a7289_Var> _3618_v = _1ab841ba2_findVar(_self_, _35923_ident);;
		if ((_3618_v != nullptr)) {
			return _3618_v;;
		};
	};
	return _1ab883e47_FindVar((*(_self_))._field_s.ptr(), _35923_ident, _35935_binded);;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab83dc37_FindTypeAlias(_1ab83ce67_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded) {
	;
	jule::Ptr<_1ab938a24_TypeAlias> _3797_ta = _1ab093beb_findTypeAlias((*(_self_))._field_table.ptr(), &(_37629_ident), _37641_binded, true);;
	if ((_3797_ta != nullptr)) {
		return _3797_ta;;
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _3847_parent = (*(_self_))._field_parent;;
	while ((_3847_parent != nullptr)) {
		{
			_3797_ta=_1ab093beb_findTypeAlias((*(_3847_parent))._field_table, &(_37629_ident), _37641_binded, true);
			if ((_3797_ta != nullptr)) {
				return _3797_ta;;
			};
			_3847_parent=(*_3847_parent.alloc)._field_parent;
		}
	_iter_next_1b03a40e5:;
	}
	_iter_end_1b03a40e5:;;
	return _1ab884343_FindTypeAlias((*(_self_))._field_s.ptr(), _37629_ident, _37641_binded);;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab83e133_FindStruct(_1ab83ce67_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded) {
	return _1ab88473e_FindStruct((*(_self_))._field_s.ptr(), _40126_ident, _40138_binded);;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab83e52e_FindFn(_1ab83ce67_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded) {
	return _1ab884b3a_FindFn((*(_self_))._field_s.ptr(), _41022_ident, _41034_binded);;
}



inline jule::Ptr<_1ab095109_Trait> _1ab83e870_FindTrait(_1ab83ce67_scopeChecker* _self_, jule::Str _41925_ident) {
	return _1ab884e7b_FindTrait((*(_self_))._field_s.ptr(), _41925_ident);;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab83ebb1_FindEnum(_1ab83ce67_scopeChecker* _self_, jule::Str _42824_ident) {
	return _1ab8852bc_FindEnum((*(_self_))._field_s.ptr(), _42824_ident);;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab840002_FindTypeEnum(_1ab83ce67_scopeChecker* _self_, jule::Str _43728_ident) {
	return _1ab88560d_FindTypeEnum((*(_self_))._field_s.ptr(), _43728_ident);;
}



inline jule::Bool _1ab840354_isUnsafe(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	jule::Ptr<_1ab83ce67_scopeChecker> _4457_scope = _self_;;
	_julec_label_1b03a93b4:;
	if ((*((*(_4457_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4457_scope.alloc)._field_parent != nullptr)) {
		_4457_scope=(*_4457_scope.alloc)._field_parent;
		goto _julec_label_1b03a93b4;
	};
	return false;;
}



inline jule::Bool _1ab8405da_isRoot(_1ab83ce67_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ab8407d8_stop(_1ab83ce67_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ab840a6e_stopped(_1ab83ce67_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ab840d05_isDeferred(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	jule::Ptr<_1ab83ce67_scopeChecker> _4787_scope = _self_;;
	_julec_label_1b03abe88:;
	if ((*((*(_4787_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_4787_scope.alloc)._field_parent != nullptr)) {
		_4787_scope=(*_4787_scope.alloc)._field_parent;
		goto _julec_label_1b03abe88;
	};
	return false;;
}



inline void _1ab8410ad_pushCaptured(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab8a7289_Var>* _49934_v) {
	jule::Ptr<_1ab83ce67_scopeChecker> _5007_sc = _self_;;
	for (;;) {
		{
			if (((*(_5007_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5007_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03ae5b7:;
					if (it != expr_end) {
						jule::Ptr<_1ab8a7289_Var> _50312_cv = *it;
						{
							if ((_50312_cv == (*(_49934_v)))) {
								goto _julec_label_1b03b050d;
							};
						}
						_iter_next_1b03ae5b7:;
						++it;
						goto _iter_begin_1b03ae5b7;
					}
					_iter_end_1b03ae5b7:;
				};
				(*(*(_5007_sc))._field_captured.alloc)=jule::append((*(*(_5007_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_49934_v)); __jule_collection; }));
				_julec_label_1b03b050d:;
			};
			if (((*_5007_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1b03ad85d;
			};
			_5007_sc=(*_5007_sc.alloc)._field_parent;
			if ((!(_1ab936db8_isVarCaptured(_5007_sc, _5007_sc, (*(_49934_v)))))) {
				goto _iter_end_1b03ad85d;
			};
		}
	_iter_next_1b03ad85d:;
	}
	_iter_end_1b03ad85d:;;
}



inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab841344_getRoot(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	jule::Ptr<_1ab83ce67_scopeChecker> _5247_root = _self_;;
	while ((((*(_5247_root))._field_parent != nullptr) && ((*_5247_root.alloc)._field_owner == nullptr))) {
		{
			_5247_root=(*_5247_root.alloc)._field_parent;
		}
	_iter_next_1b03b15db:;
	}
	_iter_end_1b03b15db:;;
	return _5247_root;;
}



inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab8415ca_getHardRoot(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	jule::Ptr<_1ab83ce67_scopeChecker> _5347_root = _self_;;
	while (((*(_5347_root))._field_parent != nullptr)) {
		{
			_5347_root=(*_5347_root.alloc)._field_parent;
		}
	_iter_next_1b03b2873:;
	}
	_iter_end_1b03b2873:;;
	return _5347_root;;
}



inline jule::Ptr<_1ab854577_ReferenceStack> _1ab841861_getOwnerRefers(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	return (*((*(_1ab8415ca_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab841ba2_findVar(_1ab83ce67_scopeChecker* _self_, jule::Str _54623_ident) {
	;
	;
	jule::Ptr<_1ab8a7289_Var> _5497_v = _1ab093745_findVar((*(_self_))._field_table.ptr(), &(_54623_ident), false, true);;
	if ((_5497_v != nullptr)) {
		return _5497_v;;
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _5537_parent = (*(_self_))._field_parent;;
	while ((_5537_parent != nullptr)) {
		{
			_5497_v=_1ab093745_findVar((*(_5537_parent))._field_table, &(_54623_ident), false, true);
			if ((_5497_v != nullptr)) {
				return _5497_v;;
			};
			_5537_parent=(*_5537_parent.alloc)._field_parent;
		}
	_iter_next_1b03b5403:;
	}
	_iter_end_1b03b5403:;;
	return nullptr;;
}



inline jule::Ptr<_1ab838726_Label> _1ab841ee3_findLabel(_1ab83ce67_scopeChecker* _self_, jule::Str* _56726_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03b7438:;
		if (it != expr_end) {
			jule::Any _56815_st = *it;
			{
				{
					auto &_match_expr{ _56815_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_1b03b7c30:;
						{
							jule::Ptr<_1ab838726_Label> _5719_label = _56815_st.unsafe_cast_ptr<_1ab838726_Label>();;
							if (((*(_5719_label))._field_Ident == (*(_56726_ident)))) {
								return _5719_label;;
							};
						}
					}
					_match_end_1b03b7bb9:;
				};
			}
			_iter_next_1b03b7438:;
			++it;
			goto _iter_begin_1b03b7438;
		}
		_iter_end_1b03b7438:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab83be77_scopeLabel> _1ab842334_findLabelScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Str* _58332_ident) {
	jule::Ptr<_1ab83be77_scopeLabel> _5847_label = _1ab842675_findLabelAll(_self_.ptr(), _58332_ident);;
	if (((_5847_label != nullptr) && ((*((*_5847_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5847_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab83be77_scopeLabel> _1ab842675_findLabelAll(_1ab83ce67_scopeChecker* _self_, jule::Str* _59429_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03bd142:;
		if (it != expr_end) {
			jule::Ptr<_1ab83be77_scopeLabel> _59515_lbl = *it;
			{
				if (((*((*(_59515_lbl))._field_node))._field_Ident == (*(_59429_ident)))) {
					return _59515_lbl;;
				};
			}
			_iter_next_1b03bd142:;
			++it;
			goto _iter_begin_1b03bd142;
		}
		_iter_end_1b03bd142:;
	};
	return nullptr;;
}



inline jule::Bool _1ab842a71_isDuplicatedIdent(_1ab83ce67_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident) {
	jule::Ptr<_1ab8a7289_Var> _6073_v = _1ab83d83b_FindVar(_self_, (*(_60651_ident)), false);;
	if (((_6073_v != nullptr) && (static_cast<jule::Uintptr>(_6073_v) != _60633_itself))) {
		if (((*_6073_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6073_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1ab885a1a_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ab938a24_TypeAlias> _6153_ta = _1ab83dc37_FindTypeAlias(_self_, (*(_60651_ident)), false);;
	if (((_6153_ta != nullptr) && (static_cast<jule::Uintptr>(_6153_ta) != _60633_itself))) {
		if (((*_6153_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6153_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1ab885a1a_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1ab842d29_checkVarDecl(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3794a0e_VarDecl> _62633_decl) {
	jule::Ptr<_1ab8a7289_Var> _6277_v = _1ab8598ac_buildVar(_62633_decl);;
	(*(_6277_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6277_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6277_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1ab842a71_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6277_v), &((*_6277_v.alloc)._field_Ident))) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*_6277_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6277_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ab8407d8_stop(_self_);
		return;;
	};
	_1ab8998ca_checkVarDecl((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));
	if (((!(_1ab8a792c_IsTypeInferred(_6277_v))) && (((*_6277_v.alloc)._field_TypeSym == nullptr) || ((*((*_6277_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1ab89d170_evalVarValue((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));
	if (((!(_1ab8a7696_IsInitialized(_6277_v))) || ((*((*_6277_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ab849094_removeInteriorMutRisk(_self_, &((*(*(_6277_v))._field_Value.alloc)._field_Data));
	_1ab89cd0c_checkVarValue((*(_self_))._field_s, &(_6277_v));
}



inline void _1ab8430d2_checkTypeAlias(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _65736_ta) {
	if (_1ab842a71_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_65736_ta))), &((*((*(_65736_ta))))._field_Ident))) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_65736_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_65736_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ab8407d8_stop(_self_);
		return;;
	};
	_1ab89395c_checkTypeAliasDecl((*(_self_))._field_s, _65736_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_65736_ta)); __jule_collection; }));
	if (((*((*((*(_65736_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1ab8407d8_stop(_self_);
	};
}



inline void _1ab84338a_checkTypeAliasDecl(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37986b1_TypeAliasDecl> _67339_decl) {
	jule::Ptr<_1ab938a24_TypeAlias> _6747_ta = _1ab85648b_buildTypeAlias(_67339_decl);;
	_1ab8430d2_checkTypeAlias(_self_, &(_6747_ta));
}



inline jule::Ptr<_1ab835bc9_Scope> _1ab843621_getChild(_1ab83ce67_scopeChecker* _self_) {
	return jule::new_ptr<_1ab835bc9_Scope>(_1ab835bc9_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1ab843a3e_checkChildSsc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _68435_tree, jule::Ptr<_1ab835bc9_Scope>* _68463_s, jule::Ptr<_1ab83ce67_scopeChecker>* _68479_ssc) {
	(*((*(_68463_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_68463_s))))._field_ChildIndex=(*((*(_68479_ssc))))._field_childIndex;
	(*((*(_68479_ssc))))._field_parent=_self_;
	_1ab8500de_check((*(_68479_ssc)), _68435_tree, _68463_s);
}



inline jule::Ptr<_1ab835bc9_Scope> _1ab843e3a_checkChildSc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _69134_tree, jule::Ptr<_1ab83ce67_scopeChecker>* _69162_ssc) {
	jule::Ptr<_1ab835bc9_Scope> _6927_s = _1ab843621_getChild(_self_.ptr());;
	_1ab843a3e_checkChildSsc(_self_, _69134_tree, &(_6927_s), _69162_ssc);
	return _6927_s;;
}



inline jule::Ptr<_1ab835bc9_Scope> _1ab84427b_checkChild(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _69732_tree) {
	jule::Ptr<_1ab83ce67_scopeChecker> _6987_ssc = _1ab850375_newChildChecker(_self_);;
	return _1ab843e3a_checkChildSc(_self_, _69732_tree, &(_6987_ssc));;
}



inline void _1ab844534_checkAnonScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree> _70235_tree) {
	jule::Ptr<_1ab835bc9_Scope> _7037_s = _1ab84427b_checkChild(_self_, &(_70235_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7037_s, &__jule_any_type19); __jule_collection; }));
}



inline void _1ab844897_processErrorCall(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1ab6a54d8_Token> _70769_err) {
	if (_1ab840d05_isDeferred(_self_)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), _70769_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _7127_root = _1ab841344_getRoot(_self_);;
	if ((!((*((*((*(_7127_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ab886477_pushErr((*(_self_))._field_s, _70769_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_70738_m))))._field_Func=(*_7127_root.alloc)._field_owner;
}



inline void _1ab844b50_checkExpr(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab6c4bab_Expr> _72030_expr) {
	jule::Ptr<_1ab9087b3_eval> _7217_eval = _1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
	(*(_7217_eval))._field_ignored=true;
	jule::Ptr<_1ab906a8b_Data> _7237_d = _1ab927628_evalExpr(_7217_eval, _72030_expr);;
	if (((_7237_d == nullptr) || ((*(_7237_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7237_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b03de73a:;
			{
				jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _7328_m = (*(_7237_d))._field_Model.unsafe_cast_ptr<_1ab0856b0_BuiltinErrorCallExprModel>();;
				_1ab844897_processErrorCall(_self_, &(_7328_m), (*(_72030_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_1b03ded56:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b03dece0:;
			{
				_1ab886477_pushErr((*(_self_))._field_s, (*(_72030_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b03dec79:;
	};
}



inline jule::Ptr<_1ab8360e7_If> _1ab844e91_checkIf(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37975e4_If> _75028_i) {
	jule::Ptr<_1ab835bc9_Scope> _7517_s = _1ab84427b_checkChild(_self_, &((*(_75028_i))._field_Scope));;
	jule::Ptr<_1ab906a8b_Data> _7537_d = _1ab927628_evalExpr(_1ab88d34c_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*_75028_i.alloc)._field_Expr);;
	if ((_7537_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab94292e_Prim> _7587_prim = _1ab93bebc_Prim((*(_7537_d))._field_Type.ptr());;
	if (((_7587_prim == nullptr) || (!(_1ab945b63_IsBool(_7587_prim.ptr()))))) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*_75028_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab8360e7_If>(_1ab8360e7_If{._field_Expr=(*(_7537_d))._field_Model, ._field_Scope=_7517_s});;
}



inline jule::Ptr<_1ab8363e4_Else> _1ab8452d2_checkElse(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37979bd_Else> _77030_e) {
	return jule::new_ptr<_1ab8363e4_Else>(_1ab8363e4_Else{._field_Scope=_1ab84427b_checkChild(_self_, &((*(_77030_e))._field_Scope))});;
}



inline void _1ab84558a_checkConditional(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3797e74_Conditional> _77637_conditional) {
	jule::Ptr<_1ab836812_Conditional> _7777_c = jule::new_ptr<_1ab836812_Conditional>(_1ab836812_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1ab8360e7_If>>(nullptr), ._field_Default=jule::Ptr<_1ab8363e4_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7777_c, &__jule_any_type31); __jule_collection; }));
	(*_7777_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8360e7_If>>::alloc(0LL, ((*(_77637_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab8360e7_If>(nullptr); __jule_collection; });
	(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8360e7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab844e91_checkIf(_self_, (*_77637_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_77637_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0416289:;
		if (it != expr_end) {
			jule::Ptr<_1a37975e4_If> _78315_elif = *it;
			{
				(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8360e7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab844e91_checkIf(_self_, _78315_elif); __jule_collection; }));
			}
			_iter_next_1b0416289:;
			++it;
			goto _iter_begin_1b0416289;
		}
		_iter_end_1b0416289:;
	};
	if (((*_77637_conditional.alloc)._field_Default != nullptr)) {
		(*_7777_c.alloc)._field_Default=_1ab8452d2_checkElse(_self_, (*_77637_conditional.alloc)._field_Default);
	};
}



inline void _1ab845a63_checkIterScopeSsc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1a3791bb5_ScopeTree> _79251_tree, jule::Ptr<_1ab835bc9_Scope>* _79279_s, jule::Ptr<_1ab83ce67_scopeChecker> _79294_ssc) {
	(*(_79294_ssc))._field_it=_79234_it;
	_1ab843a3e_checkChildSsc(_self_, &(_79251_tree), _79279_s, &(_79294_ssc));
}



inline jule::Ptr<_1ab835bc9_Scope> _1ab846019_checkIterScopeSc(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1a3791bb5_ScopeTree> _79750_tree, jule::Ptr<_1ab83ce67_scopeChecker> _79777_ssc) {
	jule::Ptr<_1ab835bc9_Scope> _7987_scope = _1ab843621_getChild(_self_.ptr());;
	_1ab845a63_checkIterScopeSsc(_self_, _79733_it, _79750_tree, &(_7987_scope), _79777_ssc);
	return _7987_scope;;
}



inline jule::Ptr<_1ab835bc9_Scope> _1ab846415_checkIterScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1a3791bb5_ScopeTree>* _80349_tree) {
	jule::Ptr<_1ab83ce67_scopeChecker> _8047_ssc = _1ab850375_newChildChecker(_self_);;
	return _1ab846019_checkIterScopeSc(_self_, _80331_it, (*(_80349_tree)), _8047_ssc);;
}



inline void _1ab8466bd_checkInfIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _80834_it) {
	jule::Ptr<_1ab836b0e_InfIter> _8097_kind = jule::new_ptr<_1ab836b0e_InfIter>(_1ab836b0e_InfIter{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8097_kind, &__jule_any_type32); __jule_collection; }));
	(*_8097_kind.alloc)._field_Scope=_1ab846415_checkIterScope(_self_, static_cast<jule::Uintptr>(_8097_kind), &((*((*(_80834_it))))._field_Scope));
}



inline void _1ab846976_checkWhileIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _81436_it) {
	jule::Ptr<_1a3795e83_WhileKind> _8157_wh = (*((*(_81436_it))))._field_Kind.cast_ptr<_1a3795e83_WhileKind>(&__jule_any_type33);;
	if ((((*(_8157_wh))._field_Expr == nullptr) && ((*_8157_wh.alloc)._field_Next == nullptr))) {
		_1ab8466bd_checkInfIter(_self_, _81436_it);
		return;;
	};
	jule::Ptr<_1ab8370b5_WhileIter> _8217_kind = jule::new_ptr<_1ab8370b5_WhileIter>(_1ab8370b5_WhileIter{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8217_kind, &__jule_any_type34); __jule_collection; }));
	(*_8217_kind.alloc)._field_Scope=_1ab846415_checkIterScope(_self_, static_cast<jule::Uintptr>(_8217_kind), &((*((*(_81436_it))))._field_Scope));
	if (((*_8157_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1ab906a8b_Data> _8268_d = _1ab927628_evalExpr(_1ab88d34c_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*_8157_wh.alloc)._field_Expr);;
		if ((_8268_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ab94292e_Prim> _8314_prim = _1ab93bebc_Prim((*(_8268_d))._field_Type.ptr());;
		if ((_8314_prim == nullptr)) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ab945b63_IsBool(_8314_prim.ptr())))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8217_kind.alloc)._field_Expr=(*(_8268_d))._field_Model;
	};
	if (_1a3796329_IsWhileNext(_8157_wh)) {
		if ((!(_1ab8352e4_isValidAstStForNextSt(&((*_8157_wh.alloc)._field_Next))))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8514_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1ab84dc25_checkNode(_self_, &((*_8157_wh.alloc)._field_Next));
		if ((_8514_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8549_st = (*((*(_self_))._field_scope))._field_Stmts[_8514_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8514_n);;
			if ((!(_1ab835536_isValidStForNextSt(&(_8549_st))))) {
				_1ab886477_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8217_kind.alloc)._field_Next=_8549_st;
		};
	};
}



inline void _1ab846d94_checkComptimeRangeIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _86444_it, jule::Ptr<_1ab837a11_RangeIter>* _86465_kind, jule::Ptr<_1ab906a8b_Data>* _86488_d) {
	if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ab885a1a_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab842a71_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ab885a1a_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ab842a71_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a379688a_RangeKind> _8787_rang = (*((*(_86444_it))))._field_Kind.cast_ptr<_1a379688a_RangeKind>(&__jule_any_type35);;
	_1ab8508e7_makeComptimeRange(_86488_d);
	if ((*((*(_86488_d))))._field_Decl) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*(_8787_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_86488_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1ab90137c_rangeChecker _8857_rc = _1ab90137c_rangeChecker{._field_sc=_self_, ._field_rang=_8787_rang, ._field_Kind=(*(_86465_kind)), ._field_d=(*(_86488_d))};;
	jule::Bool _8913_ok = _1ab9033c3_check(&_8857_rc);;
	if ((!(_8913_ok))) {
		return;;
	};
	jule::Ptr<_1ab119cc7_comptimeRange> _8967_comptime = _1ab940366_comptimeRange((*((*(_86488_d))))._field_Type);;
	((_1ab119aa7_comptimeRangeKindMptrData*)(*(_8967_comptime))._field_kind.safe_type())->_1ab11929e_ready((*(_8967_comptime))._field_kind.data, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
	jule::I64 _8987_i = 0LL;;
	jule::I64 _8993_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_8987_i < ((_1ab119aa7_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1ab119953_len((*_8967_comptime.alloc)._field_kind.data)); (_8987_i)++) {
		{
			jule::Ptr<_1ab83ce67_scopeChecker> _9018_ssc = _1ab850375_newChildChecker(_self_);;
			jule::Ptr<_1ab835bc9_Scope> _9028_scope = _1ab843621_getChild(_self_);;
			if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Scope=_9028_scope;
				(*((*(_9018_ssc))._field_table))._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Scope=_9028_scope;
				(*(*(_9018_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1ab119aa7_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1ab1196bc_step((*_8967_comptime.alloc)._field_kind.data, _8987_i, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
			_1ab843a3e_checkChildSsc(_self_, &((*((*(_86444_it))))._field_Scope), &(_9028_scope), &(_9018_ssc));
			if ((_8993_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1b043dd1c;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9028_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_1b043dd1c:;
	}
	_iter_end_1b043dd1c:;;
}



inline void _1ab84714c_checkRangeIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter>* _92136_it) {
	jule::Ptr<_1a379688a_RangeKind> _9227_rang = (*((*(_92136_it))))._field_Kind.cast_ptr<_1a379688a_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_1ab906a8b_Data> _9247_d = _1ab9272d7_evalExpr1(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*(_9227_rang))._field_Expr);;
	if ((_9247_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab837a11_RangeIter> _9297_kind = jule::new_ptr<_1ab837a11_RangeIter>(_1ab837a11_RangeIter{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Expr=_9247_d, ._field_KeyA=jule::Ptr<_1ab8a7289_Var>(nullptr), ._field_KeyB=jule::Ptr<_1ab8a7289_Var>(nullptr)});;
	if ((*((*(_92136_it))))._field_Comptime) {
		_1ab846d94_checkComptimeRangeIter(_self_, _92136_it, &(_9297_kind), &(_9247_d));
		return;;
	};
	if (_1ab93e079_comptime((*(_9247_d))._field_Type.ptr())) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*_9227_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1ab90137c_rangeChecker _9437_rc = _1ab90137c_rangeChecker{._field_sc=_self_, ._field_rang=_9227_rang, ._field_Kind=_9297_kind, ._field_d=_9247_d};;
	jule::Bool _9493_ok = _1ab9033c3_check(&_9437_rc);;
	if ((!(_9493_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9297_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_1ab83ce67_scopeChecker> _9567_ssc = _1ab850375_newChildChecker(_self_);;
	jule::Ptr<_1ab835bc9_Scope> _9577_scope = _1ab843621_getChild(_self_);;
	if (((*(_9297_kind))._field_KeyA != nullptr)) {
		if (((!(_1ab885a1a_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ab842a71_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyA.alloc)._field_Scope=_9577_scope;
		(*((*(_9567_ssc))._field_table))._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9297_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1ab885a1a_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ab842a71_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyB.alloc)._field_Scope=_9577_scope;
		(*(*(_9567_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1ab845a63_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9297_kind), (*((*(_92136_it))))._field_Scope, &(_9577_scope), _9567_ssc);
	(*_9297_kind.alloc)._field_Scope=_9577_scope;
}



inline void _1ab847405_checkIter(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3795658_Iter> _98130_it) {
	if (_1a37959ee_IsInf(_98130_it.ptr())) {
		if ((*_98130_it.alloc)._field_Comptime) {
			_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1ab8466bd_checkInfIter(_self_, &(_98130_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_98130_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b0459e15:;
			{
				if ((*_98130_it.alloc)._field_Comptime) {
					_1ab886477_pushErr((*(_self_))._field_s, (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1ab846976_checkWhileIter(_self_, &(_98130_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b045b0d1:;
			{
				_1ab84714c_checkRangeIter(_self_, &(_98130_it));
			}
		}
		else {
			_case_begin_1b045b06a:;
			{
				jule::println(_1ad792293_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1b045b004:;
	};
}



inline jule::Bool _1ab847746_checkValidContLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _100536_it) {
	jule::Ptr<_1ab83ce67_scopeChecker> _10067_scope = _self_;;
	_julec_label_1b0463979:;
	if (((*(_10067_scope))._field_it == _100536_it)) {
		return true;;
	};
	if (((*_10067_scope.alloc)._field_parent != nullptr)) {
		_10067_scope=(*_10067_scope.alloc)._field_parent;
		goto _julec_label_1b0463979;
	};
	return false;;
}



inline jule::Bool _1ab847a87_checkValidBreakLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Uintptr _102137_ptr) {
	jule::Ptr<_1ab83ce67_scopeChecker> _10227_scope = _self_;;
	_julec_label_1b0465591:;
	if (((*(_10227_scope))._field_it == _102137_ptr)) {
		return true;;
	};
	if (((*_10227_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10304_mtch = static_cast<jule::Uintptr>((*(((_1ab83ae32_Case*)((*_10227_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10304_mtch == _102137_ptr)) {
			return true;;
		};
	};
	if (((*_10227_scope.alloc)._field_parent != nullptr)) {
		_10227_scope=(*_10227_scope.alloc)._field_parent;
		goto _julec_label_1b0465591;
	};
	return false;;
}



inline jule::Ptr<_1ab837d96_ContSt> _1ab847dc8_checkContValidScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a379713d_ContSt> _104436_c) {
	if (_1ab840d05_isDeferred(_self_)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*(_104436_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_104436_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1ab837d96_ContSt>(_1ab837d96_ContSt{._field_It=0});;
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _10547_scope = _self_;;
	_julec_label_1b0467d35:;
	{
		
		if (((((*_10547_scope.alloc)._field_it == 0LLU) && ((*_10547_scope.alloc)._field_parent != nullptr)) && ((*_10547_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b04699d5:;
			{
				_10547_scope=(*_10547_scope.alloc)._field_parent;
				goto _julec_label_1b0467d35;
			}
		}
		else if (((*_10547_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b0469a6d:;
			{
				return jule::new_ptr<_1ab837d96_ContSt>(_1ab837d96_ContSt{._field_It=(*_10547_scope.alloc)._field_it});;
			}
		}
		_match_end_1b046992a:;
	};
	_1ab886477_pushErr((*(_self_))._field_s, (*_104436_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab848181_checkCont(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a379713d_ContSt> _106826_c) {
	jule::Ptr<_1ab837d96_ContSt> _10697_cont = _1ab847dc8_checkContValidScope(_self_, _106826_c);;
	if ((_10697_cont == nullptr)) {
		return;;
	};
	if (((*(_106826_c))._field_Label != nullptr)) {
		jule::Ptr<_1ab83be77_scopeLabel> _10758_label = _1ab833d70_findLabelParent(&((*(*(_106826_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10758_label == nullptr)) {
			_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10758_label))._field_used=true;
		if ((((*((*(_10758_label))._field_node))._field_Index + 1LL) >= (*((*(*(_10758_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I64 _10884_i = ((*(*(_10758_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_10884_i >= (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _10929_st = (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts[_10884_i];;
			{
				auto &_match_expr{ _10929_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_1b0476728:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1ab836b0e_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1b0475392:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1ab837a11_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_1b047557e:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1ab8370b5_WhileIter>());
					}
				}
				else {
					_case_begin_1b0475518:;
					{
						_1ab886477_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1b04754a2:;
			};
		};
	};
	if (((*(_10697_cont))._field_It != 0LLU)) {
		if ((!(_1ab847746_checkValidContLabel(_self_, (*(_10697_cont))._field_It)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10697_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _1ab848439_checkLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a378e19b_LabelSt> _111531_l) {
	if ((_1ab841ee3_findLabel(_self_.ptr(), &((*(_111531_l))._field_Ident)) != nullptr)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*_111531_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_111531_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ab838726_Label> _11217_label = jule::new_ptr<_1ab838726_Label>(_1ab838726_Label{._field_Ident=(*_111531_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11217_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab83be77_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab83be77_scopeLabel>(_1ab83be77_scopeLabel{._field_token=(*_111531_l.alloc)._field_Token, ._field_node=_11217_label, ._field_used=false}); __jule_collection; }));
}



inline void _1ab8486e2_pushGoto(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a378e575_GotoSt> _113429_gt) {
	jule::Ptr<_1ab838d86_GotoSt> _11357_st = jule::new_ptr<_1ab838d86_GotoSt>(_1ab838d86_GotoSt{._field_Ident=(*((*_113429_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_113429_gt))._field_Label, ._field_Label=jule::Ptr<_1ab838726_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11357_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11357_st; __jule_collection; }));
}



inline void _1ab84899a_checkPostfix(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt> _114533_a) {
	if (((*(_114533_a))._field_Left.len() > 1LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _11517_expr = (*((*(_114533_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ab906a8b_Data> _11527_d = _1ab927628_evalExpr(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), _11517_expr);;
	if ((_11527_d == nullptr)) {
		return;;
	};
	_1ab834e1a_checkAssign(&((*_self_.alloc)._field_s), &(_11527_d), nullptr, (*_114533_a.alloc)._field_Setter);
	if ((_1ab93c4d9_Ptr((*(_11527_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1ab949c22_Ptr> _11608_ptr = _1ab93c4d9_Ptr((*(_11527_d))._field_Type);;
		if (_1ab94a78e_IsUnsafe(_11608_ptr.ptr())) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_11527_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1ab93bebc_Prim((*(_11527_d))._field_Type.ptr()) == nullptr) || (!(_1ab118853_IsNum((*(_1ab93bebc_Prim((*(_11527_d))._field_Type)))._field_Kind))))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_11527_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ab839260_Postfix>(_1ab839260_Postfix{._field_Expr=(*(_11527_d))._field_Model, ._field_Op=(*((*_114533_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _1ab848cdb_isNewAssignIdent(_1ab83ce67_scopeChecker* _self_, jule::Str _117832_ident) {
	if ((_1ab6a7dc0_IsIgnoreIdent(_117832_ident) || (_117832_ident).empty())) {
		return false;;
	};
	return (_1ab0940e7_defByIdent((*(_self_))._field_table.ptr(), &(_117832_ident), false) == nullptr);;
}



inline void _1ab849094_removeInteriorMutRisk(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab906a8b_Data>* _119143_d) {
	jule::Ptr<_1a37a53d2_StructIns> _11923_s = _1ab93d540_Struct((*((*(_119143_d))))._field_Type.ptr());;
	if ((_11923_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _11963_root = _1ab8415ca_getHardRoot(_self_);;
	if (((*((*(_11963_root))._field_owner))._field_Owner != _11923_s)) {
		return;;
	};
	(*((*(_119143_d))))._field_Mutable=true;
}



inline jule::Bool _1ab84954a_checkStructureAssignOp(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a37a53d2_StructIns>* _120544_s, jule::Ptr<_1a3790565_AssignSt>* _120564_a, jule::Ptr<_1ab906a8b_Data>* _120588_r) {
	jule::Ptr<_1ab08c9a3_FnIns> _120811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_120564_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b049723d:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b0496ddb:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b0496e52:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b0496eb8:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b049702e:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b0497095:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b049710b:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b04988b0:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b0498926:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b049898c:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b04966e3:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a37a5789_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1b0496d64:;
	};
	if ((_120811_overload == nullptr)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a37a5789_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1ab08b84d_ParamIns> _12407_p = (*(_120811_overload))._field_Params[1LL];;
	return _1ab88d968_checkAssignType((*(_self_))._field_s, (*((*(_12407_p))._field_Decl))._field_Reference, &((*_12407_p.alloc)._field_Type), _120588_r, (*((*(_120564_a))))._field_Setter, _1ab841861_getOwnerRefers(_self_));;
}



inline void _1ab849803_checkSingleAssign(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt>* _124439_a) {
	jule::Ptr<_1ab906a8b_Data> _124511_l = nullptr;;
	if ((!(_1ab6a7dc0_IsIgnoreIdent((*((*((*(_124439_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ab6c4bab_Expr> _12488_expr = (*((*((*(_124439_a))))._field_Left[0LL]))._field_Expr;;
		_124511_l=_1ab927628_evalExpr(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), _12488_expr);
		if ((_124511_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ab9087b3_eval> _12557_eval = static_cast<jule::Ptr<_1ab9087b3_eval>>(nullptr);;
	if ((_124511_l != nullptr)) {
		_12557_eval=_1ab88d00b_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1), (*(_124511_l))._field_Type);
	} else {
		_12557_eval=_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));
	};
	(*(_12557_eval))._field_unsafety=_1ab840354_isUnsafe(_self_);
	jule::Ptr<_1ab906a8b_Data> _12627_r = _1ab927628_evalExpr(_12557_eval, (*((*(_124439_a))))._field_Right);;
	if ((_12627_r == nullptr)) {
		return;;
	};
	_1ab849094_removeInteriorMutRisk(_self_, &(_12627_r));
	if ((_124511_l == nullptr)) {
		if (_1ab93abd0_Void((*(_12627_r))._field_Type.ptr())) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*((*(_124439_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_124439_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12627_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_1ab834e1a_checkAssign(&((*_self_.alloc)._field_s), &(_124511_l), _12627_r, (*((*(_124439_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ab93dce3_Tup((*(_12627_r))._field_Type) != nullptr)) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab07c124_OperandExprModel> _12897_lm = jule::new_ptr<_1ab07c124_OperandExprModel>(_1ab07c124_OperandExprModel{._field_Type=(*(_124511_l))._field_Type, ._field_Model=(*(_124511_l))._field_Model});;
	jule::Ptr<_1ab07c124_OperandExprModel> _12937_rm = jule::new_ptr<_1ab07c124_OperandExprModel>(_1ab07c124_OperandExprModel{._field_Type=(*(_12627_r))._field_Type, ._field_Model=(*(_12627_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ab839716_Assign>(_1ab839716_Assign{._field_Left=_12897_lm, ._field_Right=_12937_rm, ._field_Op=(*((*(_124439_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ab8e4e31_assignTypeChecker _13008_checker = _1ab8e4e31_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_124511_l))._field_Type, ._field_d=_12627_r, ._field_errorToken=(*((*(_124439_a))))._field_Setter, ._field_refers=_1ab841861_getOwnerRefers(_self_)};;
		if (_1ab8e5e32_check(&_13008_checker)) {
			(*(_12937_rm))._field_Model=(*(_12627_r))._field_Model;
			(*(_12897_lm))._field_Model=(*(_124511_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _13137_strct = _1ab93d540_Struct((*(_124511_l))._field_Type);;
	if ((_13137_strct != nullptr)) {
		_1ab84954a_checkStructureAssignOp(_self_, &(_13137_strct), _124439_a, &(_12627_r));
		return;;
	};
	jule::U64 _13183_id = (*(*((*(_124439_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_1ab8506b6_removeEqFromOp((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id);
	_1ab929a48_binaryEval _13207_solver = static__1ab92a4a5_new(_12557_eval, (*((*(_124439_a))))._field_Setter);;
	({
		jule::Ptr<_1ab906a8b_Data> ___jule_assign_arg = _124511_l;
		jule::Ptr<_1ab906a8b_Data> _1___jule_assign_arg = _12627_r;
		_13207_solver._field_l = ___jule_assign_arg;
		_13207_solver._field_r = _1___jule_assign_arg;
	});
	_1ab92e685_evalOp(&_13207_solver);
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_13183_id;
}



inline void _1ab849e41_processEndPartOfMultiAssign(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _132649_st, jule::Ptr<_1a3790565_AssignSt>* _132672_a, jule::Ptr<_1a378eed2_AssignLeft>* _13278_lexpr, jule::Ptr<_1ab906a8b_Data>* _132738_l, jule::Ptr<_1ab906a8b_Data>* _132753_r, jule::Bool _132763_strict) {
	if (((!((*((*(_13278_lexpr))))._field_Reference)) && _1ab6a7dc0_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident))) {
		if (_1ab93abd0_Void((*((*(_132753_r))))._field_Type.ptr())) {
			_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_132672_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ab906a8b_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_132672_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13278_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b04bdb49:;
				{
					if ((!(_1ab848cdb_isNewAssignIdent(_self_, (*((*(_13278_lexpr))))._field_Ident)))) {
						goto _julec_label_1b04c94c3;
					};
				}
			}
			else {
				_case_begin_1b04bdad3:;
				{
					if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
						_1ab886477_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1b04c94c3;
				}
			}
			_match_end_1b04bda6c:;
		};
		if (_1ab842a71_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13278_lexpr))))._field_Ident))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1ab8407d8_stop(_self_);
			return;;
		};
		if (_1ab6a7dc0_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident)) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab8a7289_Var> _13598_v = jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13278_lexpr))))._field_Token, ._field_Ident=(*((*(_13278_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13278_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13278_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_1ab942027_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=(*((*(_132672_a))))._field_Right, ._field_Data=(*(_132753_r))}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
		_1ab89cd0c_checkVarValue((*(_self_))._field_s, &(_13598_v));
		{ jule::Slice<jule::Ptr<_1ab906a8b_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=(*((*_13598_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_13598_v.alloc)._field_Mutable, ._field_Reference=(*_13598_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13598_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13598_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = (*((*(_132649_st))))._field_Decls; __jule_push_dest.push(_13598_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13598_v; __jule_collection; }));
		return;;
	};
	_julec_label_1b04c94c3:;
	if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1ab834e1a_checkAssign(&((*_self_.alloc)._field_s), _132738_l, (*(_132753_r)), (*((*(_13278_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _13947_reference = false;;
	if (_1ab8931ed_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_132738_l))))._field_Mutable, _13947_reference, &((*((*(_132738_l))))._field_Type), _132753_r, &((*((*(_13278_lexpr))))._field_Token))) {
		_13947_reference=_132763_strict;
		_1ab88d968_checkAssignType((*(_self_))._field_s, _13947_reference, &((*((*(_132738_l))))._field_Type), _132753_r, (*((*(_13278_lexpr))))._field_Token, _1ab841861_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1ab906a8b_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push((*(_132738_l))); };
}



inline void _1ab84a1e9_checkMultiAssign(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt>* _140238_a) {
	if ((((*((*((*(_140238_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_140238_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab906a8b_Data> _14077_rd = _1ab927628_evalExpr(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*((*(_140238_a))))._field_Right);;
	if ((_14077_rd == nullptr)) {
		return;;
	};
	jule::Bool _14117_strict = false;;
	jule::Slice<jule::Ptr<_1ab906a8b_Data>> _14127_right = _1ab8341b1_getDatasFromTupleData(&(_14077_rd));;
	if ((_14127_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14127_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1b04d48c9:;
				{
					jule::Ptr<_1ab07ee7e_IndexingExprModel> _14169_iem = (*(_14127_right[0LL]))._field_Model.unsafe_cast_ptr<_1ab07ee7e_IndexingExprModel>();;
					if ((_1ab93da5c_Map((*((*(_14169_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_14117_strict=true;
						_14127_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=(*(_1ab93da5c_Map((*((*(_14169_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_14127_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)}); (*it++) = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1b04d481e:;
		};
	};
	{
		
		if (((*((*(_140238_a))))._field_Left.len() > _14127_right.len())) {
			_case_begin_1b04d7437:;
			{
				_1ab886477_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_140238_a))))._field_Left.len() < _14127_right.len())) {
			_case_begin_1b04d749d:;
			{
				_1ab886477_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b04d4973:;
	};
	jule::Ptr<_1ab839bbc_MultiAssign> _14367_st = jule::new_ptr<_1ab839bbc_MultiAssign>(_1ab839bbc_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1ab906a8b_Data>>(nullptr), ._field_Right=(*(_14077_rd))._field_Model});;
	{
		auto expr = &((*((*(_140238_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b04dc42b:;
		if (it != expr_end) {
			jule::I64 _14397_i = it - expr->begin();
			{
				jule::Ptr<_1a378eed2_AssignLeft> _14408_lexpr = (*((*(_140238_a))))._field_Left[_14397_i];;
				jule::Ptr<_1ab906a8b_Data> _144112_l = nullptr;;
				if ((!(_1ab6a7dc0_IsIgnoreIdent((*(_14408_lexpr))._field_Ident)))) {
					if ((!((*((*(_140238_a))))._field_Declarative))) {
						goto _julec_label_1b04ddbbe;
					};
					if (((*_14408_lexpr.alloc)._field_Mutable && (*_14408_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1b04e19c4;
					};
					{
						auto &_match_expr{ (*((*(_14408_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_1b04dedce:;
							{
								if (_1ab848cdb_isNewAssignIdent(_self_, (*_14408_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1b04e19c4;
								};
							}
						}
						_match_end_1b04ded57:;
					};
					_julec_label_1b04ddbbe:;
					_144112_l=_1ab927628_evalExpr(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*_14408_lexpr.alloc)._field_Expr);
					if ((_144112_l == nullptr)) {
						goto _iter_next_1b04dc42b;
					};
					_julec_label_1b04e19c4:;
				};
				jule::Ptr<_1ab906a8b_Data> _14628_r = _14127_right[_14397_i];;
				_1ab849094_removeInteriorMutRisk(_self_, &(_14628_r));
				_1ab849e41_processEndPartOfMultiAssign(_self_, &(_14367_st), _140238_a, &(_14408_lexpr), &(_144112_l), &(_14628_r), _14117_strict);
			}
			_iter_next_1b04dc42b:;
			++it;
			_14397_i++;
			goto _iter_begin_1b04dc42b;
		}
		_iter_end_1b04dc42b:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14367_st, &__jule_any_type43); __jule_collection; }));
}



inline void _1ab84a4a2_checkAssignSt(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3790565_AssignSt> _146934_a) {
	{
		
		if (_1ab6aa334_IsPostfixOp((*((*(_146934_a))._field_Setter))._field_Id)) {
			_case_begin_1b04e3872:;
			{
				_1ab84899a_checkPostfix(_self_, _146934_a);
			}
		}
		else if (((*(_146934_a))._field_Left.len() == 1LL)) {
			_case_begin_1b04e3520:;
			{
				_1ab849803_checkSingleAssign(_self_, &(_146934_a));
			}
		}
		else {
			_case_begin_1b04e34a9:;
			{
				_1ab84a1e9_checkMultiAssign(_self_, &(_146934_a));
			}
		}
		_match_end_1b04e33bb:;
	};
}



inline jule::Ptr<_1ab835bc9_Scope> _1ab84a89d_checkCaseScope(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83ae32_Case>* _148032_c, jule::Ptr<_1a3791bb5_ScopeTree>* _148047_tree) {
	jule::Ptr<_1ab83ce67_scopeChecker> _14817_ssc = _1ab850375_newChildChecker(_self_);;
	(*(_14817_ssc))._field_cse=static_cast<jule::Uintptr>((*(_148032_c)));
	return _1ab843e3a_checkChildSc(_self_, _148047_tree, &(_14817_ssc));;
}



inline jule::Ptr<_1ab83ae32_Case> _1ab84ae0e_checkCase(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83a409_Match> _148630_m, jule::I64 _148641_i, jule::Ptr<_1a3798b67_Case> _148653_c, jule::Ptr<_1ab906a8b_Data> _148672_expr) {
	jule::Ptr<_1ab83ae32_Case> _14877_case = (*(_148630_m))._field_Cases[_148641_i];;
	(*(_14877_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(0LL, (*(_148653_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab906a8b_Data>(nullptr); __jule_collection; });
	jule::Bool _14897_constMatched = false;;
	jule::Ptr<_1ab9087b3_eval> _14907_eval = _1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
	{
		auto expr = &((*_148653_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b04e9119:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _149115_e = *it;
			{
				jule::Ptr<_1ab906a8b_Data> _14928_d = _1ab926814_evalExprKind(_14907_eval, (*(_149115_e))._field_Kind);;
				if ((_14928_d == nullptr)) {
					goto _iter_next_1b04e9119;
				};
				if ((*_148630_m.alloc)._field_TypeMatch) {
					(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
					if ((_1ab8512ee_countMatchType(&(_148630_m), &((*(_14928_d))._field_Type)) > 1LL)) {
						_1ab886477_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_14928_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_148630_m.alloc)._field_Comptime) {
						_14897_constMatched=(_14897_constMatched || _1ab93a053_Equal((*(_148672_expr))._field_Type, (*(_14928_d))._field_Type));
					} else {
						if ((_1ab93ca06_TypeEnum((*(_148672_expr))._field_Type) != nullptr)) {
							_1ab88e3c5_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Type), &((*(_14928_d))._field_Type), &((*_149115_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1ab095109_Trait> _15117_trt = _1ab93d7c6_Trait((*(_148672_expr))._field_Type);;
							if ((_15117_trt != nullptr)) {
								_1ab88e3c5_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Type), &((*(_14928_d))._field_Type), &((*_149115_e.alloc)._field_Token));
							};
						};
					};
					_1ab93315b_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14928_d))._field_Type), &((*((*_148630_m.alloc)._field_Expr))._field_Type), &((*_149115_e.alloc)._field_Token), _1ab841861_getOwnerRefers(_self_));
					goto _iter_next_1b04e9119;
				};
				if ((*(_14928_d))._field_Decl) {
					_1ab886477_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1b04e9119;
				};
				if ((*_148630_m.alloc)._field_Comptime) {
					if (((!(_1ab9074c6_IsConst(_14928_d.ptr()))) && (_1ab940883_comptimeTypeInfo((*(_14928_d))._field_Type) == nullptr))) {
						_1ab886477_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1b04e9119;
					};
					if ((!(_14897_constMatched))) {
						if (_1ab9074c6_IsConst(_14928_d.ptr())) {
							_14897_constMatched=(_1ab9074c6_IsConst(_148672_expr.ptr()) && _1ab076805_Eq((*(_14928_d))._field_Constant.ptr(), (*((*(_148672_expr))._field_Constant))));
						} else {
							jule::Ptr<_1ab129bc7_comptimeTypeInfo> _15377_exprCti = _1ab940883_comptimeTypeInfo((*(_148672_expr))._field_Type);;
							_14897_constMatched=((_15377_exprCti != nullptr) && _1ab93a053_Equal((*(_1ab940883_comptimeTypeInfo((*(_14928_d))._field_Type)))._field_base, (*_15377_exprCti.alloc)._field_base));
						};
					};
				};
				(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
				if ((((!((*_148630_m.alloc)._field_Comptime)) || (_1ab940883_comptimeTypeInfo((*(_148672_expr))._field_Type) == nullptr)) || (_1ab940883_comptimeTypeInfo((*(_14928_d))._field_Type) == nullptr))) {
					_1ab8e4e31_assignTypeChecker _15479_checker = _1ab8e4e31_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_148672_expr))._field_Type, ._field_d=_14928_d, ._field_errorToken=(*_149115_e.alloc)._field_Token, ._field_refers=_1ab841861_getOwnerRefers(_self_)};;
					_1ab8e5e32_check(&_15479_checker);
				};
			}
			_iter_next_1b04e9119:;
			++it;
			goto _iter_begin_1b04e9119;
		}
		_iter_end_1b04e9119:;
	};
	if (((!((*_148630_m.alloc)._field_Comptime)) || _14897_constMatched)) {
		(*_14877_case.alloc)._field_Scope=_1ab84a89d_checkCaseScope(_self_, &(_14877_case), &((*_148653_c.alloc)._field_Scope));
	};
	return _14877_case;;
}



inline void _1ab84b32c_checkCases(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase>* _156332_m, jule::Ptr<_1ab83a409_Match> _156356_rm, jule::Ptr<_1ab906a8b_Data> _156372_expr) {
	(*(_156356_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab83ae32_Case>>::alloc(0LL, (*((*(_156332_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab83ae32_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b050ce41:;
		if (it != expr_end) {
			jule::I64 _15657_i = it - expr->begin();
			{
				jule::Ptr<_1ab83ae32_Case> _15668_case = jule::new_ptr<_1ab83ae32_Case>(_1ab83ae32_Case{._field_Owner=_156356_rm, ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ab906a8b_Data>>(nullptr), ._field_Next=jule::Ptr<_1ab83ae32_Case>(nullptr)});;
				if ((_15657_i > 0LL)) {
					(*((*_156356_rm.alloc)._field_Cases[(_15657_i - 1LL)]))._field_Next=_15668_case;
				};
				(*_156356_rm.alloc)._field_Cases=jule::append((*_156356_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab83ae32_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15668_case; __jule_collection; }));
			}
			_iter_next_1b050ce41:;
			++it;
			_15657_i++;
			goto _iter_begin_1b050ce41;
		}
		_iter_end_1b050ce41:;
	};
	if ((((*_156356_rm.alloc)._field_Default != nullptr) && ((*((*(_156332_m))))._field_Cases.len() > 0LL))) {
		(*((*_156356_rm.alloc)._field_Cases[((*_156356_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_156356_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0511483:;
		if (it != expr_end) {
			jule::I64 _15798_i = it - expr->begin();
			jule::Ptr<_1a3798b67_Case> _157915_c = *it;
			{
				_1ab84ae0e_checkCase(_self_, _156356_rm, _15798_i, _157915_c, _156372_expr);
			}
			_iter_next_1b0511483:;
			++it;
			_15798_i++;
			goto _iter_begin_1b0511483;
		}
		_iter_end_1b0511483:;
	};
}



inline jule::Ptr<_1ab83ae32_Case> _1ab84b728_checkDefault(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83a409_Match> _158433_m, jule::Ptr<_1a37979bd_Else> _158448_d) {
	jule::Ptr<_1ab83ae32_Case> _15857_def = jule::new_ptr<_1ab83ae32_Case>(_1ab83ae32_Case{._field_Owner=_158433_m, ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ab906a8b_Data>>(nullptr), ._field_Next=jule::Ptr<_1ab83ae32_Case>(nullptr)});;
	(*(_15857_def))._field_Scope=_1ab84a89d_checkCaseScope(_self_, &(_15857_def), &((*(_158448_d))._field_Scope));
	return _15857_def;;
}



inline void _1ab84ba8b_checkComptimePanic(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab6a54d8_Token> _159239_callToken, jule::Ptr<_1ab835bc9_Scope>* _159266_s) {
	if (((*((*(_159266_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15963_stmt = (*((*(_159266_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15963_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b0514b7e:;
			{
				jule::Ptr<_1ab906a8b_Data> _15994_d = _15963_stmt.unsafe_cast_ptr<_1ab906a8b_Data>();;
				{
					auto &_match_expr{ (*(_15994_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1b0515b5d:;
						{
							jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> _16029_m = (*(_15994_d))._field_Model.unsafe_cast_ptr<_1ab083aa9_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16029_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1b0516d29:;
									{
										jule::Ptr<_1ab070c61_Const> _16056_c = (*(_16029_m))._field_Expr.unsafe_cast_ptr<_1ab070c61_Const>();;
										if ((!(_1ab0754c4_IsStr(_16056_c.ptr())))) {
											goto _match_end_1b0516ca2;
										};
										if ((_159239_callToken == nullptr)) {
											jule::Ptr<_1ab83ce67_scopeChecker> _161011_root = _1ab8415ca_getHardRoot(_self_);;
											if (((*(_161011_root))._field_calledFrom == nullptr)) {
												_159239_callToken=(*(_16029_m))._field_Token;
											} else {
												_159239_callToken=(*(_161011_root))._field_calledFrom;
											};
										};
										_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), _159239_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab072dc8_ReadStr(_16056_c), &__jule_any_type5); __jule_collection; }));
										_1ab8407d8_stop(_self_);
									}
								}
								_match_end_1b0516ca2:;
							};
						}
					}
					_match_end_1b0515ae7:;
				};
			}
		}
		_match_end_1b05141bc:;
	};
}



inline void _1ab84bdee_processConstMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab83a409_Match>* _162439_tm, jule::Ptr<_1a3799481_MatchCase>* _162456_m) {
	{
		auto expr = &((*((*(_162439_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b051727a:;
		if (it != expr_end) {
			jule::I64 _16258_i = it - expr->begin();
			jule::Ptr<_1ab83ae32_Case> _162515_c = *it;
			{
				if (((*(_162515_c))._field_Scope != nullptr)) {
					jule::Ptr<_1ab6a54d8_Token> _162713_token = nullptr;;
					if (((!((*((*(_162439_tm))))._field_TypeMatch)) && ((*(*(_162515_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_162713_token=(*((*((*((*(_162456_m))))._field_Cases[_16258_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ab84ba8b_checkComptimePanic(_self_, _162713_token, &((*_162515_c.alloc)._field_Scope));
					(*((*(_162439_tm))))._field_Default=_162515_c;
					(*((*(_162439_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b051727a:;
			++it;
			_16258_i++;
			goto _iter_begin_1b051727a;
		}
		_iter_end_1b051727a:;
	};
	if (((*((*(_162456_m))))._field_Default != nullptr)) {
		(*((*(_162439_tm))))._field_Cases=nullptr;
		(*((*(_162439_tm))))._field_Default=_1ab84b728_checkDefault(_self_, (*(_162439_tm)), (*((*(_162456_m))))._field_Default);
		if (((*((*(_162439_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1ab6a54d8_Token> _164113_token = nullptr;;
			if ((!((*((*(_162439_tm))))._field_TypeMatch))) {
				_164113_token=(*((*((*((*(_162456_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ab84ba8b_checkComptimePanic(_self_, _164113_token, &((*(*((*(_162439_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_162439_tm))))._field_Cases=nullptr;
	};
}



inline void _1ab84c1a7_checkTypeMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase>* _165336_m) {
	jule::Ptr<_1ab906a8b_Data> _16547_d = _1ab926b55_eval1(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*((*(_165336_m))))._field_Expr);;
	if ((_16547_d == nullptr)) {
		return;;
	};
	if ((*((*(_165336_m))))._field_Comptime) {
		jule::Ptr<_1ab129bc7_comptimeTypeInfo> _16608_cti = _1ab940883_comptimeTypeInfo((*(_16547_d))._field_Type.ptr());;
		if ((_16608_cti == nullptr)) {
			if ((!((*(_16547_d))._field_Decl))) {
				_1ab886477_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16547_d))._field_Type=(*(_16608_cti))._field_base;
		};
	} else if (((*(_16547_d))._field_Decl || (!(((((_1ab93bebc_Prim((*(_16547_d))._field_Type.ptr()) != nullptr) && _1ab946180_IsAny(_1ab93bebc_Prim((*(_16547_d))._field_Type).ptr())) || (_1ab93d7c6_Trait((*(_16547_d))._field_Type) != nullptr)) || (_1ab93ca06_TypeEnum((*(_16547_d))._field_Type) != nullptr)))))) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab83a409_Match> _16747_tm = jule::new_ptr<_1ab83a409_Match>(_1ab83a409_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16547_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_165336_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ab83ae32_Case>>(nullptr), ._field_Default=jule::Ptr<_1ab83ae32_Case>(nullptr)});;
	if (((!((*(_16747_tm))._field_Comptime)) && ((*((*(_165336_m))))._field_Default != nullptr))) {
		(*_16747_tm.alloc)._field_Default=_1ab84b728_checkDefault(_self_, _16747_tm, (*((*(_165336_m))))._field_Default);
	};
	_1ab84b32c_checkCases(_self_, _165336_m, _16747_tm, _16547_d);
	if ((*_16747_tm.alloc)._field_Comptime) {
		_1ab84bdee_processConstMatch(_self_, &(_16747_tm), _165336_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16747_tm, &__jule_any_type44); __jule_collection; }));
}



inline void _1ab84c460_checkCommonMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase>* _169638_m) {
	jule::Ptr<_1ab906a8b_Data> _169711_d = nullptr;;
	if (((*((*(_169638_m))))._field_Expr == nullptr)) {
		_169711_d=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab071723_NewBool(true)});
		(*(_169711_d))._field_Model=jule::Any((*_169711_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_169711_d=_1ab9272d7_evalExpr1(_1ab88d34c_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*((*(_169638_m))))._field_Expr);
		if ((_169711_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_169638_m))))._field_Comptime) {
		if ((!(_1ab850bb1_canComptimeMatch(&(_169711_d))))) {
			_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1ab93e079_comptime((*(_169711_d))._field_Type.ptr())) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab83a409_Match> _17237_mc = jule::new_ptr<_1ab83a409_Match>(_1ab83a409_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_169711_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_169638_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ab83ae32_Case>>(nullptr), ._field_Default=jule::Ptr<_1ab83ae32_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17237_mc, &__jule_any_type44); __jule_collection; }));
	if (((!((*(_17237_mc))._field_Comptime)) && ((*((*(_169638_m))))._field_Default != nullptr))) {
		(*_17237_mc.alloc)._field_Default=_1ab84b728_checkDefault(_self_, _17237_mc, (*((*(_169638_m))))._field_Default);
	};
	_1ab84b32c_checkCases(_self_, _169638_m, _17237_mc, _169711_d);
	if ((*_17237_mc.alloc)._field_Comptime) {
		_1ab84bdee_processConstMatch(_self_, &(_17237_mc), _169638_m);
	};
}



inline void _1ab84c718_checkMatch(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3799481_MatchCase> _174731_m) {
	if ((*(_174731_m))._field_TypeMatch) {
		_1ab84c1a7_checkTypeMatch(_self_, &(_174731_m));
		return;;
	};
	_1ab84c460_checkCommonMatch(_self_, &(_174731_m));
}



inline void _1ab84c9c1_checkFall(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a378e872_FallSt> _175526_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1ab840d05_isDeferred(_self_))) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*(_175526_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1ab83ae32_Case* _17637_case = ((_1ab83ae32_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17637_case))._field_Owner))._field_Comptime) {
		_1ab886477_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17637_case))._field_Next == nullptr)) {
		_1ab886477_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ab83b62a_FallSt>(_1ab83b62a_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17637_case))._field_Next)}), &__jule_any_type45); __jule_collection; }));
}



inline jule::Ptr<_1ab838270_BreakSt> _1ab84cd12_checkBreakWithLabel(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3796c64_BreakSt> _177836_b) {
	jule::Ptr<_1ab838270_BreakSt> _17797_brk = _1ab84d153_checkPlainBreak(_self_, _177836_b);;
	if ((_17797_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17797_brk))._field_It=0LLU;
	(*(_17797_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ab83be77_scopeLabel> _17897_label = _1ab833d70_findLabelParent(&((*((*(_177836_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17897_label == nullptr)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17897_label))._field_used=true;
	if ((((*((*(_17897_label))._field_node))._field_Index + 1LL) >= (*((*(*(_17897_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1ab886477_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18023_i = ((*(*(_17897_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18023_i >= (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1ab886477_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18068_st = (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts[_18023_i];;
		{
			auto &_match_expr{ _18068_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_1b054e603:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ab836b0e_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1b054d26c:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ab837a11_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_1b054d459:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ab8370b5_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1b054d4c0:;
				{
					(*(_17797_brk))._field_Mtch=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ab83a409_Match>());
				}
			}
			else {
				_case_begin_1b054d3e3:;
				{
					_1ab886477_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1b054d37c:;
		};
	};
	if (((*(_17797_brk))._field_It != 0LLU)) {
		if ((!(_1ab847a87_checkValidBreakLabel(_self_, (*(_17797_brk))._field_It)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*(_17797_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ab847a87_checkValidBreakLabel(_self_, (*(_17797_brk))._field_Mtch)))) {
			_1ab886477_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17797_brk;;
}



inline jule::Ptr<_1ab838270_BreakSt> _1ab84d153_checkPlainBreak(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3796c64_BreakSt> _183632_b) {
	if (_1ab840d05_isDeferred(_self_)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183632_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _18427_scope = _self_;;
	_julec_label_1b05558d4:;
	{
		
		if ((((((*_18427_scope.alloc)._field_it == 0LLU) && ((*_18427_scope.alloc)._field_cse == 0LLU)) && ((*_18427_scope.alloc)._field_parent != nullptr)) && ((*_18427_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b0556d9c:;
			{
				_18427_scope=(*_18427_scope.alloc)._field_parent;
				goto _julec_label_1b05558d4;
			}
		}
		else if (((*_18427_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b0556e35:;
			{
				return jule::new_ptr<_1ab838270_BreakSt>(_1ab838270_BreakSt{._field_It=(*_18427_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18427_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1b0556e9b:;
			{
				return jule::new_ptr<_1ab838270_BreakSt>(_1ab838270_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1ab83ae32_Case*)((*_18427_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1b0556c9d:;
	};
	_1ab886477_pushErr((*(_self_))._field_s, (*_183632_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab84d40b_checkBreak(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3796c64_BreakSt> _185827_b) {
	if (((*(_185827_b))._field_Label != nullptr)) {
		jule::Ptr<_1ab838270_BreakSt> _18608_brk = _1ab84cd12_checkBreakWithLabel(_self_, _185827_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18608_brk, &__jule_any_type46); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ab838270_BreakSt> _18657_brk = _1ab84d153_checkPlainBreak(_self_, _185827_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18657_brk, &__jule_any_type46); __jule_collection; }));
}



inline void _1ab84d6b4_checkRet(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3794dd8_RetSt> _186929_r) {
	if (_1ab840d05_isDeferred(_self_)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186929_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab83b9c1_RetSt> _18747_rt = jule::new_ptr<_1ab83b9c1_RetSt>(_1ab83b9c1_RetSt{._field_Func=(*(_1ab841344_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18747_rt, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1ab903add_retTypeChecker> _18797_rtc = jule::new_ptr<_1ab903add_retTypeChecker>(_1ab903add_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18747_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>(nullptr), ._field_errorToken=(*_186929_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _18843_ok = _1ab904acd_check(_18797_rtc.ptr(), &((*_186929_r.alloc)._field_Expr));;
	if ((!(_18843_ok))) {
		return;;
	};
	if (((*_186929_r.alloc)._field_Expr != nullptr)) {
		(*_18747_rt.alloc)._field_Expr=(*_18797_rtc.alloc)._field_model;
	};
}



inline void _1ab84d96c_checkUseExpr(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1ab6c5580_UseExpr> _189429_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189429_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ab840d05_isDeferred(_self_)) {
		_1ab886477_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1ab886477_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1ab84dc25_checkNode(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Any* _191031_node) {
	{
		auto &_match_expr{ (*(_191031_node)) };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b056c588:;
			{
				_1ab844534_checkAnonScope(_self_, (*(_191031_node)).cast_ptr<_1a3791bb5_ScopeTree>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b056c8eb:;
			{
				_1ab842d29_checkVarDecl(_self_, (*(_191031_node)).cast_ptr<_1a3794a0e_VarDecl>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b056c962:;
			{
				_1ab84338a_checkTypeAliasDecl(_self_, (*(_191031_node)).cast_ptr<_1a37986b1_TypeAliasDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b056c9c8:;
			{
				_1ab844b50_checkExpr(_self_, (*(_191031_node)).cast_ptr<_1ab6c4bab_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b056cd2a:;
			{
				_1ab84558a_checkConditional(_self_, (*(_191031_node)).cast_ptr<_1a3797e74_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b056cd91:;
			{
				_1ab847405_checkIter(_self_, (*(_191031_node)).cast_ptr<_1a3795658_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b056ce07:;
			{
				_1ab848181_checkCont(_self_, (*(_191031_node)).cast_ptr<_1a379713d_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b056ce6d:;
			{
				_1ab848439_checkLabel(_self_, (*(_191031_node)).cast_ptr<_1a378e19b_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b056ced4:;
			{
				_1ab8486e2_pushGoto(_self_, (*(_191031_node)).cast_ptr<_1a378e575_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b056d04a:;
			{
				_1ab84a4a2_checkAssignSt(_self_, (*(_191031_node)).cast_ptr<_1a3790565_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b056d0b1:;
			{
				_1ab84c718_checkMatch(_self_, (*(_191031_node)).cast_ptr<_1a3799481_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b056d127:;
			{
				_1ab84c9c1_checkFall(_self_, (*(_191031_node)).cast_ptr<_1a378e872_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b056d19e:;
			{
				_1ab84d40b_checkBreak(_self_, (*(_191031_node)).cast_ptr<_1a3796c64_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b056d226:;
			{
				_1ab84d6b4_checkRet(_self_, (*(_191031_node)).cast_ptr<_1a3794dd8_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b056d29d:;
			{
				_1ab84d96c_checkUseExpr(_self_, (*(_191031_node)).cast_ptr<_1ab6c5580_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1b056c764:;
			{
				jule::println(_1ad792293_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1b056c6ed:;
	};
}



inline void _1ab84de23_checkResult(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	_1a3791555_Stmt _19487_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19487_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b0599a6b:;
			{
				jule::Ptr<_1ab6c5580_UseExpr> _19518_ue = _19487_stmt._field_Data.unsafe_cast_ptr<_1ab6c5580_UseExpr>();;
				jule::Ptr<_1ab906a8b_Data> _19528_d = _1ab927628_evalExpr(_1ab88d34c_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), (*(_19518_ue))._field_Expr);;
				if ((_19528_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19528_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_1ab903add_retTypeChecker> _19578_rtc = jule::new_ptr<_1ab903add_retTypeChecker>(_1ab903add_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_types=_1ab08dbd5_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>(nullptr), ._field_errorToken=(*((*_19518_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1ab904acd_check(_19578_rtc.ptr(), &((*_19518_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b059b991:;
			{
				jule::Ptr<_1ab6c4bab_Expr> _19648_expr = _19487_stmt._field_Data.unsafe_cast_ptr<_1ab6c4bab_Expr>();;
				jule::Ptr<_1ab906a8b_Data> _19658_d = _1ab927628_evalExpr(_1ab88d34c_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)), _19648_expr);;
				if ((_19658_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19658_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b05a2513:;
						{
							jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _19719_m = (*(_19658_d))._field_Model.unsafe_cast_ptr<_1ab0856b0_BuiltinErrorCallExprModel>();;
							_1ab844897_processErrorCall(_self_, &(_19719_m), (*(_19648_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19658_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_1b05a26de:;
						{
							return;;
						}
					}
					_match_end_1b05a2678:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1b059b100:;
			{
				_1ab84dc25_checkNode(_self_, &(_19487_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b059b089:;
			{
				_1ab84dc25_checkNode(_self_, &(_19487_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b059b023:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1ab84e121_checkTree(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _19937_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19937_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19937_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a3791555_Stmt _20018_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1ab84dc25_checkNode(_self_, &(_20018_stmt._field_Data));
			if (_1ab840a6e_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1b05a635d:;
	}
	_iter_end_1b05a635d:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1ab84de23_checkResult(_self_);
	};
}



inline void _1ab84e484_checkGoto(_1ab83ce67_scopeChecker* _self_, jule::Ptr<_1ab838d86_GotoSt>* _201230_gt, jule::Ptr<_1ab83be77_scopeLabel>* _201248_label) {
	jule::I64 _20137_n = 0LL;;
	if (((*((*(_201230_gt))))._field_Scope == (*((*((*(_201248_label))))._field_node))._field_Scope)) {
		if (((*((*(_201230_gt))))._field_Index > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*((*(_201230_gt))))._field_Index;
	} else if (((*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_201248_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1ab835bc9_Scope> _20268_gtsc = (*((*(_201230_gt))))._field_Scope;;
		while ((((*_20268_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_201248_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20268_gtsc=(*_20268_gtsc.alloc)._field_Parent;
			}
		_iter_next_1b05ab7b4:;
		}
		_iter_end_1b05ab7b4:;;
		if (((*_20268_gtsc.alloc)._field_StmtIndex > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*_20268_gtsc.alloc)._field_StmtIndex;
	} else {
		_20137_n=0LL;
	};
	jule::Ptr<_1ab835bc9_Scope> _20487_s = (*((*((*(_201248_label))))._field_node))._field_Scope;;
	jule::I64 _20497_i = ((*(*((*(_201248_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20497_i >= _20137_n); (_20497_i)--) {
				{
					jule::Any _20529_stmt = (*(_20487_s))._field_Stmts[_20497_i];;
					if (_1ab850e7a_stmtIsDef(&(_20529_stmt))) {
						_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_201230_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_201230_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1b05b02bd:;
			}
			_iter_end_1b05b02bd:;;
			if (((*_20487_s.alloc)._field_ChildIndex > (*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex)) {
				_20487_s=(*_20487_s.alloc)._field_Parent;
				_20497_i=((*_20487_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1b05aee49;
			};
			goto _iter_end_1b05aee49;
		}
	_iter_next_1b05aee49:;
	}
	_iter_end_1b05aee49:;;
}



inline void _1ab84e682_checkGotos(_1ab83ce67_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b05b2e80:;
		if (it != expr_end) {
			jule::Ptr<_1ab838d86_GotoSt> _207015_gt = *it;
			{
				jule::Ptr<_1ab83be77_scopeLabel> _20718_label = _1ab842675_findLabelAll(_self_, &((*(_207015_gt))._field_Ident));;
				if ((_20718_label == nullptr)) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_207015_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_207015_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1b05b2e80;
				};
				(*_207015_gt.alloc)._field_Label=(*(_20718_label))._field_node;
				(*(_20718_label))._field_used=true;
				_1ab84e484_checkGoto(_self_, &(_207015_gt), &(_20718_label));
			}
			_iter_next_1b05b2e80:;
			++it;
			goto _iter_begin_1b05b2e80;
		}
		_iter_end_1b05b2e80:;
	};
}



inline void _1ab84e880_checkLabels(_1ab83ce67_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b05b5a65:;
		if (it != expr_end) {
			jule::Ptr<_1ab83be77_scopeLabel> _208310_l = *it;
			{
				if ((!((*(_208310_l))._field_used))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_208310_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_208310_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b05b5a65:;
			++it;
			goto _iter_begin_1b05b5a65;
		}
		_iter_end_1b05b5a65:;
	};
}



inline void _1ab84ea7d_checkVars(_1ab83ce67_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b05b7814:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _209110_v = *it;
			{
				if (((((!((*(_209110_v))._field_Used)) && (!((*_209110_v.alloc)._field_Constant))) && (!(_1ab6a7dc0_IsIgnoreIdent((*_209110_v.alloc)._field_Ident)))) && (!(_1ab6a8189_IsAnonIdent((*_209110_v.alloc)._field_Ident))))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_209110_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209110_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b05b7814:;
			++it;
			goto _iter_begin_1b05b7814;
		}
		_iter_end_1b05b7814:;
	};
}



inline void _1ab84ec7b_checkAliases(_1ab83ce67_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b05ba11e:;
		if (it != expr_end) {
			jule::Ptr<_1ab938a24_TypeAlias> _209910_a = *it;
			{
				if ((((!((*(_209910_a))._field_Used)) && (!(_1ab6a7dc0_IsIgnoreIdent((*_209910_a.alloc)._field_Ident)))) && (!(_1ab6a8189_IsAnonIdent((*_209910_a.alloc)._field_Ident))))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_209910_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209910_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b05ba11e:;
			++it;
			goto _iter_begin_1b05ba11e;
		}
		_iter_end_1b05ba11e:;
	};
}



inline void _1ab8500de_check(jule::Ptr<_1ab83ce67_scopeChecker> _self_, jule::Ptr<_1a3791bb5_ScopeTree>* _210727_tree, jule::Ptr<_1ab835bc9_Scope>* _210755_s) {
	(*((*(_210755_s))))._field_Deferred=(*((*(_210727_tree))))._field_Deferred;
	(*((*(_210755_s))))._field_Unsafety=(*((*(_210727_tree))))._field_Unsafety;
	jule::I64 _21113_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_210727_tree));
	(*_self_.alloc)._field_scope=(*(_210755_s));
	_1ab84e121_checkTree(_self_);
	if ((_21113_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1ab84ea7d_checkVars(_self_);
		_1ab84ec7b_checkAliases(_self_);
		if (_1ab8405da_isRoot(_self_)) {
			_1ab84e682_checkGotos(_self_);
			_1ab84e880_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab850375_newChildChecker(jule::Ptr<_1ab83ce67_scopeChecker> _self_) {
	jule::Ptr<_1ab83ce67_scopeChecker> _21317_base = _1ab833633_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21317_base))._field_parent=_self_;
	(*_21317_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21317_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21317_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21317_base;;
}








inline jule::Bool _1ab851ce4_directiveChecker_eq(_1ab851ce4_directiveChecker *_self_, _1ab851ce4_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1ab852245_checkCdef(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b05c438c:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ab0898e5_Fn>()))._field_Binded) {
					goto _match_end_1b05c31e3;
				};
				goto _case_begin_1b05c3259;
			}
		}
		else {
			_case_begin_1b05c3259:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b05c31e3:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ab8524ed_checkTypedef(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b05c758d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Binded) {
					goto _match_end_1b05c63e4;
				};
				goto _case_begin_1b05c645a;
			}
		}
		else {
			_case_begin_1b05c645a:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b05c63e4:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ab8527a6_checkNamespace(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b05ca78e:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Binded))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b05c93b4:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ab0898e5_Fn>()))._field_Binded))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b05c96c2:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Binded))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b05c965b:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b05c95e5:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab6a54d8_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ab886477_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b05d5d0a:;
			{
				if ((_1ab93108d_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1ab6bec94_Directive> _919_typedef = jule::new_ptr<_1ab6bec94_Directive>(_1ab6bec94_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6bec94_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1b05d5c94:;
	};
}



inline void _1ab852a5e_checkDeprecated(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b05d9517:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Binded) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b05d81b4:;
			{
				jule::Ptr<_1ab0898e5_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ab0898e5_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1ab08a3b8_IsEntryPoint(_1078_f)) || _1ab08a64e_IsInit(_1078_f))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b05d844a:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Binded) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b05d83d4:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b05d836d:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab6a54d8_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab886477_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ab886477_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ab852d17_checkTest(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b05e61d3:;
			{
				jule::Ptr<_1ab0898e5_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ab0898e5_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1ab08a64e_IsInit(_1444_f)))) && (!(_1ab08a3b8_IsEntryPoint(_1444_f))))) {
					goto _match_end_1b05e5039;
				};
				if (_1ab08a132_IsMethod(_1444_f)) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1b05e5039;
				};
				goto _case_begin_1b05e50a0;
			}
		}
		else {
			_case_begin_1b05e50a0:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b05e5039:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ab8530c0_checkExport(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b05eae30:;
			{
				jule::Ptr<_1ab0898e5_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ab0898e5_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1ab08a64e_IsInit(_1654_f)) || _1ab08a3b8_IsEntryPoint(_1654_f)) || _1ab08a132_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b05e9a55:;
			{
				jule::Ptr<_1ab8a7289_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1ab8a7289_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b05e9cec:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1b05e9c86:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1ab886477_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab6a54d8_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab886477_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ab886477_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ab853378_checkDirective(_1ab851ce4_directiveChecker* _self_, jule::Ptr<_1ab6bec94_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1b060803b:;
			{
				_1ab852245_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1b0606dd6:;
			{
				_1ab8524ed_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1b0606e4c:;
			{
				_1ab8527a6_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1b0606eb3:;
			{
				_1ab852a5e_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1b0607029:;
			{
				_1ab852d17_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1b0607090:;
			{
				_1ab8530c0_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1b0607106:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b06023dc:;
			{
				_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b0606d09:;
	};
}



inline void _1ab853576_check(_1ab851ce4_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b060acec:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _22315_d = *it;
			{
				_1ab853378_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1b060acec:;
			++it;
			goto _iter_begin_1b060acec;
		}
		_iter_end_1b060acec:;
	};
}







inline jule::Ptr<_1ab854577_ReferenceStack> static__1ab854863_new(void) {
	return jule::new_ptr<_1ab854577_ReferenceStack>(_1ab854577_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1ab854c5e_Len(_1ab854577_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1ab8550a0_At(_1ab854577_ReferenceStack* _self_, jule::I64 _4218_i) {
	return (*(_self_))._field_buffer[_4218_i];;
}



inline void _1ab855358_Push(_1ab854577_ReferenceStack* _self_, jule::Any _4724_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4724_ref); };
}



inline jule::Bool _1b0b752de_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1ab08c9a3_FnIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0b76653:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type63) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b0b76653:;
			++it;
			goto _iter_begin_1b0b76653;
		}
		_iter_end_1b0b76653:;
	};
	return false;;
}

inline jule::Bool _1b0b8b921_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1ab8a7289_Var> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0b8cc41:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type7) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b0b8cc41:;
			++it;
			goto _iter_begin_1b0b8cc41;
		}
		_iter_end_1b0b8cc41:;
	};
	return false;;
}

inline jule::Bool _1b0c74168_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1a37a53d2_StructIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0c754cc:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type64) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b0c754cc:;
			++it;
			goto _iter_begin_1b0c754cc;
		}
		_iter_end_1b0c754cc:;
	};
	return false;;
}

inline jule::Bool _1b111a3ee_Exist(_1ab854577_ReferenceStack* _self_, jule::Ptr<_1ab095109_Trait> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b111b70d:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type11) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b111b70d:;
			++it;
			goto _iter_begin_1b111b70d;
		}
		_iter_end_1b111b70d:;
	};
	return false;;
}








inline jule::Bool _1ab855a51_Pass_eq(_1ab855a51_Pass *_self_, _1ab855a51_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1ab85b00c_pushErr(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab6a54d8_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args) {
	{ jule::Slice<_1a388d1ac_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab881461_compilerErr(_30624_token, true, _30646_fmt, _30666_args)); };
}



inline void _1ab85b78d_pushSuggestion(_1ab85a506_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args) {
	{
		_1ab882583_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31530_fmt, _31550_args);
	};
}



inline jule::Bool _1ab85bb89_checkCppUseDeclPath(_1ab85a506_symBuilder* _self_, jule::Ptr<_1a3799a14_UseDecl>* _31936_decl, jule::Str* _31958_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3203_ext = _1a87b51ab_Ext((*(_31958_path)));;
	if (((!(_1a3e44a93_IsValidHeaderExt(_3203_ext))) && (!(_1a3e44d5c_IsValidCppExt(_3203_ext))))) {
		_1ab85b00c_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3203_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a696ebc5_Stat _3273_info = ({
		auto except = static__1a68cc193_Of((*(_31958_path)));
		(except.ok()) ? (except.result) : ({{
			_1ab85b00c_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_31936_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1a69700d2_IsDir(&_3273_info)) {
		_1ab85b00c_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_31936_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab85be97_buildCppHeaderImport(_1ab85a506_symBuilder* _self_, jule::Ptr<_1a3799a14_UseDecl>* _33941_decl) {
	jule::Str _3407_path = (*((*((*(_33941_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1a3e447b8_IsStdHeaderPath(_3407_path)))) {
		_3407_path=_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ab6ab852_Dir((*((*((*(_33941_decl))))._field_Token))._field_File.ptr()); (*it++) = _3407_path; __jule_collection; }));
		jule::Bool _3448_ok = _1ab85bb89_checkCppUseDeclPath(_self_, _33941_decl, &(_3407_path));;
		if ((!(_3448_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a87b5475_Abs(_3407_path);
			_3407_path = __jule_assign_result.__jule_result_arg0;
			_3448_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3448_ok))) {
			_1ab85b00c_pushErr(_self_, &((*((*(_33941_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1ab866578_ImportInfo>(_1ab866578_ImportInfo{._field_Decl=(*(_33941_decl)), ._field_Path=_3407_path, ._field_LinkPath=(*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1ab85c393_checkAbsPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1a3799a14_UseDecl>* _36953_decl) {
	jule::Str _3703_modPath = ((_1ab863575_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab8625da_GetModPath((*(_self_))._field_importer.data);;
	if ((_3703_modPath.len() == 0LL)) {
		_1ab85b00c_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1ab85b78d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_36933_filepath=_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3703_modPath; (*it++) = _36933_filepath; __jule_collection; }));
	jule::Bool _37813_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a87b5475_Abs(_36933_filepath);
		_36933_filepath = __jule_assign_result.__jule_result_arg0;
		_37813_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37813_ok))) {
		_1ab85b00c_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_36953_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1a696ebc5_Stat _3853_info = ({
		auto except = static__1a68cc193_Of(_36933_filepath);
		(except.ok()) ? (except.result) : ({{
			_1ab85b00c_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a69700d2_IsDir(&_3853_info)))) {
		_1ab85b00c_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _36933_filepath;;
}



inline jule::Str _1ab85c78e_checkStdAbsPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1a3799a14_UseDecl>* _39856_decl) {
	(_39836_filepath).mut_slice(4LL);;
	_39836_filepath=_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a87b8bd7_PathStdlib; (*it++) = _39836_filepath; __jule_collection; }));
	jule::Bool _40113_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a87b5475_Abs(_39836_filepath);
		_39836_filepath = __jule_assign_result.__jule_result_arg0;
		_40113_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40113_ok))) {
		_1ab85b00c_pushErr(_self_.ptr(), &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39856_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1a696ebc5_Stat _4083_info = ({
		auto except = static__1a68cc193_Of(_39836_filepath);
		(except.ok()) ? (except.result) : ({{
			_1ab85b00c_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a69700d2_IsDir(&_4083_info)))) {
		_1ab85b00c_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39836_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1ab85cad0_checkImpPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1a3799a14_UseDecl>* _42134_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4223_path = (*((*((*(_42134_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1a87a8e91_HasSuffix(_4223_path, jule::Str::lit("/", 1))) {
		_1ab85b00c_pushErr(_self_.ptr(), &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4273_parts = _1a87ad0d8_SplitAll(_4223_path, jule::Str::lit("/", 1));;
	if ((_4273_parts.len() == 0LL)) {
		_1ab85b00c_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4273_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4273_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b064cb0d:;
		if (it != expr_end) {
			jule::Str *_43310_part = it;
			{
				if ((((*(_43310_part))).empty() || _1ab6a7dc0_IsIgnoreIdent((*(_43310_part))))) {
					_1ab85b00c_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43310_part)); __jule_collection; }));
			}
			_iter_next_1b064cb0d:;
			++it;
			goto _iter_begin_1b064cb0d;
		}
		_iter_end_1b064cb0d:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1ab85c78e_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1ab85c393_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	};
	return __jule_func_result;;
}



inline void _1ab85cd88_assignAlias(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab866578_ImportInfo>* _45133_imp) {
	jule::I64 _4527_i = _1a87aa03b_FindLast((*((*(_45133_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4527_i)++;
	jule::Str _4543_path = (*((*(_45133_imp))))._field_LinkPath.slice(_4527_i);;
	(*((*(_45133_imp))))._field_Alias=_4543_path;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab85d1c9_buildImport(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1a3799a14_UseDecl>* _45833_decl) {
	if ((*((*(_45833_decl))))._field_Binded) {
		return _1ab85be97_buildCppHeaderImport(_self_.ptr(), _45833_decl);;
	};
	jule::Bool _4623_std;
	jule::Str _4628_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1ab85cad0_checkImpPath(_self_, _45833_decl);
		_4623_std = __jule_assign_result.__jule_result_arg0;
		_4628_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4628_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1ab866578_ImportInfo> _4677_imp = jule::new_ptr<_1ab866578_ImportInfo>(_1ab866578_ImportInfo{._field_Decl=(*(_45833_decl)), ._field_Path=_4628_filepath, ._field_LinkPath=(*((*((*(_45833_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45833_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4623_std, ._field_Package=jule::new_ptr<_1ab868cea_Package>(_1ab868cea_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45833_decl))))._field_Alias != nullptr)) {
		(*(_4677_imp))._field_Alias=(*(*((*(_45833_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1ab861760_isImplicitImport(_4677_imp)))) {
		_1ab85cd88_assignAlias(_self_, &(_4677_imp));
	};
	return _4677_imp;;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab85d51a_findUseDecl(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab866578_ImportInfo>* _48528_pkg) {
	return _1ab091215_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>>((void*)__jule_anon_1b065809c, jule::Ptr<__jule_anon_1b065809c_ctx>::make(__jule_anon_1b065809c_ctx{._48528_pkg=_48528_pkg}).as<jule::Uintptr>(), __jule_anon_1b065809c_ctx_handler));;
}



inline jule::Bool _1ab85d85b_checkDuplicateUseDecl(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab866578_ImportInfo>* _49342_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab866578_ImportInfo> _4947_lpkg = _1ab85d51a_findUseDecl(_self_, _49342_pkg);;
	if ((_4947_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ab85b00c_pushErr(_self_, &((*((*((*(_49342_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49342_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1ab85b78d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1ab85db9c_getAsLinkPath(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Str _50334_path) {
	_1a387dcd5_Builder _5047_sb = static__1a387e654_New(_50334_path.len());;
	if (_1a87a8b1c_HasPrefix(_50334_path, _1a87b8bd7_PathStdlib)) {
		(_50334_path).mut_slice(_1a87b8bd7_PathStdlib.len());;
		({
			auto except = _1a387ecd6_WriteStr(&_5047_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:507:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&_5047_sb, _1a87aec66_ReplaceAll(_50334_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:508:4"));
			(except.result);
		});
		({
			auto except = _1a388008e_WriteByte(&_5047_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
		});
		return _1a3880666_Str(&_5047_sb);;
	};
	jule::Str _5133_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a87b5475_Abs(((_1ab863575_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab8625da_GetModPath((*(_self_))._field_importer.data));
		_5133_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50334_path).mut_slice(_5133_root.len());;
	if ((_50334_path[0LL] == 47LLU)) {
		(_50334_path).mut_slice(1LL);;
	};
	({
		auto except = _1a388008e_WriteByte(&_5047_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:518:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&_5047_sb, _1a87aec66_ReplaceAll(_50334_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:519:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&_5047_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
	});
	return _1a3880666_Str(&_5047_sb);;
}



inline void _1ab85e0ba_pushCycleError(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab85a506_symBuilder>* _52432_sb, jule::Str _52449_path, _1a387dcd5_Builder* _52465_message) {
	;
	jule::Str _5263_refersTo = _1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab85db9c_getAsLinkPath(_self_, _1ab6ab852_Dir((*((*((*(_52432_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1ab85db9c_getAsLinkPath(_self_, _52449_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5303_m = _1a3880666_Str(_52465_message);;
	({
		auto except = _1a387ecd6_WriteStr(_52465_message, _1a87a8754_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:531:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_52465_message, _5263_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:532:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_52465_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_52465_message, _5303_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
		(except.result);
	});
}



inline void _1ab85e4d8_pushCrossCycleError(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab85a506_symBuilder>* _53737_target, jule::Ptr<_1ab866578_ImportInfo>* _53759_imp, jule::Ptr<_1ab6a54d8_Token>* _53778_errorToken) {
	_1a387dcd5_Builder _5387_message = static__1a387e654_New(32LL);;
	_1ab85e0ba_pushCycleError(_self_, &(_self_), (*((*(_53759_imp))))._field_Path, &(_5387_message));
	jule::Ptr<_1ab85a506_symBuilder> _5427_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1ab85a506_symBuilder> _5437_old = _self_;;
	while (((*(_5427_owner))._field_owner != nullptr)) {
		{
			_1ab85e0ba_pushCycleError(_self_, &((*_5437_old.alloc)._field_owner), _1ab6ab852_Dir((*((*_5437_old.alloc)._field_table))._field_File.ptr()), &(_5387_message));
			if (((*_5427_owner.alloc)._field_owner == (*(_53737_target)))) {
				_1ab85e0ba_pushCycleError(_self_, _53737_target, _1ab6ab852_Dir((*((*(_5427_owner))._field_table))._field_File), &(_5387_message));
				goto _iter_end_1b06640a8;
			};
			_5437_old=_5427_owner;
			_5427_owner=(*_5427_owner.alloc)._field_owner;
		}
	_iter_next_1b06640a8:;
	}
	_iter_end_1b06640a8:;;
	_1ab85b00c_pushErr(_self_, _53778_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a3880666_Str(&_5387_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ab85e8d4_checkImportCycles(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab866578_ImportInfo> _56034_imp, jule::Ptr<_1a3799a14_UseDecl>* _56053_decl) {
	if (((*(_56034_imp))._field_Path == _1ab6ab852_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ab85b00c_pushErr(_self_, &((*((*(_56053_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab85db9c_getAsLinkPath(_self_, (*_56034_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab85a506_symBuilder> _5707_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1b0668541:;
	if ((_1ab6ab852_Dir((*((*(_5707_owner))._field_table))._field_File) == (*_56034_imp.alloc)._field_Path)) {
		_1ab85e4d8_pushCrossCycleError(_self_, &(_5707_owner), &(_56034_imp), &((*((*(_56053_decl))))._field_Token));
		return false;;
	};
	if (((*(_5707_owner))._field_owner != nullptr)) {
		_5707_owner=(*_5707_owner.alloc)._field_owner;
		goto _julec_label_1b0668541;
	};
	return true;;
}



inline void _1ab85ed02_checkPackageAccessibility(_1ab85a506_symBuilder* _self_, jule::Ptr<_1a3799a14_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path) {
	if ((((_1ab863575_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab8625da_GetModPath((*(_self_))._field_importer.data) == (*(_59164_mod)))) {
		return;;
	};
	;
	jule::I64 _5963_i = _1a87a9788_Find((*(_59175_path)), jule::Str::lit("internal", 8));;
	if ((_5963_i == -1LL)) {
		return;;
	};
	if ((_5963_i == 0LL)) {
		if (((((*(_59175_path)).len() - 8LL) == 0LL) || _1a87a8b1c_HasPrefix((*(_59175_path)), jule::Str::lit("internal/", 9)))) {
			_1ab85b00c_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59175_path)).slice((_5963_i - 1LL)).equal("/internal", 9)) {
		_1ab85b00c_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _6143_n = ((_5963_i + 8LL) + 1LL);;
	if (((_6143_n < (*(_59175_path)).len()) && (*(_59175_path)).slice((_5963_i - 1LL), _6143_n).equal("/internal/", 10))) {
		_1ab85b00c_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1ab8601ed_importPackage(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1ab866578_ImportInfo>* _62135_imp, jule::Ptr<_1a3799a14_UseDecl>* _62158_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62135_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab866578_ImportInfo> _6267_port = ((_1ab863575_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab862c6c_GetImport((*(_self_))._field_importer.data, (*((*(_62135_imp))))._field_Path);;
	if ((_6267_port != nullptr)) {
		(*((*(_62135_imp))))._field_Package=(*_6267_port.alloc)._field_Package;
		(*((*(_62135_imp))))._field_Duplicate=true;
		jule::Str _6314_oldMod = ((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab8625da_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab8623ed_SetModPath((*_self_.alloc)._field_importer.data, ((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab86292b_ModById((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_ModId));
		_1ab85ed02_checkPackageAccessibility(_self_, _62158_decl, &(_6314_oldMod), &((*_6267_port.alloc)._field_Path));
		((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab8623ed_SetModPath((*_self_.alloc)._field_importer.data, _6314_oldMod);
	} else {
		if ((!(_1ab85e8d4_checkImportCycles(_self_, (*(_62135_imp)), _62158_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6404_oldMod = ((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab8625da_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab8623ed_SetModPath((*_self_.alloc)._field_importer.data, _6404_oldMod);
		});;
		if ((*((*(_62135_imp))))._field_Std) {
			((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab8623ed_SetModPath((*_self_.alloc)._field_importer.data, _1a87b8bd7_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> _6458_asts;
		jule::Slice<_1a388d1ac_Log> _64518_errors;
		({
			__jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log __jule_assign_result = ((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab863168_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_Path, (!((*((*(_62135_imp))))._field_Std)));
			_6458_asts = __jule_assign_result.__jule_result_arg0;
			_64518_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64518_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ab85ed02_checkPackageAccessibility(_self_, _62158_decl, &(_6404_oldMod), &((*((*(_62135_imp))))._field_Path));
		{
			auto expr = &(_6458_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b067a498:;
			if (it != expr_end) {
				jule::Ptr<_1ab6bd9b8_AST> _65316_ast = *it;
				{
					jule::Ptr<_1ab090be8_SymTab> _6549_table = static_cast<jule::Ptr<_1ab090be8_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1ab090be8_SymTab__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab95a8d1_buildSymbols(&(_65316_ast), &((*_self_.alloc)._field_importer), _self_);
						_6549_table = __jule_assign_result.__jule_result_arg0;
						_64518_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64518_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62135_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62135_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab090be8_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6549_table; __jule_collection; }));
				}
				_iter_next_1b067a498:;
				++it;
				goto _iter_begin_1b067a498;
			}
			_iter_end_1b067a498:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab86053e_importUseDecl(jule::Ptr<_1ab85a506_symBuilder> _self_, jule::Ptr<_1a3799a14_UseDecl>* _66735_decl) {
	jule::Ptr<_1ab866578_ImportInfo> _6687_imp = _1ab85d1c9_buildImport(_self_, _66735_decl);;
	if ((_6687_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6737_ok = _1ab85d85b_checkDuplicateUseDecl(_self_, &(_6687_imp));;
	if ((!(_6737_ok))) {
		return nullptr;;
	};
	_6737_ok=_1ab8601ed_importPackage(_self_, &(_6687_imp), _66735_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab866578_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6687_imp; __jule_collection; }));
	if (_6737_ok) {
		((_1ab863575_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab863421_Imported((*_self_.alloc)._field_importer.data, _6687_imp);
		return _6687_imp;;
	};
	return nullptr;;
}



inline void _1ab86073c_importUseDecls(jule::Ptr<_1ab85a506_symBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0680d94:;
		if (it != expr_end) {
			jule::Ptr<_1a3799a14_UseDecl> _68715_decl = *it;
			{
				_1ab86053e_importUseDecl(_self_, &(_68715_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1b0680d94;
				};
			}
			_iter_next_1b0680d94:;
			++it;
			goto _iter_begin_1b0680d94;
		}
		_iter_end_1b0680d94:;
	};
}



inline void _1ab8609e5_appendNode(_1ab85a506_symBuilder* _self_, _1ab6be876_Node* _69631_node) {
	{
		auto &_match_expr{ (*(_69631_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b06813d3:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8315ba_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab859e40_buildImpl((*(_69631_node))._field_Data.cast_ptr<_1a379d573_Impl>(&__jule_any_type65)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b0682439:;
			{
				jule::Ptr<_1ab938a24_TypeAlias> _7018_ta = _1ab85648b_buildTypeAlias((*(_69631_node))._field_Data.cast_ptr<_1a37986b1_TypeAliasDecl>(&__jule_any_type50));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7018_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b06824a0:;
			{
				jule::Ptr<_1a37a2577_Struct> _7048_srct = _1ab856d2c_buildStruct((*(_69631_node))._field_Data.cast_ptr<_1a379c6c6_StructDecl>(&__jule_any_type66));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a2577_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7048_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b0682516:;
			{
				jule::Ptr<_1ab0898e5_Fn> _7078_f = _1ab8579cb_buildFunc((*(_69631_node))._field_Data.cast_ptr<_1a3793854_FnDecl>(&__jule_any_type67));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0898e5_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7078_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b068257c:;
			{
				jule::Ptr<_1ab095109_Trait> _7108_t = _1ab858328_buildTrait((*(_69631_node))._field_Data.cast_ptr<_1a379ce13_TraitDecl>(&__jule_any_type68));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab095109_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7108_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b06825e3:;
			{
				jule::Ptr<_1ab8a7289_Var> _7138_v = _1ab8598ac_buildVar((*(_69631_node))._field_Data.cast_ptr<_1a3794a0e_VarDecl>(&__jule_any_type49));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7138_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b0682d52:;
			{
				jule::Ptr<_1ab0977b0_Enum> _7168_e = _1ab858da6_buildEnum((*(_69631_node))._field_Data.cast_ptr<_1a379aa7b_EnumDecl>(&__jule_any_type69));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0977b0_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7168_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b0682db8:;
			{
				jule::Ptr<_1ab098eba_TypeEnum> _7198_e = _1ab8595e3_buildTypeEnum((*(_69631_node))._field_Data.cast_ptr<_1a379ba16_TypeEnumDecl>(&__jule_any_type70));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab098eba_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7198_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1b0682329:;
			{
				_1ab85b00c_pushErr(_self_, &((*(_69631_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b06822b3:;
	};
}



inline void _1ab860be3_appendNodes(_1ab85a506_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b069b73e:;
		if (it != expr_end) {
			_1ab6be876_Node _72715_node = *it;
			{
				_1ab8609e5_appendNode(_self_, &(_72715_node));
			}
			_iter_next_1b069b73e:;
			++it;
			goto _iter_begin_1b069b73e;
		}
		_iter_end_1b069b73e:;
	};
}



inline void _1ab860e9b_pushDirectivePass(_1ab85a506_symBuilder* _self_, jule::Ptr<_1ab6bec94_Directive>* _73238_d) {
	if (((*((*(_73238_d))))._field_Args.len() == 0LL)) {
		_1ab85b00c_pushErr(_self_, &((*((*(_73238_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73238_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1ab6a54d8_Token> _7374_arg = (*((*(_73238_d))))._field_Args[1LL];;
		_1ab85b00c_pushErr(_self_, &(_7374_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73238_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab6a54d8_Token> _7413_arg = (*((*(_73238_d))))._field_Args[0LL];;
	if (((*(_7413_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab85b00c_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7413_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ab85b00c_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1ab855a51_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab855a51_Pass{._field_Token=(*((*(_73238_d))))._field_Tag, ._field_Text=(*_7413_arg.alloc)._field_Kind.slice(1LL, ((*_7413_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1ab861199_appendTopDirectives(_1ab85a506_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06a36ad:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _75915_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75915_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1b06a511b:;
						{
							_1ab860e9b_pushDirectivePass(_self_, &(_75915_d));
						}
					}
					_match_end_1b06a503e:;
				};
			}
			_iter_next_1b06a36ad:;
			++it;
			goto _iter_begin_1b06a36ad;
		}
		_iter_end_1b06a36ad:;
	};
}



inline void _1ab861397_build(jule::Ptr<_1ab85a506_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ab090be8_SymTab>(_1ab090be8_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1ab855a51_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ab866578_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a37a2577_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1ab0898e5_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1ab095109_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1ab0977b0_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1ab098eba_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ab8315ba_Impl>>(nullptr)});
	_1ab861199_appendTopDirectives(_self_);
	_1ab86073c_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1ab860be3_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1ab866578_ImportInfo_eq(_1ab866578_ImportInfo *_self_, _1ab866578_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1ab866578_ImportInfo> _1ab866a95_SelectPackage(_1ab866578_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab866e91_FindVar(_1ab866578_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab863d39_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab86738c_FindTypeAlias(_1ab866578_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab864268_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab867788_FindStruct(_1ab866578_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab86471e_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab867b84_FindFn(_1ab866578_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab864b1a_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1ab095109_Trait> _1ab867ec5_FindTrait(_1ab866578_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab864e8e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab868316_FindEnum(_1ab866578_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab865313_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab868657_FindTypeEnum(_1ab866578_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1ab868a20_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ab865797_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1ab868a20_isLookupable(_1ab866578_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1ab866578_ImportInfo> _1ab8692c3_SelectPackage(_1ab868cea_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab8696be_FindVar(_1ab868cea_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1ab863d39_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab869aba_FindTypeAlias(_1ab868cea_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1ab864268_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab869eb6_FindStruct(_1ab868cea_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1ab86471e_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab86a3b2_FindFn(_1ab868cea_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1ab864b1a_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1ab095109_Trait> _1ab86a703_FindTrait(_1ab868cea_Package* _self_, jule::Str _31125_ident) {
	return _1ab864e8e_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab86aa44_FindEnum(_1ab868cea_Package* _self_, jule::Str _31724_ident) {
	return _1ab865313_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab86ad85_FindTypeEnum(_1ab868cea_Package* _self_, jule::Str _32328_ident) {
	return _1ab865797_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1ab129bc7_comptimeTypeInfo> _1ab882de1_pushComptimeTypeInfo(_1ab88294b_commonSemaMeta* _self_, jule::Ptr<_1ab939816_Type>* _21241_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0709bba:;
		if (it != expr_end) {
			jule::Ptr<_1ab129bc7_comptimeTypeInfo> _21315_t2 = *it;
			{
				if ((((*((*(_21315_t2))._field_base))._field_BindIdent == (*((*(_21241_t))))._field_BindIdent) && _1ab93a053_Equal((*(_21315_t2))._field_base, (*(_21241_t))))) {
					return _21315_t2;;
				};
			}
			_iter_next_1b0709bba:;
			++it;
			goto _iter_begin_1b0709bba;
		}
		_iter_end_1b0709bba:;
	};
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _2187_t1 = jule::new_ptr<_1ab129bc7_comptimeTypeInfo>(_1ab129bc7_comptimeTypeInfo{._field_base=(*(_21241_t))});;
	{ jule::Slice<jule::Ptr<_1ab129bc7_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2187_t1); };
	return _2187_t1;;
}







inline jule::Ptr<_1ab866578_ImportInfo> _1ab883a4b_SelectPackage(_1ab883573_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>> _24129_selector) {
	return _1ab091215_SelectPackage((*(_self_))._field_file.ptr(), _24129_selector);;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab883e47_FindVar(_1ab883573_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	jule::Ptr<_1ab8a7289_Var> _2537_v = _1ab863d39_findVarInPackage(&((*(_self_))._field_files), &(_25123_ident), _25135_binded);;
	if ((_2537_v != nullptr)) {
		return _2537_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab884343_FindTypeAlias(_1ab883573_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded) {
	jule::Ptr<_1ab938a24_TypeAlias> _2687_ta = _1ab864268_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26629_ident), _26641_binded);;
	if ((_2687_ta != nullptr)) {
		return _2687_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab88473e_FindStruct(_1ab883573_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded) {
	jule::Ptr<_1a37a2577_Struct> _2837_s = _1ab86471e_findStructInPackage(&((*(_self_))._field_files), &(_28126_ident), _28138_binded);;
	if ((_2837_s != nullptr)) {
		return _2837_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab884b3a_FindFn(_1ab883573_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded) {
	jule::Ptr<_1ab0898e5_Fn> _2987_f = _1ab864b1a_findFnInPackage(&((*(_self_))._field_files), &(_29622_ident), _29634_binded);;
	if ((_2987_f != nullptr)) {
		return _2987_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab095109_Trait> _1ab884e7b_FindTrait(_1ab883573_sema* _self_, jule::Str _31125_ident) {
	jule::Ptr<_1ab095109_Trait> _3137_t = _1ab864e8e_findTraitInPackage(&((*(_self_))._field_files), &(_31125_ident));;
	if ((_3137_t != nullptr)) {
		return _3137_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab8852bc_FindEnum(_1ab883573_sema* _self_, jule::Str _32624_ident) {
	jule::Ptr<_1ab0977b0_Enum> _3287_e = _1ab865313_findEnumInPackage(&((*(_self_))._field_files), &(_32624_ident));;
	if ((_3287_e != nullptr)) {
		return _3287_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab88560d_FindTypeEnum(_1ab883573_sema* _self_, jule::Str _34128_ident) {
	jule::Ptr<_1ab098eba_TypeEnum> _3437_e = _1ab865797_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34128_ident));;
	if ((_3437_e != nullptr)) {
		return _3437_e;;
	};
	return nullptr;;
}



inline jule::Bool _1ab885a1a_isFlag(_1ab883573_sema* _self_, jule::I64 _35318_flags) {
	return (((*(_self_))._field_flags & _35318_flags) == _35318_flags);;
}



inline jule::Ptr<_1ab090be8_SymTab> _1ab885ca1_getCurrentFile(_1ab883573_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1ab886059_setCurrentFile(_1ab883573_sema* _self_, jule::Ptr<_1ab090be8_SymTab> _35634_f) {
	(*(_self_))._field_file=_35634_f;
}



inline void _1ab886477_pushErr(_1ab883573_sema* _self_, jule::Ptr<_1ab6a54d8_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args) {
	{ jule::Slice<_1a388d1ac_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab881461_compilerErr(&(_35823_token), true, _35845_fmt, _35865_args)); };
}



inline void _1ab8867da_pushSuggestion(_1ab883573_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args) {
	{
		_1ab882583_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36330_fmt, _36350_args);
	};
}



inline jule::Bool _1ab886bd6_isAccessibleDefine(_1ab883573_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1ab6a54d8_Token> _36944_token) {
	if ((_36930_public || ((*(_36944_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3743_selfDir = _1ab6ab852_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3753_tokenDir = _1ab6ab852_Dir((*_36944_token.alloc)._field_File.ptr());;
	if ((_3743_selfDir == _3753_tokenDir)) {
		return true;;
	};
	if ((_1ab86b2c5_isStdPackage(&(_3753_tokenDir), jule::Str::lit("runtime", 7)) && _1ab86b2c5_isStdPackage(&(_3743_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1ab88718c_isDuplicatedIdent(_1ab883573_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b071ab32:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> *_39310_f = it;
			{
				if (_1ab09459d_isDuplicatedIdent((*(_39310_f)).ptr(), _39229_itself, _39247_ident, _39259_binded)) {
					return true;;
				};
			}
			_iter_next_1b071ab32:;
			++it;
			goto _iter_begin_1b071ab32;
		}
		_iter_end_1b071ab32:;
	};
	return false;;
}



inline void _1ab887500_checkDirectives(jule::Ptr<_1ab883573_sema> _self_, jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _40137_d, jule::Any _40163_o) {
	_1ab851ce4_directiveChecker _4027_dc = _1ab851ce4_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ab6bec94_Directive>>>)(_40137_d)), ._field_o=_40163_o};;
	_1ab853576_check(&_4027_dc);
}



inline jule::Bool _1ab8879a6_checkGenericQuantity(_1ab883573_sema* _self_, jule::I64 _41036_required, jule::I64 _41051_given, jule::Ptr<_1ab6a54d8_Token> _41063_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41036_required == 0LL) && (_41051_given > 0LL))) {
			_case_begin_1b071d816:;
			{
				_1ab886477_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41036_required > 0LL) && (_41051_given == 0LL))) {
			_case_begin_1b071d88d:;
			{
				_1ab886477_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required < _41051_given)) {
			_case_begin_1b071d915:;
			{
				_1ab886477_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required > _41051_given)) {
			_case_begin_1b071d98c:;
			{
				_1ab886477_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b071d74a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b071d66d:;
	};
}



inline jule::Bool _1ab8889da_isUseAliasDuplication(_1ab883573_sema* _self_, jule::Ptr<_1ab866578_ImportInfo>* _46838_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0723dd2:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _46915_imp2 = *it;
			{
				if ((_46915_imp2 == (*(_46838_imp)))) {
					goto _iter_end_1b0723dd2;
				};
				if (((*(_46915_imp2))._field_Alias == (*((*(_46838_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1b0723dd2:;
			++it;
			goto _iter_begin_1b0723dd2;
		}
		_iter_end_1b0723dd2:;
	};
	return false;;
}



inline jule::Bool _1ab888d2b_checkAutoAlias(_1ab883573_sema* _self_, jule::Ptr<_1ab866578_ImportInfo>* _48035_imp) {
	if ((*((*(_48035_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4853_valid = _1ab8a5be4_isValidImpAlias((*((*(_48035_imp))))._field_Alias);;
	if (_4853_valid) {
		if (_1ab8889da_isUseAliasDuplication(_self_, _48035_imp)) {
			_1ab886477_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48035_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1ab886477_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48035_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4853_valid;;
}



inline jule::Bool _1ab88916c_checkImport(_1ab883573_sema* _self_, jule::Ptr<_1ab866578_ImportInfo>* _49832_imp) {
	if ((*((*(_49832_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49832_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1ab6a7dc0_IsIgnoreIdent((*((*(_49832_imp))))._field_Alias)) {
			_1ab886477_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1ab8889da_isUseAliasDuplication(_self_, _49832_imp)) {
			_1ab886477_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49832_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49832_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1ab886477_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1ab861760_isImplicitImport((*(_49832_imp))))) && (!(_1ab888d2b_checkAutoAlias(_self_, _49832_imp))))) {
		return false;;
	};
	if (((*((*((*(_49832_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49832_imp))))._field_Duplicate))) {
		jule::Ptr<_1ab883573_sema> _5258_sema = jule::new_ptr<_1ab883573_sema>(_1ab883573_sema{._field_errors=jule::Slice<_1a388d1ac_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1ab090be8_SymTab>>(nullptr), ._field_file=jule::Ptr<_1ab090be8_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ab8a33a6_check(_5258_sema, &((*(*((*(_49832_imp))))._field_Package.alloc)._field_Files));
		if (((*_5258_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5258_sema.alloc)._field_errors);;
			(*_5258_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1ab88936a_checkImports(_1ab883573_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0732aa0:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _54015_file = *it;
			{
				_1ab886059_setCurrentFile(_self_, _54015_file);
				{
					auto expr = &((*(_54015_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b07338e7:;
					if (it != expr_end) {
						jule::Ptr<_1ab866578_ImportInfo> _54216_imp = *it;
						{
							jule::Bool _5435_ok = _1ab88916c_checkImport(_self_, &(_54216_imp));;
							if ((!(_5435_ok))) {
								return;;
							};
						}
						_iter_next_1b07338e7:;
						++it;
						goto _iter_begin_1b07338e7;
					}
					_iter_end_1b07338e7:;
				};
			}
			_iter_next_1b0732aa0:;
			++it;
			goto _iter_begin_1b0732aa0;
		}
		_iter_end_1b0732aa0:;
	};
}



inline void _1ab889568_implFileImpls(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0733d37:;
		if (it != expr_end) {
			jule::Ptr<_1ab8315ba_Impl> _55315_imp = *it;
			{
				_1ab899567_implImpl(_self_, &(_55315_imp));
			}
			_iter_next_1b0733d37:;
			++it;
			goto _iter_begin_1b0733d37;
		}
		_iter_end_1b0733d37:;
	};
}



inline void _1ab889766_implImpls(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0735762:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _55915_file = *it;
			{
				_1ab886059_setCurrentFile(_self_.ptr(), _55915_file);
				_1ab889568_implFileImpls(_self_);
			}
			_iter_next_1b0735762:;
			++it;
			goto _iter_begin_1b0735762;
		}
		_iter_end_1b0735762:;
	};
}



inline void _1ab889964_checkEnums(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b073681d:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _56615_file = *it;
			{
				_1ab886059_setCurrentFile(_self_.ptr(), _56615_file);
				{
					
					if ((!(_1ab8959a3_checkEnumDecls(_self_)))) {
						_case_begin_1b0736e6c:;
					}
					else if ((!(_1ab895c39_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b0737544:;
					}
					_match_end_1b0737467:;
				};
			}
			_iter_next_1b073681d:;
			++it;
			goto _iter_begin_1b073681d;
		}
		_iter_end_1b073681d:;
	};
}



inline void _1ab889b62_checkFileInherits(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07383be:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _57615_t = *it;
			{
				jule::Bool _5774_ok = _1ab8975ed__checkTraitDeclInherits(_self_, &(_57615_t));;
				if ((!(_5774_ok))) {
					return;;
				};
			}
			_iter_next_1b07383be:;
			++it;
			goto _iter_begin_1b07383be;
		}
		_iter_end_1b07383be:;
	};
}



inline void _1ab889d60_checkInherits(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0738963:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _58515_file = *it;
			{
				_1ab886059_setCurrentFile(_self_.ptr(), _58515_file);
				_1ab889b62_checkFileInherits(_self_);
			}
			_iter_next_1b0738963:;
			++it;
			goto _iter_begin_1b0738963;
		}
		_iter_end_1b0738963:;
	};
}



inline _1ab94bc13_typeChecker _1ab88a316_typeChecker(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _59147_generics, jule::Ptr<_1ab94ac23_referencer> _5927_referencer) {
	_1ab94bc13_typeChecker _5937_tc = _1ab94bc13_typeChecker{._field_s=_self_, ._field_rootLookup=_59132_l, ._field_lookup=_59132_l, ._field_referencer=_5927_referencer, ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59147_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59132_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
			_case_begin_1b073b625:;
			{
				jule::Ptr<_1ab83ce67_scopeChecker> _6028_hard = _1ab8415ca_getHardRoot(_59132_l.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
				_5937_tc._field_refers=(*((*(_6028_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1b073b5ae:;
	};
	if (((_5927_referencer != nullptr) && ((*_5927_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5927_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b073ce95:;
				{
					_5937_tc._field_ownerAlias=(*(_5927_referencer))._field_owner.unsafe_cast_ptr<_1ab938a24_TypeAlias>();
				}
			}
			_match_end_1b073ce2e:;
		};
	};
	return _5937_tc;;
}



inline jule::Ptr<_1ab939816_Type> _1ab88a877_buildTypeWithRefers(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _6197_generics, jule::Ptr<_1ab94ac23_referencer> _61935_referencer) {
	return ({ auto _wrap_copy = _1ab88a316_typeChecker(_self_, _61864_l, _6197_generics, _61935_referencer); _1ab9547ed_checkDecl(&_wrap_copy, _61841_t); });;
}



inline jule::Bool _1ab88add8_checkTypeSymWithRefers(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab942027_TypeSym>* _62544_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _6267_generics, jule::Ptr<_1ab94ac23_referencer> _62635_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ab9423ce_checked((*(_62544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62544_t))))._field_Type=_1ab88a877_buildTypeWithRefers(_self_, &((*((*(_62544_t))))._field_Decl), _62561_l, _6267_generics, _62635_referencer);
	__jule_func_result = _1ab9423ce_checked((*(_62544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab82e2bb_constraintChecker> _1ab88b16e_constraintChecker(jule::Ptr<_1ab883573_sema> _self_) {
	return jule::new_ptr<_1ab82e2bb_constraintChecker>(_1ab82e2bb_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_si=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_et=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1ab88b56a_checkTypeSym(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab942027_TypeSym>* _64034_t, jule::Trait _64051_l) {
	return _1ab88add8_checkTypeSymWithRefers(_self_, _64034_t, _64051_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ab939816_Type> _1ab88ba21_checkTypeSymRefers(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _64540_t, jule::Trait _64563_l, jule::Ptr<_1ab854577_ReferenceStack> _64578_refers) {
	jule::Ptr<_1ab94bc13_typeChecker> _6467_tc = jule::new_ptr<_1ab94bc13_typeChecker>(_1ab94bc13_typeChecker{._field_s=_self_, ._field_rootLookup=_64563_l, ._field_lookup=_64563_l, ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=_64578_refers, ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ab9547ed_checkDecl(_6467_tc.ptr(), _64540_t);;
}



inline jule::Ptr<_1ab939816_Type> _1ab88bec7_buildTypeWithGenerics(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _6587_generics, jule::Ptr<_1ab854577_ReferenceStack> _65835_refers) {
	jule::Ptr<_1ab94bc13_typeChecker> _6597_tc = jule::new_ptr<_1ab94bc13_typeChecker>(_1ab94bc13_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=_65835_refers, ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6587_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ab9547ed_checkDecl(_6597_tc.ptr(), _65743_t);;
}



inline jule::Ptr<_1ab939816_Type> _1ab88c659_selectType(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _67532_t) {
	jule::Ptr<_1ab94bc13_typeChecker> _6767_tc = jule::new_ptr<_1ab94bc13_typeChecker>(_1ab94bc13_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ab9547ed_checkDecl(_6767_tc.ptr(), _67532_t);;
}



inline jule::Ptr<_1ab9087b3_eval> _1ab88cb10_evalpd(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1ab939816_Type> _68742_p, jule::Ptr<_1ab8a7289_Var> _68756_owner) {
	jule::Ptr<_1ab9087b3_eval> _6887_e = jule::new_ptr<_1ab9087b3_eval>(_1ab9087b3_eval{._field_s=_self_, ._field_lookup=_68727_l, ._field_prefix=jule::Ptr<_1ab939816_Type>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_68756_owner, ._field_field=jule::Ptr<_1a37a4832_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _68727_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
			_case_begin_1b074880d:;
			{
				(*(_6887_e))._field_unsafety=_1ab840354_isUnsafe(_68727_l.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));
			}
		}
		_match_end_1b0748797:;
	};
	(*_6887_e.alloc)._field_prefix=_68742_p;
	return _6887_e;;
}



inline jule::Ptr<_1ab9087b3_eval> _1ab88d00b_evalp(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1ab939816_Type> _70241_p) {
	return _1ab88cb10_evalpd(_self_, _70226_l, _70241_p, nullptr);;
}



inline jule::Ptr<_1ab9087b3_eval> _1ab88d34c_eval(jule::Ptr<_1ab883573_sema> _self_, jule::Trait _70725_l) {
	return _1ab88d00b_evalp(_self_, _70725_l, nullptr);;
}



inline jule::Bool _1ab88d968_checkAssignType(jule::Ptr<_1ab883573_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1ab939816_Type>* _71154_dest, jule::Ptr<_1ab906a8b_Data>* _7128_d, jule::Ptr<_1ab6a54d8_Token> _71222_errorToken, jule::Ptr<_1ab854577_ReferenceStack> _71253_refers) {
	if ((*((*(_7128_d))))._field_Decl) {
		_1ab886477_pushErr(_self_.ptr(), _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71132_destIsRef) {
		if ((!(_1ab93a053_Equal((*(_71154_dest)), (*((*(_7128_d))))._field_Type)))) {
			_1ab886477_pushErr(_self_, _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_71154_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_7128_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1ab8e4e31_assignTypeChecker> _7238_atc = jule::new_ptr<_1ab8e4e31_assignTypeChecker>(_1ab8e4e31_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71154_dest)), ._field_d=(*(_7128_d)), ._field_errorToken=_71222_errorToken, ._field_refers=_71253_refers});;
		jule::Bool _7304_ok = _1ab8e5e32_check(_7238_atc.ptr());;
		if ((!(_7304_ok))) {
			return false;;
		};
	};
	if (((!(_1ab9074c6_IsConst((*(_7128_d)).ptr()))) || (_1ab93bebc_Prim((*(_71154_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7407_kind = (*(_1ab93bebc_Prim((*(_71154_dest)).ptr())))._field_Kind;;
	{
		
		if (_1ab117ba4_IsSigInt(_7407_kind)) {
			_case_begin_1b075185a:;
			{
				_1ab073bba_SetI64((*((*(_7128_d))))._field_Constant.ptr(), _1ab0733e5_AsI64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1ab117eb2_IsUnsigInt(_7407_kind)) {
			_case_begin_1b07518e3:;
			{
				_1ab073e73_SetU64((*((*(_7128_d))))._field_Constant.ptr(), _1ab07367b_AsU64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1ab1185bc_IsFloat(_7407_kind)) {
			_case_begin_1b0751959:;
			{
				_1ab07478c_SetF64((*((*(_7128_d))))._field_Constant.ptr(), _1ab073912_AsF64((*((*(_7128_d))))._field_Constant));
			}
		}
		_match_end_1b07517a0:;
	};
	return true;;
}



inline jule::Bool _1ab88de1e__checkTypeCompatibility(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab939816_Type>* _75445_dest, jule::Ptr<_1ab939816_Type>* _75463_src, jule::Ptr<_1ab6a54d8_Token> _7557_errorToken) {
	if (((*(_75463_src)) == nullptr)) {
		return false;;
	};
	if ((_1ab93dce3_Tup((*(_75463_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1ab8e30a5_typeCompatibilityChecker _7637_tcc = _1ab8e30a5_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75445_dest)), ._field_src=(*(_75463_src)), ._field_errorToken=_7557_errorToken};;
	return _1ab8e479e_check(&_7637_tcc);;
}



inline jule::Bool _1ab88e3c5_checkTypeCompatibility(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab939816_Type>* _77244_dest, jule::Ptr<_1ab939816_Type>* _7738_src, jule::Ptr<_1ab6a54d8_Token>* _77325_errorToken) {
	if (_1ab88de1e__checkTypeCompatibility(_self_, _77244_dest, _7738_src, (*(_77325_errorToken)))) {
		return true;;
	};
	_1ab886477_pushErr(_self_, (*(_77325_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_77244_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_7738_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1ab88e7e3_pushCompatiblityError(_1ab883573_sema* _self_, jule::Ptr<_1ab939816_Type>* _78142_dest, jule::Ptr<_1ab906a8b_Data>* _78160_src, jule::Ptr<_1ab6a54d8_Token>* _7828_errorToken) {
	if ((*((*(_78160_src))))._field_untyped) {
		{
			
			if (_1ab074c21_IsI64((*((*(_78160_src))))._field_Constant.ptr())) {
				_case_begin_1b0758c80:;
				{
					_1ab886477_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1ab074ea7_IsU64((*((*(_78160_src))))._field_Constant.ptr())) {
				_case_begin_1b0758d29:;
				{
					_1ab886477_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1ab07575a_IsF64((*((*(_78160_src))))._field_Constant.ptr())) {
				_case_begin_1b0758d90:;
				{
					_1ab886477_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1b0758b4d:;
		};
	};
	_1ab886477_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_78160_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ab88ec99_checkTypeCompatibility1(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab939816_Type>* _79945_dest, jule::Ptr<_1ab906a8b_Data>* _79963_src, jule::Ptr<_1ab6a54d8_Token>* _8008_errorToken) {
	if (_1ab88de1e__checkTypeCompatibility(_self_, _79945_dest, &((*((*(_79963_src))))._field_Type), (*(_8008_errorToken)))) {
		return true;;
	};
	_1ab88e7e3_pushCompatiblityError(_self_, _79945_dest, _79963_src, _8008_errorToken);
	return false;;
}



inline jule::Ptr<_1ab939816_Type> _1ab890250_buildNonGenericType(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _81441_ast, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1ab939816_Type>>* _81544_ignored) {
	jule::Ptr<_1ab94bc13_typeChecker> _8167_tc = jule::new_ptr<_1ab94bc13_typeChecker>(_1ab94bc13_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=(*(_8158_generics)), ._field_ignoredGenerics=_81544_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ab9547ed_checkDecl(_8167_tc.ptr(), _81441_ast);;
}



inline jule::Bool _1ab89064b_buildFnNonGenericTypes(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns> _82643_f, jule::Slice<jule::Ptr<_1ab939816_Type>>* _82659_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _82711_generics = nullptr;;
	if (_1ab08a132_IsMethod((*(_82643_f))._field_Decl.ptr())) {
		_82711_generics=jule::append((*(*(_82643_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82643_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82711_generics=(*((*(_82643_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1ab8917e5_basicFnEnvironment(_self_, &(_82643_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ab883573_sema>*>((void*)__jule_anon_1b07643d9, jule::Ptr<__jule_anon_1b07643d9_ctx>::make(__jule_anon_1b07643d9_ctx{._82643_f=_82643_f,._82711_generics=_82711_generics,._82659_ignored=_82659_ignored}).as<jule::Uintptr>(), __jule_anon_1b07643d9_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab89098c_getTraitCheckFnKind(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _84941_f) {
	if (((*((*(_84941_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_84941_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _8537_ins = _1ab08ae02_instanceForce((*(_84941_f)));;
	jule::Ptr<_1ab94bc13_typeChecker> _8557_tc = jule::new_ptr<_1ab94bc13_typeChecker>(_1ab94bc13_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8537_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b076a7db:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> _86015_p = *it;
			{
				if ((!(_1ab088570_IsSelf((*(_86015_p))._field_Decl.ptr())))) {
					(*_86015_p.alloc)._field_Type=_1ab9547ed_checkDecl(_8557_tc.ptr(), &((*((*(*(_86015_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86015_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1b076a7db:;
			++it;
			goto _iter_begin_1b076a7db;
		}
		_iter_end_1b076a7db:;
	};
	if ((!(_1ab089d9b_IsVoid((*(_84941_f)).ptr())))) {
		(*_8537_ins.alloc)._field_Result=_1ab9547ed_checkDecl(_8557_tc, &((*((*((*((*(_84941_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8537_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8537_ins;;
}



inline jule::Bool _1ab890e43_checkConstraintsFn(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _87840_f, jule::Ptr<_1ab6a54d8_Token>* _87856_et, jule::Ptr<_1ab08c9a3_FnIns> _87879_exist) {
	jule::Ptr<_1ab82e2bb_constraintChecker> _8797_cc = _1ab88b16e_constraintChecker(_self_);;
	(*(_8797_cc))._field_et=(*(_87856_et));
	(*_8797_cc.alloc)._field_fi=(*(_87840_f));
	if ((_87879_exist != nullptr)) {
		{
			auto expr = &((*_87879_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b0770956:;
			if (it != expr_end) {
				jule::I64 _8839_i = it - expr->begin();
				jule::Ptr<_1ab937e30_InsGeneric> _88316_g = *it;
				{
					(*((*((*(_87840_f))))._field_Generics[_8839_i]))._field_Constraint=(*(_88316_g))._field_Constraint;
				}
				_iter_next_1b0770956:;
				++it;
				_8839_i++;
				goto _iter_begin_1b0770956;
			}
			_iter_end_1b0770956:;
		};
	} else {
		(*_8797_cc.alloc)._field_uniq=true;
	};
	return _1ab830234_check(_8797_cc);;
}



inline jule::Bool _1ab8913e9_checkConstraintsStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _89244_s, jule::Ptr<_1ab6a54d8_Token>* _89264_et, jule::Ptr<_1a37a53d2_StructIns> _89287_exist) {
	jule::Ptr<_1ab82e2bb_constraintChecker> _8937_cc = _1ab88b16e_constraintChecker(_self_);;
	(*(_8937_cc))._field_et=(*(_89264_et));
	(*_8937_cc.alloc)._field_si=(*(_89244_s));
	if ((_89287_exist != nullptr)) {
		{
			auto expr = &((*_89287_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b0773b24:;
			if (it != expr_end) {
				jule::I64 _8979_i = it - expr->begin();
				jule::Ptr<_1ab937e30_InsGeneric> _89716_g = *it;
				{
					(*((*((*(_89244_s))))._field_Generics[_8979_i]))._field_Constraint=(*(_89716_g))._field_Constraint;
				}
				_iter_next_1b0773b24:;
				++it;
				_8979_i++;
				goto _iter_begin_1b0773b24;
			}
			_iter_end_1b0773b24:;
		};
	} else {
		(*_8937_cc.alloc)._field_uniq=true;
	};
	return _1ab830234_check(_8937_cc);;
}



inline jule::Bool _1ab8917e5_basicFnEnvironment(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*> _90951_algo) {
	jule::Ptr<_1ab883573_sema> _9107_sema = (*((*((*(_90940_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ab090be8_SymTab> _9117_old = _1ab885ca1_getCurrentFile(_9107_sema.ptr());;
	jule::Ptr<_1ab090be8_SymTab> _9127_file = _1ab8821dc_findFile(&((*_9107_sema.alloc)._field_files), &((*((*(*((*(_90940_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9127_file != nullptr)) {
		_1ab886059_setCurrentFile(_9107_sema, _9127_file);
	};
	jule::Bool _9173_ok = _90951_algo(&(_9107_sema));;
	if ((_9107_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_9107_sema.alloc)._field_errors);
		(*_9107_sema.alloc)._field_errors=nullptr;
	};
	_1ab886059_setCurrentFile(_9107_sema, _9117_old);
	return _9173_ok;;
}



inline jule::Bool _1ab891be1_fnEnvironment(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*> _92946_algo) {
	jule::I64 _9307_size = (*((*(_92935_f))))._field_Generics.len();;
	if ((((*((*(_92935_f))))._field_Decl != nullptr) && ((*(*((*(_92935_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9307_size+=(*(*((*((*(_92935_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _9347_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>::alloc(0LL, _9307_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab938a24_TypeAlias>(nullptr); __jule_collection; });;
	_1ab881d68_appendGenericTypeAliases(&(_9347_generics), _92935_f);
	return _1ab8917e5_basicFnEnvironment(_self_, _92935_f, jule::__new_closure<jule::Bool,jule::Ptr<_1ab883573_sema>*>((void*)__jule_anon_1b077c3ad, jule::Ptr<__jule_anon_1b077c3ad_ctx>::make(__jule_anon_1b077c3ad_ctx{._92946_algo=_92946_algo,._9347_generics=_9347_generics}).as<jule::Uintptr>(), __jule_anon_1b077c3ad_ctx_handler));;
}



inline void _1ab891e99_checkFnParamKind(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08b84d_ParamIns>* _94138_p) {
	(*((*((*(_94138_p))))._field_Type))._field_Variadic=(*((*((*(_94138_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_94138_p))))._field_Decl.alloc)._field_Reference && (!(_1ab956723_isValidForRef(&((*((*(_94138_p))))._field_Type)))))) {
		_1ab886477_pushErr(_self_.ptr(), (*(*((*(_94138_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_94138_p))))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1ab8922da_reloadFnInsTypes(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns> _94837_f) {
	if ((_1ab08de6b_IsBuiltin(_94837_f.ptr()) || _1ab08e202_IsAnon(_94837_f))) {
		return true;;
	};
	return _1ab891be1_fnEnvironment(_self_, &(_94837_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ab883573_sema>*,jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>*>((void*)__jule_anon_1b0786a05, jule::Ptr<__jule_anon_1b0786a05_ctx>::make(__jule_anon_1b0786a05_ctx{._94837_f=_94837_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0786a05_ctx_handler));;
}



inline jule::Bool _1ab892791_checkRefValidityForInitExpr(jule::Ptr<_1ab883573_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1ab906a8b_Data>* _98864_d, jule::Ptr<_1ab6a54d8_Token>* _98879_errorToken) {
	if ((!(_1ab880e33_isValidModelForRef(&((*((*(_98864_d))))._field_Model))))) {
		_1ab886477_pushErr(_self_.ptr(), (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98844_leftMut && (!((*((*(_98864_d))))._field_Mutable)))) {
		_1ab886477_pushErr(_self_, (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab892ad2_isMutRiskyStruct(_1ab883573_sema* _self_, jule::Ptr<_1a37a53d2_StructIns>* _100529_s) {
	{
		auto expr = &((*((*(_100529_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0791adc:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> *_100610_f = it;
			{
				if ((((*((*((*(_100610_f))))._field_Decl))._field_Mutable && _1ab93b1ec_Mutable((*(*(_100610_f)).alloc)._field_Type.ptr())) && _1ab886bd6_isAccessibleDefine(_self_, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1b0791adc:;
			++it;
			goto _iter_begin_1b0791adc;
		}
		_iter_end_1b0791adc:;
	};
	return false;;
}



inline jule::Bool _1ab8931ed_checkValidityForInitExpr(jule::Ptr<_1ab883573_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1ab939816_Type>* _10334_leftKind, jule::Ptr<_1ab906a8b_Data>* _103326_d, jule::Ptr<_1ab6a54d8_Token>* _103341_errorToken) {
	if ((_103241_leftMut && (!((*((*(_103326_d))))._field_Mutable)))) {
		if ((_1ab93b1ec_Mutable((*((*(_103326_d))))._field_Type.ptr()) || (*(*((*(_103326_d))))._field_Type.alloc)._field_Variadic)) {
			_1ab886477_pushErr(_self_.ptr(), (*(_103341_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_103326_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1a37a53d2_StructIns> _10414_s = _1ab93d540_Struct((*((*(_103326_d))))._field_Type);;
		if (((_10414_s != nullptr) && _1ab892ad2_isMutRiskyStruct(_self_, &(_10414_s)))) {
			_1ab886477_pushErr(_self_, (*(_103341_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_103326_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103256_leftRef) {
		if ((!(_1ab892791_checkRefValidityForInitExpr(_self_, _103241_leftMut, _103326_d, _103341_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ab8e4e31_assignTypeChecker> _10527_atc = jule::new_ptr<_1ab8e4e31_assignTypeChecker>(_1ab8e4e31_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1ab939816_Type>(nullptr), ._field_d=(*(_103326_d)), ._field_errorToken=(*(_103341_errorToken)), ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr)});;
	return _1ab8e567e_checkValidity(_10527_atc.ptr());;
}



inline jule::Bool _1ab8935e9_checkTypeAliasDeclKind(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _106044_ta, jule::Trait _106064_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab090be8_SymTab> _10617_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab886059_setCurrentFile(_self_, _10617_old);
	});;
	if (((*((*(_106044_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ab090be8_SymTab> _10668_file = _1ab8821dc_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106044_ta))))._field_Token.alloc)._field_File));;
		if ((_10668_file != nullptr)) {
			_1ab886059_setCurrentFile(_self_, _10668_file);
		};
	};
	__jule_func_result=_1ab88add8_checkTypeSymWithRefers(_self_, &((*((*(_106044_ta))))._field_TypeSym), _106064_l, nullptr, jule::new_ptr<_1ab94ac23_referencer>(_1ab94ac23_referencer{._field_ident=(*((*(_106044_ta))))._field_Ident, ._field_owner=jule::Any((*(_106044_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106044_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ab93cc8c_Arr((*((*((*(_106044_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1ab93cc8c_Arr((*((*((*(_106044_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1ab886477_pushErr(_self_, (*((*(*((*(_106044_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ab89395c_checkTypeAliasDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _108340_ta, jule::Trait _108360_l) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_108340_ta))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_108340_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1ab8935e9_checkTypeAliasDeclKind(_self_, _108340_ta, _108360_l);
}



inline void _1ab893c15_checkTypeAliasDeclDup(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab938a24_TypeAlias>* _109143_ta) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_109143_ta))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1ab88718c_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_109143_ta))), &((*((*(_109143_ta))))._field_Ident), (*((*(_109143_ta))))._field_Binded)) {
		_1ab886477_pushErr(_self_, (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_109143_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ab8935e9_checkTypeAliasDeclKind(_self_, _109143_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));
}



inline jule::Bool _1ab893e9b_checkTypeAliasDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07a556d:;
		if (it != expr_end) {
			jule::Ptr<_1ab938a24_TypeAlias> _110415_ta = *it;
			{
				_1ab893c15_checkTypeAliasDeclDup(_self_, &(_110415_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b07a556d:;
			++it;
			goto _iter_begin_1b07a556d;
		}
		_iter_end_1b07a556d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b07d4448_checkEnumItemsDup(_1ab883573_sema* _self_, jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07d5856:;
		if (it != expr_end) {
			jule::Ptr<_1ab096c54_EnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1b07d5856;
				} else if (_1ab6a7dc0_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1ab886477_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b07d6967:;
						if (it != expr_end) {
							jule::Ptr<_1ab096c54_EnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1b07d6967;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1ab886477_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1b07d6967;
								};
							}
							_iter_next_1b07d6967:;
							++it;
							goto _iter_begin_1b07d6967;
						}
						_iter_end_1b07d6967:;
					};
				};
			}
			_iter_next_1b07d5856:;
			++it;
			goto _iter_begin_1b07d5856;
		}
		_iter_end_1b07d5856:;
	};
}

inline void _1b07e2489_checkEnumItemsDup(_1ab883573_sema* _self_, jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07e3853:;
		if (it != expr_end) {
			jule::Ptr<_1ab0988e3_TypeEnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1b07e3853;
				} else if (_1ab6a7dc0_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1ab886477_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b07e4964:;
						if (it != expr_end) {
							jule::Ptr<_1ab0988e3_TypeEnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1b07e4964;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1ab886477_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1b07e4964;
								};
							}
							_iter_next_1b07e4964:;
							++it;
							goto _iter_begin_1b07e4964;
						}
						_iter_end_1b07e4964:;
					};
				};
			}
			_iter_next_1b07e3853:;
			++it;
			goto _iter_begin_1b07e3853;
		}
		_iter_end_1b07e3853:;
	};
}



inline void _1ab89450c_checkEnumItemsStr(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0977b0_Enum>* _113539_e) {
	jule::Ptr<_1ab9087b3_eval> _11367_eval = _1ab88d34c_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07a730b:;
		if (it != expr_end) {
			jule::Ptr<_1ab096c54_EnumItem> _113715_item = *it;
			{
				if (_1ab09712d_AutoExpr(_113715_item.ptr())) {
					(*_113715_item.alloc)._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab0719dc_NewStr((*_113715_item.alloc)._field_Ident)})});
					(*((*((*_113715_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113715_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1ab906a8b_Data> _11469_d = _1ab927628_evalExpr(_11367_eval, (*((*(_113715_item))._field_Value))._field_Expr);;
					if ((_11469_d == nullptr)) {
						goto _iter_next_1b07a730b;
					};
					if ((!(_1ab9074c6_IsConst(_11469_d.ptr())))) {
						_1ab886477_pushErr(_self_, (*((*(*(_113715_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1ab854577_ReferenceStack> _11559_refers = static_cast<jule::Ptr<_1ab854577_ReferenceStack>>(nullptr);;
					_1ab88d968_checkAssignType(_self_, false, &((*((*((*(_113539_e))))._field_TypeSym))._field_Type), &(_11469_d), (*_113715_item.alloc)._field_Token, _11559_refers);
					(*(*(_113715_item))._field_Value.alloc)._field_Data=_11469_d;
				};
			}
			_iter_next_1b07a730b:;
			++it;
			goto _iter_begin_1b07a730b;
		}
		_iter_end_1b07a730b:;
	};
}



inline void _1b07b3427_checkEnumItemInt(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab9087b3_eval>* _116243_eval, jule::Ptr<_1ab0977b0_Enum>* _116261_e, jule::Ptr<_1ab94292e_Prim>* _116272_prim, jule::Ptr<_1ab096c54_EnumItem>* _116290_item, jule::U64* _1162112_n) {
	if (_1ab09712d_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		{
			
{
				_case_begin_1b07b5814:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1ab071459_NewU64((*(_1162112_n)));
				}
			}
			_match_end_1b07b61c7:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1ab906a8b_Data> _11778_d = _1ab927628_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1ab9074c6_IsConst(_11778_d.ptr())))) {
			_1ab886477_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab854577_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1ab854577_ReferenceStack>>(nullptr);;
		_1ab88d968_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_TypeSym))._field_Type), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1b07ba385:;
				{
					(*(_1162112_n))=_1ab0728ab_ReadU64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b07bb6a5:;
		};
	};
}

inline void _1b07c3e82_checkEnumItemInt(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab9087b3_eval>* _116243_eval, jule::Ptr<_1ab0977b0_Enum>* _116261_e, jule::Ptr<_1ab94292e_Prim>* _116272_prim, jule::Ptr<_1ab096c54_EnumItem>* _116290_item, jule::I64* _1162112_n) {
	if (_1ab09712d_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})});
		{
			
{
				_case_begin_1b07c6c54:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1ab071190_NewI64((*(_1162112_n)));
				}
			}
			_match_end_1b07c6bdd:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1ab906a8b_Data> _11778_d = _1ab927628_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1ab9074c6_IsConst(_11778_d.ptr())))) {
			_1ab886477_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab854577_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1ab854577_ReferenceStack>>(nullptr);;
		_1ab88d968_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_TypeSym))._field_Type), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1b07cc3ca:;
				{
					(*(_1162112_n))=_1ab072625_ReadI64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b07cc353:;
		};
	};
}



inline void _1b07ae5aa_checkEnumItemsInt1(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab94292e_Prim>* _119841_prim, jule::Ptr<_1ab0977b0_Enum>* _119859_e) {
	jule::U64 _11997_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1b07b128d:;
			{
				_11997_max=_1ab1164aa_MaxU(_1ab942ca3_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1b07b1403:;
	};
	jule::Ptr<_1ab9087b3_eval> _12097_eval = _1ab88d34c_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));;
	jule::U64 _12107_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ab096c54_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1b07b3427_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b07b0ab7:;
				{
					_12107_n=_1ab07367b_AsU64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b07bbe7a:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b07b7e10:;
		if (it != expr_end) {
			jule::Ptr<_1ab096c54_EnumItem> _122315_item = *it;
			{
				if (((_1ab09712d_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LLU)) && ((jule::U64)(_11997_max - _12107_n) <= 0LLU))) {
					_1ab886477_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1b07b7e10;
				};
				(_12107_n)++;
				_1b07b3427_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1b07b7e10:;
			++it;
			goto _iter_begin_1b07b7e10;
		}
		_iter_end_1b07b7e10:;
	};
}

inline void _1b07ae896_checkEnumItemsInt1(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab94292e_Prim>* _119841_prim, jule::Ptr<_1ab0977b0_Enum>* _119859_e) {
	jule::I64 _11997_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1b07c1d3c:;
			{
				_11997_max=_1ab1161e1_MaxI(_1ab942ca3_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1b07c1cc6:;
	};
	jule::Ptr<_1ab9087b3_eval> _12097_eval = _1ab88d34c_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));;
	jule::I64 _12107_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ab096c54_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1b07c3e82_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b07c4845:;
				{
					_12107_n=_1ab0733e5_AsI64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b07c987d:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b07ce0be:;
		if (it != expr_end) {
			jule::Ptr<_1ab096c54_EnumItem> _122315_item = *it;
			{
				if (((_1ab09712d_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LL)) && ((_11997_max - _12107_n) <= 0LL))) {
					_1ab886477_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1b07ce0be;
				};
				(_12107_n)++;
				_1b07c3e82_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1b07ce0be:;
			++it;
			goto _iter_begin_1b07ce0be;
		}
		_iter_end_1b07ce0be:;
	};
}



inline void _1ab8951ab_checkEnumItemsInt(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0977b0_Enum>* _123339_e) {
	jule::Ptr<_1ab94292e_Prim> _12343_prim = _1ab93bebc_Prim((*((*((*(_123339_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1ab117ba4_IsSigInt((*(_12343_prim))._field_Kind)) {
			_case_begin_1b07bdc7e:;
			{
				_1b07ae896_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		else {
			_case_begin_1b07add07:;
			{
				_1b07ae5aa_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		_match_end_1b07adc80:;
	};
}



inline void _1ab895464_checkEnumDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0977b0_Enum>* _124335_e) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_124335_e))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ab88718c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124335_e))), &((*((*(_124335_e))))._field_Ident), false)) {
		_1ab886477_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124335_e))))._field_Items.len() == 0LL)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1b07d4448_checkEnumItemsDup(_self_, (*((*(_124335_e))))._field_Items);
	if (((*((*(_124335_e))))._field_TypeSym != nullptr)) {
		if ((!(_1ab88b56a_checkTypeSym(_self_, &((*((*(_124335_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124335_e))))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1ab94292e_Prim> _12677_t = _1ab93bebc_Prim((*((*((*(_124335_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12677_t == nullptr)) {
		_1ab886477_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ab945de9_IsStr(_12677_t.ptr())) {
			_case_begin_1b07dbb04:;
			{
				_1ab89450c_checkEnumItemsStr(_self_, _124335_e);
			}
		}
		else if (_1ab11827b_IsInt(_1ab942ca3_Str(_12677_t.ptr()))) {
			_case_begin_1b07db7d5:;
			{
				_1ab8951ab_checkEnumItemsInt(_self_, _124335_e);
			}
		}
		else {
			_case_begin_1b07dab9c:;
			{
				_1ab886477_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b07dac8a:;
	};
}



inline void _1ab89571c_checkTypeEnumDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab098eba_TypeEnum>* _128439_e) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_128439_e))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ab88718c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128439_e))), &((*((*(_128439_e))))._field_Ident), false)) {
		_1ab886477_pushErr(_self_, (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128439_e))))._field_Items.len() == 0LL)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1b07e2489_checkEnumItemsDup(_self_, (*((*(_128439_e))))._field_Items);
	{
		auto expr = &((*((*(_128439_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07e2dd5:;
		if (it != expr_end) {
			jule::Ptr<_1ab0988e3_TypeEnumItem> _129815_item = *it;
			{
				if (((*(_129815_item))._field_TypeSym == nullptr)) {
					_1ab886477_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1b07e2dd5;
				};
				jule::Bool _13034_ok = _1ab88b56a_checkTypeSym(_self_, &((*_129815_item.alloc)._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));;
				if ((!(_13034_ok))) {
					goto _iter_next_1b07e2dd5;
				};
				jule::Ptr<_1ab94292e_Prim> _13074_p = _1ab93bebc_Prim((*((*_129815_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13074_p != nullptr) && _1ab946180_IsAny(_13074_p))) {
					_1ab886477_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b07e2dd5:;
			++it;
			goto _iter_begin_1b07e2dd5;
		}
		_iter_end_1b07e2dd5:;
	};
	if (((*((*(_128439_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ab0988e3_TypeEnumItem> _13138_item = (*((*(_128439_e))))._field_Items[0LL];;
		_1ab939816_Type _13144_tk = _1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128439_e)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data4)};;
		if ((((*((*(_13138_item))._field_TypeSym))._field_Type != nullptr) && _1ab93a053_Equal((*((*(_13138_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1ab939816_Type>)((&(_13144_tk))))))) {
			_1ab886477_pushErr(_self_, (*_13138_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab09933e_Str((*(_128439_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1ab8959a3_checkEnumDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07ede02:;
		if (it != expr_end) {
			jule::Ptr<_1ab0977b0_Enum> _132515_e = *it;
			{
				_1ab895464_checkEnumDecl(_self_, &(_132515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b07ede02:;
			++it;
			goto _iter_begin_1b07ede02;
		}
		_iter_end_1b07ede02:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab895c39_checkTypeEnumDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08005c9:;
		if (it != expr_end) {
			jule::Ptr<_1ab098eba_TypeEnum> _133715_e = *it;
			{
				_1ab89571c_checkTypeEnumDecl(_self_, &(_133715_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b08005c9:;
			++it;
			goto _iter_begin_1b08005c9;
		}
		_iter_end_1b08005c9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab89607a_checkDeclGenerics(_1ab883573_sema* _self_, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _134734_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134734_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0800b7e:;
		if (it != expr_end) {
			jule::I64 _13497_i = it - expr->begin();
			jule::Ptr<_1a378dcc2_GenericDecl> *_134910_g = it;
			{
				if (_1ab6a7dc0_IsIgnoreIdent((*((*(_134910_g))))._field_Ident)) {
					_1ab886477_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b0800b7e;
				};
				_julec_label_1b0802b09:;
				{
					auto expr = _134734_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b08035dd:;
					if (it != expr_end) {
						jule::I64 _13588_j = it - expr->begin();
						jule::Ptr<_1a378dcc2_GenericDecl> *_135811_ct = it;
						{
							{
								
								if ((_13588_j >= _13497_i)) {
									_case_begin_1b08041b0:;
									{
										goto _iter_end_1b08035dd;
									}
								}
								else if (((*(*(_134910_g)).alloc)._field_Ident == (*((*(_135811_ct))))._field_Ident)) {
									_case_begin_1b0804248:;
									{
										_1ab886477_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_134910_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b08035dd;
									}
								}
								_match_end_1b08040b1:;
							};
						}
						_iter_next_1b08035dd:;
						++it;
						_13588_j++;
						goto _iter_begin_1b08035dd;
					}
					_iter_end_1b08035dd:;
				};
			}
			_iter_next_1b0800b7e:;
			++it;
			_13497_i++;
			goto _iter_begin_1b0800b7e;
		}
		_iter_end_1b0800b7e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab8963bb_checkFnDeclParamsDup(_1ab883573_sema* _self_, jule::Ptr<_1ab0898e5_Fn>* _137437_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1b0803ec3:;
	{
		auto expr = &((*((*(_137437_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0804eb3:;
		if (it != expr_end) {
			jule::I64 _13777_i = it - expr->begin();
			jule::Ptr<_1ab087e21_Param> *_137710_p = it;
			{
				{
					auto expr = &((*((*(_137437_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0806e60:;
					if (it != expr_end) {
						jule::Ptr<_1a378dcc2_GenericDecl> *_137911_g = it;
						{
							if (((*((*(_137710_p))))._field_Ident == (*((*(_137911_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ab886477_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1b0804eb3;
							};
						}
						_iter_next_1b0806e60:;
						++it;
						goto _iter_begin_1b0806e60;
					}
					_iter_end_1b0806e60:;
				};
				_julec_label_1b0808e73:;
				{
					auto expr = &((*((*(_137437_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0807438:;
					if (it != expr_end) {
						jule::I64 _13898_j = it - expr->begin();
						jule::Ptr<_1ab087e21_Param> *_138911_jp = it;
						{
							{
								
								if ((_13898_j >= _13777_i)) {
									_case_begin_1b0809a34:;
									{
										goto _iter_end_1b0807438;
									}
								}
								else if (_1ab6a7dc0_IsIgnoreIdent((*(*(_137710_p)).alloc)._field_Ident) || _1ab6a7dc0_IsIgnoreIdent((*((*(_138911_jp))))._field_Ident) || _1ab6a8189_IsAnonIdent((*(*(_137710_p)).alloc)._field_Ident) || _1ab6a8189_IsAnonIdent((*(*(_138911_jp)).alloc)._field_Ident)) {
									_case_begin_1b0809abc:;
									{
										goto _iter_end_1b0807438;
									}
								}
								else if (((*(*(_137710_p)).alloc)._field_Ident == (*((*(_138911_jp))))._field_Ident)) {
									_case_begin_1b0809b33:;
									{
										__jule_func_result=false;
										_1ab886477_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1b0804eb3;
									}
								}
								_match_end_1b08098e1:;
							};
						}
						_iter_next_1b0807438:;
						++it;
						_13898_j++;
						goto _iter_begin_1b0807438;
					}
					_iter_end_1b0807438:;
				};
			}
			_iter_next_1b0804eb3:;
			++it;
			_13777_i++;
			goto _iter_begin_1b0804eb3;
		}
		_iter_end_1b0804eb3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab89670c_checkFnDeclResultDup(_1ab883573_sema* _self_, jule::Ptr<_1ab0898e5_Fn>* _141137_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ab089d9b_IsVoid((*(_141137_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_141137_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b080d0a9:;
		if (it != expr_end) {
			jule::I64 _14187_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> *_141810_v = it;
			{
				if ((_1ab6a7dc0_IsIgnoreIdent((*((*(_141810_v))))._field_Kind) || _1ab6a8189_IsAnonIdent((*(*(_141810_v)).alloc)._field_Kind))) {
					goto _iter_next_1b080d0a9;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b080e693:;
					if (it != expr_end) {
						jule::Ptr<_1a378dcc2_GenericDecl> *_142311_g = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142311_g))))._field_Ident)) {
								goto _julec_label_1b0810c38;
							};
						}
						_iter_next_1b080e693:;
						++it;
						goto _iter_begin_1b080e693;
					}
					_iter_end_1b080e693:;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b080ea8e:;
					if (it != expr_end) {
						jule::Ptr<_1ab087e21_Param> *_142911_p = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142911_p))))._field_Ident)) {
								goto _julec_label_1b0810c38;
							};
						}
						_iter_next_1b080ea8e:;
						++it;
						goto _iter_begin_1b080ea8e;
					}
					_iter_end_1b080ea8e:;
				};
				_julec_label_1b0811211:;
				{
					auto expr = &((*((*((*(_141137_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b081160c:;
					if (it != expr_end) {
						jule::I64 _14378_j = it - expr->begin();
						jule::Ptr<_1ab6a54d8_Token> *_143711_jv = it;
						{
							{
								
								if ((_14378_j >= _14187_i)) {
									_case_begin_1b081219b:;
									{
										goto _iter_end_1b081160c;
									}
								}
								else if (((*((*(_143711_jv))))._field_Kind == (*(*(_141810_v)).alloc)._field_Kind)) {
									_case_begin_1b0812234:;
									{
										goto _julec_label_1b0810c38;
									}
								}
								_match_end_1b081208b:;
							};
						}
						_iter_next_1b081160c:;
						++it;
						_14378_j++;
						goto _iter_begin_1b081160c;
					}
					_iter_end_1b081160c:;
				};
				goto _iter_next_1b080d0a9;
				_julec_label_1b0810c38:;
				_1ab886477_pushErr(_self_, (*(_141810_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_141810_v)).alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b080d0a9:;
			++it;
			_14187_i++;
			goto _iter_begin_1b080d0a9;
		}
		_iter_end_1b080d0a9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab896a4d_checkFnVariadicParam(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _145642_f) {
	if (((*((*(_145642_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ab087e21_Param> _14607_param = (*((*(_145642_f))))._field_Params[((*((*(_145642_f))))._field_Params.len() - 1LL)];;
	if (((*(_14607_param))._field_Variadic && (*_14607_param.alloc)._field_Reference)) {
		_1ab886477_pushErr(_self_.ptr(), (*_14607_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ab896d06_checkFnDeclPrototype(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _146942_f) {
	if (((*((*(_146942_f))))._field_Exceptional && (*((*(_146942_f))))._field_Binded)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_146942_f))))._field_Exceptional) {
		if (_1ab08a3b8_IsEntryPoint((*(_146942_f)).ptr())) {
			_1ab886477_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1ab08a64e_IsInit((*(_146942_f)).ptr())) {
			_1ab886477_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ab89607a_checkDeclGenerics(_self_, &((*((*(_146942_f))))._field_Generics))))) {
			_case_begin_1b081900a:;
		}
		else if ((!(_1ab8963bb_checkFnDeclParamsDup(_self_, _146942_f)))) {
			_case_begin_1b0819071:;
		}
		else if ((!(_1ab89670c_checkFnDeclResultDup(_self_, _146942_f)))) {
			_case_begin_1b08190d7:;
		}
		else if ((!(_1ab896a4d_checkFnVariadicParam(_self_, _146942_f)))) {
			_case_begin_1b081914d:;
		}
		_match_end_1b081725b:;
	};
}



inline jule::Bool _1ab8972ac_catchTraitInheritCycle(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait> _149139_t1, jule::Ptr<_1ab095109_Trait> _149155_t2, _1a387dcd5_Builder* _149172_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_149155_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b081b6c2:;
		if (it != expr_end) {
			jule::Ptr<_1ab942027_TypeSym> _149315_i = *it;
			{
				if (((*(_149315_i))._field_Type == nullptr)) {
					goto _iter_next_1b081b6c2;
				};
				jule::Ptr<_1ab095109_Trait> _14978_t3 = _1ab93d7c6_Trait((*_149315_i.alloc)._field_Type.ptr());;
				if ((_149139_t1 == _14978_t3)) {
					_1ab89c03c_pushCycleError(_self_.ptr(), &((*(_149155_t2))._field_Ident), &((*(_14978_t3))._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ab8972ac_catchTraitInheritCycle(_self_, _149139_t1, _14978_t3, _149172_message)))) {
					_1ab89c03c_pushCycleError(_self_, &((*_149155_t2.alloc)._field_Ident), &((*_14978_t3.alloc)._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b081b6c2:;
			++it;
			goto _iter_begin_1b081b6c2;
		}
		_iter_end_1b081b6c2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab8975ed__checkTraitDeclInherits(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _151045_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_151045_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b081ee89:;
		if (it != expr_end) {
			jule::I64 _15128_i = it - expr->begin();
			jule::Ptr<_1ab942027_TypeSym> _151215_it = *it;
			{
				if ((!(_1ab88b56a_checkTypeSym(_self_, &(_151215_it), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1b081ee89;
				};
				jule::Ptr<_1ab095109_Trait> _15178_t2 = _1ab93d7c6_Trait((*(_151215_it))._field_Type.ptr());;
				if ((_15178_t2 == nullptr)) {
					_1ab886477_pushErr(_self_, (*((*_151215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_151215_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b081ee89;
				};
				{
					auto expr = &((*((*(_151045_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0821d15:;
					if (it != expr_end) {
						jule::I64 _15238_j = it - expr->begin();
						jule::Ptr<_1ab942027_TypeSym> _152311_it2 = *it;
						{
							if ((_15238_j >= _15128_i)) {
								goto _iter_end_1b0821d15;
							};
							if ((((*(_152311_it2))._field_Type != nullptr) && _1ab93a053_Equal((*(_151215_it))._field_Type, (*_152311_it2.alloc)._field_Type))) {
								_1ab886477_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15178_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1b0821d15;
							};
						}
						_iter_next_1b0821d15:;
						++it;
						_15238_j++;
						goto _iter_begin_1b0821d15;
					}
					_iter_end_1b0821d15:;
				};
				if (((*(_151045_t)) == _15178_t2)) {
					_1ab886477_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1a387dcd5_Builder _15379_message = static__1a387e654_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ab8972ac_catchTraitInheritCycle(_self_, (*(_151045_t)), _15178_t2, &(_15379_message)));
					if ((_1a3880aea_Len(&_15379_message) > 0LL)) {
						jule::Str _154010_errMsg = _1a3880666_Str(&_15379_message);;
						_1a3880864_Clear(&_15379_message);
						_1ab89c03c_pushCycleError(_self_, &((*((*(_151045_t))))._field_Ident), &((*(_15178_t2))._field_Ident), &(_15379_message));
						_154010_errMsg+=_1a3880666_Str(&_15379_message);
						_1ab886477_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_154010_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1b081ee89:;
			++it;
			_15128_i++;
			goto _iter_begin_1b081ee89;
		}
		_iter_end_1b081ee89:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab8978a6_checkTraitDeclInherits(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _155144_t) {
	{
		auto expr = &((*((*(_155144_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0820792:;
		if (it != expr_end) {
			jule::I64 _15528_i = it - expr->begin();
			jule::Ptr<_1ab942027_TypeSym> _155215_it = *it;
			{
				jule::Ptr<_1ab095109_Trait> _15538_t1 = _1ab93d7c6_Trait((*(_155215_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_155144_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b082b858:;
					if (it != expr_end) {
						jule::I64 _15549_j = it - expr->begin();
						jule::Ptr<_1ab942027_TypeSym> _155416_it2 = *it;
						{
							if ((_15549_j == _15528_i)) {
								goto _iter_next_1b082b858;
							};
							jule::Ptr<_1ab095109_Trait> _15589_t2 = _1ab93d7c6_Trait((*(_155416_it2))._field_Type);;
							{
								auto expr = &((*(_15538_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b082d0eb:;
								if (it != expr_end) {
									jule::Ptr<_1ab0898e5_Fn> _155917_t1m = *it;
									{
										jule::Ptr<_1ab0898e5_Fn> _156010_t2m = _1ab095cdb_FindMethod(_15589_t2.ptr(), (*(_155917_t1m))._field_Ident);;
										if ((_156010_t2m == nullptr)) {
											goto _iter_next_1b082d0eb;
										};
										jule::Ptr<_1ab08c9a3_FnIns> _15646_t1f = _1ab89098c_getTraitCheckFnKind(_self_, &(_155917_t1m));;
										jule::Ptr<_1ab08c9a3_FnIns> _15656_t2f = _1ab89098c_getTraitCheckFnKind(_self_, &(_156010_t2m));;
										if ((!(_1ab08d94e_equalTrait(_15646_t1f, &(_15656_t2f))))) {
											_1ab886477_pushErr(_self_, (*((*_155215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_155144_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15589_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ab08e884_GetKindStr(_15646_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1ab08e884_GetKindStr(_15656_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1b082d0eb:;
									++it;
									goto _iter_begin_1b082d0eb;
								}
								_iter_end_1b082d0eb:;
							};
						}
						_iter_next_1b082b858:;
						++it;
						_15549_j++;
						goto _iter_begin_1b082b858;
					}
					_iter_end_1b082b858:;
				};
			}
			_iter_next_1b0820792:;
			++it;
			_15528_i++;
			goto _iter_begin_1b0820792;
		}
		_iter_end_1b0820792:;
	};
}



inline void _1ab897b5e_checkTraitDeclMethod(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _157642_f) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_157642_f))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ab6a8189_IsAnonIdent((*((*(_157642_f))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157642_f))))._field_sema=_self_;
	_1ab896d06_checkFnDeclPrototype(_self_, _157642_f);
	jule::Ptr<_1ab08c9a3_FnIns> _15847_ins = _1ab08b188_instance((*(_157642_f)));;
	_1ab8922da_reloadFnInsTypes(_self_, _15847_ins);
	(*(_15847_ins))._field_reloaded=true;
	_1ab08b496_appendInstance((*(_157642_f)).ptr(), &(_15847_ins));
}



inline void _1ab897e17_checkTraitDeclMethods(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _159043_t) {
	{
		auto expr = &((*((*(_159043_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0835763:;
		if (it != expr_end) {
			jule::I64 _15918_i = it - expr->begin();
			jule::Ptr<_1ab0898e5_Fn> _159115_f = *it;
			{
				_1ab897b5e_checkTraitDeclMethod(_self_, &(_159115_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ab09646d_findMethodInherit((*(_159043_t)).ptr(), &((*(_159115_f))._field_Ident)) != nullptr)) {
					_1ab886477_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1b0835763;
				};
				_julec_label_1b08385e0:;
				{
					auto expr = &((*((*(_159043_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0838a1e:;
					if (it != expr_end) {
						jule::I64 _16078_j = it - expr->begin();
						jule::Ptr<_1ab0898e5_Fn> _160711_jf = *it;
						{
							{
								
								if ((_16078_j >= _15918_i)) {
									_case_begin_1b08395ad:;
									{
										goto _iter_end_1b0838a1e;
									}
								}
								else if (((*_159115_f.alloc)._field_Ident == (*(_160711_jf))._field_Ident)) {
									_case_begin_1b0839646:;
									{
										_1ab886477_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1b0838a1e;
									}
								}
								_match_end_1b083949d:;
							};
						}
						_iter_next_1b0838a1e:;
						++it;
						_16078_j++;
						goto _iter_begin_1b0838a1e;
					}
					_iter_end_1b0838a1e:;
				};
			}
			_iter_next_1b0835763:;
			++it;
			_15918_i++;
			goto _iter_begin_1b0835763;
		}
		_iter_end_1b0835763:;
	};
}



inline void _1ab8981c0_checkTraitDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab095109_Trait>* _162636_t) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_162636_t))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ab88718c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162636_t))), &((*((*(_162636_t))))._field_Ident), false)) {
		_1ab886477_pushErr(_self_, (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162636_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ab8978a6_checkTraitDeclInherits(_self_, _162636_t);
	_1ab897e17_checkTraitDeclMethods(_self_, _162636_t);
}



inline jule::Bool _1ab898456_checkTraitDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b083e86b:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _164015_t = *it;
			{
				_1ab8981c0_checkTraitDecl(_self_, &(_164015_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b083e86b:;
			++it;
			goto _iter_begin_1b083e86b;
		}
		_iter_end_1b083e86b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab898852_checkTraitImplMethods(_1ab883573_sema* _self_, jule::Ptr<_1ab095109_Trait>* _165042_base, jule::Ptr<_1ab8315ba_Impl>* _165057_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165057_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0841351:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> *_165210_f = it;
			{
				if ((_1ab095cdb_FindMethod((*(_165042_base)).ptr(), (*((*(_165210_f))))._field_Ident) == nullptr)) {
					_1ab886477_pushErr(_self_, (*(*(_165210_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165042_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165210_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1b0841351:;
			++it;
			goto _iter_begin_1b0841351;
		}
		_iter_end_1b0841351:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab898c4d_implToStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _166134_dest, jule::Ptr<_1ab8315ba_Impl>* _166154_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166154_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0843bc2:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _166515_f = *it;
			{
				if (((_1a37a3226_FindMethod((*(_166134_dest)).ptr(), (*(_166515_f))._field_Ident, (*_166515_f.alloc)._field_Statically) != nullptr) || (_1a37a38a8_FindField((*(_166134_dest)).ptr(), (*_166515_f.alloc)._field_Ident) != nullptr))) {
					_1ab886477_pushErr(_self_.ptr(), (*_166515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166515_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b0843bc2;
				};
				if ((((*((*(_166134_dest))))._field_Generics.len() > 0LL) && ((*_166515_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166515_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b0846c5d:;
						if (it != expr_end) {
							jule::Ptr<_1a378dcc2_GenericDecl> _167312_fg = *it;
							{
								{
									auto expr = &((*((*(_166134_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b08476ba:;
									if (it != expr_end) {
										jule::Ptr<_1a378dcc2_GenericDecl> _167413_dg = *it;
										{
											if (((*(_167312_fg))._field_Ident == (*(_167413_dg))._field_Ident)) {
												_1ab886477_pushErr(_self_, (*_167312_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b08476ba:;
										++it;
										goto _iter_begin_1b08476ba;
									}
									_iter_end_1b08476ba:;
								};
							}
							_iter_next_1b0846c5d:;
							++it;
							goto _iter_begin_1b0846c5d;
						}
						_iter_end_1b0846c5d:;
					};
				};
				_1ab887500_checkDirectives(_self_, &((*_166515_f.alloc)._field_Directives), jule::Any(_166515_f, &__jule_any_type10));
				(*_166515_f.alloc)._field_sema=_self_;
				(*_166515_f.alloc)._field_Owner=(*(_166134_dest));
				{ jule::Slice<jule::Ptr<_1ab0898e5_Fn>> &__jule_push_dest = (*((*(_166134_dest))))._field_Methods; __jule_push_dest.push(_166515_f); };
			}
			_iter_next_1b0843bc2:;
			++it;
			goto _iter_begin_1b0843bc2;
		}
		_iter_end_1b0843bc2:;
	};
	{
		auto expr = &((*((*(_166154_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08440ac:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _169015_v = *it;
			{
				;
				if (((_1a37a3226_FindMethod((*(_166134_dest)).ptr(), (*(_169015_v))._field_Ident, true) != nullptr) || (_1a37a3567_FindStatic((*(_166134_dest)).ptr(), (*_169015_v.alloc)._field_Ident) != nullptr))) {
					_1ab886477_pushErr(_self_, (*_169015_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169015_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b08440ac;
				};
				{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = (*((*(_166134_dest))))._field_Statics; __jule_push_dest.push(_169015_v); };
			}
			_iter_next_1b08440ac:;
			++it;
			goto _iter_begin_1b08440ac;
		}
		_iter_end_1b08440ac:;
	};
	return __jule_func_result;;
}



inline void _1ab899006_implTrait(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8315ba_Impl>* _170331_decl) {
	jule::Ptr<_1ab939816_Type> _17047_base_t = _1ab88c659_selectType(_self_, &((*((*(_170331_decl))))._field_Base));;
	if ((_17047_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab095109_Trait> _17087_base = _1ab93d7c6_Trait(_17047_base_t.ptr());;
	if ((_17087_base == nullptr)) {
		_1ab886477_pushErr(_self_, (*((*((*(_170331_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str(_17047_base_t.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab939816_Type> _17157_destT = _1ab88c659_selectType(_self_, &((*((*(_170331_decl))))._field_Dest));;
	if ((_17157_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _17197_destS = _1ab93d540_Struct(_17157_destT.ptr());;
	if ((_17197_destS == nullptr)) {
		_1ab886477_pushErr(_self_, (*((*((*(_170331_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str(_17157_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a37a2577_Struct> _17267_dest = (*(_17197_destS))._field_Decl;;
	if ((_1ab6ab852_Dir((*((*(_17267_dest))._field_Token))._field_File.ptr()) != _1ab6ab852_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ab886477_pushErr(_self_, (*(*((*(_170331_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1ab8a51dd_pushImplemented(_17087_base, &(_17267_dest));
	_1ab8a54c9_pushImplements(&(_17267_dest), _17087_base);
	if (((*((*(_170331_decl))))._field_Statics.len() > 0LL)) {
		_1ab886477_pushErr(_self_, (*((*((*(_170331_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ab898852_checkTraitImplMethods(_self_, &(_17087_base), _170331_decl)))) {
			_case_begin_1b0857653:;
		}
		else if ((!(_1ab898c4d_implToStruct(_self_, &(_17267_dest), _170331_decl)))) {
			_case_begin_1b08576b9:;
		}
		_match_end_1b0856696:;
	};
}



inline void _1ab8992ae_implStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8315ba_Impl>* _174632_decl) {
	jule::Ptr<_1ab939816_Type> _17477_destT = _1ab88c659_selectType(_self_, &((*((*(_174632_decl))))._field_Dest));;
	if ((_17477_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _17517_destS = _1ab93d540_Struct(_17477_destT.ptr());;
	if ((_17517_destS == nullptr)) {
		_1ab886477_pushErr(_self_, (*((*((*(_174632_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str(_17477_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a37a2577_Struct> _17587_dest = (*(_17517_destS))._field_Decl;;
	if ((_1ab6ab852_Dir((*((*(_17587_dest))._field_Token))._field_File.ptr()) != _1ab6ab852_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ab886477_pushErr(_self_, (*(*((*(_174632_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ab898c4d_implToStruct(_self_, &(_17587_dest), _174632_decl)))) {
			_case_begin_1b085d4c2:;
		}
		_match_end_1b085ba86:;
	};
}



inline void _1ab899567_implImpl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8315ba_Impl>* _177030_decl) {
	{
		
		if (_1ab8319b6_IsTraitImpl((*(_177030_decl)).ptr())) {
			_case_begin_1b085e061:;
			{
				_1ab899006_implTrait(_self_, _177030_decl);
			}
		}
		else if (_1ab831c4c_IsStructImpl((*(_177030_decl)).ptr())) {
			_case_begin_1b085e10a:;
			{
				_1ab8992ae_implStruct(_self_, _177030_decl);
			}
		}
		_match_end_1b085de40:;
	};
}



inline void _1ab8998ca_checkVarDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _178134_decl, jule::Trait _178150_l) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_178134_decl))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1ab8a792c_IsTypeInferred((*(_178134_decl)).ptr())) {
		if ((!(_1ab8a7696_IsInitialized((*(_178134_decl)).ptr())))) {
			_1ab886477_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1ab854577_ReferenceStack> _17918_refers = static_cast<jule::Ptr<_1ab854577_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _178150_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4)) {
				_case_begin_1b0863230:;
				{
					_17918_refers=(*((*(_178134_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
				_case_begin_1b0863708:;
				{
					_17918_refers=_1ab841861_getOwnerRefers(_178150_l.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1b086331d:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1798:5"));;
				}
			}
			_match_end_1b08632a7:;
		};
		(*((*((*(_178134_decl))))._field_TypeSym))._field_Type=_1ab88ba21_checkTypeSymRefers(_self_, &((*(*((*(_178134_decl))))._field_TypeSym.alloc)._field_Decl), _178150_l, _17918_refers);
	};
	if ((*((*(_178134_decl))))._field_Reference) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1ab886477_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1ab886477_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ab8a7696_IsInitialized((*(_178134_decl)).ptr())))) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1ab886477_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1ab886477_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Reference) {
			_1ab886477_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ab899b83_checkGlobalVarDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _182740_decl) {
	if (_1ab88718c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182740_decl))), &((*((*(_182740_decl))))._field_Ident), (*((*(_182740_decl))))._field_Binded)) {
		_1ab886477_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182740_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182740_decl))))._field_Binded && (*((*(_182740_decl))))._field_Constant)) {
		_1ab886477_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182740_decl))))._field_Binded)) && (!((*((*(_182740_decl))))._field_Constant))) && (!((*((*(_182740_decl))))._field_Statically)))) {
		_1ab886477_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1ab887500_checkDirectives(_self_, &((*((*(_182740_decl))))._field_Directives), jule::Any((*(_182740_decl)), &__jule_any_type7));
	_1ab8998ca_checkVarDecl(_self_, _182740_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));
}



inline jule::Bool _1ab899e19_checkGlobalDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08703d5:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _184515_decl = *it;
			{
				_1ab899b83_checkGlobalVarDecl(_self_, &(_184515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b08703d5:;
			++it;
			goto _iter_begin_1b08703d5;
		}
		_iter_end_1b08703d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab89a315_checkStructTraitImpl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _185542_strct, jule::Ptr<_1ab095109_Trait>* _185563_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185563_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0871cbb:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _185615_tf = *it;
			{
				jule::Bool _18578_exist = false;;
				jule::Ptr<_1ab0898e5_Fn> _18588_sf = _1a37a3226_FindMethod((*(_185542_strct)).ptr(), (*(_185615_tf))._field_Ident, (*_185615_tf.alloc)._field_Statically);;
				jule::Ptr<_1ab08c9a3_FnIns> _18594_tfK = _1ab89098c_getTraitCheckFnKind(_self_, &(_185615_tf));;
				if ((_18588_sf != nullptr)) {
					jule::Ptr<_1ab08c9a3_FnIns> _18619_sfK = _1ab89098c_getTraitCheckFnKind(_self_, &(_18588_sf));;
					if ((_18619_sfK != nullptr)) {
						_18578_exist=_1ab08d94e_equalTrait(_18594_tfK, &(_18619_sfK));
					};
				};
				if (_18578_exist) {
					jule::Ptr<_1ab6bec94_Directive> _18675_d = _1ab93108d_findDirective(&((*_18588_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18675_d != nullptr)) {
						_1ab886477_pushErr(_self_, (*_18675_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ab886477_pushErr(_self_, (*((*(_185542_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185563_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ab08e884_GetKindStr(_18594_tfK, true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1b0871cbb:;
			++it;
			goto _iter_begin_1b0871cbb;
		}
		_iter_end_1b0871cbb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab89a656_checkStructImpls(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _188138_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188138_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08781ce:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _188315_trt = *it;
			{
				__jule_func_result=(_1ab89a315_checkStructTraitImpl(_self_, _188138_s, &(_188315_trt)) && __jule_func_result);
			}
			_iter_next_1b08781ce:;
			++it;
			goto _iter_begin_1b08781ce;
		}
		_iter_end_1b08781ce:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab89a997_checkStructFields(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _188939_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188939_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0879675:;
		if (it != expr_end) {
			jule::Ptr<_1a379e651_Field> _189115_f = *it;
			{
				(*(_189115_f))._field_Owner=(*(_188939_st));
				{
					auto expr = &((*((*(_188939_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b087a39b:;
					if (it != expr_end) {
						jule::Ptr<_1a379e651_Field> _189311_cf = *it;
						{
							if ((_189115_f == _189311_cf)) {
								goto _iter_end_1b087a39b;
							} else if (((*_189115_f.alloc)._field_Ident == (*(_189311_cf))._field_Ident)) {
								_1ab886477_pushErr(_self_.ptr(), (*_189115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_189115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b087a39b:;
						++it;
						goto _iter_begin_1b087a39b;
					}
					_iter_end_1b087a39b:;
				};
			}
			_iter_next_1b0879675:;
			++it;
			goto _iter_begin_1b0879675;
		}
		_iter_end_1b0879675:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab89ac50_checkStructDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _190637_s) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_190637_s))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ab88718c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190637_s))), &((*((*(_190637_s))))._field_Ident), (*((*(_190637_s))))._field_Binded)) {
		_1ab886477_pushErr(_self_, (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190637_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ab887500_checkDirectives(_self_, &((*((*(_190637_s))))._field_Directives), jule::Any((*(_190637_s)), &__jule_any_type9));
	{
		
		if ((!(_1ab89607a_checkDeclGenerics(_self_, &((*((*(_190637_s))))._field_Generics))))) {
			_case_begin_1b088077a:;
		}
		else if ((!(_1ab89a997_checkStructFields(_self_, _190637_s)))) {
			_case_begin_1b08807e1:;
		}
		else if ((!(_1ab89a656_checkStructImpls(_self_, _190637_s)))) {
			_case_begin_1b0880857:;
		}
		else if ((!(_1ab89b888_checkFuncDeclsBy(_self_, &((*((*(_190637_s))))._field_Methods))))) {
			_case_begin_1b08808bd:;
		}
		_match_end_1b0880648:;
	};
}



inline jule::Bool _1ab89aed6_checkStructDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0882c22:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _192615_s = *it;
			{
				_1ab89ac50_checkStructDecl(_self_, &(_192615_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0882c22:;
			++it;
			goto _iter_begin_1b0882c22;
		}
		_iter_end_1b0882c22:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab89b28e_checkAnonFuncDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _193639_f) {
	(*((*(_193639_f))))._field_sema=_self_;
	_1ab896d06_checkFnDeclPrototype(_self_, _193639_f);
}



inline void _1ab89b547_checkFuncDecl(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _194135_f) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_194135_f))))._field_Ident)) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ab08a8d5_IsAnon((*(_194135_f)).ptr())) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1ab887500_checkDirectives(_self_, &((*((*(_194135_f))))._field_Directives), jule::Any((*(_194135_f)), &__jule_any_type10));
	_1ab89b28e_checkAnonFuncDecl(_self_, _194135_f);
	if ((((*((*(_194135_f))))._field_Owner == nullptr) && _1ab88718c_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_194135_f))), &((*((*(_194135_f))))._field_Ident), (*((*(_194135_f))))._field_Binded))) {
		if ((*((*(_194135_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ab0898e5_Fn> _19535_init = _1ab884b3a_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19535_init != nullptr)) {
				return;;
			};
		};
		_1ab886477_pushErr(_self_, (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194135_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab89b888_checkFuncDeclsBy(jule::Ptr<_1ab883573_sema> _self_, jule::Slice<jule::Ptr<_1ab0898e5_Fn>>* _196338_funcs) {
	{
		auto expr = _196338_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b088a631:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _196415_f = *it;
			{
				_1ab89b547_checkFuncDecl(_self_, &(_196415_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b088a631:;
			++it;
			goto _iter_begin_1b088a631;
		}
		_iter_end_1b088a631:;
	};
	return true;;
}



inline jule::Bool _1ab89bb1e_checkFuncDecls(jule::Ptr<_1ab883573_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab89b888_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ab89c03c_pushCycleError(_1ab883573_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _1a387dcd5_Builder* _197953_message) {
	;
	jule::Str _19813_refersTo = _1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_197927_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_197938_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19823_m = _1a3880666_Str(_197953_message);;
	({
		auto except = _1a387ecd6_WriteStr(_197953_message, _1a87a8754_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1983:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_197953_message, _19813_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1984:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_197953_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1985:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_197953_message, _19823_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1986:3"));
		(except.result);
	});
}



inline void _1ab89c6e1_checkPackageDecls(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0892418:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _200615_f = *it;
			{
				_1ab886059_setCurrentFile(_self_.ptr(), _200615_f);
				if ((!(_1ab893e9b_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b0892418:;
			++it;
			goto _iter_begin_1b0892418;
		}
		_iter_end_1b0892418:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b089289c:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _201315_f = *it;
			{
				_1ab886059_setCurrentFile(_self_, _201315_f);
				if ((!(_1ab898456_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b089289c:;
			++it;
			goto _iter_begin_1b089289c;
		}
		_iter_end_1b089289c:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08938ae:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _202015_f = *it;
			{
				_1ab886059_setCurrentFile(_self_, _202015_f);
				if ((!(_1ab899e19_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b08938ae:;
			++it;
			goto _iter_begin_1b08938ae;
		}
		_iter_end_1b08938ae:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0894915:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _202715_f = *it;
			{
				_1ab886059_setCurrentFile(_self_, _202715_f);
				{
					
					if ((!(_1ab89bb1e_checkFuncDecls(_self_)))) {
						_case_begin_1b0896065:;
					}
					else if ((!(_1ab89aed6_checkStructDecls(_self_)))) {
						_case_begin_1b089610e:;
					}
					else {
						_case_begin_1b08959b0:;
						{
							goto _iter_next_1b0894915;
						}
					}
					_match_end_1b0895ebb:;
				};
				return;;
			}
			_iter_next_1b0894915:;
			++it;
			goto _iter_begin_1b0894915;
		}
		_iter_end_1b0894915:;
	};
}



inline void _1ab89ca54_checkDataForTypeInference(_1ab883573_sema* _self_, jule::Ptr<_1ab906a8b_Data>* _203942_d, jule::Ptr<_1ab6a54d8_Token>* _203953_errToken) {
	{
		
		if (_1ab906ea9_IsNil((*(_203942_d)).ptr())) {
			_case_begin_1b089720e:;
			{
				_1ab886477_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1ab907240_IsVoid((*(_203942_d)).ptr())) {
			_case_begin_1b08972a8:;
			{
				_1ab886477_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_203942_d))))._field_Type))._field_Variadic) {
			_case_begin_1b089731e:;
			{
				_1ab886477_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b08970cc:;
	};
}



inline void _1ab89cd0c_checkVarValue(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _205135_v) {
	if (_1ab8a792c_IsTypeInferred((*(_205135_v)).ptr())) {
		(*((*(_205135_v))))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Type});
		_1ab89ca54_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1ab8931ed_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*((*((*(_205135_v))))._field_TypeSym))._field_Type), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1ab94924e_Arr> _20648_arr = _1ab93cc8c_Arr((*((*((*(_205135_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_20648_arr != nullptr)) {
			if ((*_20648_arr.alloc)._field_Auto) {
				jule::Ptr<_1ab94924e_Arr> _20676_dataArr = _1ab93cc8c_Arr((*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_20676_dataArr != nullptr)) {
					(*_20648_arr.alloc)._field_N=(*_20676_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1ab88d968_checkAssignType(_self_, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_205135_v))))._field_Refers)) {
			_1ab8931ed_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_205135_v))))._field_Reference && (!(_1ab956723_isValidForRef(&((*((*((*(_205135_v))))._field_TypeSym))._field_Type)))))) {
		_1ab886477_pushErr(_self_.ptr(), (*((*(_205135_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	};
	if ((*((*(_205135_v))))._field_Constant) {
		if (((!(_1ab9074c6_IsConst((*((*((*(_205135_v))))._field_Value))._field_Data.ptr()))) && (!(_1ab93e079_comptime((*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1ab886477_pushErr(_self_, (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1ab93dce3_Tup((*((*((*(_205135_v))))._field_TypeSym))._field_Type) != nullptr)) {
		(*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1ab89d170_evalVarValue(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _210434_decl, jule::Trait _210450_l) {
	if ((!(_1ab8a7696_IsInitialized((*(_210434_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ab9087b3_eval> _21097_eval = static_cast<jule::Ptr<_1ab9087b3_eval>>(nullptr);;
	if (((*((*(_210434_decl))))._field_TypeSym != nullptr)) {
		_21097_eval=_1ab88cb10_evalpd(_self_, _210450_l, (*(*((*(_210434_decl))))._field_TypeSym.alloc)._field_Type, (*(_210434_decl)));
	} else {
		_21097_eval=_1ab88cb10_evalpd(_self_, _210450_l, nullptr, (*(_210434_decl)));
	};
	(*(_21097_eval))._field_immutable=(!((*((*(_210434_decl))))._field_Mutable));
	(*((*((*(_210434_decl))))._field_Value))._field_Data=_1ab927628_evalExpr(_21097_eval, (*(*((*(_210434_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1ab89d4d3_checkVar(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab8a7289_Var>* _212130_decl, jule::Trait _212146_l) {
	_1ab89d170_evalVarValue(_self_, _212130_decl, _212146_l);
	if (((*((*((*(_212130_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ab89cd0c_checkVarValue(_self_, _212130_decl);
}



inline void _1ab89d6d1_checkGlobals(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08ae666:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _213115_decl = *it;
			{
				if (((*(_213115_decl))._field_Binded || (*_213115_decl.alloc)._field_Used)) {
					goto _iter_next_1b08ae666;
				};
				_1ab89d4d3_checkVar(_self_, &(_213115_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));
			}
			_iter_next_1b08ae666:;
			++it;
			goto _iter_begin_1b08ae666;
		}
		_iter_end_1b08ae666:;
	};
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab89dacc_readyToCheckFn(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _214436_s, jule::Ptr<_1ab0898e5_Fn>* _214456_f) {
	jule::Ptr<_1ab08c9a3_FnIns> _21457_ins = _1ab08b188_instance((*(_214456_f)));;
	if (((*((*(_214456_f))))._field_Instances.len() != 0LL)) {
		return _21457_ins;;
	};
	(*(_21457_ins))._field_Owner=(*(_214436_s));
	_1ab08b496_appendInstance((*(_214456_f)).ptr(), &(_21457_ins));
	(*_21457_ins.alloc)._field_reloaded=true;
	if (_1ab8922da_reloadFnInsTypes(_self_, _21457_ins)) {
		return _21457_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab89dec8_checkGenericFn(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _216036_f, jule::Ptr<_1ab6a54d8_Token>* _216052_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1ab8922da_reloadFnInsTypes(_self_, (*(_216036_f)));
	(*((*(_216036_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _21667_existInstance = _1ab08b496_appendInstance((*((*(_216036_f))))._field_Decl.ptr(), _216036_f);;
	if ((!(_1ab890e43_checkConstraintsFn(_self_, _216036_f, _216052_et, _21667_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21667_existInstance != nullptr)) {
		(*(_216036_f))=_21667_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1ab8a1a36_checkFnInsCaller(_self_, _216036_f, (*(_216052_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1ab89e33b_checkTypeMethod(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _218337_s, jule::Ptr<_1ab0898e5_Fn>* _218357_f) {
	if (((*((*(_218357_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _21887_ins = (*((*(_218357_f))))._field_Instances[0LL];;
	if (((*((*(_21887_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ab8a1cde_checkFnIns(_self_, &(_21887_ins));
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab89e7e2_checkStructInsOp(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _219638_s, jule::Ptr<_1ab0898e5_Fn>* _219658_f, jule::Fn<jule::Bool,jule::Ptr<_1ab0898e5_Fn>> _219666_p) {
	if (((((*(_219658_f)) == nullptr) || ((*((*(_219658_f))))._field_Generics.len() > 0LL)) || (!(_219666_p((*(_219658_f))))))) {
		return nullptr;;
	};
	return (*((*(_219658_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ab89ebdd_checkStructEnv(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _220636_s, jule::Ptr<_1ab6a54d8_Token> _220655_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ab94bc13_typeChecker _22077_tc = _1ab94bc13_typeChecker{._field_s=(*((*((*(_220636_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220636_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220636_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1ab94ac23_referencer>(_1ab94ac23_referencer{._field_ident=(*(*((*(_220636_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220636_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220636_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220636_s))))._field_Generics.len() > 0LL)) {
		_22077_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>::alloc(0LL, (*((*(_220636_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab938a24_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220636_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b08bd169:;
			if (it != expr_end) {
				jule::I64 _22209_i = it - expr->begin();
				jule::Ptr<_1ab937e30_InsGeneric> _222016_g = *it;
				{
					jule::Ptr<_1a378dcc2_GenericDecl> _22219_decl = (*(*((*(_220636_s))))._field_Decl.alloc)._field_Generics[_22209_i];;
					{ jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> &__jule_push_dest = _22077_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ab938a24_TypeAlias>(_1ab938a24_TypeAlias{._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22219_decl.alloc)._field_Token, ._field_Ident=(*(_22219_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_222016_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1b08bd169:;
				++it;
				_22209_i++;
				goto _iter_begin_1b08bd169;
			}
			_iter_end_1b08bd169:;
		};
	};
	jule::Ptr<_1ab090be8_SymTab> _22307_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab886059_setCurrentFile(_self_, _22307_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220636_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1ab090be8_SymTab> _22348_file = _1ab8821dc_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220636_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22348_file != nullptr)) {
			_1ab886059_setCurrentFile(_self_, _22348_file);
		};
	};
	if (((*((*(_220636_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ab82e2bb_constraintChecker> _22418_cc = _1ab88b16e_constraintChecker(_self_);;
		(*(_22418_cc))._field_et=_220655_errorToken;
		(*_22418_cc.alloc)._field_si=(*(_220636_s));
		(*_22418_cc.alloc)._field_genericsA=_22077_tc._field_useGenerics;
		(*_22418_cc.alloc)._field_uniq=true;
		if ((!(_1ab830234_check(_22418_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220636_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _22548_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22077_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220636_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b08c6b45:;
			if (it != expr_end) {
				jule::Ptr<_1ab8a7289_Var> _225616_v = *it;
				{
					_1ab8998ca_checkVarDecl(_self_, &(_225616_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));
					_1ab89d4d3_checkVar(_self_, &(_225616_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22548_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b08c6b45:;
				++it;
				goto _iter_begin_1b08c6b45;
			}
			_iter_end_1b08c6b45:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22077_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ab9087b3_eval> _22677_eval = _1ab88d34c_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));;
	(*((*(_220636_s))))._field_Comparable=(!((*(*((*(_220636_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220636_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08ca60a:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> _226915_f = *it;
			{
				jule::Ptr<_1ab939816_Type> _22708_kind = _1ab9547ed_checkDecl(&_22077_tc, &((*((*((*(_226915_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_22708_kind != nullptr) && __jule_func_result);
				if ((_22708_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220636_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220636_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220636_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220636_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1b08ca60a;
				};
				(*_226915_f.alloc)._field_Type=_22708_kind;
				(*((*(_220636_s))))._field_Mutable=((*((*(_220636_s))))._field_Mutable || ((!((*(*(_226915_f))._field_Decl.alloc)._field_Mutable)) && _1ab93b1ec_Mutable((*(_226915_f))._field_Type)));
				(*((*(_220636_s))))._field_Comparable=((*((*(_220636_s))))._field_Comparable && _1ab93ae66_Comparable((*(_226915_f))._field_Type));
				if (((*(*(_226915_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b08ca60a;
				};
				(*(_22677_eval))._field_prefix=(*_226915_f.alloc)._field_Type;
				(*_22677_eval.alloc)._field_field=_226915_f;
				(*_226915_f.alloc)._field_Default=_1ab927628_evalExpr(_22677_eval, (*(*(_226915_f))._field_Decl.alloc)._field_Default);
				if (((*_226915_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b08ca60a;
				};
				;
				_1ab88d968_checkAssignType(_self_, false, &((*_226915_f.alloc)._field_Type), &((*_226915_f.alloc)._field_Default), (*((*(*(_226915_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220636_s))))._field_Refers);
			}
			_iter_next_1b08ca60a:;
			++it;
			goto _iter_begin_1b08ca60a;
		}
		_iter_end_1b08ca60a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab8a00d9_precheckStructIns(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _230339_s, jule::Ptr<_1ab6a54d8_Token> _230358_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ab89ebdd_checkStructEnv(_self_, _230339_s, _230358_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_230339_s))))._field_Comparable && ((*((*(_230339_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1ab0898e5_Fn> _23148_decl = _1aa776643_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_230339_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b08d64a1:;
			if (it != expr_end) {
				jule::Ptr<_1a37a4832_FieldIns> _231516_field = *it;
				{
					jule::Ptr<_1ab94924e_Arr> _23169_arr = _1ab93cc8c_Arr((*(_231516_field))._field_Type.ptr());;
					if ((_23169_arr == nullptr)) {
						goto _iter_next_1b08d64a1;
					};
					jule::Ptr<_1ab08c9a3_FnIns> _23209_f = _1ab08ae02_instanceForce(_23148_decl);;
					(*(_23209_f))._field_Generics=jule::append((*_23209_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=(*(_23169_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab89dec8_checkGenericFn(_self_, &(_23209_f), &((*((*_231516_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2324:6"));;
					};
					_1ab855358_Push((*((*(_230339_s))))._field_Refers.ptr(), jule::Any(_23209_f, &__jule_any_type63));
				}
				_iter_next_1b08d64a1:;
				++it;
				goto _iter_begin_1b08d64a1;
			}
			_iter_end_1b08d64a1:;
		};
	};
	{
		auto expr = &((*((*(_230339_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08e0367:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _233015_f = *it;
			{
				if (((*(_233015_f))._field_Generics.len() == 0LL)) {
					if ((_1ab89dacc_readyToCheckFn(_self_, _230339_s, &(_233015_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b08e0367:;
			++it;
			goto _iter_begin_1b08e0367;
		}
		_iter_end_1b08e0367:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab8a0392_checkStructIns(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns>* _234036_s) {
	{
		auto expr = &((*((*(_234036_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08e1d3b:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _234115_f = *it;
			{
				_1ab89e33b_checkTypeMethod(_self_, _234036_s, &(_234115_f));
			}
			_iter_next_1b08e1d3b:;
			++it;
			goto _iter_begin_1b08e1d3b;
		}
		_iter_end_1b08e1d3b:;
	};
}



inline void _1ab8a064a_checkTypeStruct(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _234637_s) {
	if ((*((*(_234637_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234637_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08e3843:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _235915_ins = *it;
			{
				_1ab8a0392_checkStructIns(_self_, &(_235915_ins));
			}
			_iter_next_1b08e3843:;
			++it;
			goto _iter_begin_1b08e3843;
		}
		_iter_end_1b08e3843:;
	};
}



inline void _1ab8a0848_checkStructTypes(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08e47de:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _236515_s = *it;
			{
				_1ab8a064a_checkTypeStruct(_self_, &(_236515_s));
			}
			_iter_next_1b08e47de:;
			++it;
			goto _iter_begin_1b08e47de;
		}
		_iter_end_1b08e47de:;
	};
}



inline void _1ab8a0b01_checkStructInsOperators(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a53d2_StructIns> _237044_s) {
	{
		auto expr = &((*(_237044_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b08e5779:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _237115_m = *it;
			{
				{
					auto &_match_expr{ (*(_237115_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1b08e5e0b:;
						{
							(*(_237044_s))._field_Operators._field_Eq=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8a8d90_Eq);
							(*_237044_s.alloc)._field_Comparable=((*_237044_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1b08e6505:;
						{
							(*(_237044_s))._field_Operators._field_Gt=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8a9159_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1b08e656b:;
						{
							(*(_237044_s))._field_Operators._field_GtEq=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8a9423_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1b08e65d2:;
						{
							(*(_237044_s))._field_Operators._field_Lt=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8a96dc_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1b08e6648:;
						{
							(*(_237044_s))._field_Operators._field_LtEq=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8a99a6_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1b08e66c0:;
						{
							(*(_237044_s))._field_Operators._field_Shl=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8aa0e4_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1b08e6747:;
						{
							(*(_237044_s))._field_Operators._field_Shr=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8aa3ad_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1b08e67be:;
						{
							(*(_237044_s))._field_Operators._field_Add=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8aa677_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1b08e6846:;
						{
							(*(_237044_s))._field_Operators._field_Sub=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8aa941_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1b08e68bd:;
						{
							(*(_237044_s))._field_Operators._field_Div=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8aac0a_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1b08e6945:;
						{
							(*(_237044_s))._field_Operators._field_Mul=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8aaec4_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1b08e69bc:;
						{
							(*(_237044_s))._field_Operators._field_Mod=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ab28d_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1b08e6a44:;
						{
							(*(_237044_s))._field_Operators._field_BitAnd=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ab557_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1b08e6abb:;
						{
							(*(_237044_s))._field_Operators._field_BitOr=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ab821_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1b08e6b43:;
						{
							(*(_237044_s))._field_Operators._field_BitXor=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8abada_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1b08e6bba:;
						{
							(*(_237044_s))._field_Operators._field_Neg=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ac228_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1b08e6c42:;
						{
							(*(_237044_s))._field_Operators._field_Pos=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ac4e2_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1b08e6cb9:;
						{
							(*(_237044_s))._field_Operators._field_BitNot=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ac7ab_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1b08e6d41:;
						{
							(*(_237044_s))._field_Operators._field_AddAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8acde9_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1b08e6db8:;
						{
							(*(_237044_s))._field_Operators._field_SubAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ad1b3_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1b08e6e40:;
						{
							(*(_237044_s))._field_Operators._field_DivAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ad47c_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1b08e6eb7:;
						{
							(*(_237044_s))._field_Operators._field_MulAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ad746_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1b08e703e:;
						{
							(*(_237044_s))._field_Operators._field_ModAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ada10_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1b08e70b6:;
						{
							(*(_237044_s))._field_Operators._field_ShlAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8adcc9_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1b08e713d:;
						{
							(*(_237044_s))._field_Operators._field_ShrAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ae093_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1b08e71b5:;
						{
							(*(_237044_s))._field_Operators._field_BitOrAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ae35c_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1b08e723c:;
						{
							(*(_237044_s))._field_Operators._field_BitAndAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ae626_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1b08e72b4:;
						{
							(*(_237044_s))._field_Operators._field_BitXorAssign=_1ab89e7e2_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1ab8ae8e0_BitXorAssign);
						}
					}
					_match_end_1b08e61d6:;
				};
			}
			_iter_next_1b08e5779:;
			++it;
			goto _iter_begin_1b08e5779;
		}
		_iter_end_1b08e5779:;
	};
}



inline void _1ab8a0da9_precheckStructType(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1a37a2577_Struct>* _243440_s) {
	if ((*((*(_243440_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243440_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_243440_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a37a53d2_StructIns> _24458_ins = _1a37a2a1c_instance((*(_243440_s)));;
		(*(_24458_ins))._field_Checked=true;
		_1a37a2d2a_appendInstance((*(_243440_s)).ptr(), &(_24458_ins));
		jule::Bool _24484_ok = _1ab8a00d9_precheckStructIns(_self_, &(_24458_ins), nullptr);;
		if ((!(_24484_ok))) {
			return;;
		};
	};
	_1ab8a0b01_checkStructInsOperators(_self_, (*((*(_243440_s))))._field_Instances[0LL]);
}



inline void _1ab8a10a7_precheckStructTypes(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b090d96d:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _245815_s = *it;
			{
				_1ab8a0da9_precheckStructType(_self_, &(_245815_s));
			}
			_iter_next_1b090d96d:;
			++it;
			goto _iter_begin_1b090d96d;
		}
		_iter_end_1b090d96d:;
	};
}



inline void _1ab8a1360_checkRets(_1ab883573_sema* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _246330_f) {
	if (_1ab089d9b_IsVoid((*((*(_246330_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ab8a37a2_missingRetChecker _24673_mrc = static__1ab8a3b9d_new();;
	jule::Bool _24683_ok = _1ab8a4d7a_check(&_24673_mrc, (*((*(_246330_f))))._field_Scope);;
	if ((!(_24683_ok))) {
		_1ab886477_pushErr(_self_, (*(*((*(_246330_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1ab8a16c3_checkFnInsSc(_1ab883573_sema* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _247433_f, jule::Ptr<_1ab83ce67_scopeChecker>* _247449_sc) {
	_1ab88174c_appendRetVars(&((*((*((*(_247449_sc))))._field_table))._field_Vars), _247433_f);
	_1ab881a7c_appendParamVars(&((*(*((*(_247449_sc))))._field_table.alloc)._field_Vars), _247433_f);
	_1ab881d68_appendGenericTypeAliases(&((*(*((*(_247449_sc))))._field_table.alloc)._field_TypeAliases), _247433_f);
	_1ab8500de_check((*(_247449_sc)), &((*((*((*(_247433_f))))._field_Decl))._field_Scope), &((*((*(_247433_f))))._field_Scope));
	if ((!(_1ab840a6e_stopped((*(_247449_sc)).ptr())))) {
		_1ab8a1360_checkRets(_self_, _247433_f);
	};
}



inline void _1ab8a1a36_checkFnInsCaller(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _248738_f, jule::Ptr<_1ab6a54d8_Token> _248753_caller) {
	if ((*((*((*(_248738_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ab090be8_SymTab> _24927_old = (*((*(*((*(_248738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab886059_setCurrentFile((*((*((*(_248738_f))))._field_Decl))._field_sema, _24927_old);
	});;
	jule::Ptr<_1ab090be8_SymTab> _24947_file = _1ab8821dc_findFile(&((*(*((*((*(_248738_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24947_file != nullptr)) {
		_1ab886059_setCurrentFile((*((*((*(_248738_f))))._field_Decl))._field_sema, _24947_file);
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _24997_sc = _1ab8339eb_newScopeChecker(&((*(*((*(_248738_f))))._field_Decl.alloc)._field_sema), (*(_248738_f)));;
	(*(_24997_sc))._field_calledFrom=_248753_caller;
	_1ab8a16c3_checkFnInsSc(_self_.ptr(), _248738_f, &(_24997_sc));
	if (((*(*((*(_248738_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_248738_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_248738_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1ab8a1cde_checkFnIns(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _250932_f) {
	_1ab8a1a36_checkFnInsCaller(_self_, _250932_f, nullptr);
}



inline void _1ab8a2097_checkFunc(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _251331_f) {
	if ((*((*(_251331_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251331_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_251331_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b091c0a8:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _252315_ins = *it;
			{
				_1ab8a1cde_checkFnIns(_self_, &(_252315_ins));
			}
			_iter_next_1b091c0a8:;
			++it;
			goto _iter_begin_1b091c0a8;
		}
		_iter_end_1b091c0a8:;
	};
}



inline void _1ab8a2350_checkTestFn(_1ab883573_sema* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _252832_f) {
	if ((*((*((*(_252832_f))))._field_Decl))._field_Public) {
		_1ab886477_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_252832_f))))._field_Decl.alloc)._field_Unsafety || (!(_1ab089d9b_IsVoid((*((*(_252832_f))))._field_Decl)))) || ((*(*((*(_252832_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_252832_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_252832_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_252832_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ab886477_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab94645a_Sptr> _25467_sptr = _1ab93c253_Sptr((*((*((*(_252832_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25467_sptr == nullptr)) {
		_1ab886477_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _25533_s = _1ab93d540_Struct((*(_25467_sptr))._field_Elem.ptr());;
	if (((_25533_s == nullptr) || (!(_1ab86b2c5_isStdPackage(&((*((*((*((*(_25533_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ab886477_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ab8867da_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab8a2608_precheckFunc(jule::Ptr<_1ab883573_sema> _self_, jule::Ptr<_1ab0898e5_Fn>* _256134_f) {
	if ((*((*(_256134_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_256134_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_256134_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ab08c9a3_FnIns> _25728_ins = _1ab08ae02_instanceForce((*(_256134_f)));;
		{ jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> &__jule_push_dest = (*((*(_256134_f))))._field_Instances; __jule_push_dest.push(_25728_ins); };
		jule::Bool _25744_ok = _1ab8922da_reloadFnInsTypes(_self_, _25728_ins);;
		(*(_25728_ins))._field_reloaded=true;
		if ((_25744_ok && _1ab955d82_hasDirective(&((*((*(_256134_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1ab8a2350_checkTestFn(_self_, &(_25728_ins));
		};
	};
}



inline void _1ab8a2806_precheckFuncs(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b092aced:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _258515_decl = *it;
			{
				{
					auto expr = &((*(_258515_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b092b75a:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _258616_m = *it;
						{
							_1ab8a2608_precheckFunc(_self_, &(_258616_m));
						}
						_iter_next_1b092b75a:;
						++it;
						goto _iter_begin_1b092b75a;
					}
					_iter_end_1b092b75a:;
				};
			}
			_iter_next_1b092aced:;
			++it;
			goto _iter_begin_1b092aced;
		}
		_iter_end_1b092aced:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b092bb01:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _259015_decl = *it;
			{
				_1ab8a2608_precheckFunc(_self_, &(_259015_decl));
			}
			_iter_next_1b092bb01:;
			++it;
			goto _iter_begin_1b092bb01;
		}
		_iter_end_1b092bb01:;
	};
}



inline void _1ab8a2a04_checkFuncs(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b092d042:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _259715_decl = *it;
			{
				_1ab8a2097_checkFunc(_self_, &(_259715_decl));
			}
			_iter_next_1b092d042:;
			++it;
			goto _iter_begin_1b092d042;
		}
		_iter_end_1b092d042:;
	};
}



inline void _1ab8a2c02_checkPackageTypes(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b092dd34:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _260515_f = *it;
			{
				_1ab886059_setCurrentFile(_self_.ptr(), _260515_f);
				_1ab89d6d1_checkGlobals(_self_);
				_1ab8a2806_precheckFuncs(_self_);
				_1ab8a10a7_precheckStructTypes(_self_);
			}
			_iter_next_1b092dd34:;
			++it;
			goto _iter_begin_1b092dd34;
		}
		_iter_end_1b092dd34:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b09308b3:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _261615_f = *it;
			{
				_1ab886059_setCurrentFile(_self_, _261615_f);
				_1ab8a2a04_checkFuncs(_self_);
				_1ab8a0848_checkStructTypes(_self_);
			}
			_iter_next_1b09308b3:;
			++it;
			goto _iter_begin_1b09308b3;
		}
		_iter_end_1b09308b3:;
	};
}



inline void _1ab8a2e00_setFileSemaFields(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0931e8b:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _262415_f = *it;
			{
				(*(_262415_f))._field_sema=_self_;
			}
			_iter_next_1b0931e8b:;
			++it;
			goto _iter_begin_1b0931e8b;
		}
		_iter_end_1b0931e8b:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0932b07:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _262715_st = *it;
			{
				(*(_262715_st))._field_sema=_self_;
			}
			_iter_next_1b0932b07:;
			++it;
			goto _iter_begin_1b0932b07;
		}
		_iter_end_1b0932b07:;
	};
}



inline void _1ab8a30ed_setSemaFields(jule::Ptr<_1ab883573_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b09337c8:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _263315_file = *it;
			{
				_1ab886059_setCurrentFile(_self_.ptr(), _263315_file);
				_1ab8a2e00_setFileSemaFields(_self_);
			}
			_iter_next_1b09337c8:;
			++it;
			goto _iter_begin_1b09337c8;
		}
		_iter_end_1b09337c8:;
	};
}



inline void _1ab8a33a6_check(jule::Ptr<_1ab883573_sema> _self_, jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _263927_files) {
	(*(_self_))._field_files=(*(_263927_files));
	_1ab8a30ed_setSemaFields(_self_);
	_1ab88936a_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab889d60_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab889766_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab889964_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab89c6e1_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab8a2c02_checkPackageTypes(_self_);
}







inline _1ab8a37a2_missingRetChecker static__1ab8a3b9d_new(void) {
	return _1ab8a37a2_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1ab8a3eab_checkConditional(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab836812_Conditional> _268732_c) {
	{
		auto expr = &((*(_268732_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0938e60:;
		if (it != expr_end) {
			jule::Ptr<_1ab8360e7_If> _268815_elif = *it;
			{
				if ((_268815_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ab8a4a39_checkScope(_self_, (*(_268815_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b0938e60:;
			++it;
			goto _iter_begin_1b0938e60;
		}
		_iter_end_1b0938e60:;
	};
	return (((*_268732_c.alloc)._field_Default != nullptr) && _1ab8a4a39_checkScope(_self_, (*(*(_268732_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ab8a42ec_checkMatch(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab83a409_Match> _269926_m) {
	{
		auto expr = &((*(_269926_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b093b02d:;
		if (it != expr_end) {
			jule::Ptr<_1ab83ae32_Case> _270015_c = *it;
			{
				if ((_270015_c == nullptr)) {
					return false;;
				};
				jule::I64 _27044_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27054_ok = _1ab8a4a39_checkScope(_self_, (*(_270015_c))._field_Scope);;
				{
					
					if ((_27044_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b093ca02:;
						{
							return false;;
						}
					}
					else if ((!(_27054_ok))) {
						_case_begin_1b093ca8a:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b093cb01;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b093cb01:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_270015_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b093b02d;
						}
					}
					_match_end_1b093c98b:;
				};
			}
			_iter_next_1b093b02d:;
			++it;
			goto _iter_begin_1b093b02d;
		}
		_iter_end_1b093b02d:;
	};
	return (((*_269926_m.alloc)._field_Default != nullptr) && _1ab8a4a39_checkScope(_self_, (*(*(_269926_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ab8a46e8_checkInfIter(_1ab8a37a2_missingRetChecker* _self_, jule::Uintptr _272524_it, jule::Ptr<_1ab835bc9_Scope>* _272542_s) {
	jule::I64 _27263_n = (*(_self_))._field_breaked.len();;
	if (_1ab8a4a39_checkScope(_self_, (*(_272542_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27263_n);;
		return true;;
	};
	if ((_27263_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27263_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b0941440:;
			if (it != expr_end) {
				jule::Uintptr _273211_addr = *it;
				{
					if ((_272524_it == _273211_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27263_n);;
						return false;;
					};
				}
				_iter_next_1b0941440:;
				++it;
				goto _iter_begin_1b0941440;
			}
			_iter_end_1b0941440:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27263_n);;
	};
	return true;;
}



inline jule::Bool _1ab8a4a39_checkScope(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab835bc9_Scope> _274326_s) {
	if ((_274326_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_274326_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0942a6d:;
		if (it != expr_end) {
			jule::Any _274715_st = *it;
			{
				{
					auto &_match_expr{ _274715_st };
					
					if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1b094373e:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1b094351e:;
						{
							jule::Uintptr _27535_addr = (*(_274715_st.unsafe_cast_ptr<_1ab838270_BreakSt>()))._field_It;;
							if ((_27535_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27535_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1b09437c7:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1b094384e:;
						{
							jule::Ptr<_1ab836b0e_InfIter> _27619_ii = _274715_st.unsafe_cast_ptr<_1ab836b0e_InfIter>();;
							if (_1ab8a46e8_checkInfIter(_self_, static_cast<jule::Uintptr>(_27619_ii), &((*(_27619_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1b09438c6:;
						{
							jule::Ptr<_1ab8370b5_WhileIter> _27669_wn = _274715_st.unsafe_cast_ptr<_1ab8370b5_WhileIter>();;
							if ((_1ab83745b_IsWhileNext(_27669_wn.ptr()) && ((*_27669_wn.alloc)._field_Expr == nullptr))) {
								if (_1ab8a46e8_checkInfIter(_self_, static_cast<jule::Uintptr>(_27669_wn), &((*_27669_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1b094394d:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b09439c5:;
						{
							if (_1ab8a4a39_checkScope(_self_, _274715_st.cast_ptr<_1ab835bc9_Scope>(&__jule_any_type19))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b0943a4c:;
						{
							{
								auto &_match_expr{ (*(_274715_st.cast_ptr<_1ab906a8b_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_1b0949888:;
									{
										return true;;
									}
								}
								_match_end_1b09497de:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1b0943ac4:;
						{
							if (_1ab8a3eab_checkConditional(_self_, _274715_st.cast_ptr<_1ab836812_Conditional>(&__jule_any_type31))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type44) {
						_case_begin_1b0943b4b:;
						{
							if (_1ab8a42ec_checkMatch(_self_, _274715_st.cast_ptr<_1ab83a409_Match>(&__jule_any_type44))) {
								return true;;
							};
						}
					}
					_match_end_1b0943596:;
				};
			}
			_iter_next_1b0942a6d:;
			++it;
			goto _iter_begin_1b0942a6d;
		}
		_iter_end_1b0942a6d:;
	};
	return false;;
}



inline jule::Bool _1ab8a4d7a_check(_1ab8a37a2_missingRetChecker* _self_, jule::Ptr<_1ab835bc9_Scope> _279821_s) {
	return _1ab8a4a39_checkScope(_self_, _279821_s);;
}







inline jule::Bool _1ab8a7696_IsInitialized(_1ab8a7289_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ab8a792c_IsTypeInferred(_1ab8a7289_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1ab8a7bb3_untypedConstant(_1ab8a7289_Var* _self_) {
	return (_1ab8a792c_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1ab8a8752_Str(jule::Ptr<_1ab0898e5_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _1ab089d9b_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _1ab088806_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1ab94292e_Prim> _253_prim = _1ab93bebc_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1ab945de9_IsStr(_253_prim.ptr());;
}



inline jule::Bool static__1ab8a8ac6_logical(jule::Ptr<_1ab0898e5_Fn>* _3221_f, jule::Str _3229_ident) {
	if (((((((((((((((*(_3221_f)) == nullptr) || ((*((*(_3221_f))))._field_Ident != _3229_ident)) || ((*((*(_3221_f))))._field_Owner == nullptr)) || ((*((*(_3221_f))))._field_Instances.len() == 0LL)) || (*((*(_3221_f))))._field_Statically) || (*((*(_3221_f))))._field_Unsafety) || _1ab089d9b_IsVoid((*(_3221_f)).ptr())) || ((*((*(_3221_f))))._field_Generics.len() != 0LL)) || ((*((*(_3221_f))))._field_Params.len() != 2LL)) || (*((*((*(_3221_f))))._field_Params[0LL]))._field_Mutable) || _1ab088806_IsRef((*((*(_3221_f))))._field_Params[0LL].ptr())) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _497_ins = (*((*(_3221_f))))._field_Instances[0LL];;
	jule::Ptr<_1ab94292e_Prim> _503_prim = _1ab93bebc_Prim((*(_497_ins))._field_Result.ptr());;
	if (((_503_prim == nullptr) || (!(_1ab945b63_IsBool(_503_prim.ptr()))))) {
		return false;;
	};
	return ((*_497_ins.alloc)._field_Owner == _1ab93d540_Struct((*((*_497_ins.alloc)._field_Params[1LL]))._field_Type.ptr()));;
}



inline jule::Bool static__1ab8a8d90_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _5815_f) {
	return static__1ab8a8ac6_logical(&(_5815_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ab8a9159_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _6315_f) {
	return static__1ab8a8ac6_logical(&(_6315_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ab8a9423_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _6817_f) {
	return static__1ab8a8ac6_logical(&(_6817_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ab8a96dc_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _7315_f) {
	return static__1ab8a8ac6_logical(&(_7315_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ab8a99a6_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _7817_f) {
	return static__1ab8a8ac6_logical(&(_7817_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ab8a9d2a_result(jule::Ptr<_1ab0898e5_Fn>* _8220_f, jule::Str _8228_ident) {
	if (((((((((((((((*(_8220_f)) == nullptr) || ((*((*(_8220_f))))._field_Ident != _8228_ident)) || ((*((*(_8220_f))))._field_Owner == nullptr)) || ((*((*(_8220_f))))._field_Instances.len() == 0LL)) || (*((*(_8220_f))))._field_Statically) || (*((*(_8220_f))))._field_Unsafety) || _1ab089d9b_IsVoid((*(_8220_f)).ptr())) || ((*((*(_8220_f))))._field_Generics.len() != 0LL)) || ((*((*(_8220_f))))._field_Params.len() != 2LL)) || (*((*((*(_8220_f))))._field_Params[0LL]))._field_Mutable) || _1ab088806_IsRef((*((*(_8220_f))))._field_Params[0LL].ptr())) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _997_ins = (*((*(_8220_f))))._field_Instances[0LL];;
	return (_1ab93d540_Struct((*(_997_ins))._field_Result.ptr()) == (*_997_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ab8aa0e4_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _10416_f) {
	return static__1ab8a9d2a_result(&(_10416_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ab8aa3ad_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _10916_f) {
	return static__1ab8a9d2a_result(&(_10916_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ab8aa677_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _11416_f) {
	return static__1ab8a9d2a_result(&(_11416_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ab8aa941_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _11916_f) {
	return static__1ab8a9d2a_result(&(_11916_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ab8aac0a_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _12416_f) {
	return static__1ab8a9d2a_result(&(_12416_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ab8aaec4_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _12916_f) {
	return static__1ab8a9d2a_result(&(_12916_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ab8ab28d_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _13416_f) {
	return static__1ab8a9d2a_result(&(_13416_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ab8ab557_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _13919_f) {
	return static__1ab8a9d2a_result(&(_13919_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ab8ab821_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _14418_f) {
	return static__1ab8a9d2a_result(&(_14418_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ab8abada_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _14919_f) {
	return static__1ab8a9d2a_result(&(_14919_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ab8abe5e_unary(jule::Ptr<_1ab0898e5_Fn>* _15319_f, jule::Str _15327_ident) {
	if (((((((((((((*(_15319_f)) == nullptr) || ((*((*(_15319_f))))._field_Ident != _15327_ident)) || ((*((*(_15319_f))))._field_Owner == nullptr)) || ((*((*(_15319_f))))._field_Instances.len() == 0LL)) || (*((*(_15319_f))))._field_Statically) || (*((*(_15319_f))))._field_Unsafety) || _1ab089d9b_IsVoid((*(_15319_f)).ptr())) || ((*((*(_15319_f))))._field_Generics.len() != 0LL)) || ((*((*(_15319_f))))._field_Params.len() != 1LL)) || (*((*((*(_15319_f))))._field_Params[0LL]))._field_Mutable) || _1ab088806_IsRef((*((*(_15319_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _1687_ins = (*((*(_15319_f))))._field_Instances[0LL];;
	return (_1ab93d540_Struct((*(_1687_ins))._field_Result.ptr()) == (*_1687_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ab8ac228_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _17316_f) {
	return static__1ab8abe5e_unary(&(_17316_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ab8ac4e2_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _17816_f) {
	return static__1ab8abe5e_unary(&(_17816_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ab8ac7ab_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _18319_f) {
	return static__1ab8abe5e_unary(&(_18319_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ab8acb30_assign(jule::Ptr<_1ab0898e5_Fn>* _18720_f, jule::Str _18728_ident) {
	if (((((((((((((((*(_18720_f)) == nullptr) || ((*((*(_18720_f))))._field_Ident != _18728_ident)) || ((*((*(_18720_f))))._field_Owner == nullptr)) || ((*((*(_18720_f))))._field_Instances.len() == 0LL)) || (*((*(_18720_f))))._field_Statically) || (*((*(_18720_f))))._field_Unsafety) || (!(_1ab089d9b_IsVoid((*(_18720_f)).ptr())))) || ((*((*(_18720_f))))._field_Generics.len() != 0LL)) || ((*((*(_18720_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_18720_f))))._field_Params[0LL]))._field_Mutable))) || _1ab088806_IsRef((*((*(_18720_f))))._field_Params[0LL].ptr())) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ab8acde9_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _20722_f) {
	return static__1ab8acb30_assign(&(_20722_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ab8ad1b3_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _21222_f) {
	return static__1ab8acb30_assign(&(_21222_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ab8ad47c_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _21722_f) {
	return static__1ab8acb30_assign(&(_21722_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ab8ad746_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _22222_f) {
	return static__1ab8acb30_assign(&(_22222_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ab8ada10_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _22722_f) {
	return static__1ab8acb30_assign(&(_22722_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ab8adcc9_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _23222_f) {
	return static__1ab8acb30_assign(&(_23222_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ab8ae093_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _23722_f) {
	return static__1ab8acb30_assign(&(_23722_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ab8ae35c_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _24224_f) {
	return static__1ab8acb30_assign(&(_24224_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ab8ae626_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _24725_f) {
	return static__1ab8acb30_assign(&(_24725_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ab8ae8e0_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn> _25225_f) {
	return static__1ab8acb30_assign(&(_25225_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1ab8e30a5_typeCompatibilityChecker_eq(_1ab8e30a5_typeCompatibilityChecker *_self_, _1ab8e30a5_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1ab8e35d3_pushErr(_1ab8e30a5_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1ab8e3869_checkTrait(_1ab8e30a5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab93a949_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab095109_Trait> _1157_trt = _1ab93d7c6_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1ab93c253_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b0987ed1:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1ab93c253_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1ab93d540_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b098807a;
			}
		}
		else if ((_1ab93d540_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b098807a:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _1264_s = _1ab93d540_Struct((*(_self_))._field_src);;
				if ((!(_1a37a3be9_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1ab8e1b42_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1ab8e35d3_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab93d7c6_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b0988102:;
			{
				jule::Ptr<_1ab095109_Trait> _1368_base = _1ab93d7c6_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1b098d1b2:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b098d448:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b098dd50:;
								if (it != expr_end) {
									jule::Ptr<_1a37a2577_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1b098d448;
										};
									}
									_iter_next_1b098dd50:;
									++it;
									goto _iter_begin_1b098dd50;
								}
								_iter_end_1b098dd50:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b098d448:;
						++it;
						goto _iter_begin_1b098d448;
					}
					_iter_end_1b098d448:;
				};
				{
					auto expr = &((*_1157_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b098e23a:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1ab0898e5_Fn> _1509_m2 = _1ab095cdb_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ab08c9a3_FnIns> _1545_m1k = _1ab89098c_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1ab08c9a3_FnIns> _1555_m2k = _1ab89098c_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1ab08d94e_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b098e23a:;
						++it;
						goto _iter_begin_1b098e23a;
					}
					_iter_end_1b098e23a:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b0987e48:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b0987dc1:;
	};
}



inline jule::Bool _1ab8e3b00_checkPtr(_1ab8e30a5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab93a949_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab949c22_Ptr> _1707_dest = _1ab93c4d9_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ab94a78e_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ab93a053_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ab8e3d86_checkPrim(_1ab8e30a5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ab94292e_Prim> _1794_prim = _1ab93bebc_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1ab946180_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ab93a053_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ab8e4282_typeEnum(_1ab8e30a5_typeCompatibilityChecker* _self_, jule::Ptr<_1ab098eba_TypeEnum>* _18725_e, jule::Ptr<_1ab939816_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0995708:;
		if (it != expr_end) {
			jule::Ptr<_1ab0988e3_TypeEnumItem> _18815_item = *it;
			{
				if (_1ab93a053_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab098eba_TypeEnum> _1928_ke = _1ab93ca06_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type);;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1b0995708;
				};
				if (_1ab8e4282_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0995708:;
			++it;
			goto _iter_begin_1b0995708;
		}
		_iter_end_1b0995708:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e4518_checkTypeEnum(_1ab8e30a5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab93a053_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab098eba_TypeEnum> _2077_e = _1ab93ca06_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1ab8e4282_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ab8e479e_check(_1ab8e30a5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ab93c4d9_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ab8e3b00_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ab93b719_NilCompatible((*(_self_))._field_dest)) {
		if (_1ab93a949_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ab93bebc_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b099b016:;
			{
				__jule_func_result = _1ab8e3d86_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93ca06_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b099b09e:;
			{
				__jule_func_result = _1ab8e4518_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93d7c6_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b099a994:;
			{
				__jule_func_result = _1ab8e3869_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b099a5cb:;
			{
				__jule_func_result = _1ab93a053_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b0999b4c:;
	};
}








inline jule::Bool _1ab8e4e31_assignTypeChecker_eq(_1ab8e4e31_assignTypeChecker *_self_, _1ab8e4e31_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1ab8e53e8_pushErr(_1ab8e4e31_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1ab886477_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1ab8e567e_checkValidity(_1ab8e4e31_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1ab93d2a9_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b099dbd9:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _2524_f = _1ab93d2a9_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1ab08de6b_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1b09a0559:;
						{
							_1ab8e53e8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1b09a0603:;
						{
							_1ab8e53e8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*((*(_2524_f))._field_Decl))._field_Statically)) && _1ab08a132_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1b09a0669:;
						{
							_1ab8e53e8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*((*(_2524_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1b09a06d0:;
						{
							_1ab8e53e8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1ab8867da_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1b09a046b:;
				};
			}
		}
		else if ((_1ab93dce3_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b099dc83:;
			{
				_1ab8e53e8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1b099db51:;
	};
	return _2497_valid;;
}



inline jule::Bool _1ab8e5915_checkConst(_1ab8e4e31_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1ab93bebc_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1ab93bebc_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1ab1185bc_IsFloat(_2813_kind)) {
			_case_begin_1b09a6e23:;
			{
				if ((!(_1ab8e200a_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1ab11827b_IsInt(_2813_kind)) {
			_case_begin_1b09a6eab:;
			{
				if ((!(_1ab8e2abb_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1b09a6dac:;
			{
				return false;;
			}
		}
		_match_end_1b09a6c7a:;
	};
	return true;;
}



inline jule::Bool _1ab8e5b9b_checkCompatibility(_1ab8e4e31_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b09a9244:;
			{
				return false;;
			}
		}
		else if ((!(_1ab8e567e_checkValidity(_self_)))) {
			_case_begin_1b09a92bb:;
			{
				return false;;
			}
		}
		else if (_1ab8e5915_checkConst(_self_)) {
			_case_begin_1b09a9332:;
			{
				return true;;
			}
		}
		else if ((_1ab93c770_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b09a9398:;
			{
				jule::Ptr<_1ab939816_Type> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1ab93c770_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1ab93c770_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1ab94292e_Prim> _3144_prim = _1ab93bebc_Prim((*(_self_))._field_dest);;
				if (((_3144_prim == nullptr) || _1ab946180_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1b09a760a;
				};
				jule::Ptr<_1ab939816_Type> _3198_dest = (*(*(_1ab93c770_Enum((*((*(_self_))._field_d))._field_Type.ptr())))._field_TypeSym.alloc)._field_Type;;
				return _1ab88e3c5_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1b09a760a:;
	};
	return _1ab88ec99_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ab8e5e32_check(_1ab8e4e31_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1ab8e5b9b_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1ab957614_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1b09c8dce_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b09ca584:;
			{
				jule::Ptr<_1ab939816_Type> _3498_elem = static_cast<jule::Ptr<_1ab939816_Type>>(nullptr);;
				{
					
{
						_case_begin_1b09cad59:;
						{
							_3498_elem=(*(_1ab93cc8c_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b09cac8d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ab6c2b43_ArrTypeDecl>()))._field_Elem;
				return _1ab8e8044_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1b09ca50c:;
	};
	return false;;
}

inline jule::Bool _1b09c9176_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b09d1a74:;
			{
				jule::Ptr<_1ab939816_Type> _3498_elem = static_cast<jule::Ptr<_1ab939816_Type>>(nullptr);;
				{
					
{
						_case_begin_1b09d4e1d:;
						{
							_3498_elem=(*(_1ab93d023_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b09d227d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ab6c1ca7_SlcTypeDecl>()))._field_Elem;
				return _1ab8e8044_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1b09d19ec:;
	};
	return false;;
}

inline jule::Bool _1b09d106d_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b09d8064:;
			{
				jule::Ptr<_1ab939816_Type> _3498_elem = static_cast<jule::Ptr<_1ab939816_Type>>(nullptr);;
				{
					
{
						_case_begin_1b09d88a0:;
						{
							_3498_elem=(*(_1ab93c4d9_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b09d876d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ab6c23a1_PtrTypeDecl>()))._field_Elem;
				return _1ab8e8044_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1b09d7edc:;
	};
	return false;;
}

inline jule::Bool _1b09db61c_annotateConstraintElem(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b09de235:;
			{
				jule::Ptr<_1ab939816_Type> _3498_elem = static_cast<jule::Ptr<_1ab939816_Type>>(nullptr);;
				{
					
{
						_case_begin_1b09dead7:;
						{
							_3498_elem=(*(_1ab93c253_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b09de93e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ab6c1922_SptrTypeDecl>()))._field_Elem;
				return _1ab8e8044_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1b09de1ad:;
	};
	return false;;
}



inline jule::Bool _1ab8e7230_annotateConstraintMap(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b09b1889:;
			{
				jule::Ptr<_1ab9485c2_Map> _3698_m = _1ab93da5c_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1ab6c3391_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ab6c3391_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1ab8e8044_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1ab8e8044_annotateConstraint(_self_, &((*_3698_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b09b1812:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e7571_annotateConstraintTup(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b09b71ec:;
			{
				jule::Ptr<_1ab6c20a4_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ab6c20a4_TupleTypeDecl>();;
				jule::Ptr<_1ab947a22_Tuple> _3858_tup2 = _1ab93dce3_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b09ba167:;
					if (it != expr_end) {
						jule::Ptr<_1ab939816_Type> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b09bbdb1:;
								if (it != expr_end) {
									jule::Ptr<_1ab6c0877_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1ab8e8044_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b09bbdb1:;
									++it;
									goto _iter_begin_1b09bbdb1;
								}
								_iter_end_1b09bbdb1:;
							};
						}
						_iter_next_1b09ba167:;
						++it;
						goto _iter_begin_1b09ba167;
					}
					_iter_end_1b09ba167:;
				};
			}
		}
		_match_end_1b09b7175:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e78b2_annotateConstraintFn(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b09bb971:;
			{
				jule::Ptr<_1a3793854_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3793854_FnDecl>();;
				jule::Ptr<_1ab08c9a3_FnIns> _4028_f = _1ab93d2a9_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b09be39c:;
					if (it != expr_end) {
						jule::I64 _4039_i = it - expr->begin();
						jule::Ptr<_1ab08b84d_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1ab8e8044_annotateConstraint(_self_, &((*(_40316_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b09be39c:;
						++it;
						_4039_i++;
						goto _iter_begin_1b09be39c;
					}
					_iter_end_1b09be39c:;
				};
				if (((*_4018_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1ab8e8044_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b09bb90a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e7c03_annotateConstraintIdent(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _41944_k) {
	jule::Ptr<_1ab6c0e82_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab6c0e82_IdentTypeDecl>(&__jule_any_type77);;
	jule::Ptr<_1a37a53d2_StructIns> _4217_s = _1ab93d540_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b09c2d40:;
		if (it != expr_end) {
			jule::I64 _4227_i = it - expr->begin();
			jule::Ptr<_1a378dcc2_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1ab937e30_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1ab8e83a7_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1b09c2d40;
				};
				jule::Ptr<_1ab6c0877_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4207_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b09c58d1:;
					if (it != expr_end) {
						jule::Ptr<_1ab6c0877_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b09c64e7:;
								if (it != expr_end) {
									jule::Ptr<_1ab937e30_InsGeneric> _43717_sg = *it;
									{
										if (_1ab8e8044_annotateConstraint(_self_, &((*(_43717_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1b09c64e7:;
									++it;
									goto _iter_begin_1b09c64e7;
								}
								_iter_end_1b09c64e7:;
							};
						}
						_iter_next_1b09c58d1:;
						++it;
						goto _iter_begin_1b09c58d1;
					}
					_iter_end_1b09c58d1:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1b09c2d40:;
			++it;
			_4227_i++;
			goto _iter_begin_1b09c2d40;
		}
		_iter_end_1b09c2d40:;
	};
	return false;;
}



inline jule::Bool _1ab8e8044_annotateConstraint(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b09c6948:;
			{
				return _1ab8e7c03_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1b09c68d2:;
	};
	{
		
		if ((_1ab93cc8c_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c7817:;
			{
				return _1b09c8dce_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ab93d023_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c787d:;
			{
				return _1b09c9176_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ab93c4d9_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c78e4:;
			{
				return _1b09d106d_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ab93c253_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c795a:;
			{
				return _1b09db61c_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ab93da5c_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c79c1:;
			{
				return _1ab8e7230_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1ab93d2a9_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c7e33:;
			{
				return _1ab8e78b2_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1ab93dce3_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b09c7eaa:;
			{
				return _1ab8e7571_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1b09c7718:;
			{
				return false;;
			}
		}
		_match_end_1b09c76a2:;
	};
}



inline void _1ab8e83a7_pushGeneric(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _47332_k, jule::I64 _47342_i) {
	(*((*(_self_))._field_f))._field_Generics[_47342_i]=jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)});
	jule::Ptr<_1a378dcc2_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47342_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b09e4b86:;
		if (it != expr_end) {
			jule::Ptr<_1ab939816_Type> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1ab939c12_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1b09e4b86:;
			++it;
			goto _iter_begin_1b09e4b86;
		}
		_iter_end_1b09e4b86:;
	};
	if ((((*_4757_gd.alloc)._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4757_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1ab8e8044_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1ab8e86e8_annotatePrim(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab8ea71c_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1ab8e8a39_annotateArr(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab94924e_Arr> _4937_parr = _1ab93cc8c_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab94924e_Arr> _4977_arr = _1ab93cc8c_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1ab8eaa5d_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab8e8d7a_annotateSlc(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab946e2d_Slc> _5037_pslc = _1ab93d023_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab946e2d_Slc> _5077_slc = _1ab93d023_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1ab8eaa5d_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab8e9276_checkMapKey(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _51238_k, jule::Ptr<_1ab939816_Type>* _51254_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab939816_Type>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1ab8eaa5d_annotateKind(_self_, _51254_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e95b7_annotateMap(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab9485c2_Map> _5217_pmap = _1ab93da5c_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab9485c2_Map> _5257_m = _1ab93da5c_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1ab8e9276_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1ab8e9276_checkMapKey(_self_, (&((*(_5217_pmap))._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ab8e9908_annotateFn(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab08c9a3_FnIns> _5317_pf = _1ab93d2a9_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _5357_f = _1ab93d2a9_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1b0a03546:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ab089d9b_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1ab089d9b_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1b0a035ce:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b0a0349c:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ab939816_Type>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a0546b:;
		if (it != expr_end) {
			jule::I64 _5458_i = it - expr->begin();
			jule::Ptr<_1ab08b84d_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Type));
				__jule_func_result=(_1ab8eaa5d_annotateKind(_self_, &((*(_54515_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1b0a0546b:;
			++it;
			_5458_i++;
			goto _iter_begin_1b0a0546b;
		}
		_iter_end_1b0a0546b:;
	};
	if ((!(_1ab089d9b_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5317_pf))._field_Result));
		__jule_func_result=(_1ab8eaa5d_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e9c49_annotatePtr(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab949c22_Ptr> _5607_pptr = _1ab93c4d9_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab949c22_Ptr> _5647_ptr = _1ab93c4d9_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1ab8eaa5d_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab8ea08a_annotateSptr(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab94645a_Sptr> _5707_ssptr = _1ab93c253_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab94645a_Sptr> _5747_sptr = _1ab93c253_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1ab8eaa5d_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab8ea3cb_annotateStruct(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a37a53d2_StructIns> _5807_s = _1ab93d540_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _5847_s2 = _1ab93d540_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a0e442:;
		if (it != expr_end) {
			jule::I64 _5888_i = it - expr->begin();
			jule::Ptr<_1ab937e30_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1ab937e30_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1ab93a053_Equal((*(_58815_g))._field_Type, (*(_5898_g2))._field_Type)) {
					goto _iter_next_1b0a0e442;
				};
				(*(_self_))._field_k=(&((*_58815_g.alloc)._field_Type));
				if ((!(_1ab8eaa5d_annotateKind(_self_, &((*_5898_g2.alloc)._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0a0e442:;
			++it;
			_5888_i++;
			goto _iter_begin_1b0a0e442;
		}
		_iter_end_1b0a0e442:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab8ea71c_annotateAny(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1ab939c12_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a12a0b:;
		if (it != expr_end) {
			jule::I64 _6037_i = it - expr->begin();
			jule::Ptr<_1a378dcc2_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1b0a12a0b;
				};
				jule::Ptr<_1ab937e30_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Type == nullptr)) {
						_case_begin_1b0a14359:;
						{
							_1ab8e83a7_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1ab93a053_Equal((*(_6074_t))._field_Type, (*(_60139_k)))))) {
						_case_begin_1b0a14403:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b0a14216:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b0a12a0b:;
			++it;
			_6037_i++;
			goto _iter_begin_1b0a12a0b;
		}
		_iter_end_1b0a12a0b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8eaa5d_annotateKind(_1ab8e6806_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab939816_Type>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ab8ea71c_annotateAny(_self_, _62240_k)) {
			_case_begin_1b0a16999:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab93bebc_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16a10:;
			{
				__jule_func_result = _1ab8e86e8_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93cc8c_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16a76:;
			{
				__jule_func_result = _1ab8e8a39_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93d023_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16aed:;
			{
				__jule_func_result = _1ab8e8d7a_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93da5c_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16ca7:;
			{
				__jule_func_result = _1ab8e95b7_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93d2a9_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16d1d:;
			{
				__jule_func_result = _1ab8e9908_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93c4d9_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16d84:;
			{
				__jule_func_result = _1ab8e9c49_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93c253_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16dea:;
			{
				__jule_func_result = _1ab8ea08a_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab93d540_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b0a16e72:;
			{
				__jule_func_result = _1ab8ea3cb_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b0a16878:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b0a16405:;
	};
}



inline jule::Bool _1ab8eace4_annotate(_1ab8e6806_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1ab8eaa5d_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1ab8ebc07_pushErrToken(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab6a54d8_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1ab886477_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1ab8ec06a_pushErr(_1ab8eb663_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1ab8ebc07_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _1ab8ec301_getParams(_1ab8eb663_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ab088570_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1ab8ec642_checkCounts(_1ab8eb663_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1ab088570_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I64 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1b0a23a72:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*(*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1b0a238da:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1b0a235aa:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1b0a23544:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1b0a234cd:;
	};
	_1a387dcd5_Builder _7027_err = static__1a387e654_New(32LL);;
	({
		auto except = _1a387ecd6_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:703:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:704:3"));
		(except.result);
	});
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a264c0:;
		if (it != expr_end) {
			jule::I64 _7057_i = it - expr->begin();
			jule::Ptr<_1ab08b84d_ParamIns> *_70510_p = it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_7027_err, _1ab939c12_Str((*((*(_70510_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:706:4"));
					(except.result);
				});
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					({
						auto except = _1a387ecd6_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:708:5"));
						(except.result);
					});
				};
			}
			_iter_next_1b0a264c0:;
			++it;
			_7057_i++;
			goto _iter_begin_1b0a264c0;
		}
		_iter_end_1b0a264c0:;
	};
	({
		auto except = _1a388008e_WriteByte(&_7027_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:711:3"));
	});
	_1ab8ec06a_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a3880666_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8ecae8_checkArg(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab08b84d_ParamIns>* _71629_p, jule::Ptr<_1ab906a8b_Data>* _71648_arg, jule::Ptr<_1ab6a54d8_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ab08ec80_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1ab90524e_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1ab8e6806_dynamicTypeAnnotation _7219_dta = _1ab8e6806_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ab8eace4_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1ab8ebc07_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ab8931ed_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1ab88d968_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, (*(_71665_errorToken)), _1ab90bd49_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab8ecee4_push(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab08b84d_ParamIns>* _74525_p, jule::Ptr<_1ab6c4bab_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab939816_Type> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_74525_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1ab906a8b_Data> _7557_d = _1ab927628_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7473_oldImmut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ab8ecae8_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ab8ed3e0_pushVariadic(_1ab8eb663_fnCallArgChecker* _self_, jule::Ptr<_1ab08b84d_ParamIns>* _76933_p, jule::I64 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ab07e9c8_SliceExprModel> _7737_model = jule::new_ptr<_1ab07e9c8_SliceExprModel>(_1ab07e9c8_SliceExprModel{._field_ElemType=(*((*(_76933_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1ab939816_Type> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1ab939816_Type> _7847_oldKind = (*((*(_76933_p))))._field_Type;;
	(*((*(_76933_p))))._field_Type=jule::new_ptr<_1ab939816_Type>((*(*((*(_76933_p))))._field_Type.alloc));
	(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Type=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1ab6c4bab_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type78) {
					_case_begin_1b0a38b31:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab946e2d_Slc>(_1ab946e2d_Slc{._field_Elem=(*((*(_76933_p))))._field_Type}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1b0a38e2d:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Type;
					}
				}
				_match_end_1b0a38db7:;
			};
			jule::Ptr<_1ab906a8b_Data> _8068_d = _1ab926e96_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b0a380b4;
			};
			if ((*((*(_8068_d))._field_Type))._field_Variadic) {
				_7717_variadiced=true;
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ab8ecae8_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1b0a3c849:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1ab07e9c8_SliceExprModel>();
							(*(_7737_model))._field_ElemType=(*((*(_76933_p))))._field_Type;
						}
					}
					else {
						_case_begin_1b0a40660:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1b0a405e9:;
				};
				(_76951_i)++;
				goto _iter_end_1b0a380b4;
			};
			__jule_func_result=(__jule_func_result && _1ab8ecae8_checkArg(_self_, _76933_p, &(_8068_d), &((*_7938_arg.alloc)._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1b0a380b4:;
	}
	_iter_end_1b0a380b4:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1ab8ebc07_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type79)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab8ed731_checkArgs(_1ab8eb663_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8513_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1ab088570_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1b0a4d706:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1ab08b84d_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*(*(_8628_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1b0a501a8:;
					{
						__jule_func_result=(_1ab8ed3e0_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1b0a4d99d;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1b0a50296:;
					{
						__jule_func_result=false;
						goto _iter_end_1b0a4d99d;
					}
				}
				else {
					_case_begin_1b0a4ece0:;
					{
						__jule_func_result=(_1ab8ecee4_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1b0a4ec68:;
			};
			(_8557_i)++;
		}
	_iter_next_1b0a4d99d:;
	}
	_iter_end_1b0a4d99d:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8513_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab8ed9b7_checkDynamicTypeAnnotation(_1ab8eb663_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a51ee0:;
		if (it != expr_end) {
			jule::Ptr<_1ab937e30_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1ab8ec06a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0a51ee0:;
			++it;
			goto _iter_begin_1b0a51ee0;
		}
		_iter_end_1b0a51ee0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab8edc4d_check(_1ab8eb663_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _8927_params = _1ab8ec301_getParams(_self_);;
	__jule_func_result=_1ab8ec642_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ab8ed731_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ab8ed9b7_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1ab8eeb2d_pushErr(_1ab8ee59a_structLitChecker* _self_, jule::Ptr<_1ab6a54d8_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1ab908d46_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1ab8eee91_pushSuggestion(_1ab8ee59a_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1ab9091a9_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1ab9003ae_pushMatch(_1ab8ee59a_structLitChecker* _self_, jule::Ptr<_1a37a4832_FieldIns>* _93930_f, jule::Ptr<_1ab906a8b_Data>* _93949_d, jule::Ptr<_1ab6a54d8_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ab8931ed_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Type), _93949_d, _93964_errorToken)) {
		_1ab88d968_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Type), _93949_d, (*(_93964_errorToken)), _1ab90bd49_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1ab07d026_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ab07d026_StructArgExprModel>(_1ab07d026_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1ab900722_checkPair(_1ab8ee59a_structLitChecker* _self_, jule::Ptr<_1a378a340_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _95862_exprs) {
	jule::Ptr<_1a37a4832_FieldIns> _9607_f = _1a37a67bd_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1ab8eeb2d_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1ab886bd6_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1ab8eeb2d_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1ab8eee91_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1b0a5d491:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a5e45e:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1b0a5ee54:;
						{
							jule::Ptr<_1a378a340_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1a378a340_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1b0a607d4:;
									{
										goto _iter_end_1b0a5e45e;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1b0a62660:;
									{
										_1ab8eeb2d_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1b0a5e45e;
									}
								}
								_match_end_1b0a6074b:;
							};
						}
					}
					_match_end_1b0a5edcc:;
				};
			}
			_iter_next_1b0a5e45e:;
			++it;
			goto _iter_begin_1b0a5e45e;
		}
		_iter_end_1b0a5e45e:;
	};
	jule::Ptr<_1ab939816_Type> _9867_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Type;
	jule::Ptr<_1ab906a8b_Data> _9907_d = _1ab927628_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1ab9003ae_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1ab900a63_readyExprs(_1ab8ee59a_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a67b2c:;
		if (it != expr_end) {
			jule::I64 _9998_i = it - expr->begin();
			jule::Ptr<_1ab6c4bab_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1b0a68820:;
						{
							jule::Ptr<_1a378b94b_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1a378b94b_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_1b0a6b713:;
									{
										goto _match_end_1b0a6b2d4;
									}
								}
								else {
									_case_begin_1b0a6b34a:;
									{
										_1ab8eeb2d_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1b0a67b2c;
									}
								}
								_match_end_1b0a6b2d4:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1a378a340_FieldExprPair>(_1a378a340_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type80);
						}
					}
					_match_end_1b0a68798:;
				};
			}
			_iter_next_1b0a67b2c:;
			++it;
			_9998_i++;
			goto _iter_begin_1b0a67b2c;
		}
		_iter_end_1b0a67b2c:;
	};
	return _9987_ok;;
}



inline void _1ab900d1b_check(_1ab8ee59a_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ab900a63_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0a6ea13:;
		if (it != expr_end) {
			jule::I64 _10298_i = it - expr->begin();
			jule::Ptr<_1ab6c4bab_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1b0a758c6:;
						{
							jule::Ptr<_1a378a340_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1a378a340_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1ab8eeb2d_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1ab900722_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1b0a70bbd:;
						{
							if (_10287_paired) {
								_1ab8eeb2d_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ab8eeb2d_pushErr(_self_, (*_102915_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1b0a6ea13;
							};
							jule::Ptr<_1a37a4832_FieldIns> _10479_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10298_i];;
							if ((!(_1ab886bd6_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1ab8eeb2d_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1ab8eee91_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ab939816_Type> _10559_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10479_field.alloc)._field_Type;
							jule::Ptr<_1ab906a8b_Data> _10599_d = _1ab927628_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1b0a6ea13;
							};
							_1ab9003ae_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*_102915_expr.alloc)._field_Token));
						}
					}
					_match_end_1b0a70b57:;
				};
			}
			_iter_next_1b0a6ea13:;
			++it;
			_10298_i++;
			goto _iter_begin_1b0a6ea13;
		}
		_iter_end_1b0a6ea13:;
	};
	if ((!(_10287_paired))) {
		jule::I64 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1b0a794e0:;
				{
					return;;
				}
			}
			_match_end_1b0a793be:;
		};
		_1a387dcd5_Builder _10778_idents = static__1a387e654_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				({
					auto except = _1a387ecd6_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1079:5"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1080:5"));
					(except.result);
				});
			}
		_iter_next_1b0a7a18e:;
		}
		_iter_end_1b0a7a18e:;;
		_1ab8eeb2d_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1a3881117_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1ab90137c_rangeChecker_eq(_1ab90137c_rangeChecker *_self_, _1ab90137c_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1ab8a7289_Var> _1ab901899_buildVar(_1ab90137c_rangeChecker* _self_, jule::Ptr<_1a3794a0e_VarDecl>* _109725_decl) {
	jule::Ptr<_1ab8a7289_Var> _10987_v = _1ab8598ac_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1ab901a97_setSizeKey(_1ab90137c_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1ab901eb5_checkRangeExprValidity(_1ab90137c_rangeChecker* _self_, jule::Ptr<_1ab906a8b_Data>* _111643_d, jule::Ptr<_1ab8a7289_Var>* _111654_key, jule::Ptr<_1ab939816_Type>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1ab93b1ec_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1ab8931ed_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_TypeSym))._field_Type), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ab9021b3_checkSlice(_1ab90137c_rangeChecker* _self_) {
	_1ab901a97_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab946e2d_Slc> _11357_slc = _1ab93d023_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_11357_slc))._field_Elem});
	_1ab901eb5_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1ab9023b1_checkArray(_1ab90137c_rangeChecker* _self_) {
	_1ab901a97_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab94924e_Arr> _11487_arr = _1ab93cc8c_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_11487_arr))._field_Elem});
	_1ab901eb5_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1ab9025ae_checkMapKeyA(_1ab90137c_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab9485c2_Map> _11607_m = _1ab93da5c_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_11607_m))._field_Key});
	jule::Ptr<_1ab906a8b_Data> _11647_d = jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Type=(*_11607_m.alloc)._field_Key;
	_1ab901eb5_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1ab9027ac_checkMapKeyB(_1ab90137c_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab9485c2_Map> _11757_m = _1ab93da5c_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_11757_m))._field_Val});
	jule::Ptr<_1ab906a8b_Data> _11797_d = jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Type=(*_11757_m.alloc)._field_Val;
	_1ab901eb5_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1ab9029aa_checkMap(_1ab90137c_rangeChecker* _self_) {
	_1ab9025ae_checkMapKeyA(_self_);
	_1ab9027ac_checkMapKeyB(_self_);
}



inline void _1ab902ba8_checkStr(_1ab90137c_rangeChecker* _self_) {
	_1ab901a97_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_TypeSym;
}



inline void _1ab902da6_checkComptime(_1ab90137c_rangeChecker* _self_) {
	_1ab901a97_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1ab6a7dc0_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab901899_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1ab90313c_checkComptimeRange(_1ab90137c_rangeChecker* _self_) {
	jule::Ptr<_1ab119cc7_comptimeRange> _12147_range = _1ab940366_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data6)) {
			_case_begin_1b0a9b534:;
			{
				_1ab902da6_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b0a9b842:;
			{
				_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b0a9b7cb:;
	};
}



inline jule::Bool _1ab9033c3_check(_1ab90137c_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1b0a9ebb9:;
		}
		else if ((_1ab93d023_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0a9d569:;
			{
				_1ab9021b3_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ab93cc8c_Arr((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0a9d5d0:;
			{
				_1ab9023b1_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ab93da5c_Map((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0a9db41:;
			{
				_1ab9029aa_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ab940366_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0a9dba7:;
			{
				return _1ab90313c_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b0a9d4d1:;
			{
				jule::Ptr<_1ab94292e_Prim> _12474_prim = _1ab93bebc_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
				if (((_12474_prim != nullptr) && _1ab945de9_IsStr(_12474_prim))) {
					_1ab902ba8_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b0a9d3e3:;
	};
	_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1ab904050_prepareTypes(_1ab903add_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ab08dbd5_Types((*(_self_))._field_f);
	};
}



inline void _1ab904308_prepareExprs(_1ab903add_retTypeChecker* _self_, jule::Ptr<_1ab6c4bab_Expr>* _127533_e) {
	if (((*(_127533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b0aa6088:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127533_e))))._field_Kind.unsafe_cast_ptr<_1ab6c57a0_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1b0aa5917:;
			{
				{ jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127533_e))); };
			}
		}
		_match_end_1b0aa5483:;
	};
}



inline void _1ab904506_checkExprs(_1ab903add_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab906a8b_Data>> _12917_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab906a8b_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1ab9087b3_eval> _12927_eval = _1ab88d34c_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0aa873e:;
		if (it != expr_end) {
			jule::I64 _12938_i = it - expr->begin();
			jule::Ptr<_1ab6c4bab_Expr> _129315_expr = *it;
			{
				if ((_12938_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b0aa873e;
				};
				jule::Ptr<_1ab939816_Type> _12988_t = (*(_self_))._field_types[_12938_i];;
				(*(_12927_eval))._field_prefix=_12988_t;
				jule::Ptr<_1ab906a8b_Data> _13018_d = _1ab927628_evalExpr(_12927_eval, _129315_expr);;
				if ((_13018_d == nullptr)) {
					goto _iter_next_1b0aa873e;
				};
				{ jule::Slice<jule::Ptr<_1ab906a8b_Data>> &__jule_push_dest = _12917_datas; __jule_push_dest.push(_13018_d); };
				if (((!((*(_13018_d))._field_Mutable)) && _1ab93b1ec_Mutable((*(_13018_d))._field_Type.ptr()))) {
					_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1ab8e4e31_assignTypeChecker _13138_ac = _1ab8e4e31_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_12988_t, ._field_d=_13018_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1ab8415ca_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1ab8e5e32_check(&_13138_ac);
			}
			_iter_next_1b0aa873e:;
			++it;
			_12938_i++;
			goto _iter_begin_1b0aa873e;
		}
		_iter_end_1b0aa873e:;
	};
	if ((_12917_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ab082c0c_TupleExprModel>(_1ab082c0c_TupleExprModel{._field_Datas=_12917_datas}), &__jule_any_type83);
	} else if ((_12917_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12917_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ab90478c_tryFuncMultiRetForward(_1ab903add_retTypeChecker* _self_) {
	jule::Ptr<_1ab9087b3_eval> _13357_eval = _1ab88d34c_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
	jule::Ptr<_1ab906a8b_Data> _13367_d = _1ab927628_evalExpr(_13357_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13367_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab947a22_Tuple> _13427_tup = _1ab93dce3_Tup((*(_13367_d))._field_Type.ptr());;
	if ((_13427_tup == nullptr)) {
		return false;;
	};
	if (((*(_13427_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1b0ab4805;
	};
	(*(_self_))._field_model=(*(_13367_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0ab2935:;
		if (it != expr_end) {
			jule::I64 _13507_i = it - expr->begin();
			{
				jule::Ptr<_1ab939816_Type> _13518_t1 = (*(_self_))._field_types[_13507_i];;
				jule::Ptr<_1ab939816_Type> _13528_t2 = (*(_13427_tup))._field_Types[_13507_i];;
				if ((!(_1ab88de1e__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13518_t1), &(_13528_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1b0ab4805;
				};
			}
			_iter_next_1b0ab2935:;
			++it;
			_13507_i++;
			goto _iter_begin_1b0ab2935;
		}
		_iter_end_1b0ab2935:;
	};
	return true;;
	_julec_label_1b0ab4805:;
	_1a387dcd5_Builder _13597_wanted = static__1a387e654_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0ab4e98:;
		if (it != expr_end) {
			jule::I64 _13607_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> _136010_t = *it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_13597_wanted, _1ab939c12_Str(_136010_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1361:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13607_i) > 1LL)) {
					({
						auto except = _1a387ecd6_WriteStr(&_13597_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1363:5"));
						(except.result);
					});
				};
			}
			_iter_next_1b0ab4e98:;
			++it;
			_13607_i++;
			goto _iter_begin_1b0ab4e98;
		}
		_iter_end_1b0ab4e98:;
	};
	_1a387dcd5_Builder _13667_given = static__1a387e654_New(32LL);;
	{
		auto expr = &((*(_13427_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0ab6bc0:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> _136710_t = *it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_13667_given, _1ab939c12_Str(_136710_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1368:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					({
						auto except = _1a387ecd6_WriteStr(&_13667_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1370:5"));
						(except.result);
					});
				};
			}
			_iter_next_1b0ab6bc0:;
			++it;
			_13677_i++;
			goto _iter_begin_1b0ab6bc0;
		}
		_iter_end_1b0ab6bc0:;
	};
	_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a3880666_Str(&_13597_wanted), &__jule_any_type5); (*it++) = jule::Any(_1a3880666_Str(&_13667_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1ab904acd_check(_1ab903add_retTypeChecker* _self_, jule::Ptr<_1ab6c4bab_Expr>* _137726_e) {
	_1ab904050_prepareTypes(_self_);
	_1ab904308_prepareExprs(_self_, _137726_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1b0ab9e7b:;
			{
				if ((!(_1ab08ab6b_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ab089d9b_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1b0ab9ee2:;
			{
				_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1b0aba058:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b0abe9ca:;
						{
							if (_1ab90478c_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1b0abe920:;
				};
				_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1b0aba0be:;
			{
				_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1b0aba135:;
			{
				_1ab886477_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0ab9d5a:;
	};
	_1ab904506_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1ab906a8b_Data_eq(_1ab906a8b_Data *_self_, _1ab906a8b_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1ab906ea9_IsNil(_1ab906a8b_Data* _self_) {
	return _1ab93a949_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1ab907240_IsVoid(_1ab906a8b_Data* _self_) {
	return _1ab93abd0_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1ab9074c6_IsConst(_1ab906a8b_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ab907817_GoodOperand(_1ab906a8b_Data* _self_, jule::Ptr<_1ab906a8b_Data>* _6128_other) {
	if ((_1ab93ca06_TypeEnum((*((*(_6128_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ab93bebc_Prim((*((*(_6128_other))))._field_Type) == nullptr) || (!(_1ab946180_IsAny(_1ab93bebc_Prim((*((*(_6128_other))))._field_Type).ptr())))) && (_1ab93d7c6_Trait((*((*(_6128_other))))._field_Type) == nullptr)) && (!(_1ab93a949_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1ab907c13_Value_eq(_1ab907c13_Value *_self_, _1ab907c13_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1ab9087b3_eval_eq(_1ab9087b3_eval *_self_, _1ab9087b3_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1ab908d46_pushErr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args) {
	_1ab886477_pushErr((*(_self_))._field_s.ptr(), _9223_token, _9245_fmt, _9265_args);
}



inline void _1ab9091a9_pushSuggestion(_1ab9087b3_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args) {
	_1ab8867da_pushSuggestion((*(_self_))._field_s.ptr(), _9730_fmt, _9750_args);
}



inline void _1ab9093a7_allowBuiltin(_1ab9087b3_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ab9095a5_disallowBuiltin(_1ab9087b3_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ab90983b_isUnsafe(_1ab9087b3_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ab909ac2_isGlobal(_1ab9087b3_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4)) {
			_case_begin_1b0b301bc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b0b305c9:;
			{
				return false;;
			}
		}
		_match_end_1b0b30563:;
	};
}



inline jule::Bool _1ab909dd0_applyNumericPrefix(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _12439_d) {
	if ((((((*(_12439_d)) == nullptr) || (!(_1ab9074c6_IsConst((*(_12439_d)).ptr())))) || (_1ab93bebc_Prim((*((*(_12439_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ab94292e_Prim> _1313_prim = _1ab93bebc_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1313_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ab1185bc_IsFloat(_1ab942ca3_Str(_1313_prim.ptr()))) {
			_case_begin_1b0b32c3b:;
			{
				(*((*(_12439_d))))._field_Type=jule::new_ptr<_1ab939816_Type>((*((*(_self_))._field_prefix)));
				_1ab07478c_SetF64((*((*(_12439_d))))._field_Constant.ptr(), _1ab073912_AsF64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1ab117ba4_IsSigInt(_1ab942ca3_Str(_1313_prim.ptr()))) {
			_case_begin_1b0b32ca2:;
			{
				if ((!(_1ab8e237e_sigAssignable(_1ab942ca3_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Type=jule::new_ptr<_1ab939816_Type>((*((*(_self_))._field_prefix)));
				_1ab073bba_SetI64((*((*(_12439_d))))._field_Constant.ptr(), _1ab0733e5_AsI64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1ab117eb2_IsUnsigInt(_1ab942ca3_Str(_1313_prim.ptr()))) {
			_case_begin_1b0b32d18:;
			{
				if ((!(_1ab8e2747_unsigAssignable(_1ab942ca3_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Type=jule::new_ptr<_1ab939816_Type>((*((*(_self_))._field_prefix)));
				_1ab073e73_SetU64((*((*(_12439_d))))._field_Constant.ptr(), _1ab07367b_AsU64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		_match_end_1b0b32b4d:;
	};
	return true;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90a221_litStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _15919_l) {
	jule::Str _1607_s = jule::Str();;
	if (_1ab6a68c4_IsRawStr((*((*(_15919_l))))._field_Value)) {
		_1607_s=_1ab8e0701_ToRawStr((*((*(_15919_l))))._field_Value);
	} else {
		_1607_s=_1ab8e0a42_ToStr((*((*(_15919_l))))._field_Value);
	};
	jule::Ptr<_1ab070c61_Const> _1667_constant = static__1ab0719dc_NewStr(_1607_s);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b30ba_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1667_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1667_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90a562_litRune(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _17620_l) {
	jule::I32 _1773_r = _1ab8c5263_ToRune((*((*(_17620_l))))._field_Value);;
	jule::Ptr<_1ab906a8b_Data> _1787_data = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_1773_r))});;
	if ((_1773_r <= 255LL)) {
		(*(_1787_data))._field_Type=_1ab9b4aa0_primU8;
	} else {
		(*(_1787_data))._field_Type=_1ab9b453e_primI32;
	};
	(*(_1787_data))._field_Model=jule::Any(jule::new_ptr<_1ab08634d_RuneExprModel>(_1ab08634d_RuneExprModel{._field_Code=_1773_r}), &__jule_any_type85);
	(*_1787_data.alloc)._field_Mutable=true;
	(*_1787_data.alloc)._field_IsRune=true;
	(*_1787_data.alloc)._field_untyped=true;
	return _1787_data;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90a8a3_litFloat(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _19521_l) {
	jule::F64 _1963_f = ({
		auto except = _1a9412d4c_ParseFloat((*((*(_19521_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ab070c61_Const> _1977_constant = static__1ab071ca6_NewF64(_1963_f);;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b5a4b_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1977_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1977_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90abe4_litInt(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _20723_l) {
	;
	jule::Str _2107_lit = (*((*(_20723_l))))._field_Value;;
	jule::I64 _2117_base = 0LL;;
	{
		
		if (_1a87a8b1c_HasPrefix(_2107_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1b0b4517c:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=16LLU;
			}
		}
		else if (_1a87a8b1c_HasPrefix(_2107_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1b0b4526a:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=2LLU;
			}
		}
		else if (_1a87a8b1c_HasPrefix(_2107_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1b0b44d2a:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=8LLU;
			}
		}
		else if (((_2107_lit[0LL] == '0') && (_2107_lit.len() > 1LL))) {
			_case_begin_1b0b44d91:;
			{
				(_2107_lit).mut_slice(1LL);;
				_2117_base=8LLU;
			}
		}
		else {
			_case_begin_1b0b44cb4:;
			{
				_2117_base=10LLU;
			}
		}
		_match_end_1b0b44c3c:;
	};
	jule::Ptr<_1ab906a8b_Data> _2317_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	jule::Bool _2337_ok = true;;
	jule::I64 _2343_sig = ({
		auto except = _1a940b692_ParseInt(_2107_lit, _2117_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2337_ok=false;

			0LL;
		});
	});;
	if (_2337_ok) {
		(*_2317_d.alloc)._field_Constant=static__1ab071190_NewI64(_2343_sig);
		(*_2317_d.alloc)._field_Type=_1ab9b3c9c_primInt;
	} else {
		jule::U64 _2424_unsig = ({
			auto except = _1a940b1db_ParseUint(_2107_lit, _2117_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ab908d46_pushErr(_self_, (*((*(_20723_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2317_d.alloc)._field_Constant=static__1ab071459_NewU64(_2424_unsig);
		(*_2317_d.alloc)._field_Type=_1ab9b38d4_primUint;
	};
	(*_2317_d.alloc)._field_Model=jule::Any((*_2317_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2317_d.alloc)._field_untyped=true;
	if ((!(_1ab909dd0_applyNumericPrefix(_self_, &(_2317_d))))) {
		_1ab931687_fitBitsize(&(_2317_d));
	};
	return _2317_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90b035_litNum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr>* _26223_l) {
	{
		
		if (_1ab6a7573_IsFloat((*((*(_26223_l))))._field_Value)) {
			_case_begin_1b0b4c2e9:;
			{
				return _1ab90a8a3_litFloat(_self_, _26223_l);;
			}
		}
		else {
			_case_begin_1b0b4c283:;
			{
				return _1ab90abe4_litInt(_self_, _26223_l);;
			}
		}
		_match_end_1b0b4c173:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90b376_evalLit(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c5b46_LitExpr> _27123_lit) {
	{
		
		if (_1ab6a663d_IsStr((*(_27123_lit))._field_Value)) {
			_case_begin_1b0b4d51a:;
			{
				return _1ab90a221_litStr(_self_, &(_27123_lit));;
			}
		}
		else if (_1ab6a6b8d_IsRune((*(_27123_lit))._field_Value)) {
			_case_begin_1b0b4d581:;
			{
				return _1ab90a562_litRune(_self_, &(_27123_lit));;
			}
		}
		else if (_1ab6a783c_IsNum((*(_27123_lit))._field_Value)) {
			_case_begin_1b0b4d5e7:;
			{
				return _1ab90b035_litNum(_self_, &(_27123_lit));;
			}
		}
		else {
			_case_begin_1b0b4ce10:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0b4cd00:;
	};
}



inline jule::Any _1ab90b6b7_findBuiltins(_1ab9087b3_eval* _self_, jule::Str* _28429_ident) {
	if (_1ab88076d_IsPub((*(_28429_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data2)) {
				_case_begin_1b0b50880:;
				{
					jule::Any _2889_def = _1ab931456_findBuiltinsImport(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1ab866578_ImportInfo>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data2));;
					if ((_2889_def != nullptr)) {
						return _2889_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4)) {
				_case_begin_1b0b505c7:;
				{
					jule::Any _2939_def = _1ab9321b0_findBuiltinsSema(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1ab883573_sema>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
				_case_begin_1b0b508e6:;
				{
					jule::Any _2989_def = _1ab9321b0_findBuiltinsSema(_28429_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)))._field_s);;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			_match_end_1b0b507c5:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ab9b6387_findBuiltinDef(_28429_ident);;
}



inline jule::Any _1ab90bab3_getDef(_1ab9087b3_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded) {
	jule::Ptr<_1ab8a7289_Var> _3167_v = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab9583d4_FindVar((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3167_v != nullptr)) {
		return jule::Any(_3167_v, &__jule_any_type7);;
	};
	jule::Ptr<_1ab938a24_TypeAlias> _3217_ta = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab9587d0_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3217_ta != nullptr)) {
		return jule::Any(_3217_ta, &__jule_any_type8);;
	};
	if ((!(_31135_binded))) {
		jule::Ptr<_1ab0977b0_Enum> _3278_enm = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab959759_FindEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3278_enm != nullptr)) {
			return jule::Any(_3278_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1ab098eba_TypeEnum> _3328_tenm = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab959a9a_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3328_tenm != nullptr)) {
			return jule::Any(_3328_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1ab0898e5_Fn> _3387_f = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab9590c7_FindFn((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3387_f != nullptr)) {
		return jule::Any(_3387_f, &__jule_any_type10);;
	};
	jule::Ptr<_1a37a2577_Struct> _3437_s = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab958bcb_FindStruct((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3437_s != nullptr)) {
		return jule::Any(_3437_s, &__jule_any_type9);;
	};
	return _1ab90b6b7_findBuiltins(_self_, _31123_ident);;
}



inline jule::Ptr<_1ab854577_ReferenceStack> _1ab90bd49_getOwnerRefers(_1ab9087b3_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
			_case_begin_1b0b59da6:;
			{
				return _1ab841861_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1b0b58745:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1b0b586ce:;
	};
	return nullptr;;
}



inline void _1b0b72d47_pushReference(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _36937_ref) {
	jule::Ptr<_1ab854577_ReferenceStack> _3707_refers = _1ab90bd49_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1b0b752de_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1ab855358_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type63));
	};
}

inline void _1b0b895cd_pushReference(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _36937_ref) {
	jule::Ptr<_1ab854577_ReferenceStack> _3707_refers = _1ab90bd49_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1b0b8b921_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1ab855358_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type7));
	};
}

inline void _1b0c71b9e_pushReference(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a53d2_StructIns>* _36937_ref) {
	jule::Ptr<_1ab854577_ReferenceStack> _3707_refers = _1ab90bd49_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1b0c74168_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1ab855358_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type64));
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90c443__evalEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0977b0_Enum> _37625_enm) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_37625_enm, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90c83e_evalEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0977b0_Enum> _38528_enm, jule::Ptr<_1ab6a54d8_Token> _38540_errorToken) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_38528_enm))._field_Public, (*_38528_enm.alloc)._field_Token)))) {
		_1ab908d46_pushErr(_self_, _38540_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_38528_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab90c443__evalEnum(_self_, _38528_enm);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90cb80__evalTypeEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab098eba_TypeEnum> _39429_enm) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39429_enm, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90d07b_evalTypeEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab098eba_TypeEnum> _40332_enm, jule::Ptr<_1ab6a54d8_Token> _40348_errorToken) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40332_enm))._field_Public, (*_40332_enm.alloc)._field_Token)))) {
		_1ab908d46_pushErr(_self_, _40348_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40332_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab90cb80__evalTypeEnum(_self_, _40332_enm);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90d3bc__evalStruct(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a53d2_StructIns> _41227_s) {
	jule::Ptr<_1ab906a8b_Data> _4137_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41227_s, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41227_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	if ((((*(_41227_s))._field_Decl != nullptr) && (*(*(_41227_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4137_d))._field_Type))._field_BindIdent=(*(*(_41227_s))._field_Decl.alloc)._field_Ident;
	};
	return _4137_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90d7b8_evalStruct(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a2577_Struct> _42630_s, jule::Ptr<_1ab6a54d8_Token> _42646_errorToken) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42630_s))._field_Public, (*_42630_s.alloc)._field_Token)))) {
		_1ab908d46_pushErr(_self_, _42646_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42630_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab90de6c_checkDeprecated(_self_, &((*_42630_s.alloc)._field_Directives), _42646_errorToken);
	jule::Ptr<_1a37a53d2_StructIns> _4357_ins = _1a37a2a1c_instance(_42630_s);;
	if (((*_42630_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a37a53d2_StructIns> _4428_exist = _1a37a2d2a_appendInstance(_42630_s, &(_4357_ins));;
		if ((_4428_exist != nullptr)) {
			_4357_ins=_4428_exist;
		} else {
			if ((!(_1ab8a00d9_precheckStructIns((*(_self_))._field_s, &(_4357_ins), _42646_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1ab90d3bc__evalStruct(_self_, _4357_ins);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90db09_evalFnIns(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns> _45525_f) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45525_f, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45525_f, &__jule_any_type63), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline void _1ab90de6c_checkDeprecated(_1ab9087b3_eval* _self_, jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _46436_directives, jule::Ptr<_1ab6a54d8_Token> _46467_tok) {
	if (_1ab90983b_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1ab6bec94_Directive> _4693_d = _1ab93108d_findDirective(_46436_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4693_d != nullptr)) {
		if (((*_4693_d.alloc)._field_Args.len() == 0LL)) {
			_1ab908d46_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1ab908d46_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4693_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab90e368_evalFn(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0898e5_Fn> _48026_f, jule::Ptr<_1ab6a54d8_Token> _48034_errorToken) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48026_f))._field_Public, (*_48026_f.alloc)._field_Token)))) {
		_1ab908d46_pushErr(_self_, _48034_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48026_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab90de6c_checkDeprecated(_self_, &((*_48026_f.alloc)._field_Directives), _48034_errorToken);
	jule::Ptr<_1ab08c9a3_FnIns> _4897_ins = _1ab08b188_instance(_48026_f);;
	if (((*_48026_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1ab08c9a3_FnIns> _4968_exist = _1ab08b496_appendInstance(_48026_f, &(_4897_ins));;
		if ((_4968_exist != nullptr)) {
			_4897_ins=_4968_exist;
		};
	};
	_1b0b72d47_pushReference(_self_, &(_4897_ins));
	return _1ab90db09_evalFnIns(_self_, _4897_ins);;
}



inline void _1ab90e786_pushIllegalCycleError(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _50538_v1, jule::Ptr<_1ab8a7289_Var>* _50549_v2, _1a387dcd5_Builder* _50564_message) {
	;
	jule::Str _5073_refersTo = _1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50538_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_50549_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5083_buf = _1a3881117_Buf(_50564_message);;
	({
		auto except = _1a387ecd6_WriteStr(_50564_message, _1a87a8754_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:509:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_50564_message, _5073_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:510:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_50564_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:511:3"));
	});
	({
		auto except = _1a387e995_Write(_50564_message, _5083_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:512:3"));
		(except.result);
	});
}



inline jule::Bool _1ab90eb82_checkCrossCycle(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _51532_v, _1a387dcd5_Builder* _51546_message) {
	{
		auto expr = &((*((*(_51532_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0b796ab:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> *_51610_d = it;
			{
				if (((*(_51610_d)) == (*(_self_))._field_owner)) {
					_1ab90e786_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
				if ((!(_1ab90eb82_checkCrossCycle(_self_, _51610_d, _51546_message)))) {
					_1ab90e786_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
			}
			_iter_next_1b0b796ab:;
			++it;
			goto _iter_begin_1b0b796ab;
		}
		_iter_end_1b0b796ab:;
	};
	return true;;
}



inline jule::Bool _1ab91007d_checkIllegalCycles(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var>* _53239_v, jule::Ptr<_1ab6a54d8_Token> _53248_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53239_v)))) {
		_1ab908d46_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a387dcd5_Builder _5457_message = static__1a387e654_New(32LL);;
	if ((!(_1ab90eb82_checkCrossCycle(_self_, _53239_v, &(_5457_message))))) {
		jule::Str _5488_errMsg = _1a3880666_Str(&_5457_message);;
		_1a3880864_Clear(&_5457_message);
		_1ab90e786_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53239_v, &(_5457_message));
		_5488_errMsg+=_1a3880666_Str(&_5457_message);
		_1ab908d46_pushErr(_self_, _53248_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5488_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53239_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab910479_evalVar(_1ab9087b3_eval* _self_, jule::Ptr<_1ab8a7289_Var> _56027_v, jule::Ptr<_1ab6a54d8_Token> _56036_errorToken) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56027_v))._field_Public, (*_56027_v.alloc)._field_Token)))) {
		_1ab908d46_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab90de6c_checkDeprecated(_self_, &((*_56027_v.alloc)._field_Directives), _56036_errorToken);
	if (((*_56027_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1b0b91728;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4)) {
			_case_begin_1b0b83121:;
			{
				jule::Bool _5774_ok = _1ab91007d_checkIllegalCycles(_self_, &(_56027_v), _56036_errorToken);;
				if ((!(_5774_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
			_case_begin_1b0b829e4:;
			{
				jule::Ptr<_1ab83ce67_scopeChecker> _5828_s = (*(_self_))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1);;
				jule::Ptr<_1ab83ce67_scopeChecker> _5838_root = _1ab841344_getRoot(_5828_s);;
				if ((((((*_56027_v.alloc)._field_Scope != nullptr) && (!((*_56027_v.alloc)._field_Constant))) && ((*(_5838_root))._field_captured != nullptr)) && _1ab936db8_isVarCaptured(_5838_root, _5828_s, _56027_v))) {
					_1ab8410ad_pushCaptured(_5838_root, &(_56027_v));
				};
				if (((!((*_56027_v.alloc)._field_Reference)) || _1ab90983b_isUnsafe(_self_))) {
					goto _match_end_1b0b82e34;
				};
				while ((((*_5828_s.alloc)._field_owner == nullptr) && ((*_5828_s.alloc)._field_parent != nullptr))) {
					{
						_5828_s=(*_5828_s.alloc)._field_parent;
					}
				_iter_next_1b0b86b91:;
				}
				_iter_end_1b0b86b91:;;
				if (((((*_5828_s.alloc)._field_owner != nullptr) && (*((*_5828_s.alloc)._field_owner))._field_Anon) && ((*_56027_v.alloc)._field_Scope != (*((*_5828_s.alloc)._field_owner))._field_Scope))) {
					_1ab908d46_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1b0b82e34:;
	};
	if (((*_56027_v.alloc)._field_Scope == nullptr)) {
		_1b0b895cd_pushReference(_self_, &(_56027_v));
	};
	if (((((!((*_56027_v.alloc)._field_Used)) && (!((*_56027_v.alloc)._field_Binded))) && ((*_56027_v.alloc)._field_Scope == nullptr)) && (((*_56027_v.alloc)._field_Value == nullptr) || ((*((*_56027_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1ab090be8_SymTab> _6168_varfile = _1ab8638b6_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56027_v));;
		jule::Ptr<_1ab090be8_SymTab> _6178_file = _1ab885ca1_getCurrentFile((*(_self_))._field_s);;
		_1ab886059_setCurrentFile((*(_self_))._field_s, _6168_varfile);
		_1ab89d4d3_checkVar((*(_self_))._field_s, &(_56027_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4));
		_1ab886059_setCurrentFile((*(_self_))._field_s, _6178_file);
	};
	(*_56027_v.alloc)._field_Used=true;
	if ((((*_56027_v.alloc)._field_TypeSym == nullptr) || ((*((*_56027_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1b0b91728:;
	jule::Ptr<_1ab906a8b_Data> _6367_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=(*((*_56027_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56027_v.alloc)._field_Mutable, ._field_Reference=(*_56027_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56027_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56027_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	if ((((*_56027_v.alloc)._field_Value != nullptr) && ((*((*_56027_v.alloc)._field_Value))._field_Data != nullptr))) {
		if (((!((*_56027_v.alloc)._field_Binded)) && _1ab8a7696_IsInitialized(_56027_v))) {
			(*(_6367_d))._field_IsRune=(*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_IsRune;
		};
		if (((*_56027_v.alloc)._field_Constant && ((*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
			(*_6367_d.alloc)._field_Constant=jule::new_ptr<_1ab070c61_Const>((*(*((*((*(_56027_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6367_d.alloc)._field_Model=jule::Any((*_6367_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1ab8a7bb3_untypedConstant(_56027_v)) {
				_1ab909dd0_applyNumericPrefix(_self_, &(_6367_d));
				(*_6367_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6367_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab910875_evalTypeAlias(_1ab9087b3_eval* _self_, jule::Ptr<_1ab938a24_TypeAlias> _66033_ta, jule::Ptr<_1ab6a54d8_Token> _66049_errorToken) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66033_ta))._field_Public, (*_66033_ta.alloc)._field_Token)))) {
		_1ab908d46_pushErr(_self_, _66049_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66033_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_66033_ta.alloc)._field_Used=true;
	jule::Trait _6697_kind = (*((*((*_66033_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1ab906a8b_Data> _67011_d = nullptr;;
	{
		auto &_match_expr{ _6697_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)) {
			_case_begin_1b0b9be3c:;
			{
				_67011_d=_1ab90d3bc__evalStruct(_self_, _6697_kind.cast_ptr<_1a37a53d2_StructIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data3)) {
			_case_begin_1b0ba0858:;
			{
				_67011_d=_1ab90c443__evalEnum(_self_, _6697_kind.cast_ptr<_1ab0977b0_Enum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data4)) {
			_case_begin_1b0b9ee2e:;
			{
				_67011_d=_1ab90cb80__evalTypeEnum(_self_, _6697_kind.cast_ptr<_1ab098eba_TypeEnum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1b0b9a842:;
			{
				_67011_d=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66033_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});
				if ((*_66033_ta.alloc)._field_Binded) {
					(*((*(_67011_d))._field_Type))._field_BindIdent=(*_66033_ta.alloc)._field_Ident;
				} else {
					(*((*(_67011_d))._field_Type))._field_BindIdent=(*(*((*(_66033_ta))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
				};
				(*(_67011_d))._field_Model=jule::Any((*_67011_d.alloc)._field_Type, &__jule_any_type86);
			}
		}
		_match_end_1b0b9a6bb:;
	};
	(*((*(_67011_d))._field_Type))._field_Generic=(*_66033_ta.alloc)._field_Generic;
	return _67011_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab910c71_evalDef(_1ab9087b3_eval* _self_, jule::Any* _69928_def, jule::Ptr<_1ab6a54d8_Token> _69942_ident) {
	{
		auto &_match_expr{ (*(_69928_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b0ba86a7:;
			{
				return _1ab910479_evalVar(_self_, (*(_69928_def)).cast_ptr<_1ab8a7289_Var>(&__jule_any_type7), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b0ba8476:;
			{
				return _1ab90c83e_evalEnum(_self_, (*(_69928_def)).cast_ptr<_1ab0977b0_Enum>(&__jule_any_type12), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b0ba871d:;
			{
				return _1ab90d07b_evalTypeEnum(_self_, (*(_69928_def)).cast_ptr<_1ab098eba_TypeEnum>(&__jule_any_type13), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b0ba8784:;
			{
				return _1ab90d7b8_evalStruct(_self_, (*(_69928_def)).cast_ptr<_1a37a2577_Struct>(&__jule_any_type9), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b0ba87ea:;
			{
				jule::Ptr<_1ab0898e5_Fn> _7108_f = (*(_69928_def)).cast_ptr<_1ab0898e5_Fn>(&__jule_any_type10);;
				if ((!(*(_7108_f))._field_Ident.equal("init", 4))) {
					return _1ab90e368_evalFn(_self_, _7108_f, _69942_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b0ba8872:;
			{
				return _1ab90db09_evalFnIns(_self_, (*(_69928_def)).cast_ptr<_1ab08c9a3_FnIns>(&__jule_any_type63));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b0ba88e9:;
			{
				return _1ab910875_evalTypeAlias(_self_, (*(_69928_def)).cast_ptr<_1ab938a24_TypeAlias>(&__jule_any_type8), _69942_ident);;
			}
		}
		_match_end_1b0ba85a8:;
	};
	_1ab908d46_pushErr(_self_, _69942_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_69942_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9110b2_evalIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c64c6_IdentExpr> _72329_ident) {
	jule::Any _7247_def = _1ab90bab3_getDef(_self_, &((*(_72329_ident))._field_Ident), (*_72329_ident.alloc)._field_Binded);;
	return _1ab910c71_evalDef(_self_, &(_7247_def), (*_72329_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab911403_evalUnary(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c6c68_UnaryExpr> _72830_u) {
	_1ab927aac_unaryEval _7297_unary = static__1ab928030_new(_self_);;
	return _1ab929460_eval(&_7297_unary, _72830_u);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab911744_evalVariadic(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c7142_VariadicExpr> _73333_v) {
	if (((*(_73333_v))._field_Expr == nullptr)) {
		_1ab908d46_pushErr(_self_.ptr(), (*_73333_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab939816_Type> _7397_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7397_prefix;
	});;
	jule::Ptr<_1ab906a8b_Data> _7437_d = _1ab927628_evalExpr(_self_, (*_73333_v.alloc)._field_Expr);;
	if ((_7437_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab93bc36_Variadicable((*(_7437_d))._field_Type.ptr())))) {
		_1ab908d46_pushErr(_self_, (*_73333_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_7437_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1ab936989_makeVariadic(&(_7437_d), (*(_1ab93d023_Slc((*(_7437_d))._field_Type)))._field_Elem);
	return _7437_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab911a85_evalUnsafe(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c6020_UnsafeExpr> _75531_u) {
	jule::Bool _7563_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1ab906a8b_Data> _7587_d = _1ab927628_evalExpr(_self_, (*(_75531_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7563_unsafety;
	return _7587_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab911dc6_evalArr(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378c386_SliceExpr> _76328_s) {
	jule::Ptr<_1ab94924e_Arr> _7657_pt = _1ab93cc8c_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ab94924e_Arr> _7677_arr = jule::new_ptr<_1ab94924e_Arr>(_1ab94924e_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7657_pt))._field_Elem});;
	jule::Bool _7737_filled = false;;
	if (((*(_76328_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76328_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type78) {
				_case_begin_1b0bb8ab3:;
				{
					if (((*((*((*(_76328_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1ab6c7142_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1b0bb8a08;
					};
					if ((*_7657_pt.alloc)._field_Auto) {
						_1ab908d46_pushErr(_self_, (*_76328_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7737_filled=true;
					((*(_76328_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1b0bb8a08:;
		};
	};
	(*(_7677_arr))._field_N=(*_76328_s.alloc)._field_Exprs.len();
	if ((!((*_7657_pt.alloc)._field_Auto))) {
		if (((*_7677_arr.alloc)._field_N > (*_7657_pt.alloc)._field_N)) {
			_1ab908d46_pushErr(_self_, (*_76328_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7677_arr.alloc)._field_N < (*_7657_pt.alloc)._field_N)) {
			(*_7677_arr.alloc)._field_N=(*_7657_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1ab082910_ArrayExprModel> _8027_model = jule::new_ptr<_1ab082910_ArrayExprModel>(_1ab082910_ArrayExprModel{._field_Kind=_7677_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7737_filled) {
		(*(_8027_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8027_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_76328_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1ab939816_Type> _8117_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7677_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76328_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0bc0aa9:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _81315_elem = *it;
			{
				jule::Ptr<_1ab906a8b_Data> _8148_d = _1ab927628_evalExpr(_self_, _81315_elem);;
				if ((_8148_d == nullptr)) {
					goto _iter_next_1b0bc0aa9;
				};
				;
				if (_1ab8931ed_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7677_arr.alloc)._field_Elem), &(_8148_d), &((*(_81315_elem))._field_Token))) {
					_1ab88d968_checkAssignType((*(_self_))._field_s, false, &((*_7677_arr.alloc)._field_Elem), &(_8148_d), (*_81315_elem.alloc)._field_Token, _1ab90bd49_getOwnerRefers(_self_));
				};
				(*(_8027_model))._field_Elems=jule::append((*_8027_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8148_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1b0bc0aa9:;
			++it;
			goto _iter_begin_1b0bc0aa9;
		}
		_iter_end_1b0bc0aa9:;
	};
	(*_self_.alloc)._field_prefix=_8117_prefix;
	if (_7737_filled) {
		(*_8027_model.alloc)._field_Elems=jule::append((*_8027_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7677_arr, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8027_model, &__jule_any_type87), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91237c_evalExpSlc(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378c386_SliceExpr> _84031_s, jule::Ptr<_1ab939816_Type> _84055_t, jule::Any _84069_first) {
	jule::Ptr<_1ab946e2d_Slc> _8417_slc = jule::new_ptr<_1ab946e2d_Slc>(_1ab946e2d_Slc{._field_Elem=_84055_t});;
	jule::I64 _8457_i = 0LL;;
	jule::Ptr<_1ab07e9c8_SliceExprModel> _8467_model = jule::new_ptr<_1ab07e9c8_SliceExprModel>(_1ab07e9c8_SliceExprModel{._field_ElemType=_84055_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84031_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84069_first != nullptr)) {
		(*(_8467_model))._field_Elems=jule::append((*_8467_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84069_first; __jule_collection; }));
		_8457_i=1LL;
	};
	jule::Ptr<_1ab939816_Type> _8557_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8417_slc))._field_Elem;
	{
		auto expr = (*_84031_s.alloc)._field_Exprs.slice(_8457_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b0bcb7b8:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _85715_elem = *it;
			{
				jule::Ptr<_1ab906a8b_Data> _8588_d = _1ab927628_evalExpr(_self_, _85715_elem);;
				if ((_8588_d != nullptr)) {
					;
					if (_1ab8931ed_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8417_slc.alloc)._field_Elem), &(_8588_d), &((*(_85715_elem))._field_Token))) {
						_1ab88d968_checkAssignType((*(_self_))._field_s, false, &((*_8417_slc.alloc)._field_Elem), &(_8588_d), (*_85715_elem.alloc)._field_Token, _1ab90bd49_getOwnerRefers(_self_));
					};
					(*_8467_model.alloc)._field_Elems=jule::append((*_8467_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8588_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1b0bcb7b8:;
			++it;
			goto _iter_begin_1b0bcb7b8;
		}
		_iter_end_1b0bcb7b8:;
	};
	(*_self_.alloc)._field_prefix=_8557_prefix;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8417_slc, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8467_model, &__jule_any_type79), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9126bd_evalSliceExpr(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378c386_SliceExpr> _87834_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ab93cc8c_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1b0bd1504:;
				{
					return _1ab911dc6_evalArr(_self_, _87834_s);;
				}
			}
			else if ((_1ab93d023_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1b0bd159d:;
				{
					jule::Ptr<_1ab946e2d_Slc> _8849_pt = _1ab93d023_Slc((*(_self_))._field_prefix);;
					return _1ab91237c_evalExpSlc(_self_, _87834_s, (*(_8849_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1b0bd1449:;
		};
	};
	jule::Ptr<_1ab939816_Type> _8897_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_87834_s))._field_Exprs.len() == 0LL)) {
		_1ab908d46_pushErr(_self_, (*_87834_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _8977_firstExpr = (*_87834_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1ab906a8b_Data> _8987_firstElem = _1ab927628_evalExpr(_self_, _8977_firstExpr);;
	if ((_8987_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1ab8931ed_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_8987_firstElem))._field_Type), &(_8987_firstElem), &((*(_8977_firstExpr))._field_Token));
	jule::Ptr<_1ab906a8b_Data> _9087_d = _1ab91237c_evalExpSlc(_self_, _87834_s, (*(_8987_firstElem))._field_Type, (*(_8987_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8897_prefix;
	return _9087_d;;
}



inline jule::Bool _1ab912ab9_checkIntegerIndexingByData(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _91447_d, jule::Ptr<_1ab6a54d8_Token> _91461_token) {
	jule::Str _9153_errKey = _1ab93436b_checkDataForIntegerIndexing(&((*(_self_))._field_s), _91447_d, &(_91461_token), _1ab90bd49_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9153_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1b0bd9661:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1b0bd9342:;
			{
				_1ab908d46_pushErr(_self_, _91461_token, _9153_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_91447_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b0bd8b8d:;
			{
				_1ab908d46_pushErr(_self_, _91461_token, _9153_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0bd92cb:;
	};
	return false;;
}



inline void _1ab912ed7_indexingPtr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _92732_d, jule::Ptr<_1ab906a8b_Data>* _92747_index, jule::Ptr<_1a378cdae_IndexingExpr>* _92766_i) {
	_1ab912ab9_checkIntegerIndexingByData(_self_, _92747_index, (*((*(_92766_i))))._field_Token);
	(*((*(_92732_d))))._field_Lvalue=true;
	jule::Ptr<_1ab949c22_Ptr> _9317_ptr = _1ab93c4d9_Ptr((*((*(_92732_d))))._field_Type.ptr());;
	{
		
		if (_1ab94a78e_IsUnsafe(_9317_ptr.ptr())) {
			_case_begin_1b0bdc532:;
			{
				_1ab908d46_pushErr(_self_, (*((*(_92766_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ab90983b_isUnsafe(_self_)))) {
			_case_begin_1b0bdc5ba:;
			{
				_1ab908d46_pushErr(_self_, (*((*(_92766_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0bdc488:;
	};
	(*((*(_92732_d))))._field_Type=(*(_9317_ptr))._field_Elem;
}



inline void _1ab913405_indexingArr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _94332_d, jule::Ptr<_1ab906a8b_Data>* _94347_index, jule::Ptr<_1a378cdae_IndexingExpr>* _94366_i) {
	jule::Ptr<_1ab94924e_Arr> _9447_arr = _1ab93cc8c_Arr((*((*(_94332_d))))._field_Type.ptr());;
	(*((*(_94332_d))))._field_Type=(*(_9447_arr))._field_Elem;
	_1ab912ab9_checkIntegerIndexingByData(_self_, _94347_index, (*((*(_94366_i))))._field_Token);
	(*((*(_94332_d))))._field_Lvalue=true;
	if ((_1ab9074c6_IsConst((*(_94347_index)).ptr()) && (_1ab073912_AsF64((*((*(_94347_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9447_arr.alloc)._field_N)))) {
		_1ab908d46_pushErr(_self_, (*((*(_94366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1ab913823_indexingSlc(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _95332_d, jule::Ptr<_1ab906a8b_Data>* _95347_index, jule::Ptr<_1a378cdae_IndexingExpr>* _95366_i) {
	jule::Ptr<_1ab946e2d_Slc> _9547_slc = _1ab93d023_Slc((*((*(_95332_d))))._field_Type.ptr());;
	(*((*(_95332_d))))._field_Type=(*(_9547_slc))._field_Elem;
	_1ab912ab9_checkIntegerIndexingByData(_self_, _95347_index, (*((*(_95366_i))))._field_Token);
	(*((*(_95332_d))))._field_Lvalue=true;
	if ((!(_1ab9074c6_IsConst((*(_95347_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95332_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b0be4c54:;
			{
				jule::Ptr<_1ab07e9c8_SliceExprModel> _9658_m = (*((*(_95332_d))))._field_Model.unsafe_cast_ptr<_1ab07e9c8_SliceExprModel>();;
				jule::F64 _9664_indx = _1ab073912_AsF64((*((*(_95347_index))))._field_Constant.ptr());;
				if ((_9664_indx >= static_cast<jule::F64>((*(_9658_m))._field_Elems.len()))) {
					_1ab908d46_pushErr(_self_, (*((*(_95366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_95332_d))))._field_Model=(*(_9658_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9664_indx))];
					(*((*(_95332_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1b0be4bdd:;
	};
}



inline void _1ab913c41_indexingMap(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _97632_d, jule::Ptr<_1ab906a8b_Data>* _97647_index, jule::Ptr<_1a378cdae_IndexingExpr>* _97666_i) {
	(*((*(_97632_d))))._field_Lvalue=true;
	if (((*(_97647_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab9485c2_Map> _9817_m = _1ab93da5c_Map((*((*(_97632_d))))._field_Type.ptr());;
	_1ab8e4e31_assignTypeChecker _9827_atc = _1ab8e4e31_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9817_m))._field_Key, ._field_d=(*(_97647_index)), ._field_errorToken=(*((*(_97666_i))))._field_Token, ._field_refers=_1ab90bd49_getOwnerRefers(_self_)};;
	_1ab8e5e32_check(&_9827_atc);
	(*((*(_97632_d))))._field_Type=(*_9817_m.alloc)._field_Val;
}



inline void _1ab91415e_indexingStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _99332_d, jule::Ptr<_1ab906a8b_Data>* _99347_index, jule::Ptr<_1a378cdae_IndexingExpr>* _99366_i) {
	(*((*(_99332_d))))._field_Type=_1ab9b4aa0_primU8;
	(*((*(_99332_d))))._field_Mutable=false;
	(*((*(_99332_d))))._field_Lvalue=true;
	if (((*(_99347_index)) == nullptr)) {
		return;;
	};
	_1ab912ab9_checkIntegerIndexingByData(_self_, _99347_index, (*((*(_99366_i))))._field_Token);
	if ((!(_1ab9074c6_IsConst((*(_99347_index)).ptr())))) {
		(*((*(_99332_d))))._field_Constant=nullptr;
		(*((*(_99332_d))))._field_untyped=false;
		return;;
	};
	if (_1ab9074c6_IsConst((*(_99332_d)).ptr())) {
		jule::I64 _10114_j = _1ab0733e5_AsI64((*((*(_99347_index))))._field_Constant.ptr());;
		jule::Str _10124_s = _1ab072dc8_ReadStr((*((*(_99332_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10114_j) >= _10124_s.len())) {
			_1ab908d46_pushErr(_self_, (*((*(_99366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1ab073e73_SetU64((*((*(_99332_d))))._field_Constant, static_cast<jule::U64>(_10124_s[_10114_j]));
		};
	};
}



inline void _1ab91457c_comptimeRange(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _102134_d, jule::Ptr<_1ab906a8b_Data>* _102149_index, jule::Ptr<_1a378cdae_IndexingExpr>* _102168_i) {
	if (((*(_102149_index)) == nullptr)) {
		(*(_102134_d))=nullptr;
		return;;
	};
	if ((!(_1ab912ab9_checkIntegerIndexingByData(_self_, _102149_index, (*((*((*(_102168_i))))._field_Index))._field_Token)))) {
		(*(_102134_d))=nullptr;
		return;;
	};
	if ((!(_1ab9074c6_IsConst((*(_102149_index)).ptr())))) {
		(*(_102134_d))=nullptr;
		_1ab908d46_pushErr(_self_, (*(*((*(_102168_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _10363_j = static_cast<jule::I64>(_1ab0733e5_AsI64((*((*(_102149_index))))._field_Constant.ptr()));;
	jule::Ptr<_1ab119cc7_comptimeRange> _10377_ci = _1ab940366_comptimeRange((*((*(_102134_d))))._field_Type.ptr());;
	if ((_10363_j >= ((_1ab119aa7_comptimeRangeKindMptrData*)(*(_10377_ci))._field_kind.safe_type())->_1ab119953_len((*(_10377_ci))._field_kind.data))) {
		(*(_102134_d))=nullptr;
		_1ab908d46_pushErr(_self_, (*(*((*(_102168_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1ab119aa7_comptimeRangeKindMptrData*)(*_10377_ci.alloc)._field_kind.safe_type())->_1ab118e3b_index((*_10377_ci.alloc)._field_kind.data, _102134_d, _10363_j);
}



inline void _1ab91499a_toIndexing(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _104631_d, jule::Ptr<_1ab906a8b_Data>* _104646_index, jule::Ptr<_1a378cdae_IndexingExpr>* _104665_i) {
	{
		
		if ((_1ab93c4d9_Ptr((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c065e5:;
			{
				_1ab912ed7_indexingPtr(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1ab93cc8c_Arr((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c0668e:;
			{
				_1ab913405_indexingArr(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1ab93d023_Slc((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c06705:;
			{
				_1ab913823_indexingSlc(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1ab93da5c_Map((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c0676b:;
			{
				_1ab913c41_indexingMap(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c067d2:;
			{
				jule::Ptr<_1ab94292e_Prim> _10614_prim = _1ab93bebc_Prim((*((*(_104631_d))))._field_Type);;
				{
					
					if (_1ab945de9_IsStr(_10614_prim.ptr())) {
						_case_begin_1b0c0aae4:;
						{
							_1ab91415e_indexingStr(_self_, _104631_d, _104646_index, _104665_i);
							return;;
						}
					}
					_match_end_1b0c0aa39:;
				};
			}
		}
		else if ((_1ab940366_comptimeRange((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c06859:;
			{
				_1ab91457c_comptimeRange(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		_match_end_1b0c06480:;
	};
	_1ab908d46_pushErr(_self_, (*((*(_104665_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_104631_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ab914e51_pushGenericsFromExprSubIdent(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3788c34_SubIdentExpr>* _107450_sexpr, jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>* _10758_generics, jule::Ptr<_1ab6c4bab_Expr>* _107541_expr) {
	jule::Ptr<_1ab6c124b_SubIdentTypeDecl> _10767_t = jule::new_ptr<_1ab6c124b_SubIdentTypeDecl>(_1ab6c124b_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>>(nullptr)});;
	if ((!(_1ab9353e4_pushSubIdentFromExpr(jule::Any((*(_107450_sexpr)), &__jule_any_type88), &(_10767_t))))) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*(_107541_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*(_10758_generics)); __jule_push_dest.push(jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Kind=jule::Any(_10767_t, &__jule_any_type89)})); };
	return true;;
}



inline jule::Bool _1ab91534c_pushGenericsFromData(jule::Ptr<_1ab9087b3_eval> _self_, jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>* _108542_generics, jule::Ptr<_1ab6c4bab_Expr>* _108575_expr) {
	{
		auto &_match_expr{ (*((*(_108575_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b0c139dc:;
			{
				jule::Ptr<_1ab6c6c68_UnaryExpr> _10888_u = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1ab6c6c68_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10888_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1b0c184e7:;
						{
							jule::Ptr<_1ab6c23a1_PtrTypeDecl> _10919_kind = jule::new_ptr<_1ab6c23a1_PtrTypeDecl>(_1ab6c23a1_PtrTypeDecl{._field_Elem=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _10929__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c0877_TypeDecl>(nullptr); __jule_collection; });;
							_1ab91534c_pushGenericsFromData(_self_, &(_10929__generics), &((*(_10888_u))._field_Expr));
							(*_10919_kind.alloc)._field_Elem=_10929__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*((*(_108575_expr))))._field_Token, ._field_Kind=jule::Any(_10919_kind, &__jule_any_type73)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1b0c1855d:;
						{
							jule::Ptr<_1ab6c1922_SptrTypeDecl> _11009_kind = jule::new_ptr<_1ab6c1922_SptrTypeDecl>(_1ab6c1922_SptrTypeDecl{._field_Elem=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _11019__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c0877_TypeDecl>(nullptr); __jule_collection; });;
							_1ab91534c_pushGenericsFromData(_self_, &(_11019__generics), &((*(_10888_u))._field_Expr));
							(*_11009_kind.alloc)._field_Elem=_11019__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*((*(_108575_expr))))._field_Token, ._field_Kind=jule::Any(_11009_kind, &__jule_any_type74)})); };
						}
					}
					else {
						_case_begin_1b0c141e6:;
						{
							_1ab908d46_pushErr(_self_.ptr(), (*(_10888_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b0c1645c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b0c13a53:;
			{
				{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push((*((*(_108575_expr))))._field_Kind.cast_ptr<_1ab6c0877_TypeDecl>(&__jule_any_type91)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b0c0ec2a:;
			{
				jule::Ptr<_1a3788c34_SubIdentExpr> _11158_sexpr = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a3788c34_SubIdentExpr>();;
				return _1ab914e51_pushGenericsFromExprSubIdent(_self_, &(_11158_sexpr), _108542_generics, _108575_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b0c0ec91:;
			{
				jule::Ptr<_1ab6c64c6_IdentExpr> _11188_ident = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1ab6c64c6_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*_11188_ident.alloc)._field_Token, ._field_Ident=(*_11188_ident.alloc)._field_Ident, ._field_Binded=(*(_11188_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)}), &__jule_any_type77)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b0c11aea:;
			{
				{
					auto expr = &((*((*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1ab6c57a0_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0c22369:;
					if (it != expr_end) {
						jule::Ptr<_1ab6c4bab_Expr> _112716_texpr = *it;
						{
							if ((!(_1ab91534c_pushGenericsFromData(_self_, _108542_generics, &(_112716_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b0c22369:;
						++it;
						goto _iter_begin_1b0c22369;
					}
					_iter_end_1b0c22369:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b0c11b61:;
			{
				jule::Ptr<_1a378885a_NamespaceExpr> _11338_ns = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a378885a_NamespaceExpr>();;
				jule::Ptr<_1ab6c0e82_IdentTypeDecl> _11348_decl = jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*(_11338_ns))._field_Ident, ._field_Ident=(*((*_11338_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*(_11348_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab6c1625_NamespaceTypeDecl>(_1ab6c1625_NamespaceTypeDecl{._field_Namespace=(*_11338_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*_11348_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11348_decl, &__jule_any_type77)})}), &__jule_any_type93)})); };
			}
		}
		else {
			_case_begin_1b0c0ebb4:;
			{
				_1ab908d46_pushErr(_self_.ptr(), (*((*(_108575_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b0c0eb4d:;
	};
	return true;;
}



inline void _1ab9156b0_evalIdentDeclFromIndexing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab906a8b_Data>* _115547_d, jule::Ptr<_1a378cdae_IndexingExpr>* _115562_i) {
	jule::Ptr<_1a37a53d2_StructIns> _11567_s = _1ab93d540_Struct((*((*(_115547_d))))._field_Type.ptr());;
	if ((_11567_s == nullptr)) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*((*(_115562_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_115547_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_115547_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab6c0e82_IdentTypeDecl> _116311_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_115562_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b0c2e761:;
			{
				jule::Ptr<_1ab6c64c6_IdentExpr> _11668_expr = (*((*((*(_115562_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ab6c64c6_IdentExpr>();;
				_116311_decl=jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*_11668_expr.alloc)._field_Token, ._field_Ident=(*_11668_expr.alloc)._field_Ident, ._field_Binded=(*(_11668_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b0c30b91:;
			{
				jule::Ptr<_1a378885a_NamespaceExpr> _11738_expr = (*((*((*(_115562_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a378885a_NamespaceExpr>();;
				_116311_decl=jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*(_11738_expr))._field_Ident, ._field_Ident=(*((*_11738_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1b0c2ebd4:;
			{
				_1ab908d46_pushErr(_self_, (*((*(_115562_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_115547_d))=nullptr;
				return;;
			}
		}
		_match_end_1b0c2eb6d:;
	};
	if ((!(_1ab91534c_pushGenericsFromData(_self_, &((*(_116311_decl))._field_Generics), &((*((*(_115562_i))))._field_Index))))) {
		(*(_115547_d))=nullptr;
		return;;
	};
	_11567_s=({ auto _wrap_copy = _1ab91c1ab_typeChecker(_self_); _1ab95109c_fromStruct(&_wrap_copy, &(_116311_decl), &((*(_11567_s))._field_Decl)); });
	if ((_11567_s == nullptr)) {
		(*(_115547_d))=nullptr;
		return;;
	};
	(*(*((*(_115547_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11567_s, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1ab915b66_checkGenericFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _119836_f, jule::Ptr<_1ab6a54d8_Token>* _119852_et, jule::Any* _119876_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab08c9a3_FnIns> _11997_old = (*(_119836_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab89dec8_checkGenericFn((*(_self_))._field_s, _119836_f, _119852_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1ab935070_updateModelToGenericIns(_119876_model, _119836_f);
		_1b0c37813_updateRefer(_1ab90bd49_getOwnerRefers(_self_), &(_11997_old), _119836_f);
	};
	return __jule_func_result;;
}



inline void _1ab915ec9_evalFnGenericFromIndexing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab906a8b_Data>* _121447_d, jule::Ptr<_1a378cdae_IndexingExpr>* _121462_i) {
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _12157_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c0877_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1ab91534c_pushGenericsFromData(_self_, &(_12157_generics), &((*((*(_121462_i))))._field_Index))))) {
		(*(_121447_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _12217_f = _1ab93d2a9_Fn((*((*(_121447_d))))._field_Type.ptr());;
	jule::I64 _12227_genericsLen = 0LL;;
	if (((*(_12217_f))._field_Decl != nullptr)) {
		_12227_genericsLen=(*(*(_12217_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1ab8879a6_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12227_genericsLen, _12157_generics.len(), (*((*((*(_121462_i))))._field_Expr))._field_Token)))) {
		(*(_121447_d))=nullptr;
		return;;
	};
	(*_12217_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(0LL, (*(*(_12217_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab937e30_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12157_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0c3d473:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c0877_TypeDecl> _123315_g = *it;
			{
				jule::Ptr<_1ab906a8b_Data> _12348_k = _1ab91c4ec_evalType(_self_, _123315_g);;
				if ((_12348_k == nullptr)) {
					(*(_121447_d))=nullptr;
					return;;
				};
				(*_12217_f.alloc)._field_Generics=jule::append((*_12217_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=(*(_12348_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1b0c3d473:;
			++it;
			goto _iter_begin_1b0c3d473;
		}
		_iter_end_1b0c3d473:;
	};
	if (_1ab08de6b_IsBuiltin(_12217_f)) {
		return;;
	};
	jule::Bool _12463_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab915b66_checkGenericFn(_self_, &(_12217_f), &((*(*((*(_121462_i))))._field_Expr.alloc)._field_Token), &((*((*(_121447_d))))._field_Model));
		_12463_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12463_ok) {
		(*(*((*(_121447_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12217_f, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1);
	} else {
		(*(_121447_d))=nullptr;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91631a_evalIndexing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378cdae_IndexingExpr> _125433_i) {
	jule::Ptr<_1ab939816_Type> _12557_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12557_prefix;
	});;
	jule::Ptr<_1ab906a8b_Data> _12597_d = _1ab926814_evalExprKind(_self_, (*((*(_125433_i))._field_Expr))._field_Kind);;
	if ((_12597_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12597_d))._field_Decl) {
		_1ab9156b0_evalIdentDeclFromIndexing(_self_, &(_12597_d), &(_125433_i));
		return _12597_d;;
	};
	if ((_1ab93d2a9_Fn((*(_12597_d))._field_Type.ptr()) != nullptr)) {
		_1ab915ec9_evalFnGenericFromIndexing(_self_, &(_12597_d), &(_125433_i));
		return _12597_d;;
	};
	_1ab906a8b_Data _12757_oldData = (*(_12597_d));;
	jule::Ptr<_1ab906a8b_Data> _12777_index = _1ab927628_evalExpr(_self_, (*_125433_i.alloc)._field_Index);;
	if ((_12777_index == nullptr)) {
		return nullptr;;
	};
	_1ab8508e7_makeComptimeRange(&(_12597_d));
	(*(_12597_d))._field_Decl=false;
	_1ab91499a_toIndexing(_self_, &(_12597_d), &(_12777_index), &(_125433_i));
	if ((_12597_d == nullptr)) {
		return nullptr;;
	};
	if (_1ab9074c6_IsConst(_12597_d.ptr())) {
		(*(_12597_d))._field_Decl=false;
		(*(_12597_d))._field_Model=jule::Any((*(_12597_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_12597_d))._field_Decl) {
		(*(_12597_d))._field_Decl=false;
	} else {
		(*(_12597_d))._field_Model=jule::Any(jule::new_ptr<_1ab07ee7e_IndexingExprModel>(_1ab07ee7e_IndexingExprModel{._field_Token=(*_125433_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1ab906a8b_Data>(_12757_oldData), ._field_Index=_12777_index}), &__jule_any_type42);
	};
	return _12597_d;;
}



inline __jule_tuple_x_1ab906a8b_Data__jule_tuple_x_1ab906a8b_Data _1ab91665b_evalSlicingExprs(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378d51e_SlicingExpr>* _131438_s) {
	__jule_tuple_x_1ab906a8b_Data__jule_tuple_x_1ab906a8b_Data __jule_func_result;
	jule::Ptr<_1ab939816_Type> _13157_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13157_prefix;
	});;
	jule::Ptr<_1ab906a8b_Data> _131911_l = nullptr;;
	jule::Ptr<_1ab906a8b_Data> _132011_r = nullptr;;
	if (((*((*(_131438_s))))._field_Start != nullptr)) {
		_131911_l=_1ab927628_evalExpr(_self_, (*((*(_131438_s))))._field_Start);
		if ((_131911_l != nullptr)) {
			_1ab912ab9_checkIntegerIndexingByData(_self_, &(_131911_l), (*((*(_131438_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131911_l=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3c9c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab071190_NewI64(0LL)});
		(*((*(_131911_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_131911_l.alloc)._field_Model=jule::Any((*_131911_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_131438_s))))._field_To != nullptr)) {
		_132011_r=_1ab927628_evalExpr(_self_, (*((*(_131438_s))))._field_To);
		if ((_132011_r != nullptr)) {
			_1ab912ab9_checkIntegerIndexingByData(_self_, &(_132011_r), (*((*(_131438_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131911_l;
	__jule_func_result.__jule_result_arg1 = _132011_r;
	return __jule_func_result;;
}



inline void _1ab916914_slicingArr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _135027_d) {
	jule::Ptr<_1ab939816_Type> _13517_elemType = (*(_1ab93cc8c_Arr((*((*(_135027_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_135027_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab946e2d_Slc>(_1ab946e2d_Slc{._field_Elem=_13517_elemType}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data24)});
	(*((*(_135027_d))))._field_Lvalue=false;
	(*((*(_135027_d))))._field_Mutable=((*((*(_135027_d))))._field_Mutable || (!(_1ab93b1ec_Mutable(_13517_elemType.ptr()))));
}



inline void _1ab916d32_slicingStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _136527_d, jule::Ptr<_1ab906a8b_Data>* _136538_l, jule::Ptr<_1ab906a8b_Data>* _136549_r) {
	(*((*(_136527_d))))._field_Lvalue=false;
	(*((*(_136527_d))))._field_Mutable=true;
	if ((!(_1ab9074c6_IsConst((*(_136527_d)).ptr())))) {
		return;;
	};
	if ((((*(_136538_l)) == nullptr) || ((*(_136549_r)) == nullptr))) {
		(*((*(_136527_d))))._field_Constant=nullptr;
		(*((*(_136527_d))))._field_untyped=false;
		return;;
	};
	if ((_1ab9074c6_IsConst((*(_136538_l)).ptr()) && _1ab9074c6_IsConst((*(_136549_r)).ptr()))) {
		jule::I64 _13794_left = _1ab0733e5_AsI64((*((*(_136538_l))))._field_Constant.ptr());;
		if ((_13794_left < 0LL)) {
			return;;
		};
		jule::Str _13844_s = _1ab072dc8_ReadStr((*((*(_136527_d))))._field_Constant);;
		jule::I64 _13858_right = static_cast<jule::I64>(0LL);;
		if (((*(_136549_r)) == nullptr)) {
			_13858_right=static_cast<jule::I64>(_13844_s.len());
		} else {
			_13858_right=_1ab0733e5_AsI64((*((*(_136549_r))))._field_Constant);
		};
		if ((_13794_left > _13858_right)) {
			return;;
		};
		_1ab0744d4_SetStr((*((*(_136527_d))))._field_Constant, _13844_s.slice(_13794_left, _13858_right));
		(*((*(_136527_d))))._field_Decl=true;
	} else {
		(*((*(_136527_d))))._field_Constant=nullptr;
		(*((*(_136527_d))))._field_untyped=false;
	};
}



inline void _1ab91730a_checkSlicing(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _140333_d, jule::Ptr<_1ab906a8b_Data>* _140344_l, jule::Ptr<_1ab906a8b_Data>* _140355_r, jule::Ptr<_1a378d51e_SlicingExpr>* _140366_s) {
	{
		
		if ((_1ab93cc8c_Arr((*((*(_140333_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c5a22b:;
			{
				_1ab916914_slicingArr(_self_, _140333_d);
				return;;
			}
		}
		else if ((_1ab93d023_Slc((*((*(_140333_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c5a2c5:;
			{
				return;;
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_140333_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0c5a33b:;
			{
				jule::Ptr<_1ab94292e_Prim> _14114_prim = _1ab93bebc_Prim((*((*(_140333_d))))._field_Type);;
				{
					
					if (_1ab945de9_IsStr(_14114_prim.ptr())) {
						_case_begin_1b0c5cb13:;
						{
							_1ab916d32_slicingStr(_self_, _140333_d, _140344_l, _140355_r);
							return;;
						}
					}
					_match_end_1b0c5ca58:;
				};
			}
		}
		_match_end_1b0c5a0e9:;
	};
	_1ab908d46_pushErr(_self_, (*((*(_140366_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_140333_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91764b_evalSlicing(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378d51e_SlicingExpr> _142232_s) {
	jule::Ptr<_1ab906a8b_Data> _14237_d = _1ab927628_evalExpr(_self_, (*(_142232_s))._field_Expr);;
	if ((_14237_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab906a8b_Data> _14287_l;
	jule::Ptr<_1ab906a8b_Data> _142814_r;
	({
		__jule_tuple_x_1ab906a8b_Data__jule_tuple_x_1ab906a8b_Data __jule_assign_result = _1ab91665b_evalSlicingExprs(_self_, &(_142232_s));
		_14287_l = __jule_assign_result.__jule_result_arg0;
		_142814_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14287_l == nullptr)) {
		return _14237_d;;
	};
	(*(_14237_d))._field_Decl=false;
	_1ab91730a_checkSlicing(_self_, &(_14237_d), &(_14287_l), &(_142814_r), &(_142232_s));
	if (_1ab9074c6_IsConst(_14237_d.ptr())) {
		(*(_14237_d))._field_Decl=false;
		(*(_14237_d))._field_Model=jule::Any((*(_14237_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_14237_d))._field_Decl) {
		(*(_14237_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ab08126b_SlicingExprModel> _14468_model = jule::new_ptr<_1ab08126b_SlicingExprModel>(_1ab08126b_SlicingExprModel{._field_Token=(*_142232_s.alloc)._field_Token, ._field_Expr=(*(_14237_d))._field_Model, ._field_Left=(*(_14287_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_142814_r != nullptr)) {
			(*(_14468_model))._field_Right=(*_142814_r.alloc)._field_Model;
		};
		(*(_14237_d))._field_Model=jule::Any(_14468_model, &__jule_any_type94);
	};
	return _14237_d;;
}



inline void _1ab917a69_castPtr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _145927_t, jule::Ptr<_1ab906a8b_Data> _145941_d, jule::Ptr<_1ab6a54d8_Token> _145951_errorToken) {
	(*(_145941_d))._field_Constant=nullptr;
	(*_145941_d.alloc)._field_untyped=false;
	jule::Ptr<_1ab94645a_Sptr> _14623_sptr = _1ab93c253_Sptr((*_145941_d.alloc)._field_Type.ptr());;
	if ((_14623_sptr != nullptr)) {
		if ((!(_1ab93a053_Equal((*(_1ab93c4d9_Ptr(_145927_t.ptr())))._field_Elem, (*_14623_sptr.alloc)._field_Elem)))) {
			_1ab908d46_pushErr(_self_, _145951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_145941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_145927_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1ab90983b_isUnsafe(_self_)))) {
		_1ab908d46_pushErr(_self_, _145951_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab94292e_Prim> _14753_prim = _1ab93bebc_Prim((*(_145941_d))._field_Type);;
	if (((_1ab93c4d9_Ptr((*(_145941_d))._field_Type) == nullptr) && ((_14753_prim == nullptr) || (!(_1ab11827b_IsInt(_1ab942ca3_Str(_14753_prim.ptr()))))))) {
		_1ab908d46_pushErr(_self_, _145951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_145941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_145927_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1ab917e87_castStruct(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _148130_t, jule::Ptr<_1ab906a8b_Data> _148144_d, jule::Ptr<_1ab6a54d8_Token> _148154_errorToken) {
	(*(_148144_d))._field_Constant=nullptr;
	(*_148144_d.alloc)._field_untyped=false;
	jule::Ptr<_1ab095109_Trait> _14847_tr = _1ab93d7c6_Trait((*_148144_d.alloc)._field_Type.ptr());;
	if ((_14847_tr == nullptr)) {
		_1ab908d46_pushErr(_self_, _148154_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_148144_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_148130_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _14907_s = _1ab93d540_Struct(_148130_t);;
	_1b0c71b9e_pushReference(_self_, &(_14907_s));
	if ((!(_1a37a3be9_IsImplements((*(_14907_s))._field_Decl.ptr(), _14847_tr)))) {
		_1ab908d46_pushErr(_self_, _148154_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_148144_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_148130_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1ab9183a5_castRef(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _149827_t, jule::Ptr<_1ab906a8b_Data> _149841_d, jule::Ptr<_1ab6a54d8_Token> _149851_errorToken) {
	(*(_149841_d))._field_Constant=nullptr;
	(*_149841_d.alloc)._field_untyped=false;
	jule::Ptr<_1ab94645a_Sptr> _15017_sptr = _1ab93c253_Sptr(_149827_t.ptr());;
	jule::Ptr<_1ab949c22_Ptr> _15037_ptr = _1ab93c4d9_Ptr((*_149841_d.alloc)._field_Type.ptr());;
	if (((_15037_ptr != nullptr) && _1ab93a053_Equal((*(_15017_sptr))._field_Elem, (*_15037_ptr.alloc)._field_Elem))) {
		if ((!(_1ab90983b_isUnsafe(_self_)))) {
			_1ab908d46_pushErr(_self_, _149851_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ab93d540_Struct((*(_15017_sptr))._field_Elem) != nullptr)) {
		_1ab917e87_castStruct(_self_, (*_15017_sptr.alloc)._field_Elem, _149841_d, _149851_errorToken);
		return;;
	};
	_1ab908d46_pushErr(_self_, _149851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_149841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_149827_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1ab9187c3_castSlc(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _152127_t, jule::Ptr<_1ab906a8b_Data> _152141_d, jule::Ptr<_1ab6a54d8_Token> _152151_errorToken) {
	jule::Ptr<_1ab070c61_Const> _15223_c = (*(_152141_d))._field_Constant;;
	(*_152141_d.alloc)._field_Constant=nullptr;
	(*_152141_d.alloc)._field_untyped=false;
	if ((_1ab93c770_Enum((*_152141_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1ab93bebc_Prim((*((*(_1ab93c770_Enum((*(_152141_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1ab945de9_IsStr(_1ab93bebc_Prim((*((*(_1ab93c770_Enum((*(_152141_d))._field_Type.ptr())))._field_TypeSym))._field_Type).ptr()))))) {
			_1ab908d46_pushErr(_self_, _152151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_152141_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_152127_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1ab93bebc_Prim((*_152141_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1ab945de9_IsStr(_1ab93bebc_Prim((*(_152141_d))._field_Type).ptr()))))) {
		_1ab908d46_pushErr(_self_, _152151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_152141_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_152127_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_152127_t=(*(_1ab93d023_Slc(_152127_t.ptr())))._field_Elem;
	jule::Ptr<_1ab94292e_Prim> _15373_prim = _1ab93bebc_Prim(_152127_t);;
	if (((_15373_prim == nullptr) || ((!(_1ab944359_IsU8(_15373_prim.ptr()))) && (!(_1ab943d3c_IsI32(_15373_prim.ptr())))))) {
		_1ab908d46_pushErr(_self_, _152151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*_152141_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_152127_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15223_c != nullptr)) {
		{
			
			if (_1ab944359_IsU8(_15373_prim.ptr())) {
				_case_begin_1b0c86257:;
				{
					jule::Str _15475_s = _1ab072dc8_ReadStr(_15223_c);;
					jule::Ptr<_1ab07e9c8_SliceExprModel> _15489_model = jule::new_ptr<_1ab07e9c8_SliceExprModel>(_1ab07e9c8_SliceExprModel{._field_ElemType=_152127_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15475_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15475_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b0c87ae9:;
						if (it != expr_end) {
							jule::U8 *_155212_b = it;
							{
								jule::Ptr<_1ab070c61_Const> _155310_bc = static__1ab071459_NewU64(static_cast<jule::U64>((*(_155212_b))));;
								(*(_155310_bc))._field_Kind=(*(_15373_prim))._field_Kind;
								(*(_15489_model))._field_Elems=jule::append((*_15489_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_155310_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1b0c87ae9:;
							++it;
							goto _iter_begin_1b0c87ae9;
						}
						_iter_end_1b0c87ae9:;
					};
					(*_152141_d.alloc)._field_Model=jule::Any(_15489_model, &__jule_any_type79);
					(*_152141_d.alloc)._field_Decl=true;
				}
			}
			else if (_1ab943d3c_IsI32(_15373_prim.ptr())) {
				_case_begin_1b0c86301:;
				{
					jule::Slice<jule::I32> _15605_runes = __jule_strToRunes(_1ab072dc8_ReadStr(_15223_c));;
					jule::Ptr<_1ab07e9c8_SliceExprModel> _15619_model = jule::new_ptr<_1ab07e9c8_SliceExprModel>(_1ab07e9c8_SliceExprModel{._field_ElemType=_152127_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15605_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15605_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b0c8b02b:;
						if (it != expr_end) {
							jule::I32 *_156512_r = it;
							{
								jule::Ptr<_1ab070c61_Const> _156610_rc = static__1ab071190_NewI64(static_cast<jule::I64>((*(_156512_r))));;
								(*(_156610_rc))._field_Kind=(*(_15373_prim))._field_Kind;
								(*(_15619_model))._field_Elems=jule::append((*_15619_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_156610_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1b0c8b02b:;
							++it;
							goto _iter_begin_1b0c8b02b;
						}
						_iter_end_1b0c8b02b:;
					};
					(*_152141_d.alloc)._field_Model=jule::Any(_15619_model, &__jule_any_type79);
					(*_152141_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1b0c86169:;
		};
	};
}



inline void _1ab918b36_castStr(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _157627_d, jule::Ptr<_1ab6a54d8_Token> _157637_errorToken) {
	if ((_1ab93c770_Enum((*(_157627_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1ab0977b0_Enum> _15788_e = _1ab93c770_Enum((*(_157627_d))._field_Type);;
		if (((_1ab93bebc_Prim((*((*(_15788_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1ab945de9_IsStr(_1ab93bebc_Prim((*((*(_15788_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ab070c61_Const> _15843_c = (*_157627_d.alloc)._field_Constant;;
	(*_157627_d.alloc)._field_Constant=nullptr;
	(*_157627_d.alloc)._field_untyped=false;
	if ((_1ab93bebc_Prim((*(_157627_d))._field_Type) != nullptr)) {
		jule::Ptr<_1ab94292e_Prim> _15884_prim = _1ab93bebc_Prim((*(_157627_d))._field_Type);;
		if (((!(_1ab944359_IsU8(_15884_prim.ptr()))) && (!(_1ab943d3c_IsI32(_15884_prim))))) {
			_1ab908d46_pushErr(_self_, _157637_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_157627_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_15843_c != nullptr)) {
			{
				
				if (_1ab944359_IsU8(_15884_prim)) {
					_case_begin_1b0c93b8d:;
					{
						(*_157627_d.alloc)._field_Constant=static__1ab0719dc_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1ab07367b_AsU64(_15843_c))));
						(*_157627_d.alloc)._field_Model=jule::Any((*_157627_d.alloc)._field_Constant, &__jule_any_type15);
						(*_157627_d.alloc)._field_Decl=true;
					}
				}
				else if (_1ab943d3c_IsI32(_15884_prim)) {
					_case_begin_1b0c93c37:;
					{
						(*_157627_d.alloc)._field_Constant=static__1ab0719dc_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1ab0733e5_AsI64(_15843_c))));
						(*_157627_d.alloc)._field_Model=jule::Any((*_157627_d.alloc)._field_Constant, &__jule_any_type15);
						(*_157627_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1b0c93a7d:;
			};
		};
		return;;
	};
	jule::Ptr<_1ab946e2d_Slc> _16097_s = _1ab93d023_Slc((*(_157627_d))._field_Type);;
	if ((_16097_s == nullptr)) {
		_1ab908d46_pushErr(_self_, _157637_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_157627_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ab939816_Type> _16157_t = (*(_16097_s))._field_Elem;;
	jule::Ptr<_1ab94292e_Prim> _16163_prim = _1ab93bebc_Prim(_16157_t.ptr());;
	if (((_16163_prim == nullptr) || ((!(_1ab944359_IsU8(_16163_prim.ptr()))) && (!(_1ab943d3c_IsI32(_16163_prim.ptr())))))) {
		_1ab908d46_pushErr(_self_, _157637_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_157627_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1ab919054_castInt(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _162327_t, jule::Ptr<_1ab906a8b_Data> _162341_d, jule::Ptr<_1ab6a54d8_Token> _162351_errorToken) {
	if (_1ab9074c6_IsConst(_162341_d.ptr())) {
		jule::Ptr<_1ab94292e_Prim> _16254_prim = _1ab93bebc_Prim(_162327_t.ptr());;
		{
			
			if (_1ab117ba4_IsSigInt((*(_16254_prim))._field_Kind)) {
				_case_begin_1b0c9c3c2:;
				{
					_1ab073bba_SetI64((*_162341_d.alloc)._field_Constant.ptr(), _1ab0733e5_AsI64((*(_162341_d))._field_Constant));
				}
			}
			else if (_1ab117eb2_IsUnsigInt((*(_16254_prim))._field_Kind)) {
				_case_begin_1b0c9c46b:;
				{
					_1ab073e73_SetU64((*_162341_d.alloc)._field_Constant.ptr(), _1ab07367b_AsU64((*(_162341_d))._field_Constant));
				}
			}
			_match_end_1b0c9c339:;
		};
	} else {
		(*(_162341_d))._field_Constant=nullptr;
		(*_162341_d.alloc)._field_untyped=false;
	};
	if ((_1ab93c770_Enum((*(_162341_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1ab0977b0_Enum> _16384_e = _1ab93c770_Enum((*(_162341_d))._field_Type);;
		if (_1ab118853_IsNum(_1ab939c12_Str((*((*(_16384_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	if ((_1ab93c253_Sptr((*(_162341_d))._field_Type) != nullptr)) {
		jule::Ptr<_1ab94292e_Prim> _16454_prim = _1ab93bebc_Prim(_162327_t.ptr());;
		if ((!(_1ab9458cc_IsUintptr(_16454_prim.ptr())))) {
			_1ab908d46_pushErr(_self_, _162351_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_162341_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_162327_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1ab93c4d9_Ptr((*(_162341_d))._field_Type) != nullptr)) {
		jule::Ptr<_1ab94292e_Prim> _16524_prim = _1ab93bebc_Prim(_162327_t);;
		if (_1ab9458cc_IsUintptr(_16524_prim.ptr())) {
		} else if ((!(_1ab90983b_isUnsafe(_self_)))) {
			_1ab908d46_pushErr(_self_, _162351_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ab94292e_Prim> _16613_prim = _1ab93bebc_Prim((*(_162341_d))._field_Type);;
	if (((_16613_prim != nullptr) && _1ab118853_IsNum(_1ab942ca3_Str(_16613_prim)))) {
		return;;
	};
	_1ab908d46_pushErr(_self_, _162351_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_162341_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_162327_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1ab919472_castNum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _166927_t, jule::Ptr<_1ab906a8b_Data> _166941_d, jule::Ptr<_1ab6a54d8_Token> _166951_errorToken) {
	if (_1ab9074c6_IsConst(_166941_d.ptr())) {
		jule::Ptr<_1ab94292e_Prim> _16714_prim = _1ab93bebc_Prim(_166927_t.ptr());;
		{
			
			if (_1ab1185bc_IsFloat((*(_16714_prim))._field_Kind)) {
				_case_begin_1b0ca87c9:;
				{
					_1ab07478c_SetF64((*_166941_d.alloc)._field_Constant.ptr(), _1ab073912_AsF64((*(_166941_d))._field_Constant));
				}
			}
			else if (_1ab117ba4_IsSigInt((*(_16714_prim))._field_Kind)) {
				_case_begin_1b0ca8873:;
				{
					_1ab073bba_SetI64((*_166941_d.alloc)._field_Constant.ptr(), _1ab0733e5_AsI64((*(_166941_d))._field_Constant));
				}
			}
			else if (_1ab117eb2_IsUnsigInt((*(_16714_prim))._field_Kind)) {
				_case_begin_1b0ca88d9:;
				{
					_1ab073e73_SetU64((*_166941_d.alloc)._field_Constant.ptr(), _1ab07367b_AsU64((*(_166941_d))._field_Constant));
				}
			}
			_match_end_1b0ca86ec:;
		};
	} else {
		(*(_166941_d))._field_Constant=nullptr;
		(*_166941_d.alloc)._field_untyped=false;
	};
	if ((_1ab93c770_Enum((*(_166941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1ab0977b0_Enum> _16864_e = _1ab93c770_Enum((*(_166941_d))._field_Type);;
		if (_1ab118853_IsNum(_1ab939c12_Str((*((*(_16864_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ab94292e_Prim> _16923_prim = _1ab93bebc_Prim((*(_166941_d))._field_Type);;
	if (((_16923_prim != nullptr) && _1ab118853_IsNum(_1ab942ca3_Str(_16923_prim)))) {
		return;;
	};
	_1ab908d46_pushErr(_self_, _166951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_166941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_166927_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1ab919890_castPrim(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _170028_t, jule::Ptr<_1ab906a8b_Data> _170042_d, jule::Ptr<_1ab6a54d8_Token> _170052_errorToken) {
	jule::Ptr<_1ab94292e_Prim> _17013_prim = _1ab93bebc_Prim(_170028_t.ptr());;
	{
		
		if (_1ab946180_IsAny(_17013_prim.ptr())) {
			_case_begin_1b0cb1cee:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1704:4"));;
			}
		}
		else if (_1ab945de9_IsStr(_17013_prim.ptr())) {
			_case_begin_1b0cb199c:;
			{
				_1ab918b36_castStr(_self_, _170042_d, _170052_errorToken);
			}
		}
		else if (_1ab11827b_IsInt(_1ab942ca3_Str(_17013_prim.ptr()))) {
			_case_begin_1b0cb1a13:;
			{
				_1ab919054_castInt(_self_, _170028_t, _170042_d, _170052_errorToken);
			}
		}
		else if (_1ab118853_IsNum(_1ab942ca3_Str(_17013_prim.ptr()))) {
			_case_begin_1b0cb1a79:;
			{
				_1ab919472_castNum(_self_, _170028_t, _170042_d, _170052_errorToken);
			}
		}
		else {
			_case_begin_1b0cb1936:;
			{
				_1ab908d46_pushErr(_self_, _170052_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str(_170028_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b0cb18ae:;
	};
}



inline void _1ab919c03_castConstant(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type>* _171633_t, jule::Ptr<_1ab906a8b_Data>* _171648_d) {
	if ((((*(_171648_d)) == nullptr) || (!(_1ab9074c6_IsConst((*(_171648_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ab94292e_Prim> _17203_prim = _1ab93bebc_Prim((*(_171633_t)).ptr());;
	_1ab934d94_castConstByType(&((*(_17203_prim))._field_Kind), _171648_d);
	(*((*(_171648_d))))._field_Model=jule::Any((*((*(_171648_d))))._field_Constant, &__jule_any_type15);
}



inline void _1ab91a121_castTypeEnum(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type>* _172533_t, jule::Ptr<_1ab906a8b_Data>* _172548_d, jule::Ptr<_1ab6a54d8_Token>* _172563_errorToken) {
	jule::I64 _17263_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab88e3c5_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_172548_d))))._field_Type), _172533_t, _172563_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17263_n);;
		_1ab908d46_pushErr(_self_, (*(_172563_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_172548_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_172533_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_172548_d))))._field_Constant=nullptr;
	(*((*(_172548_d))))._field_untyped=false;
}



inline void _1ab91a53e_castTypeEnumT(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type>* _173534_t, jule::Ptr<_1ab906a8b_Data>* _173549_d, jule::Ptr<_1ab6a54d8_Token>* _173564_errorToken) {
	jule::I64 _17363_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab88e3c5_checkTypeCompatibility((*(_self_))._field_s, _173534_t, &((*((*(_173549_d))))._field_Type), _173564_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17363_n);;
		_1ab908d46_pushErr(_self_, (*(_173564_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_173549_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_173534_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_173549_d))))._field_Constant=nullptr;
	(*((*(_173549_d))))._field_untyped=false;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91a9e5_evalCastByTypeNData(_1ab9087b3_eval* _self_, jule::Ptr<_1ab939816_Type> _174539_t, jule::Ptr<_1ab906a8b_Data> _174553_d, jule::Ptr<_1ab6a54d8_Token> _174567_errorToken) {
	if (((_174553_d != nullptr) && (*_174553_d.alloc)._field_Decl)) {
		_1ab908d46_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ab906ea9_IsNil(_174553_d)) {
			_case_begin_1b0cbe823:;
			{
				if ((!(_1ab93b719_NilCompatible(_174539_t.ptr())))) {
					_1ab908d46_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_174539_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_174553_d.alloc)._field_Constant=nullptr;
				(*_174553_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ab93bebc_Prim((*_174553_d.alloc)._field_Type.ptr()) != nullptr) && _1ab946180_IsAny(_1ab93bebc_Prim((*(_174553_d))._field_Type).ptr()))) {
			_case_begin_1b0cbe5c0:;
			{
				if ((_1ab93c770_Enum(_174539_t.ptr()) != nullptr)) {
					_1ab908d46_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1ab93ca06_TypeEnum(_174539_t.ptr()) != nullptr)) {
					_1ab908d46_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_174553_d.alloc)._field_Constant=nullptr;
				(*_174553_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ab93bebc_Prim(_174539_t.ptr()) != nullptr) && _1ab946180_IsAny(_1ab93bebc_Prim(_174539_t).ptr()))) {
			_case_begin_1b0cbe636:;
			{
				(*_174553_d.alloc)._field_Constant=nullptr;
				(*_174553_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1ab93ca06_TypeEnum((*_174553_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0cbe69c:;
			{
				_1ab91a121_castTypeEnum(_self_, &(_174539_t), &(_174553_d), &(_174567_errorToken));
			}
		}
		else if ((_1ab93ca06_TypeEnum(_174539_t.ptr()) != nullptr)) {
			_case_begin_1b0cbe713:;
			{
				_1ab91a53e_castTypeEnumT(_self_, &(_174539_t), &(_174553_d), &(_174567_errorToken));
			}
		}
		else if ((_1ab93c4d9_Ptr(_174539_t.ptr()) != nullptr)) {
			_case_begin_1b0cc04e4:;
			{
				_1ab917a69_castPtr(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1ab93c253_Sptr(_174539_t.ptr()) != nullptr)) {
			_case_begin_1b0cc055a:;
			{
				_1ab9183a5_castRef(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1ab93d023_Slc(_174539_t.ptr()) != nullptr)) {
			_case_begin_1b0cc05c1:;
			{
				_1ab9187c3_castSlc(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1ab93d540_Struct(_174539_t.ptr()) != nullptr)) {
			_case_begin_1b0cc0637:;
			{
				_1ab917e87_castStruct(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1ab93bebc_Prim(_174539_t.ptr()) != nullptr)) {
			_case_begin_1b0cc069d:;
			{
				_1ab919890_castPrim(_self_, _174539_t, _174553_d, _174567_errorToken);
				_1ab919c03_castConstant(_self_, &(_174539_t), &(_174553_d));
			}
		}
		else {
			_case_begin_1b0cbe48d:;
			{
				_1ab908d46_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str(_174539_t.ptr()), &__jule_any_type5); __jule_collection; }));
				_174553_d=nullptr;
			}
		}
		_match_end_1b0cbe427:;
	};
	if ((_174553_d == nullptr)) {
		return nullptr;;
	};
	(*_174553_d.alloc)._field_Mutable=((*_174553_d.alloc)._field_Mutable || (!(_1ab93b1ec_Mutable((*_174553_d.alloc)._field_Type.ptr()))));
	if (((!((*_174553_d.alloc)._field_Decl)) && ((_1ab93c770_Enum((*(_174553_d))._field_Type) == nullptr) || (!(_1ab93a053_Equal((*((*(_1ab93c770_Enum((*(_174553_d))._field_Type)))._field_TypeSym))._field_Type, _174539_t)))))) {
		_1ab933b73_applyCastKind(&((*(_self_))._field_s), &(_174553_d), &(_174539_t), &(_174567_errorToken), _1ab90bd49_getOwnerRefers(_self_));
		(*((*_174553_d.alloc)._field_Model.cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95)))._field_Token=_174567_errorToken;
	} else {
		(*_174553_d.alloc)._field_Type=_174539_t;
	};
	(*_174553_d.alloc)._field_Decl=false;
	(*_174553_d.alloc)._field_Lvalue=false;
	(*_174553_d.alloc)._field_untyped=false;
	if (_1ab9074c6_IsConst(_174553_d)) {
		(*((*_174553_d.alloc)._field_Constant))._field_Kind=(*(_1ab93bebc_Prim(_174539_t.ptr())))._field_Kind;
	};
	return _174553_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91ae9b_evalCastT(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab939816_Type>* _182231_t, jule::Ptr<_1ab6c4bab_Expr>* _182246_e, jule::Ptr<_1ab6a54d8_Token>* _182266_et) {
	jule::Ptr<_1ab939816_Type> _18237_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18237_prefix;
	});;
	if ((_1ab93d023_Slc((*(_182231_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_182246_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1b0cd2319:;
				{
					(*_self_.alloc)._field_prefix=(*(_182231_t));
				}
			}
			_match_end_1b0cd2292:;
		};
	};
	jule::Ptr<_1ab906a8b_Data> _18327_d = _1ab927628_evalExpr(_self_, (*(_182246_e)));;
	if (((_18327_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18327_d;;
	};
	return _1ab91a9e5_evalCastByTypeNData(_self_, (*(_182231_t)), _18327_d, (*(_182266_et)));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91b2dc_evalCast(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3788481_CastExpr> _183929_c) {
	jule::Ptr<_1ab942027_TypeSym> _18407_t = _1ab855db4_buildType((*(_183929_c))._field_Kind);;
	jule::Bool _18413_ok = _1ab88b56a_checkTypeSym((*(_self_))._field_s, &(_18407_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18413_ok))) {
		return nullptr;;
	};
	return _1ab91ae9b_evalCastT(_self_, &((*(_18407_t))._field_Type), &((*_183929_c.alloc)._field_Expr), &((*((*_183929_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91b62d_evalNamespace(_1ab9087b3_eval* _self_, jule::Ptr<_1a378885a_NamespaceExpr> _184833_s) {
	jule::Ptr<_1ab866578_ImportInfo> _18497_imp = _1ab93723c_findNamespace((*(_self_))._field_lookup, (*((*(_184833_s))._field_Namespace))._field_Kind);;
	if ((_18497_imp == nullptr)) {
		_1ab908d46_pushErr(_self_, (*_184833_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_184833_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18557_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18497_imp, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data2);
	;
	_1ab9095a5_disallowBuiltin(_self_);
	jule::Any _18607_def = _1ab90bab3_getDef(_self_, &((*((*_184833_s.alloc)._field_Ident))._field_Kind), false);;
	_1ab9093a7_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18557_lookup;
	jule::Ptr<_1ab906a8b_Data> _18637_d = _1ab910c71_evalDef(_self_, &(_18607_def), (*_184833_s.alloc)._field_Ident);;
	return _18637_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91bad4_evalStructLitExplicit(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a37a53d2_StructIns> _186742_s, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _18687_exprs, jule::Ptr<_1ab6a54d8_Token> _186832_errorToken) {
	jule::Bool _18693_ok = _1ab8879a6_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_186742_s))._field_Decl))._field_Generics.len(), (*_186742_s.alloc)._field_Generics.len(), _186832_errorToken);;
	if ((!(_18693_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_186742_s.alloc)._field_Decl))) {
		_1ab908d46_pushErr(_self_, _186832_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_186742_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1b0c71b9e_pushReference(_self_, &(_186742_s));
	_1ab90de6c_checkDeprecated(_self_, &((*(*(_186742_s))._field_Decl.alloc)._field_Directives), _186832_errorToken);
	_1ab8ee59a_structLitChecker _18827_slc = _1ab8ee59a_structLitChecker{._field_e=_self_, ._field_errorToken=_186832_errorToken, ._field_s=_186742_s, ._field_args=jule::Slice<jule::Ptr<_1ab07d026_StructArgExprModel>>(nullptr)};;
	_1ab900d1b_check(&_18827_slc, &(_18687_exprs));
	jule::Ptr<_1ab906a8b_Data> _18897_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_186742_s, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ab07d3bc_StructLitExprModel>(_1ab07d3bc_StructLitExprModel{._field_Strct=_186742_s, ._field_Args=_18827_slc._field_args}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	if ((*(*(_186742_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_18897_d))._field_Type))._field_BindIdent=(*(*(_186742_s))._field_Decl.alloc)._field_Ident;
	};
	return _18897_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91be25_evalStructLit(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378ab6a_StructLit> _190534_lit) {
	jule::Ptr<_1ab942027_TypeSym> _19067_t = _1ab855db4_buildType((*(_190534_lit))._field_Kind);;
	jule::Bool _19073_ok = _1ab88b56a_checkTypeSym((*(_self_))._field_s, &(_19067_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19073_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _19127_s = _1ab93d540_Struct((*(_19067_t))._field_Type.ptr());;
	if ((_19127_s == nullptr)) {
		if ((_1ab93c253_Sptr((*(_19067_t))._field_Type) != nullptr)) {
			_19127_s=_1ab93d540_Struct((*(_1ab93c253_Sptr((*(_19067_t))._field_Type)))._field_Elem.ptr());
			if ((_19127_s != nullptr)) {
				goto _julec_label_1b0ce9d6a;
			};
		};
		_1ab908d46_pushErr(_self_, (*((*_190534_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b0ce9d6a:;
	jule::Ptr<_1ab906a8b_Data> _19257_d = _1ab91bad4_evalStructLitExplicit(_self_, _19127_s, (*_190534_lit.alloc)._field_Exprs, (*(*(_190534_lit))._field_Kind.alloc)._field_Token);;
	if ((_1ab93c253_Sptr((*(_19067_t))._field_Type) != nullptr)) {
		jule::Ptr<_1ab07d3bc_StructLitExprModel> _19278_model = (*(_19257_d))._field_Model.cast_ptr<_1ab07d3bc_StructLitExprModel>(&__jule_any_type97);;
		_1ab9319b7_makeStructLitAlloc(&(_19257_d), &(_19278_model));
	};
	return _19257_d;;
}



inline _1ab94bc13_typeChecker _1ab91c1ab_typeChecker(_1ab9087b3_eval* _self_) {
	return _1ab88a316_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91c4ec_evalType(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6c0877_TypeDecl> _193728_t) {
	jule::Ptr<_1ab942027_TypeSym> _19387_tk = _1ab855db4_buildType(_193728_t);;
	jule::Bool _19393_ok = _1ab88b56a_checkTypeSym((*(_self_))._field_s, &(_19387_tk), (*(_self_))._field_lookup);;
	if ((!(_19393_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=(*(_19387_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19387_tk.alloc)._field_Type, &__jule_any_type86), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline void _1ab91c860_callTypeFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr>* _195032_fc, jule::Ptr<_1ab906a8b_Data>* _195059_d) {
	if (((*((*(_195032_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*(_195032_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_195032_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*((*(_195032_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_195059_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_195032_fc))))._field_IsCo) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*(_195032_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_195059_d))=nullptr;
		return;;
	} else if (((*((*(_195032_fc))))._field_Exception != nullptr)) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*(_195032_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_195059_d))=nullptr;
		return;;
	};
	if (((*((*(_195032_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ab6c4bab_Expr> _19668_arg = (*((*(_195032_fc))))._field_Args[0LL];;
		(*(_195059_d))=_1ab91ae9b_evalCastT(_self_, &((*((*(_195059_d))))._field_Type), &(_19668_arg), &((*(_19668_arg))._field_Token));
		return;;
	};
	if (((*(_195059_d)) != nullptr)) {
		(*((*(_195059_d))))._field_Decl=false;
	};
}



inline void _1ab91cbc3_callBuiltinFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr>* _197635_fc, jule::Ptr<_1ab906a8b_Data>* _197662_d) {
	if ((!(_1a3789c02_Unhandled((*(_197635_fc)).ptr())))) {
		_1ab908d46_pushErr(_self_.ptr(), (*((*(_197635_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_197662_d))=(*(_1ab93d2a9_Fn((*((*(_197662_d))))._field_Type.ptr())))._field_caller(&(_self_), _197635_fc, _197662_d);
	if (((*(_197662_d)) == nullptr)) {
		return;;
	};
	(*((*(_197662_d))))._field_Mutable=true;
}



inline void _1ab91d036_checkFnOfConcurrentCall(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _198840_f, jule::Ptr<_1ab6a54d8_Token> _198851_errorToken) {
	if (_1ab90983b_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_198840_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0d08d9b:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> *_199210_p = it;
			{
				if (_1ab088570_IsSelf((*((*(_199210_p))))._field_Decl.ptr())) {
					if ((!(_1ab088806_IsRef((*((*(_199210_p))))._field_Decl)))) {
						_1ab908d46_pushErr(_self_, _198851_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_199210_p))))._field_Decl.alloc)._field_Reference) {
					_1ab908d46_pushErr(_self_, _198851_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b0d08d9b:;
			++it;
			goto _iter_begin_1b0d08d9b;
		}
		_iter_end_1b0d08d9b:;
	};
}



inline void _1ab91d454_processExceptionalHandler(_1ab9087b3_eval* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _200746_f, jule::Ptr<_1a378984a_FnCallExpr>* _200762_fc, jule::Ptr<_1ab906a8b_Data>* _200789_d) {
	jule::Bool _20083_resultNeeded = ((!(_1ab089d9b_IsVoid((*((*(_200746_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ab83ce67_scopeChecker> _200911_csc = nullptr;;
	jule::Ptr<_1ab835bc9_Scope> _201011_ch = nullptr;;
	jule::Ptr<_1ab07e5ee_FnCallExprModel> _20127_model = (*((*(_200789_d))))._field_Model.cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30);;
	jule::Ptr<_1ab83ce67_scopeChecker> _20167_sc = (*(_self_))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1);;
	_200911_csc=_1ab850375_newChildChecker(_20167_sc);
	if (_20083_resultNeeded) {
		(*(_200911_csc))._field_result=(*(_200746_f));
	};
	_201011_ch=_1ab843621_getChild(_20167_sc);
	(*((*((*(_200762_fc))))._field_Exception))._field_Parent=(*_20167_sc.alloc)._field_tree;
	(*((*_200911_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_200911_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab931d3b_buildErrorVar(&(_201011_ch), _200762_fc); __jule_collection; }));
	_1ab843a3e_checkChildSsc(_20167_sc, &((*((*(_200762_fc))))._field_Exception), &(_201011_ch), &(_200911_csc));
	(*(_20127_model))._field_Assigned=_20083_resultNeeded;
	(*_20127_model.alloc)._field_Except=_201011_ch;
	if ((_20083_resultNeeded && ((*_200911_csc.alloc)._field_result != nullptr))) {
		_1ab908d46_pushErr(_self_, (*((*(_200762_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1ab91d7b7_callFn(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr>* _203428_fc, jule::Ptr<_1ab906a8b_Data>* _203455_d) {
	jule::Ptr<_1ab08c9a3_FnIns> _20357_f = _1ab93d2a9_Fn((*((*(_203455_d))))._field_Type.ptr());;
	if (_1ab08de6b_IsBuiltin(_20357_f.ptr())) {
		_1ab91cbc3_callBuiltinFn(_self_, _203428_fc, _203455_d);
		return;;
	};
	if (((!(_1ab08a132_IsMethod((*_20357_f.alloc)._field_Decl.ptr()))) && _1ab955d82_hasDirective(&((*(*(_20357_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1ab908d46_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_203455_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_203455_d))))._field_Mutable)) && _1ab08a132_IsMethod((*(_20357_f))._field_Decl)) && (!((*(*(_20357_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20357_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1ab908d46_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ab07d3bc_StructLitExprModel> _20555_lit = _1ab93601b_isLitBased(&((*((*(_203455_d))))._field_Model));;
			if ((_20555_lit == nullptr)) {
				_1ab908d46_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1ab8ee0b1_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20555_lit));
			};
		};
	} else if (((!(_1ab90983b_isUnsafe(_self_))) && (*(*(_20357_f))._field_Decl.alloc)._field_Unsafety)) {
		_1ab908d46_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20677_dynamicAnnotation = ((((*(*(_20357_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20357_f.alloc)._field_Generics.len() == 0LL)) && ((*_20357_f.alloc)._field_Params.len() > 0LL));;
	if (_20677_dynamicAnnotation) {
		(*_20357_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc((*(*(_20357_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20357_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab937e30_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20357_f.alloc)._field_Generics.len() != (*(*(_20357_f))._field_Decl.alloc)._field_Generics.len())) {
		_1ab8879a6_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20357_f))._field_Decl.alloc)._field_Generics.len(), (*_20357_f.alloc)._field_Generics.len(), (*((*(_203428_fc))))._field_Token);
		(*(_203455_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab883573_sema> _20767_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20357_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20357_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20767_old != (*_self_.alloc)._field_s)) {
			(*(_20767_old))._field_errors=jule::append((*_20767_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20767_old;
	});;
	_1ab8eb663_fnCallArgChecker _20897_fcac = _1ab8eb663_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_203428_fc))))._field_Args, ._field_errorToken=(*((*(_203428_fc))))._field_Token, ._field_f=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_dynamicAnnotation=_20677_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)};;
	if ((!(_20677_dynamicAnnotation))) {
		if ((!((*_20357_f.alloc)._field_reloaded))) {
			jule::Bool _20985_ok = _1ab8922da_reloadFnInsTypes((*(_self_))._field_s, _20357_f);;
			(*_20357_f.alloc)._field_reloaded=true;
			if ((!(_20985_ok))) {
				(*(_203455_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ab08c9a3_FnIns> _21058_existInstance = _1ab08b496_appendInstance((*(_20357_f))._field_Decl, &(_20357_f));;
		if ((_21058_existInstance != nullptr)) {
			_20357_f=_21058_existInstance;
		};
	} else if ((!(_1ab89064b_buildFnNonGenericTypes((*(_self_))._field_s, _20357_f, &(_20897_fcac._field_ignored))))) {
		(*(_203455_d))=nullptr;
		return;;
	};
	_20897_fcac._field_f=_20357_f;
	jule::Bool _21167_ok = false;;
	if (((*(*(_20357_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20767_old, (*_self_.alloc)._field_s);
		_21167_ok=_1ab8edc4d_check(&_20897_fcac);
		std::swap(_20767_old, (*_self_.alloc)._field_s);
	} else {
		_21167_ok=_1ab8edc4d_check(&_20897_fcac);
	};
	if (_20677_dynamicAnnotation) {
		if ((!(_21167_ok))) {
			(*(_203455_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab915b66_checkGenericFn(_self_, &(_20357_f), &((*((*(_203428_fc))))._field_Token), &((*((*(_203455_d))))._field_Model));
			_21167_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21167_ok))) {
			(*(_203455_d))=nullptr;
			return;;
		};
	};
	jule::Any _21377_callModel = (*((*(_203455_d))))._field_Model;;
	if (_1ab089d9b_IsVoid((*(_20357_f))._field_Decl)) {
		(*(_203455_d))=_1ab933d82_buildVoidData();
	} else {
		(*((*(_203455_d))))._field_Type=(*_20357_f.alloc)._field_Result;
		(*((*(_203455_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ab07e5ee_FnCallExprModel> _21467_model = jule::new_ptr<_1ab07e5ee_FnCallExprModel>(_1ab07e5ee_FnCallExprModel{._field_Token=(*((*(_203428_fc))))._field_Token, ._field_Func=_20357_f, ._field_IsCo=(*((*(_203428_fc))))._field_IsCo, ._field_Expr=_21377_callModel, ._field_Args=_20897_fcac._field_argModels, ._field_Except=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_203455_d))))._field_Model=jule::Any(_21467_model, &__jule_any_type30);
	(*((*(_203455_d))))._field_Mutable=true;
	if ((*(*(_20357_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_203428_fc))))._field_IsCo) {
			_1ab886477_pushErr((*(_self_))._field_s, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1ab8867da_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a3789c02_Unhandled((*(_203428_fc)).ptr())) {
				_case_begin_1b0d3468a:;
				{
					_1ab908d46_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1a3789e88_Ignored((*(_203428_fc)).ptr())) {
				_case_begin_1b0d3436b:;
				{
					goto _match_end_1b0d32c4e;
				}
			}
			else {
				_case_begin_1b0d32ce8:;
				{
					_1ab91d454_processExceptionalHandler(_self_, &(_20357_f), _203428_fc, _203455_d);
				}
			}
			_match_end_1b0d32c4e:;
		};
	} else if ((!(_1a3789c02_Unhandled((*(_203428_fc)).ptr())))) {
		_1ab908d46_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_203428_fc))))._field_IsCo) {
		(*((*(_21467_model))._field_Func))._field_AsAnon=true;
		(*(*(_21467_model))._field_Func.alloc)._field_CalledCo=true;
		_1ab91d036_checkFnOfConcurrentCall(_self_, &((*_21467_model.alloc)._field_Func), (*((*(_203428_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91db08_evalFnCall(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378984a_FnCallExpr> _218331_fc) {
	jule::Ptr<_1ab939816_Type> _21847_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21847_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_218331_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b0d39b24:;
			{
				if (((*((*((*(_218331_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1ab9b7465_builtinCallerError(&(_self_), &(_218331_fc));;
				};
			}
		}
		_match_end_1b0d39a9c:;
	};
	jule::Ptr<_1ab906a8b_Data> _21977_d = _1ab926814_evalExprKind(_self_, (*(*(_218331_fc))._field_Expr.alloc)._field_Kind);;
	if ((_21977_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_21977_d))._field_Decl) {
		_1ab91c860_callTypeFn(_self_, &(_218331_fc), &(_21977_d));
		return _21977_d;;
	};
	if ((_1ab93d2a9_Fn((*(_21977_d))._field_Type.ptr()) == nullptr)) {
		_1ab908d46_pushErr(_self_, (*_218331_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab91d7b7_callFn(_self_, &(_218331_fc), &(_21977_d));
	return _21977_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91e004_evalEnumStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab0977b0_Enum> _221634_enm, jule::Ptr<_1ab6a54d8_Token> _221650_ident) {
	jule::Ptr<_1ab096c54_EnumItem> _22177_item = _1ab0983d7_FindItem(_221634_enm.ptr(), (*(_221650_ident))._field_Kind);;
	if ((_22177_item == nullptr)) {
		_1ab908d46_pushErr(_self_, _221650_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_221634_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_221650_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1ab935c52_evalEnumStatic(&((*(_self_))._field_s), &(_221634_enm), &(_22177_item), &(_221650_ident), _1ab90bd49_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91e400_evalTypeEnumStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab098eba_TypeEnum> _222438_enm, jule::Ptr<_1ab6a54d8_Token> _222454_ident) {
	jule::Ptr<_1ab0988e3_TypeEnumItem> _22257_item = _1ab099aae_FindItem(_222438_enm.ptr(), (*(_222454_ident))._field_Kind);;
	if ((_22257_item == nullptr)) {
		_1ab908d46_pushErr(_self_, _222454_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_222438_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_222454_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1ab93c770_Enum((*((*(_22257_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0d43930:;
			{
				return _1ab90c443__evalEnum(_self_, _1ab93c770_Enum((*((*(_22257_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1ab93ca06_TypeEnum((*((*(_22257_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0d41aa4:;
			{
				return _1ab90cb80__evalTypeEnum(_self_, _1ab93ca06_TypeEnum((*((*(_22257_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1ab93d540_Struct((*((*(_22257_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0d41b1a:;
			{
				return _1ab90d3bc__evalStruct(_self_, _1ab93d540_Struct((*((*(_22257_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1b0d41a3d:;
			{
				jule::Ptr<_1ab906a8b_Data> _22388_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=(*((*(_22257_item))._field_TypeSym))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
				(*(_22388_d))._field_Model=jule::Any((*_22388_d.alloc)._field_Type, &__jule_any_type86);
				return _22388_d;;
			}
		}
		_match_end_1b0d41c08:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91e7eb_evalStructStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1a37a53d2_StructIns> _224736_s, jule::Ptr<_1ab6a54d8_Token> _224751_ident) {
	jule::Ptr<_1ab906a8b_Data> _22487_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	;
	jule::Ptr<_1ab0898e5_Fn> _22527_method = _1a37a647c_FindMethod(_224736_s.ptr(), (*(_224751_ident))._field_Kind, true);;
	if ((_22527_method != nullptr)) {
		if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22527_method.alloc)._field_Public, (*_22527_method.alloc)._field_Token)))) {
			_1ab908d46_pushErr(_self_, _224751_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_224751_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab08c9a3_FnIns> _22598_ins = _1ab08b188_instance(_22527_method);;
		(*(_22598_ins))._field_Owner=_224736_s;
		_1b0b72d47_pushReference(_self_, &(_22598_ins));
		(*_22487_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ab082536_StructStaticIdentExprModel>(_1ab082536_StructStaticIdentExprModel{._field_Structure=_224736_s, ._field_Expr=(*_22487_d.alloc)._field_Model, ._field_Method=_22598_ins}), &__jule_any_type98);
		(*_22487_d.alloc)._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22598_ins, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)});
		return _22487_d;;
	};
	jule::Ptr<_1ab8a7289_Var> _22737_sttc = _1a37a6b0e_FindStatic(_224736_s, (*_224751_ident.alloc)._field_Kind);;
	if ((_22737_sttc != nullptr)) {
		return _1ab910479_evalVar(_self_, _22737_sttc, _224751_ident);;
	};
	_1ab908d46_pushErr(_self_, _224751_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_224736_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_224751_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab91eca2_evalTraitSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _228237_d, jule::Ptr<_1ab095109_Trait> _228251_trt, jule::Ptr<_1ab6a54d8_Token> _228268_ident) {
	jule::Ptr<_1ab0898e5_Fn> _22837_f = _1ab095cdb_FindMethod(_228251_trt.ptr(), (*(_228268_ident))._field_Kind);;
	if ((_22837_f == nullptr)) {
		_1ab908d46_pushErr(_self_, _228268_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_228251_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_228268_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab08b188_instance(_22837_f), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)}), ._field_Mutable=(*(_228237_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ab0817ee_TraitSubIdentExprModel>(_1ab0817ee_TraitSubIdentExprModel{._field_Token=_228268_ident, ._field_Expr=(*_228237_d.alloc)._field_Model, ._field_Method=_22837_f, ._field_Trt=_228251_trt}), &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab920313_evalStructSubIdentField(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _230444_d, jule::Ptr<_1a37a53d2_StructIns>* _230459_s, jule::Ptr<_1ab6a54d8_Token>* _230479_tok, jule::Ptr<_1a37a4832_FieldIns>* _2304104_f) {
	jule::Ptr<_1ab082190_StructSubIdentExprModel> _23057_model = jule::new_ptr<_1ab082190_StructSubIdentExprModel>(_1ab082190_StructSubIdentExprModel{._field_Token=(*(_230479_tok)), ._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*((*(_230444_d))))), ._field_Method=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Field=(*(_2304104_f)), ._field_Owner=(*(_230459_s))});;
	(*((*(_230444_d))))._field_Model=jule::Any(_23057_model, &__jule_any_type100);
	(*((*(_230444_d))))._field_Type=(*((*(_2304104_f))))._field_Type;
	(*((*(_230444_d))))._field_Lvalue=true;
	if (((*((*((*(_2304104_f))))._field_Decl))._field_Mutable && (!((*((*(_230444_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
				_case_begin_1b0d58280:;
				{
					jule::Ptr<_1ab83ce67_scopeChecker> _23205_scope = _1ab8415ca_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1));;
					(*((*(_230444_d))))._field_Mutable=(((*(_23205_scope))._field_owner != nullptr) && ((*(*(_23205_scope))._field_owner.alloc)._field_Owner == (*(_230459_s))));
				}
			}
			_match_end_1b0d58219:;
		};
	};
	return (*(_230444_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92092e_evalStructSubIdentMethod(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _232945_d, jule::Ptr<_1a37a53d2_StructIns>* _232960_s, jule::Ptr<_1ab6a54d8_Token>* _232980_tok, jule::Ptr<_1ab0898e5_Fn>* _2329105_m, jule::Bool _2329113_ref) {
	if ((_1ab088806_IsRef((*((*(_2329105_m))))._field_Params[0LL].ptr()) && (!(_2329113_ref)))) {
		_1ab908d46_pushErr(_self_, (*(_232980_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1ab90de6c_checkDeprecated(_self_, &((*((*(_2329105_m))))._field_Directives), (*(_232980_tok)));
	jule::Ptr<_1ab08c9a3_FnIns> _23367_ins = _1ab08b188_instance((*(_2329105_m)));;
	(*(_23367_ins))._field_Owner=(*(_232960_s));
	_1b0b72d47_pushReference(_self_, &(_23367_ins));
	jule::Ptr<_1ab906a8b_Data> _23397_model = jule::new_ptr<_1ab906a8b_Data>((*((*(_232945_d)))));;
	(*((*(_232945_d))))._field_Model=jule::Any(jule::new_ptr<_1ab082190_StructSubIdentExprModel>(_1ab082190_StructSubIdentExprModel{._field_Token=(*(_232980_tok)), ._field_Expr=_23397_model, ._field_Method=_23367_ins, ._field_Field=jule::Ptr<_1a37a4832_FieldIns>(nullptr), ._field_Owner=(*(_232960_s))}), &__jule_any_type100);
	(*((*(_232945_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23367_ins, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)});
	return (*(_232945_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab920e90_evalStructSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _235038_d, jule::Ptr<_1a37a53d2_StructIns> _235052_s, jule::Ptr<_1a3788c34_SubIdentExpr> _235071_si, jule::Bool _235095_ref) {
	jule::Ptr<_1a37a4832_FieldIns> _23517_f = _1a37a67bd_FindField(_235052_s.ptr(), (*((*(_235071_si))._field_Ident))._field_Kind);;
	if ((_23517_f != nullptr)) {
		if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23517_f.alloc)._field_Decl))._field_Public, (*(*(_23517_f))._field_Decl.alloc)._field_Token)))) {
			_1ab908d46_pushErr(_self_, (*_235071_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23517_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1ab920313_evalStructSubIdentField(_self_, &(_235038_d), &(_235052_s), &((*_235071_si.alloc)._field_Ident), &(_23517_f));;
	};
	;
	jule::Ptr<_1ab0898e5_Fn> _23617_m = _1a37a647c_FindMethod(_235052_s, (*(*(_235071_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23617_m == nullptr)) {
		_1ab908d46_pushErr(_self_, (*_235071_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_235052_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_235071_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s, (*(_23617_m))._field_Public, (*(_23617_m))._field_Token)))) {
		_1ab908d46_pushErr(_self_, (*_235071_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23617_m))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ab9091a9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1ab92092e_evalStructSubIdentMethod(_self_, &(_235038_d), &(_235052_s), &((*_235071_si.alloc)._field_Ident), &(_23617_m), _235095_ref);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9212d1_evalIntTypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _237433_ident) {
	;
	{
		auto &_match_expr{ (*(_237433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d687ac:;
			{
				jule::Ptr<_1ab070c61_Const> _23788_c = static__1ab071190_NewI64(_1ab1161e1_MaxI(jule::Str::lit("int", 3)));;
				(*(_23788_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b3c9c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23788_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23788_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d693c3:;
			{
				jule::Ptr<_1ab070c61_Const> _23878_c = static__1ab071190_NewI64(static_cast<jule::I64>(_1ab1167eb_Min(jule::Str::lit("int", 3))));;
				(*(_23878_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b3c9c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23878_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23878_c});;
			}
		}
		else {
			_case_begin_1b0d65bd8:;
			{
				_1ab908d46_pushErr(_self_, _237433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_237433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d683d3:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab921622_evalUintTypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _240134_ident) {
	;
	{
		auto &_match_expr{ (*(_240134_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d6c926:;
			{
				jule::Ptr<_1ab070c61_Const> _24058_c = static__1ab071459_NewU64(_1ab1164aa_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24058_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b38d4_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24058_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24058_c});;
			}
		}
		else {
			_case_begin_1b0d6b67d:;
			{
				_1ab908d46_pushErr(_self_, _240134_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_240134_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d6c54c:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab921963_evalI8TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _241932_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_241932_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d70d69:;
			{
				jule::Ptr<_1ab070c61_Const> _24258_c = static__1ab071190_NewI64(127LL);;
				(*(_24258_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b3ede_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24258_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24258_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d71980:;
			{
				jule::Ptr<_1ab070c61_Const> _24348_c = static__1ab071190_NewI64(-128LL);;
				(*(_24348_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b3ede_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24348_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24348_c});;
			}
		}
		else {
			_case_begin_1b0d707a3:;
			{
				_1ab908d46_pushErr(_self_, _241932_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_241932_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d70990:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab921ca4_evalI16TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _244833_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_244833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d754bc:;
			{
				jule::Ptr<_1ab070c61_Const> _24548_c = static__1ab071190_NewI64(32767LL);;
				(*(_24548_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b4286_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24548_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24548_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d760d3:;
			{
				jule::Ptr<_1ab070c61_Const> _24638_c = static__1ab071190_NewI64(-32768LL);;
				(*(_24638_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b4286_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24638_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24638_c});;
			}
		}
		else {
			_case_begin_1b0d74e06:;
			{
				_1ab908d46_pushErr(_self_, _244833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_244833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d750e3:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9220e5_evalI32TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _247733_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_247733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d79b20:;
			{
				jule::Ptr<_1ab070c61_Const> _24838_c = static__1ab071190_NewI64(2147483647LL);;
				(*(_24838_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b453e_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24838_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24838_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d7a736:;
			{
				jule::Ptr<_1ab070c61_Const> _24928_c = static__1ab071190_NewI64(-2147483648LL);;
				(*(_24928_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b453e_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24928_c});;
			}
		}
		else {
			_case_begin_1b0d79559:;
			{
				_1ab908d46_pushErr(_self_, _247733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_247733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d79746:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab922436_evalI64TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _250633_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_250633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d7e273:;
			{
				jule::Ptr<_1ab070c61_Const> _25128_c = static__1ab071190_NewI64(jule::MAX_I64);;
				(*(_25128_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b47e7_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25128_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25128_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d7ed89:;
			{
				jule::Ptr<_1ab070c61_Const> _25218_c = static__1ab071190_NewI64(jule::MIN_I64);;
				(*(_25218_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b47e7_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25218_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25218_c});;
			}
		}
		else {
			_case_begin_1b0d7dbac:;
			{
				_1ab908d46_pushErr(_self_, _250633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_250633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d7dd99:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab922777_evalU8TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _253532_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d83541:;
			{
				jule::Ptr<_1ab070c61_Const> _25408_c = static__1ab071459_NewU64(255LLU);;
				(*(_25408_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b4aa0_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25408_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25408_c});;
			}
		}
		else {
			_case_begin_1b0d81d58:;
			{
				_1ab908d46_pushErr(_self_, _253532_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_253532_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d830ce:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab922ab8_evalU16TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _255433_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d86500:;
			{
				jule::Ptr<_1ab070c61_Const> _25598_c = static__1ab071459_NewU64(65535LLU);;
				(*(_25598_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b4d58_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25598_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25598_c});;
			}
		}
		else {
			_case_begin_1b0d85d5c:;
			{
				_1ab908d46_pushErr(_self_, _255433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_255433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d8608d:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab922e09_evalU32TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _257333_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d894ae:;
			{
				jule::Ptr<_1ab070c61_Const> _25788_c = static__1ab071459_NewU64(4294967295LLU);;
				(*(_25788_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b5111_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25788_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25788_c});;
			}
		}
		else {
			_case_begin_1b0d88d1b:;
			{
				_1ab908d46_pushErr(_self_, _257333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_257333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d8904c:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92324a_evalU64TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _259233_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_259233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d8c46d:;
			{
				jule::Ptr<_1ab070c61_Const> _25978_c = static__1ab071459_NewU64(jule::MAX_U64);;
				(*(_25978_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b55ea_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25978_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25978_c});;
			}
		}
		else {
			_case_begin_1b0d8bcca:;
			{
				_1ab908d46_pushErr(_self_, _259233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_259233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d8c00b:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92358b_evalF32TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _261133_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_261133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d90b03:;
			{
				jule::Ptr<_1ab070c61_Const> _26188_c = static__1ab071ca6_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26188_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b583c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26188_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26188_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d91719:;
			{
				jule::Ptr<_1ab070c61_Const> _26278_c = static__1ab071ca6_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26278_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b583c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26278_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26278_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b0d91780:;
			{
				jule::Ptr<_1ab070c61_Const> _26368_c = static__1ab071ca6_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26368_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b583c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26368_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26368_c});;
			}
		}
		else {
			_case_begin_1b0d90394:;
			{
				_1ab908d46_pushErr(_self_, _261133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_261133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d90729:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9238cc_evalF64TypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab6a54d8_Token> _265033_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_265033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b0d96741:;
			{
				jule::Ptr<_1ab070c61_Const> _26578_c = static__1ab071ca6_NewF64(jule::MAX_F64);;
				(*(_26578_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b5a4b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26578_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26578_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b0d97357:;
			{
				jule::Ptr<_1ab070c61_Const> _26668_c = static__1ab071ca6_NewF64(jule::MIN_F64);;
				(*(_26668_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b5a4b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26668_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26668_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b0d973bd:;
			{
				jule::Ptr<_1ab070c61_Const> _26758_c = static__1ab071ca6_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26758_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=true, ._field_Type=_1ab9b5a4b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26758_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26758_c});;
			}
		}
		else {
			_case_begin_1b0d95ed2:;
			{
				_1ab908d46_pushErr(_self_, _265033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_265033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d96367:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab923cc8_evalPrimStatic(_1ab9087b3_eval* _self_, jule::Str _268930_kind, jule::Ptr<_1ab6a54d8_Token> _268941_ident) {
	{
		auto &_match_expr{ _268930_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1b0d9b207:;
			{
				return _1ab9212d1_evalIntTypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1b0d9bcb8:;
			{
				return _1ab921622_evalUintTypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b0d9bd2e:;
			{
				return _1ab921963_evalI8TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b0d9adb6:;
			{
				return _1ab921ca4_evalI16TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b0d9ae2c:;
			{
				return _1ab9220e5_evalI32TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b0d9ae93:;
			{
				return _1ab922436_evalI64TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b0d9b009:;
			{
				return _1ab922777_evalU8TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b0d9be1c:;
			{
				return _1ab922ab8_evalU16TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1b0d9be83:;
			{
				return _1ab922e09_evalU32TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1b0d9bee9:;
			{
				return _1ab92324a_evalU64TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b0d9c060:;
			{
				return _1ab92358b_evalF32TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b0d9c0c6:;
			{
				return _1ab9238cc_evalF64TypeStatic(_self_, _268941_ident);;
			}
		}
		else {
			_case_begin_1b0d97599:;
			{
				_1ab908d46_pushErr(_self_, _268941_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_268930_kind, &__jule_any_type5); (*it++) = jule::Any((*(_268941_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0d97621:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9241c4_evalTypeStatic(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _272134_d, jule::Ptr<_1a3788c34_SubIdentExpr> _272148_si) {
	{
		
		if ((_1ab93bebc_Prim((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da2043:;
			{
				return _1ab923cc8_evalPrimStatic(_self_, _1ab942ca3_Str(_1ab93bebc_Prim((*(_272134_d))._field_Type).ptr()), (*(_272148_si))._field_Ident);;
			}
		}
		else if ((_1ab93c770_Enum((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da2ecd:;
			{
				return _1ab91e004_evalEnumStatic(_self_, _1ab93c770_Enum((*(_272134_d))._field_Type), (*(_272148_si))._field_Ident);;
			}
		}
		else if ((_1ab93ca06_TypeEnum((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da3044:;
			{
				return _1ab91e400_evalTypeEnumStatic(_self_, _1ab93ca06_TypeEnum((*(_272134_d))._field_Type), (*(_272148_si))._field_Ident);;
			}
		}
		else if ((_1ab93d540_Struct((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da1bd0:;
			{
				return _1ab91e7eb_evalStructStatic(_self_, _1ab93d540_Struct((*(_272134_d))._field_Type), (*(_272148_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1b0da1b69:;
			{
				_1ab908d46_pushErr(_self_, (*(_272148_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_272134_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0da1aae:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1b0da9db4_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab129bc7_comptimeTypeInfo>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab130a02_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0dae67c_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab11a833_comptimeStructField>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab11bc74_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0db3e01_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab121c79_comptimeEnumField>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab122cad_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0db86b9_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab124a90_comptimeParam>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab1263dd_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0dbd081_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab11da56_comptimeStatic>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab11ee97_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0dc2805_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab130ccc_comptimeValue>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab13375d_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0dc7079_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab1354a7_comptimeFile>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab136d05_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1ab906a8b_Data> _1b0dcb886_comptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab1393bd_comptimeDecl>* _273754_ct, jule::Ptr<_1ab906a8b_Data>* _273774_d, jule::Ptr<_1a3788c34_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1ab906a8b_Data> _27387_cd = _1ab82b73b_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1ab908d46_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}



inline __jule_tuple_x_1ab906a8b_Data__jule_tuple_bool _1ab924a76_tryComptimeObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data>* _274543_d, jule::Ptr<_1a3788c34_SubIdentExpr> _274557_si) {
	__jule_tuple_x_1ab906a8b_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ab940883_comptimeTypeInfo((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da82be:;
			{
				jule::Ptr<_1ab129bc7_comptimeTypeInfo> _27488_ct = _1ab940883_comptimeTypeInfo((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0da9db4_comptimeObjSubIdent(_self_, &(_27488_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab93e596_comptimeStructField((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da7d07:;
			{
				jule::Ptr<_1ab11a833_comptimeStructField> _27518_ct = _1ab93e596_comptimeStructField((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0dae67c_comptimeObjSubIdent(_self_, &(_27518_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab93eab3_comptimeEnumField((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da7d7e:;
			{
				jule::Ptr<_1ab121c79_comptimeEnumField> _27548_ct = _1ab93eab3_comptimeEnumField((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0db3e01_comptimeObjSubIdent(_self_, &(_27548_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab9400d0_comptimeParam((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da7e06:;
			{
				jule::Ptr<_1ab124a90_comptimeParam> _27578_ct = _1ab9400d0_comptimeParam((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0db86b9_comptimeObjSubIdent(_self_, &(_27578_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab940da0_comptimeStatic((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da7e7d:;
			{
				jule::Ptr<_1ab11da56_comptimeStatic> _27608_ct = _1ab940da0_comptimeStatic((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0dbd081_comptimeObjSubIdent(_self_, &(_27608_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab941136_comptimeValue((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da8005:;
			{
				jule::Ptr<_1ab130ccc_comptimeValue> _27638_ct = _1ab941136_comptimeValue((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0dc2805_comptimeObjSubIdent(_self_, &(_27638_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab9418d9_comptimeFile((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da8533:;
			{
				jule::Ptr<_1ab1354a7_comptimeFile> _27668_ct = _1ab9418d9_comptimeFile((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0dc7079_comptimeObjSubIdent(_self_, &(_27668_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab9413bc_comptimeDecl((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0da8599:;
			{
				jule::Ptr<_1ab1393bd_comptimeDecl> _27698_ct = _1ab9413bc_comptimeDecl((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1b0dcb886_comptimeObjSubIdent(_self_, &(_27698_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b0da7c91:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b0da7bd6:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab924e72_evalObjSubIdent(_1ab9087b3_eval* _self_, jule::Ptr<_1ab906a8b_Data> _277635_d, jule::Ptr<_1a3788c34_SubIdentExpr> _277649_si) {
	if (_1ab6a7dc0_IsIgnoreIdent((*((*(_277649_si))._field_Ident))._field_Kind)) {
		_1ab908d46_pushErr(_self_, (*_277649_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ab906a8b_Data> _27838_compData;
		jule::Bool _278318_ok;
		({
			__jule_tuple_x_1ab906a8b_Data__jule_tuple_bool __jule_assign_result = _1ab924a76_tryComptimeObjSubIdent(_self_, &(_277635_d), _277649_si);
			_27838_compData = __jule_assign_result.__jule_result_arg0;
			_278318_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_278318_ok) {
			return _27838_compData;;
		};
	};
	jule::Ptr<_1ab939816_Type> _27897_kind = (*(_277635_d))._field_Type;;
	{
		
		if ((_1ab93c4d9_Ptr((*_277635_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0dd1bbb:;
			{
				jule::Ptr<_1ab949c22_Ptr> _27924_ptr = _1ab93c4d9_Ptr((*(_277635_d))._field_Type);;
				if (_1ab94a78e_IsUnsafe(_27924_ptr.ptr())) {
					goto _match_end_1b0dd1b44;
				};
				if ((!(_1ab90983b_isUnsafe(_self_)))) {
					_1ab908d46_pushErr(_self_, (*_277649_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_27897_kind=(*(_1ab93c4d9_Ptr((*(_277635_d))._field_Type)))._field_Elem;
				_1ab936307_makeImplicitDeref(&(_277635_d), (*_277649_si.alloc)._field_Ident);
			}
		}
		else if ((_1ab93c253_Sptr((*_277635_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0dd1c65:;
			{
				_27897_kind=(*(_1ab93c253_Sptr((*(_277635_d))._field_Type)))._field_Elem;
				_1ab936307_makeImplicitDeref(&(_277635_d), (*_277649_si.alloc)._field_Ident);
			}
		}
		_match_end_1b0dd1b44:;
	};
	{
		
		if ((_1ab93d7c6_Trait((*_277635_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0dd222c:;
			{
				return _1ab91eca2_evalTraitSubIdent(_self_, _277635_d, _1ab93d7c6_Trait((*(_277635_d))._field_Type), (*_277649_si.alloc)._field_Ident);;
			}
		}
		else if ((_1ab93d540_Struct(_27897_kind.ptr()) != nullptr)) {
			_case_begin_1b0dd554e:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _28104_s = _1ab93d540_Struct(_27897_kind);;
				if (_1ab932853_isInstancedStruct(_28104_s)) {
					jule::Bool _28129_usedReferenceElem = (_1ab93c253_Sptr((*_277635_d.alloc)._field_Type.ptr()) != nullptr);;
					return _1ab920e90_evalStructSubIdent(_self_, _277635_d, _1ab93d540_Struct(_27897_kind), _277649_si, _28129_usedReferenceElem);;
				};
			}
		}
		_match_end_1b0dd54d8:;
	};
	_1ab908d46_pushErr(_self_, (*_277649_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*_277635_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9252b3_evalSubIdent(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3788c34_SubIdentExpr> _282033_si) {
	jule::Ptr<_1ab939816_Type> _28217_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28217_prefix;
	});;
	jule::Ptr<_1ab906a8b_Data> _28247_d = _1ab926814_evalExprKind(_self_, (*((*(_282033_si))._field_Expr))._field_Kind);;
	if ((_28247_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28247_d))._field_Decl) {
		return _1ab9241c4_evalTypeStatic(_self_, _28247_d, _282033_si);;
	};
	return _1ab924e72_evalObjSubIdent(_self_, _28247_d, _282033_si);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab925604_evalTuple(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c57a0_TupleExpr> _283430_tup) {
	jule::Ptr<_1ab947a22_Tuple> _28357_tupT = jule::new_ptr<_1ab947a22_Tuple>(_1ab947a22_Tuple{._field_Types=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)});;
	(*_28357_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(0LL, (*(_283430_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab939816_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1ab082c0c_TupleExprModel> _28387_model = jule::new_ptr<_1ab082c0c_TupleExprModel>(_1ab082c0c_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(0LL, (*_283430_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab906a8b_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28427_ok = true;;
	{
		auto expr = &((*_283430_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0de0405:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _284315_expr = *it;
			{
				jule::Ptr<_1ab906a8b_Data> _28448_d = _1ab927628_evalExpr(_self_, _284315_expr);;
				if ((_28448_d == nullptr)) {
					_28427_ok=false;
					goto _iter_next_1b0de0405;
				};
				(*_28357_tupT.alloc)._field_Types=jule::append((*_28357_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28448_d))._field_Type; __jule_collection; }));
				(*(_28387_model))._field_Datas=jule::append((*_28387_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28448_d; __jule_collection; }));
			}
			_iter_next_1b0de0405:;
			++it;
			goto _iter_begin_1b0de0405;
		}
		_iter_end_1b0de0405:;
	};
	if ((!(_28427_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28357_tupT, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28387_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab925a00_evalMap(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab9485c2_Map> _286328_m, jule::Ptr<_1a378b121_BraceLit> _286341_lit) {
	jule::Ptr<_1ab080bd8_MapExprModel> _28647_model = jule::new_ptr<_1ab080bd8_MapExprModel>(_1ab080bd8_MapExprModel{._field_Kind=_286328_m, ._field_Entries=jule::Slice<jule::Ptr<_1ab08080e_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_286341_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0de3c44:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _286815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_286815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1b0de4360:;
						{
							goto _match_end_1b0de464b;
						}
					}
					else {
						_case_begin_1b0de46b2:;
						{
							_1ab908d46_pushErr(_self_.ptr(), (*(_286341_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b0de464b:;
				};
				jule::Ptr<_1a378b94b_KeyValPair> _28788_pair = (*(_286815_expr))._field_Kind.cast_ptr<_1a378b94b_KeyValPair>(&__jule_any_type81);;
				jule::Ptr<_1ab906a8b_Data> _28808_key = _1ab927628_evalExpr(_self_, (*(_28788_pair))._field_Key);;
				if ((_28808_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ab906a8b_Data> _28858_val = _1ab927628_evalExpr(_self_, (*_28788_pair.alloc)._field_Val);;
				if ((_28858_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1ab8931ed_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_286328_m))._field_Key), &(_28808_key), &((*((*_28788_pair.alloc)._field_Key))._field_Token))) {
					_1ab88d968_checkAssignType((*(_self_))._field_s, false, &((*_286328_m.alloc)._field_Key), &(_28808_key), (*(*(_28788_pair))._field_Key.alloc)._field_Token, _1ab90bd49_getOwnerRefers(_self_));
				};
				if (_1ab8931ed_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_286328_m.alloc)._field_Val), &(_28858_val), &((*((*_28788_pair.alloc)._field_Val))._field_Token))) {
					_1ab88d968_checkAssignType((*(_self_))._field_s, false, &((*_286328_m.alloc)._field_Val), &(_28858_val), (*(*(_28788_pair))._field_Val.alloc)._field_Token, _1ab90bd49_getOwnerRefers(_self_));
				};
				(*(_28647_model))._field_Entries=jule::append((*_28647_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab08080e_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab08080e_KeyValPairExprModel>(_1ab08080e_KeyValPairExprModel{._field_Key=(*(_28808_key))._field_Model, ._field_Val=(*(_28858_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1b0de3c44:;
			++it;
			goto _iter_begin_1b0de3c44;
		}
		_iter_end_1b0de3c44:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_286328_m, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28647_model, &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab925d41_evalBraceLit(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a378b121_BraceLit> _291133_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1b0e0105e:;
			{
				_1ab908d46_pushErr(_self_, (*(_291133_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab93da5c_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b0ded90d:;
			{
				return _1ab925a00_evalMap(_self_, _1ab93da5c_Map((*(_self_))._field_prefix), _291133_lit);;
			}
		}
		else if ((_1ab93d540_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b0ded974:;
			{
				return _1ab91bad4_evalStructLitExplicit(_self_, _1ab93d540_Struct((*(_self_))._field_prefix), (*(_291133_lit))._field_Exprs, (*_291133_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1b0deeb84:;
			{
				_1ab908d46_pushErr(_self_.ptr(), (*(_291133_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b0deeb0c:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab926182_evalAnonFunc(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a3793854_FnDecl> _292633_decl) {
	_1ab94bc13_typeChecker _29277_tc = _1ab94bc13_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1ab08c9a3_FnIns> _29327_ins = _1ab953d2a_buildFunc(&_29277_tc, _292633_decl);;
	if ((_29327_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29327_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _29377_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab8a7289_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
			_case_begin_1b0e069b0:;
			{
				jule::Ptr<_1ab83ce67_scopeChecker> _29408_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1);;
				jule::Ptr<_1ab83ce67_scopeChecker> _29418_scc = _1ab850375_newChildChecker(_29408_sc);;
				(*(_29418_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab83be77_scopeLabel>>>(nullptr);
				(*_29418_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>>(nullptr);
				(*_29418_scc.alloc)._field_owner=_29327_ins;
				(*_29418_scc.alloc)._field_childIndex=0LL;
				(*_29418_scc.alloc)._field_it=0LLU;
				(*_29418_scc.alloc)._field_cse=0LLU;
				(*_29418_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1ab8a7289_Var>>>)((&(_29377_captured))));
				_1ab8a16c3_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29327_ins), &(_29418_scc));
			}
		}
		else {
			_case_begin_1b0e07593:;
			{
				_1ab8a1cde_checkFnIns((*_self_.alloc)._field_s, &(_29327_ins));
			}
		}
		_match_end_1b0e0752c:;
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29327_ins, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ab080435_AnonFnExprModel>(_1ab080435_AnonFnExprModel{._field_Captured=_29377_captured, ._field_Func=_29327_ins, ._field_Global=_1ab909ac2_isGlobal(_self_)}), &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9264c3_evalBinary(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1a37891da_BinaryExpr> _296431_op) {
	_1ab929a48_binaryEval _29657_bs = static__1ab92a131_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ab94292e_Prim> _29684_prim = _1ab93bebc_Prim((*(_self_))._field_prefix);;
		if (((_29684_prim == nullptr) || (!(_1ab118853_IsNum(_1ab942ca3_Str(_29684_prim.ptr())))))) {
			jule::Ptr<_1ab939816_Type> _29709_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29709_prefix;
			});;
			return _1ab930b92_eval(&_29657_bs, &(_296431_op));;
		};
	};
	return _1ab930b92_eval(&_29657_bs, &(_296431_op));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab926814_evalExprKind(jule::Ptr<_1ab9087b3_eval> _self_, jule::Any _297933_kind) {
	{
		auto &_match_expr{ _297933_kind };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b0e13604:;
			{
				jule::Ptr<_1ab6c4e75_RangeExpr> _29828_e = _297933_kind.unsafe_cast_ptr<_1ab6c4e75_RangeExpr>();;
				return _1ab926814_evalExprKind(_self_, (*((*(_29828_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b0e13934:;
			{
				return _1ab90b376_evalLit(_self_.ptr(), _297933_kind.cast_ptr<_1ab6c5b46_LitExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b0e1399a:;
			{
				return _1ab9110b2_evalIdent(_self_.ptr(), _297933_kind.cast_ptr<_1ab6c64c6_IdentExpr>(&__jule_any_type41));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b0e13a11:;
			{
				return _1ab911403_evalUnary(_self_, _297933_kind.cast_ptr<_1ab6c6c68_UnaryExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b0e13a77:;
			{
				return _1ab911744_evalVariadic(_self_, _297933_kind.cast_ptr<_1ab6c7142_VariadicExpr>(&__jule_any_type78));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b0e13add:;
			{
				return _1ab911a85_evalUnsafe(_self_, _297933_kind.cast_ptr<_1ab6c6020_UnsafeExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b0e13b54:;
			{
				return _1ab9126bd_evalSliceExpr(_self_, _297933_kind.cast_ptr<_1a378c386_SliceExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b0e14050:;
			{
				return _1ab91631a_evalIndexing(_self_, _297933_kind.cast_ptr<_1a378cdae_IndexingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b0e140b6:;
			{
				return _1ab91764b_evalSlicing(_self_, _297933_kind.cast_ptr<_1a378d51e_SlicingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b0e1412c:;
			{
				return _1ab91b2dc_evalCast(_self_, _297933_kind.cast_ptr<_1a3788481_CastExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b0e14193:;
			{
				return _1ab91b62d_evalNamespace(_self_.ptr(), _297933_kind.cast_ptr<_1a378885a_NamespaceExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b0e1421a:;
			{
				return _1ab91be25_evalStructLit(_self_, _297933_kind.cast_ptr<_1a378ab6a_StructLit>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b0e14292:;
			{
				return _1ab91c4ec_evalType(_self_.ptr(), _297933_kind.cast_ptr<_1ab6c0877_TypeDecl>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b0e14319:;
			{
				return _1ab91db08_evalFnCall(_self_, _297933_kind.cast_ptr<_1a378984a_FnCallExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b0e14391:;
			{
				return _1ab9252b3_evalSubIdent(_self_, _297933_kind.cast_ptr<_1a3788c34_SubIdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b0e14418:;
			{
				return _1ab925604_evalTuple(_self_, _297933_kind.cast_ptr<_1ab6c57a0_TupleExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b0e14490:;
			{
				return _1ab925d41_evalBraceLit(_self_, _297933_kind.cast_ptr<_1a378b121_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b0e14517:;
			{
				return _1ab926182_evalAnonFunc(_self_, _297933_kind.cast_ptr<_1a3793854_FnDecl>(&__jule_any_type67));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b0e1458e:;
			{
				return _1ab9264c3_evalBinary(_self_, _297933_kind.cast_ptr<_1a37891da_BinaryExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1b0e138bd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0e13857:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab926b55_eval1(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _302726_expr) {
	jule::Ptr<_1ab906a8b_Data> _30287_d = _1ab926814_evalExprKind(_self_, (*(_302726_expr))._field_Kind);;
	if (((_30287_d == nullptr) || ((*(_30287_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ab93d2a9_Fn((*(_30287_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e394b5:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _30368_f = _1ab93d2a9_Fn((*(_30287_d))._field_Type.ptr());;
				if (_1ab08de6b_IsBuiltin(_30368_f.ptr())) {
					_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*_302726_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1b0e37bbc;
				};
				jule::I64 _30414_required = (*((*_30368_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _30424_given = (*_30368_f.alloc)._field_Generics.len();;
				if ((!(_1ab8879a6_checkGenericQuantity((*(_self_))._field_s, _30414_required, _30424_given, (*_302726_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30368_f))._field_Decl.alloc)._field_Statically)) && _1ab08a132_IsMethod((*(_30368_f))._field_Decl))) {
					_1ab886477_pushErr((*(_self_))._field_s, (*_302726_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1ab93108d_findDirective(&((*(*(_30368_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1ab886477_pushErr((*(_self_))._field_s, (*_302726_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30368_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30368_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30287_d))._field_Decl) {
			_case_begin_1b0e3952b:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _30558_s = _1ab93d540_Struct((*(_30287_d))._field_Type.ptr());;
				if ((_30558_s == nullptr)) {
					goto _match_end_1b0e37bbc;
				};
				jule::I64 _30594_required = (*((*(_30558_s))._field_Decl))._field_Generics.len();;
				jule::I64 _30604_given = (*(_30558_s))._field_Generics.len();;
				if ((!(_1ab8879a6_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30594_required, _30604_given, (*_302726_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1b0e37bbc:;
	};
	return _30287_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab926e96_eval(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _307225_expr) {
	jule::Ptr<_1ab906a8b_Data> _30737_d = _1ab926b55_eval1(_self_, _307225_expr);;
	if ((_30737_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1ab93e079_comptime((*(_30737_d))._field_Type.ptr()))) {
		_1ab886477_pushErr((*_self_.alloc)._field_s.ptr(), (*(_307225_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30737_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9272d7_evalExpr1(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _308730_expr) {
	jule::Ptr<_1ab906a8b_Data> _30887_d = _1ab926b55_eval1(_self_, _308730_expr);;
	{
		
		if ((_30887_d == nullptr)) {
			_case_begin_1b0e47638:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30887_d))._field_Decl) {
			_case_begin_1b0e476d2:;
			{
				_1ab908d46_pushErr(_self_, (*(_308730_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b0e475b1:;
			{
				return _30887_d;;
			}
		}
		_match_end_1b0e47539:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab927628_evalExpr(jule::Ptr<_1ab9087b3_eval> _self_, jule::Ptr<_1ab6c4bab_Expr> _310329_expr) {
	jule::Ptr<_1ab906a8b_Data> _31047_d = _1ab926e96_eval(_self_, _310329_expr);;
	{
		
		if ((_31047_d == nullptr)) {
			_case_begin_1b0e496a1:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31047_d))._field_Decl) {
			_case_begin_1b0e4974a:;
			{
				_1ab908d46_pushErr(_self_, (*(_310329_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b0e49629:;
			{
				return _31047_d;;
			}
		}
		_match_end_1b0e495a2:;
	};
}








inline jule::Bool _1ab927aac_unaryEval_eq(_1ab927aac_unaryEval *_self_, _1ab927aac_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1ab927aac_unaryEval static__1ab928030_new(jule::Ptr<_1ab9087b3_eval> _312420_e) {
	return _1ab927aac_unaryEval{._field_e=_312420_e, ._field_d=jule::Ptr<_1ab906a8b_Data>(nullptr), ._field_u=jule::Ptr<_1ab6c6c68_UnaryExpr>(nullptr)};;
}



inline void _1ab92822d_minus(_1ab927aac_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1b0e4b53d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e4b928:;
			{
				if ((!(_1ab118853_IsNum(_1ab939c12_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab93d540_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e4b1db:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b0e4b175:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0e4b0a9:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ab9074c6_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ab07575a_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e50d06:;
				{
					_1ab07478c_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1ab07315e_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ab074c21_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e50de4:;
				{
					_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1ab072625_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ab074ea7_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e509a4:;
				{
					_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1ab0733e5_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b0e5092c:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3162:5"));;
				}
			}
			_match_end_1b0e50850:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ab92842b_plus(_1ab927aac_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1b0e56339:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e56724:;
			{
				if ((!(_1ab118853_IsNum(_1ab939c12_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab93d540_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e55ed7:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b0e55e71:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0e55d61:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ab9074c6_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ab07575a_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e5ab02:;
				{
					_1ab07478c_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1ab07315e_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ab074c21_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e5abe0:;
				{
					_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1ab072625_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ab074ea7_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e5a7a0:;
				{
					_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1ab0733e5_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b0e5a728:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3207:5"));;
				}
			}
			_match_end_1b0e5a64b:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ab928629_caret(_1ab927aac_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1b0e61135:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e61520:;
			{
				if ((!(_1ab11827b_IsInt(_1ab939c12_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab93d540_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e60cd3:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b0e60c6c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0e60b5c:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ab9074c6_IsConst((*(_self_))._field_d)) {
		jule::I64 _32484_sz = _1ab11020c_BitSizeOf((*(_1ab93bebc_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1ab074c21_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e665be:;
				{
					{
						auto &_match_expr{ _32484_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1b0e6c509:;
							{
								_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1ab072625_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1b0e6c0ec:;
							{
								_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1ab072625_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1b0e6c163:;
							{
								_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1ab072625_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1b0e6c1c9:;
							{
								_1ab073bba_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1ab072625_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1b0e6be32:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3261:6"));;
							}
						}
						_match_end_1b0e6bea9:;
					};
				}
			}
			else if (_1ab074ea7_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e6669b:;
				{
					{
						auto &_match_expr{ _32484_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1b0e725ec:;
							{
								_1ab073e73_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1ab0728ab_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1b0e721e0:;
							{
								_1ab073e73_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1ab0728ab_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1b0e72256:;
							{
								_1ab073e73_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1ab0728ab_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1b0e722bc:;
							{
								_1ab073e73_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1ab0728ab_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1b0e72014:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3274:6"));;
							}
						}
						_match_end_1b0e7208b:;
					};
				}
			}
			else {
				_case_begin_1b0e66239:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3277:5"));;
				}
			}
			_match_end_1b0e661c3:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ab928827_excl(_1ab927aac_unaryEval* _self_) {
	jule::Ptr<_1ab94292e_Prim> _32913_t = _1ab93bebc_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_32913_t == nullptr) || (!(_1ab945b63_IsBool(_32913_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ab9074c6_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ab07523d_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b0e7a02d:;
				{
					_1ab07422b_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1ab072b42_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b0e79b65:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3305:5"));;
				}
			}
			_match_end_1b0e79a88:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ab928a25_star(_1ab927aac_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1ab93c4d9_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e7d87d:;
			{
				if ((!(_1ab90983b_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ab908d46_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ab949c22_Ptr> _33308_t = _1ab93c4d9_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1ab94a78e_IsUnsafe(_33308_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Type=(*_33308_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1ab93c253_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b0e7d905:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1ab93c253_Sptr((*((*(_self_))._field_d))._field_Type)))._field_Elem;
			}
		}
		else {
			_case_begin_1b0e7d4c6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0e7c4b4:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1ab928c23_amper(_1ab927aac_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b0e87106:;
			{
				jule::Ptr<_1ab07d3bc_StructLitExprModel> _33528_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1ab07d3bc_StructLitExprModel>();;
				_1ab9319b7_makeStructLitAlloc(&((*(_self_))._field_d), &(_33528_lit));
			}
		}
		else {
			_case_begin_1b0e84565:;
			{
				{
					
					if (_1ab95614b_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b0e84e5b:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab949c22_Ptr>(_1ab949c22_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1b0e84158:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b0e84a0a:;
				};
			}
		}
		_match_end_1b0e844ee:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1ab928e21_typeDecl(_1ab927aac_unaryEval* _self_) {
	_1ab94bc13_typeChecker _33777_tc = _1ab94bc13_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1ab94ac23_referencer>(nullptr), ._field_refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ab938a24_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b0e8ab43:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab952543_buildPtrFromType(&_33777_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type86);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b0e8a802:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab951db1_buildSptrFromType(&_33777_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type86);
			}
		}
		else {
			_case_begin_1b0e8a23b:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0e8a77a:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ab92911e_evalData(_1ab927aac_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b0e91451:;
			{
				jule::Ptr<_1ab939816_Type> _34028_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1ab926e96_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34028_prefix;
			}
		}
		else {
			_case_begin_1b0e8a868:;
			{
				(*(_self_))._field_d=_1ab926e96_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1b0e91033:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab929460_eval(_1ab927aac_unaryEval* _self_, jule::Ptr<_1ab6c6c68_UnaryExpr> _341124_u) {
	(*(_self_))._field_u=_341124_u;
	_1ab92911e_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ab928e21_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ab939816_Type> _34223_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b0e95b1a:;
			{
				_1ab92822d_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b0e95b81:;
			{
				_1ab92842b_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b0e95be7:;
			{
				_1ab928629_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b0e95c5d:;
			{
				_1ab928827_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b0e95cc4:;
			{
				_1ab928a25_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b0e95d3a:;
			{
				_1ab928c23_amper(_self_);
			}
		}
		else {
			_case_begin_1b0e955cb:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b0e95a93:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b0e96346:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str(_34223_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1ab9074c6_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b0e9429a:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1b0e97ce8:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1ab929a48_binaryEval_eq(_1ab929a48_binaryEval *_self_, _1ab929a48_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1ab929a48_binaryEval static__1ab92a131_newPlain(jule::Ptr<_1ab9087b3_eval> _345925_e) {
	return _1ab929a48_binaryEval{._field_e=_345925_e, ._field_l=jule::Ptr<_1ab906a8b_Data>(nullptr), ._field_r=jule::Ptr<_1ab906a8b_Data>(nullptr), ._field_op=jule::Ptr<_1ab6a54d8_Token>(nullptr)};;
}



inline _1ab929a48_binaryEval static__1ab92a4a5_new(jule::Ptr<_1ab9087b3_eval> _346520_e, jule::Ptr<_1ab6a54d8_Token> _346534_op) {
	return _1ab929a48_binaryEval{._field_e=_346520_e, ._field_l=jule::Ptr<_1ab906a8b_Data>(nullptr), ._field_r=jule::Ptr<_1ab906a8b_Data>(nullptr), ._field_op=_346534_op};;
}



inline jule::Bool _1ab92a73b_checkTypeCompatibility(_1ab929a48_binaryEval* _self_) {
	return _1ab88ec99_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1ab92a9c2_checkStructCommonOperatorCompatibility(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab08c9a3_FnIns> _347911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b0e9d64a:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b0e9d2e8:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b0e9d35e:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b0e9d3c5:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b0e9d43b:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b0e9d4a2:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b0e9d518:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b0e9ec56:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b0e9ecbc:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b0e9ed33:;
			{
				_347911_overload=(*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b0e9cd86:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1b0e9d271:;
	};
	if ((_347911_overload == nullptr)) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1ab08b84d_ParamIns> _35117_p = (*(_347911_overload))._field_Params[1LL];;
	return _1ab88d968_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35117_p))._field_Decl))._field_Reference, &((*_35117_p.alloc)._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, _1ab90bd49_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92ac58_evalComptimeTypeInfo(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _35167_r = _1ab940883_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35167_r == nullptr)) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab129bc7_comptimeTypeInfo> _35217_l = _1ab940883_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b0eae0c8:;
			{
				jule::Ptr<_1ab070c61_Const> _35248_constant = static__1ab071723_NewBool(_1ab93a053_Equal((*(_35217_l))._field_base, (*(_35167_r))._field_base));;
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35248_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35248_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0eb056e:;
			{
				jule::Ptr<_1ab070c61_Const> _35318_constant = static__1ab071723_NewBool((!(_1ab93a053_Equal((*(_35217_l))._field_base, (*(_35167_r))._field_base))));;
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35318_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35318_constant});;
			}
		}
		else {
			_case_begin_1b0eabdd9:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0eadbee:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92aede_evalNil(_1ab929a48_binaryEval* _self_) {
	if ((!(_1ab93b719_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0eb5123:;
			{
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b0eb340c:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0eb4c49:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92b275_evalEnum(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab0977b0_Enum> _35627_enm = _1ab93c770_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0eb7554:;
			{
				jule::Ptr<_1ab939816_Type> _35668_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1ab93c770_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
					_35668_rkind=(*((*(_1ab93c770_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				if ((!(_1ab88e3c5_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35627_enm))._field_TypeSym.alloc)._field_Type), &(_35668_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		_match_end_1b0eb74cc:;
	};
	if (((_1ab93c770_Enum((*((*(_self_))._field_r))._field_Type) == nullptr) || (_35627_enm != _1ab93c770_Enum((*((*(_self_))._field_r))._field_Type)))) {
		_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35627_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b0ebd1a3:;
			{
				if ((!(_1ab118853_IsNum(_1ab939c12_Str((*(*(_35627_enm))._field_TypeSym.alloc)._field_Type.ptr()))))) {
					_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b0ebe2e7:;
			{
				jule::Ptr<_1ab096c54_EnumItem> _35964_first = (*_35627_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1ab074c21_IsI64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b0ec2bd0:;
						{
							if ((_1ab072625_ReadI64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1b0ec7300;
							};
							goto _julec_label_1b0ec60bd;
						}
					}
					else if (_1ab074ea7_IsU64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b0ec2cbd:;
						{
							if ((_1ab0728ab_ReadU64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1b0ec7300;
							};
							goto _julec_label_1b0ec60bd;
						}
					}
					else {
						_case_begin_1b0ec2817:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3609:5"));;
						}
					}
					_match_end_1b0ec2790:;
				};
				_julec_label_1b0ec60bd:;
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1ab9091a9_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1b0ec7300:;
				goto _case_begin_1b0ebe35d;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b0ebe35d:;
			{
				if (((_1ab93bebc_Prim((*(*(_35627_enm))._field_TypeSym.alloc)._field_Type.ptr()) == nullptr) || (!(_1ab11827b_IsInt(_1ab942ca3_Str(_1ab93bebc_Prim((*((*(_35627_enm))._field_TypeSym))._field_Type).ptr())))))) {
					_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b0eb75ba:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0ebcceb:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92b50b_evalTypeEnum(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab098eba_TypeEnum> _36297_enm = _1ab93ca06_TypeEnum((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0ecb37b:;
			{
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b0eca6aa:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab09933e_Str(_36297_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0ecae19:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92b792_evalSptr(_1ab929a48_binaryEval* _self_) {
	if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0ecd89a:;
			{
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b0ecc7bc:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0ecd4c1:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92ba28_evalPtr(_1ab929a48_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b0ed0c76:;
			{
				if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b0ed21d9:;
			{
				if ((_1ab93c4d9_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ab94a78e_IsUnsafe(_1ab93c4d9_Ptr((*((*(_self_))._field_l))._field_Type).ptr())) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1ab932b50_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b0ed036e:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0ed0292:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92bcae_evalArr(_1ab929a48_binaryEval* _self_) {
	if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0ed8d6c:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1ab08c9a3_FnIns> _37069_f = _1ab08ae02_instanceForce(_1aa776643_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37069_f))._field_Generics=jule::append((*_37069_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=(*(_1ab93cc8c_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37085_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab89dec8_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37069_f), &((*(_self_))._field_op));
						_37085_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37085_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3710:6"));;
					};
					_1b0b72d47_pushReference((*(_self_))._field_e, &(_37069_f));
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b0ed3b36:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0ed8993:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92c045_evalStruct(_1ab929a48_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b0eda742:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b0eda7ca:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b0eded2e:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b0eded95:;
			{
				if (((*(_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0edee0b:;
			{
				if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		_match_end_1b0eda665:;
	};
	if ((!(_1ab92a9c2_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92c2cb_evalTrait(_1ab929a48_binaryEval* _self_) {
	if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0eeb467:;
			{
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b0eea81d:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0eeb08d:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92c562_evalAny(_1ab929a48_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b0eed843:;
			{
				_1ab957614_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1ab90bd49_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b0eece3b:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b0eecd5e:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92c7e8_evalBool(_1ab929a48_binaryEval* _self_) {
	if ((!(_1ab92a73b_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b10019cd:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b0eeeb74:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b1001604:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92ca7e_evalStr(_1ab929a48_binaryEval* _self_) {
	jule::Str _38227_rk = _1ab939c12_Str((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_38227_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_38227_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b1005c68:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b1005b7a:;
			{
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b1004739:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b10057c3:;
	};
}



inline void _1ab92cc7c_setTypeToGreater(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab94292e_Prim> _38473_lp = _1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1ab94292e_Prim> _38483_rp = _1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38483_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38473_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38473_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1ab92d035_checkModData(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _386433_d) {
	if ((!(_1ab9074c6_IsConst((*(_386433_d)).ptr())))) {
		if (((_1ab93bebc_Prim((*((*(_386433_d))))._field_Type.ptr()) == nullptr) || (!(_1ab11827b_IsInt((*(_1ab93bebc_Prim((*((*(_386433_d))))._field_Type)))._field_Kind))))) {
			_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ab8e237e_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _386433_d)) {
			_case_begin_1b10122b3:;
			{
				_1ab073bba_SetI64((*((*(_386433_d))))._field_Constant.ptr(), _1ab0733e5_AsI64((*((*(_386433_d))))._field_Constant));
			}
		}
		else if (_1ab8e2747_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _386433_d)) {
			_case_begin_1b1011e94:;
			{
				_1ab073e73_SetU64((*((*(_386433_d))))._field_Constant.ptr(), _1ab07367b_AsU64((*((*(_386433_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1b1011e2d:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1011db7:;
	};
}



inline void _1ab92d233_mod(_1ab929a48_binaryEval* _self_) {
	_1ab92d035_checkModData(_self_, &((*(_self_))._field_l));
	_1ab92d035_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ab92d62e_numbersAreCompatibile(_1ab929a48_binaryEval* _self_, jule::Str* _388634_lk, jule::Str* _388644_rk) {
	if ((!(_1ab118853_IsNum((*(_388644_rk)))))) {
		return false;;
	};
	if ((_1ab9074c6_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_388634_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1ab9074c6_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ab8e200a_floatAssignable(_388634_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388644_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_388634_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1ab9074c6_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ab8e200a_floatAssignable(_388634_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388644_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1ab9074c6_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1ab8e2abb_intAssignable((*(_388634_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_388634_lk)) == (*(_388644_rk)));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92d8b5_shift(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab94292e_Prim> _39143_lk = _1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39143_lk == nullptr)) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab94292e_Prim> _39193_rk = _1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39193_rk == nullptr)) {
		_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1ab118853_IsNum((*(_39143_lk))._field_Kind))) || (!(_1ab118853_IsNum((*(_39193_rk))._field_Kind))))) {
		_1ab88e7e3_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1ab11827b_IsInt((*(_39143_lk))._field_Kind)))) {
		if (((!(_1ab9074c6_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39143_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39193_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1ab8e2abb_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1ab073bba_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1ab0733e5_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1ab9b47e7_primI64;
		} else if (_1ab8e2abb_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1ab073e73_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1ab07367b_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1ab9b55ea_primU64;
		};
	};
	if ((!(_1ab11827b_IsInt((*(_39193_rk))._field_Kind)))) {
		if (((!(_1ab9074c6_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39143_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39193_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1ab8e2abb_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1ab073bba_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1ab0733e5_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1ab9b47e7_primI64;
		} else if (_1ab8e2abb_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1ab073e73_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1ab07367b_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1ab9b55ea_primU64;
		};
	};
	if ((!(_1ab932479_isOkForShifting(&((*(_self_))._field_r))))) {
		_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92db4b_evalFloat(_1ab929a48_binaryEval* _self_) {
	jule::Str _39693_lk = (*(_1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39703_rk = (*(_1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1ab92d62e_numbersAreCompatibile(_self_, &(_39693_lk), &(_39703_rk))))) {
		_1ab88e7e3_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b102d2ac:;
			{
				_1ab92cc7c_setTypeToGreater(_self_);
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		_match_end_1b102d235:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b102ec81:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:3994:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b1030b2d:;
			{
				_1ab92cc7c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b1030b94:;
			{
				_1ab92cc7c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b102e225:;
			{
				if ((!(_1ab11827b_IsInt(_39703_rk)))) {
					_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39693_lk, &__jule_any_type5); (*it++) = jule::Any(_39703_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1ab92d233_mod(_self_);
				_1ab92cc7c_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b102d39a:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b102e1ae:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92ddd2_evalInt(_1ab929a48_binaryEval* _self_) {
	jule::Str _40183_lk = (*(_1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _40193_rk = (*(_1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1ab92d62e_numbersAreCompatibile(_self_, &(_40183_lk), &(_40193_rk))))) {
		_1ab88e7e3_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b10369be:;
			{
				return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3373_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
			}
		}
		_match_end_1b1036947:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b10382a6:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4043:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b1039153:;
			{
				_1ab92cc7c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b10391b9:;
			{
				_1ab92cc7c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b10378c1:;
			{
				_1ab92d233_mod(_self_);
				_1ab92cc7c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b1036aac:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b1037d99:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92e168_evalPrim(_1ab929a48_binaryEval* _self_) {
	jule::Ptr<_1ab94292e_Prim> _40663_prim = _1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1ab945b63_IsBool(_40663_prim.ptr())) {
			_case_begin_1b103c475:;
			{
				return _1ab92c7e8_evalBool(_self_);;
			}
		}
		else if (_1ab945de9_IsStr(_40663_prim.ptr())) {
			_case_begin_1b103c51e:;
			{
				return _1ab92ca7e_evalStr(_self_);;
			}
		}
		_match_end_1b103c3dc:;
	};
	if ((_1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab942ca3_Str(_40663_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1ab1185bc_IsFloat((*_40663_prim.alloc)._field_Kind)) {
			_case_begin_1b104029c:;
			{
				return _1ab92db4b_evalFloat(_self_);;
			}
		}
		else if (_1ab11827b_IsInt((*_40663_prim.alloc)._field_Kind)) {
			_case_begin_1b1040335:;
			{
				return _1ab92ddd2_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b1040236:;
			{
				return nullptr;;
			}
		}
		_match_end_1b103d663:;
	};
}



inline jule::Bool _1ab92e3ee_checkSpecialCases(_1ab929a48_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _40913_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_40913_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1ab93ae66_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1ab93a949_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1ab93ae66_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1ab93a949_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab92e685_evalOp(_1ab929a48_binaryEval* _self_) {
	jule::Bool _41063_ok = _1ab92e3ee_checkSpecialCases(_self_);;
	if ((!(_41063_ok))) {
		return nullptr;;
	};
	if ((_1ab93d540_Struct((*((*(_self_))._field_l))._field_Type.ptr()) != nullptr)) {
		return _1ab92c045_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1ab92d8b5_shift(_self_);;
	};
	{
		
		if (_1ab93abd0_Void((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1b104941b:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1ab940883_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1b10495c5:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b1049482;
			}
		}
		else if ((_1ab940883_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b1049482:;
			{
				return _1ab92ac58_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1ab946180_IsAny(_1ab93bebc_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1b10494e8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104aa6b;
			}
		}
		else if (_1ab93a949_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1b104aa6b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104aad2;
			}
		}
		else if (_1ab93a949_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1b104aad2:;
			{
				return _1ab92aede_evalNil(_self_);;
			}
		}
		else if (((_1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1ab946180_IsAny(_1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1b104abd1:;
			{
				return _1ab92c562_evalAny(_self_);;
			}
		}
		else if ((_1ab93ca06_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1b104ac47:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104acad;
			}
		}
		else if ((_1ab93ca06_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104acad:;
			{
				return _1ab92b50b_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ab93c770_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1b104ad24:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104ad8a;
			}
		}
		else if ((_1ab93c770_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104ad8a:;
			{
				return _1ab92b275_evalEnum(_self_);;
			}
		}
		else if ((_1ab93c253_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1b104ae01:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104ae67;
			}
		}
		else if ((_1ab93c253_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104ae67:;
			{
				return _1ab92b792_evalSptr(_self_);;
			}
		}
		else if ((_1ab93c4d9_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1b104aecd:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104b044;
			}
		}
		else if ((_1ab93c4d9_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104b044:;
			{
				return _1ab92ba28_evalPtr(_self_);;
			}
		}
		else if ((_1ab93cc8c_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104b0aa:;
			{
				return _1ab92bcae_evalArr(_self_);;
			}
		}
		else if ((_1ab93d7c6_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1b104b176:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b104b1dc;
			}
		}
		else if ((_1ab93d7c6_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104b1dc:;
			{
				return _1ab92c2cb_evalTrait(_self_);;
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1b104b253:;
			{
				return _1ab92e168_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b1049240:;
			{
				_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b10487d3:;
	};
}



inline void _1ab92e93d_evalConst(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _417630_d) {
	{
		
		if (((*(_417630_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1b105cc9d:;
			{
				return;;
			}
		}
		else if ((!(_1ab9074c6_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ab9074c6_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b105d353:;
			{
				(*((*(_417630_d))))._field_Constant=nullptr;
				(*((*(_417630_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1b105cb8d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b105d430:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab076805_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b1060883:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool((!(_1ab076805_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b10608e9:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab0764b4_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b1060960:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab076173_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b10609c6:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab0772c8_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b1060a4d:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab076b46_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b1060ac5:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab077619_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b1060b4c:;
			{
				(*((*(_417630_d))))._field_Constant=static__1ab071723_NewBool(_1ab076e87_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b1060bc4:;
			{
				_1ab07795a_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b1060c4b:;
			{
				_1ab077c9b_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b1060cc3:;
			{
				_1ab0780dc_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b1060d4a:;
			{
				jule::Bool _42164_ok = _1ab07842d_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42164_ok)) && (_1ab073912_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1ab94292e_Prim> _42218_prim = _1ab93bebc_Prim((*((*(_417630_d))))._field_Type.ptr());;
				{
					
					if (_1ab117ba4_IsSigInt((*(_42218_prim))._field_Kind)) {
						_case_begin_1b1071e5a:;
						{
							_1ab073bba_SetI64((*((*(_417630_d))))._field_Constant, _1ab0733e5_AsI64((*((*(_417630_d))))._field_Constant));
						}
					}
					else if (_1ab117eb2_IsUnsigInt((*(_42218_prim))._field_Kind)) {
						_case_begin_1b1072004:;
						{
							_1ab073e73_SetU64((*((*(_417630_d))))._field_Constant, _1ab07367b_AsU64((*((*(_417630_d))))._field_Constant));
						}
					}
					_match_end_1b1071dd3:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b1060dc2:;
			{
				jule::Bool _42294_ok = _1ab07876e_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42294_ok)) && (_1ab073912_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b1060e49:;
			{
				_1ab078e01_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b1060ec1:;
			{
				_1ab078ab0_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b1061048:;
			{
				_1ab079242_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b10610c0:;
			{
				_1ab079583_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b1061147:;
			{
				_1ab0798c4_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1b105eb6d:;
	};
	(*((*(_417630_d))))._field_Model=jule::Any((*((*(_417630_d))))._field_Constant, &__jule_any_type15);
	_1ab934877_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _417630_d, _1ab93c770_Enum((*((*(_417630_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1ab90bd49_getOwnerRefers((*(_self_))._field_e));
}



inline void _1ab92ebe6_checkData(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _425430_d) {
	jule::Ptr<_1ab08c9a3_FnIns> _42553_f = _1ab93d2a9_Fn((*((*(_425430_d))))._field_Type.ptr());;
	if ((((_42553_f != nullptr) && ((*_42553_f.alloc)._field_Decl != nullptr)) && _1ab08a132_IsMethod((*(_42553_f))._field_Decl))) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1ab92ede4_checkDatas(_1ab929a48_binaryEval* _self_) {
	_1ab92ebe6_checkData(_self_, &((*(_self_))._field_l));
	_1ab92ebe6_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ab93019c_setModel(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _426629_d) {
	if (_1ab9074c6_IsConst((*(_426629_d)).ptr())) {
		if (((_1ab9074c6_IsConst((*(_self_))._field_l.ptr()) && _1ab9074c6_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ab906a8b_Data> _42777_l;
	jule::Ptr<_1ab906a8b_Data> _427714_r;
	({
		jule::Ptr<_1ab906a8b_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ab906a8b_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42777_l = ___jule_assign_arg;
		_427714_r = _1___jule_assign_arg;
	});
	if ((!(_1ab907817_GoodOperand(_42777_l, &(_427714_r))))) {
		std::swap(_42777_l, _427714_r);
	};
	(*((*(_426629_d))))._field_Model=jule::Any(jule::new_ptr<_1ab07c61e_BinaryExprModel>(_1ab07c61e_BinaryExprModel{._field_Left=jule::new_ptr<_1ab07c124_OperandExprModel>(_1ab07c124_OperandExprModel{._field_Type=(*_42777_l.alloc)._field_Type, ._field_Model=(*_42777_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1ab07c124_OperandExprModel>(_1ab07c124_OperandExprModel{._field_Type=(*_427714_r.alloc)._field_Type, ._field_Model=(*_427714_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1ab930455_postEval(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _429529_d) {
	(*((*(_429529_d))))._field_Lvalue=false;
	_1ab93019c_setModel(_self_, _429529_d);
}



inline jule::Ptr<_1ab906a8b_Data> _1ab930851_solveExplicit(_1ab929a48_binaryEval* _self_, jule::Ptr<_1ab906a8b_Data>* _430034_l, jule::Ptr<_1ab906a8b_Data>* _430049_r) {
	({
		jule::Ptr<_1ab906a8b_Data> ___jule_assign_arg = (*(_430034_l));
		jule::Ptr<_1ab906a8b_Data> _1___jule_assign_arg = (*(_430049_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ab92ede4_checkDatas(_self_);
	jule::Ptr<_1ab906a8b_Data> _43057_d = _1ab92e685_evalOp(_self_);;
	({
		jule::Ptr<_1ab906a8b_Data> ___jule_assign_arg = (*(_430034_l));
		jule::Ptr<_1ab906a8b_Data> _1___jule_assign_arg = (*(_430049_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ab92e93d_evalConst(_self_, &(_43057_d));
	if ((_43057_d != nullptr)) {
		(*_43057_d.alloc)._field_Mutable=true;
		_1ab930455_postEval(_self_, &(_43057_d));
	};
	return _43057_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab930b92_eval(_1ab929a48_binaryEval* _self_, jule::Ptr<_1a37891da_BinaryExpr>* _432025_op) {
	if (((*((*((*(_432025_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ab908d46_pushErr((*(_self_))._field_e.ptr(), (*((*(_432025_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1ab9091a9_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab906a8b_Data> _43277_l = _1ab9272d7_evalExpr1((*(_self_))._field_e, (*((*(_432025_op))))._field_Left);;
	if (((_43277_l == nullptr) || ((*(_43277_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ab939816_Type> _43327_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43277_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43327_prefix;
	});;
	jule::Ptr<_1ab906a8b_Data> _43357_r = _1ab9272d7_evalExpr1((*(_self_))._field_e, (*((*(_432025_op))))._field_Right);;
	if (((_43357_r == nullptr) || ((*(_43357_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_432025_op))))._field_Op;
	jule::Ptr<_1ab906a8b_Data> _43427_d = _1ab930851_solveExplicit(_self_, &(_43277_l), &(_43357_r));;
	if ((((_43427_d != nullptr) && (*(_43277_l))._field_IsRune) && (*(_43357_r))._field_IsRune)) {
		(*_43427_d.alloc)._field_IsRune=true;
	};
	return _43427_d;;
}
















inline jule::Bool _1ab939816_Type_eq(_1ab939816_Type *_self_, _1ab939816_Type _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1ab939c12_Str(_1ab939816_Type* _self_) {
	if (_1ab93a949_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1a387dcd5_Builder _567_kind = static__1a387e654_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1a387ecd6_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	if (_1ab93a6b3_Binded(_self_)) {
		({
			auto except = _1a387ecd6_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:63:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:64:4"));
			(except.result);
		});
	} else {
		({
			auto except = _1a387ecd6_WriteStr(&_567_kind, ((_1ab939360_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1ab938dba_Str((*(_self_))._field_Kind.data));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:66:4"));
			(except.result);
		});
	};
	return _1a3880666_Str(&_567_kind);;
}



inline jule::Bool _1ab93a053_Equal(jule::Ptr<_1ab939816_Type> _self_, jule::Ptr<_1ab939816_Type> _7218_other) {
	if (_1ab93a949_IsNil(_self_.ptr())) {
		return _1ab93a949_IsNil(_7218_other.ptr());;
	};
	if (_1ab93a6b3_Binded(_self_)) {
		return (_1ab93a6b3_Binded(_7218_other) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1ab939360_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1ab93920b_Equal((*_self_.alloc)._field_Kind.data, _7218_other);;
}



inline jule::Bool _1ab93a6b3_Binded(_1ab939816_Type* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ab93a949_IsNil(_1ab939816_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ab93abd0_Void(_1ab939816_Type* _self_) {
	jule::Ptr<_1ab94292e_Prim> _923_prim = _1ab93bebc_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ab93ae66_Comparable(_1ab939816_Type* _self_) {
	{
		_1ab939816_Type* _998__self = _self_;;
		if ((_1ab93d540_Struct(_998__self) != nullptr)) {
			return (*(_1ab93d540_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1ab93cc8c_Arr(_998__self) != nullptr)) {
			return _1ab93ae66_Comparable((*(_1ab93cc8c_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1ab93da5c_Map(_998__self) == nullptr) && (_1ab93d023_Slc(_998__self) == nullptr)) && (_1ab93d2a9_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1ab93b1ec_Mutable(_1ab939816_Type* _self_) {
	{
		_1ab939816_Type* _1138__self = _self_;;
		if ((_1ab93d540_Struct(_1138__self) != nullptr)) {
			return (*(_1ab93d540_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1ab93d7c6_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1ab93bebc_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1ab94292e_Prim> _1215_p = _1ab93bebc_Prim(_1138__self);;
			return _1ab946180_IsAny(_1215_p.ptr());;
		};
		if ((_1ab93cc8c_Arr(_1138__self) != nullptr)) {
			return _1ab93b1ec_Mutable((*(_1ab93cc8c_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1ab93d023_Slc(_1138__self) != nullptr) || (_1ab93c4d9_Ptr(_1138__self) != nullptr)) || (_1ab93c253_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1ab93b483_Ordered(_1ab939816_Type* _self_) {
	{
		_1ab939816_Type* _1368__self = _self_;;
		jule::Ptr<_1ab94292e_Prim> _1374_prim = _1ab93bebc_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1ab118853_IsNum((*_1374_prim.alloc)._field_Kind) || _1ab945de9_IsStr(_1374_prim));;
		};
		if ((_1ab93c4d9_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a37a53d2_StructIns> _1444_s = _1ab93d540_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ab0977b0_Enum> _1514_enm = _1ab93c770_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1ab118853_IsNum(_1ab939c12_Str((*((*_1514_enm.alloc)._field_TypeSym))._field_Type.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ab93b719_NilCompatible(_1ab939816_Type* _self_) {
	{
		_1ab939816_Type* _1628__self = _self_;;
		jule::Ptr<_1ab94292e_Prim> _1644_prim = _1ab93bebc_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1ab946180_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1ab93a949_IsNil(_1628__self) || (_1ab93d2a9_Fn(_1628__self) != nullptr)) || (_1ab93c253_Sptr(_1628__self) != nullptr)) || (_1ab93c4d9_Ptr(_1628__self) != nullptr)) || (_1ab93d7c6_Trait(_1628__self) != nullptr)) || (_1ab93d023_Slc(_1628__self) != nullptr)) || (_1ab93da5c_Map(_1628__self) != nullptr)) || (_1ab93ca06_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1ab93b9a0_GC(_1ab939816_Type* _self_) {
	{
		_1ab939816_Type* _1838__self = _self_;;
		jule::Ptr<_1ab94292e_Prim> _1844_prim = _1ab93bebc_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1ab946180_IsAny(_1844_prim) || _1ab945de9_IsStr(_1844_prim));;
		};
		return ((((_1ab93c253_Sptr(_1838__self) != nullptr) || (_1ab93d023_Slc(_1838__self) != nullptr)) || (_1ab93d7c6_Trait(_1838__self) != nullptr)) || (_1ab93ca06_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1ab93bc36_Variadicable(_1ab939816_Type* _self_) {
	{
		_1ab939816_Type* _1968__self = _self_;;
		return (_1ab93d023_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1ab94292e_Prim> _1ab93bebc_Prim(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)) {
			_case_begin_1b10aa911:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab94292e_Prim>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1b10beddc:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10bed76:;
	};
}



inline jule::Ptr<_1ab94645a_Sptr> _1ab93c253_Sptr(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)) {
			_case_begin_1b10c0a7a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab94645a_Sptr>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1b10c0ccd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10c0c67:;
	};
}



inline jule::Ptr<_1ab949c22_Ptr> _1ab93c4d9_Ptr(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data28)) {
			_case_begin_1b10c17d4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab949c22_Ptr>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1b10c1a37:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10c19c1:;
	};
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab93c770_Enum(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data3)) {
			_case_begin_1b10c253d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab0977b0_Enum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1b10c2791:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10c272a:;
	};
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab93ca06_TypeEnum(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data4)) {
			_case_begin_1b10c8104:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab098eba_TypeEnum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1b10c8357:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10c82e1:;
	};
}



inline jule::Ptr<_1ab94924e_Arr> _1ab93cc8c_Arr(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data27)) {
			_case_begin_1b10c8d5d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab94924e_Arr>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1b10c90b1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10c904a:;
	};
}



inline jule::Ptr<_1ab946e2d_Slc> _1ab93d023_Slc(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data24)) {
			_case_begin_1b10c9ab7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab946e2d_Slc>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1b10c9d1a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10c9ca4:;
	};
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab93d2a9_Fn(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)) {
			_case_begin_1b10ca821:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab08c9a3_FnIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1b10caa74:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10caa0d:;
	};
}



inline jule::Ptr<_1a37a53d2_StructIns> _1ab93d540_Struct(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)) {
			_case_begin_1b10cb57a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a37a53d2_StructIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1b10cb7cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10cb767:;
	};
}



inline jule::Ptr<_1ab095109_Trait> _1ab93d7c6_Trait(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data2)) {
			_case_begin_1b10cc2d4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab095109_Trait>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1b10cc537:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10cc4c1:;
	};
}



inline jule::Ptr<_1ab9485c2_Map> _1ab93da5c_Map(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data26)) {
			_case_begin_1b10cd03d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab9485c2_Map>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1b10cd291:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10cd22a:;
	};
}



inline jule::Ptr<_1ab947a22_Tuple> _1ab93dce3_Tup(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data25)) {
			_case_begin_1b10cdc97:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab947a22_Tuple>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1b10cdeea:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10cde84:;
	};
}



inline jule::Bool _1ab93e079_comptime(_1ab939816_Type* _self_) {
	return (((((((((((((((_1ab9405ec_comptimeTypeInfos(_self_) != nullptr) || (_1ab940883_comptimeTypeInfo(_self_) != nullptr)) || (_1ab93e310_comptimeStructFields(_self_) != nullptr)) || (_1ab93e596_comptimeStructField(_self_) != nullptr)) || (_1ab93e82c_comptimeEnumFields(_self_) != nullptr)) || (_1ab93eab3_comptimeEnumField(_self_) != nullptr)) || (_1ab940b19_comptimeStatics(_self_) != nullptr)) || (_1ab940da0_comptimeStatic(_self_) != nullptr)) || (_1ab93ed49_comptimeParams(_self_) != nullptr)) || (_1ab9400d0_comptimeParam(_self_) != nullptr)) || (_1ab941136_comptimeValue(_self_) != nullptr)) || (_1ab941b70_comptimeFiles(_self_) != nullptr)) || (_1ab9418d9_comptimeFile(_self_) != nullptr)) || (_1ab9413bc_comptimeDecl(_self_) != nullptr)) || (_1ab941653_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1ab11c0c6_comptimeStructFields> _1ab93e310_comptimeStructFields(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data7)) {
			_case_begin_1b10cebdd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab11c0c6_comptimeStructFields>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1b10d3cad:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d3c47:;
	};
}



inline jule::Ptr<_1ab11a833_comptimeStructField> _1ab93e596_comptimeStructField(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data6)) {
			_case_begin_1b10d440c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab11a833_comptimeStructField>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1b10d4660:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d45e9:;
	};
}



inline jule::Ptr<_1ab123088_comptimeEnumFields> _1ab93e82c_comptimeEnumFields(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data11)) {
			_case_begin_1b10d5166:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab123088_comptimeEnumFields>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1b10d53b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d5353:;
	};
}



inline jule::Ptr<_1ab121c79_comptimeEnumField> _1ab93eab3_comptimeEnumField(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data10)) {
			_case_begin_1b10d5dc0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab121c79_comptimeEnumField>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1b10d6123:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d60ac:;
	};
}



inline jule::Ptr<_1ab1268e9_comptimeParams> _1ab93ed49_comptimeParams(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data13)) {
			_case_begin_1b10d6b29:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1268e9_comptimeParams>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1b10d6d7c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d6d16:;
	};
}



inline jule::Ptr<_1ab124a90_comptimeParam> _1ab9400d0_comptimeParam(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data12)) {
			_case_begin_1b10d7883:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab124a90_comptimeParam>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1b10d7ad6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d7a70:;
	};
}



inline jule::Ptr<_1ab119cc7_comptimeRange> _1ab940366_comptimeRange(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)) {
			_case_begin_1b10d85dc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab119cc7_comptimeRange>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1b10d8840:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d87c9:;
	};
}



inline jule::Ptr<_1ab128258_comptimeTypeInfos> _1ab9405ec_comptimeTypeInfos(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data14)) {
			_case_begin_1b10d9346:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab128258_comptimeTypeInfos>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1b10d9599:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10d9533:;
	};
}



inline jule::Ptr<_1ab129bc7_comptimeTypeInfo> _1ab940883_comptimeTypeInfo(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data15)) {
			_case_begin_1b10da0a0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab129bc7_comptimeTypeInfo>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1b10da303:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10da28c:;
	};
}



inline jule::Ptr<_1ab12030a_comptimeStatics> _1ab940b19_comptimeStatics(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data9)) {
			_case_begin_1b10dad09:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab12030a_comptimeStatics>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1b10db05c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10daee6:;
	};
}



inline jule::Ptr<_1ab11da56_comptimeStatic> _1ab940da0_comptimeStatic(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data8)) {
			_case_begin_1b10dba63:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab11da56_comptimeStatic>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1b10dbcb6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10dbc50:;
	};
}



inline jule::Ptr<_1ab130ccc_comptimeValue> _1ab941136_comptimeValue(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data16)) {
			_case_begin_1b10dc7bc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab130ccc_comptimeValue>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1b10dca20:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10dc9a9:;
	};
}



inline jule::Ptr<_1ab1393bd_comptimeDecl> _1ab9413bc_comptimeDecl(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data20)) {
			_case_begin_1b10dd526:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1393bd_comptimeDecl>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1b10dd779:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10dd713:;
	};
}



inline jule::Ptr<_1ab1370d0_comptimeDecls> _1ab941653_comptimeDecls(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data19)) {
			_case_begin_1b10de280:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1370d0_comptimeDecls>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1b10de4d3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10de46c:;
	};
}



inline jule::Ptr<_1ab1354a7_comptimeFile> _1ab9418d9_comptimeFile(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data18)) {
			_case_begin_1b10deed9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1354a7_comptimeFile>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1b10e023c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10e01c6:;
	};
}



inline jule::Ptr<_1ab133a38_comptimeFiles> _1ab941b70_comptimeFiles(_1ab939816_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data17)) {
			_case_begin_1b10e0c43:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab133a38_comptimeFiles>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1b10e0e96:;
			{
				return nullptr;;
			}
		}
		_match_end_1b10e0e30:;
	};
}








inline jule::Bool _1ab942027_TypeSym_eq(_1ab942027_TypeSym *_self_, _1ab942027_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1ab9423ce_checked(_1ab942027_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1ab94292e_Prim_eq(_1ab94292e_Prim *_self_, _1ab94292e_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1ab942ca3_Str(_1ab94292e_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ab9430e4_Equal(jule::Ptr<_1ab94292e_Prim> _self_, jule::Ptr<_1ab939816_Type> _51418_other) {
	jule::Ptr<_1ab94292e_Prim> _5153_prim = _1ab93bebc_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1ab943589_IsConstraint(_1ab94292e_Prim* _self_) {
	return ((((!(_1ab945de9_IsStr(_self_))) && (!(_1ab946180_IsAny(_self_)))) && (!(_1ab945b63_IsBool(_self_)))) && (!(_1ab118853_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ab943820_IsI8(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1ab943aa6_IsI16(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1ab943d3c_IsI32(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1ab9440c3_IsI64(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1ab944359_IsU8(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1ab9445e0_IsU16(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1ab944876_IsU32(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1ab944b0c_IsU64(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1ab944d93_IsF32(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1ab945129_IsF64(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1ab9453b0_IsInt(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1ab945646_IsUint(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1ab9458cc_IsUintptr(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1ab945b63_IsBool(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1ab945de9_IsStr(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1ab946180_IsAny(_1ab94292e_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1ab94645a_Sptr_eq(_1ab94645a_Sptr *_self_, _1ab94645a_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ab946812_Str(_1ab94645a_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ab939c12_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab946b53_Equal(jule::Ptr<_1ab94645a_Sptr> _self_, jule::Ptr<_1ab939816_Type> _59118_other) {
	jule::Ptr<_1ab94645a_Sptr> _5923_sptr = _1ab93c253_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1ab93a053_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1ab946e2d_Slc_eq(_1ab946e2d_Slc *_self_, _1ab946e2d_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ab9473e5_Str(_1ab946e2d_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ab939c12_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab947736_Equal(jule::Ptr<_1ab946e2d_Slc> _self_, jule::Ptr<_1ab939816_Type> _61018_other) {
	jule::Ptr<_1ab946e2d_Slc> _6113_slc = _1ab93d023_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1ab93a053_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1ab947dc9_Str(_1ab947a22_Tuple* _self_) {
	_1a387dcd5_Builder _6277_s = static__1a387e654_New(16LL);;
	({
		auto except = _1a388008e_WriteByte(&_6277_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:628:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&_6277_s, _1ab939c12_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:629:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b1102271:;
		if (it != expr_end) {
			jule::Ptr<_1ab939816_Type> *_63010_t = it;
			{
				({
					auto except = _1a388008e_WriteByte(&_6277_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:631:4"));
				});
				({
					auto except = _1a387ecd6_WriteStr(&_6277_s, _1ab939c12_Str((*(_63010_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:632:4"));
					(except.result);
				});
			}
			_iter_next_1b1102271:;
			++it;
			goto _iter_begin_1b1102271;
		}
		_iter_end_1b1102271:;
	};
	({
		auto except = _1a388008e_WriteByte(&_6277_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:634:3"));
	});
	return _1a3880666_Str(&_6277_s);;
}



inline jule::Bool _1ab94821a_Equal(jule::Ptr<_1ab947a22_Tuple> _self_, jule::Ptr<_1ab939816_Type> _63918_other) {
	jule::Ptr<_1ab947a22_Tuple> _6403_tup = _1ab93dce3_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6477_i = 0LL;;
	for (; (_6477_i < (*_self_.alloc)._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1ab93a053_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1b110521e:;
	}
	_iter_end_1b110521e:;;
	return true;;
}








inline jule::Bool _1ab9485c2_Map_eq(_1ab9485c2_Map *_self_, _1ab9485c2_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1ab948979_Str(_1ab9485c2_Map* _self_) {
	_1a387dcd5_Builder _6677_s = static__1a387e654_New(16LL);;
	({
		auto except = _1a387ecd6_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:668:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_6677_s, _1ab939c12_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:669:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&_6677_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:670:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&_6677_s, _1ab939c12_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:671:3"));
		(except.result);
	});
	return _1a3880666_Str(&_6677_s);;
}



inline jule::Bool _1ab948cba_Equal(jule::Ptr<_1ab9485c2_Map> _self_, jule::Ptr<_1ab939816_Type> _67618_other) {
	jule::Ptr<_1ab9485c2_Map> _6773_m = _1ab93da5c_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1ab93a053_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1ab93a053_Equal((*_self_.alloc)._field_Val, (*(_6773_m))._field_Val));;
}








inline jule::Bool _1ab94924e_Arr_eq(_1ab94924e_Arr *_self_, _1ab94924e_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1ab949606_Str(_1ab94924e_Arr* _self_) {
	_1a387dcd5_Builder _6957_s = static__1a387e654_New(16LL);;
	({
		auto except = _1a388008e_WriteByte(&_6957_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:696:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&_6957_s, _1a941cc8b_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:697:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&_6957_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:698:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&_6957_s, _1ab939c12_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:699:3"));
		(except.result);
	});
	return _1a3880666_Str(&_6957_s);;
}



inline jule::Bool _1ab949947_Equal(jule::Ptr<_1ab94924e_Arr> _self_, jule::Ptr<_1ab939816_Type> _70418_other) {
	jule::Ptr<_1ab94924e_Arr> _7053_arr = _1ab93cc8c_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1ab93a053_Equal((*_self_.alloc)._field_Elem, (*(_7053_arr))._field_Elem));;
}








inline jule::Bool _1ab949c22_Ptr_eq(_1ab949c22_Ptr *_self_, _1ab949c22_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ab94a0c9_Str(_1ab949c22_Ptr* _self_) {
	if (_1ab94a78e_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ab939c12_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab94a41a_Equal(jule::Ptr<_1ab949c22_Ptr> _self_, jule::Ptr<_1ab939816_Type> _72818_other) {
	jule::Ptr<_1ab949c22_Ptr> _7293_ptr = _1ab93c4d9_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1b1111318:;
			{
				return false;;
			}
		}
		else if (_1ab94a78e_IsUnsafe(_self_.ptr())) {
			_case_begin_1b1110bb9:;
			{
				return _1ab94a78e_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1ab94a78e_IsUnsafe(_7293_ptr.ptr())) {
			_case_begin_1b1110c30:;
			{
				return _1ab94a78e_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1b1110746:;
			{
				return _1ab93a053_Equal((*(_self_))._field_Elem, (*(_7293_ptr))._field_Elem);;
			}
		}
		_match_end_1b11106be:;
	};
}



inline jule::Bool _1ab94a78e_IsUnsafe(_1ab949c22_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1ab94ac23_referencer_eq(_1ab94ac23_referencer *_self_, _1ab94ac23_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1ab94c494_pushErr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6a54d8_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1ab886477_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1ab94c692_allowBuiltin(_1ab94bc13_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ab94c890_disallowBuiltin(_1ab94bc13_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b1115c24_pushReference(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a53d2_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b0c74168_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1ab855358_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type64));
}

inline void _1b11186e9_pushReference(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab095109_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b111a3ee_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1ab855358_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1ab94ce01_pushReferenceByKind(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab939816_Type>* _84240_k) {
	{
		
		if ((_1ab93d540_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1b1114838:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _8458_t = _1ab93d540_Struct((*(_84240_k)).ptr());;
				_1b1115c24_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1ab93d7c6_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1b11148d2:;
			{
				jule::Ptr<_1ab095109_Trait> _8488_t = _1ab93d7c6_Trait((*(_84240_k)).ptr());;
				_1b11186e9_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1b1114717:;
	};
}



inline void _1ab94d31e_pushCycleError(_1ab94bc13_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1a387dcd5_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1b111c7b9, nullptr, nullptr);;
	jule::Str _8653_m = _1a3880666_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1a387ecd6_WriteStr(_85353_message, _1a87a8754_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:869:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_85353_message, _8683_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:870:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_85353_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:871:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_85353_message, _8653_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:872:3"));
		(except.result);
	});
}



inline jule::Bool _1ab94d71a_checkCrossCycle(_1ab94bc13_typeChecker* _self_, jule::Any _87527_decl, _1a387dcd5_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b1121c30:;
			{
				jule::Ptr<_1ab938a24_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1ab938a24_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1122bed:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b1123506:;
									{
										_1ab94d31e_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1ab94d71a_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1b112358e:;
									{
										_1ab94d31e_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1b11233e6:;
							};
						}
						_iter_next_1b1122bed:;
						++it;
						goto _iter_begin_1b1122bed;
					}
					_iter_end_1b1122bed:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b1121a87:;
			{
				jule::Ptr<_1a37a2577_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1a37a2577_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1125085:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b112589e:;
									{
										_1ab94d31e_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1ab94d71a_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1b1125937:;
									{
										_1ab94d31e_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1b112578e:;
							};
						}
						_iter_next_1b1125085:;
						++it;
						goto _iter_begin_1b1125085;
					}
					_iter_end_1b1125085:;
				};
			}
		}
		_match_end_1b1121bb9:;
	};
	return true;;
}



inline jule::Bool _1ab94db16_checkIllegalCycles(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b1127bd1:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1a37a2577_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b1127ae3:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1ab938a24_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b1125470:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ab94c494_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a387dcd5_Builder _9327_message = static__1a387e654_New(32LL);;
	if ((!(_1ab94d71a_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _1a3880666_Str(&_9327_message);;
		_1a3880864_Clear(&_9327_message);
		_1ab94d31e_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_1a3880666_Str(&_9327_message);
		_1ab94c494_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b112ca1b:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90967_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b112b1ac:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1b112d2d0:;
						{
							jule::Ptr<_1a37a2577_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a37a2577_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a2577_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1a37a2577_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1b112d137:;
				};
			}
		}
		_match_end_1b112c983:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1ab94e012_fromTypeAlias(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _95930_decl, jule::Ptr<_1ab938a24_TypeAlias>* _95962_ta) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1ab94c494_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1ab94c494_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1133956:;
			if (it != expr_end) {
				jule::Ptr<_1ab938a24_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type != nullptr) && _1ab93a053_Equal((*((*((*(_95962_ta))))._field_TypeSym))._field_Type, (*(*(_97611_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b1133956;
					};
				}
				_iter_next_1b1133956:;
				++it;
				goto _iter_begin_1b1133956;
			}
			_iter_end_1b1133956:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1135c66:;
			if (it != expr_end) {
				jule::Ptr<_1ab938a24_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1ab94c494_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b113666d:;
						if (it != expr_end) {
							jule::Ptr<_1ab938a24_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1ab94c494_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1b113666d:;
							++it;
							goto _iter_begin_1b113666d;
						}
						_iter_end_1b113666d:;
					};
				}
				_iter_next_1b1135c66:;
				++it;
				goto _iter_begin_1b1135c66;
			}
			_iter_end_1b1135c66:;
		};
	};
	if (((*(*((*(_95962_ta))))._field_TypeSym.alloc)._field_Type == nullptr)) {
		jule::Bool _10034_ok = _1ab8935e9_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)) {
			_case_begin_1b1139c6a:;
			{
				jule::Bool _10114_ok = _1ab94db16_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind.cast_ptr<_1a37a53d2_StructIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1b1139be3:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1ab939816_Type> _10237_tk = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind});;
	_1ab94ce01_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data21);;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab94e40d_fromEnum(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _103625_decl, jule::Ptr<_1ab0977b0_Enum>* _103657_e) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1ab94c494_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1ab94c494_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab94e809_fromTypeEnum(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _104829_decl, jule::Ptr<_1ab098eba_TypeEnum>* _104861_e) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1ab94c494_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1ab94c494_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1ab095109_Trait> _1ab94ec05_fromTrait(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _106026_decl, jule::Ptr<_1ab095109_Trait>* _106058_t) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1ab94c494_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1ab94c494_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1b11186e9_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1ab950101_checkStructIns(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a53d2_StructIns>* _107335_ins, jule::Ptr<_1ab6a54d8_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ab8a00d9_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1ab8a0b01_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1ab8a0392_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab9503a9_appendUsedStructReference(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a2577_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b114c7c7:;
			{
				jule::Ptr<_1a37a2577_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a37a2577_Struct>();;
				if ((!(_1a37a403a_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a2577_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1b114c761:;
	};
}



inline jule::Ptr<_1a37a53d2_StructIns> _1ab9507a5_buildStructInstance(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _110740_decl, jule::Ptr<_1a37a2577_Struct>* _110772_s) {
	jule::Ptr<_1ab94ac23_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
				_case_begin_1b115080d:;
				{
					jule::Ptr<_1ab83ce67_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1);;
					jule::Ptr<_1ab83ce67_scopeChecker> _11199_hard = _1ab8415ca_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1b1150797;
					};
					jule::I64 _11235_n = ((*(*(_11199_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1b1150797:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a37a53d2_StructIns> _11377_ins = _1a37a2a1c_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab937e30_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1155add:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c0877_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1ab939816_Type> _11408_kind = _1ab9544ac_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1b1155add:;
			++it;
			goto _iter_begin_1b1155add;
		}
		_iter_end_1b1155add:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1a37a53d2_StructIns> _1ab950ba1_fromStructIns(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a37a53d2_StructIns>* _115534_ins, jule::Ptr<_1ab6a54d8_Token> _115555_token) {
	jule::Ptr<_1a37a53d2_StructIns> _11567_existInstance = _1a37a2d2a_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1ab8913e9_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1b1115c24_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1ab950101_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1b1115c24_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1a37a53d2_StructIns> _1ab95109c_fromStruct(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _117331_decl, jule::Ptr<_1a37a2577_Struct>* _117363_s) {
	if ((!(_1ab886bd6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1ab94c494_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1ab94c494_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a37a53d2_StructIns>(_1a37a53d2_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1a37a4832_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ab0898e5_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Operators=_1a37a1664_Operators{._field_Eq=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Add=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Div=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1ab08c9a3_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1ab94db16_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1ab9503a9_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1a37a53d2_StructIns> _11977_ins = _1ab9507a5_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1ab8879a6_checkGenericQuantity((*(_self_))._field_s, (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*(_11977_ins))._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1ab950ba1_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1ab9513dd_getDef(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b116108d:;
		if (it != expr_end) {
			jule::Ptr<_1a378dcc2_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1ab956ca6_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22);;
				};
			}
			_iter_next_1b116108d:;
			++it;
			goto _iter_begin_1b116108d;
		}
		_iter_end_1b116108d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1161401:;
		if (it != expr_end) {
			jule::Ptr<_1ab938a24_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1ab94c494_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1a37a53d2_StructIns> _12309_st = _1ab93d540_Struct((*((*_122415_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1ab94db16_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1b1161401:;
			++it;
			goto _iter_begin_1b1161401;
		}
		_iter_end_1b1161401:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1ab0977b0_Enum> _12428_e = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab959759_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1ab94e40d_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data3);;
		};
		jule::Ptr<_1ab098eba_TypeEnum> _12478_te = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab959a9a_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1ab94e809_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data4);;
		};
		jule::Ptr<_1ab095109_Trait> _12528_t = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab959418_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1ab94ec05_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ab94c494_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a37a2577_Struct> _12617_s = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab958bcb_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1ab95109c_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0);;
	};
	jule::Ptr<_1ab938a24_TypeAlias> _12667_ta = ((_1ab959bee_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ab9587d0_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1ab9b6101_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1ab94e012_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1ab94c494_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1ab95172e_buildIdent(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0e82_IdentTypeDecl> _127830_decl) {
	return _1ab9513dd_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1ab951a70_buildSubIdent(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c124b_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1ab95172e_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data4)) {
			_case_begin_1b116e376:;
			{
				goto _match_end_1b116e8d7;
			}
		}
		else {
			_case_begin_1b116e453:;
			{
				_1ab94c494_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b116e8d7:;
	};
	jule::Ptr<_1ab098eba_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1ab098eba_TypeEnum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b117061e:;
		if (it != expr_end) {
			jule::I64 _12967_i = it - expr->begin();
			jule::Ptr<_1ab6c0e82_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1ab0988e3_TypeEnumItem> _12978_item = _1ab099aae_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1ab94c494_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1ab94ce01_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_12978_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data21);;
				};
				_12947_t=_1ab93ca06_TypeEnum((*(*(_12978_item))._field_TypeSym.alloc)._field_Type.ptr());
				if ((_12947_t == nullptr)) {
					_1ab94c494_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b117061e:;
			++it;
			_12967_i++;
			goto _iter_begin_1b117061e;
		}
		_iter_end_1b117061e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab94645a_Sptr> _1ab951db1_buildSptrFromType(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab939816_Type>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1b1175adb:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab93d540_Struct((*(_131638_elem)).ptr()) != nullptr)) {
			_case_begin_1b1175b85:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _13224_s = _1ab93d540_Struct((*(_131638_elem)).ptr());;
				if ((((*(_13224_s))._field_Decl != nullptr) && (*(*(_13224_s))._field_Decl.alloc)._field_Binded)) {
					_1ab94c494_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ab93cc8c_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1ab93cc8c_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1b1175beb:;
			{
				_1ab94c494_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1175129:;
	};
	return jule::new_ptr<_1ab94645a_Sptr>(_1ab94645a_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1ab94645a_Sptr> _1ab952202_buildSptr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c1922_SptrTypeDecl> _133629_decl) {
	jule::Bool _13373_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13373_cycleRisk;
	});;
	jule::Ptr<_1ab939816_Type> _13417_elem = _1ab9547ed_checkDecl(_self_, &((*(_133629_decl))._field_Elem));;
	return _1ab951db1_buildSptrFromType(_self_, &(_13417_elem));;
}



inline jule::Ptr<_1ab949c22_Ptr> _1ab952543_buildPtrFromType(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab939816_Type>* _134537_elem) {
	{
		
		if (((*(_134537_elem)) == nullptr)) {
			_case_begin_1b117ae98:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab93cc8c_Arr((*(_134537_elem)).ptr()) != nullptr) && (*(_1ab93cc8c_Arr((*(_134537_elem)).ptr())))._field_Auto)) {
			_case_begin_1b117b042:;
			{
				_1ab94c494_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ab949c22_Ptr>(_1ab949c22_Ptr{._field_Elem=jule::Ptr<_1ab939816_Type>(nullptr)});;
			}
		}
		_match_end_1b117ad77:;
	};
	return jule::new_ptr<_1ab949c22_Ptr>(_1ab949c22_Ptr{._field_Elem=(*(_134537_elem))});;
}



inline jule::Ptr<_1ab949c22_Ptr> _1ab952884_buildPtr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c23a1_PtrTypeDecl> _136028_decl) {
	jule::Bool _13613_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13613_cycleRisk;
	});;
	jule::Ptr<_1ab939816_Type> _13657_elem = static_cast<jule::Ptr<_1ab939816_Type>>(nullptr);;
	if ((!(_1ab6c2747_IsUnsafe(_136028_decl.ptr())))) {
		_13657_elem=_1ab9547ed_checkDecl(_self_, &((*_136028_decl.alloc)._field_Elem));
		return _1ab952543_buildPtrFromType(_self_, &(_13657_elem));;
	};
	return jule::new_ptr<_1ab949c22_Ptr>(_1ab949c22_Ptr{._field_Elem=_13657_elem});;
}



inline jule::Ptr<_1ab946e2d_Slc> _1ab952bc5_buildSlc(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c1ca7_SlcTypeDecl> _137728_decl) {
	jule::Bool _13783_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13783_cycleRisk;
	});;
	jule::Ptr<_1ab939816_Type> _13827_elem = _1ab9547ed_checkDecl(_self_, &((*(_137728_decl))._field_Elem));;
	{
		
		if ((_13827_elem == nullptr)) {
			_case_begin_1b1181344:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab93cc8c_Arr(_13827_elem.ptr()) != nullptr) && (*(_1ab93cc8c_Arr(_13827_elem)))._field_Auto)) {
			_case_begin_1b11813aa:;
			{
				_1ab94c494_pushErr(_self_, (*((*_137728_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b11812cd:;
	};
	return jule::new_ptr<_1ab946e2d_Slc>(_1ab946e2d_Slc{._field_Elem=_13827_elem});;
}



inline jule::Ptr<_1ab94924e_Arr> _1ab953016_buildArr(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c2b43_ArrTypeDecl> _139828_decl) {
	jule::I64 _13997_n = 0LL;;
	if ((!(_1ab6c2ed9_AutoSized(_139828_decl.ptr())))) {
		jule::Ptr<_1ab906a8b_Data> _14028_size = _1ab927628_evalExpr(_1ab88d34c_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139828_decl.alloc)._field_Size);;
		if ((_14028_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ab9074c6_IsConst(_14028_size.ptr())))) {
			_1ab94c494_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ab93bebc_Prim((*(_14028_size))._field_Type.ptr()) == nullptr) || (!(_1ab11827b_IsInt((*(_1ab93bebc_Prim((*(_14028_size))._field_Type)))._field_Kind))))) {
			_1ab94c494_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13997_n=static_cast<jule::I64>(_1ab0733e5_AsI64((*(_14028_size))._field_Constant.ptr()));
		if ((_13997_n < 0LL)) {
			_1ab94c494_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14205_max = _1ab1161e1_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1ab10e1ea_BitSize != 64LL) && (static_cast<jule::I64>(_13997_n) > _14205_max))) {
				_1ab94c494_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab9356ad_constoa(&((*(_14028_size))._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1a941c9c2_FmtInt(_14205_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ab939816_Type> _14297_elem = _1ab9547ed_checkDecl(_self_, &((*_139828_decl.alloc)._field_Elem));;
	{
		
		if ((_14297_elem == nullptr)) {
			_case_begin_1b118b5c4:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab93cc8c_Arr(_14297_elem.ptr()) != nullptr) && (*(_1ab93cc8c_Arr(_14297_elem)))._field_Auto)) {
			_case_begin_1b118b66d:;
			{
				_1ab94c494_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b118b54c:;
	};
	return jule::new_ptr<_1ab94924e_Arr>(_1ab94924e_Arr{._field_Auto=_1ab6c2ed9_AutoSized(_139828_decl), ._field_N=_13997_n, ._field_Elem=_14297_elem});;
}



inline jule::Ptr<_1ab9485c2_Map> _1ab953357_buildMap(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c3391_MapTypeDecl> _144728_decl) {
	jule::Bool _14483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14483_cycleRisk;
	});;
	jule::Ptr<_1ab939816_Type> _14527_key = _1ab9547ed_checkDecl(_self_, &((*(_144728_decl))._field_Key));;
	if ((_14527_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab939816_Type> _14577_val = _1ab9547ed_checkDecl(_self_, &((*_144728_decl.alloc)._field_Val));;
	if ((_14577_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ab93c770_Enum(_14577_val.ptr()) != nullptr)) {
		_1ab94c494_pushErr(_self_, (*((*_144728_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1a37a2577_Struct> _14668_s = _1aa776b93_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1ab9503a9_appendUsedStructReference(_self_, &(_14668_s));
		jule::Ptr<_1a37a53d2_StructIns> _14688_ins = _1a37a2a1c_instance(_14668_s);;
		(*(_14688_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=_14527_key, ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=_14577_val, ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); __jule_collection; });
		_1ab950ba1_fromStructIns(_self_, &(_14688_ins), (*((*_144728_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1ab9485c2_Map>(_1ab9485c2_Map{._field_Key=_14527_key, ._field_Val=_14577_val});;
}



inline jule::Ptr<_1ab947a22_Tuple> _1ab953698_buildTuple(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c20a4_TupleTypeDecl> _147930_decl) {
	jule::Slice<jule::Ptr<_1ab939816_Type>> _14807_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(0LL, (*(_147930_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab939816_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147930_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1195875:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c0877_TypeDecl> _148115_t = *it;
			{
				jule::Ptr<_1ab939816_Type> _14828_kind = _1ab9547ed_checkDecl(_self_, &(_148115_t));;
				if ((_14828_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ab939816_Type>> &__jule_push_dest = _14807_types; __jule_push_dest.push(_14828_kind); };
			}
			_iter_next_1b1195875:;
			++it;
			goto _iter_begin_1b1195875;
		}
		_iter_end_1b1195875:;
	};
	return jule::new_ptr<_1ab947a22_Tuple>(_1ab947a22_Tuple{._field_Types=_14807_types});;
}



inline jule::Bool _1ab9539d9_checkFuncTypes(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab08c9a3_FnIns>* _149235_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149235_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11973b0:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> _149315_p = *it;
			{
				(*(_149315_p))._field_Type=_1ab9544ac_build(_self_, &((*((*((*((*_149315_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_149315_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ab891e99_checkFnParamKind((*(_self_))._field_s, &(_149315_p));
			}
			_iter_next_1b11973b0:;
			++it;
			goto _iter_begin_1b11973b0;
		}
		_iter_end_1b11973b0:;
	};
	if ((!(_1ab089d9b_IsVoid((*((*(_149235_f))))._field_Decl.ptr())))) {
		(*((*(_149235_f))))._field_Result=_1ab9544ac_build(_self_, &((*(*((*((*((*((*(_149235_f))))._field_Decl))._field_Result))._field_TypeSym))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149235_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab953d2a_buildFunc(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1a3793854_FnDecl> _151029_decl) {
	jule::Bool _15113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15113_cycleRisk;
	});;
	if (((*(_151029_decl))._field_Generics.len() > 0LL)) {
		_1ab94c494_pushErr(_self_, (*_151029_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0898e5_Fn> _15207_f = _1ab8579cb_buildFunc(_151029_decl);;
	jule::I64 _15223_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ab89b28e_checkAnonFuncDecl((*(_self_))._field_s, &(_15207_f));
	if ((_15223_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _15287_ins = _1ab08ae02_instanceForce(_15207_f);;
	(*(_15287_ins))._field_Anon=true;
	(*_15287_ins.alloc)._field_AsAnon=true;
	jule::Bool _15323_ok = _1ab9539d9_checkFuncTypes(_self_, &(_15287_ins));;
	if ((!(_15323_ok))) {
		return nullptr;;
	};
	return _15287_ins;;
}



inline jule::Trait _1ab95416b_buildNamespace(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c1625_NamespaceTypeDecl> _154034_ns) {
	jule::Ptr<_1ab866578_ImportInfo> _15417_imp = _1ab93723c_findNamespace((*(_self_))._field_lookup, (*((*(_154034_ns))._field_Namespace))._field_Kind);;
	if (((_15417_imp == nullptr) || (!(_1ab868a20_isLookupable(_15417_imp.ptr()))))) {
		_1ab94c494_pushErr(_self_, (*_154034_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_154034_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1ab94c890_disallowBuiltin(_self_);
	jule::Trait _15487_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15417_imp, (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data2);
	jule::Ptr<_1ab939816_Type> _15507_kind = _1ab9547ed_checkDecl(_self_, &((*_154034_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15487_lookup;
	_1ab94c692_allowBuiltin(_self_);
	return jule::Trait(_15507_kind, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data21);;
}



inline jule::Ptr<_1ab939816_Type> _1ab9544ac_build(_1ab94bc13_typeChecker* _self_, jule::Any* _155626_declKind) {
	jule::Trait _155711_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155626_declKind)) };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b11a5742:;
			{
				jule::Trait _15608_t = _1ab95172e_buildIdent(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c0e82_IdentTypeDecl>(&__jule_any_type77));;
				if ((_15608_t != nullptr)) {
					_155711_kind=_15608_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b11a4ba3:;
			{
				jule::Trait _15658_t = _1ab951a70_buildSubIdent(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c124b_SubIdentTypeDecl>(&__jule_any_type89));;
				if ((_15658_t != nullptr)) {
					_155711_kind=_15658_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b11a4c19:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab94645a_Sptr> _15718_t = _1ab952202_buildSptr(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c1922_SptrTypeDecl>(&__jule_any_type74));;
				if ((_15718_t != nullptr)) {
					_155711_kind=jule::Trait(_15718_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b11a4c80:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab949c22_Ptr> _15778_t = _1ab952884_buildPtr(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c23a1_PtrTypeDecl>(&__jule_any_type73));;
				if ((_15778_t != nullptr)) {
					_155711_kind=jule::Trait(_15778_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b11a4ce6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab946e2d_Slc> _15838_t = _1ab952bc5_buildSlc(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c1ca7_SlcTypeDecl>(&__jule_any_type72));;
				if ((_15838_t != nullptr)) {
					_155711_kind=jule::Trait(_15838_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b11a4d5c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab94924e_Arr> _15898_t = _1ab953016_buildArr(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c2b43_ArrTypeDecl>(&__jule_any_type71));;
				if ((_15898_t != nullptr)) {
					_155711_kind=jule::Trait(_15898_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b11a4dc3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab9485c2_Map> _15958_t = _1ab953357_buildMap(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c3391_MapTypeDecl>(&__jule_any_type75));;
				if ((_15958_t != nullptr)) {
					_155711_kind=jule::Trait(_15958_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b11a5852:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab947a22_Tuple> _16018_t = _1ab953698_buildTuple(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c20a4_TupleTypeDecl>(&__jule_any_type76));;
				if ((_16018_t != nullptr)) {
					_155711_kind=jule::Trait(_16018_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b11a58b8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab08c9a3_FnIns> _16078_t = _1ab953d2a_buildFunc(_self_, (*(_155626_declKind)).cast_ptr<_1a3793854_FnDecl>(&__jule_any_type67));;
				if ((_16078_t != nullptr)) {
					_155711_kind=jule::Trait(_16078_t, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b11a592e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16138_t = _1ab95416b_buildNamespace(_self_, (*(_155626_declKind)).cast_ptr<_1ab6c1625_NamespaceTypeDecl>(&__jule_any_type93));;
				if ((_16138_t != nullptr)) {
					_155711_kind=_16138_t;
				};
			}
		}
		else {
			_case_begin_1b11a4b3c:;
			{
				_1ab94c494_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b11a4ac6:;
	};
	if ((_155711_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155711_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data21)) {
			_case_begin_1b11b3c4a:;
			{
				return _155711_kind.cast_ptr<_1ab939816_Type>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1b11b11cb:;
			{
				jule::Ptr<_1ab939816_Type> _16288_tk = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_155711_kind});;
				{
					auto &_match_expr{ _155711_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)) {
						_case_begin_1b11b2100:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ab939816_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16288_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)) {
						_case_begin_1b11b1e79:;
						{
							jule::Ptr<_1a37a53d2_StructIns> _16355_s = _155711_kind.cast_ptr<_1a37a53d2_StructIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data0);;
							if ((((*(_16355_s))._field_Decl != nullptr) && (*(*(_16355_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16288_tk))._field_BindIdent=(*(*(_16355_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1b11b2089:;
				};
				return _16288_tk;;
			}
		}
		_match_end_1b11b06a3:;
	};
}



inline jule::Ptr<_1ab939816_Type> _1ab9547ed_checkDecl(_1ab94bc13_typeChecker* _self_, jule::Ptr<_1ab6c0877_TypeDecl>* _164430_decl) {
	jule::Ptr<_1ab6a54d8_Token> _16467_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_164430_decl))))._field_Token;
	jule::Ptr<_1ab939816_Type> _16497_kind = _1ab9544ac_build(_self_, &((*((*(_164430_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16467_errorToken;
	return _16497_kind;;
}








inline jule::Bool _1ab954cc6_identTypeLookup_eq(_1ab954cc6_identTypeLookup *_self_, _1ab954cc6_identTypeLookup _other_) { return true; }

inline jule::Bool static__1ab955249_prim(jule::Str* _167118_ident, jule::Ptr<_1ab94292e_Prim> _167130_t) {
	return ((*(_167130_t))._field_Kind == (*(_167118_ident)));;
}



inline jule::Bool static__1ab9555bd_exist(jule::Str* _167519_ident, jule::Ptr<_1ab939816_Type>* _167536_k) {
	{
		
		if ((_1ab93bebc_Prim((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8a96:;
			{
				return static__1ab955249_prim(_167519_ident, _1ab93bebc_Prim((*(_167536_k)).ptr()));;
			}
		}
		else if ((_1ab93c253_Sptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8b1d:;
			{
				jule::Ptr<_1ab94645a_Sptr> _16808_sptr = _1ab93c253_Sptr((*(_167536_k)).ptr());;
				return static__1ab9555bd_exist(_167519_ident, &((*(_16808_sptr))._field_Elem));;
			}
		}
		else if ((_1ab93c4d9_Ptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8b95:;
			{
				jule::Ptr<_1ab949c22_Ptr> _16838_ptr = _1ab93c4d9_Ptr((*(_167536_k)).ptr());;
				return static__1ab9555bd_exist(_167519_ident, &((*(_16838_ptr))._field_Elem));;
			}
		}
		else if ((_1ab93d023_Slc((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8c1c:;
			{
				jule::Ptr<_1ab946e2d_Slc> _16868_slc = _1ab93d023_Slc((*(_167536_k)).ptr());;
				return static__1ab9555bd_exist(_167519_ident, &((*(_16868_slc))._field_Elem));;
			}
		}
		else if ((_1ab93cc8c_Arr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8de8:;
			{
				jule::Ptr<_1ab94924e_Arr> _16898_arr = _1ab93cc8c_Arr((*(_167536_k)).ptr());;
				return static__1ab9555bd_exist(_167519_ident, &((*(_16898_arr))._field_Elem));;
			}
		}
		else if ((_1ab93da5c_Map((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8e5e:;
			{
				jule::Ptr<_1ab9485c2_Map> _16928_m = _1ab93da5c_Map((*(_167536_k)).ptr());;
				return (static__1ab9555bd_exist(_167519_ident, &((*(_16928_m))._field_Key)) || static__1ab9555bd_exist(_167519_ident, &((*_16928_m.alloc)._field_Val)));;
			}
		}
		else if ((_1ab93d540_Struct((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b8ec5:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _16968_s = _1ab93d540_Struct((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_16968_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b11c1120:;
					if (it != expr_end) {
						jule::Ptr<_1ab937e30_InsGeneric> _169716_g = *it;
						{
							if (static__1ab9555bd_exist(_167519_ident, &((*(_169716_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1b11c1120:;
						++it;
						goto _iter_begin_1b11c1120;
					}
					_iter_end_1b11c1120:;
				};
				return false;;
			}
		}
		else if ((_1ab93d2a9_Fn((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b903b:;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _17048_f = _1ab93d2a9_Fn((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17048_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b11c2b49:;
					if (it != expr_end) {
						jule::Ptr<_1ab08b84d_ParamIns> _170516_p = *it;
						{
							if (_1ab088570_IsSelf((*(_170516_p))._field_Decl.ptr())) {
								goto _iter_next_1b11c2b49;
							};
							if (static__1ab9555bd_exist(_167519_ident, &((*_170516_p.alloc)._field_Type))) {
								return true;;
							};
						}
						_iter_next_1b11c2b49:;
						++it;
						goto _iter_begin_1b11c2b49;
					}
					_iter_end_1b11c2b49:;
				};
				if (((*_17048_f.alloc)._field_Result != nullptr)) {
					return static__1ab9555bd_exist(_167519_ident, &((*_17048_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ab93dce3_Tup((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1b11b90b3:;
			{
				jule::Ptr<_1ab947a22_Tuple> _17188_tup = _1ab93dce3_Tup((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17188_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b11c54ba:;
					if (it != expr_end) {
						jule::Ptr<_1ab939816_Type> _171916_t = *it;
						{
							if (static__1ab9555bd_exist(_167519_ident, &(_171916_t))) {
								return true;;
							};
						}
						_iter_next_1b11c54ba:;
						++it;
						goto _iter_begin_1b11c54ba;
					}
					_iter_end_1b11c54ba:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b11b8975:;
			{
				return false;;
			}
		}
		_match_end_1b11b8865:;
	};
}















inline void _1ab3a04e1_stop(_1ab39ed3c_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ab3a0777_stopped(_1ab39ed3c_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ab3a0a0d_finished(_1ab39ed3c_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ab3a0c94_isLastSt(_1ab39ed3c_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ab3a1107_pushErr(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab6a54d8_Token> _15423_token, jule::Str _15445_fmt) {
	_1ab3bda2b_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1ab3a146a_pushSuggestion(_1ab39ed3c_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1ab3bdd8e_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1ab3a1723_insertAsNext(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ab39e49b_stmt>(_1ab39e49b_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1ab39e49b_stmt> _1ab3a19a9_next(_1ab39ed3c_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3a1da5_buildScope(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _17331_tokens, jule::Ptr<_1ab6a54d8_Token> _17360_end) {
	jule::Ptr<_1a3791bb5_ScopeTree> _1747_s = _1ab39d225_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1ab39ed3c_scopeParser _1777_ssp = _1ab39ed3c_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ab39e49b_stmt>>(nullptr), ._field_pos=0};;
	_1ab3abc28_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3a21e6_buildVarSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _18431_tokens) {
	jule::Ptr<_1a3794a0e_VarDecl> _1857_v = _1ab3c17ed_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1a3794dd8_RetSt> _1ab3a2537_buildRetSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _19230_tokens) {
	jule::Ptr<_1a3794dd8_RetSt> _1937_st = jule::new_ptr<_1a3794dd8_RetSt>(_1a3794dd8_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1a3795658_Iter> _1ab3a2878_buildWhileNextIter(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _20339_s) {
	jule::Ptr<_1a3795658_Iter> _2047_it = jule::new_ptr<_1a3795658_Iter>(_1a3795658_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a3795e83_WhileKind> _2087_kind = jule::new_ptr<_1a3795e83_WhileKind>(_1a3795e83_WhileKind{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1ab3a0c94_isLastSt(_self_)) {
		_1ab3a1107_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1ab3a19a9_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2207_stTokens = _1ab3b8471_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1ab39e49b_stmt> _2228_stmt = jule::new_ptr<_1ab39e49b_stmt>(_1ab39e49b_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1ab3ab8b5_buildSt(_self_, &(_2228_stmt));
	};
	jule::I64 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2317_blockTokens = _1ab3bb6e9_range(&(_2307_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1ab3a04e1_stop(_self_);
		_1ab3a1107_pushErr(_self_, (*_2047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1ab3a1107_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2047_it.alloc)._field_Scope=_1ab3a1da5_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type33);
	return _2047_it;;
}



inline jule::Ptr<_1a3795e83_WhileKind> _1ab3a2bb9_buildWhileIterKind(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _24839_tokens) {
	return jule::new_ptr<_1a3795e83_WhileKind>(_1a3795e83_WhileKind{._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3a300a_getRangeKindKeysTokens(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _2557_vars;
	jule::Slice<_1a388d1ac_Log> _25513_errs;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(_25443_toks, static_cast<jule::U64>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3a334b_buildRangeKindKey(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a3794a0e_VarDecl> _2647_key = jule::new_ptr<_1a3794a0e_VarDecl>(_1a3794a0e_VarDecl{._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1ab3a1107_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1ab3a1107_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3a1107_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2647_key.alloc)._field_Ident=(*(*(_2647_key))._field_Token.alloc)._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _1ab3a368c_buildRangeKindKeys(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b13a7966:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1ab3a334b_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1b13a7966:;
			++it;
			goto _iter_begin_1b13a7966;
		}
		_iter_end_1b13a7966:;
	};
	return _28711_keys;;
}



inline void _1ab3a3a00_setupRangeKindKeysPlain(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1a379688a_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _2957_keyTokens = _1ab3a300a_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1ab3a1107_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _3027_keys = _1ab3a368c_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1ab3a3d63_setupRangeKindKeysExplicit(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1a379688a_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _30974_tokens) {
	jule::I64 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3117_rang = _1ab3bb6e9_range(&(_3107_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1ab3a1107_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1ab3a3a00_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1ab3a41c6_setupRangeKindKeys(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1a379688a_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1ab3a3d63_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1ab3a3a00_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1a379688a_RangeKind> _1ab3a467c_buildRangeIterKind(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3278_exprTokens, jule::Ptr<_1ab6a54d8_Token>* _32742_inToken) {
	jule::Ptr<_1a379688a_RangeKind> _3287_rng = jule::new_ptr<_1a379688a_RangeKind>(_1a379688a_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1a3794a0e_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1a3794a0e_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1ab3a1107_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*_3287_rng.alloc)._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1ab3a41c6_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1ab3a4a78_buildCommonIterKind(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _34240_tokens, jule::Ptr<_1ab6a54d8_Token>* _34266_errTok) {
	jule::I64 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b13b370d:;
		if (it != expr_end) {
			jule::I64 _3448_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b13b40d2:;
						{
							(_3437_braceN)++;
							goto _iter_next_1b13b370d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b13b44bc:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1b13b43bd:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1b13b370d;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1b13b5589:;
						{
							jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1ab3a467c_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type35);;
						}
					}
					_match_end_1b13b5be9:;
				};
			}
			_iter_next_1b13b370d:;
			++it;
			_3448_i++;
			goto _iter_begin_1b13b370d;
		}
		_iter_end_1b13b370d:;
	};
	return jule::Any(_1ab3a2bb9_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_1a3795658_Iter> _1ab3a4db9_buildCommonIter(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _36935_tokens) {
	jule::Ptr<_1a3795658_Iter> _3707_it = jule::new_ptr<_1a3795658_Iter>(_1a3795658_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1ab3a04e1_stop(_self_);
		_1ab3a1107_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3807_exprTokens = _1ab3b8471_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*_3707_it.alloc)._field_Kind=_1ab3a4a78_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I64 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3857_scopeTokens = _1ab3bb6e9_range(&(_3847_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1ab3a04e1_stop(_self_);
		_1ab3a1107_pushErr(_self_, (*_3707_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1ab3a1107_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3707_it.alloc)._field_Scope=_1ab3a1da5_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1a3795658_Iter> _1ab3a520a_buildIterSt(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1ab3a2878_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1ab3a4db9_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1a3796c64_BreakSt> _1ab3a554b_buildBreakSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _40633_tokens) {
	jule::Ptr<_1a3796c64_BreakSt> _4077_brk = jule::new_ptr<_1a3796c64_BreakSt>(_1a3796c64_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ab3a1107_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1ab3a1107_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1a379713d_ContSt> _1ab3a588c_buildContSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _42432_tokens) {
	jule::Ptr<_1a379713d_ContSt> _4257_cont = jule::new_ptr<_1a379713d_ContSt>(_1a379713d_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ab3a1107_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1ab3a1107_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1a37975e4_If> _1ab3a5bcd_buildIf(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _44228_tokens) {
	jule::Ptr<_1a37975e4_If> _4437_model = jule::new_ptr<_1a37975e4_If>(_1a37975e4_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _4477_exprTokens = _1ab3b8471_getBlockExpr(_44228_tokens);;
	jule::I64 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1ab3a1107_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _4547_scopeTokens = _1ab3bb6e9_range(&(_4487_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1ab3a04e1_stop(_self_);
		_1ab3a1107_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab6a54d8_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1ab3a1107_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*_4437_model.alloc)._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1ab3a1da5_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1a37979bd_Else> _1ab3a601e_buildElse(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _47530_tokens) {
	jule::Ptr<_1a37979bd_Else> _4767_els = jule::new_ptr<_1a37979bd_Else>(_1a37979bd_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I64 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _4817_scopeTokens = _1ab3bb6e9_range(&(_4807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1ab3a1107_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1ab3a04e1_stop(_self_);
			_1ab3a1107_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1ab3a1107_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1ab3a1da5_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1a3797e74_Conditional> _1ab3a6360_buildIfElseChain(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _49936_tokens) {
	jule::Ptr<_1a3797e74_Conditional> _5007_chain = jule::new_ptr<_1a3797e74_Conditional>(_1a3797e74_Conditional{._field_Head=_1ab3a5bcd_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1a37975e4_If>>(nullptr), ._field_Default=jule::Ptr<_1a37979bd_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1b13d2430;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1a37975e4_If> _5129_elif = _1ab3a5bcd_buildIf(_self_, &(_49936_tokens));;
				(*_5007_chain.alloc)._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37975e4_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1b13d2430;
			};
			(*_5007_chain.alloc)._field_Default=_1ab3a601e_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1b13d2430;
		}
	_iter_next_1b13d2430:;
	}
	_iter_end_1b13d2430:;;
	return _5007_chain;;
}



inline jule::Ptr<_1ab6c4bab_Expr> _1ab3a66a1_buildCoCallSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _52233_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab6c4bab_Expr> _5257_e = _1ab3be1d0_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b13d6522:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1a378984a_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b13d6ae9:;
			{
				_1ab3a1107_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1b13d6a83:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1a378e575_GotoSt> _1ab3a69e2_buildGotoSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _53832_tokens) {
	jule::Ptr<_1a378e575_GotoSt> _5397_gt = jule::new_ptr<_1a378e575_GotoSt>(_1a378e575_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1ab3a1107_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1ab3a1107_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1ab6a54d8_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3a1107_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1a378e872_FallSt> _1ab3a6d33_buildFallSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _55832_tokens) {
	jule::Ptr<_1a378e872_FallSt> _5597_fll = jule::new_ptr<_1a378e872_FallSt>(_1a378e872_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1ab3a1107_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1a37986b1_TypeAliasDecl> _1ab3a7174_buildTypeAliasSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _56837_tokens) {
	jule::Ptr<_1a37986b1_TypeAliasDecl> _5697_tad = _1ab3c0973_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1ab3a764c_pushCaseExpr(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _57432_tokens, jule::Ptr<_1ab6a54d8_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I64 _5808_i = 0LL;;
		jule::Ptr<_1ab6c0877_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1ab6c4bab_Expr>(_1ab6c4bab_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type91)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1ab3a1107_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1ab6c4bab_Expr__jule_tuple_bool _1ab3a7b03_buildCaseExprs(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _59735_tokens, jule::Ptr<_1ab6a54d8_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1ab6c4bab_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c4bab_Expr>(nullptr); __jule_collection; });;
	jule::I64 _5997_braceN = 0LL;;
	jule::I64 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b13e34a7:;
		if (it != expr_end) {
			jule::I64 _6018_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b13e4c17:;
						{
							(_5997_braceN)++;
							goto _iter_next_1b13e34a7;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b13e5102:;
						{
							(_5997_braceN)--;
							goto _iter_next_1b13e34a7;
						}
					}
					_match_end_1b13e5003:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1b13e34a7;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1b13e67b8:;
						{
							jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1ab3a1107_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1ab3a764c_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1b13e682e:;
						{
							(*(_59765_colon))=_60115_tok;
							_1ab3a764c_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1b13e62bd:;
				};
			}
			_iter_next_1b13e34a7:;
			++it;
			_6018_i++;
			goto _iter_begin_1b13e34a7;
		}
		_iter_end_1b13e34a7:;
	};
	_1ab3a1107_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3a7e44_buildCaseScope(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _63935_tokens) {
	jule::I64 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6438_next;
			({
				__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_bool __jule_assign_result = _1ab39e16b_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1b13ea5ad;
			};
			jule::Ptr<_1ab6a54d8_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1b13ea5ad;
			};
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1a3791bb5_ScopeTree> _6538_scope = _1ab3a1da5_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1b13ea5ad:;
	}
	_iter_end_1b13ea5ad:;;
	jule::Ptr<_1ab6a54d8_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a3791bb5_ScopeTree> _6617_scope = _1ab3a1da5_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1a3798b67_Case__jule_tuple_bool _1ab3a8340_buildCase(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1a3798b67_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3798b67_Case> _6677_c = jule::new_ptr<_1a3798b67_Case>(_1a3798b67_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1ab6a54d8_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1ab3a1107_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1ab6c4bab_Expr__jule_tuple_bool __jule_assign_result = _1ab3a7b03_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*_6677_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6677_c.alloc)._field_Scope=_1ab3a7e44_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a3798b67_Case__jule_tuple_x_1a37979bd_Else _1ab3a873b_buildCases(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1a3798b67_Case__jule_tuple_x_1a37979bd_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a3798b67_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1a37979bd_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ab6a54d8_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1ab3a1107_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1b14049e6;
			};
			jule::Ptr<_1a3798b67_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1a3798b67_Case__jule_tuple_bool __jule_assign_result = _1ab3a8340_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1a37979bd_Else>(_1a37979bd_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1ab3a1107_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a3798b67_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1b14049e6:;
	}
	_iter_end_1b14049e6:;;
	if (_6887_defNotLast) {
		_1ab3a1107_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3799481_MatchCase> _1ab3a8a7c_buildMatchCase(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _71934_tokens) {
	jule::Ptr<_1a3799481_MatchCase> _7207_m = jule::new_ptr<_1a3799481_MatchCase>(_1a3799481_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1a3798b67_Case>>(nullptr), ._field_Default=jule::Ptr<_1a37979bd_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7307_exprTokens = _1ab3b8471_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*_7207_m.alloc)._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*_7207_m.alloc)._field_TypeMatch) {
		_1ab3a1107_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7387_blockToks = _1ab3bb6e9_range(&(_7377_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1ab3a04e1_stop(_self_);
		_1ab3a1107_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab3a146a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1ab3a1107_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7207_m.alloc)._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1a3798b67_Case__jule_tuple_x_1a37979bd_Else __jule_assign_result = _1ab3a873b_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3a8dbd_buildScopeSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1ab6a54d8_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1ab3a1107_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*_7557_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1ab3a1107_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1ab3a1107_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7827_scopeTokens = _1ab3bb6e9_range(&(_7817_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1ab3a1107_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1ab3a1107_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a3791bb5_ScopeTree> _7897_scope = _1ab3a1da5_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1a378e19b_LabelSt> _1ab3a920e_buildLabelSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _79533_tokens) {
	jule::Ptr<_1a378e19b_LabelSt> _7967_lbl = jule::new_ptr<_1a378e19b_LabelSt>(_1a378e19b_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1ab3a1723_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1a3791225_StmtData__jule_tuple_bool _1ab3a9550_buildIdSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _81030_tokens) {
	__jule_tuple__1a3791225_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ab6a54d8_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b141b58a:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ab3a920e_buildLabelSt(_self_, _81030_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b141bce9:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab3b9d57_assignInfo> _1ab3a9891_buildAssignInfo(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _82436_tokens) {
	jule::Ptr<_1ab3b9d57_assignInfo> _8257_info = jule::new_ptr<_1ab3b9d57_assignInfo>(_1ab3b9d57_assignInfo{._field_l=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr), ._field_setter=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b141d5c0:;
		if (it != expr_end) {
			jule::I64 _8298_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b141e00a:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b141e390:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1b141e291:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1b14204e5:;
						{
							goto _iter_next_1b141d5c0;
						}
					}
					else if (((!(_1ab6aa5ed_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1b142055b:;
						{
							goto _iter_next_1b141d5c0;
						}
					}
					_match_end_1b142044b:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1ab6aa334_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1b141d5c0;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1ab6aa334_IsPostfixOp((*(*(_8257_info))._field_setter.alloc)._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1ab3a1107_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1b141d5c0;
			}
			_iter_next_1b141d5c0:;
			++it;
			_8298_i++;
			goto _iter_begin_1b141d5c0;
		}
		_iter_end_1b141d5c0:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1a378eed2_AssignLeft> _1ab3a9bd2_buildAssignL(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _86933_tokens) {
	jule::Ptr<_1a378eed2_AssignLeft> _8707_l = jule::new_ptr<_1a378eed2_AssignLeft>(_1a378eed2_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*_8707_l.alloc)._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>> _1ab3aa023_buildAssignLs(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1427909:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _88215_part = *it;
			{
				jule::Ptr<_1a378eed2_AssignLeft> _8838_l = _1ab3a9bd2_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1b1427909:;
			++it;
			goto _iter_begin_1b1427909;
		}
		_iter_end_1b1427909:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1a3791225_StmtData__jule_tuple_bool _1ab3aa364_buildPlainAssign(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _88937_tokens) {
	__jule_tuple__1a3791225_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab3b9d57_assignInfo> _8907_info = _1ab3a9891_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3790565_AssignSt> _8957_assign = jule::new_ptr<_1a3790565_AssignSt>(_1a3790565_AssignSt{._field_Declarative=false, ._field_Setter=(*_8907_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1ab3be1d0_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1ab3aa760_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_8957_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a378eed2_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b142dbc9:;
				{
					jule::Ptr<_1a3794a0e_VarDecl> _9159_decl = jule::new_ptr<_1a3794a0e_VarDecl>(_1a3794a0e_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type49);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1b142db63:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type57);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _9297_parts;
	jule::Slice<_1a388d1ac_Log> _92914_errs;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_8957_assign.alloc)._field_Left=_1ab3aa023_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1ab3be1d0_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab3aa760_buildDeclAssign1(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _94337_lefts, jule::Ptr<_1a3790565_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _9457_parts;
	jule::Slice<_1a388d1ac_Log> _94514_errs;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(_94337_lefts, static_cast<jule::U64>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1434b9c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1ab6a54d8_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1ab3a1107_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1ab3a1107_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1ab3a1107_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1a378eed2_AssignLeft> _9798_l = _1ab3a9bd2_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_9798_l.alloc)._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1b1434b9c:;
			++it;
			goto _iter_begin_1b1434b9c;
		}
		_iter_end_1b1434b9c:;
	};
	return true;;
}



inline __jule_tuple_x_1a3790565_AssignSt__jule_tuple_bool _1ab3aaaa1_buildDeclAssign(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _99135_tokens) {
	__jule_tuple_x_1a3790565_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab6a54d8_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3790565_AssignSt> _10027_assign = jule::new_ptr<_1a3790565_AssignSt>(_1a3790565_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a378eed2_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	jule::I64 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _10077_rang = _1ab3bb6e9_range(&(_10067_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1ab3a1107_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ab3a1107_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1ab3aa760_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a3791225_StmtData__jule_tuple_bool _1ab3aade2_buildAssignSt(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _102534_tokens) {
	__jule_tuple__1a3791225_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ab3ba20e_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b1445949:;
			{
				({
					__jule_tuple_x_1a3790565_AssignSt__jule_tuple_bool __jule_assign_result = _1ab3aaaa1_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b1444abe:;
			{
				({
					__jule_tuple__1a3791225_StmtData__jule_tuple_bool __jule_assign_result = _1ab3aa364_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b1445031:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab6c5580_UseExpr> _1ab3ab233_buildUseExpr(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1ab3a1107_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1ab6c5580_UseExpr> _10437_ue = jule::new_ptr<_1ab6c5580_UseExpr>(_1ab6c5580_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1ab3be1d0_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1ab3ab574_buildConstSt(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1ab3a1107_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b144a069:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a3795658_Iter> _10598_iter = _1ab3a520a_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b1449d5a:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a3799481_MatchCase> _10668_mt = _1ab3a8a7c_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1b1449189:;
			{
				return jule::Any(_1ab3a21e6_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		_match_end_1b14498a4:;
	};
}



inline jule::Any _1ab3ab8b5_buildSt(_1ab39ed3c_scopeParser* _self_, jule::Ptr<_1ab39e49b_stmt>* _107628_st) {
	jule::Ptr<_1ab6a54d8_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1a3791225_StmtData__jule_tuple_bool __jule_assign_result = _1ab3a9550_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1a3791225_StmtData__jule_tuple_bool __jule_assign_result = _1ab3aade2_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b1450e93:;
			{
				return jule::Any(_1ab3ab233_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b1450d1c:;
			{
				return _1ab3ab574_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b1451207:;
			{
				return jule::Any(_1ab3a21e6_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b145126d:;
			{
				return jule::Any(_1ab3a2537_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b14512d4:;
			{
				return jule::Any(_1ab3a520a_buildIterSt(_self_, _107628_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b145134a:;
			{
				return jule::Any(_1ab3a554b_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b14513b1:;
			{
				return jule::Any(_1ab3a588c_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b1451438:;
			{
				return jule::Any(_1ab3a6360_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b14514b0:;
			{
				return jule::Any(_1ab3a66a1_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1b1451537:;
			{
				return jule::Any(_1ab3a69e2_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1b14515ae:;
			{
				return jule::Any(_1ab3a6d33_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b1451636:;
			{
				return jule::Any(_1ab3a7174_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b14516ad:;
			{
				return jule::Any(_1ab3a8a7c_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b1451735:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1b1450b52;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1ab3a8dbd_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type48);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b14517ac:;
			{
				return jule::Any(_1ab3a8dbd_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b1451834:;
			{
				return jule::Any(_1ab3a8dbd_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		_match_end_1b1450b52:;
	};
	jule::Ptr<_1ab6c4bab_Expr> _11327_expr = _1ab3be1d0_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type51);;
	};
	_1ab3a1107_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1ab3abc28_build(_1ab39ed3c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _114026_tokens, jule::Ptr<_1a3791bb5_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ab39e853_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1ab3a0c94_isLastSt(_self_))) && (!(_1ab3a0a0d_finished(_self_))))) {
		{
			jule::Ptr<_1ab39e49b_stmt> _11488_st = _1ab3a19a9_next(_self_);;
			jule::Any _11498_data = _1ab3ab8b5_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1a3791555_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a3791555_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1ab3a0777_stopped(_self_)) {
				goto _iter_end_1b145da83;
			};
		}
	_iter_next_1b145da83:;
	}
	_iter_end_1b145da83:;;
}








inline jule::Bool _1ab3ac762_exprBuilder_eq(_1ab3ac762_exprBuilder *_self_, _1ab3ac762_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1ab3ace6b_pushErr(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1ab3bda2b_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1ab3ad2ce_pushSuggestion(_1ab3ac762_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1ab3bdd8e_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1ab6c57a0_TupleExpr> _1ab3ad620_buildTuple(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _2331_parts) {
	jule::Ptr<_1ab6c57a0_TupleExpr> _247_tuple = jule::new_ptr<_1ab6c57a0_TupleExpr>(_1ab6c57a0_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c4bab_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b148346a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab3b7a14_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1b148346a:;
			++it;
			goto _iter_begin_1b148346a;
		}
		_iter_end_1b148346a:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1ab6c5b46_LitExpr> _1ab3ad961_buildLit(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _3324_token) {
	return jule::new_ptr<_1ab6c5b46_LitExpr>(_1ab6c5b46_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1ab3ae0e3_buildSingle(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1b1486160:;
			{
				return jule::Any(_1ab3ad961_buildLit(_self_, _4431_token), &__jule_any_type104);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b14861d7:;
			{
				return jule::Any(jule::new_ptr<_1ab6c7142_VariadicExpr>(_1ab6c7142_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)}), &__jule_any_type78);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b148624d:;
			{
				return jule::Any(_1ab3b8dbc_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_1b1486094:;
	};
	_1ab3ace6b_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab6c64c6_IdentExpr> _1ab3ae434_buildBindIdent(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1ab3ace6b_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab6a54d8_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3ace6b_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab6c64c6_IdentExpr> _757_expr = _1ab3b8dbc_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1ab6c6c68_UnaryExpr> _1ab3ae775_buildUnary(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _8030_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1ab3ace6b_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ab6a5c25_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1ab3ace6b_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ab6c6c68_UnaryExpr>(_1ab6c6c68_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1a3788c34_SubIdentExpr> _1ab3aeab6_buildObjSubIdent(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _10136_tokens) {
	jule::I64 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1ab6a54d8_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3788c34_SubIdentExpr>(_1a3788c34_SubIdentExpr{._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1a378885a_NamespaceExpr> _1ab3aee07_buildNamespace(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _11635_tokens) {
	jule::Ptr<_1a378885a_NamespaceExpr> _1177_ns = jule::new_ptr<_1a378885a_NamespaceExpr>(_1a378885a_NamespaceExpr{._field_Namespace=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1ab3ace6b_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1ab3ace6b_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1ab3ace6b_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1ab3ace6b_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1ab3ace6b_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3ace6b_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3b0248_buildType(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _15030_tokens) {
	jule::I64 _1517_i = 0LL;;
	jule::Ptr<_1ab6c0877_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1ab3ace6b_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1ab3ace6b_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1ab3b0589_buildSubIdent(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _16434_tokens) {
	jule::I64 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1ab6a54d8_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1b149d7c6:;
			{
				return jule::Any(_1ab3aeab6_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b149de03:;
			{
				return jule::Any(_1ab3aee07_buildNamespace(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b149de69:;
			{
				return jule::Any(_1ab3b0248_buildType(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		_match_end_1b149dcd2:;
	};
	if (_1ab3b9560_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1ab3b0248_buildType(_self_, _16434_tokens), &__jule_any_type91);;
	};
	_1ab3ace6b_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab6c7142_VariadicExpr> _1ab3b08ca_buildVariadic(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _18633_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1ab6c7142_VariadicExpr>(_1ab6c7142_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1ab6c4e75_RangeExpr> _1ab3b0c1b_buildBetweenParentheses(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1ab3ace6b_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1ab6c4e75_RangeExpr>(_1ab6c4e75_RangeExpr{._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1a3788481_CastExpr> _1ab3b105c_tryBuildCast(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _20733_tokens) {
	jule::I64 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14a49ec:;
		if (it != expr_end) {
			jule::I64 _2097_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b14a538d:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1b14a49ec;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b14a5778:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1b14a5679:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1b14a49ec;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ab6a54d8_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a3788481_CastExpr> _2418_cast = jule::new_ptr<_1a3788481_CastExpr>(_1a3788481_CastExpr{._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1ab3ace6b_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1ab3ace6b_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I64 _2559_typeIndex = 0LL;;
					jule::Ptr<_1ab6c0877_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1ab3ace6b_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I64 _26610_j = 0LL;;
						_1ab3bb6e9_range(&(_26610_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1b14a49ec:;
			++it;
			_2097_i++;
			goto _iter_begin_1b14a49ec;
		}
		_iter_end_1b14a49ec:;
	};
	return nullptr;;
}



inline void _1ab3b147a_pushArg(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _28152_tokens, jule::Ptr<_1ab6a54d8_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1ab3b7a14_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _1ab3b17bb_buildArgs(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _29611_args = nullptr;;
	jule::I64 _2977_last = 0LL;;
	jule::I64 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14b3412:;
		if (it != expr_end) {
			jule::I64 _3007_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b14b40e4:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b14b44ce:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1b14b43d0:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b14b3412;
				};
				_1ab3b147a_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1b14b3412:;
			++it;
			_3007_i++;
			goto _iter_begin_1b14b3412;
		}
		_iter_end_1b14b3412:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1ab3b147a_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1ab3b147a_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1a378984a_FnCallExpr> _1ab3b20b3_buildFnCall(_1ab3ac762_exprBuilder* _self_, jule::Ptr<_1ab6a54d8_Token>* _35632_token, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _35687_args) {
	return jule::new_ptr<_1a378984a_FnCallExpr>(_1a378984a_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1ab3b7a14_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1ab3b17bb_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1ab3b2404_buildParenthesesRange(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _36442_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a3788481_CastExpr> _3678_expr = _1ab3b105c_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type108);;
		};
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token __jule_assign_result = _1ab3bb9b3_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab3b0c1b_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type103);;
	};
	if (_1ab3b9560_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1ab3b0248_buildType(_self_, _36442_tokens), &__jule_any_type91);;
	};
	return jule::Any(_1ab3b20b3_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type84);;
}



inline jule::Ptr<_1ab6c6020_UnsafeExpr> _1ab3b2745_buildUnsafeExpr(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _38635_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I64 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3907_rangeTokens = _1ab3bb6e9_range(&(_3897_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab6c6020_UnsafeExpr>(_1ab6c6020_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1a3793854_FnDecl> _1ab3b2a86_buildAnonFn(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _40132_tokens) {
	jule::Ptr<_1a3793854_FnDecl> _4027_f = _1ab3c4bb9_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1a3793bea_IsAnon(_4027_f.ptr())))) {
		_1ab3ace6b_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1ab3b2dc7_buildUnsafe(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b14c702a:;
			{
				return jule::Any(_1ab3b2a86_buildAnonFn(_self_, _41032_tokens), &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1b14c63ae:;
			{
				return jule::Any(_1ab3b2745_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type105);;
			}
		}
		_match_end_1b14c6810:;
	};
}



inline void _1ab3b32e5_pushRangeLitPart(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _42036_part, jule::Ptr<_1ab6a54d8_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3b3636_getBraceRangeLitExprParts(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _43711_parts = nullptr;;
	jule::I64 _4397_last = 0LL;;
	jule::I64 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14ca7ae:;
		if (it != expr_end) {
			jule::I64 _4427_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b14cb491:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b14cb87b:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1b14cb77c:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b14ca7ae;
				};
				_1ab3b32e5_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1b14ca7ae:;
			++it;
			_4427_i++;
			goto _iter_begin_1b14ca7ae;
		}
		_iter_end_1b14ca7ae:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1ab3b32e5_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1ab3b32e5_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1a378a340_FieldExprPair> _1ab3b3977_buildFieldExprPair(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1ab3ace6b_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a378a340_FieldExprPair> _4787_pair = jule::new_ptr<_1a378a340_FieldExprPair>(_1a378a340_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1ab3b7a14_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1ab6c4bab_Expr> _1ab3b3cb8_buildStructLitExpr(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _48639_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*_4877_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1ab6c4bab_Expr>(_1ab6c4bab_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ab3b3977_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type80)});;
		};
	};
	return _1ab3b7a14_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _1ab3b4109_buildStructLitExprs(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _5027_parts = _1ab3b3636_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c4bab_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14d518c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab6c4bab_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1ab3b3cb8_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1b14d518c:;
			++it;
			goto _iter_begin_1b14d518c;
		}
		_iter_end_1b14d518c:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1a378ab6a_StructLit> _1ab3b444a_buildTypedStructLiteral(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _51443_tokens) {
	jule::I64 _5157_i = 0LL;;
	jule::Ptr<_1ab6c0877_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1ab3ace6b_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1ab6a54d8_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1ab3ace6b_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a378ab6a_StructLit>(_1a378ab6a_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1ab3b4109_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1ab6c4bab_Expr> _1ab3b478b_buildBraceLitPart(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _53914_r;
	({
		__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token __jule_assign_result = _1ab3b8839_splitDelim(_53838_tokens, static_cast<jule::U64>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1ab6c4bab_Expr>(_1ab6c4bab_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a378b94b_KeyValPair>(_1a378b94b_KeyValPair{._field_Key=_1ab3b7a14_buildFromTokens(_self_, _5397_l), ._field_Val=_1ab3b7a14_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type81)});;
	};
	return _1ab3b7a14_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1a378b121_BraceLit> _1ab3b4acc_buildBraceLit(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _55534_tokens) {
	jule::Ptr<_1a378b121_BraceLit> _5567_lit = jule::new_ptr<_1a378b121_BraceLit>(_1a378b121_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _5617_parts = _1ab3b3636_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c4bab_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14ded89:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab3b478b_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1b14ded89:;
			++it;
			goto _iter_begin_1b14ded89;
		}
		_iter_end_1b14ded89:;
	};
	return _5567_lit;;
}



inline jule::Any _1ab3b4e1d_buildBraceRange(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _5757_exprTokens;
	jule::I64 _57519_rangeN;
	({
		__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_int __jule_assign_result = _1ab3b9186_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1b14e17d6:;
			{
				return jule::Any(_1ab3b4acc_buildBraceLit(_self_, _57436_tokens), &__jule_any_type110);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1b14e186e:;
			{
				_1ab3ace6b_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b14e1770:;
	};
	jule::Ptr<_1ab6a54d8_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1ab3b7382_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1b14e46b8:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I64 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _5979_rangeTokens = _1ab3bb6e9_range(&(_5969_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57436_tokens);;
					jule::Ptr<_1a378984a_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1a378984a_FnCallExpr>();;
					if (_1a3789e88_Ignored(_5989_model.ptr())) {
						_1ab3ace6b_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_5989_model.alloc)._field_Exception=_1ab3bebc5_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1b14e4322:;
				{
					_1ab3ace6b_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b14e4762:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b14ee629:;
			{
				return _1ab3b2dc7_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b14ee690:;
			{
				return jule::Any(_1ab3b2a86_buildAnonFn(_self_, _57436_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b14ee706:;
			{
				return jule::Any(_1ab3b444a_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type109);;
			}
		}
		else {
			_case_begin_1b14e491b:;
			{
				_1ab3ace6b_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b14ed969:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3b525e_getEnumerableParts(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _6287_parts;
	jule::Slice<_1a388d1ac_Log> _62814_errors;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(&(_62638_tokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1a378c386_SliceExpr> _1ab3b55a0_buildSlice(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _63330_tokens) {
	jule::Ptr<_1a378c386_SliceExpr> _6347_slc = jule::new_ptr<_1a378c386_SliceExpr>(_1a378c386_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _6397_parts = _1ab3b525e_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c4bab_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b150451e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1b150451e;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c4bab_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab3b7a14_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1b150451e:;
			++it;
			goto _iter_begin_1b150451e;
		}
		_iter_end_1b150451e:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1a378cdae_IndexingExpr> _1ab3b5a56_buildIndexing(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6567_tokens, jule::Ptr<_1ab6a54d8_Token> _65636_errorToken) {
	jule::Ptr<_1ab6a54d8_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _6637_expr = _1ab3b7a14_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _6677_index = _1ab3b7a14_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a378cdae_IndexingExpr>(_1a378cdae_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1a378d51e_SlicingExpr> _1ab3b6172_buildSlicing(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _67967_start, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _6808_to, jule::Ptr<_1ab6a54d8_Token>* _68034_errorToken, jule::Ptr<_1ab6a54d8_Token> _68065_end) {
	jule::Ptr<_1a378d51e_SlicingExpr> _6817_slc = jule::new_ptr<_1a378d51e_SlicingExpr>(_1a378d51e_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1ab3b7a14_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_To=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1ab3b7a14_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*_6817_slc.alloc)._field_To=_1ab3b7a14_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1ab3b64b3_buildBracketRange(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _69537_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6977_exprTokens;
	jule::I64 _69719_rangeN;
	({
		__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_int __jule_assign_result = _1ab3b9186_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab3b55a0_buildSlice(_self_, _69537_tokens), &__jule_any_type96);;
	} else if ((_69719_rangeN > 0LL)) {
		_1ab3ace6b_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _71318_to;
	({
		__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token __jule_assign_result = _1ab3b8839_splitDelim(&(_7127_splitTokens), static_cast<jule::U64>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1ab3b6172_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type107);;
	};
	return jule::Any(_1ab3b5a56_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type106);;
}



inline jule::Any _1ab3b6804_buildExclRight(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _72035_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1ab3b7382_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b15120ed:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1a378984a_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a3791bb5_ScopeTree>(_1a3791bb5_ScopeTree{._field_Parent=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1a3791555_Stmt>(nullptr), ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1b15124d8:;
	};
	_1ab3ace6b_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab3b6b45_buildData(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b1513c04:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b1513c6a:;
			{
				return _1ab3ae0e3_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b1513cd1:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1ab3ae434_buildBindIdent(_self_, _73830_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_1b1513ac2:;
	};
	jule::Ptr<_1ab6a54d8_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1ab3b08ca_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type78);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1ab6a5c25_IsUnaryOp((*_7507_token.alloc)._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*_7507_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1ab3b0248_buildType(_self_, _73830_tokens), &__jule_any_type91);;
			};
		};
		return jule::Any(_1ab3ae775_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type90);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1b1518599:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1ab6a54d8_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1b1518874;
						};
					};
					jule::Ptr<_1ab6a54d8_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1b1518874;
					};
					return jule::Any(_1ab3b0248_buildType(_self_, _73830_tokens), &__jule_any_type91);;
				}
			}
			_match_end_1b1518874:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b151ba75:;
			{
				return _1ab3b0589_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b151badb:;
			{
				return _1ab3b6804_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b151bb52:;
			{
				return _1ab3b2404_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b151bbb8:;
			{
				return _1ab3b4e1d_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b151bc2e:;
			{
				return _1ab3b64b3_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1b151ba0e:;
	};
	_1ab3ace6b_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab3b7041_buildBinary(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _80732_tokens, jule::I64 _80757_i) {
	jule::Ptr<_1ab6a54d8_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1ab3b7d99_isTypeOp(&((*(_8087_op))._field_Id)) && _1ab3b81a7_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1ab3b0248_buildType(_self_, _80732_tokens), &__jule_any_type91);;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1ab3ace6b_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3ad2ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a37891da_BinaryExpr>(_1a37891da_BinaryExpr{._field_Left=_1ab3b7a14_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1ab3b7a14_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type111);;
}



inline jule::Any _1ab3b7382_build(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1ab3b0248_buildType(_self_, _83226_tokens), &__jule_any_type91);;
	};
	jule::I64 _8363_i = _1ab3b8b03_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1ab3b6b45_buildData(_self_, _83226_tokens);;
	};
	return _1ab3b7041_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1ab3b76c3_buildKind(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _8447_parts;
	jule::Slice<_1a388d1ac_Log> _84414_errors;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(_84330_tokens, static_cast<jule::U64>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1ab3ad620_buildTuple(_self_, &(_8447_parts)), &__jule_any_type82);;
	};
	return _1ab3b7382_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1ab6c4bab_Expr> _1ab3b7a14_buildFromTokens(_1ab3ac762_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1ab3b76c3_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab6c4bab_Expr>(_1ab6c4bab_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1ab3bd377_stop(_1ab3bd047_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ab3bd60d_stopped(_1ab3bd047_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ab3bda2b_pushErr(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6a54d8_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1a388d1ac_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab3bc62e_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1ab3bdd8e_pushSuggestion(_1ab3bd047_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1ab3bc9c5_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1ab6c4bab_Expr> _1ab3be1d0_buildExpr(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _17831_tokens) {
	return _1ab3b7a14_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1ab6bec94_Directive> _1ab3be521_buildDirective(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1ab3bda2b_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1ab3bda2b_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab6bec94_Directive>(_1ab6bec94_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1ab3be7c9_pushDirective(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6bec94_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15491bd:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b15491bd:;
			++it;
			goto _iter_begin_1b15491bd;
		}
		_iter_end_1b15491bd:;
	};
	{ jule::Slice<jule::Ptr<_1ab6bec94_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab3bebc5_buildScope(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _21032_tokens, jule::Ptr<_1ab6a54d8_Token> _21061_end) {
	jule::Ptr<_1a3791bb5_ScopeTree> _2117_s = _1ab39d225_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1ab39ed3c_scopeParser _2137_sp = _1ab39ed3c_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ab39e49b_stmt>>(nullptr), ._field_pos=0};;
	_1ab3abc28_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool _1ab3c017b__buildType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ab3ce201_typeBuilder _2227_tb = _1ab3ce201_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1ab3d2215_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool _1ab3c0632_buildType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab6a54d8_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1ab6c0877_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c017b__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1ab3bda2b_pushErr(_self_, _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a37986b1_TypeAliasDecl> _1ab3c0973_buildTypeAliasDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _24240_tokens) {
	jule::I64 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a37986b1_TypeAliasDecl> _2487_tad = jule::new_ptr<_1a37986b1_TypeAliasDecl>(_1a37986b1_TypeAliasDecl{._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr)});;
	jule::Ptr<_1ab6a54d8_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_, _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*_2527_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1ab3bda2b_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1ab6c0877_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1ab3bda2b_pushErr(_self_, (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1ab88076d_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1ab3c0cd6_buildVarTypeAndExpr(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3794a0e_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _28264_tokens) {
	jule::I64 _2837_i = 0LL;;
	jule::Ptr<_1ab6a54d8_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1ab3bda2b_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ab6c0877_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*_2847_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1ab3bda2b_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1ab3bda2b_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1ab3be1d0_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1ab3c1149_buildVarCommon(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3794a0e_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*(*((*(_31536_v))))._field_Token.alloc)._field_Kind;
	(*((*(_31536_v))))._field_Public=_1ab88076d_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1ab3c0cd6_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1ab3c14ac_buildVarBegin(_1ab3bd047_parser* _self_, jule::Ptr<_1a3794a0e_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _33157_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b1565abe:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1b156577d;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b156577d:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1ab3bda2b_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b15657e4:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1b1565470:;
			{
				(*(_33157_tokens))=nullptr;
				_1ab3bda2b_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1565717:;
	};
}



inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3c17ed_buildVar(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _35929_tokens) {
	jule::Ptr<_1a3794a0e_VarDecl> _3607_v = jule::new_ptr<_1a3794a0e_VarDecl>(_1a3794a0e_VarDecl{._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	_1ab3c14ac_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1ab3c1149_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1a378dcc2_GenericDecl> _1ab3c1b3e_buildGeneric(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _37834_tokens) {
	jule::Ptr<_1a378dcc2_GenericDecl> _3797_g = jule::new_ptr<_1a378dcc2_GenericDecl>(_1a378dcc2_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1a378d81b_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_3797_g.alloc)._field_Ident=(*(*(_3797_g))._field_Token.alloc)._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1ab3bda2b_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1ab3bda2b_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _3978_parts;
		jule::Slice<_1a388d1ac_Log> _39715_errors;
		({
			__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(&(_3968_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1a378d81b_Constraint>(_1a378d81b_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c0877_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b157399a:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _40316_part = *it;
				{
					jule::I64 _4049_i = 0LL;;
					jule::Ptr<_1ab6c0877_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1ab3bda2b_pushErr(_self_, _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b157399a:;
				++it;
				goto _iter_begin_1b157399a;
			}
			_iter_end_1b157399a:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _1ab3c203a_buildGenerics(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _41535_tokens, jule::Ptr<_1ab6a54d8_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _4217_parts;
	jule::Slice<_1a388d1ac_Log> _42114_errors;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(_41535_tokens, static_cast<jule::U64>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a378dcc2_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1579022:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1ab3c1b3e_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1b1579022:;
			++it;
			goto _iter_begin_1b1579022;
		}
		_iter_end_1b1579022:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1a3792402_ParamDecl> _1ab3c237b_buildSelfParam(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a3792402_ParamDecl> _4407_param = jule::new_ptr<_1a3792402_ParamDecl>(_1a3792402_ParamDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1ab3bda2b_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_1a387dcd5_Builder _4527_ident = static__1a387e654_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		({
			auto except = _1a387ecd6_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:455:4"));
			(except.result);
		});
		if ((_43534_tokens.len() == 1LL)) {
			_1ab3bda2b_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		({
			auto except = _1a387ecd6_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:464:4"));
			(except.result);
		});
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1ab3bda2b_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_1a3880666_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1ab3c2799_paramTypeBegin(_1ab3bd047_parser* _self_, jule::Ptr<_1a3792402_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1ab3bda2b_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1b1581aeb;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1b1581aeb:;
	}
	_iter_end_1b1581aeb:;;
}



inline void _1ab3c2b0c_buildParamType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3792402_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _49065_tokens) {
	jule::I64 _4917_i = 0LL;;
	_1ab3c2799_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ab3c2e70_buildParamBody(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3792402_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _50364_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ab3c2b0c_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1ab3c2b0c_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1a3792402_ParamDecl> _1ab3c32b1_buildParam(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _52331_tokens) {
	jule::Ptr<_1a3792402_ParamDecl> _5247_param = jule::new_ptr<_1a3792402_ParamDecl>(_1a3792402_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1ab3bda2b_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*(*(_5247_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1ab3bda2b_pushErr(_self_, _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*(*(_5247_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ab3c2b0c_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1ab3c2e70_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1ab3c3569_checkParams(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1a3792402_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15924ad:;
		if (it != expr_end) {
			jule::Ptr<_1a3792402_ParamDecl> _56715_param = *it;
			{
				if ((_1a37927a9_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1b15924ad;
				};
				if (((*_56715_param.alloc)._field_Token == nullptr)) {
					_1ab3bda2b_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_56715_param.alloc)._field_Kind=jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)}), &__jule_any_type77)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1b15924ad:;
			++it;
			goto _iter_begin_1b15924ad;
		}
		_iter_end_1b15924ad:;
	};
}



inline jule::Slice<jule::Ptr<_1a3792402_ParamDecl>> _1ab3c3965_buildParams(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _5877_parts;
	jule::Slice<_1a388d1ac_Log> _58714_errs;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(_58633_tokens, static_cast<jule::U64>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3792402_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1a3792402_ParamDecl> _5958_param = _1ab3c237b_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1a37927a9_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1a3792402_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1599086:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1b1599086;
				};
				jule::Ptr<_1a3792402_ParamDecl> _6068_param = _1ab3c32b1_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a3792402_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1b1599086:;
			++it;
			goto _iter_begin_1b1599086;
		}
		_iter_end_1b1599086:;
	};
	_1ab3c3569_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool _1ab3c3d61_buildMultiRetType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _61639_tokens, jule::I64* _61669_i) {
	__jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab6c376a_RetTypeDecl>(_1ab6c376a_RetTypeDecl{._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _6267_rangeTokens = _1ab3bb6e9_range(_61669_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _6287_parts;
	jule::Slice<_1a388d1ac_Log> _62814_errs;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(&(_6267_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c0877_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6a54d8_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6a54d8_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15a0169:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1b15a0169;
				};
				jule::Ptr<_1ab6a54d8_Token> _6408_token = _63615_part[0LL];;
				jule::I64 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1ab3bda2b_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1b15a0169;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1ab6a54d8_Token> _6579_newToken = jule::new_ptr<_1ab6a54d8_Token>((*_6408_token.alloc));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6a54d8_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6a54d8_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1ab6c0877_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1ab3bda2b_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1b15a0169:;
			++it;
			goto _iter_begin_1b15a0169;
		}
		_iter_end_1b15a0169:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ab6c20a4_TupleTypeDecl>(_1ab6c20a4_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type76)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool _1ab3c425c_buildRetType(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _68734_tokens, jule::I64* _68764_i) {
	__jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab6c376a_RetTypeDecl>(_1ab6c376a_RetTypeDecl{._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ab6a54d8_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b15a920b:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1b15a9283:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b15a92e9:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1ab3bda2b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b15aace0:;
						{
							({
								__jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c3d61_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b15ab31d:;
						{
							_1ab3bda2b_pushErr(_self_, _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b15ab274:;
				};
				({
					__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b15a9195:;
	};
	((*(_68764_i)))++;
	_1ab3bda2b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a3793854_FnDecl> _1ab3c4713_buildFnPrototype(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1a3793854_FnDecl> _7277_f = jule::new_ptr<_1a3793854_FnDecl>(_1a3793854_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1ab6c376a_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a3792402_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*(*(_7277_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab6a54d8_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*_7277_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1ab6a54d8_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7737_genericsTokens = _1ab3bb6e9_range(_72668_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*_7277_f.alloc)._field_Generics=_1ab3c203a_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1ab3bda2b_pushErr(_self_, (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7837_paramsToks = _1ab3bb6e9_range(_72668_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*_7277_f.alloc)._field_Params=_1ab3c3965_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1ab6a54d8_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7277_f.alloc)._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*_7277_f.alloc)._field_Public=_1ab88076d_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1ab6c376a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c425c_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1a3793854_FnDecl> _1ab3c4bb9_buildFn(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I64 _8047_i = 0LL;;
	jule::Ptr<_1a3793854_FnDecl> _8057_f = _1ab3c4713_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _8217_blockTokens = _1ab3bb6e9_range(&(_8047_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*_8057_f.alloc)._field_Scope=_1ab3bebc5_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, (*_8057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1ab3c502c_buildBindUseDecl(_1ab3bd047_parser* _self_, jule::Ptr<_1a3799a14_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1ab3bda2b_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab6a54d8_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if (((((*(_8417_token))._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1ab6a663d_IsStr((*_8417_token.alloc)._field_Kind)))) || _1ab6a68c4_IsRawStr((*_8417_token.alloc)._field_Kind))) {
		_1ab3bda2b_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1ab3c5390_parseUseDecl(_1ab3bd047_parser* _self_, jule::Ptr<_1a3799a14_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1ab3c502c_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1ab6a54d8_Token> _8567_token = _85058_tokens[0LL];;
	if ((((((*(_8567_token))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU))) && (!(_1ab6a663d_IsStr((*_8567_token.alloc)._field_Kind)))) || _1ab6a68c4_IsRawStr((*_8567_token.alloc)._field_Kind))) {
		_1ab3bda2b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_8567_token.alloc)._field_Id == static_cast<jule::U64>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1ab3bda2b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1ab6a663d_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1ab3bda2b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1a3799a14_UseDecl> _1ab3c578b_buildUseDecl(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _88032_tokens, jule::Bool _88057_binded) {
	jule::Ptr<_1a3799a14_UseDecl> _8817_decl = jule::new_ptr<_1a3799a14_UseDecl>(_1a3799a14_UseDecl{._field_Token=_88032_tokens[0LL], ._field_Path=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Alias=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Binded=_88057_binded});;
	if ((_88032_tokens.len() < 2LL)) {
		_1ab3bda2b_pushErr(_self_, (*(_8817_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88032_tokens).mut_slice(1LL);;
	_1ab3c5390_parseUseDecl(_self_, &(_8817_decl), _88032_tokens);
	return _8817_decl;;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3c5b87_buildTypeEnumItemKind(jule::Ptr<_1ab3bd047_parser> _self_, jule::I64* _89443_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _89456_tokens) {
	jule::I64 _8957_braceN = 0LL;;
	jule::I64 _8963_exprStart = (*(_89443_i));;
	for (; ((*(_89443_i)) < (*(_89456_tokens)).len()); ((*(_89443_i)))++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _8984_t = (*(_89456_tokens))[(*(_89443_i))];;
			{
				auto &_match_expr{ (*(_8984_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b15d1112:;
					{
						(_8957_braceN)++;
						goto _iter_next_1b15d0595;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b15d1442:;
					{
						(_8957_braceN)--;
					}
				}
				_match_end_1b15d1189:;
			};
			if ((_8957_braceN > 0LL)) {
				goto _iter_next_1b15d0595;
			};
			if ((((*(_8984_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_89443_i)) + 1LL) >= (*(_89456_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _91413_kindTokens = nullptr;;
				if (((*_8984_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart, (*(_89443_i)));
				} else {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart);
				};
				jule::I64 _9209_j = 0LL;;
				jule::Ptr<_1ab6c0877_TypeDecl> _9219_kind;
				({
					__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_91413_kindTokens), (&(_9209_j)), true);
					_9219_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9209_j < _91413_kindTokens.len())) {
					_1ab3bda2b_pushErr(_self_, _91413_kindTokens[_9209_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9219_kind;;
			};
		}
	_iter_next_1b15d0595:;
	}
	_iter_end_1b15d0595:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>> _1ab3c5ec8_buildTypeEnumItems(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _93140_tokens) {
	jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>> _9327_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a379b3a6_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _9337_i = 0LL;;
	for (; (_9337_i < (*(_93140_tokens)).len()); (_9337_i)++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _9358_t = (*(_93140_tokens))[_9337_i];;
			jule::Ptr<_1a379b3a6_TypeEnumItemDecl> _9368_item = jule::new_ptr<_1a379b3a6_TypeEnumItemDecl>(_1a379b3a6_TypeEnumItemDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr)});;
			(*_9368_item.alloc)._field_Token=_9358_t;
			if ((((*((*_9368_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_93140_tokens)).len() - _9337_i) > 2LL))) {
				_9358_t=(*(_93140_tokens))[(_9337_i + 1LL)];
				if (((*(_9358_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_9368_item.alloc)._field_Ident=(*(*(_9368_item))._field_Token.alloc)._field_Kind;
					_9337_i+=2LL;
					if (((_9337_i >= (*(_93140_tokens)).len()) || ((*((*(_93140_tokens))[_9337_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1ab3bda2b_pushErr(_self_.ptr(), _9358_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1b15d6414;
					};
				};
			};
			(*_9368_item.alloc)._field_Kind=_1ab3c5b87_buildTypeEnumItemKind(_self_, &(_9337_i), _93140_tokens);
			{ jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>> &__jule_push_dest = _9327_items; __jule_push_dest.push(_9368_item); };
		}
	_iter_next_1b15d6414:;
	}
	_iter_end_1b15d6414:;;
	return _9327_items;;
}



inline jule::Ptr<_1a379ba16_TypeEnumDecl> _1ab3c6319_buildTypeEnumDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _95539_tokens) {
	jule::I64 _9567_i = 1LL;;
	jule::Ptr<_1a379ba16_TypeEnumDecl> _9577_e = jule::new_ptr<_1a379ba16_TypeEnumDecl>(_1a379ba16_TypeEnumDecl{._field_Token=(*(_95539_tokens))[_9567_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if (((*((*(_9577_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Ident=(*(*(_9577_e))._field_Token.alloc)._field_Kind;
	_9567_i+=3LL;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _9677_itemTokens = _1ab3bb6e9_range(&(_9567_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _95539_tokens);;
	if ((_9677_itemTokens == nullptr)) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9577_e;;
	} else if ((_9567_i < (*(_95539_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_95539_tokens))[_9567_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Public=_1ab88076d_IsPub((*_9577_e.alloc)._field_Ident);
	(*_9577_e.alloc)._field_End=(*(_95539_tokens))[(_9567_i - 1LL)];
	(*_9577_e.alloc)._field_Items=_1ab3c5ec8_buildTypeEnumItems(_self_, &(_9677_itemTokens));
	return _9577_e;;
}



inline jule::Ptr<_1ab6c4bab_Expr> _1ab3c6715_buildEnumItemExpr(jule::Ptr<_1ab3bd047_parser> _self_, jule::I64* _98239_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _98252_tokens) {
	jule::I64 _9837_braceN = 0LL;;
	jule::I64 _9843_exprStart = (*(_98239_i));;
	for (; ((*(_98239_i)) < (*(_98252_tokens)).len()); ((*(_98239_i)))++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _9864_t = (*(_98252_tokens))[(*(_98239_i))];;
			{
				auto &_match_expr{ (*(_9864_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b15e47b8:;
					{
						(_9837_braceN)++;
						goto _iter_next_1b15e3c4b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b15e4ae8:;
					{
						(_9837_braceN)--;
					}
				}
				_match_end_1b15e4840:;
			};
			if ((_9837_braceN > 0LL)) {
				goto _iter_next_1b15e3c4b;
			};
			if ((((*(_9864_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_98239_i)) + 1LL) >= (*(_98252_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _100213_exprTokens = nullptr;;
				if (((*_9864_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart, (*(_98239_i)));
				} else {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart);
				};
				return _1ab3be1d0_buildExpr(_self_, &(_100213_exprTokens));;
			};
		}
	_iter_next_1b15e3c4b:;
	}
	_iter_end_1b15e3c4b:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>> _1ab3c6a56_buildEnumItems(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _101436_tokens) {
	jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>> _10157_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a3799eba_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _10167_i = 0LL;;
	for (; (_10167_i < (*(_101436_tokens)).len()); (_10167_i)++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _10188_t = (*(_101436_tokens))[_10167_i];;
			jule::Ptr<_1a3799eba_EnumItemDecl> _10198_item = jule::new_ptr<_1a3799eba_EnumItemDecl>(_1a3799eba_EnumItemDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
			(*_10198_item.alloc)._field_Token=_10188_t;
			if (((*((*_10198_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1ab3bda2b_pushErr(_self_.ptr(), (*_10198_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10198_item.alloc)._field_Ident=(*(*(_10198_item))._field_Token.alloc)._field_Kind;
			if ((((_10167_i + 1LL) >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[(_10167_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_10167_i + 1LL) < (*(_101436_tokens)).len())) {
					(_10167_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
				goto _iter_next_1b15e869b;
			};
			(_10167_i)++;
			_10188_t=(*(_101436_tokens))[_10167_i];
			(_10167_i)++;
			if (((*(_10188_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1ab3bda2b_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1b15e869b;
			};
			if (((_10167_i >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[_10167_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1ab3bda2b_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1b15e869b;
			};
			(*_10198_item.alloc)._field_Expr=_1ab3c6715_buildEnumItemExpr(_self_, &(_10167_i), _101436_tokens);
			{ jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
		}
	_iter_next_1b15e869b:;
	}
	_iter_end_1b15e869b:;;
	return _10157_items;;
}



inline jule::Ptr<_1a379aa7b_EnumDecl> _1ab3c6d97_buildEnumDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _105135_tokens) {
	if (((*(_105135_tokens)).len() < 3LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*(_105135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a379aa7b_EnumDecl> _10567_e = jule::new_ptr<_1a379aa7b_EnumDecl>(_1a379aa7b_EnumDecl{._field_Token=(*(_105135_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
	if (((*((*(_10567_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Ident=(*(*(_10567_e))._field_Token.alloc)._field_Kind;
	jule::I64 _10647_i = 2LL;;
	if (((*((*(_105135_tokens))[_10647_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_10647_i)++;
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_, (*(_105135_tokens))[(_10647_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
		({
			__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, _105135_tokens, (&(_10647_i)), true);
			(*_10567_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1ab3bd377_stop(_self_);
			_1ab3bda2b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
	} else {
		(*_10567_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _10817_itemTokens = _1ab3bb6e9_range(&(_10647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _105135_tokens);;
	if ((_10817_itemTokens == nullptr)) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10567_e;;
	} else if ((_10647_i < (*(_105135_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_105135_tokens))[_10647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Public=_1ab88076d_IsPub((*_10567_e.alloc)._field_Ident);
	(*_10567_e.alloc)._field_End=(*(_105135_tokens))[(_10647_i - 1LL)];
	(*_10567_e.alloc)._field_Items=_1ab3c6a56_buildEnumItems(_self_, &(_10817_itemTokens));
	return _10567_e;;
}



inline jule::Any _1ab3c71d8_buildNodeEnumDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _109639_tokens) {
	if ((((*(_109639_tokens)).len() > 3LL) && ((*((*(_109639_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_109639_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1ab3c6319_buildTypeEnumDecl(_self_, _109639_tokens), &__jule_any_type70);;
		};
	};
	return jule::Any(_1ab3c6d97_buildEnumDecl(_self_, _109639_tokens), &__jule_any_type69);;
}



inline jule::Ptr<_1a379bcd0_FieldDecl> _1ab3c7529_buildField(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _110531_tokens) {
	jule::Ptr<_1a379bcd0_FieldDecl> _11067_f = jule::new_ptr<_1a379bcd0_FieldDecl>(_1a379bcd0_FieldDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	(*_11067_f.alloc)._field_Mutable=((*(_110531_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_11067_f.alloc)._field_Mutable) {
		if ((_110531_tokens.len() == 1LL)) {
			_1ab3bda2b_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(1LL);;
	};
	(*_11067_f.alloc)._field_Token=_110531_tokens[0LL];
	if (((*((*_11067_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_, (*_11067_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11067_f.alloc)._field_Ident=(*(*(_11067_f))._field_Token.alloc)._field_Kind;
	if ((_110531_tokens.len() == 1LL)) {
		_1ab3bda2b_pushErr(_self_, _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110531_tokens.len() < 3LL) || ((*(_110531_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1ab3bda2b_pushErr(_self_, _110531_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110531_tokens).mut_slice(2LL);;
	jule::I64 _11347_i = 0LL;;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_110531_tokens), (&(_11347_i)), true);
		(*_11067_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11347_i < _110531_tokens.len())) {
		jule::Ptr<_1ab6a54d8_Token> _11374_token = _110531_tokens[_11347_i];;
		if (((*(_11374_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ab3bda2b_pushErr(_self_, _110531_tokens[_11347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11347_i)++;
		if ((_11347_i >= _110531_tokens.len())) {
			_1ab3bda2b_pushErr(_self_, _11374_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(_11347_i);;
		(*_11067_f.alloc)._field_Default=_1ab3be1d0_buildExpr(_self_, &(_110531_tokens));
	};
	(*_11067_f.alloc)._field_Public=_1ab88076d_IsPub((*_11067_f.alloc)._field_Ident);
	return _11067_f;;
}



inline jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>> _1ab3c786a_buildStructDeclFields(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _115442_tokens) {
	jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>> _115511_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _11567_stmts = _1ab39e853_splitStmts(&(_115442_tokens));;
	{
		auto expr = &(_11567_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b161a57a:;
		if (it != expr_end) {
			jule::Ptr<_1ab39e49b_stmt> _115715_stmt = *it;
			{
				_115442_tokens=(*(_115715_stmt))._field_tokens;
				jule::Ptr<_1a379bcd0_FieldDecl> _11598_f = _1ab3c7529_buildField(_self_, _115442_tokens);;
				{ jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>> &__jule_push_dest = _115511_fields; __jule_push_dest.push(_11598_f); };
			}
			_iter_next_1b161a57a:;
			++it;
			goto _iter_begin_1b161a57a;
		}
		_iter_end_1b161a57a:;
	};
	return _115511_fields;;
}



inline jule::Ptr<_1a379c6c6_StructDecl> _1ab3c7bab_buildStructDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _116537_tokens) {
	if (((*(_116537_tokens)).len() < 3LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*(_116537_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _11717_i = 1LL;;
	jule::Ptr<_1a379c6c6_StructDecl> _11727_s = jule::new_ptr<_1a379c6c6_StructDecl>(_1a379c6c6_StructDecl{._field_Token=(*(_116537_tokens))[_11717_i], ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>(nullptr)});;
	if (((*((*(_11727_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11717_i)++;
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	(*_11727_s.alloc)._field_Ident=(*(*(_11727_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1ab6a54d8_Token> _11863_errorToken = (*(_116537_tokens))[_11717_i];;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _11877_genericsTokens = _1ab3bb6e9_range(&(_11717_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _116537_tokens);;
	if ((_11877_genericsTokens != nullptr)) {
		(*_11727_s.alloc)._field_Generics=_1ab3c203a_buildGenerics(_self_, &(_11877_genericsTokens), &(_11863_errorToken));
	};
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_116537_tokens))[(_11717_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _11977_bodyTokens = _1ab3bb6e9_range(&(_11717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116537_tokens);;
	if ((_11977_bodyTokens == nullptr)) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	if ((_11717_i < (*(_116537_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11727_s.alloc)._field_Public=_1ab88076d_IsPub((*_11727_s.alloc)._field_Ident);
	(*_11727_s.alloc)._field_Fields=_1ab3c786a_buildStructDeclFields(_self_, _11977_bodyTokens);
	(*_11727_s.alloc)._field_End=(*(_116537_tokens))[(_11717_i - 1LL)];
	return _11727_s;;
}



inline void _1ab3c7e64_checkMethodReceiver(_1ab3bd047_parser* _self_, jule::Ptr<_1a3793854_FnDecl>* _121336_f) {
	if ((*((*(_121336_f))))._field_Statically) {
		if ((((*((*(_121336_f))))._field_Params.len() > 0LL) && _1a37927a9_IsSelf((*((*(_121336_f))))._field_Params[0LL].ptr()))) {
			_1ab3bda2b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121336_f))))._field_Params.len() == 0LL)) {
		_1ab3bda2b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3792402_ParamDecl> _12253_param = (*((*(_121336_f))))._field_Params[0LL];;
	if ((!(_1a37927a9_IsSelf(_12253_param.ptr())))) {
		_1ab3bda2b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab3c82c7_buildTraitBody(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a379ce13_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _123260_tokens) {
	jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _12337_stmts = _1ab39e853_splitStmts(&(_123260_tokens));;
	{
		auto expr = &(_12337_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b162bdd8:;
		if (it != expr_end) {
			jule::Ptr<_1ab39e49b_stmt> _123415_stmt = *it;
			{
				_123260_tokens=(*(_123415_stmt))._field_tokens;
				if ((_123260_tokens.len() == 0LL)) {
					goto _iter_next_1b162bdd8;
				};
				{
					auto &_match_expr{ (*(_123260_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1b1630a57:;
						{
							jule::Ptr<_1a3793854_FnDecl> _12419_f = _1ab3c4bb9_buildFn(_self_, &(_123260_tokens), true, true);;
							if ((_12419_f == nullptr)) {
								goto _match_end_1b162d1a3;
							};
							_1ab3c7e64_checkMethodReceiver(_self_, &(_12419_f));
							if (((*(_12419_f))._field_Generics.len() > 0LL)) {
								_1ab3bda2b_pushErr(_self_, (*(_12419_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a3793854_FnDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Methods; __jule_push_dest.push(_12419_f); };
						}
					}
					else {
						_case_begin_1b162c999:;
						{
							jule::I64 _12519_i = 0LL;;
							jule::Ptr<_1ab6c0877_TypeDecl> _12529_ti;
							jule::Bool _125213_ok;
							({
								__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_123260_tokens), (&(_12519_i)), true);
								_12529_ti = __jule_assign_result.__jule_result_arg0;
								_125213_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125213_ok))) {
								goto _match_end_1b162d1a3;
							};
							if ((_12519_i < _123260_tokens.len())) {
								_1ab3bda2b_pushErr(_self_, _123260_tokens[_12519_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Inherits; __jule_push_dest.push(_12529_ti); };
						}
					}
					_match_end_1b162d1a3:;
				};
			}
			_iter_next_1b162bdd8:;
			++it;
			goto _iter_begin_1b162bdd8;
		}
		_iter_end_1b162bdd8:;
	};
}



inline jule::Ptr<_1a379ce13_TraitDecl> _1ab3c8618_buildTraitDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _126436_tokens) {
	if (((*(_126436_tokens)).len() < 3LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), (*(_126436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a379ce13_TraitDecl> _12697_t = jule::new_ptr<_1a379ce13_TraitDecl>(_1a379ce13_TraitDecl{._field_Token=(*(_126436_tokens))[1LL], ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a3793854_FnDecl>>(nullptr)});;
	if (((*((*(_12697_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3bda2b_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Ident=(*(*(_12697_t))._field_Token.alloc)._field_Kind;
	jule::I64 _12777_i = 2LL;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _12787_bodyTokens = _1ab3bb6e9_range(&(_12777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _126436_tokens);;
	if ((_12787_bodyTokens == nullptr)) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12777_i < (*(_126436_tokens)).len())) {
		_1ab3bda2b_pushErr(_self_, (*(_126436_tokens))[_12777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Public=_1ab88076d_IsPub((*_12697_t.alloc)._field_Ident);
	_1ab3c82c7_buildTraitBody(_self_, &(_12697_t), _12787_bodyTokens);
	(*_12697_t.alloc)._field_End=(*(_126436_tokens))[(_12777_i - 1LL)];
	return _12697_t;;
}



inline jule::Ptr<_1a3793854_FnDecl> _1ab3c8959_buildBindFn(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _129432_tokens) {
	(_129432_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3793854_FnDecl> _12967_f = _1ab3c4bb9_buildFn(_self_, &(_129432_tokens), false, true);;
	if ((_12967_f != nullptr)) {
		(*_12967_f.alloc)._field_Public=false;
		(*_12967_f.alloc)._field_Binded=true;
	};
	return _12967_f;;
}



inline jule::Ptr<_1a3794a0e_VarDecl> _1ab3c8c9a_buildBindVar(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _130433_tokens) {
	(_130433_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3794a0e_VarDecl> _13067_v = _1ab3c17ed_buildVar(_self_, _130433_tokens);;
	if ((_13067_v != nullptr)) {
		(*_13067_v.alloc)._field_Public=false;
		(*_13067_v.alloc)._field_Binded=true;
		if (((*_13067_v.alloc)._field_Expr != nullptr)) {
			_1ab3bda2b_pushErr(_self_, (*_13067_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13067_v;;
}



inline jule::Ptr<_1a379c6c6_StructDecl> _1ab3c90db_buildBindStruct(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _131736_tokens) {
	(_131736_tokens).mut_slice(1LL);;
	jule::Ptr<_1a379c6c6_StructDecl> _13197_s = _1ab3c7bab_buildStructDecl(_self_, &(_131736_tokens));;
	if ((_13197_s != nullptr)) {
		(*_13197_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13197_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b16405c2:;
			if (it != expr_end) {
				jule::Ptr<_1a379bcd0_FieldDecl> _132216_f = *it;
				{
					(*(_132216_f))._field_Public=true;
				}
				_iter_next_1b16405c2:;
				++it;
				goto _iter_begin_1b16405c2;
			}
			_iter_end_1b16405c2:;
		};
		(*_13197_s.alloc)._field_Binded=true;
	};
	return _13197_s;;
}



inline jule::Ptr<_1a37986b1_TypeAliasDecl> _1ab3c942c_buildBindTypeAlias(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _133139_tokens) {
	(_133139_tokens).mut_slice(1LL);;
	jule::Ptr<_1a37986b1_TypeAliasDecl> _13337_t = _1ab3c0973_buildTypeAliasDecl(_self_, &(_133139_tokens));;
	if ((_13337_t != nullptr)) {
		(*_13337_t.alloc)._field_Public=false;
		(*_13337_t.alloc)._field_Binded=true;
	};
	return _13337_t;;
}



inline jule::Ptr<_1a3799a14_UseDecl> _1ab3c976d_buildBindUse(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _134133_tokens) {
	if ((_134133_tokens.len() == 1LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), _134133_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134133_tokens).mut_slice(1LL);;
	;
	return _1ab3c578b_buildUseDecl(_self_, _134133_tokens, true);;
}



inline jule::Any _1ab3c9aae_buildBind(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _135231_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _13537_token = (*(_135231_tokens))[0LL];;
	if (((*(_135231_tokens)).len() == 1LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13537_token=(*(_135231_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13537_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b1646683:;
			{
				return jule::Any(_1ab3c8959_buildBindFn(_self_, (*(_135231_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b16462dc:;
			{
				return jule::Any(_1ab3c8c9a_buildBindVar(_self_, (*(_135231_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b1646353:;
			{
				return jule::Any(_1ab3c90db_buildBindStruct(_self_, (*(_135231_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b16463b9:;
			{
				return jule::Any(_1ab3c942c_buildBindTypeAlias(_self_, (*(_135231_tokens))), &__jule_any_type50);;
			}
		}
		else {
			_case_begin_1b1645c8c:;
			{
				_1ab3bda2b_pushErr(_self_, _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1646276:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3793854_FnDecl> _1ab3c9e00_getMethod(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _137631_tokens) {
	jule::I64 _13777_i = 0LL;;
	jule::Ptr<_1ab6a54d8_Token> _13787_token = (*(_137631_tokens))[_13777_i];;
	if (((*(_13787_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1ab3bda2b_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1ab3bda2b_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab3c4bb9_buildFn(_self_, _137631_tokens, true, false);;
}



inline void _1ab3ca263_parseImplBody(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a379d573_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _140557_tokens) {
	jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _14067_stmts = _1ab39e853_splitStmts(_140557_tokens);;
	{
		auto expr = &(_14067_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b164e5e2:;
		if (it != expr_end) {
			jule::Ptr<_1ab39e49b_stmt> _140715_stmt = *it;
			{
				(*(_140557_tokens))=(*(_140715_stmt))._field_tokens;
				jule::Ptr<_1ab6a54d8_Token> _14098_token = (*(_140557_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1b1655494:;
						{
							_1ab3be7c9_pushDirective(_self_.ptr(), _1ab3be521_buildDirective(_self_, (*(_140557_tokens))));
							goto _iter_next_1b164e5e2;
						}
					}
					_match_end_1b1655692:;
				};
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1b1656c9d:;
						{
							jule::Ptr<_1a3794a0e_VarDecl> _14189_v = _1ab3c17ed_buildVar(_self_, (*(_140557_tokens)));;
							if ((_14189_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Statics; __jule_push_dest.push(_14189_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b16568d5:;
						{
							jule::Ptr<_1a3793854_FnDecl> _14259_f = _1ab3c9e00_getMethod(_self_, _140557_tokens);;
							if ((_14259_f != nullptr)) {
								_1ab3c7e64_checkMethodReceiver(_self_, &(_14259_f));
								_1ab3cab9d_applyFnMeta(_self_, &(_14259_f));
								{ jule::Slice<jule::Ptr<_1a3793854_FnDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Methods; __jule_push_dest.push(_14259_f); };
							};
						}
					}
					else {
						_case_begin_1b16557e6:;
						{
							_1ab3bda2b_pushErr(_self_, _14098_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1b164e5e2;
						}
					}
					_match_end_1b1655cad:;
				};
			}
			_iter_next_1b164e5e2:;
			++it;
			goto _iter_begin_1b164e5e2;
		}
		_iter_end_1b164e5e2:;
	};
}



inline jule::Ptr<_1a379d573_Impl> _1ab3ca5a4_buildImpl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _143830_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _14397_token = _143830_tokens[0LL];;
	if ((_143830_tokens.len() < 2LL)) {
		_1ab3bda2b_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _14457_i = 1LL;;
	jule::Ptr<_1ab6c0877_TypeDecl> _14477_base;
	jule::Bool _144717_ok;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		_14477_base = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1ab3bda2b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a379d573_Impl> _14567_ipl = jule::new_ptr<_1a379d573_Impl>(_1a379d573_Impl{._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Base=_14477_base, ._field_Dest=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a3793854_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>>(nullptr)});;
	_14397_token=_143830_tokens[_14457_i];
	if (((*(_14397_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_14397_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_14567_ipl))._field_Base, (*_14567_ipl.alloc)._field_Dest);
			goto _julec_label_1aeabde70;
		};
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14457_i)++;
	if ((_14457_i >= _143830_tokens.len())) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		(*_14567_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1aeabde70:;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _14947_bodyTokens = _1ab3bb6e9_range(&(_14457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_143830_tokens));;
	if ((_14947_bodyTokens == nullptr)) {
		_1ab3bd377_stop(_self_);
		_1ab3bda2b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14457_i < _143830_tokens.len())) {
		_1ab3bda2b_pushErr(_self_, _143830_tokens[_14457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14567_ipl.alloc)._field_End=_143830_tokens[(_14457_i - 1LL)];
	_1ab3ca263_parseImplBody(_self_, &(_14567_ipl), &(_14947_bodyTokens));
	return _14567_ipl;;
}



inline jule::Any _1ab3ca8e5_buildNodeData(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _150935_tokens) {
	jule::Ptr<_1ab6a54d8_Token> _15107_token = (*(_150935_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15107_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abb346e2:;
			{
				jule::Ptr<_1a3793854_FnDecl> _15148_f = _1ab3c4bb9_buildFn(_self_, _150935_tokens, false, false);;
				if ((_15148_f != nullptr)) {
					(*_15148_f.alloc)._field_Global=true;
				};
				return jule::Any(_15148_f, &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1abb34dda:;
			{
				return jule::Any(_1ab3c17ed_buildVar(_self_, (*(_150935_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1abb34e51:;
			{
				return jule::Any(_1ab3c0973_buildTypeAliasDecl(_self_, _150935_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1abb3435c:;
			{
				return _1ab3c71d8_buildNodeEnumDecl(_self_, _150935_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1abb343c3:;
			{
				return jule::Any(_1ab3c7bab_buildStructDecl(_self_, _150935_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1abb34439:;
			{
				return jule::Any(_1ab3c8618_buildTraitDecl(_self_, _150935_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1abb344a0:;
			{
				return jule::Any(_1ab3ca5a4_buildImpl(_self_, (*(_150935_tokens))), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1abb34516:;
			{
				return _1ab3c9aae_buildBind(_self_, _150935_tokens);;
			}
		}
		else {
			_case_begin_1ab878dd7:;
			{
				_1ab3bda2b_pushErr(_self_.ptr(), _15107_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abb342e6:;
	};
}



inline void _1ab3cab9d_applyFnMeta(_1ab3bd047_parser* _self_, jule::Ptr<_1a3793854_FnDecl>* _154232_f) {
	(*((*(_154232_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ab3cae56_applyMeta(_1ab3bd047_parser* _self_, _1ab6be876_Node* _154730_node) {
	{
		auto &_match_expr{ (*(_154730_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1abb3b1cc:;
			{
				jule::Ptr<_1a3794a0e_VarDecl> _15508_v = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a3794a0e_VarDecl>();;
				if ((_15508_v == nullptr)) {
					return;;
				};
				(*(_15508_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1abb3ae35:;
			{
				jule::Ptr<_1a3793854_FnDecl> _15578_f = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a3793854_FnDecl>();;
				if ((_15578_f == nullptr)) {
					return;;
				};
				_1ab3cab9d_applyFnMeta(_self_, &(_15578_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1abb3b276:;
			{
				jule::Ptr<_1a379c6c6_StructDecl> _15638_sd = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a379c6c6_StructDecl>();;
				if ((_15638_sd == nullptr)) {
					return;;
				};
				(*(_15638_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1abb3b144:;
	};
}



inline void _1ab3cb20e_pushUseDecl(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1a3799a14_UseDecl>* _157233_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a3799a14_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157233_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1ab3bda2b_pushErr(_self_, (*((*(_157233_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1ab3bdd8e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab3cb550_pushMetaNodes(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _158035_tokens) {
	{
		auto &_match_expr{ (*((*(_158035_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1abb42887:;
			{
				;
				jule::Ptr<_1a3799a14_UseDecl> _15848_decl = _1ab3c578b_buildUseDecl(_self_.ptr(), (*(_158035_tokens)), false);;
				_1ab3cb20e_pushUseDecl(_self_, &(_15848_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1abb4290e:;
			{
				if ((((*(_158035_tokens)).len() > 1LL) && ((*((*(_158035_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a3799a14_UseDecl> _15899_decl = _1ab3c976d_buildBindUse(_self_, (*(_158035_tokens)));;
					_1ab3cb20e_pushUseDecl(_self_, &(_15899_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1abb42975:;
			{
				_1ab3be7c9_pushDirective(_self_.ptr(), _1ab3be521_buildDirective(_self_, (*(_158035_tokens))));
				return true;;
			}
		}
		_match_end_1abb42777:;
	};
	return false;;
}



inline _1ab6be876_Node _1ab3cb891_parseNode(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _160031_st) {
	_1ab6be876_Node _16017_node = _1ab6be876_Node{._field_Token=(*(_160031_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1ab3cb550_pushMetaNodes(_self_, _160031_st)) {
		return _16017_node;;
	};
	jule::Any _16097_data = _1ab3ca8e5_buildNodeData(_self_, _160031_st);;
	if ((_16097_data == nullptr)) {
		return _16017_node;;
	};
	_16017_node._field_Data=_16097_data;
	_1ab3cae56_applyMeta(_self_, &(_16017_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ab3bda2b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16017_node;;
}



inline void _1ab3cbb49_appendNode(jule::Ptr<_1ab3bd047_parser> _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _162432_st) {
	if (((*(_162432_st)).len() == 0LL)) {
		return;;
	};
	_1ab6be876_Node _16287_node = _1ab3cb891_parseNode(_self_, _162432_st);;
	if (((_16287_node._field_Data != nullptr) && (!(_1ab3bd60d_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1ab6be876_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16287_node; __jule_collection; }));
	};
}



inline void _1ab3cc122_removeRange(_1ab3bd047_parser* _self_, jule::I64 _163427_i, jule::U64 _163435_id, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _163451_tokens, jule::Slice<jule::I64>* _163481_ranges) {
	jule::U64 _16353_close = _1ab3bc200_getCloseOfBrace(_163435_id);;
	for (; (_163427_i >= 0LL); (_163427_i)--) {
		{
			jule::Ptr<_1ab6a54d8_Token> _16374_tok = (*(_163451_tokens))[(*(_163481_ranges))[_163427_i]];;
			if (((*(_16374_tok))._field_Id != _16353_close)) {
				goto _iter_next_1abb4cb39;
			};
			(*(_163481_ranges))=jule::append((*(_163481_ranges)).slice(0LL, _163427_i),(*(_163481_ranges)).slice((_163427_i + 1LL)));
			goto _iter_end_1abb4cb39;
		}
	_iter_next_1abb4cb39:;
	}
	_iter_end_1abb4cb39:;;
}



inline void _1ab3cc540_pushWrongOrderCloseErr(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6a54d8_Token>* _164639_t, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _164658_tokens, jule::Slice<jule::I64>* _164684_ranges) {
	{
		auto &_match_expr{ (*((*(_164658_tokens))[(*(_164684_ranges))[((*(_164684_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1abb50048:;
			{
				_1ab3bda2b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1abb500c0:;
			{
				_1ab3bda2b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1abb50136:;
			{
				_1ab3bda2b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abb4ee38:;
	};
}



inline void _1ab3cca18_pushRangeClose(_1ab3bd047_parser* _self_, jule::Ptr<_1ab6a54d8_Token> _165730_t, jule::U64 _165748_left, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _165766_tokens, jule::Slice<jule::I64>* _165796_ranges) {
	jule::I64 _16583_n = (*(_165796_ranges)).len();;
	if ((_16583_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165730_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1abb5314a:;
				{
					_1ab3bda2b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1abb531c2:;
				{
					_1ab3bda2b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1abb53238:;
				{
					_1ab3bda2b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1abb5307e:;
		};
		return;;
	} else if (((*((*(_165766_tokens))[(*(_165796_ranges))[(_16583_n - 1LL)]]))._field_Id != _165748_left)) {
		_1ab3cc540_pushWrongOrderCloseErr(_self_, &(_165730_t), _165766_tokens, _165796_ranges);
	};
	_1ab3cc122_removeRange(_self_, (_16583_n - 1LL), (*(_165730_t))._field_Id, _165766_tokens, _165796_ranges);
}



inline void _1ab3cccc1_checkRanges(_1ab3bd047_parser* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _167528_tokens) {
	jule::Slice<jule::I64> _167611_ranges = nullptr;;
	{
		auto expr = _167528_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb56516:;
		if (it != expr_end) {
			jule::I64 _16787_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> *_167810_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167810_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1abb573b3:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _167611_ranges; __jule_push_dest.push(_16787_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abb5744b:;
						{
							_1ab3cca18_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U64>(74LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1abb574b2:;
						{
							_1ab3cca18_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U64>(72LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1abb57528:;
						{
							_1ab3cca18_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U64>(76LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					_match_end_1abb572e7:;
				};
			}
			_iter_next_1abb56516:;
			++it;
			_16787_i++;
			goto _iter_begin_1abb56516;
		}
		_iter_end_1abb56516:;
	};
	{
		auto expr = &(_167611_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb565e3:;
		if (it != expr_end) {
			jule::I64 _169310_i = *it;
			{
				jule::Ptr<_1ab6a54d8_Token> _16944_token = (*(_167528_tokens))[_169310_i];;
				{
					auto &_match_expr{ (*(_16944_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abb5a3d8:;
						{
							_1ab3bda2b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1abb5a44e:;
						{
							_1ab3bda2b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1abb5a4b5:;
						{
							_1ab3bda2b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1abb5a152:;
				};
			}
			_iter_next_1abb565e3:;
			++it;
			goto _iter_begin_1abb565e3;
		}
		_iter_end_1abb565e3:;
	};
}



inline void _1ab3cd079_parse(jule::Ptr<_1ab3bd047_parser> _self_, jule::Ptr<_1ab6aadb2_Fileset>* _170627_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1ab6bd9b8_AST>(_1ab6bd9b8_AST{._field_File=(*(_170627_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1a3799a14_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1ab6be876_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1ab3ac762_exprBuilder>(_1ab3ac762_exprBuilder{._field_p=_self_});
	_1ab3cccc1_checkRanges(_self_, &((*((*(_170627_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _17197_stmts = _1ab39e853_splitStmts(&((*((*(_170627_f))))._field_Tokens));;
	jule::I64 _17227_i = 0LL;;
	for (; (_17227_i < _17197_stmts.len()); (_17227_i)++) {
		{
			jule::Ptr<_1ab39e49b_stmt> _17248_stmt = _17197_stmts[_17227_i];;
			if (((*(_17248_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_17248_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1abb5e2cc;
			};
			if ((!(_1a389005a_IsTopDirective((*((*_17248_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1abb5e2cc;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6bec94_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab3be521_buildDirective(_self_, (*_17248_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1abb5e2cc:;
	}
	_iter_end_1abb5e2cc:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17227_i < _17197_stmts.len()) && (!(_1ab3bd60d_stopped(_self_)))); (_17227_i)++) {
		{
			jule::Ptr<_1ab39e49b_stmt> _17418_stmt = _17197_stmts[_17227_i];;
			_1ab3cbb49_appendNode(_self_, &((*(_17418_stmt))._field_tokens));
		}
	_iter_next_1abb622d0:;
	}
	_iter_end_1abb622d0:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ab3bda2b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1ab3ce7c8_pushErr(_1ab3ce201_typeBuilder* _self_, jule::Ptr<_1ab6a54d8_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1ab3bda2b_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ab3ceb3b_pushSuggestion(_1ab3ce201_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1ab3bdd8e_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3cedc2_buildNamespace(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6c0877_TypeDecl> _457_t = jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1ab6c1625_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1ab6c1625_NamespaceTypeDecl>(_1ab6c1625_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Kind=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1ab3ce7c8_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab3ceb3b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1ab3ce7c8_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab3ceb3b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1ab3ce7c8_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab3ceb3b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1ab3ce7c8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab3ceb3b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1ab3d0675_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type93);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _1ab3d0158_buildGenerics(_1ab3ce201_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab6a54d8_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _857_parts = _1ab3d03de_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1ab3ce7c8_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6c0877_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb72477:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _9215_part = *it;
			{
				jule::I64 _938_j = 0LL;;
				jule::Ptr<_1ab6c0877_TypeDecl> _948_t;
				({
					__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1ab3ce7c8_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1abb72477:;
			++it;
			goto _iter_begin_1abb72477;
		}
		_iter_end_1abb72477:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1ab3d03de_identGenerics(_1ab3ce201_typeBuilder* _self_) {
	jule::I64 _1043_first = (*((*(_self_))._field_i));;
	jule::I64 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1abb76a0e:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1abb76d3e:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1abb76a86:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1abb75bd9;
			};
		}
	_iter_next_1abb75bd9:;
	}
	_iter_end_1abb75bd9:;;
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1207_parts;
	jule::Slice<_1a388d1ac_Log> _12014_errors;
	({
		__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3bbe69_parts(&(_1197_tokens), static_cast<jule::U64>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d0675_buildIdent(_1ab3ce201_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1ab3cedc2_buildNamespace(_self_);;
	};
	jule::Ptr<_1ab6a54d8_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ab6c0e82_IdentTypeDecl> _1337_it = jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab6c0877_TypeDecl> _1397_itd = jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type77)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1ab3d0158_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ab3ce7c8_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ab3ce7c8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1ab6c124b_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1ab6c124b_SubIdentTypeDecl>(_1ab6c124b_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1ab6c0877_TypeDecl> _1587_ident = _1ab3d0675_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1abb829b5:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1ab6c0e82_IdentTypeDecl>(&__jule_any_type77); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1abb7bdbb:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1ab6c124b_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1abb8293d:;
	};
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type89)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d090b_buildCppLink(_1ab3ce201_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1ab3ce7c8_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1ab6c0877_TypeDecl> _1777_t = _1ab3d0675_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1ab6c0e82_IdentTypeDecl>(&__jule_any_type77)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d0b92_buildFn(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a3793854_FnDecl> _1847_f = _1ab3c4713_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3793bea_IsAnon(_1847_f.ptr())))) {
		_1ab3ce7c8_pushErr(_self_, (*(_1847_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type67)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d0e28_buildPtr(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab3ce7c8_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab6c23a1_PtrTypeDecl>(_1ab6c23a1_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type73)});;
	};
	jule::Ptr<_1ab6c0877_TypeDecl> _2157_elem = _1ab3d1e7e_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab6c23a1_PtrTypeDecl>(_1ab6c23a1_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d11ae_buildSptr(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab3ce7c8_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab6c0877_TypeDecl> _2367_elem = _1ab3d1e7e_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab6c1922_SptrTypeDecl>(_1ab6c1922_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1445_buildSlc(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab6c0877_TypeDecl> _2527_elem = _1ab3d1e7e_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab6c1ca7_SlcTypeDecl>(_1ab6c1ca7_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d16cb_buildArr(_1ab3ce201_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _2657_exprTokens = _1ab3bb6e9_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab3ce7c8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1ab6c0877_TypeDecl> _2717_elem = _1ab3d1e7e_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab6c2b43_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1ab6c2b43_ArrTypeDecl>(_1ab6c2b43_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1ab6c4bab_Expr>(nullptr)});;
	jule::Ptr<_1ab6a54d8_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1ab3be1d0_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type71)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1962_buildMap(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab3ce7c8_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _3027_keyTokens = _1ab3bb6e9_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab3ce7c8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1ab3ce7c8_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1ab6c3391_MapTypeDecl> _3117_mapt = jule::new_ptr<_1ab6c3391_MapTypeDecl>(_1ab6c3391_MapTypeDecl{._field_Key=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr)});;
	jule::I64 _3127_j = 0LL;;
	jule::Ptr<_1ab6c0877_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1ab3ce7c8_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1ab6c0877_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab3c0632_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type75)});;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1be8_buildEnumerable(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ab3ce7c8_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1ab3d1445_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ab3d16cb_buildArr(_self_);;
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3d1e7e_step(_1ab3ce201_typeBuilder* _self_) {
	jule::Ptr<_1ab6a54d8_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1abba31ab:;
			{
				return _1ab3d0675_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1abba3596:;
			{
				return _1ab3d090b_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abba360c:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1ab6c0877_TypeDecl> _3589_f = _1ab3d0b92_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1a3793854_FnDecl>(&__jule_any_type67)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1abba3673:;
			{
				return _1ab3d0b92_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abba36d9:;
			{
				return _1ab3d0e28_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1abba3761:;
			{
				return _1ab3d11ae_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1abba37d8:;
			{
				return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1ab6c1922_SptrTypeDecl>(_1ab6c1922_SptrTypeDecl{._field_Elem=_1ab3d11ae_buildSptr(_self_)}), &__jule_any_type74)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1abba3860:;
			{
				return _1ab3d1be8_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1abba38d7:;
			{
				return _1ab3d1962_buildMap(_self_);;
			}
		}
		_match_end_1abba3233:;
	};
	((*((*(_self_))._field_i)))++;
	_1ab3ce7c8_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool _1ab3d2215_build(_1ab3ce201_typeBuilder* _self_) {
	__jule_tuple_x_1ab6c0877_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab6c0877_TypeDecl> _3897_root = _1ab3d1e7e_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ab3cd93c_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1aba618d8_CompileInfo_eq(_1aba618d8_CompileInfo *_self_, _1aba618d8_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1aba63335_pushErr(_1aba62ca2_directiveEval* _self_, jule::Ptr<_1ab6a54d8_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1a388d1ac_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1a388d61e_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1aba63731_splitOperans(_1aba62ca2_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abbcc36c:;
					{
						(_367_rangeN)++;
						goto _iter_next_1abbcb8dd;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abbcc69c:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1abbcc3e4:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1abbcb8dd;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1abbcb8dd:;
	}
	_iter_end_1abbcb8dd:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1aba63335_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1aba63a72_evalDirectiveIdent(_1aba62ca2_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd0260:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1abbd0260:;
			++it;
			goto _iter_begin_1abbd0260;
		}
		_iter_end_1abbd0260:;
	};
	return false;;
}



inline jule::Bool _1aba63db3_evalDirectivePart(_1aba62ca2_directiveEval* _self_, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1aba63335_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1aba63a72_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1aba64149_eval(_1aba62ca2_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1aba63335_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1047_logicalOrParts = _1aba63731_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd5c7c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> _1118_logicalAndParts = _1aba63731_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abbd77a6:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1ab6a54d8_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1ab6a54d8_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1aba63335_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1aba63db3_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1abbd77a6:;
						++it;
						goto _iter_begin_1abbd77a6;
					}
					_iter_end_1abbd77a6:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1abbd5c7c:;
			++it;
			goto _iter_begin_1abbd5c7c;
		}
		_iter_end_1abbd5c7c:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1ab3d3447_Importer> static__1ab3d3876_New(_1aba618d8_CompileInfo _4416_info) {
	jule::Ptr<_1ab3d3447_Importer> _457_imp = jule::new_ptr<_1ab3d3447_Importer>(_1ab3d3447_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a87b8bd7_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1ab866578_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1aba62268_initVars(&((*(_457_imp))._field_vars), &(_4416_info));
	return _457_imp;;
}



inline jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _1ab3d3b0c_AllPackages(_1ab3d3447_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ab3d404c_SetModPath(_1ab3d3447_Importer* _self_, jule::Str _6126_path) {
	(*(_self_))._field_mod=_6126_path;
}



inline jule::Str _1ab3d42d3_GetModPath(_1ab3d3447_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ab3d4624_ModById(_1ab3d3447_Importer* _self_, jule::I64 _6919_id) {
	return (*(_self_))._field_mods[_6919_id];;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab3d4965_GetImport(_1ab3d3447_Importer* _self_, jule::Str _7325_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbddc1e:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _7415_p = *it;
			{
				if (_1a87b2e78_EqualFold((*(_7415_p))._field_Path, _7325_path)) {
					return _7415_p;;
				};
			}
			_iter_next_1abbddc1e:;
			++it;
			goto _iter_begin_1abbddc1e;
		}
		_iter_end_1abbddc1e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log _1ab3d4d61_ImportPackage(_1ab3d3447_Importer* _self_, jule::Str _8329_path, jule::Bool _8340_updateMod) {
	__jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	jule::Slice<_1a68ca14c_Dir> _847_dirents = ({
		auto except = static__1a87b8038_Read(_8329_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1a388d1ac_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab3d2e5d_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8329_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1a68ca14c_Dir>(nullptr);});
	});;
	if (_8340_updateMod) {
		jule::Str _894_newMod = _1ab87ec12_FindModuleFileDeep(_8329_path);;
		if ((_894_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_894_newMod;
			jule::Slice<_1a388d1ac_Log> _929_errs = _1ab87eecb_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_929_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _929_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> _997_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab6bd9b8_AST>>::alloc(0LL, _847_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab6bd9b8_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_847_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe0e52:;
		if (it != expr_end) {
			_1a68ca14c_Dir _10010_dirent = *it;
			{
				if ((_1a69700d2_IsDir(&_10010_dirent._field_Stat) || (!(_1a87a8e91_HasSuffix(_10010_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1abbe0e52;
				};
				jule::Str _1064__path = _1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8329_path; (*it++) = _10010_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1ab6aadb2_Fileset> _1078_file = static__1ab6ab313_New(_1064__path);;
				_1ab6ab5bb_Fill(_1078_file.ptr(), _1ab3d2b50_readBuff((*_1078_file.alloc)._field_Path));
				jule::Slice<_1a388d1ac_Log> _1098_errors = _1ab6bd567_Lex(_1078_file, static_cast<jule::I64>(0LL));;
				if ((_1098_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1098_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab39bba2_FileInfo> _1148_finfo = _1ab39c2bd_ParseFile(_1078_file);;
				if (((*(_1148_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1148_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1aba60a80_isPassFileAnnotation(_10010_dirent._field_Name)))) {
					goto _iter_next_1abbe0e52;
				};
				jule::Bool _1244_r;
				jule::Slice<_1a388d1ac_Log> _12411_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3d5548_isPassBuildDirectives(_self_, &((*_1148_finfo.alloc)._field_Ast));
					_1244_r = __jule_assign_result.__jule_result_arg0;
					_12411_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12411_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12411_logs;
					return __jule_func_result;;
				};
				if ((!(_1244_r))) {
					goto _iter_next_1abbe0e52;
				};
				{ jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> &__jule_push_dest = _997_asts; __jule_push_dest.push((*_1148_finfo.alloc)._field_Ast); };
			}
			_iter_next_1abbe0e52:;
			++it;
			goto _iter_begin_1abbe0e52;
		}
		_iter_end_1abbe0e52:;
	};
	__jule_func_result.__jule_result_arg0 = _997_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab3d5119_Imported(_1ab3d3447_Importer* _self_, jule::Ptr<_1ab866578_ImportInfo> _14028_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe3086:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _14210_p = *it;
			{
				if ((((*(_14210_p))._field_Binded == (*(_14028_imp))._field_Binded) && _1a87b2e78_EqualFold((*_14210_p.alloc)._field_Path, (*_14028_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1abbe3086:;
			++it;
			goto _iter_begin_1abbe3086;
		}
		_iter_end_1abbe3086:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abbea1d1:;
			if (it != expr_end) {
				jule::I64 _1508_i = it - expr->begin();
				jule::Str _15011_mod = *it;
				{
					if (((*(_self_))._field_mod == _15011_mod)) {
						(*_14028_imp.alloc)._field_ModId=_1508_i;
						goto _julec_label_1abbe982e;
					};
				}
				_iter_next_1abbea1d1:;
				++it;
				_1508_i++;
				goto _iter_begin_1abbea1d1;
			}
			_iter_end_1abbea1d1:;
		};
		(*_14028_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1abbe982e:;
	};
	{ jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14028_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1a388d1ac_Log _1ab3d5548_isPassBuildDirectives(_1ab3d3447_Importer* _self_, jule::Ptr<_1ab6bd9b8_AST>* _16742_file) {
	__jule_tuple_bool__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16742_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe3042:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _16815_td = *it;
			{
				if (((*((*(_16815_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1abbe3042;
				};
				_1aba62ca2_directiveEval _1728_de = _1aba62ca2_directiveEval{._field_logs=jule::Slice<_1a388d1ac_Log>(nullptr), ._field_d=_16815_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1764_result = _1aba64149_eval(&_1728_de);;
				if ((_1728_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1728_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1764_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1abbe3042:;
			++it;
			goto _iter_begin_1abbe3042;
		}
		_iter_end_1abbe3042:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1ab3d977d_ExprInspector> static__1ab3d9aad_New(void) {
	return jule::new_ptr<_1ab3d977d_ExprInspector>(_1ab3d977d_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1ab3d9d66_args(_1ab3d977d_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc4415e:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1ab3da11e_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1abc4415e:;
			++it;
			goto _iter_begin_1abc4415e;
		}
		_iter_end_1abc4415e:;
	};
}



inline void _1ab3da11e_inspect(_1ab3d977d_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1abc4557d:;
			{
				jule::Ptr<_1ab07c61e_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1ab07c61e_BinaryExprModel>(&__jule_any_type113);;
				_1ab3da11e_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1ab3da11e_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1abc45704:;
			{
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112);;
				_1ab3da11e_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1abc455e4:;
			{
				jule::Ptr<_1ab07d3bc_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1ab07d3bc_StructLitExprModel>(&__jule_any_type97);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b17b4b0e:;
					if (it != expr_end) {
						jule::Ptr<_1ab07d026_StructArgExprModel> _4416_arg = *it;
						{
							_1ab3da11e_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1b17b4b0e:;
						++it;
						goto _iter_begin_1b17b4b0e;
					}
					_iter_end_1b17b4b0e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1abc459bd:;
			{
				jule::Ptr<_1ab07d3bc_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1ab07d6b9_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b17b62e7:;
					if (it != expr_end) {
						jule::Ptr<_1ab07d026_StructArgExprModel> _4916_arg = *it;
						{
							_1ab3da11e_inspect(_self_, &((*((*(_4916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1b17b62e7:;
						++it;
						goto _iter_begin_1b17b62e7;
					}
					_iter_end_1b17b62e7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1abc45a34:;
			{
				jule::Ptr<_1ab07dc4c_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95);;
				_1ab3da11e_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1abc45a9a:;
			{
				jule::Ptr<_1ab07e5ee_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30);;
				_1ab3da11e_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1ab3d9d66_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1abc45b11:;
			{
				jule::Ptr<_1ab07e9c8_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1ab07e9c8_SliceExprModel>(&__jule_any_type79);;
				_1ab3d9d66_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1abc45b77:;
			{
				jule::Ptr<_1ab082910_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1ab082910_ArrayExprModel>(&__jule_any_type87);;
				_1ab3d9d66_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1abc45bee:;
			{
				jule::Ptr<_1ab07ee7e_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42);;
				_1ab3da11e_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1ab3da11e_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1abc45c76:;
			{
				jule::Ptr<_1ab080bd8_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1ab080bd8_MapExprModel>(&__jule_any_type101);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b17bc8a3:;
					if (it != expr_end) {
						jule::Ptr<_1ab08080e_KeyValPairExprModel> _7116_entry = *it;
						{
							_1ab3da11e_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1ab3da11e_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1b17bc8a3:;
						++it;
						goto _iter_begin_1b17bc8a3;
					}
					_iter_end_1b17bc8a3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1abc45ced:;
			{
				jule::Ptr<_1ab08126b_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1ab08126b_SlicingExprModel>(&__jule_any_type94);;
				_1ab3da11e_inspect(_self_, &((*(_768_s))._field_Expr));
				_1ab3da11e_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1ab3da11e_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1abc45d75:;
			{
				jule::Ptr<_1ab0817ee_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1ab0817ee_TraitSubIdentExprModel>(&__jule_any_type99);;
				_1ab3da11e_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b17b0ee5:;
			{
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				_1ab3da11e_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b17b105b:;
			{
				jule::Ptr<_1ab082c0c_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1ab082c0c_TupleExprModel>(&__jule_any_type83);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b17c248a:;
					if (it != expr_end) {
						jule::Ptr<_1ab906a8b_Data> _9016_d = *it;
						{
							_1ab3da11e_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1b17c248a:;
						++it;
						goto _iter_begin_1b17c248a;
					}
					_iter_end_1b17c248a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b17b10c2:;
			{
				jule::Ptr<_1ab0836d0_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1ab0836d0_BuiltinNewCallExprModel>(&__jule_any_type115);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1ab3da11e_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b17b1138:;
			{
				jule::Ptr<_1ab083009_BuiltinPrintCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1ab083009_BuiltinPrintCallExprModel>(&__jule_any_type24);;
				_1ab3da11e_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b17b119e:;
			{
				jule::Ptr<_1ab083306_BuiltinPrintlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1ab083306_BuiltinPrintlnCallExprModel>(&__jule_any_type25);;
				_1ab3da11e_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b17b1215:;
			{
				jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1ab083aa9_BuiltinPanicCallExprModel>(&__jule_any_type26);;
				_1ab3da11e_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b17b128c:;
			{
				jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1ab0856b0_BuiltinErrorCallExprModel>(&__jule_any_type20);;
				_1ab3da11e_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b17b1314:;
			{
				jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1ab084060_BuiltinMakeCallExprModel>(&__jule_any_type116);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1ab3da11e_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*_1118_b.alloc)._field_Cap != nullptr)) {
					_1ab3da11e_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b17b138b:;
			{
				jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1ab084439_BuiltinAppendCallExprModel>(&__jule_any_type23);;
				_1ab3da11e_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1ab3da11e_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b17b1413:;
			{
				jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1ab084736_BuiltinLenCallExprModel>(&__jule_any_type117);;
				_1ab3da11e_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b17b148a:;
			{
				jule::Ptr<_1ab084a33_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1ab084a33_BuiltinCapCallExprModel>(&__jule_any_type118);;
				_1ab3da11e_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b17b1512:;
			{
				jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1ab084e0c_BuiltinDeleteCallExprModel>(&__jule_any_type28);;
				_1ab3da11e_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1ab3da11e_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b17b1589:;
			{
				jule::Ptr<_1ab0859ac_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1ab0859ac_SizeofExprModel>(&__jule_any_type119);;
				_1ab3da11e_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b17b1611:;
			{
				jule::Ptr<_1ab086161_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1ab086161_AlignofExprModel>(&__jule_any_type120);;
				_1ab3da11e_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b17b1688:;
			{
				jule::Ptr<_1ab0869be_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1ab0869be_FreeExprModel>(&__jule_any_type29);;
				_1ab3da11e_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b17b1710:;
			{
				jule::Ptr<_1ab0866c2_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1ab0866c2_BackendEmitExprModel>(&__jule_any_type22);;
				_1ab3d9d66_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1abc45517:;
	};
}



inline void _1ab3da482_Inspect(_1ab3d977d_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1ab3da11e_inspect(_self_, _15228_m);
}








inline jule::Bool _1ab3e15a9_MetaStrBuilder_eq(_1ab3e15a9_MetaStrBuilder *_self_, _1ab3e15a9_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1ab3e19c7_Meta_eq(_1ab3e19c7_Meta *_self_, _1ab3e19c7_Meta _other_) {
	return 
		(_self_->_field_StrBuilder == _other_._field_StrBuilder) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1ab3e19c7_Meta> static__1ab3e1db2_Collect(jule::Ptr<_1ab3d5ec7_IR> _3624_ir) {
	jule::Ptr<_1ab3e19c7_Meta> _377_meta = jule::new_ptr<_1ab3e19c7_Meta>(_1ab3e19c7_Meta{._field_StrBuilder=jule::Ptr<_1ab3e15a9_MetaStrBuilder>(nullptr), ._field_EntryPoint=jule::Ptr<_1ab0898e5_Fn>(nullptr)});;
	(*_377_meta.alloc)._field_StrBuilder=static__1ab3e217b_CollectStrBuilder(&(_3624_ir));
	return _377_meta;;
}



inline jule::Ptr<_1ab3e15a9_MetaStrBuilder> static__1ab3e217b_CollectStrBuilder(jule::Ptr<_1ab3d5ec7_IR>* _4335_ir) {
	;
	;
	jule::Ptr<_1ab866578_ImportInfo> _467_p = _1ab3e05b9_SelectImport((*((*(_4335_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_467_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _507_b = _1ab93d540_Struct((*((*(_1ab86738c_FindTypeAlias(_467_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1ab3e15a9_MetaStrBuilder> _517_meta = jule::new_ptr<_1ab3e15a9_MetaStrBuilder>(_1ab3e15a9_MetaStrBuilder{._field_Write=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1ab08c9a3_FnIns>(nullptr)});;
	;
	{
		(*_517_meta.alloc)._field_Write=(*(_1a37a647c_FindMethod(_507_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_517_meta.alloc)._field_WriteByte=(*(_1a37a647c_FindMethod(_507_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_517_meta.alloc)._field_WriteRune=(*(_1a37a647c_FindMethod(_507_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_517_meta.alloc)._field_WriteStr=(*(_1a37a647c_FindMethod(_507_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _517_meta;;
}












inline jule::Bool _1ad1cca25_specialCaseDefines_eq(_1ad1cca25_specialCaseDefines *_self_, _1ad1cca25_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1ad1ccc89_isAllMethodsLive(_1ad1cca25_specialCaseDefines* _self_, jule::Ptr<_1a37a2577_Struct> _1928_s) {
	return ((_1928_s == (*(_self_))._field_runtime_Map) || (_1928_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1ad1cd7e5_ObjectDeadCode> static__1ad1cdd67_new(jule::Ptr<_1ab3d5ec7_IR>* _3921_ir) {
	return jule::new_ptr<_1ad1cd7e5_ObjectDeadCode>(_1ad1cd7e5_ObjectDeadCode{._field_live=_1ad1cd33e_liveTable{._field_vars=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1a37a53d2_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1ab095109_Trait>>(nullptr)}, ._field_ir=(*(_3921_ir)), ._field_scd=_1ad1cca25_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1a37a2577_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1a37a2577_Struct>(nullptr)}});;
}



inline jule::Bool _1b182ea8b_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1a37a53d2_StructIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1a37a53d2_StructIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b1831780:;
			{
				_4611_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1b183164d:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18316b4:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b18316b4:;
			++it;
			_577_i++;
			goto _iter_begin_1b18316b4;
		}
		_iter_end_1b18316b4:;
	};
	return false;;
}

inline jule::Bool _1b1836983_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b18385bc:;
			{
				_4611_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1b1838501:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1838567:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b1838567:;
			++it;
			_577_i++;
			goto _iter_begin_1b1838567;
		}
		_iter_end_1b1838567:;
	};
	return false;;
}

inline jule::Bool _1b185b788_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab095109_Trait>* _4527_t) {
	jule::Slice<jule::Ptr<_1ab095109_Trait>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b185d4e3:;
			{
				_4611_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1b185d34a:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b185e5b0:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b185e5b0:;
			++it;
			_577_i++;
			goto _iter_begin_1b185e5b0;
		}
		_iter_end_1b185e5b0:;
	};
	return false;;
}

inline jule::Bool _1b18669b3_isLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab8a7289_Var>* _4527_t) {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b18683cc:;
			{
				_4611_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1b1868531:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b186906a:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b186906a:;
			++it;
			_577_i++;
			goto _iter_begin_1b186906a;
		}
		_iter_end_1b186906a:;
	};
	return false;;
}



inline void _1b1832275_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1a37a53d2_StructIns> _6532_t) {
	{
		
{
			_case_begin_1b1833b28:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a53d2_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b18328d5:;
	};
}

inline void _1b183a16d_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab08c9a3_FnIns> _6532_t) {
	{
		
{
			_case_begin_1b183b0d6:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b183a4d1:;
	};
}

inline void _1b185c217_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab095109_Trait> _6532_t) {
	{
		
{
			_case_begin_1b186067c:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab095109_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b185de2d:;
	};
}

inline void _1b1869e28_pushLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab8a7289_Var> _6532_t) {
	{
		
{
			_case_begin_1b186ab60:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b18696a8:;
	};
}



inline void _1ad1ce6d6_pushStructAsLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1a37a53d2_StructIns>* _7838_s) {
	if (_1b182ea8b_isLive(_self_, _7838_s)) {
		return;;
	};
	_1b1832275_pushLive(_self_, (*(_7838_s)));
	_1ad1ce98e_setReferencesAsLive(_self_, &((*((*(_7838_s))))._field_Refers));
	jule::Bool _843_allLive = _1ad1ccc89_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_7838_s))))._field_Decl);;
	{
		auto expr = &((*((*(_7838_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b183509c:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _8515_m = *it;
			{
				{
					auto expr = &((*(_8515_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1835971:;
					if (it != expr_end) {
						jule::Ptr<_1ab08c9a3_FnIns> _8616_ins = *it;
						{
							if (_1b1836983_isLive(_self_, &(_8616_ins))) {
								goto _iter_next_1b1835971;
							};
							if (_843_allLive) {
								_1b183a16d_pushLive(_self_, _8616_ins);
								_1ad1ce98e_setReferencesAsLive(_self_, &((*(_8616_ins))._field_Refers));
								goto _iter_next_1b1835971;
							};
							if (_1ab3dc0ee_IsTraitMethod(_7838_s, &(_8616_ins))) {
								_1b183a16d_pushLive(_self_, _8616_ins);
								_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Eq)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Gt)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_GtEq)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Lt)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_LtEq)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shl)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shr)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Add)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Sub)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Div)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mul)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mod)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAnd)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOr)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXor)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Neg)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Pos)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitNot)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_AddAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_SubAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_DivAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_MulAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ModAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShlAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShrAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOrAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAndAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXorAssign)) {
									_1b183a16d_pushLive(_self_, _8616_ins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1ab0898e5_Fn> _1249__str = _1a37a647c_FindMethod((*(_7838_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1249__str != nullptr) && static__1ab8a8752_Str(_1249__str))) {
								jule::Ptr<_1ab08c9a3_FnIns> _12610_fins = (*_1249__str.alloc)._field_Instances[0LL];;
								_1b183a16d_pushLive(_self_, _12610_fins);
								_1ad1ce98e_setReferencesAsLive(_self_, &((*(_12610_fins))._field_Refers));
							};
						}
						_iter_next_1b1835971:;
						++it;
						goto _iter_begin_1b1835971;
					}
					_iter_end_1b1835971:;
				};
			}
			_iter_next_1b183509c:;
			++it;
			goto _iter_begin_1b183509c;
		}
		_iter_end_1b183509c:;
	};
}



inline void _1ad1ce98e_setReferencesAsLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab854577_ReferenceStack>* _13441_rs) {
	if (((*(_13441_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1387_i = 0LL;;
	for (; (_1387_i < _1ab854c5e_Len((*(_13441_rs)).ptr())); (_1387_i)++) {
		{
			jule::Any _1408_ref = _1ab8550a0_At((*(_13441_rs)).ptr(), _1387_i);;
			{
				auto &_match_expr{ _1408_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1b185a479:;
					{
						jule::Ptr<_1ab095109_Trait> _1439_t = _1408_ref.unsafe_cast_ptr<_1ab095109_Trait>();;
						if (_1b185b788_isLive(_self_, &(_1439_t))) {
							goto _iter_next_1b1859610;
						};
						_1b185c217_pushLive(_self_, _1439_t);
						{
							auto expr = &((*(_1439_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b185b1a0:;
							if (it != expr_end) {
								jule::Ptr<_1ab0898e5_Fn> _14817_ins = *it;
								{
									{
										auto expr = &((*(_14817_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b185ea00:;
										if (it != expr_end) {
											jule::Ptr<_1ab08c9a3_FnIns> _14918_mins = *it;
											{
												if (_1b1836983_isLive(_self_, &(_14918_mins))) {
													goto _iter_next_1b185ea00;
												};
												_1b183a16d_pushLive(_self_, _14918_mins);
												_1ad1ce98e_setReferencesAsLive(_self_, &((*(_14918_mins))._field_Refers));
											}
											_iter_next_1b185ea00:;
											++it;
											goto _iter_begin_1b185ea00;
										}
										_iter_end_1b185ea00:;
									};
								}
								_iter_next_1b185b1a0:;
								++it;
								goto _iter_begin_1b185b1a0;
							}
							_iter_end_1b185b1a0:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type63) {
					_case_begin_1b185a2ae:;
					{
						jule::Ptr<_1ab08c9a3_FnIns> _1589_f = _1408_ref.unsafe_cast_ptr<_1ab08c9a3_FnIns>();;
						if (_1b1836983_isLive(_self_, &(_1589_f))) {
							goto _match_end_1b185a336;
						};
						if ((((*(_1589_f))._field_Owner != nullptr) && (!((*((*_1589_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1b182ea8b_isLive(_self_, &((*_1589_f.alloc)._field_Owner))))) {
								_1b1832275_pushLive(_self_, (*_1589_f.alloc)._field_Owner);
								_1ad1ce98e_setReferencesAsLive(_self_, &((*(*(_1589_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1b183a16d_pushLive(_self_, _1589_f);
						_1ad1ce98e_setReferencesAsLive(_self_, &((*_1589_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b185a4e0:;
					{
						jule::Ptr<_1ab8a7289_Var> _1719_v = _1408_ref.unsafe_cast_ptr<_1ab8a7289_Var>();;
						if (_1b18669b3_isLive(_self_, &(_1719_v))) {
							goto _match_end_1b185a336;
						};
						_1b1869e28_pushLive(_self_, _1719_v);
						_1ad1ce98e_setReferencesAsLive(_self_, &((*(_1719_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1b185a556:;
					{
						jule::Ptr<_1a37a53d2_StructIns> _1789_s = _1408_ref.unsafe_cast_ptr<_1a37a53d2_StructIns>();;
						_1ad1ce6d6_pushStructAsLive(_self_, &(_1789_s));
					}
				}
				_match_end_1b185a336:;
			};
		}
	_iter_next_1b1859610:;
	}
	_iter_end_1b1859610:;;
}



inline void _1ad1cec47_inits(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab868cea_Package>* _18427_pkg) {
	{
		auto expr = &((*((*(_18427_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b185980d:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _18515_file = *it;
			{
				{
					auto expr = &((*(_18515_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b186d02a:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _18616_f = *it;
						{
							if ((*(_18616_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ab08c9a3_FnIns> _18810_ins = (*(_18616_f))._field_Instances[0LL];;
								if ((!(_1b1836983_isLive(_self_, &(_18810_ins))))) {
									_1b183a16d_pushLive(_self_, _18810_ins);
								};
								_1ad1ce98e_setReferencesAsLive(_self_, &((*(_18810_ins))._field_Refers));
							};
						}
						_iter_next_1b186d02a:;
						++it;
						goto _iter_begin_1b186d02a;
					}
					_iter_end_1b186d02a:;
				};
			}
			_iter_next_1b185980d:;
			++it;
			goto _iter_begin_1b185980d;
		}
		_iter_end_1b185980d:;
	};
}



inline void _1ad1d0000_collectLivePackage(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab868cea_Package>* _19840_pkg) {
	_1ad1cec47_inits(_self_, _19840_pkg);
	_1ab3d8bcd_IterFiles(_19840_pkg, jule::__new_closure<void,jule::Ptr<_1ab090be8_SymTab>*>((void*)__jule_anon_1b1870d0d, jule::Ptr<__jule_anon_1b1870d0d_ctx>::make(__jule_anon_1b1870d0d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b1870d0d_ctx_handler));
	if (_1a87c132c_Test) {
		if ((((*((*(_19840_pkg))))._field_Files.len() > 0LL) && _1ab3dc473_IsStdPackage((*((*((*((*(_19840_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1a37a2577_Struct> _2289_s = _1ab869eb6_FindStruct((*(_19840_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1a37a53d2_StructIns> _2299_ins = (*(_2289_s))._field_Instances[0LL];;
			_1ad1ce6d6_pushStructAsLive(_self_, &(_2299_ins));
			{
				auto expr = &((*(_2299_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b1877353:;
				if (it != expr_end) {
					jule::Ptr<_1ab0898e5_Fn> _23117_m = *it;
					{
						{
							auto expr = &((*(_23117_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b1877dc0:;
							if (it != expr_end) {
								jule::Ptr<_1ab08c9a3_FnIns> _23218_mins = *it;
								{
									if (_1b1836983_isLive(_self_, &(_23218_mins))) {
										goto _iter_next_1b1877dc0;
									};
									_1b183a16d_pushLive(_self_, _23218_mins);
									_1ad1ce98e_setReferencesAsLive(_self_, &((*(_23218_mins))._field_Refers));
								}
								_iter_next_1b1877dc0:;
								++it;
								goto _iter_begin_1b1877dc0;
							}
							_iter_end_1b1877dc0:;
						};
					}
					_iter_next_1b1877353:;
					++it;
					goto _iter_begin_1b1877353;
				}
				_iter_end_1b1877353:;
			};
		};
		{
			auto expr = &((*((*(_19840_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1873ea9:;
			if (it != expr_end) {
				jule::Ptr<_1ab090be8_SymTab> _24116_file = *it;
				{
					{
						auto expr = &((*(_24116_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b187a587:;
						if (it != expr_end) {
							jule::Ptr<_1ab0898e5_Fn> _24217_f = *it;
							{
								if (_1ab3dd6c7_HasDirective(&((*(_24217_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1ab08c9a3_FnIns> _24411_ins = (*_24217_f.alloc)._field_Instances[0LL];;
									if ((!(_1b1836983_isLive(_self_, &(_24411_ins))))) {
										_1b183a16d_pushLive(_self_, _24411_ins);
									};
									_1ad1ce98e_setReferencesAsLive(_self_, &((*(_24411_ins))._field_Refers));
								};
							}
							_iter_next_1b187a587:;
							++it;
							goto _iter_begin_1b187a587;
						}
						_iter_end_1b187a587:;
					};
				}
				_iter_next_1b1873ea9:;
				++it;
				goto _iter_begin_1b1873ea9;
			}
			_iter_end_1b1873ea9:;
		};
	};
}



inline void _1ad1d01ed_collectLive(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b187be6d:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _25615_used = *it;
			{
				if ((!((*(_25615_used))._field_Binded))) {
					_1ad1d0000_collectLivePackage(_self_, &((*_25615_used.alloc)._field_Package));
				};
			}
			_iter_next_1b187be6d:;
			++it;
			goto _iter_begin_1b187be6d;
		}
		_iter_end_1b187be6d:;
	};
	_1ad1d0000_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1ab0898e5_Fn> _2647_main = _1ab86a3b2_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2647_main != nullptr)) {
		jule::Ptr<_1ab08c9a3_FnIns> _2668_ins = (*_2647_main.alloc)._field_Instances[0LL];;
		if ((!(_1b1836983_isLive(_self_, &(_2668_ins))))) {
			_1b183a16d_pushLive(_self_, _2668_ins);
		};
		_1ad1ce98e_setReferencesAsLive(_self_, &((*(_2668_ins))._field_Refers));
	};
}



inline void _1ad1d04a6_removeDeadGlobals(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _27439_vars) {
	jule::I64 _2757_i = 0LL;;
	while ((_2757_i < (*(_27439_vars)).len())) {
		{
			jule::Ptr<_1ab8a7289_Var> _2774_v = (*(_27439_vars))[_2757_i];;
			if (_1b18669b3_isLive(_self_, &(_2774_v))) {
				(_2757_i)++;
				goto _iter_next_1b1881eb7;
			};
			(*(_27439_vars))=jule::append((*(_27439_vars)).slice(0LL, _2757_i),(*(_27439_vars)).slice((_2757_i + 1LL)));
		}
	_iter_next_1b1881eb7:;
	}
	_iter_end_1b1881eb7:;;
}



inline void _1ad1d075e_removeDeadFns(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab0898e5_Fn>>* _28635_funcs) {
	jule::I64 _2877_i = 0LL;;
	while ((_2877_i < (*(_28635_funcs)).len())) {
		{
			jule::Ptr<_1ab0898e5_Fn> _2898_f = (*(_28635_funcs))[_2877_i];;
			jule::I64 _2908_j = 0LL;;
			while ((_2908_j < (*(_2898_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ab08c9a3_FnIns> _2925_ins = (*(_2898_f))._field_Instances[_2908_j];;
					if (_1b1836983_isLive(_self_, &(_2925_ins))) {
						(_2908_j)++;
						goto _iter_next_1b188486b;
					};
					(*_2898_f.alloc)._field_Instances=jule::append((*_2898_f.alloc)._field_Instances.slice(0LL, _2908_j),(*_2898_f.alloc)._field_Instances.slice((_2908_j + 1LL)));
				}
			_iter_next_1b188486b:;
			}
			_iter_end_1b188486b:;;
			if (((*_2898_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_28635_funcs))=jule::append((*(_28635_funcs)).slice(0LL, _2877_i),(*(_28635_funcs)).slice((_2877_i + 1LL)));
				goto _iter_next_1b1883a24;
			};
			(_2877_i)++;
		}
	_iter_next_1b1883a24:;
	}
	_iter_end_1b1883a24:;;
}



inline void _1ad1d0a17_removeDeadStructs(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a37a2577_Struct>>* _30739_structs) {
	jule::I64 _3087_i = 0LL;;
	while ((_3087_i < (*(_30739_structs)).len())) {
		{
			jule::Ptr<_1a37a2577_Struct> _3108_s = (*(_30739_structs))[_3087_i];;
			jule::I64 _3118_j = 0LL;;
			while ((_3118_j < (*(_3108_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a37a53d2_StructIns> _3139_ins = (*(_3108_s))._field_Instances[_3118_j];;
					_1ad1d075e_removeDeadFns(_self_, &((*(_3139_ins))._field_Methods));
					if ((((*_3139_ins.alloc)._field_Methods.len() != 0LL) || _1b182ea8b_isLive(_self_, &(_3139_ins)))) {
						(_3118_j)++;
						goto _iter_next_1b188851d;
					};
					(*_3108_s.alloc)._field_Instances=jule::append((*_3108_s.alloc)._field_Instances.slice(0LL, _3118_j),(*_3108_s.alloc)._field_Instances.slice((_3118_j + 1LL)));
				}
			_iter_next_1b188851d:;
			}
			_iter_end_1b188851d:;;
			if (((*_3108_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_30739_structs))=jule::append((*(_30739_structs)).slice(0LL, _3087_i),(*(_30739_structs)).slice((_3087_i + 1LL)));
				goto _iter_next_1b18876c6;
			};
			(_3087_i)++;
		}
	_iter_next_1b18876c6:;
	}
	_iter_end_1b18876c6:;;
}



inline void _1ad1d0cc0_removeDeadTraits(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab095109_Trait>>* _32938_traits) {
	jule::I64 _3307_i = 0LL;;
	while ((_3307_i < (*(_32938_traits)).len())) {
		{
			jule::Ptr<_1ab095109_Trait> _3328_t = (*(_32938_traits))[_3307_i];;
			if ((!(_1b185b788_isLive(_self_, &(_3328_t))))) {
				(*(_32938_traits))=jule::append((*(_32938_traits)).slice(0LL, _3307_i),(*(_32938_traits)).slice((_3307_i + 1LL)));
				goto _iter_next_1b188bdd4;
			};
			jule::I64 _3378_j = 0LL;;
			while ((_3378_j < (*(_3328_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a37a2577_Struct> _3395_s = (*(_3328_t))._field_Implemented[_3378_j];;
					if (((*(_3395_s))._field_Instances.len() > 0LL)) {
						(_3378_j)++;
						goto _iter_next_1b188c830;
					};
					(*_3328_t.alloc)._field_Implemented=jule::append((*_3328_t.alloc)._field_Implemented.slice(0LL, _3378_j),(*_3328_t.alloc)._field_Implemented.slice((_3378_j + 1LL)));
				}
			_iter_next_1b188c830:;
			}
			_iter_end_1b188c830:;;
			(_3307_i)++;
		}
	_iter_next_1b188bdd4:;
	}
	_iter_end_1b188bdd4:;;
}



inline void _1ad1d1078_removeDeadsFile(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab090be8_SymTab>* _35037_file) {
	_1ad1d075e_removeDeadFns(_self_, &((*((*(_35037_file))))._field_Funcs));
	_1ad1d0a17_removeDeadStructs(_self_, &((*((*(_35037_file))))._field_Structs));
	_1ad1d0cc0_removeDeadTraits(_self_, &((*((*(_35037_file))))._field_Traits));
	_1ad1d04a6_removeDeadGlobals(_self_, &((*((*(_35037_file))))._field_Vars));
}



inline void _1ad1d1331_removeDeadsPackage(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_, jule::Ptr<_1ab868cea_Package>* _35740_pkg) {
	{
		auto expr = &((*((*(_35740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18923e5:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _35815_file = *it;
			{
				_1ad1d1078_removeDeadsFile(_self_, &(_35815_file));
			}
			_iter_next_1b18923e5:;
			++it;
			goto _iter_begin_1b18923e5;
		}
		_iter_end_1b18923e5:;
	};
}



inline void _1ad1d152e_removeDeads(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1892b87:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _36415_used = *it;
			{
				if ((!((*(_36415_used))._field_Binded))) {
					_1ad1d1331_removeDeadsPackage(_self_, &((*_36415_used.alloc)._field_Package));
				};
			}
			_iter_next_1b1892b87:;
			++it;
			goto _iter_begin_1b1892b87;
		}
		_iter_end_1b1892b87:;
	};
	_1ad1d1331_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1ad1d172c_collectSpecialCaseDefines(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1ab9c12d7_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1ab9c12d7_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1ad1d192a_elimanate(jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _self_) {
	_1ad1d172c_collectSpecialCaseDefines(_self_);
	_1ad1d01ed_collectLive(_self_);
	_1ad1d152e_removeDeads(_self_);
}








inline jule::Bool _1ad1d2860_scopeDeadCode_eq(_1ad1d2860_scopeDeadCode *_self_, _1ad1d2860_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1ad1d2d7c_optimizeChild(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab835bc9_Scope>* _1935_s) {
	jule::Ptr<_1ad1d2860_scopeDeadCode> _207_sdc = jule::new_ptr<_1ad1d2860_scopeDeadCode>(_1ad1d2860_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ad1d5797_optimizeStmts(_207_sdc);
	};
}



inline void _1ad1d3135_optimizeBodyChildExceptional(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab835bc9_Scope>* _2950_s) {
	jule::Ptr<_1ad1d2860_scopeDeadCode> _307_sdc = jule::new_ptr<_1ad1d2860_scopeDeadCode>(_1ad1d2860_scopeDeadCode{._field_parent=jule::Ptr<_1ad1d2860_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1ad1d5797_optimizeStmts(_307_sdc);
	};
}



inline void _1ad1d33dd_optimizeBodyChild(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab835bc9_Scope>* _3939_s) {
	jule::Ptr<_1ad1d2860_scopeDeadCode> _407_sdc = jule::new_ptr<_1ad1d2860_scopeDeadCode>(_1ad1d2860_scopeDeadCode{._field_parent=jule::Ptr<_1ad1d2860_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ad1d5797_optimizeStmts(_407_sdc);
	};
}



inline void _1ad1d3696_optimizeExprModel(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1ad1d6de7_exprDeadCode _493_edc = static__1ad1d7315_new(&(_self_));;
	_1ad1d75bd_optimize(&_493_edc, _4839_model);
}



inline void _1ad1d3894_eliminateFollowed(_1ad1d2860_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1ad1d2860_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*_607_parent.alloc)._field_parent;
		}
	_iter_next_1b18a501d:;
	}
	_iter_end_1b18a501d:;;
}



inline void _1ad1d3b4c_pushGoto(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab838d86_GotoSt> _6929_gt) {
	jule::I64 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b18a8351:;
	}
	_iter_end_1b18a8351:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1ad1d3e05_pushLabel(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab838726_Label> _7930_l) {
	jule::I64 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1b18aa551;
			};
			(_807_i)++;
		}
	_iter_next_1b18aa551:;
	}
	_iter_end_1b18aa551:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab838726_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1ad1d41ad_optimizeRangeIter(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab837a11_RangeIter> _9238_it) {
	_1ad1d3696_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1ad1d33dd_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1ad1d4466_optimizeWhileIter(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab8370b5_WhileIter> _9738_it) {
	_1ad1d3696_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1ad1d5599_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1ad1d33dd_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1ad1d471e_optimizeInfIter(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab836b0e_InfIter> _10536_it) {
	_1ad1d33dd_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1ad1d49c7_optimizeConditional(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab836812_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18b2316:;
		if (it != expr_end) {
			jule::Ptr<_1ab8360e7_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1ad1d3696_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1ad1d33dd_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1b18b2316:;
			++it;
			goto _iter_begin_1b18b2316;
		}
		_iter_end_1b18b2316:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1ad1d2d7c_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1ad1d33dd_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ad1d4c80_optimizeMatch(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab83a409_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18b589c:;
		if (it != expr_end) {
			jule::Ptr<_1ab83ae32_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b18b632b:;
					if (it != expr_end) {
						jule::Ptr<_1ab906a8b_Data> _12916_expr = *it;
						{
							_1ad1d3696_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1b18b632b:;
						++it;
						goto _iter_begin_1b18b632b;
					}
					_iter_end_1b18b632b:;
				};
				_1ad1d33dd_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1b18b589c:;
			++it;
			goto _iter_begin_1b18b589c;
		}
		_iter_end_1b18b589c:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1ad1d2d7c_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1ad1d33dd_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ad1d5038_optimizeAssign(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab839716_Assign> _14535_assign) {
	_1ad1d3696_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1ad1d3696_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1ad1d52e1_optimizeMultiAssign(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Ptr<_1ab839bbc_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18ba6e8:;
		if (it != expr_end) {
			jule::Ptr<_1ab906a8b_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1ad1d3696_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1b18ba6e8:;
			++it;
			goto _iter_begin_1b18ba6e8;
		}
		_iter_end_1b18ba6e8:;
	};
	_1ad1d3696_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1ad1d5599_optimizeStmt(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b18bc398:;
			{
				jule::Ptr<_1ab835bc9_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1ab835bc9_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1ad1d5a94_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1ad1d2d7c_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b18bc112:;
			{
				_1ad1d41ad_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1ab837a11_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b18bc420:;
			{
				_1ad1d4466_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1ab8370b5_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b18bc497:;
			{
				_1ad1d471e_optimizeInfIter(_self_, _15933_st.cast_ptr<_1ab836b0e_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b18bc51e:;
			{
				_1ad1d49c7_optimizeConditional(_self_, _15933_st.cast_ptr<_1ab836812_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b18bc596:;
			{
				_1ad1d4c80_optimizeMatch(_self_, _15933_st.cast_ptr<_1ab83a409_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b18bc61d:;
			{
				_1ad1d5038_optimizeAssign(_self_, _15933_st.cast_ptr<_1ab839716_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b18bc695:;
			{
				_1ad1d52e1_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1ab839bbc_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b18bc71c:;
			{
				jule::Ptr<_1ab906a8b_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1ab906a8b_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1b18bc244;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_1b18c2e81:;
						{
							_1ad1d3894_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1b18c3602:;
						{
							_1ad1d3696_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1b18c358b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b18bc794:;
			{
				_1ad1d3894_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b18bc81b:;
			{
				_1ad1d3b4c_pushGoto(_self_, _15933_st.cast_ptr<_1ab838d86_GotoSt>(&__jule_any_type38));
				_1ad1d3894_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b18bc893:;
			{
				_1ad1d3e05_pushLabel(_self_, _15933_st.cast_ptr<_1ab838726_Label>(&__jule_any_type18));
			}
		}
		_match_end_1b18bc244:;
	};
}



inline void _1ad1d5797_optimizeStmts(jule::Ptr<_1ad1d2860_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ad1d5599_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b18c6292:;
	}
	_iter_end_1b18c6292:;;
}








inline jule::Bool _1ad1d6de7_exprDeadCode_eq(_1ad1d6de7_exprDeadCode *_self_, _1ad1d6de7_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1ad1d6de7_exprDeadCode static__1ad1d7315_new(jule::Ptr<_1ad1d2860_scopeDeadCode>* _1421_s) {
	return _1ad1d6de7_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1ad1d75bd_optimize(_1ad1d6de7_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1ab3d977d_ExprInspector> _217_inspector = static__1ab3d9aad_New();;
	_1ab3da482_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1b18c8ddd, jule::Ptr<__jule_anon_1b18c8ddd_ctx>::make(__jule_anon_1b18c8ddd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b18c8ddd_ctx_handler));
}








inline jule::Bool _1ad12156d_ExceptionalForwardingExprModel_eq(_1ad12156d_ExceptionalForwardingExprModel *_self_, _1ad12156d_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ad12175a_FnCallIgnoreExceptionalExprModel_eq(_1ad12175a_FnCallIgnoreExceptionalExprModel *_self_, _1ad12175a_FnCallIgnoreExceptionalExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ad121b01_SwapExprModel_eq(_1ad121b01_SwapExprModel *_self_, _1ad121b01_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ad12201e_EmptyCompareExprModel_eq(_1ad12201e_EmptyCompareExprModel *_self_, _1ad12201e_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1ad12231b_RefExprModel_eq(_1ad12231b_RefExprModel *_self_, _1ad12231b_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1ad1227c2_StrCompExprModel_eq(_1ad1227c2_StrCompExprModel *_self_, _1ad1227c2_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1ad122d55_MutSlicingExprModel_eq(_1ad122d55_MutSlicingExprModel *_self_, _1ad122d55_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ad1231da_UnsafeBinaryExprModel_eq(_1ad1231da_UnsafeBinaryExprModel *_self_, _1ad1231da_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1ad1234d7_UnsafeIndexingExprModel_eq(_1ad1234d7_UnsafeIndexingExprModel *_self_, _1ad1234d7_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1ad1238b1_PushToSliceExprModel_eq(_1ad1238b1_PushToSliceExprModel *_self_, _1ad1238b1_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1ad123c8a_AppendToSliceExprModel_eq(_1ad123c8a_AppendToSliceExprModel *_self_, _1ad123c8a_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1ad124164_StrRuneIter_eq(_1ad124164_StrRuneIter *_self_, _1ad124164_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1ad124461_UnsafeDerefExprModel_eq(_1ad124461_UnsafeDerefExprModel *_self_, _1ad124461_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ad12475d_UnsafeCastingExprModel_eq(_1ad12475d_UnsafeCastingExprModel *_self_, _1ad12475d_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ad125385_nilVar_eq(_1ad125385_nilVar *_self_, _1ad125385_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1ad125b6b_pushVar(_1ad1256c6_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1ad13d502_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeac8bd3:;
		if (it != expr_end) {
			_1ad125385_nilVar _2815_v = *it;
			{
				if ((_2815_v._field_var == _2323_var)) {
					_2815_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1aeac8bd3:;
			++it;
			goto _iter_begin_1aeac8bd3;
		}
		_iter_end_1aeac8bd3:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeac9a80:;
		if (it != expr_end) {
			_1ad125385_nilVar _3515_v = *it;
			{
				if ((_3515_v._field_var == 0LLU)) {
					_3515_v._field_var=_2323_var;
					_3515_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1aeac9a80:;
			++it;
			goto _iter_begin_1aeac9a80;
		}
		_iter_end_1aeac9a80:;
	};
	{ jule::Slice<_1ad125385_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ad125385_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1ad125eac_removeVar(_1ad1256c6_nils* _self_, jule::Uintptr _4625_var) {
	if ((_4625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aeacbac6:;
			if (it != expr_end) {
				_1ad125385_nilVar _4816_v = *it;
				{
					if ((_4816_v._field_var == _4625_var)) {
						_4816_v._field_var=0LLU;
						_4816_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1aeacbac6:;
				++it;
				goto _iter_begin_1aeacbac6;
			}
			_iter_end_1aeacbac6:;
		};
	};
	return false;;
}



inline jule::Bool _1ad1262ed_isSafe(_1ad1256c6_nils* _self_, jule::Uintptr _6022_var) {
	if ((_6022_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aeacd26a:;
			if (it != expr_end) {
				_1ad125385_nilVar _6211_v = *it;
				{
					if ((_6211_v._field_var == _6022_var)) {
						return _6211_v._field_safe;;
					};
				}
				_iter_next_1aeacd26a:;
				++it;
				goto _iter_begin_1aeacd26a;
			}
			_iter_end_1aeacd26a:;
		};
	};
	return false;;
}








inline jule::Bool _1ad128344_scopeOptimizer_eq(_1ad128344_scopeOptimizer *_self_, _1ad128344_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1ad128344_scopeOptimizer> static__1ad1288a5_new(jule::Ptr<_1ab835bc9_Scope> _2320_scope) {
	jule::Ptr<_1ad128344_scopeOptimizer> _247_sc = jule::new_ptr<_1ad128344_scopeOptimizer>(_1ad128344_scopeOptimizer{._field_parent=jule::Ptr<_1ad128344_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1ad1383a9_data>(_1ad1383a9_data{._field_boundary=jule::new_ptr<_1ad139b91_boundary>(_1ad139b91_boundary{._field_vars=jule::Slice<_1ad139850_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1ad1256c6_nils>(_1ad1256c6_nils{._field_vars=jule::Slice<_1ad125385_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1ad1354c7_dynamic>(_1ad1354c7_dynamic{._field_vars=jule::Slice<_1ad135186_dynamicVar>(nullptr)}), ._field_flags=0LL})});;
	return _247_sc;;
}



inline void _1ad128b5d_setCurrentStmt(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1ad128d5b_removeCurrent(jule::Ptr<_1ad128344_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1ad1290e2_isLastStmt(jule::Ptr<_1ad128344_scopeOptimizer> _self_) {
	jule::Ptr<_1ad128344_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*_457_r.alloc)._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1aeada497:;
	}
	_iter_end_1aeada497:;;
	return true;;
}



inline jule::Bool _1ad129378_isIter(jule::Ptr<_1ad128344_scopeOptimizer> _self_) {
	jule::Ptr<_1ad128344_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*_557_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_1aeadcce6:;
					{
						return true;;
					}
				}
				_match_end_1aeadcc4c:;
			};
		}
	_iter_next_1aeadb8c7:;
	}
	_iter_end_1aeadb8c7:;;
	return false;;
}



inline void _1ad129631_optimizeData(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab906a8b_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1aeade028:;
			{
				jule::Ptr<_1ab07e5ee_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1ab07e5ee_FnCallExprModel>();;
				if (_1a87c1be0_Production) {
					if (((!(_1ab08de6b_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1ab3dc473_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1ad128b5d_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1ad1303b2_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1ad13e976_Exceptional && (*(*((*(_708_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1ab3db20d_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1ad1290e2_isLastStmt(_self_)) && (!(_1ad129378_isIter(_self_))))) {
					_1ad128b5d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ad12156d_ExceptionalForwardingExprModel>(_1ad12156d_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1aeaddea1:;
	};
	jule::I64 _943_dataFlags = (*((*_self_.alloc)._field_data))._field_flags;;
	(*(*(_self_))._field_data.alloc)._field_flags|=static_cast<jule::I64>(1LL);
	static__1ad1303b2_optimizeData(&((*_6733_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
	(*(*(_self_))._field_data.alloc)._field_flags=_943_dataFlags;
}



inline void _1ad1298d9_optimizeVar(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab8a7289_Var> _10032_v) {
	if (((*(_10032_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ad126d37_isNilValidType((*((*_10032_v.alloc)._field_TypeSym))._field_Type)) && _1ad126a6d_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1ad125b6b_pushVar((*((*(_self_))._field_data))._field_nils, _1ad127178_getNilVar(jule::Any(_10032_v, &__jule_any_type7)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1ab939816_Type> _1099_kind = _1ad136c9d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_10032_v))._field_TypeSym.alloc)._field_Type, (*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1099_kind != nullptr)) {
				if (_1ad13686e_isDynamicValidType((*(*(_10032_v))._field_TypeSym.alloc)._field_Type)) {
					_1ad13596c_pushVar((*((*(_self_))._field_data))._field_dynamic, _1ad1370de_getDynamicVar(jule::Any(_10032_v, &__jule_any_type7)), _1099_kind);
				};
			};
		};
		static__1ad1303b2_optimizeData(&((*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1ad129b92_optimizeConditional(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab836812_Conditional> _12140_c) {
	_1ad137cd2_dataCheckpoint _1227_checkpoint = _1ad138761_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb01766:;
		if (it != expr_end) {
			jule::Ptr<_1ab8360e7_If> _12315_elif = *it;
			{
				static__1ad1303b2_optimizeData(&((*(_12315_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1ad12c821_optimizeChild(_self_, (*_12315_elif.alloc)._field_Scope);
				if ((((*(_12140_c))._field_Elifs.len() > 1LL) || ((*_12140_c.alloc)._field_Default != nullptr))) {
					_1ad138a19_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
				};
			}
			_iter_next_1aeb01766:;
			++it;
			goto _iter_begin_1aeb01766;
		}
		_iter_end_1aeb01766:;
	};
	if (((*_12140_c.alloc)._field_Default != nullptr)) {
		_1ad12c821_optimizeChild(_self_, (*(*(_12140_c))._field_Default.alloc)._field_Scope);
		_1ad138a19_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
	};
	if ((!(_1ad13de2b_Cond))) {
		return;;
	};
	jule::Bool _1397_constCase = false;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb053e6:;
		if (it != expr_end) {
			jule::I64 _1428_i = it - expr->begin();
			jule::Ptr<_1ab8360e7_If> _14215_elif = *it;
			{
				if ((!(_1ad12cda4_isConstantValidConditionalCase(&(_14215_elif))))) {
					goto _iter_next_1aeb053e6;
				};
				_1397_constCase=true;
				((*(_12140_c))._field_Elifs).mut_slice(0LL, _1428_i);;
				(*_12140_c.alloc)._field_Default=jule::new_ptr<_1ab8363e4_Else>(_1ab8363e4_Else{._field_Scope=(*(_14215_elif))._field_Scope});
				goto _iter_end_1aeb053e6;
			}
			_iter_next_1aeb053e6:;
			++it;
			_1428_i++;
			goto _iter_begin_1aeb053e6;
		}
		_iter_end_1aeb053e6:;
	};
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab8360e7_If>* _1597_i = (&((*(_12140_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ab8360e7_If>* _1603_end = (&((*_12140_c.alloc)._field_Elifs[((*_12140_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1597_i <= _1603_end); (_1597_i)++) {
		{
			{
				if (_1ad12d7bc_isUnreachableConditionalCase(&((*(_1597_i))))) {
					(*(_1597_i))=nullptr;
				};
			};
		}
	_iter_next_1aeb089c1:;
	}
	_iter_end_1aeb089c1:;;
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1397_constCase))) {
		return;;
	};
	jule::I64 _1787_only = -1LL;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb0a3c9:;
		if (it != expr_end) {
			jule::I64 _1797_j = it - expr->begin();
			jule::Ptr<_1ab8360e7_If> _17910_elif = *it;
			{
				if ((_17910_elif != nullptr)) {
					if ((_1787_only != -1LL)) {
						return;;
					};
					_1787_only=_1797_j;
				};
			}
			_iter_next_1aeb0a3c9:;
			++it;
			_1797_j++;
			goto _iter_begin_1aeb0a3c9;
		}
		_iter_end_1aeb0a3c9:;
	};
	if ((_1787_only != -1LL)) {
		_1ad128b5d_setCurrentStmt(_self_, jule::Any((*((*_12140_c.alloc)._field_Elifs[_1787_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1ad12a0b0_buildDefaultConstantTrueCase(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab83ae32_Case> _19549_case, jule::I64* _19573_i, jule::Ptr<_1ab83a409_Match>* _19586_m) {
	(*(_19549_case))._field_Exprs=nullptr;
	jule::I64 _1973_start = (*(_19573_i));;
	_julec_label_1aeb0d410:;
	for (;;) {
		{
			if (((*((*_19549_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1aeb0d3aa;
			};
			jule::Any *_2039_stmt = &((*(*(_19549_case))._field_Scope.alloc)._field_Stmts[((*(*(_19549_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2039_stmt)) };
				
				if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1aeb10324:;
					{
						((*(_19573_i)))++;
						if (((*(_19573_i)) >= (*((*(_19586_m))))._field_Cases.len())) {
							(*(_2039_stmt))=jule::Any((*((*((*(_19586_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_1aeb0d3aa;
						};
						_19549_case=(*((*(_19586_m))))._field_Cases[(*(_19573_i))];
						(*(_2039_stmt))=jule::Any((*_19549_case.alloc)._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_1aeb10401:;
					{
						goto _iter_end_1aeb0d3aa;
					}
				}
				_match_end_1aeb102ad:;
			};
		}
	_iter_next_1aeb0d3aa:;
	}
	_iter_end_1aeb0d3aa:;;
	(*((*(_19586_m))))._field_Default=(*((*(_19586_m))))._field_Cases[_1973_start];
	((*((*(_19586_m))))._field_Cases).mut_slice(0LL, _1973_start);;
}



inline void _1ad12a368_optimizeMatch(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab83a409_Match> _22134_m) {
	jule::Uintptr _2227_var = 0LLU;;
	if ((_1ad13eed7_Dynamic && (*(_22134_m))._field_TypeMatch)) {
		_2227_var=_1ad1370de_getDynamicVar((*((*_22134_m.alloc)._field_Expr))._field_Model);
	};
	_1ad137cd2_dataCheckpoint _2267_checkpoint = _1ad138761_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb14290:;
		if (it != expr_end) {
			jule::Ptr<_1ab83ae32_Case> _22715_case = *it;
			{
				{
					auto expr = &((*(_22715_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aeb14b86:;
					if (it != expr_end) {
						jule::Ptr<_1ab906a8b_Data> _22816_expr = *it;
						{
							static__1ad1303b2_optimizeData(&((*(_22816_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1aeb14b86:;
						++it;
						goto _iter_begin_1aeb14b86;
					}
					_iter_end_1aeb14b86:;
				};
				if ((((*_22715_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1ab939816_Type> _2339_kind = _1ad136c9d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_22715_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2339_kind != nullptr)) {
						_1ad13596c_pushVar((*((*(_self_))._field_data))._field_dynamic, _2227_var, _2339_kind);
					} else {
						_1ad135cad_removeVar((*((*(_self_))._field_data))._field_dynamic, _2227_var);
					};
				};
				_1ad12c821_optimizeChild(_self_, (*_22715_case.alloc)._field_Scope);
				if ((((*_22134_m.alloc)._field_Cases.len() > 1LL) || ((*_22134_m.alloc)._field_Default != nullptr))) {
					_1ad138a19_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
				};
			}
			_iter_next_1aeb14290:;
			++it;
			goto _iter_begin_1aeb14290;
		}
		_iter_end_1aeb14290:;
	};
	if (((*_22134_m.alloc)._field_Default != nullptr)) {
		_1ad12c821_optimizeChild(_self_, (*(*(_22134_m))._field_Default.alloc)._field_Scope);
		_1ad138a19_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
	};
	if ((!(_1ad13de2b_Cond))) {
		return;;
	};
	jule::Bool _2547_constCase = false;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb1b781:;
		if (it != expr_end) {
			jule::I64 _25712_i = it - expr->begin();
			jule::Ptr<_1ab83ae32_Case> _25719_case = *it;
			{
				if ((!(_1ad12d47b_isConstantValidMatchCase(&(_25719_case))))) {
					goto _iter_next_1aeb1b781;
				};
				_2547_constCase=true;
				_1ad12a0b0_buildDefaultConstantTrueCase(_self_, _25719_case, &(_25712_i), &(_22134_m));
				goto _iter_end_1aeb1b781;
			}
			_iter_next_1aeb1b781:;
			++it;
			_25712_i++;
			goto _iter_begin_1aeb1b781;
		}
		_iter_end_1aeb1b781:;
	};
	if (((*_22134_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab83ae32_Case>* _2717_i = (&((*(_22134_m))._field_Cases[0LL]));;
	jule::Ptr<_1ab83ae32_Case>* _2723_end = (&((*_22134_m.alloc)._field_Cases[((*_22134_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2717_i <= _2723_end); (_2717_i)++) {
		{
			{
				if (_1ad12da53_isUnreachableMatchCase(&((*(_2717_i))))) {
					(*(_2717_i))=nullptr;
				};
			};
		}
	_iter_next_1aeb1e344:;
	}
	_iter_end_1aeb1e344:;;
	if ((!(_2547_constCase))) {
		return;;
	};
	jule::I64 _2867_only = -1LL;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb20620:;
		if (it != expr_end) {
			jule::I64 _2877_j = it - expr->begin();
			jule::Ptr<_1ab83ae32_Case> _28710_case = *it;
			{
				if ((_28710_case != nullptr)) {
					if ((_2867_only != -1LL)) {
						return;;
					};
					_2867_only=_2877_j;
				};
			}
			_iter_next_1aeb20620:;
			++it;
			_2877_j++;
			goto _iter_begin_1aeb20620;
		}
		_iter_end_1aeb20620:;
	};
	if ((_2867_only != -1LL)) {
		_1ad128b5d_setCurrentStmt(_self_, jule::Any((*((*_22134_m.alloc)._field_Cases[_2867_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1ad12a621_optimizeRangeIter(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab837a11_RangeIter> _30338_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30338_it))._field_KeyA != nullptr))) {
		_1ad13a136_pushVar((*((*(_self_))._field_data))._field_boundary, _1ad13c0c2_getBoundaryVar((*((*_30338_it.alloc)._field_Expr))._field_Model), jule::Any((*_30338_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1ad12c821_optimizeChild(_self_, (*_30338_it.alloc)._field_Scope);
	if (_1ad13ec2e_Iter) {
		{
			auto &_match_expr{ (*((*(_30338_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1aeb25339:;
				{
					jule::Ptr<_1ab07dc4c_CastingExprModel> _3159_cem = (*((*(_30338_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab07dc4c_CastingExprModel>();;
					jule::Ptr<_1ab94292e_Prim> _3165_eprim = _1ab93bebc_Prim((*(_3159_cem))._field_ExprType.ptr());;
					if (((_3165_eprim == nullptr) || (!(_1ab945de9_IsStr(_3165_eprim.ptr()))))) {
						goto _match_end_1aeb252b2;
					};
					jule::Ptr<_1ab946e2d_Slc> _3209_s = _1ab93d023_Slc((*_3159_cem.alloc)._field_Type.ptr());;
					if ((_3209_s == nullptr)) {
						goto _match_end_1aeb252b2;
					};
					jule::Ptr<_1ab94292e_Prim> _3245_prim = _1ab93bebc_Prim((*(_3209_s))._field_Elem.ptr());;
					if ((_3245_prim == nullptr)) {
						goto _match_end_1aeb252b2;
					};
					{
						
						if (_1ab944359_IsU8(_3245_prim.ptr())) {
							_case_begin_1aeb28c44:;
							{
								(*_30338_it.alloc)._field_Expr=(*_3159_cem.alloc)._field_Expr;
							}
						}
						else if (_1ab943d3c_IsI32(_3245_prim.ptr())) {
							_case_begin_1aeb28e20:;
							{
								static__1ad1303b2_optimizeData(&((*((*_3159_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1ad128b5d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ad124164_StrRuneIter>(_1ad124164_StrRuneIter{._field_Expr=(*_3159_cem.alloc)._field_Expr, ._field_Base=_30338_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1aeb28a57:;
					};
				}
			}
			_match_end_1aeb252b2:;
		};
	};
	static__1ad1303b2_optimizeData(&((*(*(_30338_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ad12a8c9_optimizeWhileIter(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab8370b5_WhileIter> _34838_it) {
	static__1ad1303b2_optimizeData(&((*(_34838_it))._field_Expr), &((*(_self_))._field_data));
	_1ad12c568_optimizeStmt(_self_, (*_34838_it.alloc)._field_Next);
	_1ad12c821_optimizeChild(_self_, (*_34838_it.alloc)._field_Scope);
}



inline jule::Bool _1ad12ac1a_substr(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _35427_a) {
	if (((*((*(_35427_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_35427_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aeb317eb:;
			{
				jule::Ptr<_1ab08126b_SlicingExprModel> _3608_sem = (*((*(_35427_a))._field_Right))._field_Model.unsafe_cast_ptr<_1ab08126b_SlicingExprModel>();;
				if (_1ad120a01_equalModels((*((*_35427_a.alloc)._field_Left))._field_Model, (*(_3608_sem))._field_Expr)) {
					_1ad128b5d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ad122d55_MutSlicingExprModel>(_1ad122d55_MutSlicingExprModel{._field_Token=(*_3608_sem.alloc)._field_Token, ._field_Expr=(*_3608_sem.alloc)._field_Expr, ._field_Left=(*_3608_sem.alloc)._field_Left, ._field_Right=(*_3608_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1aeb31774:;
	};
	return false;;
}



inline jule::Bool _1ad12b05b_strAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _37430_a) {
	if ((!(_1ad13e16d_Str))) {
		return false;;
	};
	jule::Ptr<_1ab94292e_Prim> _3783_lp = _1ab93bebc_Prim((*((*(_37430_a))._field_Left))._field_Type.ptr());;
	if (((_3783_lp == nullptr) || (!(_1ab945de9_IsStr(_3783_lp.ptr()))))) {
		return false;;
	};
	return _1ad12ac1a_substr(_self_, _37430_a);;
}



inline jule::Bool _1ad12b39c_sliceAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _38532_a) {
	if (((!(_1ad13e415_Slice)) || (_1ab93d023_Slc((*((*(_38532_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1ad12ac1a_substr(_self_, _38532_a);;
}



inline void _1ad12b655_optimizePostfix(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839260_Postfix> _39336_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1ad13b775_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_39336_postfix))._field_Expr);
	};
	static__1ad1303b2_optimizeData(&((*_39336_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1ad12b90d_optimizeAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839716_Assign> _40035_assign) {
	if ((((*((*(_40035_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1ad120a01_equalModels((*((*_40035_assign.alloc)._field_Left))._field_Model, (*((*_40035_assign.alloc)._field_Right))._field_Model))) {
		_1ad128d5b_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1ad13ba3e_isBoundaryRiskyType((*(*(_40035_assign))._field_Left.alloc)._field_Type)) {
			_1ad13b775_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_40035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1ad126a6d_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_40035_assign))._field_Right.alloc)._field_Model)) {
			if (_1ad126d37_isNilValidType((*(*(_40035_assign))._field_Left.alloc)._field_Type)) {
				;
				_1ad125b6b_pushVar((*((*(_self_))._field_data))._field_nils, _1ad127178_getNilVar((*(*(_40035_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1ad1266a5_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_40035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1ab939816_Type> _4248_kind = _1ad136c9d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_40035_assign))._field_Right.alloc)._field_Type, (*(*(_40035_assign))._field_Right.alloc)._field_Model);;
		if ((_4248_kind != nullptr)) {
			if (_1ad13686e_isDynamicValidType((*(*(_40035_assign))._field_Left.alloc)._field_Type)) {
				_1ad13596c_pushVar((*((*(_self_))._field_data))._field_dynamic, _1ad1370de_getDynamicVar((*(*(_40035_assign))._field_Left.alloc)._field_Model), _4248_kind);
			};
		} else {
			_1ad136561_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_40035_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1ad12b05b_strAssign(_self_, _40035_assign) || _1ad12b39c_sliceAssign(_self_, _40035_assign)) {
			_case_begin_1aeb438c9:;
			{
				return;;
			}
		}
		_match_end_1aeb456ab:;
	};
	static__1ad1303b2_optimizeData(&((*(*(_40035_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1ad1303b2_optimizeData(&((*(*(_40035_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_40035_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(47LLU) || _match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aeb492c5:;
			{
				if (((!(_1ad13d249_Math)) || (_1ab93d540_Struct((*(*(_40035_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1aeb4924d;
				};
				jule::U64 _4514_oldId;
				jule::Str _45111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_40035_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_40035_assign))._field_Op.alloc)._field_Kind;
					_4514_oldId = ___jule_assign_arg;
					_45111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_40035_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1aeb4c76d:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1aeb4c7d4:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1aeb4c3e9:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1aeb4c471:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(47LLU)) {
						_case_begin_1aeb4c4e8:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(67LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1aeb4be65:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:469:5"));;
						}
					}
					_match_end_1aeb4c295:;
				};
				jule::Ptr<_1ab07c61e_BinaryExprModel> _4718_b = jule::new_ptr<_1ab07c61e_BinaryExprModel>(_1ab07c61e_BinaryExprModel{._field_Left=(*_40035_assign.alloc)._field_Left, ._field_Right=(*_40035_assign.alloc)._field_Right, ._field_Op=(*_40035_assign.alloc)._field_Op});;
				jule::Any _4768_model = jule::Any(_4718_b, &__jule_any_type113);;
				static__1ad1303b2_optimizeData(&(_4768_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type113_compare(_4768_model, _4718_b))) {
					if (((*(*(_40035_assign))._field_Op.alloc)._field_Id == static_cast<jule::U64>(67LLU))) {
						_1ad128d5b_removeCurrent(_self_);
						return;;
					};
					(*_40035_assign.alloc)._field_Right=jule::new_ptr<_1ab07c124_OperandExprModel>((*(*(_40035_assign))._field_Right.alloc));
					(*(_4718_b))._field_Op=jule::new_ptr<_1ab6a54d8_Token>((*(*(_4718_b))._field_Op.alloc));
					(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_40035_assign))._field_Right.alloc)._field_Model=_4768_model;
					return;;
				};
				(*(*(_40035_assign))._field_Op.alloc)._field_Id=_4514_oldId;
				(*(*(_40035_assign))._field_Op.alloc)._field_Kind=_45111_oldKind;
				return;;
			}
		}
		_match_end_1aeb4924d:;
	};
	if (_1ad13ce4c_Append) {
		{
			auto &_match_expr{ (*((*(_40035_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_1aeb5846b:;
				{
					jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> _5029_m = (*(*(_40035_assign))._field_Right.alloc)._field_Model.cast_ptr<_1ab084439_BuiltinAppendCallExprModel>(&__jule_any_type23);;
					if ((!(_1ad1344a4_areSameLvalueExprModel(&((*(*(_40035_assign))._field_Left.alloc)._field_Model), &((*(_5029_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5029_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type79) {
							_case_begin_1aeb5aec9:;
							{
								_1ad128b5d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ad1238b1_PushToSliceExprModel>(_1ad1238b1_PushToSliceExprModel{._field_Dest=(*_5029_m.alloc)._field_Dest, ._field_Elems=(*(_5029_m))._field_Elements.unsafe_cast_ptr<_1ab07e9c8_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1aeb5a01c:;
							{
								_1ad128b5d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ad123c8a_AppendToSliceExprModel>(_1ad123c8a_AppendToSliceExprModel{._field_Dest=(*(*(_40035_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5029_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1aeb59ea6:;
					};
				}
			}
			_match_end_1aeb583e4:;
		};
	};
}



inline jule::Bool _1ad12bc4e_tryOptimizeSwap(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _52437_assign) {
	if (((((!(_1ad13e6bd_Assign)) || ((*((*(_52437_assign))))._field_Left.len() != 2LL)) || ((*((*(_52437_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52437_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ab082c0c_TupleExprModel> _52911_tup;;
	{
		auto &_match_expr{ (*((*(_52437_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aeb62c28:;
			{
				_52911_tup=(*((*(_52437_assign))))._field_Right.unsafe_cast_ptr<_1ab082c0c_TupleExprModel>();
			}
		}
		_match_end_1aeb62ba1:;
	};
	if (((_52911_tup == nullptr) || ((*(_52911_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ad120a01_equalModels((*((*((*(_52437_assign))))._field_Left[0LL]))._field_Model, (*((*(_52911_tup))._field_Datas[0LL]))._field_Model) && _1ad120a01_equalModels((*((*((*(_52437_assign))))._field_Left[1LL]))._field_Model, (*((*(_52911_tup))._field_Datas[1LL]))._field_Model))) {
		_1ad128d5b_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1ad120a01_equalModels((*((*((*(_52437_assign))))._field_Left[0LL]))._field_Model, (*((*(_52911_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ad120a01_equalModels((*((*((*(_52437_assign))))._field_Left[1LL]))._field_Model, (*((*(_52911_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ad121b01_SwapExprModel> _5517_model = jule::new_ptr<_1ad121b01_SwapExprModel>(_1ad121b01_SwapExprModel{._field_Left=(*((*(_52437_assign))))._field_Left[0LL], ._field_Right=(*((*(_52437_assign))))._field_Left[1LL]});;
	static__1ad1303b2_optimizeData(&((*((*(_5517_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1ad1303b2_optimizeData(&((*((*_5517_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1ad128b5d_setCurrentStmt(_self_, jule::Any(_5517_model, &__jule_any_type126));
	return true;;
}



inline void _1ad12c007_optimizeMultiAssign(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab839bbc_MultiAssign> _56140_assign) {
	if (_1ad12bc4e_tryOptimizeSwap(_self_, &(_56140_assign))) {
		return;;
	};
	jule::Ptr<_1ab082c0c_TupleExprModel> _5687_tup = static_cast<jule::Ptr<_1ab082c0c_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56140_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aeb6e1c9:;
			{
				_5687_tup=(*(_56140_assign))._field_Right.unsafe_cast_ptr<_1ab082c0c_TupleExprModel>();
			}
		}
		_match_end_1aeb6e152:;
	};
	{
		auto expr = &((*(_56140_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb6d041:;
		if (it != expr_end) {
			jule::I64 _5738_i = it - expr->begin();
			jule::Ptr<_1ab906a8b_Data> _57315_l = *it;
			{
				if ((_57315_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1ad13ba3e_isBoundaryRiskyType((*_57315_l.alloc)._field_Type)) {
							_1ad13b775_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_57315_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5687_tup != nullptr) && _1ad126a6d_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5687_tup.alloc)._field_Datas[_5738_i]))._field_Model))) {
							if (_1ad126d37_isNilValidType((*_57315_l.alloc)._field_Type)) {
								;
								_1ad125b6b_pushVar((*((*(_self_))._field_data))._field_nils, _1ad127178_getNilVar((*_57315_l.alloc)._field_Model), true);
							};
						} else {
							_1ad1266a5_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_57315_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5687_tup != nullptr))) {
						jule::Ptr<_1ab939816_Type> _59110_kind = _1ad136c9d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5687_tup.alloc)._field_Datas[_5738_i]))._field_Type, (*((*(_5687_tup))._field_Datas[_5738_i]))._field_Model);;
						if ((_59110_kind != nullptr)) {
							if (_1ad13686e_isDynamicValidType((*_57315_l.alloc)._field_Type)) {
								_1ad13596c_pushVar((*((*(_self_))._field_data))._field_dynamic, _1ad1370de_getDynamicVar((*_57315_l.alloc)._field_Model), _59110_kind);
							};
						} else {
							_1ad136561_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_57315_l.alloc)._field_Model);
						};
					};
					static__1ad1303b2_optimizeData(&((*_57315_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1aeb6d041:;
			++it;
			_5738_i++;
			goto _iter_begin_1aeb6d041;
		}
		_iter_end_1aeb6d041:;
	};
	static__1ad1303b2_optimizeData(&((*_56140_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1ad12c2b0_optimizeRet(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab83b9c1_RetSt> _60732_r) {
	static__1ad1303b2_optimizeData(&((*(_60732_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1ad13e976_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60732_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b1a80bdd:;
			{
				goto _match_end_1b1a80c98;
			}
		}
		else {
			_case_begin_1b1a80d0e:;
			{
				return;;
			}
		}
		_match_end_1b1a80c98:;
	};
	jule::Ptr<_1ab07e5ee_FnCallExprModel> _6217_fc = (*_60732_r.alloc)._field_Expr.cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30);;
	if (((((!((*((*((*(_6217_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6217_fc.alloc)._field_Except == nullptr)) || ((*((*_6217_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1ab3db20d_IsForwarded(&((*_6217_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1ad128b5d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ad12156d_ExceptionalForwardingExprModel>(_1ad12156d_ExceptionalForwardingExprModel{._field_Expr=_6217_fc}), &__jule_any_type121));
}



inline void _1ad12c568_optimizeStmt(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Any _63133_stmt) {
	{
		auto &_match_expr{ _63133_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1a84230:;
			{
				_1ad12c821_optimizeChild(_self_, _63133_stmt.cast_ptr<_1ab835bc9_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b1a83eaa:;
			{
				_1ad129631_optimizeData(_self_, _63133_stmt.cast_ptr<_1ab906a8b_Data>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b1a842b8:;
			{
				_1ad1298d9_optimizeVar(_self_, _63133_stmt.cast_ptr<_1ab8a7289_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b1a84362:;
			{
				_1ad129b92_optimizeConditional(_self_, _63133_stmt.cast_ptr<_1ab836812_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b1a843c8:;
			{
				_1ad12a621_optimizeRangeIter(_self_, _63133_stmt.cast_ptr<_1ab837a11_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b1a8443e:;
			{
				_1ad12a8c9_optimizeWhileIter(_self_, _63133_stmt.cast_ptr<_1ab8370b5_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b1a844b6:;
			{
				_1ad12c821_optimizeChild(_self_, (*(_63133_stmt.unsafe_cast_ptr<_1ab836b0e_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b1a8453d:;
			{
				_1ad12b90d_optimizeAssign(_self_, _63133_stmt.cast_ptr<_1ab839716_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b1a845b5:;
			{
				_1ad12c007_optimizeMultiAssign(_self_, _63133_stmt.cast_ptr<_1ab839bbc_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b1a8463c:;
			{
				_1ad12a368_optimizeMatch(_self_, _63133_stmt.cast_ptr<_1ab83a409_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b1a846b4:;
			{
				_1ad12c2b0_optimizeRet(_self_, _63133_stmt.cast_ptr<_1ab83b9c1_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b1a8473b:;
			{
				_1ad12b655_optimizePostfix(_self_, _63133_stmt.cast_ptr<_1ab839260_Postfix>(&__jule_any_type39));
			}
		}
		_match_end_1b1a840cb:;
	};
}



inline void _1ad12c821_optimizeChild(jule::Ptr<_1ad128344_scopeOptimizer> _self_, jule::Ptr<_1ab835bc9_Scope> _66034_child) {
	jule::Ptr<_1ad128344_scopeOptimizer> _6617_so = static__1ad1288a5_new(_66034_child);;
	(*(_6617_so))._field_parent=_self_;
	(*_6617_so.alloc)._field_data=(*(_self_))._field_data;
	_1ad12ca1e_optimize(_6617_so);
}



inline void _1ad12ca1e_optimize(jule::Ptr<_1ad128344_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ad12c568_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b1a8c9b9:;
	}
	_iter_end_1b1a8c9b9:;;
}








inline jule::Bool _1ad12ebec_exprOptimizer_eq(_1ad12ebec_exprOptimizer *_self_, _1ad12ebec_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1ad1300c6_optimize(jule::Any* _2226_model) {
	static__1ad1303b2_optimizeData(_2226_model, &(_1ad1378e7_emptyData));
}



inline void static__1ad1303b2_optimizeData(jule::Any* _2630_model, jule::Ptr<_1ad1383a9_data>* _2659_d) {
	if (_1ad1d7a52_exprEnabled) {
		jule::Ptr<_1ad12ebec_exprOptimizer> _298_exop = jule::new_ptr<_1ad12ebec_exprOptimizer>(_1ad12ebec_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2630_model)), ._field_data=(*(_2659_d)), ._field_inspector=static__1ab3d9aad_New()});;
		_1ad133b9b_do(_298_exop.ptr());
	};
}



inline jule::Bool _1ad130703_selfCmpCond(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _3828_m) {
	if (((_1ab93bebc_Prim((*((*((*(_3828_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1ab1185bc_IsFloat((*(_1ab93bebc_Prim((*((*((*(_3828_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1ad120a01_equalModels((*(*((*(_3828_m))))._field_Left.alloc)._field_Model, (*((*((*(_3828_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_3828_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b1a9daa7:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1ab071723_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b1a9db40:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1ab071723_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1b1a9c996:;
			{
				return false;;
			}
		}
		_match_end_1b1a9d964:;
	};
}



inline jule::Bool _1ad130a44_boolCond(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _6725_m) {
	jule::Ptr<_1ab94292e_Prim> _683_lp = _1ab93bebc_Prim((*((*((*(_6725_m))))._field_Left))._field_Type.ptr());;
	if (((_683_lp == nullptr) || (!(_1ab945b63_IsBool(_683_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b1aa3392:;
			{
				std::swap((*((*(_6725_m))))._field_Left, (*((*(_6725_m))))._field_Right);
			}
		}
		else {
			_case_begin_1b1aa256c:;
			{
				{
					auto &_match_expr{ (*((*((*(_6725_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1b1aa1857:;
						{
							goto _match_end_1b1aa2d97;
						}
					}
					else {
						_case_begin_1b1aa2e0d:;
						{
							return false;;
						}
					}
					_match_end_1b1aa2d97:;
				};
			}
		}
		_match_end_1b1aa2506:;
	};
	jule::Ptr<_1ab070c61_Const> _857_c = (*((*((*(_6725_m))))._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b1aa4edc:;
			{
				if (_1ab072b42_ReadBool(_857_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				} else {
					_1ab07422b_SetBool(_857_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b1aa5086:;
			{
				if (_1ab072b42_ReadBool(_857_c.ptr())) {
					_1ab07422b_SetBool(_857_c, true);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1b1aa3161:;
		}
		_match_end_1b1aa4e54:;
	};
	return false;;
}



inline jule::Bool _1ad130d85_strCond(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _12023_m) {
	jule::Ptr<_1ab94292e_Prim> _1213_lp = _1ab93bebc_Prim((*((*(_12023_m))._field_Left))._field_Type.ptr());;
	if (((_1213_lp == nullptr) || (!(_1ab945de9_IsStr(_1213_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12023_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12023_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12023_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b1aabbd6:;
			{
				std::swap((*_12023_m.alloc)._field_Left, (*_12023_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1b1aaadb1:;
			{
				{
					auto &_match_expr{ (*((*(_12023_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1b1aa993c:;
						{
							goto _match_end_1b1aab6db;
						}
					}
					else {
						_case_begin_1b1aab752:;
						{
							return false;;
						}
					}
					_match_end_1b1aab6db:;
				};
			}
		}
		_match_end_1b1aaad4a:;
	};
	jule::Ptr<_1ab070c61_Const> _1417_c = (*((*_12023_m.alloc)._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*(_12023_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b1aab9b6:;
			{
				if ((_1ab072dc8_ReadStr(_1417_c.ptr())).empty()) {
					jule::Any _1459_model = jule::Any(jule::new_ptr<_1ad12201e_EmptyCompareExprModel>(_1ad12201e_EmptyCompareExprModel{._field_Expr=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1459_model))))));
					goto _match_end_1b1aad732;
				};
				jule::Any _1528_model = jule::Any(jule::new_ptr<_1ad1227c2_StrCompExprModel>(_1ad1227c2_StrCompExprModel{._field_Left=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Right=_1417_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1528_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b1aad7dc:;
			{
				if ((_1ab072dc8_ReadStr(_1417_c.ptr())).empty()) {
					jule::Any _1609_model = jule::Any(jule::new_ptr<_1ad12201e_EmptyCompareExprModel>(_1ad12201e_EmptyCompareExprModel{._field_Expr=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1609_model))))));
					goto _match_end_1b1aad732;
				};
				jule::Any _1678_model = jule::Any(jule::new_ptr<_1ad1227c2_StrCompExprModel>(_1ad1227c2_StrCompExprModel{._field_Left=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Right=_1417_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1678_model))))));
			}
		}
		_match_end_1b1aad732:;
	};
	return true;;
}



inline jule::Bool _1ad13133b_tryNeutralElement1(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _17735_m, jule::Ptr<_1ab070c61_Const> _17766_c, jule::Ptr<_1ab07c124_OperandExprModel>* _17792_nc) {
	if (_1ab0754c4_IsStr(_17766_c.ptr())) {
		if ((!(_1ad13e16d_Str))) {
			return false;;
		};
		if (((_1ab072dc8_ReadStr(_17766_c.ptr())).empty() && ((*((*((*(_17735_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_17792_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ad13d249_Math)) || (_1ab073912_AsF64(_17766_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_17735_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b1abca93:;
			{
				if (((*(_17792_nc)) == (*((*(_17735_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_17792_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_17766_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b1abd6cb:;
			{
				if (_1ab1185bc_IsFloat((*(_1ab93bebc_Prim((*((*(_17792_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1b1abd588;
				};
				_1ab073bba_SetI64(_17766_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_17766_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b1abd742:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_17792_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1b1abd588:;
	};
	return false;;
}



inline jule::Bool _1ad13167c_tryNeutralElement(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _22734_m) {
	{
		auto &_match_expr{ (*((*((*(_22734_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b1ac28bc:;
			{
				jule::Ptr<_1ab070c61_Const> _2318_c = (*((*((*(_22734_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1ab070c61_Const>();;
				return _1ad13133b_tryNeutralElement1(_self_, _22734_m, _2318_c, &((*((*(_22734_m))))._field_Right));;
			}
		}
		_match_end_1b1ac2845:;
	};
	{
		auto &_match_expr{ (*((*((*(_22734_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b1ac2dd9:;
			{
				jule::Ptr<_1ab070c61_Const> _2368_c = (*((*((*(_22734_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1ab070c61_Const>();;
				return _1ad13133b_tryNeutralElement1(_self_, _22734_m, _2368_c, &((*((*(_22734_m))))._field_Left));;
			}
		}
		_match_end_1b1ac2d73:;
	};
	return false;;
}



inline void _1ad131935_checkBinaryForBoundary(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _24239_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24239_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b1ac633d:;
			{
				jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _2488_blc = (*((*((*(_24239_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1ab084736_BuiltinLenCallExprModel>();;
				if ((!(_1ad13bd08_isBoundaryValidType((*((*(_2488_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_24239_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24239_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24239_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24239_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1b1ac963d:;
							{
								jule::Ptr<_1ab070c61_Const> _26010_c = jule::new_ptr<_1ab070c61_Const>((*((*((*((*(_24239_m))))._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15))));;
								_1ab077c9b_Sub(_26010_c, (*(static__1ab071190_NewI64(1LL))));
								_1ad13a136_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad13c0c2_getBoundaryVar((*(*(_2488_blc))._field_Expr.alloc)._field_Model), jule::Any(_26010_c, &__jule_any_type15));
							}
						}
						_match_end_1b1ac95b6:;
					};
					return;;
				};
				_1ad13a136_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad13c0c2_getBoundaryVar((*(*(_2488_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24239_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b1ac62b6:;
	};
	{
		auto &_match_expr{ (*((*((*(_24239_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b1ac69d1:;
			{
				jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _2718_blc = (*((*((*(_24239_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1ab084736_BuiltinLenCallExprModel>();;
				if ((!(_1ad13bd08_isBoundaryValidType((*(*(_2718_blc))._field_Expr.alloc)._field_Type)))) {
					return;;
				};
				if ((((*(*((*(_24239_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24239_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24239_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24239_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1b1ad13ae:;
							{
								jule::Ptr<_1ab070c61_Const> _28310_c = jule::new_ptr<_1ab070c61_Const>((*((*((*((*(_24239_m))))._field_Left))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15))));;
								_1ab077c9b_Sub(_28310_c, (*(static__1ab071190_NewI64(1LL))));
								_1ad13a136_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad13c0c2_getBoundaryVar((*(*(_2718_blc))._field_Expr.alloc)._field_Model), jule::Any(_28310_c, &__jule_any_type15));
							}
						}
						_match_end_1b1ad1337:;
					};
					return;;
				};
				_1ad13a136_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad13c0c2_getBoundaryVar((*(*(_2718_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24239_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b1ac6959:;
	};
}



inline void _1ad131bdd_checkBinaryForNil(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel>* _29434_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _2987_var = _1ad127178_getNilVar((*((*((*(_29434_m))))._field_Left))._field_Model);;
	if ((_2987_var != 0LLU)) {
		if ((!(_1ad126d37_isNilValidType((*(*((*(_29434_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29434_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1b1ad6c66:;
				{
					_1ad125b6b_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2987_var, ((*((*((*(_29434_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1b1ad6bde:;
		};
		return;;
	};
	_2987_var=_1ad127178_getNilVar((*((*((*(_29434_m))))._field_Right))._field_Model);
	if ((_2987_var != 0LLU)) {
		if ((!(_1ad126d37_isNilValidType((*(*((*(_29434_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29434_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1a9844a0e:;
				{
					_1ad125b6b_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2987_var, ((*(*((*(_29434_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a9844987:;
		};
		return;;
	};
}



inline void _1ad131e96_binary(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _32622_m) {
	if ((((*((*(_self_))._field_data))._field_flags & static_cast<jule::I64>(1LL)) != static_cast<jule::I64>(1LL))) {
		_1ad131935_checkBinaryForBoundary(_self_, &(_32622_m));
		_1ad131bdd_checkBinaryForNil(_self_, &(_32622_m));
	};
	if (_1ad13de2b_Cond) {
		{
			
			if (_1ad130d85_strCond(_self_, _32622_m) || _1ad130a44_boolCond(_self_, &(_32622_m)) || _1ad130703_selfCmpCond(_self_, &(_32622_m))) {
				_case_begin_1a9946715:;
				{
					return;;
				}
			}
			_match_end_1a9946605:;
		};
	};
	if (_1ad13167c_tryNeutralElement(_self_, &(_32622_m))) {
		return;;
	};
	if ((!(_1ad13d249_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32622_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a994646d:;
			{
				goto _match_end_1a994797a;
			}
		}
		else {
			_case_begin_1a99479e1:;
			{
				return;;
			}
		}
		_match_end_1a994797a:;
	};
	jule::Ptr<_1ab94292e_Prim> _3613_lp = _1ab93bebc_Prim((*((*(_32622_m))._field_Left))._field_Type.ptr());;
	if ((_3613_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab94292e_Prim> _3653_rp = _1ab93bebc_Prim((*((*(_32622_m))._field_Right))._field_Type);;
	if ((_3653_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32622_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a994a3ea:;
			{
				jule::Bool _3724_ok;
				jule::U64 _3728_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ad1340db_checkForBitShiftOpt(&((*_32622_m.alloc)._field_Left), &((*_32622_m.alloc)._field_Right));
					_3724_ok = __jule_assign_result.__jule_result_arg0;
					_3728_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3724_ok) {
					(*_32622_m.alloc)._field_Op=jule::new_ptr<_1ab6a54d8_Token>((*(*(_32622_m))._field_Op.alloc));
					(*(*(_32622_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32622_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1ab070c61_Const> _3779_c = (*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
					_1ab073e73_SetU64(_3779_c.ptr(), _3728_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a994a461:;
			{
				jule::Bool _3844_ok;
				jule::U64 _3848_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ad1340db_checkForBitShiftOpt(&((*_32622_m.alloc)._field_Left), &((*_32622_m.alloc)._field_Right));
					_3844_ok = __jule_assign_result.__jule_result_arg0;
					_3848_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3844_ok) {
					(*_32622_m.alloc)._field_Op=jule::new_ptr<_1ab6a54d8_Token>((*(*(_32622_m))._field_Op.alloc));
					(*(*(_32622_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32622_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1ab070c61_Const> _3899_c = (*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
					_1ab073e73_SetU64(_3899_c.ptr(), _3848_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a994a4c7:;
			{
				jule::Ptr<_1ab070c61_Const> _3968_c = (*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
				if ((_1ab073912_AsF64(_3968_c.ptr()) == 2LL)) {
					(*_32622_m.alloc)._field_Op=jule::new_ptr<_1ab6a54d8_Token>((*(*(_32622_m))._field_Op.alloc));
					(*(*(_32622_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32622_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1ab073bba_SetI64(_3968_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a994a53d:;
			{
				jule::F64 _4084_s = _1ab073912_AsF64((*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15).ptr());;
				if ((_4084_s == 0LL)) {
					(*((*(_self_))._field_model))=(*(*(_32622_m))._field_Left.alloc)._field_Model;
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a994a5a4:;
			{
				jule::I64 _4154_z = _1ab11020c_BitSizeOf((*(_3613_lp))._field_Kind);;
				jule::U64 _4164_s = _1ab07367b_AsU64((*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15).ptr());;
				if ((_4164_s >= static_cast<jule::U64>(_4154_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1ab071459_NewU64(0LLU), &__jule_any_type15);
					return;;
				};
			}
		}
		else {
			_case_begin_1a994a054:;
			{
				return;;
			}
		}
		_match_end_1a994a373:;
	};
	jule::Any _4297_model = jule::Any(jule::new_ptr<_1ad1231da_UnsafeBinaryExprModel>(_1ad1231da_UnsafeBinaryExprModel{._field_Node=_32622_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4297_model))))));
}



inline void _1ad13224e_unary(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07c9e8_UnaryExprModel> _43321_m) {
	if ((!(_1ad13da63_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43321_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a995b670:;
			{
				{
					auto &_match_expr{ (*((*(_43321_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1a995d683:;
						{
							jule::Ptr<_1ab07c9e8_UnaryExprModel> _4419_um = (*((*(_43321_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab07c9e8_UnaryExprModel>();;
							if (((*((*(_4419_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4419_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1a995d60b:;
				};
				if ((!(_1ad13d502_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ad126d37_isNilValidType((*(*(_43321_m))._field_Expr.alloc)._field_Type))) {
					jule::Uintptr _4555_var = _1ad127178_getNilVar((*(*(_43321_m))._field_Expr.alloc)._field_Model);;
					if (_1ad1262ed_isSafe((*((*(_self_))._field_data))._field_nils, _4555_var)) {
						jule::Any _45710_model = jule::Any(jule::new_ptr<_1ad124461_UnsafeDerefExprModel>(_1ad124461_UnsafeDerefExprModel{._field_Base=_43321_m}), &__jule_any_type130);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_45710_model))))));
						return;;
					};
					_1ad125b6b_pushVar((*((*(_self_))._field_data))._field_nils, _4555_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a995b6d6:;
			{
				{
					auto &_match_expr{ (*((*(_43321_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1a9966b64:;
						{
							jule::Ptr<_1ab8a7289_Var> _4679_v = (*((*(_43321_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
							if ((*(_4679_v))._field_Reference) {
								jule::Any _46910_model = jule::Any(jule::new_ptr<_1ad12231b_RefExprModel>(_1ad12231b_RefExprModel{._field_Var=_4679_v}), &__jule_any_type131);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46910_model))))));
							};
						}
					}
					_match_end_1a9966adc:;
				};
			}
		}
		_match_end_1a995b609:;
	};
}



inline void _1ad132507_structureLit(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07d3bc_StructLitExprModel> _47628_m) {
	{
		auto expr = &((*(_47628_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99690a6:;
		if (it != expr_end) {
			jule::Ptr<_1ab07d026_StructArgExprModel> _47715_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1ad13ba3e_isBoundaryRiskyType((*((*(_47715_arg))._field_Expr))._field_Type)) {
						_1ad13b775_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_47715_arg, &__jule_any_type132));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1ad1266a5_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_47715_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1ad136561_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_47715_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1a99690a6:;
			++it;
			goto _iter_begin_1a99690a6;
		}
		_iter_end_1a99690a6:;
	};
}



inline void _1ad1327b0_casting(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07dc4c_CastingExprModel> _49223_m) {
	jule::Bool _4933_valid = _1ad13686e_isDynamicValidType((*(_49223_m))._field_ExprType);;
	jule::Uintptr _4943_var = _1ad1370de_getDynamicVar((*((*_49223_m.alloc)._field_Expr))._field_Model);;
	if (((_4933_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1ad1361a9_isFits((*((*(_self_))._field_data))._field_dynamic, _4943_var, (*_49223_m.alloc)._field_Type))) {
		jule::Any _4968_model = jule::Any(jule::new_ptr<_1ad12475d_UnsafeCastingExprModel>(_1ad12475d_UnsafeCastingExprModel{._field_Base=_49223_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4968_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4933_valid)) {
		_1ad13596c_pushVar((*((*(_self_))._field_data))._field_dynamic, _4943_var, (*_49223_m.alloc)._field_Type);
	};
}



inline void _1ad132b23_args(_1ad12ebec_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>> _50620_params, jule::Slice<jule::Any>* _50652_args) {
	{
		auto expr = _50652_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a997a0d9:;
		if (it != expr_end) {
			jule::I64 _5078_i = it - expr->begin();
			jule::Any _50715_arg = *it;
			{
				if ((_5078_i >= _50620_params.len())) {
					goto _iter_next_1a997a0d9;
				};
				jule::Ptr<_1ab08b84d_ParamIns> _5118_p = _50620_params[_5078_i];;
				if (((*((*(_5118_p))._field_Decl))._field_Mutable && (*(*(_5118_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1ad13ba3e_isBoundaryRiskyType((*_5118_p.alloc)._field_Type)) {
							_1ad13b775_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _50715_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1ad1266a5_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _50715_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1ad136561_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _50715_arg);
					};
				};
			}
			_iter_next_1a997a0d9:;
			++it;
			_5078_i++;
			goto _iter_begin_1a997a0d9;
		}
		_iter_end_1a997a0d9:;
	};
}



inline void _1ad132dcb_scope(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab835bc9_Scope>* _52822_s) {
	jule::Ptr<_1ad128344_scopeOptimizer> _5297_scopt = static__1ad1288a5_new((*(_52822_s)));;
	(*(_5297_scopt))._field_data=(*(_self_))._field_data;
	_1ad12ca1e_optimize(_5297_scopt);
}



inline void _1ad133184_optimizeStrBuilderCall(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _53439_m) {
	;
	{
		if (((*((*(_1ab3e1136_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel>(_1ad12175a_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1ab3e1136_ProgramMeta))._field_StrBuilder.alloc)._field_WriteByte == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel>(_1ad12175a_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1ab3e1136_ProgramMeta))._field_StrBuilder.alloc)._field_WriteRune == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel>(_1ad12175a_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1ab3e1136_ProgramMeta))._field_StrBuilder.alloc)._field_WriteStr == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel>(_1ad12175a_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
}



inline void _1ad13343c_funcCall(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel> _55024_m) {
	_1ad132b23_args(_self_, (*((*(_55024_m))._field_Func))._field_Params, &((*_55024_m.alloc)._field_Args));
	if (((*_55024_m.alloc)._field_Except != nullptr)) {
		_1ad132dcb_scope(_self_, &((*_55024_m.alloc)._field_Except));
	};
	{
		
		if ((_1ad140290_StdStrings && ((*(_1ab3e1136_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1a998a539:;
			{
				_1ad133184_optimizeStrBuilderCall(_self_, &(_55024_m));
			}
		}
		_match_end_1a9989cec:;
	};
}



inline void _1ad1336e5_indexing(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab07ee7e_IndexingExprModel> _56124_m) {
	if ((!(_1ad13d502_Access))) {
		return;;
	};
	jule::Bool _5663_array = (_1ab93cc8c_Arr((*((*(_56124_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_5663_array && _1ab9074c6_IsConst((*_56124_m.alloc)._field_Index.ptr()))) {
		jule::Any _5698_model = jule::Any(jule::new_ptr<_1ad1234d7_UnsafeIndexingExprModel>(_1ad1234d7_UnsafeIndexingExprModel{._field_Node=_56124_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5698_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1ad13bd08_isBoundaryValidType((*(*(_56124_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _5754_var = _1ad13c0c2_getBoundaryVar((*(*(_56124_m))._field_Expr.alloc)._field_Model);;
		if (_1ad13a873_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5754_var, (*(*(_56124_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5779_model = jule::Any(jule::new_ptr<_1ad1234d7_UnsafeIndexingExprModel>(_1ad1234d7_UnsafeIndexingExprModel{._field_Node=_56124_m}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5779_model))))));
			return;;
		};
		_1ad13a136_pushVar((*((*(_self_))._field_data))._field_boundary, _5754_var, (*(*(_56124_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1ad13399d_anonFunc(_1ad12ebec_exprOptimizer* _self_, jule::Ptr<_1ab080435_AnonFnExprModel> _58524_m) {
	_1ad132dcb_scope(_self_, &((*((*(_58524_m))._field_Func))._field_Scope));
}



inline void _1ad133b9b_do(_1ad12ebec_exprOptimizer* _self_) {
	_1ab3da482_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1a9996699, jule::Ptr<__jule_anon_1a9996699_ctx>::make(__jule_anon_1a9996699_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9996699_ctx_handler));
}








inline jule::Bool _1ad135186_dynamicVar_eq(_1ad135186_dynamicVar *_self_, _1ad135186_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1ad13596c_pushVar(jule::Ptr<_1ad1354c7_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1ab939816_Type> _2442_kind) {
	if (((!(_1ad13eed7_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1ad136c9d_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99a607c:;
		if (it != expr_end) {
			_1ad135186_dynamicVar _3015_v = *it;
			{
				if ((_3015_v._field_var == _2424_var)) {
					_3015_v._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1a99a607c:;
			++it;
			goto _iter_begin_1a99a607c;
		}
		_iter_end_1a99a607c:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99a6a72:;
		if (it != expr_end) {
			_1ad135186_dynamicVar _3715_v = *it;
			{
				if ((_3715_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1ab939816_Type> _1___jule_assign_arg = _2442_kind;
						_3715_v._field_var = ___jule_assign_arg;
						_3715_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1a99a6a72:;
			++it;
			goto _iter_begin_1a99a6a72;
		}
		_iter_end_1a99a6a72:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1ad135186_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad135186_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1ad135cad_removeVar(_1ad1354c7_dynamic* _self_, jule::Uintptr _4725_var) {
	if ((_4725_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a99a8c83:;
			if (it != expr_end) {
				_1ad135186_dynamicVar _4916_v = *it;
				{
					if ((_4916_v._field_var == _4725_var)) {
						_4916_v._field_var=0LLU;
						_4916_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1a99a8c83:;
				++it;
				goto _iter_begin_1a99a8c83;
			}
			_iter_end_1a99a8c83:;
		};
	};
	return false;;
}



inline jule::Bool _1ad1361a9_isFits(_1ad1354c7_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1ab939816_Type> _6136_kind) {
	if ((_6122_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a99aa647:;
			if (it != expr_end) {
				_1ad135186_dynamicVar _6311_v = *it;
				{
					if ((_6311_v._field_var == _6122_var)) {
						return ((_6311_v._field_kind != nullptr) && _1ab93a053_Equal(_6311_v._field_kind, _6136_kind));;
					};
				}
				_iter_next_1a99aa647:;
				++it;
				goto _iter_begin_1a99aa647;
			}
			_iter_end_1a99aa647:;
		};
	};
	return false;;
}








inline jule::Bool _1ad1383a9_data_eq(_1ad1383a9_data *_self_, _1ad1383a9_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic) &&
		(_self_->_field_flags == _self_->_field_flags);
}

inline _1ad137cd2_dataCheckpoint _1ad138761_getCheckpoint(_1ad1383a9_data* _self_) {
	_1ad137cd2_dataCheckpoint _347_c = _1ad137cd2_dataCheckpoint{._field_boundary=_1ad139b91_boundary{._field_vars=jule::Slice<_1ad139850_boundaryVar>(nullptr)}, ._field_nils=_1ad1256c6_nils{._field_vars=jule::Slice<_1ad125385_nilVar>(nullptr)}, ._field_dynamic=_1ad1354c7_dynamic{._field_vars=jule::Slice<_1ad135186_dynamicVar>(nullptr)}};;
	_347_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ad139850_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ad139850_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_347_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99ac539:;
		if (it != expr_end) {
			jule::I64 _367_i = it - expr->begin();
			{
				_347_c._field_boundary._field_vars[_367_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_347_c._field_boundary._field_vars[_367_i]._field_maxSize);
			}
			_iter_next_1a99ac539:;
			++it;
			_367_i++;
			goto _iter_begin_1a99ac539;
		}
		_iter_end_1a99ac539:;
	};
	_347_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ad125385_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ad125385_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_347_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ad135186_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ad135186_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1ab939816_Type>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _347_c;;
}



inline void _1ad138a19_loadCheckpoint(_1ad1383a9_data* _self_, _1ad137cd2_dataCheckpoint* _4435_c) {
	(*((*(_self_))._field_boundary))=(*(_4435_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_4435_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_4435_c))._field_dynamic;
}











inline void _1ad13a136_pushVar(_1ad139b91_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1ad13d502_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1ad13ac08_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99c1949:;
		if (it != expr_end) {
			_1ad139850_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a99c273b:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1ad13b445_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1a99c273b:;
							++it;
							_349_i++;
							goto _iter_begin_1a99c273b;
						}
						_iter_end_1a99c273b:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1a99c1949:;
			++it;
			goto _iter_begin_1a99c1949;
		}
		_iter_end_1a99c1949:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99c22b8:;
		if (it != expr_end) {
			_1ad139850_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1a99c22b8:;
			++it;
			goto _iter_begin_1a99c22b8;
		}
		_iter_end_1a99c22b8:;
	};
	{ jule::Slice<_1ad139850_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ad139850_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1ad13a873_fitsMaxSize(_1ad139b91_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a99c7158:;
			if (it != expr_end) {
				_1ad139850_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1ad13b0c1_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1a99c7158:;
				++it;
				goto _iter_begin_1a99c7158;
			}
			_iter_end_1a99c7158:;
		};
	};
	return false;;
}








inline jule::Bool _1ad1d80d5_Optimizer_eq(_1ad1d80d5_Optimizer *_self_, _1ad1d80d5_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1ad1d80d5_Optimizer> static__1ad1d859c_New(jule::Ptr<_1ab3d5ec7_IR>* _2121_ir) {
	return jule::new_ptr<_1ad1d80d5_Optimizer>(_1ad1d80d5_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1ad1d8855_optimizeExpr(_1ad1d80d5_Optimizer* _self_, jule::Any* _2733_model) {
	static__1ad1300c6_optimize(_2733_model);
}



inline void _1ad1d8b0d_optimizeGlobal(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab8a7289_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1ad1d8855_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ad1d8db6_optimizeFunction(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab0898e5_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99cd390:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1ad128344_scopeOptimizer> _428_so = static__1ad1288a5_new((*(_4115_ins))._field_Scope);;
				_1ad12ca1e_optimize(_428_so);
			}
			_iter_next_1a99cd390:;
			++it;
			goto _iter_begin_1a99cd390;
		}
		_iter_end_1a99cd390:;
	};
}



inline void _1ad1d916e_optimizeStruct(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1a37a2577_Struct>* _4735_s) {
	if ((*((*(_4735_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4735_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99cea67:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99d046e:;
					if (it != expr_end) {
						jule::Ptr<_1a37a4832_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1ad1d8855_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1a99d046e:;
						++it;
						goto _iter_begin_1a99d046e;
					}
					_iter_end_1a99d046e:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99d08c0:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _5716_m = *it;
						{
							_1ad1d8db6_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1a99d08c0:;
						++it;
						goto _iter_begin_1a99d08c0;
					}
					_iter_end_1a99d08c0:;
				};
			}
			_iter_next_1a99cea67:;
			++it;
			goto _iter_begin_1a99cea67;
		}
		_iter_end_1a99cea67:;
	};
}



inline void _1ad1d9427_optimizeGlobals(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99d1c89:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99d2a9d:;
					if (it != expr_end) {
						jule::Ptr<_1ab8a7289_Var> _6516_v = *it;
						{
							_1ad1d8b0d_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1a99d2a9d:;
						++it;
						goto _iter_begin_1a99d2a9d;
					}
					_iter_end_1a99d2a9d:;
				};
			}
			_iter_next_1a99d1c89:;
			++it;
			goto _iter_begin_1a99d1c89;
		}
		_iter_end_1a99d1c89:;
	};
}



inline void _1ad1d96d0_optimizeFunctions(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99d3153:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99d3ebc:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _7316_func = *it;
						{
							_1ad1d8db6_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1a99d3ebc:;
						++it;
						goto _iter_begin_1a99d3ebc;
					}
					_iter_end_1a99d3ebc:;
				};
			}
			_iter_next_1a99d3153:;
			++it;
			goto _iter_begin_1a99d3153;
		}
		_iter_end_1a99d3153:;
	};
}



inline void _1ad1d9988_optimizeStructs(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99d4572:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99d53db:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> _8116_s = *it;
						{
							_1ad1d916e_optimizeStruct(_self_, &(_8116_s));
						}
						_iter_next_1a99d53db:;
						++it;
						goto _iter_begin_1a99d53db;
					}
					_iter_end_1a99d53db:;
				};
			}
			_iter_next_1a99d4572:;
			++it;
			goto _iter_begin_1a99d4572;
		}
		_iter_end_1a99d4572:;
	};
}



inline void _1ad1d9c41_optimizePackage(_1ad1d80d5_Optimizer* _self_, jule::Ptr<_1ab868cea_Package>* _8736_p) {
	_1ad1d9427_optimizeGlobals(_self_, _8736_p);
	_1ad1d96d0_optimizeFunctions(_self_, _8736_p);
	_1ad1d9988_optimizeStructs(_self_, _8736_p);
}



inline void _1ad1d9e3e_Optimize(_1ad1d80d5_Optimizer* _self_) {
	_1ad1da1a3_detectEnabled();
	if (_1ad13cb94_Deadcode) {
		_1ad1d1bd3_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ad1d7dd7_scopeEnabled || _1ad1d7a52_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a99d7443:;
			if (it != expr_end) {
				jule::Ptr<_1ab866578_ImportInfo> _10316_u = *it;
				{
					if ((!((*(_10316_u))._field_Binded))) {
						_1ad1d9c41_optimizePackage(_self_, &((*_10316_u.alloc)._field_Package));
					};
				}
				_iter_next_1a99d7443:;
				++it;
				goto _iter_begin_1a99d7443;
			}
			_iter_end_1a99d7443:;
		};
		_1ad1d9c41_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1ad13cb94_Deadcode) {
		_1ad1d6732_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1ad4b2e70_AbsTime_eq(_1ad4b2e70_AbsTime *_self_, _1ad4b2e70_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1ad4b3646_Time_eq(_1ad4b3646_Time *_self_, _1ad4b3646_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1ad4b3646_Time static__1ad4b3a31_Unix(jule::U64 _9117_sec) {
	return _1ad4b3646_Time{._field_sec=_9117_sec};;
}



inline _1ad4b3646_Time static__1ad4b3c40_Now(void) {
	return static__1ad4b3a31_Unix(_1ad4b5736_unix());;
}



inline _1ad4b2e70_AbsTime _1ad4b5428_Abs(_1ad4b3646_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1ad4b23d1_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1ad4b23d1_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1a9a17011:;
	}
	_iter_end_1a9a17011:;;
	_1ad4b2e70_AbsTime _1747_t = _1ad4b2e70_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1ad1dc2a4_scopeCoder_eq(_1ad1dc2a4_scopeCoder *_self_, _1ad1dc2a4_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1ad1dc2a4_scopeCoder> static__1ad1dc99c_new(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1ad1dc2a4_scopeCoder>(_1ad1dc2a4_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1b1727e90_iterHead(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ad13c897_Copy && _1ad1e56ca_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b172d539:;
				{
					jule::Ptr<_1ab8a7289_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1ad20706b_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1b172b966;
					};
					goto _case_begin_1b172b9cc;
				}
			}
			else {
				_case_begin_1b172b9cc:;
				{
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ad20706b_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b172b966:;
		};
	} else {
		_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, _4452_begin);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
}



inline void _1ad1dd173_rangeIndexIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter>* _9336_it) {
	_1a387dcd5_Builder _947_sb = static__1a387e654_New(64LL);;
	static__1ad2113e9_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1a3880666_Str(&_947_sb);;
	_1a3880864_Clear(&_947_sb);
	static__1ad2119c1_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1a3880666_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1b1727e90_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1ad4c7dca_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b17389a6, jule::Ptr<__jule_anon_1b17389a6_ctx>::make(__jule_anon_1b17389a6_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1b17389a6_ctx_handler));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1ad13c897_Copy && _1ad1e5a93_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1ad4c7dca_varInitExpr((*(_self_))._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b173c4b0, jule::Ptr<__jule_anon_1b173c4b0_ctx>::make(__jule_anon_1b173c4b0_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1b173c4b0_ctx_handler));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	_1ad1e4971_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, _993_next);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1ad21110d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad4c1247_write((*(_self_))._field_oc, _963_begin);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad2116d5_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1dd42b_rangeHashmapIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter>* _16038_it) {
	_1a387dcd5_Builder _1617_sb = static__1a387e654_New(64LL);;
	static__1ad2113e9_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1a3880666_Str(&_1617_sb);;
	_1a3880864_Clear(&_1617_sb);
	static__1ad2119c1_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1a3880666_Str(&_1617_sb);;
	jule::Ptr<_1ab9485c2_Map> _1687__map = _1ab93da5c_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a37a2577_Struct> _1697_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a37a53d2_StructIns> _1707_ins = _1ab3e02bc_FindStructGenericInstance(&(_1697_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ab08c9a3_FnIns> _1727_f = (*(_1a37a647c_FindMethod(_1707_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1a37a2577_Struct> _1747_itDecl = _1ab9c12d7_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1a37a53d2_StructIns> _1757_iterator = _1ab3e02bc_FindStructGenericInstance(&(_1747_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1ab08c9a3_FnIns> _1767_nextCall = (*(_1a37a647c_FindMethod(_1757_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4d3e3b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1757_iterator);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1727_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, _1633_begin);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4d514b_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1ad4c7dca_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b175ca96, jule::Ptr<__jule_anon_1b175ca96_ctx>::make(__jule_anon_1b175ca96_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b175ca96_ctx_handler));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1ad4c7dca_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ad15b9d7, jule::Ptr<__jule_anon_1ad15b9d7_ctx>::make(__jule_anon_1ad15b9d7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad15b9d7_ctx_handler));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	_1ad1e4971_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, _1663_next);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad4c1247_write((*(_self_))._field_oc, _1633_begin);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad2116d5_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1dd6d4_strRuneIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad124164_StrRuneIter> _24332_it) {
	_1a387dcd5_Builder _2447_sb = static__1a387e654_New(64LL);;
	static__1ad2113e9_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _1a3880666_Str(&_2447_sb);;
	_1a3880864_Clear(&_2447_sb);
	static__1ad2119c1_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _1a3880666_Str(&_2447_sb);;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ad13c897_Copy && _1ad1e56ca_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1ad16b222:;
				{
					jule::Ptr<_1ab8a7289_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1ad20706b_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1ad16964e;
					};
					goto _case_begin_1ad1696b5;
				}
			}
			else {
				_case_begin_1ad1696b5:;
				{
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ad20706b_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ad16964e:;
		};
	} else {
		_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2557_ref) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2557_ref) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1ad4c7dca_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad1761c7, jule::Ptr<__jule_anon_1ad1761c7_ctx>::make(__jule_anon_1ad1761c7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad1761c7_ctx_handler));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1ad4c7dca_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	_1ad4c1247_write((*(_self_))._field_oc, _2463_begin);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1ad21110d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad1e4971_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, _2493_next);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1ad21110d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ad4c1247_write((*(_self_))._field_oc, _2463_begin);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1dd98c_ifCase(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab8360e7_If> _35527_i) {
	if (((*(_35527_i))._field_Expr != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35527_i.alloc)._field_Expr);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1ad1e4971_scope(_self_, (*_35527_i.alloc)._field_Scope);
}



inline void _1ad1ddc45_conditional(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab836812_Conditional> _36432_c) {
	jule::Bool _3657_writed = false;;
	{
		auto expr = &((*(_36432_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b192de43:;
		if (it != expr_end) {
			jule::Ptr<_1ab8360e7_If> _36615_elif = *it;
			{
				if ((_36615_elif == nullptr)) {
					goto _iter_next_1b192de43;
				};
				if (_3657_writed) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3657_writed=true;
				_1ad1dd98c_ifCase(_self_, _36615_elif);
			}
			_iter_next_1b192de43:;
			++it;
			goto _iter_begin_1b192de43;
		}
		_iter_end_1b192de43:;
	};
	if (((*_36432_c.alloc)._field_Default != nullptr)) {
		if (_3657_writed) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1ad1e4971_scope(_self_, (*(*(_36432_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1ad1ddeed_infIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab836b0e_InfIter> _38428_it) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad1e4971_scope(_self_, (*(_38428_it))._field_Scope);
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad2119c1_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad2116d5_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad1de2a6_whileIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab8370b5_WhileIter> _40130_it) {
	if ((((*(_40130_it))._field_Expr != nullptr) && ((*_40130_it.alloc)._field_Next == nullptr))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_40130_it))._field_Expr != nullptr)) {
			_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_40130_it.alloc)._field_Next != nullptr)) {
			_1ad1e4410_st(_self_, (*_40130_it.alloc)._field_Next);
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_40130_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad1e4971_scope(_self_, (*_40130_it.alloc)._field_Scope);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad2119c1_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad2116d5_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad1de55e_rangeIter(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837a11_RangeIter> _44030_it) {
	{
		
		if ((_1ab93d023_Slc((*((*(_44030_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b194483d:;
			{
				_1ad1dd173_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1ab93cc8c_Arr((*((*(_44030_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b19444db:;
			{
				_1ad1dd173_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1ab93da5c_Map((*((*(_44030_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1944552:;
			{
				_1ad1dd42b_rangeHashmapIter(_self_, &(_44030_it));
			}
		}
		else {
			_case_begin_1b1944475:;
			{
				_1ad1dd173_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		_match_end_1b1944365:;
	};
}



inline void _1ad1de817_cont(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab837d96_ContSt> _45321_c) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ad2119c1_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45321_c))._field_It);
}



inline void _1ad1deac0_label(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab838726_Label> _45822_l) {
	static__1ad211cac_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45822_l));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1ad1ded78_gotoSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab838d86_GotoSt> _46323_gt) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ad211cac_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46323_gt))._field_Label));
}



inline void _1ad1e0131_postfix(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839260_Postfix> _46828_p) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46828_p))._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1ad4c1247_write((*(_self_))._field_oc, (*_46828_p.alloc)._field_Op);
}



inline void _1ad1e03d9_assignLeft(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Any* _47532_model) {
	{
		auto &_match_expr{ (*(_47532_model)) };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b194d858:;
			{
				jule::Ptr<_1ab07ee7e_IndexingExprModel> _4788_iem = (*(_47532_model)).cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42);;
				jule::Ptr<_1ab9485c2_Map> _4794__map = _1ab93da5c_Map((*((*(_4788_iem))._field_Expr))._field_Type.ptr());;
				if ((_4794__map == nullptr)) {
					goto _match_end_1b194d7e2;
				};
				jule::Ptr<_1a37a2577_Struct> _4858_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1a37a53d2_StructIns> _4868_ins = _1ab3e02bc_FindStructGenericInstance(&(_4858_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4794__map))._field_Key; (*it++) = (*(_4794__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1ab08c9a3_FnIns> _4888_f = (*(_1a37a647c_FindMethod(_4868_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4888_f));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4788_iem))._field_Expr.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1a87c1be0_Production))) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_4788_iem.alloc)._field_Token));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4788_iem.alloc)._field_Index))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1b194d7e2:;
	};
	_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47532_model)));
}



inline void _1ad1e0692_shl(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _50724_a) {
	_1ad1e03d9_assignLeft(_self_, &((*((*(_50724_a))._field_Left))._field_Model));
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1ad1eb6ae_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50724_a.alloc)._field_Left), &((*_50724_a.alloc)._field_Right));
}



inline void _1ad1e094a_shr(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _51324_a) {
	_1ad1e03d9_assignLeft(_self_, &((*((*(_51324_a))._field_Left))._field_Model));
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1ad1eba22_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51324_a.alloc)._field_Left), &((*_51324_a.alloc)._field_Right));
}



inline void _1ad1e0c03_divByZeroAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _51936_a) {
	_1ad1e03d9_assignLeft(_self_, &((*((*(_51936_a))._field_Left))._field_Model));
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ea89a_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51936_a.alloc)._field_Op), &((*_51936_a.alloc)._field_Left), &((*_51936_a.alloc)._field_Right));
}



inline void _1ad1e11cb_operatorOverloadingAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _52547_s, jule::Ptr<_1ab07c124_OperandExprModel>* _52573_l, jule::Ptr<_1ab07c124_OperandExprModel>* _5268_r, jule::U64 _52636_op) {
	;
	jule::Ptr<_1ab08c9a3_FnIns> _5287_f = _1ab3de9b4_FindOperator(_52547_s, _52636_op, false);;
	if ((_5287_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:530:4"));;
	};
	static__1ad20ed87_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5287_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1ad1e03d9_assignLeft(_self_, &((*((*(_52573_l))))._field_Model));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5268_r))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1e1484_assign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839716_Assign> _54027_a) {
	{
		auto &_match_expr{ (*((*(_54027_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b1964462:;
			{
				if ((_1a87c199d_Safety && (_1ab93d540_Struct((*((*(_54027_a))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1ad1e0c03_divByZeroAssign(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b19644d9:;
			{
				if ((_1ab93d540_Struct((*((*(_54027_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1ad1e0692_shl(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b1964550:;
			{
				if ((_1ab93d540_Struct((*((*(_54027_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1ad1e094a_shr(_self_, _54027_a);
					return;;
				};
			}
		}
		_match_end_1b1964396:;
	};
	if ((((*((*(_54027_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ab93d540_Struct((*((*_54027_a.alloc)._field_Left))._field_Type.ptr()) != nullptr))) {
		jule::Ptr<_1a37a53d2_StructIns> _5638_s = _1ab93d540_Struct((*((*(_54027_a))._field_Left))._field_Type);;
		_1ad1e11cb_operatorOverloadingAssign(_self_, &(_5638_s), &((*_54027_a.alloc)._field_Left), &((*_54027_a.alloc)._field_Right), (*(*(_54027_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1ad1e03d9_assignLeft(_self_, &((*(*(_54027_a))._field_Left.alloc)._field_Model));
	_1ad4c1247_write((*_self_.alloc)._field_oc, (*(*(_54027_a))._field_Op.alloc)._field_Kind);
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_54027_a.alloc)._field_Right))._field_Model);
}



inline void _1ad1e173c_mapLookupAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _57337_a) {
	jule::Ptr<_1ab07ee7e_IndexingExprModel> _5757_iem = (*((*(_57337_a))))._field_Right.cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42);;
	jule::Ptr<_1ab9485c2_Map> _5767__map = _1ab93da5c_Map((*((*(_5757_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a37a2577_Struct> _5787_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a37a53d2_StructIns> _5797_ins = _1ab3e02bc_FindStructGenericInstance(&(_5787_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5767__map))._field_Key; (*it++) = (*_5767__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ab08c9a3_FnIns> _5817_f = (*(_1a37a647c_FindMethod(_5797_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5817_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1e03d9_assignLeft(_self_, &((*(*(_5757_iem))._field_Expr.alloc)._field_Model));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5757_iem.alloc)._field_Index))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57337_a))))._field_Left[0LL] != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[0LL]))._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57337_a))))._field_Left[1LL] != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[1LL]))._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1e19e5_multiAssignTup(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _60636_a) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ab082c0c_TupleExprModel> _6167_tup = (*((*(_60636_a))))._field_Right.cast_ptr<_1ab082c0c_TupleExprModel>(&__jule_any_type83);;
	{
		auto expr = &((*(_6167_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1979e7d:;
		if (it != expr_end) {
			jule::I64 _6188_i = it - expr->begin();
			jule::Ptr<_1ab906a8b_Data> _61815_r = *it;
			{
				_1ad4c1ae9_indent((*(_self_))._field_oc);
				jule::Ptr<_1ab906a8b_Data> _6208_l = (*((*(_60636_a))))._field_Left[_6188_i];;
				if ((_6208_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6208_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1b197d02a:;
							{
								jule::Ptr<_1ab8a7289_Var> _62410_v = (*(_6208_l))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
								if ((!((*(_62410_v))._field_Reference))) {
									goto _match_end_1b197ceb4;
								};
								{
									auto expr = &((*((*(_60636_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b197e02b:;
									if (it != expr_end) {
										jule::Ptr<_1ab8a7289_Var> _63113_dv = *it;
										{
											if ((_62410_v == _63113_dv)) {
												goto _julec_label_1b197ed62;
											};
										}
										_iter_next_1b197e02b:;
										++it;
										goto _iter_begin_1b197e02b;
									}
									_iter_end_1b197e02b:;
								};
								goto _match_end_1b197ceb4;
								_julec_label_1b197ed62:;
								static__1ad21110d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _62410_v);
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61815_r))._field_Model);
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_60636_a))))._field_Left[_6188_i]=nullptr;
								goto _iter_next_1b1979e7d;
							}
						}
						_match_end_1b197ceb4:;
					};
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6208_l.alloc)._field_Type);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1ad20e35e_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ad1dba45_assignArgName, static_cast<jule::Uintptr>(_6188_i));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_61815_r.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b1979e7d:;
			++it;
			_6188_i++;
			goto _iter_begin_1b1979e7d;
		}
		_iter_end_1b1979e7d:;
	};
	{
		auto expr = &((*((*(_60636_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19850cb:;
		if (it != expr_end) {
			jule::I64 _6608_i = it - expr->begin();
			jule::Ptr<_1ab906a8b_Data> _66015_l = *it;
			{
				if ((_66015_l == nullptr)) {
					goto _iter_next_1b19850cb;
				};
				_1ad4c1ae9_indent((*(_self_))._field_oc);
				_1ad1e03d9_assignLeft(_self_, &((*(_66015_l))._field_Model));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1ad20e35e_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ad1dba45_assignArgName, static_cast<jule::Uintptr>(_6608_i));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b19850cb:;
			++it;
			_6608_i++;
			goto _iter_begin_1b19850cb;
		}
		_iter_end_1b19850cb:;
	};
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad1e1c9d_multiAssignFn(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign>* _67635_a) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	jule::Ptr<_1ab07e5ee_FnCallExprModel> _6817_f = (*((*(_67635_a))))._field_Right.cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30);;
	_1ad4dab35_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6817_f))._field_Func))._field_Result));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_67635_a))))._field_Right);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1ab947a22_Tuple> _6877_tup = _1ab93dce3_Tup((*(*(_6817_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_67635_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b198dbb7:;
		if (it != expr_end) {
			jule::I64 _6888_i = it - expr->begin();
			jule::Ptr<_1ab906a8b_Data> _68815_l = *it;
			{
				if ((_68815_l == nullptr)) {
					goto _iter_next_1b198dbb7;
				};
				;
				_1ad4c1ae9_indent((*(_self_))._field_oc);
				_1ad1e03d9_assignLeft(_self_, &((*(_68815_l))._field_Model));
				{
					
					if (_1ab93a053_Equal((*(_6877_tup))._field_Types[_6888_i], (*(_68815_l))._field_Type)) {
						_case_begin_1b1998ed0:;
						{
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_6888_i));
						}
					}
					else if (_1ab3db6a3_IsAny(&((*(_68815_l))._field_Type))) {
						_case_begin_1b1995dde:;
						{
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_6888_i));
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ad4c2c4e_pushAnyType((*(_self_))._field_oc, (*(_6877_tup))._field_Types[_6888_i])));
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1b198eea4:;
						{
							if ((_1ab93d7c6_Trait((*(_6877_tup))._field_Types[_6888_i].ptr()) != nullptr)) {
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1ab095109_Trait> _70910_t1 = _1ab93d7c6_Trait((*(_68815_l))._field_Type.ptr());;
								jule::Ptr<_1ab095109_Trait> _71010_t2 = _1ab93d7c6_Trait((*(_6877_tup))._field_Types[_6888_i].ptr());;
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_6888_i));
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1ad4c3623_pushAndWriteMaskMapper((*(_self_))._field_oc, _70910_t1, _71010_t2);
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b1990ed8;
							};
							jule::Ptr<_1ab095109_Trait> _7185_t = _1ab93d7c6_Trait((*(_68815_l))._field_Type);;
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_6888_i));
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1ad210173_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7185_t);
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ab3de585_FindTraitTypeOffset(_7185_t, (*(_6877_tup))._field_Types[_6888_i])));
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1b1990ed8:;
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b198dbb7:;
			++it;
			_6888_i++;
			goto _iter_begin_1b198dbb7;
		}
		_iter_end_1b198dbb7:;
	};
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad1e2056_multiAssign(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab839bbc_MultiAssign> _73532_a) {
	{
		auto expr = &((*(_73532_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b199e942:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _73815_d = *it;
			{
				_1ad4c7dca_varInitExpr((*(_self_))._field_oc, &(_73815_d), nullptr);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1ad4c1ae9_indent((*(_self_))._field_oc);
			}
			_iter_next_1b199e942:;
			++it;
			goto _iter_begin_1b199e942;
		}
		_iter_end_1b199e942:;
	};
	{
		auto &_match_expr{ (*(_73532_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b19a015c:;
			{
				_1ad1e173c_mapLookupAssign(_self_, &(_73532_a));
				return;;
			}
		}
		_match_end_1b19a00e6:;
	};
	{
		auto &_match_expr{ (*(_73532_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b19a01e5:;
			{
				_1ad1e19e5_multiAssignTup(_self_, &(_73532_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b19a1ba8:;
			{
				_1ad1e1c9d_multiAssignFn(_self_, &(_73532_a));
			}
		}
		else {
			_case_begin_1b19a1b42:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:757:4"));;
			}
		}
		_match_end_1b19a1acb:;
	};
}



inline jule::Fn<void> _1ad1e2397_matchExpr(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83a409_Match> _76130_m) {
	if ((!(_1ab9074c6_IsConst((*(_76130_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b19a433c, jule::Ptr<__jule_anon_1b19a433c_ctx>::make(__jule_anon_1b19a433c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b19a433c_ctx_handler);;
	};
	if (((!(_1ab07523d_IsBool((*(*(_76130_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1ab072b42_ReadBool((*((*(_76130_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b19a566d, jule::Ptr<__jule_anon_1b19a566d_ctx>::make(__jule_anon_1b19a566d_ctx{._self_=_self_,._76130_m=_76130_m}).as<jule::Uintptr>(), __jule_anon_1b19a566d_ctx_handler);;
	};
	return nullptr;;
}



inline void _1ad1e270a_case(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83a409_Match> _77125_m, jule::Ptr<_1ab83ae32_Case> _77146_c) {
	if ((((*(_77146_c))._field_Exprs.len() != 0LL) && (!((*(_77125_m))._field_Comptime)))) {
		if ((((*_77125_m.alloc)._field_Cases.len() > 0LL) && ((*(_77125_m))._field_Cases[0LL] == _77146_c))) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_77146_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b19a9908:;
			if (it != expr_end) {
				jule::I64 _7789_i = it - expr->begin();
				jule::Ptr<_1ab906a8b_Data> _77816_expr = *it;
				{
					{
						
						if ((!((*_77125_m.alloc)._field_TypeMatch))) {
							_case_begin_1b19b258c:;
							{
								jule::Fn<void> _7816_caseExpr = _1ad1e2397_matchExpr(_self_, _77125_m);;
								if (_1ab907817_GoodOperand((*_77125_m.alloc)._field_Expr.ptr(), &(_77816_expr))) {
									if ((_7816_caseExpr != nullptr)) {
										_7816_caseExpr();
										_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_77816_expr))._field_Model);
								} else {
									_1ad1ece0d_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77816_expr))._field_Model);
									if ((_7816_caseExpr != nullptr)) {
										_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7816_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b19aa4ca:;
							{
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ab939816_Type> _79710_tk = (*(_77816_expr))._field_Model.cast_ptr<_1ab939816_Type>(&__jule_any_type86);;
								if ((_1ab93d7c6_Trait((*((*_77125_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1ad1e9206_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1ab93c253_Sptr((*(_77816_expr))._field_Type) != nullptr));
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1ad210173_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ab93d7c6_Trait((*((*(_77125_m))._field_Expr))._field_Type));
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ab3de585_FindTraitTypeOffset(_1ab93d7c6_Trait((*((*(_77125_m))._field_Expr))._field_Type), (*_77816_expr.alloc)._field_Type)));
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _8077_j = _1ad4c2c4e_pushAnyType((*(_self_))._field_oc, _79710_tk);;
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_8077_j));
								};
							}
						}
						_match_end_1b19aa3ba:;
					};
					if ((((*_77146_c.alloc)._field_Exprs.len() - _7789_i) > 1LL)) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1b19a9908:;
				++it;
				_7789_i++;
				goto _iter_begin_1b19a9908;
			}
			_iter_end_1b19a9908:;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_77125_m))._field_Default == _77146_c) && ((*_77125_m.alloc)._field_Cases.len() != 0LL))) {
		_1ad4c1ae9_indent((*(_self_))._field_oc);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad212384_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_77146_c));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_77146_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ad4c1ae9_indent((*(_self_))._field_oc);
		_1ad1e4971_scope(_self_, (*_77146_c.alloc)._field_Scope);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1e29b3_matchSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83a409_Match> _84128_m) {
	if ((((*(_84128_m))._field_Cases.len() == 0LL) && ((*_84128_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_84128_m.alloc)._field_Comptime && (((*_84128_m.alloc)._field_Default == nullptr) || ((*((*((*_84128_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((!((*_84128_m.alloc)._field_Comptime)) && (!(_1ab9074c6_IsConst((*_84128_m.alloc)._field_Expr.ptr()))))) {
		if ((_1ad13c897_Copy && _1ad1e56ca_isCopyOptimizable(&((*_84128_m.alloc)._field_Expr)))) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_84128_m))._field_Expr.alloc)._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	if (((*_84128_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_84128_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b19c5dca:;
			if (it != expr_end) {
				jule::Ptr<_1ab83ae32_Case> _86916_c = *it;
				{
					if ((_86916_c == nullptr)) {
						goto _iter_next_1b19c5dca;
					};
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ad4c1ae9_indent((*(_self_))._field_oc);
					_1ad1e270a_case(_self_, _84128_m, _86916_c);
				}
				_iter_next_1b19c5dca:;
				++it;
				goto _iter_begin_1b19c5dca;
			}
			_iter_end_1b19c5dca:;
		};
	};
	if (((*_84128_m.alloc)._field_Default != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ad1e270a_case(_self_, _84128_m, (*_84128_m.alloc)._field_Default);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad212098_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_84128_m));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1e2c6b_fallSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83b62a_FallSt> _89623_f) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ad212384_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89623_f))._field_DestCase);
}



inline void _1ad1e3024_breakSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab838270_BreakSt> _90124_b) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_90124_b))._field_It != 0LLU)) {
		static__1ad2116d5_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_90124_b.alloc)._field_It);
	} else {
		static__1ad212098_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_90124_b))._field_Mtch);
	};
}



inline void _1ad1e32cc_setResult(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83b9c1_RetSt> _91030_r) {
	if (((*((*((*((*(_91030_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91030_r.alloc)._field_Expr);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_91030_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b19d0d91:;
			{
				jule::Slice<jule::Ptr<_1ab906a8b_Data>> _9208_datas = (*((*(_91030_r))._field_Expr.unsafe_cast_ptr<_1ab082c0c_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9208_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b19d4a76:;
					if (it != expr_end) {
						jule::I64 _9218_i = it - expr->begin();
						jule::Ptr<_1ab906a8b_Data> _92111_data = *it;
						{
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_9218_i));
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_92111_data))._field_Model);
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1ad4c1ae9_indent((*(_self_))._field_oc);
						}
						_iter_next_1b19d4a76:;
						++it;
						_9218_i++;
						goto _iter_begin_1b19d4a76;
					}
					_iter_end_1b19d4a76:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b19d3a20:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1ad20706b_model((*((*(_self_))._field_oc))._field_ec, (*_91030_r.alloc)._field_Expr);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1b19d3635:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:934:4"));;
			}
		}
		_match_end_1b19d35be:;
	};
}



inline void _1ad1e3585_retSt(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab83b9c1_RetSt> _93826_r) {
	if (_1ab089d9b_IsVoid((*((*(_93826_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_93826_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_93826_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_93826_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_93826_r))._field_Func.alloc)._field_Result);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93826_r.alloc)._field_Expr);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93826_r.alloc)._field_Expr);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_93826_r))._field_Expr != nullptr)) {
		_1ad1e32cc_setResult(_self_, _93826_r);
	};
	if ((*((*((*_93826_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1ad4dab35_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_93826_r))._field_Func.alloc)._field_Result));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1ad1e383d_var(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab8a7289_Var> _97424_v) {
	if ((!((*(_97424_v))._field_Constant))) {
		_1ad4c8183_var((*(_self_))._field_oc, _97424_v);
	};
}



inline void _1ad1e3ae6_mutSlicing(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad122d55_MutSlicingExprModel> _98031_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_98031_m))._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1a87c1be0_Production))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_98031_m.alloc)._field_Token));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_98031_m.alloc)._field_Left);
	if (((*_98031_m.alloc)._field_Right != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_98031_m.alloc)._field_Right);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad1e3d9e_swap(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad121b01_SwapExprModel> _99725_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1ad1ece0d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99725_m))._field_Left))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad1ece0d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_99725_m.alloc)._field_Right))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1e4157_exceptionalForwarding(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ad12156d_ExceptionalForwardingExprModel> _100542_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1ad1ee838_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_100542_m))._field_Expr));
}



inline void _1ad1e4410_st(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Any _101123_st) {
	if ((_101123_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _101123_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1a01d90:;
			{
				_1ad1e4971_scope(_self_, _101123_st.cast_ptr<_1ab835bc9_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b1a02115:;
			{
				_1ad1e383d_var(_self_, _101123_st.cast_ptr<_1ab8a7289_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b1a0217b:;
			{
				_1ad20706b_model((*((*(_self_))._field_oc))._field_ec, (*(_101123_st.unsafe_cast_ptr<_1ab906a8b_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b1a028eb:;
			{
				_1ad1ddc45_conditional(_self_, _101123_st.cast_ptr<_1ab836812_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b1a02962:;
			{
				_1ad1ddeed_infIter(_self_, _101123_st.cast_ptr<_1ab836b0e_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b1a029c8:;
			{
				_1ad1de2a6_whileIter(_self_, _101123_st.cast_ptr<_1ab8370b5_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b1a02a3e:;
			{
				_1ad1de55e_rangeIter(_self_, _101123_st.cast_ptr<_1ab837a11_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b1a02aa5:;
			{
				_1ad1de817_cont(_self_, _101123_st.cast_ptr<_1ab837d96_ContSt>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b1a02b1b:;
			{
				_1ad1deac0_label(_self_, _101123_st.cast_ptr<_1ab838726_Label>(&__jule_any_type18));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b1a02b82:;
			{
				_1ad1ded78_gotoSt(_self_, _101123_st.cast_ptr<_1ab838d86_GotoSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b1a02be8:;
			{
				_1ad1e0131_postfix(_self_, _101123_st.cast_ptr<_1ab839260_Postfix>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b1a02c5e:;
			{
				_1ad1e1484_assign(_self_, _101123_st.cast_ptr<_1ab839716_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b1a02cc5:;
			{
				_1ad1e2056_multiAssign(_self_, _101123_st.cast_ptr<_1ab839bbc_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b1a02d3b:;
			{
				_1ad1e29b3_matchSt(_self_, _101123_st.cast_ptr<_1ab83a409_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b1a02da2:;
			{
				_1ad1e2c6b_fallSt(_self_, _101123_st.cast_ptr<_1ab83b62a_FallSt>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b1a02e29:;
			{
				_1ad1e3024_breakSt(_self_, _101123_st.cast_ptr<_1ab838270_BreakSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b1a02ea1:;
			{
				_1ad1e3585_retSt(_self_, _101123_st.cast_ptr<_1ab83b9c1_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b1a03028:;
			{
				_1ad204a4c_pushToSlice((*((*(_self_))._field_oc))._field_ec, _101123_st.cast_ptr<_1ad1238b1_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b1a030a0:;
			{
				_1ad204d05_appendToSlice((*((*(_self_))._field_oc))._field_ec, _101123_st.cast_ptr<_1ad123c8a_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b1a03127:;
			{
				_1ad1e3ae6_mutSlicing(_self_, _101123_st.cast_ptr<_1ad122d55_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b1a0319e:;
			{
				_1ad1e3d9e_swap(_self_, _101123_st.cast_ptr<_1ad121b01_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b1a03226:;
			{
				_1ad1e4157_exceptionalForwarding(_self_, _101123_st.cast_ptr<_1ad12156d_ExceptionalForwardingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b1a0329d:;
			{
				_1ad1dd6d4_strRuneIter(_self_, _101123_st.cast_ptr<_1ad124164_StrRuneIter>(&__jule_any_type122));
			}
		}
		else {
			_case_begin_1b1a01c08:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b1a01b92:;
	};
}



inline void _1ad1e46b8_scopeStmts(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab835bc9_Scope>* _106732_s) {
	{
		auto expr = &((*((*(_106732_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a11366:;
		if (it != expr_end) {
			jule::Any _106815_st = *it;
			{
				_1ad4c1ae9_indent((*(_self_))._field_oc);
				_1ad1e4410_st(_self_, _106815_st);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b1a11366:;
			++it;
			goto _iter_begin_1b1a11366;
		}
		_iter_end_1b1a11366:;
	};
}



inline void _1ad1e4971_scope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab835bc9_Scope> _107626_s) {
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	if ((*(_107626_s))._field_Deferred) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad1e46b8_scopeStmts(_self_, &(_107626_s));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_107626_s.alloc)._field_Deferred) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1ad1e4c29_commonFuncScope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _109137_f) {
	if ((!(_1ab089d9b_IsVoid((*((*(_109137_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1ab947a22_Tuple> _10938_tup = _1ab93dce3_Tup((*((*(_109137_f))))._field_Result.ptr());;
		if ((_10938_tup != nullptr)) {
			_1ad4c1ae9_indent((*(_self_))._field_oc);
			_1ad4da45e_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10938_tup);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10938_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b1a180b5:;
				if (it != expr_end) {
					jule::I64 _109810_i = it - expr->begin();
					jule::Ptr<_1ab939816_Type> _109817_t = *it;
					{
						if (_1ad4dcd13_shouldInitialized(&(_109817_t))) {
							_1ad4c1ae9_indent((*(_self_))._field_oc);
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_109810_i));
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ad208237_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _109817_t);
							_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1b1a180b5:;
					++it;
					_109810_i++;
					goto _iter_begin_1b1a180b5;
				}
				_iter_end_1b1a180b5:;
			};
		} else if (((*((*(*((*(_109137_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1ad4c1ae9_indent((*(_self_))._field_oc);
			_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_109137_f))))._field_Result);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1ad4dcd13_shouldInitialized(&((*((*(_109137_f))))._field_Result))) {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ad208237_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_109137_f))))._field_Result);
			};
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1ad1e46b8_scopeStmts(_self_, &((*((*(_109137_f))))._field_Scope));
	if (((*(*((*(_109137_f))))._field_Decl.alloc)._field_Exceptional && _1ab089d9b_IsVoid((*((*(_109137_f))))._field_Decl))) {
		_1ad4c1ae9_indent((*_self_.alloc)._field_oc);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1ad1e508c_anonFuncScope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel> _113134_m, jule::Str _113161_ident) {
	if (((*((*(_113134_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11353_closure = _1ab3db9e4_IsClosure(&(_113134_m));;
	if (_11353_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ab8a7289_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1ab8a7289_Var>>((void*)__jule_anon_1b1a26986, jule::Ptr<__jule_anon_1b1a26986_ctx>::make(__jule_anon_1b1a26986_ctx{._self_=_self_,._113134_m=_113134_m}).as<jule::Uintptr>(), __jule_anon_1b1a26986_ctx_handler); __jule_collection; }));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	if (_11353_closure) {
		_1ad4c1ae9_indent((*(_self_))._field_oc);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1ad4c1247_write((*(_self_))._field_oc, _113161_ident);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1ad4c1247_write((*(_self_))._field_oc, _113161_ident);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1ad1e4c29_commonFuncScope(_self_, &((*_113134_m.alloc)._field_Func));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11353_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1ad1e5345_funcScope(jule::Ptr<_1ad1dc2a4_scopeCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _116330_f) {
	if (((*(_116330_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad1e4c29_commonFuncScope(_self_, &(_116330_f));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1ad1e8799_exprCoder> static__1ad1e8b95_new(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _4821_oc) {
	return jule::new_ptr<_1ad1e8799_exprCoder>(_1ad1e8799_exprCoder{._field_oc=(*(_4821_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ab8a7289_Var>>>(nullptr)});;
}



inline void _1ad1e8e4d_string(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const>* _5424_c) {
	jule::Str _553_content = _1ab072dc8_ReadStr((*(_5424_c)).ptr());;
	if ((_553_content.len() == 0LL)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _603_len = _1a941c9c2_FmtInt(static_cast<jule::I64>(_553_content.len()), 10LL);;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1ad208ee6_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _553_content);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad4c1247_write((*(_self_))._field_oc, _603_len);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1e9206_boolean(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Bool _6924_b) {
	if (_6924_b) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1ad1e9404_nilLit(jule::Ptr<_1ad1e8799_exprCoder> _self_) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1ad1e9745_ftoaSpecialCases(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::F64* _8134_x) {
	{
		
		if (_1a93c248d_IsNaN((*(_8134_x)))) {
			_case_begin_1b1a4aea5:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1a93c2b20_IsInf((*(_8134_x)), 1LL)) {
			_case_begin_1b1a4b04e:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1a93c2b20_IsInf((*(_8134_x)), -1LL)) {
			_case_begin_1b1a4b0c6:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b1a4ae1c:;
			{
				return false;;
			}
		}
		_match_end_1b1a4ad0c:;
	};
	return true;;
}



inline void _1ad1e99ed_float32(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const>* _9525_c) {
	jule::F64 _963_x = _1ab073912_AsF64((*(_9525_c)).ptr());;
	if (_1ad1e9745_ftoaSpecialCases(_self_, &(_963_x))) {
		return;;
	};
	{
		
		if ((_963_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b1a50262:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_963_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b1a4e63a:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b1a4e2a5:;
			{
				_1ad20938c_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _963_x, 32LL);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1b1a4e041:;
	};
}



inline void _1ad1e9ca6_float64(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const>* _11425_c) {
	jule::F64 _1153_x = _1ab073912_AsF64((*(_11425_c)).ptr());;
	if (_1ad1e9745_ftoaSpecialCases(_self_, &(_1153_x))) {
		return;;
	};
	{
		
		if ((_1153_x == jule::MAX_F64)) {
			_case_begin_1b1a52aa0:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1153_x == jule::MIN_F64)) {
			_case_begin_1b1a52781:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b1a5271a:;
			{
				_1ad20938c_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1153_x, 64LL);
			}
		}
		_match_end_1b1a524a6:;
	};
}



inline void _1ad1ea05e_constant(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab070c61_Const> _13229_c) {
	{
		
		if (_1ab0754c4_IsStr(_13229_c.ptr())) {
			_case_begin_1b1a5492b:;
			{
				_1ad1e8e4d_string(_self_, &(_13229_c));
			}
		}
		else if (_1ab07523d_IsBool(_13229_c.ptr())) {
			_case_begin_1b1a54992:;
			{
				_1ad1e9206_boolean(_self_, _1ab072b42_ReadBool(_13229_c));
			}
		}
		else if (_1ab07575a_IsF64(_13229_c.ptr())) {
			_case_begin_1b1a54a08:;
			{
				{
					
					if (((*_13229_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1b1a57445:;
						{
							_1ad1e99ed_float32(_self_, &(_13229_c));
						}
					}
					else {
						_case_begin_1b1a5709e:;
						{
							_1ad1e9ca6_float64(_self_, &(_13229_c));
						}
					}
					_match_end_1b1a56e8e:;
				};
			}
		}
		else if (_1ab074c21_IsI64(_13229_c.ptr())) {
			_case_begin_1b1a54a6e:;
			{
				_1ad209678_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1ab072625_ReadI64(_13229_c));
			}
		}
		else if (_1ab074ea7_IsU64(_13229_c.ptr())) {
			_case_begin_1b1a54ad5:;
			{
				_1ad209964_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1ab0728ab_ReadU64(_13229_c));
			}
		}
		else if (_1ab0759e1_IsNil(_13229_c.ptr())) {
			_case_begin_1b1a54b4b:;
			{
				_1ad1e9404_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b1a548b5:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b1a547b6:;
	};
}



inline void _1ad1ea47c_operatorOverloadingUnary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _15646_s, jule::U64 _15667_op, jule::Any _15686_e) {
	;
	jule::Ptr<_1ab08c9a3_FnIns> _1587_f = _1ab3de9b4_FindOperator(_15646_s, _15667_op, true);;
	if ((_1587_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:160:4"));;
	};
	static__1ad20ed87_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1587_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1ad1ece0d_possibleRefExpr(_self_, _15686_e);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1ea89a_divByZeroBinary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab6a54d8_Token>* _16833_op, jule::Ptr<_1ab07c124_OperandExprModel>* _16857_l, jule::Ptr<_1ab07c124_OperandExprModel>* _16890_r) {
	;
	;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_16857_l))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16890_r))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_16890_r))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1a87c1be0_Production))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1ad4c38cb_locInfo((*(_self_))._field_oc, _16833_op);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b1a65e59:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b1a69688:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1b1a695de:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1ad1eb093__unsafeBinary(jule::Ptr<_1ad1e8799_exprCoder> _self_, _1a387dcd5_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1ab939816_Type>* _2088_lk, jule::Ptr<_1ab939816_Type>* _20830_rk, jule::U64 _20847_op, jule::Str _20862_kind) {
	if ((_1ab93d540_Struct((*(_2088_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1a37a53d2_StructIns> _2118_s = _1ab93d540_Struct((*(_2088_lk)).ptr());;
		_1ad20a0b3_operatorOverloadingBinary(_20735_buf, &(_2118_s), _20759_l, _20768_r, _20847_op, _20862_kind);
		return;;
	};
	if (((_20847_op == static_cast<jule::U64>(50LLU)) || (_20847_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1ab3db6a3_IsAny(_2088_lk)) {
				_case_begin_1b1a6e1d7:;
				{
					if (((!(_1ab93a949_IsNil((*(_20830_rk)).ptr()))) && (!(_1ab3db6a3_IsAny(_20830_rk))))) {
						({
							auto except = _1a388008e_WriteByte(_20735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
						});
						if ((_20847_op == static_cast<jule::U64>(51LLU))) {
							({
								auto except = _1a388008e_WriteByte(_20735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:225:7"));
							});
						};
						jule::I64 _2276_i = _1ad4c2c4e_pushAnyType((*(_self_))._field_oc, (*(_20830_rk)));;
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:228:6"));
							(except.result);
						});
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, _1a941cc8b_Itoa(_2276_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:229:6"));
							(except.result);
						});
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:230:6"));
							(except.result);
						});
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, (*(_20759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:231:6"));
							(except.result);
						});
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
							(except.result);
						});
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, (*(_20768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:233:6"));
							(except.result);
						});
						({
							auto except = _1a387ecd6_WriteStr(_20735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:234:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1ab93cc8c_Arr((*(_2088_lk)).ptr()) != nullptr)) {
				_case_begin_1b1a6e281:;
				{
					jule::Ptr<_1ab94924e_Arr> _2405_arr = _1ab93cc8c_Arr((*(_2088_lk)).ptr());;
					jule::Ptr<_1ab0898e5_Fn> _2419_f = _1ab9c0bdd_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1ab08c9a3_FnIns> _2429_ins = _1ab3ded38_FindFnGenericInstance(&(_2419_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2405_arr))._field_Elem; __jule_collection; }));;
					if ((_20847_op == static_cast<jule::U64>(51LLU))) {
						({
							auto except = _1a388008e_WriteByte(_20735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:244:6"));
						});
					};
					static__1ad20ed87_funcIns(_20735_buf, &(_2429_ins));
					({
						auto except = _1a388008e_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:247:5"));
					});
					({
						auto except = _1a387ecd6_WriteStr(_20735_buf, (*(_20759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:248:5"));
						(except.result);
					});
					({
						auto except = _1a387ecd6_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:249:5"));
						(except.result);
					});
					({
						auto except = _1a387ecd6_WriteStr(_20735_buf, (*(_20768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:250:5"));
						(except.result);
					});
					({
						auto except = _1a387ecd6_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
						(except.result);
					});
					({
						auto except = _1a387ecd6_WriteStr(_20735_buf, _1a941cc8b_Itoa((*_2405_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:252:5"));
						(except.result);
					});
					({
						auto except = _1a388008e_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
					return;;
				}
			}
			_match_end_1b1a6e0e9:;
		};
	};
	{
		auto &_match_expr{ _20847_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b1a6e319:;
			{
				jule::Ptr<_1ab94292e_Prim> _2614_lp = _1ab93bebc_Prim((*(_2088_lk)).ptr());;
				if (((_2614_lp != nullptr) && _1ab117eb2_IsUnsigInt((*_2614_lp.alloc)._field_Kind))) {
					({
						auto except = _1a388008e_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:5"));
					});
					_1ad4d16a8_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20735_buf, _2614_lp);
					({
						auto except = _1a388008e_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:265:5"));
					});
				};
			}
		}
		_match_end_1b1d3e430:;
	};
	({
		auto except = _1a388008e_WriteByte(_20735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:269:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_20735_buf, (*(_20759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:270:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:271:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_20735_buf, _20862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:272:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:273:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_20735_buf, (*(_20768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:274:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_20735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:275:3"));
	});
}



inline void _1ad1eb34b_unsafeBinary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _27833_m) {
	jule::I64 _2793_i = _1a3880aea_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2807_oldbuf = _1a3881117_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_27833_m))._field_Left))._field_Model);
	jule::Str _2823_l = __jule_bytesToStr(_1a3881117_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1a38813c0_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_1ad1ece0d_possibleRefExpr(_self_, (*((*_27833_m.alloc)._field_Right))._field_Model);
	jule::Str _2853_r = __jule_bytesToStr(_1a3881117_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1a38813c0_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_1ad1eb093__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2823_l), &(_2853_r), &((*(*(_27833_m))._field_Left.alloc)._field_Type), &((*(*(_27833_m))._field_Right.alloc)._field_Type), (*((*_27833_m.alloc)._field_Op))._field_Id, (*(*(_27833_m))._field_Op.alloc)._field_Kind);
}



inline void _1ad1eb6ae_shl(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c124_OperandExprModel>* _29025_l, jule::Ptr<_1ab07c124_OperandExprModel>* _29058_r) {
	;
	;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_29025_l))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29058_r))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_29058_r))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ab11020c_BitSizeOf((*(_1ab93bebc_Prim((*((*(_29025_l))))._field_Type.ptr())))._field_Kind)));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1ad1eba22_shr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c124_OperandExprModel>* _31825_l, jule::Ptr<_1ab07c124_OperandExprModel>* _31858_r) {
	;
	;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_31825_l))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31858_r))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_31858_r))))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ab11020c_BitSizeOf((*(_1ab93bebc_Prim((*((*(_31825_l))))._field_Type.ptr())))._field_Kind)));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1ad1ebcca_binary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c61e_BinaryExprModel> _34627_m) {
	{
		auto &_match_expr{ (*((*(_34627_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b1d6769a:;
			{
				if ((_1a87c199d_Safety && (_1ab93d540_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1ad1ea89a_divByZeroBinary(_self_, &((*_34627_m.alloc)._field_Op), &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b1d67722:;
			{
				if ((_1ab93d540_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1ad1eb6ae_shl(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b1d67788:;
			{
				if ((_1ab93d540_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1ad1eba22_shr(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1b1d675ce:;
	};
	_1ad1eb34b_unsafeBinary(_self_, _34627_m);
}



inline void _1ad1ec083_var(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab8a7289_Var> _37024_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d6c5a1:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1ab8a7289_Var>> _37110_prefix = *it;
			{
				if (_37110_prefix(_37024_m)) {
					return;;
				};
			}
			_iter_next_1b1d6c5a1:;
			++it;
			goto _iter_begin_1b1d6c5a1;
		}
		_iter_end_1b1d6c5a1:;
	};
	if ((*(_37024_m))._field_Binded) {
		jule::Ptr<_1ab6bec94_Directive> _3774_d = _1ab3dd30e_FindDirective(&((*_37024_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3774_d != nullptr)) {
			_1ad4c1500_writeBytes((*_self_.alloc)._field_oc, _1ad4cd573_concatAllParts((*_3774_d.alloc)._field_Args));
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ad21110d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _37024_m);
}



inline void _1ad1ec33b_structureIns(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a53d2_StructIns> _38633_m) {
	_1ad4d3e3b_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38633_m);
}



inline void _1ad1ec5e4_unary(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07c9e8_UnaryExprModel> _39026_m) {
	if ((_1ab93d540_Struct((*((*(_39026_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a37a53d2_StructIns> _3938_s = _1ab93d540_Struct((*((*(_39026_m))._field_Expr))._field_Type);;
		_1ad1ea47c_operatorOverloadingUnary(_self_, &(_3938_s), (*((*_39026_m.alloc)._field_Op))._field_Id, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b1d738b5:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b1d74223:;
			{
				if ((_1a87c1be0_Production || (_1ab93c253_Sptr((*((*(_39026_m))._field_Expr))._field_Type) == nullptr))) {
					goto _match_end_1b1d74179;
				};
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_39026_m.alloc)._field_Op));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1b1d74179:;
	};
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1ad4c1247_write((*(_self_))._field_oc, (*(*(_39026_m))._field_Op.alloc)._field_Kind);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr(_self_, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad1ec89c_structureLit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07d3bc_StructLitExprModel> _42133_m) {
	if ((*((*((*(_42133_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1ad4d3e3b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_42133_m.alloc)._field_Strct);
	if ((*(*((*(_42133_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4327_inited = false;;
	_julec_label_1b1d7b4d3:;
	{
		auto expr = &((*(*(_42133_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d7e690:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> _43415_f = *it;
			{
				{
					auto expr = &((*_42133_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1d803a5:;
					if (it != expr_end) {
						jule::Ptr<_1ab07d026_StructArgExprModel> _43516_arg = *it;
						{
							if (((*(_43516_arg))._field_Field == _43415_f)) {
								if (_4327_inited) {
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1ad210d22_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43415_f))._field_Decl));
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1ad1ece0d_possibleRefExpr(_self_, (*((*_43516_arg.alloc)._field_Expr))._field_Model);
								_4327_inited=true;
								goto _iter_next_1b1d7e690;
							};
						}
						_iter_next_1b1d803a5:;
						++it;
						goto _iter_begin_1b1d803a5;
					}
					_iter_end_1b1d803a5:;
				};
				if ((*(*((*(_42133_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4327_inited=false;
					goto _iter_next_1b1d7e690;
				};
				if (_4327_inited) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4327_inited=_1ad2073ac_handleFieldByDefault(_self_, &(_43415_f));
			}
			_iter_next_1b1d7e690:;
			++it;
			goto _iter_begin_1b1d7e690;
		}
		_iter_end_1b1d7e690:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1ecb55_allocStructure(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07d6b9_AllocStructLitExprModel> _46435_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1ad210a36_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_46435_m))._field_Lit))._field_Strct));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad1ec89c_structureLit(_self_, (*_46435_m.alloc)._field_Lit);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1ece0d_possibleRefExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _47232_expr) {
	{
		auto &_match_expr{ _47232_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b1d87b60:;
			{
				jule::Ptr<_1ab8a7289_Var> _4754_v = _47232_expr.unsafe_cast_ptr<_1ab8a7289_Var>();;
				if ((*(_4754_v))._field_Reference) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1ad20706b_model(_self_, _47232_expr);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1b1d87ae9:;
	};
	_1ad20706b_model(_self_, _47232_expr);
}



inline void _1ad1ed32b_castTraitFromTrait(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07dc4c_CastingExprModel>* _48640_m, jule::Ptr<_1ab095109_Trait> _48672_t1, jule::Ptr<_1ab095109_Trait> _48694_t2) {
	_1ad1ece0d_possibleRefExpr(_self_, (*((*((*(_48640_m))))._field_Expr))._field_Model);
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1ad4c3623_pushAndWriteMaskMapper((*(_self_))._field_oc, _48672_t1, _48694_t2);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1ed5d4_casting(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07dc4c_CastingExprModel> _49928_m) {
	{
		
		if (_1ab3db6a3_IsAny(&((*(_49928_m))._field_Type))) {
			_case_begin_1b1d8c758:;
			{
				if (_1ab93a949_IsNil((*_49928_m.alloc)._field_ExprType.ptr())) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ab93ca06_TypeEnum((*(_49928_m))._field_ExprType) != nullptr)) {
					_1ad1ece0d_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5104_i = _1ad4c2c4e_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_ExprType);;
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49928_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1b1d8e43b:;
						{
							jule::Ptr<_1ab94292e_Prim> _5145_prim = _1ab93bebc_Prim((*(_49928_m))._field_ExprType);;
							if (((_5145_prim != nullptr) && _1ab11827b_IsInt((*_5145_prim.alloc)._field_Kind))) {
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1ad4d16a8_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5145_prim);
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1ad1ece0d_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b1d9166e;
							};
							goto _case_begin_1b1d916d5;
						}
					}
					else {
						_case_begin_1b1d916d5:;
						{
							_1ad1ece0d_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1b1d9166e:;
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_5104_i));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ab3db6a3_IsAny(&((*(_49928_m))._field_ExprType))) {
			_case_begin_1b1d8c802:;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ab93c253_Sptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ab93c253_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1a87c1be0_Production))) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ad4c2c4e_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_Type)));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ab93c4d9_Ptr((*(_49928_m))._field_ExprType.ptr()) != nullptr) || (_1ab93c4d9_Ptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1d8c868:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1ad1ece0d_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ab93d7c6_Trait((*(_49928_m))._field_ExprType.ptr()) != nullptr)) {
			_case_begin_1b1d8c8ce:;
			{
				if ((_1ab93d7c6_Trait((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1ad1ed32b_castTraitFromTrait(_self_, &(_49928_m), _1ab93d7c6_Trait((*(_49928_m))._field_Type), _1ab93d7c6_Trait((*(_49928_m))._field_ExprType));
					return;;
				};
				_1ad1ece0d_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ab93c253_Sptr((*(_49928_m))._field_Type) != nullptr)) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ab93c253_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1a87c1be0_Production))) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1ad210173_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ab93d7c6_Trait((*(_49928_m))._field_ExprType));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ab3de585_FindTraitTypeOffset(_1ab93d7c6_Trait((*(_49928_m))._field_ExprType), (*_49928_m.alloc)._field_Type)));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ab93d7c6_Trait((*(_49928_m))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1d8c945:;
			{
				_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ad1ece0d_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1ad210173_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ab93d7c6_Trait((*(_49928_m))._field_Type));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_1ab3de585_FindTraitTypeOffset(_1ab93d7c6_Trait((*(_49928_m))._field_Type), (*_49928_m.alloc)._field_ExprType)));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b1d8c5c1:;
	};
	jule::Ptr<_1ab94292e_Prim> _5967_prim = _1ab93bebc_Prim((*(_49928_m))._field_Type.ptr());;
	if (((_5967_prim != nullptr) && _1ab945de9_IsStr(_5967_prim))) {
		jule::Ptr<_1ab94292e_Prim> _5988_eprim = _1ab93bebc_Prim((*_49928_m.alloc)._field_ExprType.ptr());;
		if (((_5988_eprim != nullptr) && (_5967_prim != nullptr))) {
			if (_1ab944359_IsU8(_5988_eprim)) {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1ad1ece0d_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1ab946e2d_Slc> _6098_slc = _1ab93d023_Slc((*(_49928_m))._field_ExprType);;
		if ((_6098_slc != nullptr)) {
			_5988_eprim=_1ab93bebc_Prim((*_6098_slc.alloc)._field_Elem.ptr());
			if (_1ab943d3c_IsI32(_5988_eprim)) {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1ad1ece0d_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5967_prim=_1ab93bebc_Prim((*(_49928_m))._field_ExprType);
	if (((_5967_prim != nullptr) && _1ab945de9_IsStr(_5967_prim))) {
		jule::Ptr<_1ab946e2d_Slc> _6258_slc = _1ab93d023_Slc((*(_49928_m))._field_Type);;
		if ((_6258_slc != nullptr)) {
			_5967_prim=_1ab93bebc_Prim((*(_6258_slc))._field_Elem);
			if (_1ab943d3c_IsI32(_5967_prim)) {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1ad1ece0d_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ad1ece0d_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad1ed88c_args(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _64626_m) {
	jule::I64 _6477_j = 0LL;;
	if (((((*((*((*(_64626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64626_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1ab088570_IsSelf((*((*((*((*(_64626_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6477_j)++;
	};
	{
		auto expr = &((*((*(_64626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1dc41c9:;
		if (it != expr_end) {
			jule::I64 _6527_i = it - expr->begin();
			jule::Any _65210_arg = *it;
			{
				jule::Ptr<_1ab08b84d_ParamIns> _6534_p = (*(*((*(_64626_m))))._field_Func.alloc)._field_Params[_6477_j];;
				if ((((*(_6534_p))._field_Decl != nullptr) && (*(*(_6534_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1b1dc7001:;
							{
								jule::Ptr<_1ab8a7289_Var> _6576_v = _65210_arg.unsafe_cast_ptr<_1ab8a7289_Var>();;
								if ((*(_6576_v))._field_Reference) {
									_1ad20706b_model(_self_, _65210_arg);
									goto _julec_label_1b1dc9a4d;
								};
							}
						}
						_match_end_1b1dc6e8a:;
					};
					_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1ad20706b_model(_self_, _65210_arg);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1b1dc9a4d;
				};
				_1ad1ece0d_possibleRefExpr(_self_, _65210_arg);
				_julec_label_1b1dc9a4d:;
				if ((((*((*(_64626_m))))._field_Args.len() - _6527_i) > 1LL)) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6477_j)++;
			}
			_iter_next_1b1dc41c9:;
			++it;
			_6527_i++;
			goto _iter_begin_1b1dc41c9;
		}
		_iter_end_1b1dc41c9:;
	};
}



inline void _1ad1edb45_modelForCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _67733_expr) {
	{
		auto &_match_expr{ _67733_expr };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b1dcaaa4:;
			{
				_1ad202275_funcIns(_self_, _67733_expr.cast_ptr<_1ab08c9a3_FnIns>(&__jule_any_type63));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b1dc5e67:;
			{
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _6838_ssie = _67733_expr.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>();;
				if (((*(_6838_ssie))._field_Method != nullptr)) {
					_1ad202275_funcIns(_self_, (*_6838_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1b1dcaa3d:;
	};
	_1ad1ece0d_possibleRefExpr(_self_, _67733_expr);
}



inline void _1ad1edded_pushCallInf(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _69229_m) {
	if ((_1a87c1be0_Production || (!((*((*((*(_69229_m))))._field_Func))._field_Anon)))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_69229_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b1dce679:;
				{
					if ((*((*((*((*((*((*(_69229_m))))._field_Expr.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1b1dce613:;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*((*(_69229_m))))._field_Token));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69229_m))))._field_Args.len() != 0LL)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1ad1ee23e_isWrapped(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _71531_m) {
	if ((((!(_1ab08de6b_IsBuiltin((*((*(_71531_m))))._field_Func.ptr()))) && ((*((*(*((*(_71531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1ab088570_IsSelf((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b1dd443c:;
				{
					jule::Ptr<_1ab082190_StructSubIdentExprModel> _7199_ssie = (*((*(_71531_m))))._field_Expr.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>();;
					{
						
						if (_1ab088806_IsRef((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1ab93c253_Sptr((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1b1dd61db:;
							{
								goto _match_end_1b1dd5394;
							}
						}
						else {
							_case_begin_1b1dd541b:;
							{
								if ((_1ab93d540_Struct((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									if ((!((*(*(_7199_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1ad20706b_model(_self_, (*(*(_7199_ssie))._field_Expr.alloc)._field_Model);
										_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b1dd5394:;
					};
				}
			}
			_match_end_1b1dd43c6:;
		};
	};
	return false;;
}



inline jule::Bool _1ad1ee580_writeReceiver(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _73934_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73934_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1ddac18:;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*((*(_73934_m.unsafe_cast_ptr<_1ab07c9e8_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b1ddae27:;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*((*((*(_73934_m.unsafe_cast_ptr<_1ad124461_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b1ddadb1:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:748:4"));;
			}
		}
		_match_end_1b1ddad4a:;
	};
}



inline void _1ad1ee838_pureFuncCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _75234_m) {
	jule::Bool _7533_wrapped = _1ad1ee23e_isWrapped(_self_, _75234_m);;
	_1ad1edb45_modelForCall(_self_, (*((*(_75234_m))))._field_Expr);
	if ((!(_1ab08de6b_IsBuiltin((*((*(_75234_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75234_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1ab3dd6c7_HasDirective(&((*(*((*((*(_75234_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b16c4854:;
					if (it != expr_end) {
						jule::I64 _75911_i = it - expr->begin();
						jule::Ptr<_1ab937e30_InsGeneric> _75918_g = *it;
						{
							_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75918_g))._field_Type);
							if ((((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() - _75911_i) > 1LL)) {
								_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1b16c4854:;
						++it;
						_75911_i++;
						goto _iter_begin_1b16c4854;
					}
					_iter_end_1b16c4854:;
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1ad1edded_pushCallInf(_self_, _75234_m);
	if (((*(*((*(_75234_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_75234_m))))._field_Func.alloc)._field_Anon)))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1ab08de6b_IsBuiltin((*((*(_75234_m))))._field_Func))) && ((*(*((*((*(_75234_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1ab088570_IsSelf((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75234_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b1764927:;
				{
					jule::Ptr<_1ab082190_StructSubIdentExprModel> _7839_ssie = (*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>();;
					{
						
						if (_1ab088806_IsRef((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1b1768c06:;
							{
								_1ad1ee580_writeReceiver(_self_, (*((*(_7839_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1ab93c253_Sptr((*((*(_7839_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1b176a29b:;
							{
								jule::Bool _7906_safe = _1ad1ee580_writeReceiver(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);;
								if (_7906_safe) {
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1a87c1be0_Production))) {
										_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*((*(_75234_m))))._field_Token));
										_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1b17659a0:;
							{
								if ((_1ab93d540_Struct((*((*(_7839_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7839_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1b17662ec:;
											{
												jule::Ptr<_1ab8a7289_Var> _8048_v = (*((*(_7839_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
												if ((*(_8048_v))._field_Reference) {
													goto _match_end_1b17667c5;
												};
												goto _case_begin_1b176683b;
											}
										}
										else {
											_case_begin_1b176683b:;
											{
												_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1b17667c5:;
									};
								};
								if (_7533_wrapped) {
									_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ab93c4d9_Ptr((*((*(_7839_ssie))._field_Expr))._field_Type) == nullptr)) {
									_1ad20706b_model(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1ad1ece0d_possibleRefExpr(_self_, (*((*((*(*(_7839_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1b1765928:;
					};
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1b17645b4:;
				{
					_1ad1ece0d_possibleRefExpr(_self_, (*((*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_1ab0817ee_TraitSubIdentExprModel>()))._field_Expr);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1b17648a0:;
		};
	};
	_1ad1ed88c_args(_self_, _75234_m);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7533_wrapped) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1ad1eeae1_coFuncCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel>* _84232_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8497_i = jule::Str();;
	if ((((*((*((*(_84232_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84232_m))))._field_Func.alloc)._field_AsAnon)) {
		_8497_i=_1a941cc8b_Itoa(_1ad4c227b_pushCoSpawn((*(_self_))._field_oc, (*((*(_84232_m))))._field_Func));
		jule::Str _8524_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8497_i);;
		_1ad4c1247_write((*(_self_))._field_oc, _8524_t);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1ad4c1247_write((*(_self_))._field_oc, _8524_t);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1ad4c1ae9_indent((*(_self_))._field_oc);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1ad1edb45_modelForCall(_self_, (*((*(_84232_m))))._field_Expr);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84232_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b17812b2:;
			if (it != expr_end) {
				jule::I64 _8748_j = it - expr->begin();
				{
					_1ad4c1ae9_indent((*(_self_))._field_oc);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_8748_j));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1ad1ece0d_possibleRefExpr(_self_, (*((*(_84232_m))))._field_Args[_8748_j]);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b17812b2:;
				++it;
				_8748_j++;
				goto _iter_begin_1b17812b2;
			}
			_iter_end_1b17812b2:;
		};
		_1ad4c1ae9_indent((*(_self_))._field_oc);
	};
	if (!(_8497_i).empty()) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8497_i).empty()) {
		static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84232_m))))._field_Func));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8497_i));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8497_i).empty()) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8497_i).empty()) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad1eee54_writeUseExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _92034_f, jule::Ptr<_1ab906a8b_Data> _92055_d) {
	if ((_1ab93dce3_Tup((*(_92055_d))._field_Type.ptr()) == nullptr)) {
		_1ad1ece0d_possibleRefExpr(_self_, (*_92055_d.alloc)._field_Model);
		_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ab082c0c_TupleExprModel> _9267_tup = (*_92055_d.alloc)._field_Model.cast_ptr<_1ab082c0c_TupleExprModel>(&__jule_any_type83);;
	_1ad4da45e_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1ab93dce3_Tup((*((*(_92034_f))))._field_Result.ptr()));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9267_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1793060:;
		if (it != expr_end) {
			jule::I64 _9297_i = it - expr->begin();
			jule::Ptr<_1ab906a8b_Data> _92910_data = *it;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_9297_i));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1ad1ece0d_possibleRefExpr(_self_, (*(_92910_data))._field_Model);
				if ((((*(_9267_tup))._field_Datas.len() - _9297_i) > 1LL)) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b1793060:;
			++it;
			_9297_i++;
			goto _iter_begin_1b1793060;
		}
		_iter_end_1b1793060:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1ad2002b7_funcCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e5ee_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional) {
	if ((*(_94129_m))._field_IsCo) {
		_1ad1eeae1_coFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (((_1ab08de6b_IsBuiltin((*_94129_m.alloc)._field_Func.ptr()) || (!((*((*(*(_94129_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_94129_m.alloc)._field_Except != nullptr) && ((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1ad1ee838_pureFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (_94156_ignoreExceptional) {
		_1ad1ee838_pureFuncCall(_self_, &(_94129_m));
		if (((*(*(_94129_m))._field_Func.alloc)._field_Result != nullptr)) {
			_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1ad1ee838_pureFuncCall(_self_, &(_94129_m));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if (((*_94129_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_94129_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_94129_m.alloc)._field_Assigned)))) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1ad1e4971_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9795_forwarded = _1ab3db20d_IsForwarded(&((*_94129_m.alloc)._field_Except));;
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9795_forwarded) {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9849_stmt = (*(*(_94129_m))._field_Except.alloc)._field_Stmts[((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9849_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_1b17a19a8:;
					{
						((*((*(_94129_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_94129_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1ad4c16ed_addIndent((*(_self_))._field_oc);
						_1ad1e46b8_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_94129_m.alloc)._field_Except));
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ad4c1ae9_indent((*(_self_))._field_oc);
						_1ad1eee54_writeUseExpr(_self_, &((*_94129_m.alloc)._field_Func), _9849_stmt.cast_ptr<_1ab906a8b_Data>(&__jule_any_type21));
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ad4c18eb_doneIndent((*(_self_))._field_oc);
						_1ad4c1ae9_indent((*(_self_))._field_oc);
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1b17a2e1b:;
					{
						_1ad1e4971_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
					}
				}
				_match_end_1b17a2da5:;
			};
			if (_9795_forwarded) {
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1ad208237_initExpr(_self_, (*(*(_94129_m))._field_Func.alloc)._field_Result);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_94129_m.alloc)._field_Token));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ab089d9b_IsVoid((*((*(_94129_m))._field_Func))._field_Decl)))) {
			_1ad4c1ae9_indent((*(_self_))._field_oc);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	};
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad200570_slice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07e9c8_SliceExprModel> _102426_m) {
	if (((*(_102426_m))._field_Elems.len() == 0LL)) {
		_1ad4d308e_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102426_m.alloc)._field_ElemType);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ad4d308e_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102426_m.alloc)._field_ElemType);
	jule::Str _10323_size = _1a941cc8b_Itoa((*_102426_m.alloc)._field_Elems.len());;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad4c1247_write((*(_self_))._field_oc, _10323_size);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad4c1247_write((*(_self_))._field_oc, _10323_size);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_102426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1ea5398:;
		if (it != expr_end) {
			jule::I64 _10427_i = it - expr->begin();
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1ad1ece0d_possibleRefExpr(_self_, (*(_102426_m))._field_Elems[_10427_i]);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b1ea5398:;
			++it;
			_10427_i++;
			goto _iter_begin_1b1ea5398;
		}
		_iter_end_1b1ea5398:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1ad200828_indexing(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab07ee7e_IndexingExprModel> _105329_m) {
	{
		auto &_match_expr{ (*((*(_105329_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad188abe:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1a87c1be0_Production))) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*(_105329_m))._field_Token));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10644_s = _1ab072dc8_ReadStr((*((*(_105329_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ab070c61_Const>().ptr());;
				_1ad208ee6_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10644_s);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_10644_s.len()));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad1ece0d_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Index))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ad188a58:;
	};
	{
		
		if ((_1ab93da5c_Map((*((*_105329_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad192985:;
			{
				jule::Ptr<_1ab9485c2_Map> _10778__map = _1ab93da5c_Map((*((*(_105329_m))._field_Expr))._field_Type);;
				jule::Ptr<_1a37a2577_Struct> _10788_s = _1ab9c12d7_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1a37a53d2_StructIns> _10798_ins = _1ab3e02bc_FindStructGenericInstance(&(_10788_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10778__map))._field_Key; (*it++) = (*_10778__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1ab08c9a3_FnIns> _10818_f = (*(_1a37a647c_FindMethod(_10798_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_10818_f));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1a87c1be0_Production || (_1ab93c4d9_Ptr((*((*_105329_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr) || _1ab3db3d9_IsExprComesFromBind(&((*_105329_m.alloc)._field_Expr))) {
			_case_begin_1ad1900c0:;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ad18eeb0:;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Expr))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_105329_m.alloc)._field_Token));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1ad1ece0d_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ad18c3a8:;
	};
}



inline void _1ad200ad1_unsafeIndexing(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad1234d7_UnsafeIndexingExprModel> _110535_m) {
	_1ad1ece0d_possibleRefExpr(_self_, (*((*((*(_110535_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1a87c1be0_Production || (_1ab93c4d9_Ptr((*(*((*(_110535_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1ab93da5c_Map((*((*((*(_110535_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1b210d842:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1ad1ece0d_possibleRefExpr(_self_, (*((*(*(_110535_m))._field_Node.alloc)._field_Index))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b210b39a:;
			{
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1ad1ece0d_possibleRefExpr(_self_, (*((*(*(_110535_m))._field_Node.alloc)._field_Index))._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b210be4a:;
	};
}



inline void _1ad200d89_anonFunc(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel> _112229_m) {
	jule::Bool _11233_closure = _1ab3db9e4_IsClosure(&(_112229_m));;
	jule::Str _11243_ident = _1ad4c290d_pushAnonFn((*(_self_))._field_oc, &(_112229_m));;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1ad4d54ae_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112229_m))._field_Func);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1ad4c1247_write((*(_self_))._field_oc, _11243_ident);
	if (_11233_closure) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1ad4c1247_write((*(_self_))._field_oc, _11243_ident);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1ad4c1247_write((*(_self_))._field_oc, _11243_ident);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_112229_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b211303e:;
			if (it != expr_end) {
				jule::I64 _11369_i = it - expr->begin();
				jule::Ptr<_1ab8a7289_Var> _113616_v = *it;
				{
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1ad21110d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _113616_v);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ad1ec083_var(_self_, _113616_v);
					if ((((*_112229_m.alloc)._field_Captured.len() - _11369_i) > 1LL)) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1b211303e:;
				++it;
				_11369_i++;
				goto _iter_begin_1b211303e;
			}
			_iter_end_1b211303e:;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1ad4c1247_write((*(_self_))._field_oc, _11243_ident);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1ad201142_mapExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab080bd8_MapExprModel> _115328_m) {
	jule::Ptr<_1a37a2577_Struct> _11547_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a37a53d2_StructIns> _11557_ins = _1ab3e02bc_FindStructGenericInstance(&(_11547_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_115328_m))._field_Kind))._field_Key; (*it++) = (*(*(_115328_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ab08c9a3_FnIns> _11577_maker = (*(_1a37a647c_FindMethod(_11557_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_115328_m.alloc)._field_Entries.len() == 0LL)) {
		static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11577_maker));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _11647_f = (*(_1a37a647c_FindMethod(_11557_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ad4d3765_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115328_m.alloc)._field_Kind);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11577_maker));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_115328_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2124d75:;
		if (it != expr_end) {
			jule::Ptr<_1ab08080e_KeyValPairExprModel> _117415_pair = *it;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11647_f));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ad1ece0d_possibleRefExpr(_self_, (*(_117415_pair))._field_Key);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1ad1ece0d_possibleRefExpr(_self_, (*_117415_pair.alloc)._field_Val);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b2124d75:;
			++it;
			goto _iter_begin_1b2124d75;
		}
		_iter_end_1b2124d75:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1ad2013ea_slicing(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08126b_SlicingExprModel> _118928_m) {
	_1ad1ece0d_possibleRefExpr(_self_, (*(_118928_m))._field_Expr);
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1a87c1be0_Production))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_118928_m.alloc)._field_Token));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad1ece0d_possibleRefExpr(_self_, (*_118928_m.alloc)._field_Left);
	if (((*_118928_m.alloc)._field_Right != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad1ece0d_possibleRefExpr(_self_, (*_118928_m.alloc)._field_Right);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2016a3_traitSub(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0817ee_TraitSubIdentExprModel> _120529_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1ad210173_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_120529_m))._field_Trt);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1ad1ece0d_possibleRefExpr(_self_, (*_120529_m.alloc)._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1a87c1be0_Production))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_120529_m.alloc)._field_Token));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1ad20ea9b_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_120529_m.alloc)._field_Method));
}



inline void _1ad20195b_structureSub(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082190_StructSubIdentExprModel> _122133_m) {
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_122133_m))._field_Expr))._field_Model);
	if (((*_122133_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1ad210d22_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_122133_m.alloc)._field_Field))._field_Decl));
}



inline void _1ad201c14_array(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082910_ArrayExprModel> _123026_m) {
	if ((((*((*(_123026_m))._field_Kind))._field_N == 0LL) || (((*_123026_m.alloc)._field_Elems.len() == 0LL) && (!(_1ad4dca38_ableToInit(&((*(*(_123026_m))._field_Kind.alloc)._field_Elem))))))) {
		_1ad4d429e_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_123026_m.alloc)._field_Kind);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_123026_m.alloc)._field_Elems.len() == 2LL) && ((*(_123026_m))._field_Elems[1LL] == nullptr))) {
		_1ad4d429e_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_123026_m.alloc)._field_Kind);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad1ece0d_possibleRefExpr(_self_, (*(_123026_m))._field_Elems[0LL]);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ad4d429e_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_123026_m.alloc)._field_Kind);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_123026_m.alloc)._field_Elems.len() != (*(*(_123026_m))._field_Kind.alloc)._field_N)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_123026_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2140ad8:;
		if (it != expr_end) {
			jule::I64 _12637_i = it - expr->begin();
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1ad1ece0d_possibleRefExpr(_self_, (*_123026_m.alloc)._field_Elems[_12637_i]);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b2140ad8:;
			++it;
			_12637_i++;
			goto _iter_begin_1b2140ad8;
		}
		_iter_end_1b2140ad8:;
	};
	if ((((*_123026_m.alloc)._field_Elems.len() != (*(*(_123026_m))._field_Kind.alloc)._field_N) && _1ad4dca38_ableToInit(&((*(*(_123026_m))._field_Kind.alloc)._field_Elem)))) {
		_1ad20791d_fillCollectionByDefault(_self_, &((*(*(_123026_m))._field_Kind.alloc)._field_Elem));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1ad201ebc_funcInsCommon(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _128034_m) {
	_1ad4d5822_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _128034_m);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad202275_funcIns(_self_, _128034_m);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad202275_funcIns(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _128728_m) {
	if ((((*(_128728_m))._field_Decl != nullptr) && (*(*(_128728_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1ab6bec94_Directive> _12894_d = _1ab3dd30e_FindDirective(&((*(*(_128728_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12894_d != nullptr)) {
			_1ad4c1500_writeBytes((*(_self_))._field_oc, _1ad4cd573_concatAllParts((*_12894_d.alloc)._field_Args));
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_128728_m));
}



inline void _1ad20252d_tuple(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082c0c_TupleExprModel> _129826_m) {
	{
		auto expr = &((*_129826_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b214d321:;
		if (it != expr_end) {
			jule::I64 _12998_i = it - expr->begin();
			jule::Ptr<_1ab906a8b_Data> _129915_d = *it;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*(_129915_d))._field_Model);
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_129826_m))._field_Datas.len() - _12998_i) > 1LL)) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ad4c1ae9_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1b214d321:;
			++it;
			_12998_i++;
			goto _iter_begin_1b214d321;
		}
		_iter_end_1b214d321:;
	};
}



inline void _1ad2027d6_newCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0836d0_BuiltinNewCallExprModel> _130928_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_130928_m))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_130928_m.alloc)._field_Init != nullptr)) {
		_1ad1ece0d_possibleRefExpr(_self_, (*_130928_m.alloc)._field_Init);
	} else if (_1ad4dca38_ableToInit(&((*_130928_m.alloc)._field_Type))) {
		_1ad208237_initExpr(_self_, (*_130928_m.alloc)._field_Type);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad202a8e_printCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab083009_BuiltinPrintCallExprModel> _132130_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1ab0898e5_Fn> _13237_decl = _1ab9c0bdd_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1ab08c9a3_FnIns> _13247_f = _1ab3ded38_FindFnGenericInstance(&(_13237_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_132130_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13247_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr(_self_, (*(*(_132130_m))._field_Expr.alloc)._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad202d47_printlnCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab083306_BuiltinPrintlnCallExprModel> _133132_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1ab0898e5_Fn> _13337_decl = _1ab9c0bdd_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1ab08c9a3_FnIns> _13347_f = _1ab3ded38_FindFnGenericInstance(&(_13337_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_133132_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13347_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr(_self_, (*(*(_133132_m))._field_Expr.alloc)._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad203100_panicCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> _134130_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1ad1ece0d_possibleRefExpr(_self_, (*(_134130_m))._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ad4c38cb_locInfo((*(_self_))._field_oc, &((*_134130_m.alloc)._field_Token));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad2033a8_errorCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _134930_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ab089d9b_IsVoid((*((*(_134930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b2160b6e:;
				{
					jule::Ptr<_1ab8a7289_Var> _13545_v = (*((*(_134930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
					if (((*(_13545_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1b2160b08:;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1ad4dab35_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b21651d4:;
				{
					jule::Ptr<_1ab8a7289_Var> _13665_v = (*((*(_134930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>();;
					if (((*(_13665_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1b216516d:;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_134930_m))._field_Err))._field_Model);
	jule::I64 _13753_i = _1ad4c2c4e_pushAnyType((*(_self_))._field_oc, (*(*(_134930_m))._field_Err.alloc)._field_Type);;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_13753_i));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1ad203661_copyCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0852d6_BuiltinCopyCallExprModel> _138129_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_138129_m))._field_Dest))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*_138129_m.alloc)._field_Src))._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad203919_lenCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _138928_m) {
	jule::Ptr<_1ab9485c2_Map> _13907__map = _1ab93da5c_Map((*((*(_138928_m))._field_Expr))._field_Type.ptr());;
	if ((_13907__map != nullptr)) {
		jule::Ptr<_1a37a2577_Struct> _13928_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1a37a53d2_StructIns> _13938_ins = _1ab3e02bc_FindStructGenericInstance(&(_13928_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13907__map.alloc)._field_Key; (*it++) = (*_13907__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1ab08c9a3_FnIns> _13958_f = (*(_1a37a647c_FindMethod(_13938_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13958_f));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad1ece0d_possibleRefExpr(_self_, (*(*(_138928_m))._field_Expr.alloc)._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ad1ece0d_possibleRefExpr(_self_, (*(*(_138928_m))._field_Expr.alloc)._field_Model);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1ad203bc2_capCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084a33_BuiltinCapCallExprModel> _140628_m) {
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_140628_m))._field_Expr))._field_Model);
	_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1ad203e7a_deleteCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> _141131_m) {
	jule::Ptr<_1ab9485c2_Map> _14127__map = _1ab93da5c_Map((*((*(_141131_m))._field_Dest))._field_Type.ptr());;
	if ((_14127__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1414:4"));;
	};
	jule::Ptr<_1a37a2577_Struct> _14167_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a37a53d2_StructIns> _14177_ins = _1ab3e02bc_FindStructGenericInstance(&(_14167_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14127__map))._field_Key; (*it++) = (*(_14127__map))._field_Val; __jule_collection; }));;
	;
	if (((*_141131_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1ab08c9a3_FnIns> _14208_f = (*(_1a37a647c_FindMethod(_14177_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14208_f));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad1ece0d_possibleRefExpr(_self_, (*(*(_141131_m))._field_Dest.alloc)._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad1ece0d_possibleRefExpr(_self_, (*(*(_141131_m))._field_Key.alloc)._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1ab08c9a3_FnIns> _14288_f = (*(_1a37a647c_FindMethod(_14177_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14288_f));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad1ece0d_possibleRefExpr(_self_, (*(*(_141131_m))._field_Dest.alloc)._field_Model);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ad204233_makeCallSlice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084060_BuiltinMakeCallExprModel>* _143635_m) {
	jule::Ptr<_1ab946e2d_Slc> _14377_slice = _1ab93d023_Slc((*((*(_143635_m))))._field_Type.ptr());;
	jule::Bool _14383_init = _1ad4dca38_ableToInit(&((*(_14377_slice))._field_Elem));;
	if (_14383_init) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_143635_m))))._field_Type);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_143635_m))))._field_Len);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_143635_m))))._field_Cap != nullptr)) {
		_1ad1ece0d_possibleRefExpr(_self_, (*((*(_143635_m))))._field_Cap);
	} else {
		_1ad1ece0d_possibleRefExpr(_self_, (*((*(_143635_m))))._field_Len);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14383_init))) {
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ad207bc6_initCollection(_self_, &((*_14377_slice.alloc)._field_Elem));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1ad2044db_makeCallStr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084060_BuiltinMakeCallExprModel>* _146033_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad1ece0d_possibleRefExpr(_self_, (*((*(_146033_m))))._field_Len);
	if (((*((*(_146033_m))))._field_Cap != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ad1ece0d_possibleRefExpr(_self_, (*((*(_146033_m))))._field_Cap);
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad204794_makeCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> _147129_m) {
	if ((_1ab93d023_Slc((*(_147129_m))._field_Type.ptr()) != nullptr)) {
		_1ad204233_makeCallSlice(_self_, &(_147129_m));
		return;;
	};
	_1ad2044db_makeCallStr(_self_, &(_147129_m));
}



inline void _1ad204a4c_pushToSlice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad1238b1_PushToSliceExprModel> _147932_m) {
	;
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ad4d308e_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147932_m))._field_Elems))._field_ElemType);
	jule::Bool _14877_ptr = false;;
	{
		auto &_match_expr{ (*(_147932_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1b101e0:;
			{
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _14918_u = (*(_147932_m))._field_Dest.unsafe_cast_ptr<_1ab07c9e8_UnaryExprModel>();;
				if ((_1ab93c4d9_Ptr((*((*(_14918_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1ad1ece0d_possibleRefExpr(_self_, (*(*(_14918_u))._field_Expr.alloc)._field_Model);
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14877_ptr=true;
					goto _match_end_1b1b0dbd3;
				};
				goto _case_begin_1b1b0dc49;
			}
		}
		else {
			_case_begin_1b1b0dc49:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1ad1ece0d_possibleRefExpr(_self_, (*_147932_m.alloc)._field_Dest);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1b1b0dbd3:;
	};
	if (((*(*(_147932_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14877_ptr) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1ad1ece0d_possibleRefExpr(_self_, (*((*(_147932_m))._field_Elems))._field_Elems[0LL]);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14877_ptr) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa((*(*(_147932_m))._field_Elems.alloc)._field_Elems.len()));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147932_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b1768c:;
		if (it != expr_end) {
			jule::Any _152515_e = *it;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14877_ptr) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1ad1ece0d_possibleRefExpr(_self_, _152515_e);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1b1b1768c:;
			++it;
			goto _iter_begin_1b1b1768c;
		}
		_iter_end_1b1b1768c:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad204d05_appendToSlice(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad123c8a_AppendToSliceExprModel> _153934_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr(_self_, (*(_153934_m))._field_Dest);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1ad1ece0d_possibleRefExpr(_self_, (*_153934_m.alloc)._field_Slice);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad2050ad_appendCall(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> _154731_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1ad1ece0d_possibleRefExpr(_self_, (*(_154731_m))._field_Dest);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ad1ece0d_possibleRefExpr(_self_, (*_154731_m.alloc)._field_Elements);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad205366_sizeof(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0859ac_SizeofExprModel> _155527_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1ad1ece0d_possibleRefExpr(_self_, (*(_155527_m))._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad20561e_alignof(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab086161_AlignofExprModel> _156128_m) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1ad1ece0d_possibleRefExpr(_self_, (*(_156128_m))._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad2058c7_runeLit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab08634d_RuneExprModel> _156724_m) {
	if (((*(_156724_m))._field_Code <= 127LL)) {
		({
			auto except = _1a388008e_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1569:4"));
		});
		jule::Str _15708_b = _1ad2088ca_sbtoa(static_cast<jule::U8>((*_156724_m.alloc)._field_Code));;
		if (_15708_b.equal("'", 1)) {
			({
				auto except = _1a388008e_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1572:5"));
			});
		};
		({
			auto except = _1a387ecd6_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15708_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1574:4"));
			(except.result);
		});
		({
			auto except = _1a388008e_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1575:4"));
		});
		return;;
	};
	_1ad209678_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_156724_m.alloc)._field_Code));
}



inline void _1ad205b80_structureStatic(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab082536_StructStaticIdentExprModel> _158136_m) {
	static__1ad20ed87_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_158136_m))._field_Method));
}



inline void _1ad205e38_backendEmit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0866c2_BackendEmitExprModel> _158532_m) {
	if (((*(_158532_m))._field_Exprs.len() == 0LL)) {
		_1ad4c1247_write((*(_self_))._field_oc, (*_158532_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _15903_n = _1a3880aea_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15917_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_158532_m.alloc)._field_Exprs.len(), (*_158532_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_158532_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b278cd:;
		if (it != expr_end) {
			jule::I64 _15928_i = it - expr->begin();
			jule::Any _159215_expr = *it;
			{
				_1ad1ece0d_possibleRefExpr(_self_, _159215_expr);
				jule::Slice<jule::U8> _15948_buf = _1a3881117_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15917_args[_15928_i]=jule::Any(__jule_bytesToStr(_15948_buf.slice(_15903_n)), &__jule_any_type5);
				{
					_1a38813c0_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15948_buf.slice(0LL, _15903_n));
				};
			}
			_iter_next_1b1b278cd:;
			++it;
			_15928_i++;
			goto _iter_begin_1b1b278cd;
		}
		_iter_end_1b1b278cd:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, _1ab9b16b2_Format((*_158532_m.alloc)._field_Code, _15917_args));
}



inline void _1ad2061e1_free(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab0869be_FreeExprModel> _160125_m) {
	_1ad1ece0d_possibleRefExpr(_self_, (*(_160125_m))._field_Expr);
	if (_1a87c15d5_RC) {
		_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1ad206499_strComp(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad1227c2_StrCompExprModel> _161028_m) {
	if ((*(_161028_m))._field_NotEq) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16143_s = _1ab072dc8_ReadStr((*_161028_m.alloc)._field_Right.ptr());;
	_1ad1ece0d_possibleRefExpr(_self_, (*_161028_m.alloc)._field_Left);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1ad208ee6_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16143_s);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_16143_s.len()));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_161028_m.alloc)._field_NotEq) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ad206752_emptyCompare(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad12201e_EmptyCompareExprModel> _162633_m) {
	if ((*(_162633_m))._field_Neg) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad1ece0d_possibleRefExpr(_self_, (*_162633_m.alloc)._field_Expr);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1ad206a0a_unsafeDeref(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad124461_UnsafeDerefExprModel> _163532_m) {
	{
		
		if ((_1ab93c253_Sptr((*((*((*(_163532_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1b36436:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ad1ece0d_possibleRefExpr(_self_, (*(*((*(_163532_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1b1b3606d:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1642:4"));;
			}
		}
		_match_end_1b1b35e5d:;
	};
}



inline void _1ad206cb3_unsafeCasting(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ad12475d_UnsafeCastingExprModel> _164634_m) {
	{
		
		if (_1ab3db6a3_IsAny(&((*((*(_164634_m))._field_Base))._field_ExprType))) {
			_case_begin_1b1b3911a:;
			{
				_1ad1ece0d_possibleRefExpr(_self_, (*((*(*(_164634_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1ab93c253_Sptr((*(*(_164634_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ab93c253_Sptr((*((*(_164634_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1ad4d5b85_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_164634_m))._field_Base.alloc)._field_Type);
				};
				_1ad4c1247_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1b1b38c52:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1659:4"));;
			}
		}
		_match_end_1b1b38b64:;
	};
}



inline void _1ad20706b_model(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Any _166326_m) {
	{
		auto &_match_expr{ _166326_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b1b39989:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, _166326_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b1b3e9c2:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, (*(_166326_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b1b3ea38:;
			{
				_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _166326_m.cast_ptr<_1ab939816_Type>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b1b3ea9e:;
			{
				_1ad1ea05e_constant(_self_, _166326_m.cast_ptr<_1ab070c61_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b1b3eb15:;
			{
				_1ad1ec083_var(_self_, _166326_m.cast_ptr<_1ab8a7289_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b1b3eb7b:;
			{
				_1ad1ec33b_structureIns(_self_, _166326_m.cast_ptr<_1a37a53d2_StructIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b1b3ebe2:;
			{
				_1ad201ebc_funcInsCommon(_self_, _166326_m.cast_ptr<_1ab08c9a3_FnIns>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b1b4085d:;
			{
				_1ad1eb34b_unsafeBinary(_self_, (*(_166326_m.unsafe_cast_ptr<_1ad1231da_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b1b408c4:;
			{
				_1ad1ebcca_binary(_self_, _166326_m.cast_ptr<_1ab07c61e_BinaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1b4093a:;
			{
				_1ad1ec5e4_unary(_self_, _166326_m.cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b1b409a1:;
			{
				_1ad1ec89c_structureLit(_self_, _166326_m.cast_ptr<_1ab07d3bc_StructLitExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b1b40a17:;
			{
				_1ad1ecb55_allocStructure(_self_, _166326_m.cast_ptr<_1ab07d6b9_AllocStructLitExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b1b40a7d:;
			{
				_1ad1ed5d4_casting(_self_, _166326_m.cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b1b40ae4:;
			{
				_1ad2002b7_funcCall(_self_, _166326_m.cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b1b40b5a:;
			{
				_1ad200570_slice(_self_, _166326_m.cast_ptr<_1ab07e9c8_SliceExprModel>(&__jule_any_type79));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b1b40bd2:;
			{
				_1ad201c14_array(_self_, _166326_m.cast_ptr<_1ab082910_ArrayExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b1b40c59:;
			{
				_1ad200ad1_unsafeIndexing(_self_, _166326_m.cast_ptr<_1ad1234d7_UnsafeIndexingExprModel>(&__jule_any_type135));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b1b40cd1:;
			{
				_1ad200828_indexing(_self_, _166326_m.cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b1b40d58:;
			{
				_1ad200d89_anonFunc(_self_, _166326_m.cast_ptr<_1ab080435_AnonFnExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b1b40dd0:;
			{
				_1ad201142_mapExpr(_self_, _166326_m.cast_ptr<_1ab080bd8_MapExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b1b40e57:;
			{
				_1ad2013ea_slicing(_self_, _166326_m.cast_ptr<_1ab08126b_SlicingExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b1b40ece:;
			{
				_1ad2016a3_traitSub(_self_, _166326_m.cast_ptr<_1ab0817ee_TraitSubIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b1b41056:;
			{
				_1ad20195b_structureSub(_self_, _166326_m.cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b1b410cd:;
			{
				_1ad20252d_tuple(_self_, _166326_m.cast_ptr<_1ab082c0c_TupleExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b1b41155:;
			{
				_1ad202a8e_printCall(_self_, _166326_m.cast_ptr<_1ab083009_BuiltinPrintCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b1b411cc:;
			{
				_1ad202d47_printlnCall(_self_, _166326_m.cast_ptr<_1ab083306_BuiltinPrintlnCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b1b41254:;
			{
				_1ad2027d6_newCall(_self_, _166326_m.cast_ptr<_1ab0836d0_BuiltinNewCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b1b412cb:;
			{
				_1ad203100_panicCall(_self_, _166326_m.cast_ptr<_1ab083aa9_BuiltinPanicCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b1b41353:;
			{
				_1ad2033a8_errorCall(_self_, _166326_m.cast_ptr<_1ab0856b0_BuiltinErrorCallExprModel>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b1b413ca:;
			{
				_1ad204794_makeCall(_self_, _166326_m.cast_ptr<_1ab084060_BuiltinMakeCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b1b41452:;
			{
				_1ad2050ad_appendCall(_self_, _166326_m.cast_ptr<_1ab084439_BuiltinAppendCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b1b414c9:;
			{
				_1ad203661_copyCall(_self_, _166326_m.cast_ptr<_1ab0852d6_BuiltinCopyCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b1b41551:;
			{
				_1ad203919_lenCall(_self_, _166326_m.cast_ptr<_1ab084736_BuiltinLenCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b1b415c8:;
			{
				_1ad203bc2_capCall(_self_, _166326_m.cast_ptr<_1ab084a33_BuiltinCapCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b1b41650:;
			{
				_1ad203e7a_deleteCall(_self_, _166326_m.cast_ptr<_1ab084e0c_BuiltinDeleteCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b1b416c7:;
			{
				_1ad205366_sizeof(_self_, _166326_m.cast_ptr<_1ab0859ac_SizeofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b1b4174e:;
			{
				_1ad20561e_alignof(_self_, _166326_m.cast_ptr<_1ab086161_AlignofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b1b417c6:;
			{
				_1ad2058c7_runeLit(_self_, _166326_m.cast_ptr<_1ab08634d_RuneExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b1b4184d:;
			{
				_1ad205b80_structureStatic(_self_, _166326_m.cast_ptr<_1ab082536_StructStaticIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b1b418c5:;
			{
				_1ad205e38_backendEmit(_self_, _166326_m.cast_ptr<_1ab0866c2_BackendEmitExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b1b4194c:;
			{
				_1ad2061e1_free(_self_, _166326_m.cast_ptr<_1ab0869be_FreeExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b1b419c4:;
			{
				_1ad206499_strComp(_self_, _166326_m.cast_ptr<_1ad1227c2_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b1b41a4b:;
			{
				_1ad1ec083_var(_self_, (*(_166326_m.unsafe_cast_ptr<_1ad12231b_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b1b41ac3:;
			{
				_1ad206752_emptyCompare(_self_, _166326_m.cast_ptr<_1ad12201e_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b1b41b4a:;
			{
				_1ad206a0a_unsafeDeref(_self_, _166326_m.cast_ptr<_1ad124461_UnsafeDerefExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b1b41bc2:;
			{
				_1ad206cb3_unsafeCasting(_self_, _166326_m.cast_ptr<_1ad12475d_UnsafeCastingExprModel>(&__jule_any_type133));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b1b41c49:;
			{
				_1ad2002b7_funcCall(_self_, (*(_166326_m.unsafe_cast_ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel>()))._field_Base, true);
			}
		}
		else {
			_case_begin_1b1b3e95b:;
			{
				_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b1b3e86d:;
	};
}



inline jule::Bool _1ad2073ac_handleFieldByDefault(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a4832_FieldIns>* _176542_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_176542_f))))._field_Default != nullptr)) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1ad210d22_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_176542_f))))._field_Decl));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1ad1ece0d_possibleRefExpr(_self_, (*(*((*(_176542_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ad4dca38_ableToInit(&((*((*(_176542_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1ad210d22_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_176542_f))))._field_Decl));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1ad208237_initExpr(_self_, (*((*(_176542_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ad207665_initStructLit(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _178635_s) {
	if ((*((*((*(_178635_s))))._field_Decl))._field_Binded) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ad4d3e3b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_178635_s)));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1ad4d3e3b_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_178635_s)));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17957_inited = false;;
	{
		auto expr = &((*((*(_178635_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b64e48:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> _179615_f = *it;
			{
				if (_17957_inited) {
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17957_inited=_1ad2073ac_handleFieldByDefault(_self_, &(_179615_f));
			}
			_iter_next_1b1b64e48:;
			++it;
			goto _iter_begin_1b1b64e48;
		}
		_iter_end_1b1b64e48:;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad20791d_fillCollectionByDefault(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab939816_Type>* _180845_elem) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad208237_initExpr(_self_, (*(_180845_elem)));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1ad207bc6_initCollection(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab939816_Type>* _182336_elem) {
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1ad20791d_fillCollectionByDefault(_self_, _182336_elem);
}



inline void _1ad207e7e_initArray(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab94924e_Arr>* _183731_arr) {
	if (((*((*(_183731_arr))))._field_N == 0LL)) {
		_1ad4d429e_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183731_arr)));
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ad4d429e_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183731_arr)));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1ad207bc6_initCollection(_self_, &((*((*(_183731_arr))))._field_Elem));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1ad208237_initExpr(jule::Ptr<_1ad1e8799_exprCoder> _self_, jule::Ptr<_1ab939816_Type> _185129_t) {
	if (_1ab93b719_NilCompatible(_185129_t.ptr())) {
		if ((_1ab93da5c_Map(_185129_t) != nullptr)) {
			_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _185129_t);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1ab93c4d9_Ptr(_185129_t) != nullptr)) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _185129_t);
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ab947a22_Tuple> _18667_tup = _1ab93dce3_Tup(_185129_t);;
	if ((_18667_tup != nullptr)) {
		_1ad4da45e_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18667_tup);
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18667_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1b7d615:;
			if (it != expr_end) {
				jule::I64 _18709_i = it - expr->begin();
				jule::Ptr<_1ab939816_Type> _187016_tt = *it;
				{
					if ((!(_1ad4dcd13_shouldInitialized(&(_187016_tt))))) {
						goto _iter_next_1b1b7d615;
					};
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ad4c1247_write((*(_self_))._field_oc, _1a941cc8b_Itoa(_18709_i));
					_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ad208237_initExpr(_self_, _187016_tt);
					if ((((*_18667_tup.alloc)._field_Types.len() - _18709_i) > 1LL)) {
						_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1b1b7d615:;
				++it;
				_18709_i++;
				goto _iter_begin_1b1b7d615;
			}
			_iter_end_1b1b7d615:;
		};
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ab0977b0_Enum> _18857_enm = _1ab93c770_Enum(_185129_t);;
	if ((_18857_enm != nullptr)) {
		_1ad20706b_model(_self_, (*((*((*((*_18857_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ab94292e_Prim> _18903_prim = _1ab93bebc_Prim(_185129_t);;
	if ((_18903_prim != nullptr)) {
		if (_1ab118853_IsNum((*_18903_prim.alloc)._field_Kind)) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1ab945b63_IsBool(_18903_prim)) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1ab945de9_IsStr(_18903_prim)) {
			_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ab93cc8c_Arr(_185129_t) != nullptr)) {
		jule::Ptr<_1ab94924e_Arr> _19028_arr = _1ab93cc8c_Arr(_185129_t);;
		_1ad207e7e_initArray(_self_, &(_19028_arr));
		return;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _19067_s = _1ab93d540_Struct(_185129_t);;
	if ((_19067_s != nullptr)) {
		_1ad207665_initStructLit(_self_, &(_19067_s));
		return;;
	};
	_1ad4d5b85_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _185129_t);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1ad20ad2d_TestCoder_eq(_1ad20ad2d_TestCoder *_self_, _1ad20ad2d_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1ad20ad2d_TestCoder> static__1ad20b2d4_New(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1ad20ad2d_TestCoder>(_1ad20ad2d_TestCoder{._field_t=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ad20b56a_findTestingPackage(jule::Ptr<_1ad20ad2d_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b891e2:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1b1b891e2:;
			++it;
			goto _iter_begin_1b1b891e2;
		}
		_iter_end_1b1b891e2:;
	};
	return nullptr;;
}



inline void _1ad20b823_appendTest(jule::Ptr<_1ad20ad2d_TestCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _3531_f) {
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad20c060_callTmReset(_self_);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1ad208ee6_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	static__1ad20ed87_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1ad20bacb_appendPackageTests(jule::Ptr<_1ad20ad2d_TestCoder> _self_, jule::Ptr<_1ab868cea_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b909e0:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1b9146e:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _5216_f = *it;
						{
							if (_1ab3dd6c7_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1ad20b823_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1b1b9146e:;
						++it;
						goto _iter_begin_1b1b9146e;
					}
					_iter_end_1b1b9146e:;
				};
			}
			_iter_next_1b1b909e0:;
			++it;
			goto _iter_begin_1b1b909e0;
		}
		_iter_end_1b1b909e0:;
	};
}



inline jule::Bool _1ad20bd62_readyTestingPackage(jule::Ptr<_1ad20ad2d_TestCoder> _self_) {
	jule::Ptr<_1ab866578_ImportInfo> _617_p = _1ad20b56a_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1ab867788_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1a37a647c_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a37a647c_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a37a647c_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1ad20c060_callTmReset(jule::Ptr<_1ad20ad2d_TestCoder> _self_) {
	static__1ad20ea9b_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad20c25d_callTmFailed(jule::Ptr<_1ad20ad2d_TestCoder> _self_) {
	static__1ad20ea9b_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad20c45b_callTmSkipped(jule::Ptr<_1ad20ad2d_TestCoder> _self_) {
	static__1ad20ea9b_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad20c659_Serialize(jule::Ptr<_1ad20ad2d_TestCoder> _self_) {
	_1ad4ccee0_serializeHead((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	if ((!(_1ad20bd62_readyTestingPackage(_self_)))) {
		_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1ad4c18eb_doneIndent((*(_self_))._field_oc);
		_1ad4cc2ca_end((*(_self_))._field_oc);
		return;;
	};
	_1a387dcd5_Builder _1097_tb = static__1a387e654_New(40LL);;
	_1ad4d3e3b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1ad4d1d7e_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a3881117_Buf(&_1097_tb));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ad4c1500_writeBytes((*(_self_))._field_oc, _1a3881117_Buf(&_1097_tb));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ad4c16ed_addIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ad20c25d_callTmFailed(_self_);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1ad20c45b_callTmSkipped(_self_);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1ad20bacb_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ad4c18eb_doneIndent((*(_self_))._field_oc);
	_1ad4c1ae9_indent((*(_self_))._field_oc);
	_1ad4c1247_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ad4cc2ca_end((*(_self_))._field_oc);
}








inline jule::Bool _1ad20d979_identCoder_eq(_1ad20d979_identCoder *_self_, _1ad20d979_identCoder _other_) { return true; }

inline void static__1ad20deb8_writeIdentTo(_1a387dcd5_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1bb2b77:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1b1bb2eeb;
				};
			}
			_iter_next_1b1bb2b77:;
			++it;
			goto _iter_begin_1b1bb2b77;
		}
		_iter_end_1b1bb2b77:;
	};
	({
		auto except = _1a387ecd6_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1b1bb2eeb:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1b1bb3b01:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1a388008e_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1b1bb3b01;
				};
				({
					auto except = _1a387ecd6_WriteStr(_2630_buf, _1a941c9c2_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1b1bb3b01:;
			it += len;
			goto _iter_begin_1b1bb3b01;
		}
	};
}



inline void static__1ad20e35e_toOut(_1a387dcd5_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1a388008e_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1a387ecd6_WriteStr(_5423_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1a388008e_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1ad20deb8_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1ad20e7b0_toLocal(_1a387dcd5_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1a388008e_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_6925_buf, _1a941cc8b_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_6925_buf, _1a941cc8b_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1ad20deb8_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1ad20ea9b_func(_1a387dcd5_Builder* _7722_buf, jule::Ptr<_1ab0898e5_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1b1bb7e24:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1ab08a132_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1b1bb7ebd:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1a387ecd6_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1b1bb7d03:;
	};
	jule::Ptr<_1ab6bec94_Directive> _873_export = _1ab3dd30e_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1a387ecd6_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1ad20e35e_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1ad20ed87_funcIns(_1a387dcd5_Builder* _9525_buf, jule::Ptr<_1ab08c9a3_FnIns>* _9553_f) {
	if (_1ab08de6b_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1a387ecd6_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*(*((*(_9553_f))))._field_Decl.alloc)._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1ad20ea9b_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1ad20e35e_toOut(_9525_buf, (*(*((*(_9553_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1ad210173_traitDecl(_1a387dcd5_Builder* _11027_buf, jule::Ptr<_1ab095109_Trait> _11050_t) {
	static__1ad20e35e_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1ad21045e_param(_1a387dcd5_Builder* _11423_buf, jule::Ptr<_1ab087e21_Param>* _11447_p) {
	if ((_1ab6a8189_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1ab6a7dc0_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1ab088570_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1a387ecd6_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1ad20e7b0_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1ad20e7b0_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*((*((*(_11447_p))))._field_Token))._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1ad21074a_structure(_1a387dcd5_Builder* _12927_buf, jule::Ptr<_1a37a2577_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1ab3dd6c7_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1a387ecd6_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1a387ecd6_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1ad20e35e_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1ad210a36_structureIns(_1a387dcd5_Builder* _14030_buf, jule::Ptr<_1a37a53d2_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1ad21074a_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1ad20e35e_toOut(_14030_buf, (*(*((*(_14054_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1ad210d22_field(_1a387dcd5_Builder* _14823_buf, jule::Ptr<_1a379e651_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1a387ecd6_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a387ecd6_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1ad20deb8_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1ad21110d_var(_1a387dcd5_Builder* _15821_buf, jule::Ptr<_1ab8a7289_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1b1bc9243:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1b1bc8484:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1b1bc74e9:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder == -1LL)) {
			_case_begin_1b1bc7560:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder >= 0LL)) {
			_case_begin_1b1bc75c6:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(_15821_buf, _1a941cc8b_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Scope != nullptr)) {
			_case_begin_1b1bc763c:;
			{
				static__1ad20e7b0_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1b1bc7483:;
			{
				jule::Ptr<_1ab6bec94_Directive> _1764_export = _1ab3dd30e_FindDirective(&((*(_15848_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1a387ecd6_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1ad20e35e_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1b1bc7373:;
	};
}



inline void static__1ad2113e9_iterBegin(_1a387dcd5_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1a387ecd6_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_18527_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1ad2116d5_iterEnd(_1a387dcd5_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1a387ecd6_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_19025_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1ad2119c1_iterNext(_1a387dcd5_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1a387ecd6_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_19526_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1ad211cac_label(_1a387dcd5_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1a387ecd6_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_20023_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1ad212098_matchEnd(_1a387dcd5_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1a387ecd6_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_20526_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1ad212384_caseBegin(_1a387dcd5_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1a387ecd6_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_21027_buf, _1a941c609_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1ad4bd277_SerializationInfo_eq(_1ad4bd277_SerializationInfo *_self_, _1ad4bd277_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1ad4bd695_traitCast_eq(_1ad4bd695_traitCast *_self_, _1ad4bd695_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1ad4bda6e_anonHash_eq(_1ad4bda6e_anonHash *_self_, _1ad4bda6e_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1ad4be289_metadata_eq(_1ad4be289_metadata *_self_, _1ad4be289_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1ad4c0a2c_ObjectCoder> static__1ad4c0e8e_New(jule::Ptr<_1ab3d5ec7_IR>* _12021_ir, _1ad4bd277_SerializationInfo _12035_info) {
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _1217_oc = jule::new_ptr<_1ad4c0a2c_ObjectCoder>(_1ad4c0a2c_ObjectCoder{._field_Buf=_1a387dcd5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1a387dcd5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1a387dcd5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1a387dcd5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1a387dcd5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1a387dcd5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_12021_ir)), ._field_info=_12035_info, ._field_anons=jule::Slice<jule::Ptr<_1ad4bda6e_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1a9a36be0_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1ad4bd695_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1ad4bde8c_traitHash>>(nullptr), ._field_traitMetMap=static__1b1bd6195_make(), ._field_ec=jule::Ptr<_1ad1e8799_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1ad1dc2a4_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1ad4d0982_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1ad4be289_metadata{._field_concurrent=false}});;
	(*(_1217_oc))._field_ec=static__1ad1e8b95_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_sc=static__1ad1dc99c_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_tc=static__1ad4d0ed2_new(&(_1217_oc));
	return _1217_oc;;
}



inline void _1ad4c1247_write(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Str _13322_s) {
	({
		auto except = _1a387ecd6_WriteStr(&(*(_self_))._field_Buf, _13322_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:134:3"));
		(except.result);
	});
}



inline void _1ad4c1500_writeBytes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b) {
	({
		auto except = _1a387e995_Write(&(*(_self_))._field_Buf, _13727_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:138:3"));
		(except.result);
	});
}



inline void _1ad4c16ed_addIndent(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1ad4c18eb_doneIndent(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1ad4c1ae9_indent(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	({
		auto except = _1a387e995_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:153:3"));
		(except.result);
	});
}



inline jule::I64 _1ad4c1e3a_findAnyType(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab939816_Type>* _15633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2270245:;
		if (it != expr_end) {
			jule::I64 _1578_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> _15715_at = *it;
			{
				if (_1ab93a053_Equal(_15715_at, (*(_15633_t)))) {
					return _1578_i;;
				};
			}
			_iter_next_1b2270245:;
			++it;
			_1578_i++;
			goto _iter_begin_1b2270245;
		}
		_iter_end_1b2270245:;
	};
	return -1LL;;
}



inline jule::I64 _1ad4c227b_pushCoSpawn(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _16532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2270d06:;
		if (it != expr_end) {
			jule::I64 _1667_i = it - expr->begin();
			jule::Ptr<_1ab08c9a3_FnIns> _16610_sf = *it;
			{
				if (((*(_16610_sf))._field_Params.len() == (*(_16532_f))._field_Params.len())) {
					{
						auto expr = &((*_16610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2272830:;
						if (it != expr_end) {
							jule::I64 _1689_j = it - expr->begin();
							jule::Ptr<_1ab08b84d_ParamIns> *_16812_sp = it;
							{
								if ((!(_1ab93a053_Equal((*((*(_16812_sp))))._field_Type, (*((*(_16610_sf))._field_Params[_1689_j]))._field_Type)))) {
									goto _iter_end_1b2272830;
								};
							}
							_iter_next_1b2272830:;
							++it;
							_1689_j++;
							goto _iter_begin_1b2272830;
						}
						_iter_end_1b2272830:;
					};
					return _1667_i;;
				};
			}
			_iter_next_1b2270d06:;
			++it;
			_1667_i++;
			goto _iter_begin_1b2270d06;
		}
		_iter_end_1b2270d06:;
	};
	jule::I64 _1763_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1773_is = _1a941cc8b_Itoa(_1763_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16532_f; __jule_collection; }));
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:182:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:185:3"));
	});
	_1ad4d5822_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16532_f);
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:190:3"));
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2277b32:;
		if (it != expr_end) {
			jule::I64 _1938_j = it - expr->begin();
			jule::Ptr<_1ab08b84d_ParamIns> _19315_p = *it;
			{
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:194:4"));
				});
				_1ad4d5b85_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19315_p))._field_Type);
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1a941cc8b_Itoa(_1938_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
					(except.result);
				});
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:200:4"));
				});
			}
			_iter_next_1b2277b32:;
			++it;
			_1938_j++;
			goto _iter_begin_1b2277b32;
		}
		_iter_end_1b2277b32:;
	};
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:204:3"));
	});
	{
		
		if ((_1a87b9776_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1b227cd8a:;
			{
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:208:4"));
					(except.result);
				});
			}
		}
		else if (_1a3892700_IsUnix(_1a87b9776_OS)) {
			_case_begin_1b227ce67:;
			{
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:210:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1b227aa8b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:212:4"));;
			}
		}
		_match_end_1b227c7c4:;
	};
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:215:3"));
		(except.result);
	});
	;
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:235:3"));
		(except.result);
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2285854:;
		if (it != expr_end) {
			jule::I64 _2387_j = it - expr->begin();
			{
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1a941cc8b_Itoa(_2387_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:242:4"));
					(except.result);
				});
				if ((((*_16532_f.alloc)._field_Params.len() - _2387_j) > 1LL)) {
					({
						auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:244:5"));
						(except.result);
					});
				};
			}
			_iter_next_1b2285854:;
			++it;
			_2387_j++;
			goto _iter_begin_1b2285854;
		}
		_iter_end_1b2285854:;
	};
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:247:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:252:3"));
		(except.result);
	});
	{
		
		if ((_1a87b9776_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1b2289e1e:;
			{
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:256:4"));
					(except.result);
				});
			}
		}
		else if (_1a3892700_IsUnix(_1a87b9776_OS)) {
			_case_begin_1b2289eeb:;
			{
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:259:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1b2287b20:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:261:4"));;
			}
		}
		_match_end_1b2289a56:;
	};
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:263:3"));
		(except.result);
	});
	return _1763_i;;
}



inline jule::I64 _1ad4c25bc_pushDealloc(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab939816_Type> _26832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b228c482:;
		if (it != expr_end) {
			jule::I64 _2697_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> _26910_dt = *it;
			{
				if (_1ab93a053_Equal(_26910_dt, _26832_t)) {
					return _2697_i;;
				};
			}
			_iter_next_1b228c482:;
			++it;
			_2697_i++;
			goto _iter_begin_1b228c482;
		}
		_iter_end_1b228c482:;
	};
	jule::I64 _2743_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26832_t; __jule_collection; }));
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_deallocObj, _1a941cc8b_Itoa(_2743_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:278:3"));
		(except.result);
	});
	_1ad4d5b85_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26832_t);
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:280:3"));
		(except.result);
	});
	return _2743_i;;
}



inline jule::Str _1ad4c290d_pushAnonFn(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel>* _28432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28432_m))))._field_Func))._field_CalledCo);
	jule::Bool _2873_closure = _1ab3db9e4_IsClosure(_28432_m);;
	if (_2873_closure) {
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:290:4"));
			(except.result);
		});
		jule::I64 _2914_l = _1a3880aea_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:293:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1a3881117_Buf(&(*_self_.alloc)._field_anonObj).slice(_2914_l));
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:295:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b229528c:;
			if (it != expr_end) {
				jule::Ptr<_1ab8a7289_Var> _29616_v = *it;
				{
					({
						auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:297:5"));
					});
					_1ad4d5b85_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29616_v))._field_TypeSym))._field_Type);
					({
						auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:299:5"));
					});
					if ((*_29616_v.alloc)._field_Reference) {
						({
							auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:301:6"));
						});
					};
					static__1ad21110d_var(&((*_self_.alloc)._field_anonObj), _29616_v);
					({
						auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:304:5"));
						(except.result);
					});
				}
				_iter_next_1b229528c:;
				++it;
				goto _iter_begin_1b229528c;
			}
			_iter_end_1b229528c:;
		};
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:306:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:313:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad4bda6e_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad4bda6e_anonHash>(_1ad4bda6e_anonHash{._field_expr=(*(_28432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1ad4c84e6_anonFuncInsDecl(_self_, _28432_m, __jule_func_result);
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:322:3"));
	});
	return __jule_func_result;;
}



inline jule::I64 _1ad4c2c4e_pushAnyType(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab939816_Type> _32632_t) {
	jule::Ptr<_1ab939816_Type> _3277_orig = _32632_t;;
	if ((_1ab93c770_Enum(_32632_t.ptr()) != nullptr)) {
		_32632_t=(*((*(_1ab93c770_Enum(_32632_t)))._field_TypeSym))._field_Type;
	};
	jule::I64 _3317_i = _1ad4c1e3a_findAnyType(_self_, &(_32632_t));;
	if ((_3317_i != -1LL)) {
		return _3317_i;;
	};
	_3317_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));
	jule::Str _3373_si = _1a941cc8b_Itoa(_3317_i);;
	if ((_1ab93c253_Sptr(_32632_t) != nullptr)) {
		_1a387dcd5_Builder _3398_elemKind = static__1a387e654_New(40LL);;
		_1ad4d5b85_kind((*_self_.alloc)._field_tc.ptr(), &(_3398_elemKind), (*(_1ab93c253_Sptr(_32632_t)))._field_Elem);
		jule::I64 _3434_di = _1ad4c25bc_pushDealloc(_self_, (*(_1ab93c253_Sptr(_32632_t)))._field_Elem);;
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:347:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:348:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:349:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _1a941cc8b_Itoa(_3434_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:356:4"));
			(except.result);
		});
		_1ad4d1d7e_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1a3881117_Buf(&_3398_elemKind));
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:358:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:359:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:360:4"));
			(except.result);
		});
	} else {
		_1a387dcd5_Builder _3628_kindB = static__1a387e654_New(40LL);;
		_1ad4d5b85_kind((*_self_.alloc)._field_tc.ptr(), &(_3628_kindB), _32632_t);
		jule::Str _3644_kind = _1a3880666_Str(&_3628_kindB);;
		jule::I64 _3674_di = _1ad4c25bc_pushDealloc(_self_, _32632_t);;
		jule::Str _3728_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3728_lmodel+=_3644_kind;
		_3728_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3758_rmodel = _3728_lmodel;;
		_3758_rmodel+=jule::Str::lit("other)", 6);
		_3728_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:379:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:380:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:381:4"));
			(except.result);
		});
		if (_1ab93ae66_Comparable(_32632_t)) {
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			_1ad1eb093__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3728_lmodel), &(_3758_rmodel), &(_32632_t), &(_32632_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:385:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:387:5"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:388:5"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:389:5"));
				(except.result);
			});
			jule::I64 _3909_n = _1a3880aea_Len(&(*_self_.alloc)._field_anyObj);;
			_1ad208bb6_cstrBytes(&((*_self_.alloc)._field_anyObj), _1ab939c12_Str(_32632_t));
			_3909_n=(_1a3880aea_Len(&(*_self_.alloc)._field_anyObj) - _3909_n);
			_3909_n+=37LL;
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:394:5"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _1a941cc8b_Itoa(_3909_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:395:5"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:5"));
				(except.result);
			});
		};
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:400:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:401:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:402:4"));
			(except.result);
		});
		jule::Ptr<_1ab0898e5_Fn> _4038_decl = _1ab9c0bdd_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1ab08c9a3_FnIns> _4048_f = _1ab3ded38_FindFnGenericInstance(&(_4038_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _3277_orig; __jule_collection; }));;
		static__1ad20ed87_funcIns(&((*_self_.alloc)._field_anyObj), &(_4048_f));
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:4"));
			(except.result);
		});
		if ((_1ab93c4d9_Ptr(_32632_t) == nullptr)) {
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:408:5"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3644_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:409:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3644_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:411:5"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:5"));
				(except.result);
			});
		};
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _1a941cc8b_Itoa(_3674_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:421:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:422:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:423:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:424:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:425:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:426:4"));
			(except.result);
		});
	};
	return _3317_i;;
}



inline void _1ad4c3007_pushResultIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _43135_f) {
	jule::Str _4323_s = __jule_bytesToStr(_1ad4dae43_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_43135_f))))._field_Result)));;
	jule::Bool _4336_ok;
	_1a9a373a5_lookup((*_self_.alloc)._field_resultMap, _4323_s, nullptr, &(_4336_ok));
	if (_4336_ok) {
		return;;
	};
	(*_1a9a3765d_set(((*_self_.alloc)._field_resultMap).ptr(), _4323_s))=false;
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:438:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, _4323_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1ab93dce3_Tup((*((*(_43135_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22bae61:;
		if (it != expr_end) {
			jule::I64 _4418_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> _44115_t = *it;
			{
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:442:4"));
				});
				_1ad4d5b85_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _44115_t);
				({
					auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:444:4"));
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:445:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, _1a941cc8b_Itoa(_4418_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:446:4"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:447:4"));
					(except.result);
				});
			}
			_iter_next_1b22bae61:;
			++it;
			_4418_i++;
			goto _iter_begin_1b22bae61;
		}
		_iter_end_1b22bae61:;
	};
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:449:3"));
		(except.result);
	});
}



inline void _1ad4c32b0_pushResult(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _45232_f) {
	if ((_1ab089d9b_IsVoid((*(_45232_f)).ptr()) || ((*((*((*(_45232_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4567_n = (*((*(_45232_f))))._field_Instances.len();;
	if (((*((*(_45232_f))))._field_Generics.len() == 0LL)) {
		_4567_n=1LL;
	};
	{
		auto expr = (*((*(_45232_f))))._field_Instances.slice(0LL, _4567_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b22c1043:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _46015_ins = *it;
			{
				_1ad4c3007_pushResultIns(_self_, &(_46015_ins));
			}
			_iter_next_1b22c1043:;
			++it;
			goto _iter_begin_1b22c1043;
		}
		_iter_end_1b22c1043:;
	};
}



inline void _1ad4c3623_pushAndWriteMaskMapper(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab095109_Trait> _46543_t1, jule::Ptr<_1ab095109_Trait> _46565_t2) {
	_1a387dcd5_Builder _4667_ident = static__1a387e654_New(32LL);;
	({
		auto except = _1a387ecd6_WriteStr(&_4667_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:467:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_4667_ident, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46565_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:468:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_4667_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:469:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_4667_ident, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46543_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:470:3"));
		(except.result);
	});
	({
		auto except = _1a387e995_Write(&(*(_self_))._field_Buf, _1a3881117_Buf(&_4667_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:471:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22c3dc0:;
		if (it != expr_end) {
			_1ad4bd695_traitCast _47410_m = *it;
			{
				if (((_47410_m._field_t1 == _46543_t1) && (_47410_m._field_t2 == _46565_t2))) {
					return;;
				};
			}
			_iter_next_1b22c3dc0:;
			++it;
			goto _iter_begin_1b22c3dc0;
		}
		_iter_end_1b22c3dc0:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1ad4bd695_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad4bd695_traitCast{._field_t1=_46543_t1, ._field_t2=_46565_t2}; __jule_collection; }));
	;
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:484:3"));
		(except.result);
	});
	({
		auto except = _1a387e995_Write(&(*_self_.alloc)._field_anyObj, _1a3881117_Buf(&_4667_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:485:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:486:3"));
		(except.result);
	});
	_1a387dcd5_Builder _4887_t1Ident = static__1a387e654_New(16LL);;
	_1a387dcd5_Builder _4897_t2Ident = static__1a387e654_New(16LL);;
	static__1ad210173_traitDecl(&(_4887_t1Ident), _46543_t1);
	static__1ad210173_traitDecl(&(_4897_t2Ident), _46565_t2);
	{
		auto expr = &((*(_46543_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22c44ec:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _49315_s1 = *it;
			{
				{
					auto expr = &((*(_46565_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b22c8501:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> _49411_s2 = *it;
						{
							if ((_49315_s1 == _49411_s2)) {
								{
									auto expr = &((*(_49315_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b22c93e2:;
									if (it != expr_end) {
										jule::Ptr<_1a37a53d2_StructIns> _49618_s1i = *it;
										{
											jule::I64 _4977_i1 = _1ab3de211_FindTraitTypeOffsetS(_46543_t1, _49618_s1i);;
											jule::I64 _4987_i2 = _1ab3de211_FindTraitTypeOffsetS(_46565_t2, _49618_s1i);;
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1a387e995_Write(&(*_self_.alloc)._field_anyObj, _1a3881117_Buf(&_4897_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _1a941cc8b_Itoa(_4987_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:502:7"));
												(except.result);
											});
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:503:7"));
												(except.result);
											});
											({
												auto except = _1a387e995_Write(&(*_self_.alloc)._field_anyObj, _1a3881117_Buf(&_4887_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:504:7"));
												(except.result);
											});
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:505:7"));
												(except.result);
											});
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, _1a941cc8b_Itoa(_4977_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:506:7"));
												(except.result);
											});
											({
												auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:507:7"));
												(except.result);
											});
										}
										_iter_next_1b22c93e2:;
										++it;
										goto _iter_begin_1b22c93e2;
									}
									_iter_end_1b22c93e2:;
								};
							};
						}
						_iter_next_1b22c8501:;
						++it;
						goto _iter_begin_1b22c8501;
					}
					_iter_end_1b22c8501:;
				};
			}
			_iter_next_1b22c44ec:;
			++it;
			goto _iter_begin_1b22c44ec;
		}
		_iter_end_1b22c44ec:;
	};
	({
		auto except = _1a387ecd6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:512:3"));
		(except.result);
	});
}



inline void _1ad4c38cb_locInfo(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab6a54d8_Token>* _51625_t) {
	jule::Str *_5174_loc = &((*((*((*(_51625_t))))._field_File))._field_Path);;
	if (_1a87c1be0_Production) {
		{
			
			if (_1a87a8b1c_HasPrefix((*(_5174_loc)), _1a87b8bd7_PathStdlib)) {
				_case_begin_1b22ce8d1:;
				{
					_1ad208bb6_cstrBytes(&((*(_self_))._field_Buf), (*(_5174_loc)).slice((_1a87b5b18_Dir(_1a87b8bd7_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1a87a8b1c_HasPrefix((*(_5174_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1b22ce9ad:;
				{
					_1ad208bb6_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5174_loc)).slice((_1a87b5b18_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1b22ce518:;
				{
					_1ad208bb6_cstrBytes(&((*(_self_))._field_Buf), (*(_5174_loc)));
				}
			}
			_match_end_1b22ce43b:;
		};
	} else {
		_1ad208bb6_cstrBytes(&((*(_self_))._field_Buf), (*(_5174_loc)));
	};
	_1ad4c1247_write(_self_, jule::Str::lit(":", 1));
	_1ad4c1247_write(_self_, _1a941cc8b_Itoa((*((*(_51625_t))))._field_Row));
	_1ad4c1247_write(_self_, jule::Str::lit(":", 1));
	_1ad4c1247_write(_self_, _1a941cc8b_Itoa((*((*(_51625_t))))._field_Column));
}



inline void _1ad4c3ac9_head(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ad4b3646_Time _5433_time = static__1ad4b3c40_Now();;
	_1ad4b2e70_AbsTime _5443_abs = _1ad4b5428_Abs(&_5433_time);;
	_1ad4c1247_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ad4c1247_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ad4c1247_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
	_1ad4c1247_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ad4c1247_write(_self_, _1a941c609_FmtUint(_5443_abs._field_Day, 10LL));
	_1ad4c1247_write(_self_, jule::Str::lit("/", 1));
	_1ad4c1247_write(_self_, _1a941c609_FmtUint(_5443_abs._field_Month, 10LL));
	_1ad4c1247_write(_self_, jule::Str::lit("/", 1));
	_1ad4c1247_write(_self_, _1a941c609_FmtUint(_5443_abs._field_Year, 10LL));
	_1ad4c1247_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ad4c1247_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1ad4c1247_write(_self_, jule::Str::lit(" ", 1));
	_1ad4c1247_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1a87c1be0_Production) {
		_1ad4c1247_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1a87c15d5_RC))) {
		_1ad4c1247_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1a87c199d_Safety))) {
		_1ad4c1247_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ad4c3d82_links(_self_, true);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ad4c1247_write(_self_, _1a87b94bd_PathApi);
	_1ad4c1247_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1ad4c3d82_links(_self_, false);
}



inline void _1ad4c3d82_links(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Bool _58322_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22db5d0:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _58410_used = *it;
			{
				{
					
					if ((!((*(_58410_used))._field_Binded))) {
						_case_begin_1b22dc416:;
						{
							goto _iter_next_1b22db5d0;
						}
					}
					else if (_1a3e447b8_IsStdHeaderPath((*(_58410_used))._field_Path)) {
						_case_begin_1b22dc49e:;
						{
							if ((!(_58322_std))) {
								goto _iter_next_1b22db5d0;
							};
							_1ad4c1247_write(_self_, jule::Str::lit("#include ", 9));
							_1ad4c1247_write(_self_, (*_58410_used.alloc)._field_Path);
							_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1a3e44a93_IsValidHeaderExt(_1a87b51ab_Ext((*(_58410_used))._field_Path))) {
						_case_begin_1b22dc515:;
						{
							if (_58322_std) {
								goto _iter_next_1b22db5d0;
							};
							_1ad4c1247_write(_self_, jule::Str::lit("#include \"", 10));
							_1ad4c1247_write(_self_, (*_58410_used.alloc)._field_Path);
							_1ad4c1247_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1b22dc2b2:;
				};
			}
			_iter_next_1b22db5d0:;
			++it;
			goto _iter_begin_1b22db5d0;
		}
		_iter_end_1b22db5d0:;
	};
}



inline void _1ad4c413a_prepareStructure(_1ad4c0a2c_ObjectCoder* _self_, jule::Ptr<_1a37a2577_Struct>* _60637_s) {
	{
		auto expr = &((*((*(_60637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22dc070:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _60715_ins = *it;
			{
				{
					auto expr = &((*(_60715_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b22e11a6:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _60816_m = *it;
						{
							if ((*(_60816_m))._field_Statically) {
								goto _iter_next_1b22e11a6;
							};
							{
								auto expr = &((*_60816_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b22e1c67:;
								if (it != expr_end) {
									jule::Ptr<_1ab08c9a3_FnIns> _61217_mins = *it;
									{
										jule::Ptr<_1ab08b84d_ParamIns> _61310_p = (*(_61217_mins))._field_Params[0LL];;
										_1a387dcd5_Builder _61410_kind = static__1a387e654_New(40LL);;
										_1ad4d5b85_kind((*(_self_))._field_tc.ptr(), &(_61410_kind), (*(_61310_p))._field_Type);
										if ((!(_1ab088806_IsRef((*_61310_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1a387ecd6_WriteStr(&_61410_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:617:7"));
												(except.result);
											});
										};
										(*_61310_p.alloc)._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad4ced5a_customType>(_1ad4ced5a_customType{._field_kind=_1a3880666_Str(&_61410_kind)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data29)});
									}
									_iter_next_1b22e1c67:;
									++it;
									goto _iter_begin_1b22e1c67;
								}
								_iter_end_1b22e1c67:;
							};
						}
						_iter_next_1b22e11a6:;
						++it;
						goto _iter_begin_1b22e11a6;
					}
					_iter_end_1b22e11a6:;
				};
			}
			_iter_next_1b22dc070:;
			++it;
			goto _iter_begin_1b22dc070;
		}
		_iter_end_1b22dc070:;
	};
}



inline void _1ad4c4338_prepareStructures(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22d9a0c:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _63015_s = *it;
			{
				if (((*(_63015_s))._field_Token != nullptr)) {
					_1ad4c413a_prepareStructure(_self_.ptr(), &(_63015_s));
				};
			}
			_iter_next_1b22d9a0c:;
			++it;
			goto _iter_begin_1b22d9a0c;
		}
		_iter_end_1b22d9a0c:;
	};
}



inline void _1ad4c45e1_structurePlainDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a2577_Struct>* _63740_s) {
	{
		auto expr = &((*((*(_63740_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22e6354:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _63815_ins = *it;
			{
				_1ad4c1247_write(_self_, jule::Str::lit("struct ", 7));
				static__1ad210a36_structureIns(&((*_self_.alloc)._field_Buf), &(_63815_ins));
				_1ad4c1247_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b22e6354:;
			++it;
			goto _iter_begin_1b22e6354;
		}
		_iter_end_1b22e6354:;
	};
}



inline void _1ad4c47de_structurePlainDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22e7971:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _64615_s = *it;
			{
				if (((*(_64615_s))._field_Token != nullptr)) {
					_1ad4c45e1_structurePlainDecl(_self_, &(_64615_s));
				};
			}
			_iter_next_1b22e7971:;
			++it;
			goto _iter_begin_1b22e7971;
		}
		_iter_end_1b22e7971:;
	};
}



inline void _1ad4c4a97_fieldDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a4832_FieldIns>* _65331_f) {
	_1ad4d5b85_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_65331_f))))._field_Type);
	_1ad4c1247_write(_self_, jule::Str::lit(" ", 1));
	static__1ad210d22_field(&((*_self_.alloc)._field_Buf), &((*((*(_65331_f))))._field_Decl));
	_1ad4c1247_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ad4c4eb5_structureOperatorEq(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Str _66036_ident, jule::Ptr<_1a37a53d2_StructIns>* _66053_s, jule::Bool _66074_decl) {
	if ((!(_1ad4cdb4a_defaultEq(_66053_s)))) {
		return;;
	};
	_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
	if (_1ad13d7aa_Inline) {
		_1ad4c1247_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ad4c1247_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1ad4c1247_write(_self_, _66036_ident);
	_1ad4c1247_write(_self_, jule::Str::lit("_eq", 3));
	_1ad4c1247_write(_self_, jule::Str::lit("(", 1));
	_1ad4c1247_write(_self_, _66036_ident);
	_1ad4c1247_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1ad4c1247_write(_self_, _66036_ident);
	_1ad4c1247_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_66074_decl) {
		_1ad4c1247_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1ad4c1247_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_66053_s))))._field_Fields.len() == 0LL)) {
		_1ad4c1247_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1ad4c16ed_addIndent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
	_1ad4c1ae9_indent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("return ", 7));
	_1ad4c16ed_addIndent(_self_);
	jule::Bool _6917_writed = false;;
	jule::Str _6947_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6957_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_66053_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2302849:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> _69715_f = *it;
			{
				jule::Ptr<_1a37a53d2_StructIns> _6994_strct = _1ab93d540_Struct((*(_69715_f))._field_Type.ptr());;
				if ((((_6994_strct != nullptr) && ((*_6994_strct.alloc)._field_Decl != nullptr)) && (*(*(_6994_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1b2302849;
				};
				if (_6917_writed) {
					_1ad4c1247_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6917_writed=true;
				_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
				_1ad4c1ae9_indent(_self_);
				_1a387dcd5_Builder _7108_fIdent = static__1a387e654_New((*((*_69715_f.alloc)._field_Decl))._field_Ident.len());;
				static__1ad210d22_field(&(_7108_fIdent), &((*_69715_f.alloc)._field_Decl));
				_6947_lmodel+=_1a42185c5_BytesStr(_1a3881117_Buf(&_7108_fIdent));
				_6957_rmodel+=_1a42185c5_BytesStr(_1a3881117_Buf(&_7108_fIdent));
				_1ad1eb093__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6947_lmodel), &(_6957_rmodel), &((*_69715_f.alloc)._field_Type), &((*_69715_f.alloc)._field_Type), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6947_lmodel).mut_slice(0LL, (_6947_lmodel.len() - _1a3880aea_Len(&_7108_fIdent)));;
				_6957_rmodel=_6947_lmodel.slice(0LL, (_6957_rmodel.len() - _1a3880aea_Len(&_7108_fIdent)));
			}
			_iter_next_1b2302849:;
			++it;
			goto _iter_begin_1b2302849;
		}
		_iter_end_1b2302849:;
	};
	_1ad4c18eb_doneIndent(_self_);
	if ((!(_6917_writed))) {
		_1ad4c1247_write(_self_, jule::Str::lit("true", 4));
	};
	_1ad4c1247_write(_self_, jule::Str::lit(";\n", 2));
	_1ad4c18eb_doneIndent(_self_);
	_1ad4c1ae9_indent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1ad4c5328_structureOperators(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _72840_s, jule::Bool _72861_decl) {
	_1a387dcd5_Builder _7297_sb = static__1a387e654_New(40LL);;
	static__1ad210a36_structureIns(&(_7297_sb), _72840_s);
	jule::Str _7313_ident = _1a3880666_Str(&_7297_sb);;
	_1ad4c4eb5_structureOperatorEq(_self_, _7313_ident, _72840_s, _72861_decl);
}



inline void _1ad4c55d1_structureInsDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _73738_s) {
	{
		auto expr = &((*((*(_73738_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b230bb94:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _73815_m = *it;
			{
				if (_1ad4cd881_isHeadDecl(&(_73815_m))) {
					_1ad4c6934_funcDecl(_self_, &(_73815_m), false);
				};
			}
			_iter_next_1b230bb94:;
			++it;
			goto _iter_begin_1b230bb94;
		}
		_iter_end_1b230bb94:;
	};
	_1ad4c1247_write(_self_, jule::Str::lit("struct ", 7));
	static__1ad210a36_structureIns(&((*_self_.alloc)._field_Buf), _73738_s);
	_1ad4c1247_write(_self_, jule::Str::lit(" {\n", 3));
	_1ad4c16ed_addIndent(_self_);
	{
		auto expr = &((*((*(_73738_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b230d59c:;
		if (it != expr_end) {
			jule::Ptr<_1a37a4832_FieldIns> _74915_f = *it;
			{
				_1ad4c1ae9_indent(_self_);
				_1ad4c4a97_fieldDecl(_self_, &(_74915_f));
				_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1b230d59c:;
			++it;
			goto _iter_begin_1b230d59c;
		}
		_iter_end_1b230d59c:;
	};
	_1ad4c18eb_doneIndent(_self_);
	_1ad4c1ae9_indent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("};", 2));
	;
	_1ad4c5328_structureOperators(_self_, _73738_s, true);
}



inline void _1ad4c5889_structureDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a2577_Struct>* _76335_s) {
	{
		auto expr = &((*((*(_76335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b231145c:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _76415_ins = *it;
			{
				_1ad4c55d1_structureInsDecl(_self_, &(_76415_ins));
			}
			_iter_next_1b231145c:;
			++it;
			goto _iter_begin_1b231145c;
		}
		_iter_end_1b231145c:;
	};
}



inline void _1ad4c5a87_structureDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2311bee:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _77015_s = *it;
			{
				if (((*(_77015_s))._field_Token != nullptr)) {
					_1ad4c5889_structureDecl(_self_, &(_77015_s));
					_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1b2311bee:;
			++it;
			goto _iter_begin_1b2311bee;
		}
		_iter_end_1b2311bee:;
	};
}



inline void _1ad4c5c85_structureMethodDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2312c22:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _77915_s = *it;
			{
				if (((*(_77915_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_77915_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2314d45:;
						if (it != expr_end) {
							jule::Ptr<_1a37a53d2_StructIns> _78117_ins = *it;
							{
								{
									auto expr = &((*(_78117_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b2315791:;
									if (it != expr_end) {
										jule::Ptr<_1ab0898e5_Fn> _78218_m = *it;
										{
											if ((!(_1ad4cd881_isHeadDecl(&(_78218_m))))) {
												_1ad4c32b0_pushResult(_self_, &(_78218_m));
												_1ad4c6934_funcDecl(_self_, &(_78218_m), false);
											};
										}
										_iter_next_1b2315791:;
										++it;
										goto _iter_begin_1b2315791;
									}
									_iter_end_1b2315791:;
								};
							}
							_iter_next_1b2314d45:;
							++it;
							goto _iter_begin_1b2314d45;
						}
						_iter_end_1b2314d45:;
					};
				};
			}
			_iter_next_1b2312c22:;
			++it;
			goto _iter_begin_1b2312c22;
		}
		_iter_end_1b2312c22:;
	};
}



inline void _1ad4c625d_funcHead(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _79730_buf, jule::Ptr<_1ab08c9a3_FnIns>* _79758_f, jule::Bool _79775_ptr, jule::Str _79786_ident) {
	if ((((!(_79775_ptr)) && _1ad13d7aa_Inline) && (!(_1ab08a3b8_IsEntryPoint((*((*(_79758_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1a387ecd6_WriteStr(_79730_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:799:4"));
			(except.result);
		});
	};
	_1ad4d514b_funcInsResult((*(_self_))._field_tc.ptr(), _79730_buf, _79758_f);
	if (_79775_ptr) {
		({
			auto except = _1a387ecd6_WriteStr(_79730_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:803:4"));
			(except.result);
		});
		static__1ad20ed87_funcIns(_79730_buf, _79758_f);
		({
			auto except = _1a388008e_WriteByte(_79730_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:805:4"));
		});
	} else {
		({
			auto except = _1a388008e_WriteByte(_79730_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:807:4"));
		});
		if ((_79786_ident).empty()) {
			static__1ad20ed87_funcIns(_79730_buf, _79758_f);
		} else {
			({
				auto except = _1a387ecd6_WriteStr(_79730_buf, _79786_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:811:5"));
				(except.result);
			});
		};
	};
}



inline void _1ad4c65c1_funcDeclIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns>* _81633_f, jule::Bool _81650_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_81633_f))))._field_CalledCo);
	_1ad4c1ae9_indent(_self_);
	_1ad4c625d_funcHead(_self_, &((*_self_.alloc)._field_Buf), _81633_f, _81650_ptr, jule::Str());
	_1ad4c7a67_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _81633_f);
	_1ad4c1247_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ad4c6934_funcDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _82430_f, jule::Bool _82444_ptr) {
	{
		auto expr = &((*((*(_82430_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b231c402:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _82515_c = *it;
			{
				_1ad4c65c1_funcDeclIns(_self_, &(_82515_c), _82444_ptr);
			}
			_iter_next_1b231c402:;
			++it;
			goto _iter_begin_1b231c402;
		}
		_iter_end_1b231c402:;
	};
}



inline void _1ad4c6bdc_funcDeclTrait(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _83035_f) {
	{
		auto expr = &((*((*(_83035_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b231d337:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _83115_c = *it;
			{
				jule::Ptr<_1ab939816_Type> _8328_k = (*((*(_83115_c))._field_Params[0LL]))._field_Type;;
				(*((*(_83115_c))._field_Params[0LL]))._field_Type=_1ad4bce9c_generalGCPtr;
				_1ad4c65c1_funcDeclIns(_self_, &(_83115_c), true);
				(*((*(_83115_c))._field_Params[0LL]))._field_Type=_8328_k;
			}
			_iter_next_1b231d337:;
			++it;
			goto _iter_begin_1b231d337;
		}
		_iter_end_1b231d337:;
	};
}



inline void _1ad4c6dda_funcDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ab3d8958_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab868cea_Package>*>((void*)__jule_anon_1b2321060, jule::Ptr<__jule_anon_1b2321060_ctx>::make(__jule_anon_1b2321060_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2321060_ctx_handler));
}



inline void _1ad4c7193_traitDataTypeMethods(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ad4bde8c_traitHash>* _85242_hash) {
	{
		auto expr = &((*((*(_85242_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b232145b:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _85315_m = *it;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _8548_ins = (*(_85315_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8548_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1b2325295:;
					if (it != expr_end) {
						jule::I64 _8559_i = it - expr.begin();
						jule::Ptr<_1ab08b84d_ParamIns> _85516_ip = *it;
						{
							if (_1ab6a8189_IsAnonIdent((*((*(_85516_ip))._field_Decl))._field_Ident)) {
								(*(*(_85516_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1a941cc8b_Itoa(_8559_i));
							};
						}
						_iter_next_1b2325295:;
						++it;
						_8559_i++;
						goto _iter_begin_1b2325295;
					}
					_iter_end_1b2325295:;
				};
				_1ad4c32b0_pushResult(_self_, &(_85315_m));
				_1ad4c6bdc_funcDeclTrait(_self_, &(_85315_m));
			}
			_iter_next_1b232145b:;
			++it;
			goto _iter_begin_1b232145b;
		}
		_iter_end_1b232145b:;
	};
}



inline void _1ad4c7391_traitDataTypes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b232464b:;
		if (it != expr_end) {
			jule::Ptr<_1ad4bde8c_traitHash> _86615_hash = *it;
			{
				_1ad4c1247_write(_self_, jule::Str::lit("struct ", 7));
				static__1ad210173_traitDecl(&((*_self_.alloc)._field_Buf), (*(_86615_hash))._field_traitDecl);
				_1ad4c1247_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1ad4c16ed_addIndent(_self_);
				_1ad4c1ae9_indent(_self_);
				_1ad4c1247_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1ad4c7193_traitDataTypeMethods(_self_, &(_86615_hash));
				_1ad4c18eb_doneIndent(_self_);
				_1ad4c1ae9_indent(_self_);
				_1ad4c1247_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1b232464b:;
			++it;
			goto _iter_begin_1b232464b;
		}
		_iter_end_1b232464b:;
	};
}



inline void _1ad4c7704_paramIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _88030_buf, jule::Ptr<_1ab08b84d_ParamIns>* _88058_p) {
	_1ad4d4975_paramIns((*(_self_))._field_tc.ptr(), _88030_buf, _88058_p);
	({
		auto except = _1a388008e_WriteByte(_88030_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:882:3"));
	});
	static__1ad21045e_param(_88030_buf, &((*((*(_88058_p))))._field_Decl));
}



inline void _1ad4c7a67_paramsIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _88631_buf, jule::Ptr<_1ab08c9a3_FnIns>* _88659_f) {
	if (((!((*((*(_88659_f))))._field_AsAnon)) && ((*((*(_88659_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1a387ecd6_WriteStr(_88631_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:888:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a388008e_WriteByte(_88631_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:891:3"));
	});
	if ((*((*(_88659_f))))._field_AsAnon) {
		({
			auto except = _1a387ecd6_WriteStr(_88631_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:893:4"));
			(except.result);
		});
		if (((*((*(_88659_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1a387ecd6_WriteStr(_88631_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:895:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_88659_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b232d9c9:;
		if (it != expr_end) {
			jule::I64 _8988_i = it - expr->begin();
			jule::Ptr<_1ab08b84d_ParamIns> _89815_p = *it;
			{
				_1ad4c7704_paramIns(_self_, _88631_buf, &(_89815_p));
				if ((((*((*(_88659_f))))._field_Params.len() - _8988_i) > 1LL)) {
					({
						auto except = _1a387ecd6_WriteStr(_88631_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:901:5"));
						(except.result);
					});
				};
			}
			_iter_next_1b232d9c9:;
			++it;
			_8988_i++;
			goto _iter_begin_1b232d9c9;
		}
		_iter_end_1b232d9c9:;
	};
	({
		auto except = _1a388008e_WriteByte(_88631_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:904:3"));
	});
}



inline void _1ad4c7dca_varInitExpr(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab8a7289_Var>* _90733_v, jule::Fn<void> _90748_init) {
	if ((*((*(_90733_v))))._field_Statically) {
		_1ad4c1247_write(_self_, jule::Str::lit("static ", 7));
	};
	_1ad4d5b85_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90733_v))))._field_TypeSym))._field_Type);
	_1ad4c1247_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90733_v))))._field_Reference) {
		_1ad4c1247_write(_self_, jule::Str::lit("*", 1));
	};
	static__1ad21110d_var(&((*_self_.alloc)._field_Buf), (*(_90733_v)));
	if ((_90748_init != nullptr)) {
		_1ad4c1247_write(_self_, jule::Str::lit(" = ", 3));
		_90748_init();
	};
	_1ad4c1247_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ad4c8183_var(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab8a7289_Var> _92524_v) {
	if (_1ab6a7dc0_IsIgnoreIdent((*(_92524_v))._field_Ident)) {
		return;;
	};
	if ((((*_92524_v.alloc)._field_Value != nullptr) && ((*(*(_92524_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92524_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92524_v.alloc)._field_Reference) {
				_1ad4c7dca_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1b2335d88, jule::Ptr<__jule_anon_1b2335d88_ctx>::make(__jule_anon_1b2335d88_ctx{._self_=_self_,._92524_v=_92524_v}).as<jule::Uintptr>(), __jule_anon_1b2335d88_ctx_handler));
			} else {
				_1ad4c7dca_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1b2337e78, jule::Ptr<__jule_anon_1b2337e78_ctx>::make(__jule_anon_1b2337e78_ctx{._self_=_self_,._92524_v=_92524_v}).as<jule::Uintptr>(), __jule_anon_1b2337e78_ctx_handler));
			};
			return;;
		};
		_1ad4c7dca_varInitExpr(_self_, &(_92524_v), nullptr);
		return;;
	};
	if ((*_92524_v.alloc)._field_Reference) {
		_1ad4c7dca_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1b233a684, jule::Ptr<__jule_anon_1b233a684_ctx>::make(__jule_anon_1b233a684_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b233a684_ctx_handler));
		return;;
	};
	if (_1ad4dcd13_shouldInitialized(&((*((*_92524_v.alloc)._field_TypeSym))._field_Type))) {
		_1ad4c7dca_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1b233b82d, jule::Ptr<__jule_anon_1b233b82d_ctx>::make(__jule_anon_1b233b82d_ctx{._self_=_self_,._92524_v=_92524_v}).as<jule::Uintptr>(), __jule_anon_1b233b82d_ctx_handler));
		return;;
	};
	_1ad4c7dca_varInitExpr(_self_, &(_92524_v), nullptr);
}



inline void _1ad4c84e6_anonFuncInsDecl(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel>* _95637_m, jule::Str _95664_ident) {
	_1ad4c625d_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95637_m))))._field_Func), false, _95664_ident);
	_1ad4c7a67_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95637_m))))._field_Func));
	({
		auto except = _1a388008e_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:959:3"));
	});
}



inline void _1ad4c8859_anonFuncIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab080435_AnonFnExprModel>* _96233_m, jule::Str _96260_ident) {
	_1ad4c625d_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_96233_m))))._field_Func), false, _96260_ident);
	_1ad4c7a67_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_96233_m))))._field_Func));
	_1ad4c1247_write(_self_, jule::Str::lit(" ", 1));
	_1ad1e508c_anonFuncScope((*_self_.alloc)._field_sc, (*(_96233_m)), _96260_ident);
	if (((*((*((*(_96233_m))))._field_Func))._field_Scope != nullptr)) {
		_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ad4c8bbc_funcIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab08c9a3_FnIns> _97228_f, jule::Str _97245_ident) {
	_1ad4c625d_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_97228_f), false, _97245_ident);
	_1ad4c7a67_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_97228_f));
	_1ad4c1247_write(_self_, jule::Str::lit(" ", 1));
	_1ad1e5345_funcScope((*_self_.alloc)._field_sc, _97228_f);
	if (((*(_97228_f))._field_Scope != nullptr)) {
		_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ad4c8e75_func(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _98226_f) {
	{
		auto expr = &((*((*(_98226_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2168968:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _98315_ins = *it;
			{
				_1ad4c8bbc_funcIns(_self_, _98315_ins, jule::Str());
			}
			_iter_next_1b2168968:;
			++it;
			goto _iter_begin_1b2168968;
		}
		_iter_end_1b2168968:;
	};
}



inline void _1ad4c92d8_funcTrait(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _98827_s, jule::Ptr<_1ab08c9a3_FnIns>* _98853_f) {
	(*((*(_98853_f))))._field_Scope=nullptr;
	_1a387dcd5_Builder _9917_nident = static__1a387e654_New(30LL);;
	({
		auto except = _1a387ecd6_WriteStr(&_9917_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:992:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_9917_nident, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98853_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:993:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_9917_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:994:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(&_9917_nident, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98827_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:995:3"));
		(except.result);
	});
	jule::Ptr<_1ab939816_Type> _9977_k = (*((*((*(_98853_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_98853_f))))._field_Params[0LL]))._field_Type=_1ad4bce9c_generalGCPtr;
	_1ad4c8bbc_funcIns(_self_, (*(_98853_f)), _1a3880666_Str(&_9917_nident));
	(*((*((*(_98853_f))))._field_Params[0LL]))._field_Type=_9977_k;
}



inline __jule_tuple_x_1ab08c9a3_FnIns__jule_tuple_bool _1ad4c9629_findTraitMetMap(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab0898e5_Fn>* _100337_m) {
	__jule_tuple_x_1ab08c9a3_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab08c9a3_FnIns> _10047_mins = (*((*(_100337_m))))._field_Instances[0LL];;
	{
		_1b1be0259_mapIterator it = _1b1bd72c8_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1b216e243:;
		__jule_tuple_px_1ab08c9a3_FnIns__jule_tuple_psuintptr __iterator_result = _1b1be0941_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1ab08c9a3_FnIns> _100512_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_100512_f))._field_Decl))._field_Public == (*((*(_100337_m))))._field_Public) && ((*(*(_100512_f))._field_Decl.alloc)._field_Ident == (*((*(_100337_m))))._field_Ident)) && _1ab08d60d_EqualFn(_100512_f, &(_10047_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100512_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b216e243:;
			goto _iter_begin_1b216e243;
		}
		_iter_end_1b216e243:;
	};
	__jule_func_result.__jule_result_arg0 = _10047_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1ad4c998c_traitWrapper(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab095109_Trait>* _101534_t, jule::Ptr<_1ab0898e5_Fn>* _101556_m) {
	_julec_label_1b2171971:;
	{
		auto expr = &((*((*(_101534_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2171b2a:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _101715_imp = *it;
			{
				jule::Ptr<_1ab08c9a3_FnIns> _10188_mepf;
				jule::Bool _101814_exist;
				({
					__jule_tuple_x_1ab08c9a3_FnIns__jule_tuple_bool __jule_assign_result = _1ad4c9629_findTraitMetMap(_self_, _101556_m);
					_10188_mepf = __jule_assign_result.__jule_result_arg0;
					_101814_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101814_exist) {
					jule::Slice<jule::Uintptr> _10219_vals = _1b1bd69ae_get((*_self_.alloc)._field_traitMetMap, _10188_mepf);;
					{
						auto expr = &(_10219_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2173b0a:;
						if (it != expr_end) {
							jule::Uintptr _102212_val = *it;
							{
								if ((_102212_val == static_cast<jule::Uintptr>(_101715_imp))) {
									goto _iter_next_1b2171b2a;
								};
							}
							_iter_next_1b2173b0a:;
							++it;
							goto _iter_begin_1b2173b0a;
						}
						_iter_end_1b2173b0a:;
					};
					(*_1b1bd6b13_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10188_mepf))=jule::append(_10219_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101715_imp); __jule_collection; }));
				} else {
					(*_1b1bd6b13_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10188_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101715_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_101715_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2174842:;
					if (it != expr_end) {
						jule::Ptr<_1a37a53d2_StructIns> _103216_ins = *it;
						{
							_1ad4c92d8_funcTrait(_self_, &(_103216_ins), &(_10188_mepf));
							;
							jule::Ptr<_1ab0898e5_Fn> _10369_sm = _1a37a647c_FindMethod(_103216_ins.ptr(), (*((*(_101556_m))))._field_Ident, false);;
							if (((_10369_sm == nullptr) || ((*(_10369_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1ad4c16ed_addIndent(_self_);
							_1ad4c1247_write(_self_, jule::Str::lit("{\n", 2));
							_1ad4c1ae9_indent(_self_);
							if (((*((*(_101556_m))))._field_Exceptional || (!(_1ab089d9b_IsVoid((*(_101556_m)).ptr()))))) {
								_1ad4c1247_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1ad20ea9b_func(&((*_self_.alloc)._field_Buf), &(_10369_sm));
							_1ad4c1247_write(_self_, jule::Str::lit("(", 1));
							_1ad4c1247_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1ad4d3e3b_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _103216_ins);
							_1ad4c1247_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10535_ptr = (!(_1ab088806_IsRef((*((*(_101556_m))))._field_Params[0LL].ptr())));;
							if (_10535_ptr) {
								_1ad4c1247_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101556_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1b217b85a:;
								if (it != expr_end) {
									jule::Ptr<_1ab087e21_Param> _105712_mp = *it;
									{
										_1ad4c1247_write(_self_, jule::Str::lit(", ", 2));
										static__1ad21045e_param(&((*_self_.alloc)._field_Buf), &(_105712_mp));
									}
									_iter_next_1b217b85a:;
									++it;
									goto _iter_begin_1b217b85a;
								}
								_iter_end_1b217b85a:;
							};
							_1ad4c1247_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1ad4c18eb_doneIndent(_self_);
						}
						_iter_next_1b2174842:;
						++it;
						goto _iter_begin_1b2174842;
					}
					_iter_end_1b2174842:;
				};
			}
			_iter_next_1b2171b2a:;
			++it;
			goto _iter_begin_1b2171b2a;
		}
		_iter_end_1b2171b2a:;
	};
}



inline void _1ad4c9b8a_traitWrappers(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2176536:;
		if (it != expr_end) {
			jule::Ptr<_1ad4bde8c_traitHash> _106815_hash = *it;
			{
				if (((*((*(_106815_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1b2176536;
				};
				{
					auto expr = &((*_106815_hash.alloc)._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b217de89:;
					if (it != expr_end) {
						jule::Ptr<_1ab0898e5_Fn> _107216_m = *it;
						{
							_1ad4c998c_traitWrapper(_self_, &((*_106815_hash.alloc)._field_traitDecl), &(_107216_m));
						}
						_iter_next_1b217de89:;
						++it;
						goto _iter_begin_1b217de89;
					}
					_iter_end_1b217de89:;
				};
			}
			_iter_next_1b2176536:;
			++it;
			goto _iter_begin_1b2176536;
		}
		_iter_end_1b2176536:;
	};
}



inline void _1ad4c9eed_traitDataMethods(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ad4bde8c_traitHash>* _107938_hash, jule::Ptr<_1a37a53d2_StructIns> _107956_s) {
	{
		auto expr = &((*((*(_107938_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2180001:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _108015_m = *it;
			{
				_1ad4c1ae9_indent(_self_);
				_1ad4c1247_write(_self_, jule::Str::lit(".", 1));
				static__1ad20ea9b_func(&((*_self_.alloc)._field_Buf), &(_108015_m));
				_1ad4c1247_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1ab08c9a3_FnIns> _10854_mepf;
				jule::Bool _108510_exist;
				({
					__jule_tuple_x_1ab08c9a3_FnIns__jule_tuple_bool __jule_assign_result = _1ad4c9629_findTraitMetMap(_self_, &(_108015_m));
					_10854_mepf = __jule_assign_result.__jule_result_arg0;
					_108510_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_108510_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1087:5"));;
				};
				_1ad4c1247_write(_self_, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10854_mepf)), 15LL));
				_1ad4c1247_write(_self_, jule::Str::lit("_", 1));
				_1ad4c1247_write(_self_, _1a941c609_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_107956_s)), 15LL));
				_1ad4c1247_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1b2180001:;
			++it;
			goto _iter_begin_1b2180001;
		}
		_iter_end_1b2180001:;
	};
}



inline void _1ad4ca41b_traitData(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ad4bde8c_traitHash>* _109731_hash, jule::I64 _109749_i, jule::Ptr<_1a37a53d2_StructIns>* _109762_s) {
	_1a387dcd5_Builder _10987_ident = static__1a387e654_New((*((*((*(_109731_hash))))._field_traitDecl))._field_Ident.len());;
	static__1ad210173_traitDecl(&(_10987_ident), (*((*(_109731_hash))))._field_traitDecl);
	_1ad4c1247_write(_self_, jule::Str::lit("static ", 7));
	_1ad4c1500_writeBytes(_self_, _1a3881117_Buf(&_10987_ident));
	_1ad4c1247_write(_self_, jule::Str::lit("MptrData ", 9));
	_1ad4c1500_writeBytes(_self_, _1a3881117_Buf(&_10987_ident));
	_1ad4c1247_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1ad4c1247_write(_self_, _1a941cc8b_Itoa(_109749_i));
	_1ad4c1247_write(_self_, jule::Str::lit(" {\n", 3));
	_1ad4c16ed_addIndent(_self_);
	_1ad4c1ae9_indent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1ad4c1247_write(_self_, _1a941cc8b_Itoa(_1ad4c25bc_pushDealloc(_self_, jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_109762_s)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)}))));
	_1ad4c1247_write(_self_, jule::Str::lit(",\n", 2));
	_1ad4c9eed_traitDataMethods(_self_, _109731_hash, (*(_109762_s)));
	_1ad4c18eb_doneIndent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1ad4ca619_traitDatas(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b218a01c:;
		if (it != expr_end) {
			jule::Ptr<_1ad4bde8c_traitHash> _111915_hash = *it;
			{
				jule::I64 _11208_i = 0LL;;
				{
					auto expr = &((*((*(_111915_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b218ae30:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> _112116_s = *it;
						{
							{
								auto expr = &((*(_112116_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b218b9be:;
								if (it != expr_end) {
									jule::Ptr<_1a37a53d2_StructIns> _112217_ins = *it;
									{
										_1ad4ca41b_traitData(_self_, &(_111915_hash), _11208_i, &(_112217_ins));
										(_11208_i)++;
									}
									_iter_next_1b218b9be:;
									++it;
									goto _iter_begin_1b218b9be;
								}
								_iter_end_1b218b9be:;
							};
						}
						_iter_next_1b218ae30:;
						++it;
						goto _iter_begin_1b218ae30;
					}
					_iter_end_1b218ae30:;
				};
			}
			_iter_next_1b218a01c:;
			++it;
			goto _iter_begin_1b218a01c;
		}
		_iter_end_1b218a01c:;
	};
}



inline void _1ad4ca817_globalDecls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b218a759:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _113115_v = *it;
			{
				_1ad4d5b85_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_113115_v))._field_TypeSym))._field_Type);
				_1ad4c1247_write(_self_, jule::Str::lit(" ", 1));
				static__1ad21110d_var(&((*_self_.alloc)._field_Buf), _113115_v);
				_1ad4c1247_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b218a759:;
			++it;
			goto _iter_begin_1b218a759;
		}
		_iter_end_1b218a759:;
	};
}



inline void _1ad4caa15_decls(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ad4c47de_structurePlainDecls(_self_);
	_1ad4c5a87_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1a3880aea_Len(&(*_self_.alloc)._field_Buf);
	_1ad4c5c85_structureMethodDecls(_self_);
	_1ad4c6dda_funcDecls(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad4c7391_traitDataTypes(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1a3880aea_Len(&(*_self_.alloc)._field_Buf);
	_1ad4c9b8a_traitWrappers(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad4ca619_traitDatas(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1a3880aea_Len(&(*_self_.alloc)._field_Buf);
	_1ad4ca817_globalDecls(_self_);
}



inline void _1ad4cacbd_structureMethods(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _115738_s) {
	{
		auto expr = &((*((*(_115738_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2193db1:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _115815_f = *it;
			{
				_1ad4c8e75_func(_self_, &(_115815_f));
				_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b2193db1:;
			++it;
			goto _iter_begin_1b2193db1;
		}
		_iter_end_1b2193db1:;
	};
}



inline void _1ad4cb076_structureIns(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a53d2_StructIns>* _116434_s) {
	;
	_1ad4c5328_structureOperators(_self_, _116434_s, false);
	_1ad4cacbd_structureMethods(_self_, _116434_s);
}



inline void _1ad4cb32e_structure(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1a37a2577_Struct>* _117031_s) {
	{
		auto expr = &((*((*(_117031_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b219638b:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _117115_ins = *it;
			{
				_1ad4cb076_structureIns(_self_, &(_117115_ins));
				_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b219638b:;
			++it;
			goto _iter_begin_1b219638b;
		}
		_iter_end_1b219638b:;
	};
}



inline void _1ad4cb52c_structures(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2196ac8:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _117815_s = *it;
			{
				if (((*(_117815_s))._field_Token != nullptr)) {
					_1ad4cb32e_structure(_self_, &(_117815_s));
					_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b2196ac8:;
			++it;
			goto _iter_begin_1b2196ac8;
		}
		_iter_end_1b2196ac8:;
	};
}



inline void _1ad4cb72a_funcs(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ab3d8958_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab868cea_Package>*>((void*)__jule_anon_1b2199702, jule::Ptr<__jule_anon_1b2199702_ctx>::make(__jule_anon_1b2199702_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2199702_ctx_handler));
}



inline void _1ad4cb9d3_pushInit(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab868cea_Package>* _120930_pkg) {
	_1ab3d8bcd_IterFiles(_120930_pkg, jule::__new_closure<void,jule::Ptr<_1ab090be8_SymTab>*>((void*)__jule_anon_1b219ac20, jule::Ptr<__jule_anon_1b219ac20_ctx>::make(__jule_anon_1b219ac20_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b219ac20_ctx_handler));
}



inline void _1ad4cbbd1_anonHashes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_julec_label_1b21a0560:;
	jule::Slice<jule::Ptr<_1ad4bda6e_anonHash>> _12267_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12267_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21a20de:;
		if (it != expr_end) {
			jule::Ptr<_1ad4bda6e_anonHash> _122815_h = *it;
			{
				_1ad4c8859_anonFuncIns(_self_, &((*(_122815_h))._field_expr), (*_122815_h.alloc)._field_ident);
			}
			_iter_next_1b21a20de:;
			++it;
			goto _iter_begin_1b21a20de;
		}
		_iter_end_1b21a20de:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1b21a0560;
	};
}



inline void _1ad4cbdce_initGlobals(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21a360c:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _123715_v = *it;
			{
				({
					auto except = _1a388008e_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1238:4"));
				});
				static__1ad21110d_var(&((*_self_.alloc)._field_Buf), _123715_v);
				_1ad4c1247_write(_self_, jule::Str::lit(" = ", 3));
				_1ad20706b_model((*_self_.alloc)._field_ec, (*((*((*(_123715_v))._field_Value))._field_Data))._field_Model);
				_1ad4c1247_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b21a360c:;
			++it;
			goto _iter_begin_1b21a360c;
		}
		_iter_end_1b21a360c:;
	};
}



inline void _1ad4cc0cc_initCaller(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ad4c1247_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ad4c16ed_addIndent(_self_);
	_1ab3d8958_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1ab868cea_Package>*>((void*)__jule_anon_1b21a70b1, jule::Ptr<__jule_anon_1b21a70b1_ctx>::make(__jule_anon_1b21a70b1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b21a70b1_ctx_handler));
	_1ad4c18eb_doneIndent(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ad4cc2ca_end(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ad4c1247_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad4cbdce_initGlobals(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1a87c132c_Test) {
		_1ad4c1247_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1ad20ea9b_func(&((*_self_.alloc)._field_Buf), &((*(_1ab3e1136_ProgramMeta))._field_EntryPoint));
		_1ad4c1247_write(_self_, jule::Str::lit("();", 3));
	};
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1ad4cc583_buildTraitHash(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, jule::Ptr<_1ab095109_Trait>* _128136_t) {
	jule::Ptr<_1ad4bde8c_traitHash> _12827_hash = jule::new_ptr<_1ad4bde8c_traitHash>(_1ad4bde8c_traitHash{._field_traitDecl=(*(_128136_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0898e5_Fn>>::alloc(0LL, (*((*(_128136_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab0898e5_Fn>(nullptr); __jule_collection; })});;
	_1ab3d8eb9_IterTraitMethods(_128136_t, jule::__new_closure<void,jule::Ptr<_1ab0898e5_Fn>*>((void*)__jule_anon_1b21ac2d6, jule::Ptr<__jule_anon_1b21ac2d6_ctx>::make(__jule_anon_1b21ac2d6_ctx{._12827_hash=_12827_hash}).as<jule::Uintptr>(), __jule_anon_1b21ac2d6_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad4bde8c_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12827_hash; __jule_collection; }));
}



inline void _1ad4cc781_buildTraitHashes(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ab3d8958_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab868cea_Package>*>((void*)__jule_anon_1b21ae8b0, jule::Ptr<__jule_anon_1b21ae8b0_ctx>::make(__jule_anon_1b21ae8b0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b21ae8b0_ctx_handler));
}



inline void _1ad4ccae4_insertBuf(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_, _1a387dcd5_Builder* _131131_buf, jule::I64 _131154_pos) {
	if ((_1a3880aea_Len(_131131_buf) > 0LL)) {
		jule::Slice<jule::U8> _13138_ibuf = _1a3881117_Buf(&(*(_self_))._field_Buf);;
		_13138_ibuf=_1b21b30de_Insert(_13138_ibuf, _131154_pos, _1a3881117_Buf(_131131_buf));
		{
			_1a38813c0_SetBuf(&(*_self_.alloc)._field_Buf, _13138_ibuf);
		};
	};
}



inline void _1ad4ccce2_implementRC(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1ad4c8bbc_funcIns(_self_, (*(_1ab9c0bdd_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAddAtomic", 12)))))._field_Instances[0LL], jule::Str::lit("__jule_RCAdd", 12));
		_1ad4c8bbc_funcIns(_self_, (*(_1ab9c0bdd_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoadAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCLoad", 13));
		_1ad4c8bbc_funcIns(_self_, (*(_1ab9c0bdd_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDropAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1ad4c8bbc_funcIns(_self_, (*(_1ab9c0bdd_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAdd", 6)))))._field_Instances[0LL], jule::Str());
		_1ad4c8bbc_funcIns(_self_, (*(_1ab9c0bdd_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoad", 7)))))._field_Instances[0LL], jule::Str());
		_1ad4c8bbc_funcIns(_self_, (*(_1ab9c0bdd_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDrop", 7)))))._field_Instances[0LL], jule::Str());
	};
}



inline void _1ad4ccee0_serializeHead(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ad4cc781_buildTraitHashes(_self_);
	_1ad4c4338_prepareStructures(_self_);
	_1ad4c3ac9_head(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
	_1ad4caa15_decls(_self_);
	_1ad4ccae4_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1a3880aea_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1a3880aea_Len(&(*_self_.alloc)._field_resultDecls);
	_1ad4c1247_write(_self_, jule::Str::lit("\n", 1));
	_1ad4cb52c_structures(_self_);
	_1ad4cb72a_funcs(_self_);
	_1ad4cc0cc_initCaller(_self_);
	_1ad4c1247_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad4cbbd1_anonHashes(_self_);
	_1ad4ccce2_implementRC(_self_);
	_1ad4ccae4_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1a3880aea_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1a3880aea_Len(&(*_self_.alloc)._field_deallocObj);
	_1ad4ccae4_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a3880aea_Len(&(*_self_.alloc)._field_anyObj);
	_1ad4ccae4_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a3880aea_Len(&(*_self_.alloc)._field_anonObj);
	_1ad4ccae4_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a3880aea_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1ad4cd1dd_Serialize(jule::Ptr<_1ad4c0a2c_ObjectCoder> _self_) {
	_1ad4ccee0_serializeHead(_self_);
	_1ad4cc2ca_end(_self_);
}








inline jule::Bool _1ad4ced5a_customType_eq(_1ad4ced5a_customType *_self_, _1ad4ced5a_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ad4d0245_Str(_1ad4ced5a_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ad4d0586_Equal(jule::Ptr<_1ad4ced5a_customType> _self_, jule::Ptr<_1ab939816_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1ad4d0982_typeCoder_eq(_1ad4d0982_typeCoder *_self_, _1ad4d0982_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1ad4d0982_typeCoder> static__1ad4d0ed2_new(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1ad4d0982_typeCoder> _517_tc = jule::new_ptr<_1ad4d0982_typeCoder>(_1ad4d0982_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1ad4d856c_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1ad4d8a78_new(&(_517_tc));
	return _517_tc;;
}



inline void _1ad4d1345_toType(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1ab10ee43_RealKindOf(_5754_id);
	};
	({
		auto except = _1a387ecd6_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1a388008e_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1a388008e_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1a387ecd6_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1ad4d16a8_prim(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _7125_buf, jule::Ptr<_1ab94292e_Prim> _7148_p) {
	_1ad4d1345_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1ad4d1a1b_tuple(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _7626_buf, jule::Ptr<_1ab947a22_Tuple> _7653_t) {
	({
		auto except = _1a387ecd6_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*_7653_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2344193:;
		if (it != expr_end) {
			jule::I64 _788_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> _7815_tk = *it;
			{
				_1ad4d5b85_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1a388008e_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1b2344193:;
			++it;
			_788_i++;
			goto _iter_begin_1b2344193;
		}
		_iter_end_1b2344193:;
	};
	({
		auto except = _1a388008e_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1ad4d1d7e_asSptr(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1a387ecd6_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1a387e995_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1ad4d21e2_sptr(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _9525_buf, jule::Ptr<_1ab94645a_Sptr> _9552_sptr) {
	({
		auto except = _1a387ecd6_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1ad4d5b85_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1a388008e_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1ad4d2555_ptr(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _10224_buf, jule::Ptr<_1ab949c22_Ptr> _10251_p) {
	;
	if (_1ab94a78e_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1a387ecd6_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1ad4d5b85_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1a387ecd6_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1ad4d28b8_enumDecl(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _11329_buf, jule::Ptr<_1ab0977b0_Enum> _11356_e) {
	_1ad4d5b85_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1ad4d2c2b_typeEnumDecl(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _11833_buf, jule::Ptr<_1ab098eba_TypeEnum> _11860_e) {
	({
		auto except = _1a387ecd6_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1ad4d308e_asSlice(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _12228_buf, jule::Ptr<_1ab939816_Type> _12255_elem) {
	({
		auto except = _1a387ecd6_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1ad4d5b85_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1a388008e_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1ad4d3402_slice(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _12926_buf, jule::Ptr<_1ab946e2d_Slc> _12953_s) {
	_1ad4d308e_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1ad4d3765_mapType(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _13428_buf, jule::Ptr<_1ab9485c2_Map> _13455_m) {
	jule::Ptr<_1a37a2577_Struct> _1357_s = _1ab9c12d7_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a37a53d2_StructIns> _1367_ins = _1ab3e02bc_FindStructGenericInstance(&(_1357_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1a387ecd6_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:137:3"));
		(except.result);
	});
	static__1ad210a36_structureIns(_13428_buf, &(_1367_ins));
	({
		auto except = _1a387ecd6_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:139:3"));
		(except.result);
	});
}



inline void _1ad4d3e3b_structureIns(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _14833_buf, jule::Ptr<_1a37a53d2_StructIns> _14860_s) {
	if ((!((*((*(_14860_s))._field_Decl))._field_Binded))) {
		static__1ad210a36_structureIns(_14833_buf, &(_14860_s));
		return;;
	};
	jule::Ptr<_1ab6bec94_Directive> _1533_d = _1ab3dd30e_FindDirective(&((*(*(_14860_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1533_d != nullptr)) {
		({
			auto except = _1a387e995_Write(_14833_buf, _1ad4cd573_concatAllParts((*_1533_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:155:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_14833_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:156:4"));
			(except.result);
		});
	};
	static__1ad210a36_structureIns(_14833_buf, &(_14860_s));
	if (((*_14860_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1a388008e_WriteByte(_14833_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:160:4"));
		});
		{
			auto expr = &((*_14860_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2352767:;
			if (it != expr_end) {
				jule::I64 _1619_i = it - expr->begin();
				jule::Ptr<_1ab937e30_InsGeneric> _16116_g = *it;
				{
					_1ad4d5b85_kind(_self_, _14833_buf, (*(_16116_g))._field_Type);
					if ((((*_14860_s.alloc)._field_Generics.len() - _1619_i) > 1LL)) {
						({
							auto except = _1a388008e_WriteByte(_14833_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:164:6"));
						});
					};
				}
				_iter_next_1b2352767:;
				++it;
				_1619_i++;
				goto _iter_begin_1b2352767;
			}
			_iter_end_1b2352767:;
		};
		({
			auto except = _1a388008e_WriteByte(_14833_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:167:4"));
		});
	};
}



inline void _1ad4d429e_array(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _17226_buf, jule::Ptr<_1ab94924e_Arr> _17253_a) {
	({
		auto except = _1a387ecd6_WriteStr(_17226_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:173:3"));
		(except.result);
	});
	_1ad4d5b85_kind(_self_, _17226_buf, (*(_17253_a))._field_Elem);
	({
		auto except = _1a388008e_WriteByte(_17226_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:175:3"));
	});
	({
		auto except = _1a387ecd6_WriteStr(_17226_buf, _1a941cc8b_Itoa((*_17253_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_17226_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:177:3"));
	});
}



inline void _1ad4d4975_paramIns(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _19529_buf, jule::Ptr<_1ab08b84d_ParamIns>* _19557_p) {
	if ((*((*((*(_19557_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1a387ecd6_WriteStr(_19529_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:197:4"));
			(except.result);
		});
		_1ad4d5b85_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Type);
		({
			auto except = _1a388008e_WriteByte(_19529_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:199:4"));
		});
	} else {
		_1ad4d5b85_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Type);
	};
	if ((*((*((*(_19557_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1a388008e_WriteByte(_19529_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:204:4"));
		});
	};
}



inline void _1ad4d514b_funcInsResult(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _22734_s, jule::Ptr<_1ab08c9a3_FnIns>* _22760_f) {
	if (_1ab089d9b_IsVoid((*((*(_22760_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1a387ecd6_WriteStr(_22734_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:230:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a387ecd6_WriteStr(_22734_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:232:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
		({
			auto except = _1a387ecd6_WriteStr(_22734_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:237:4"));
			(except.result);
		});
		_1ad4dab35_codeMut1((*(_self_))._field_rc.ptr(), _22734_s, &((*((*(_22760_f))))._field_Result));
		({
			auto except = _1a388008e_WriteByte(_22734_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:239:4"));
		});
		return;;
	};
	_1ad4dab35_codeMut1((*(_self_))._field_rc, _22734_s, &((*((*(_22760_f))))._field_Result));
}



inline void _1ad4d54ae_anonFunc(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _24529_buf, jule::Ptr<_1ab08c9a3_FnIns> _24556_f) {
	if ((((*(_24556_f))._field_Result != nullptr) && (_1ab93dce3_Tup((*(_24556_f))._field_Result) != nullptr))) {
		_1ad4c3007_pushResultIns((*(_self_))._field_oc, &(_24556_f));
	};
	_1ad4d514b_funcInsResult(_self_, _24529_buf, &(_24556_f));
	if (((*_24556_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1a388008e_WriteByte(_24529_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:253:3"));
	});
	{
		auto expr = &((*_24556_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b236424b:;
		if (it != expr_end) {
			jule::I64 _2548_i = it - expr->begin();
			jule::Ptr<_1ab08b84d_ParamIns> _25415_param = *it;
			{
				if (_1ab088570_IsSelf((*(_25415_param))._field_Decl.ptr())) {
					goto _iter_next_1b236424b;
				};
				_1ad4d4975_paramIns(_self_, _24529_buf, &(_25415_param));
				if ((((*_24556_f.alloc)._field_Params.len() - _2548_i) > 1LL)) {
					({
						auto except = _1a388008e_WriteByte(_24529_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:260:5"));
					});
				};
			}
			_iter_next_1b236424b:;
			++it;
			_2548_i++;
			goto _iter_begin_1b236424b;
		}
		_iter_end_1b236424b:;
	};
}



inline void _1ad4d5822_func(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _26625_buf, jule::Ptr<_1ab08c9a3_FnIns> _26652_f) {
	({
		auto except = _1a387ecd6_WriteStr(_26625_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:267:3"));
		(except.result);
	});
	_1ad4d54ae_anonFunc(_self_, _26625_buf, _26652_f);
	({
		auto except = _1a388008e_WriteByte(_26625_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:269:3"));
	});
}



inline void _1ad4d5b85_kind(_1ad4d0982_typeCoder* _self_, _1a387dcd5_Builder* _27325_buf, jule::Ptr<_1ab939816_Type> _27352_k) {
	{
		
		if ((_1ab93d540_Struct(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b236778d:;
			{
				_1ad4d3e3b_structureIns(_self_, _27325_buf, _1ab93d540_Struct(_27352_k));
				return;;
			}
		}
		else if (_1ab93a6b3_Binded(_27352_k.ptr())) {
			_case_begin_1b2367837:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_27325_buf, (*_27352_k.alloc)._field_BindIdent);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:282:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1ab93bebc_Prim(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b236789d:;
			{
				_1ad4d16a8_prim(_self_, _27325_buf, _1ab93bebc_Prim(_27352_k));
				return;;
			}
		}
		else if ((_1ab93dce3_Tup(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367914:;
			{
				_1ad4d1a1b_tuple(_self_, _27325_buf, _1ab93dce3_Tup(_27352_k));
				return;;
			}
		}
		else if ((_1ab93c253_Sptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b236797a:;
			{
				_1ad4d21e2_sptr(_self_, _27325_buf, _1ab93c253_Sptr(_27352_k));
				return;;
			}
		}
		else if ((_1ab93c4d9_Ptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367a02:;
			{
				_1ad4d2555_ptr(_self_, _27325_buf, _1ab93c4d9_Ptr(_27352_k));
				return;;
			}
		}
		else if ((_1ab93c770_Enum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367a79:;
			{
				_1ad4d28b8_enumDecl(_self_, _27325_buf, _1ab93c770_Enum(_27352_k));
				return;;
			}
		}
		else if ((_1ab93ca06_TypeEnum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367b01:;
			{
				_1ad4d2c2b_typeEnumDecl(_self_, _27325_buf, _1ab93ca06_TypeEnum(_27352_k));
				return;;
			}
		}
		else if ((_1ab93d023_Slc(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367b78:;
			{
				_1ad4d3402_slice(_self_, _27325_buf, _1ab93d023_Slc(_27352_k));
				return;;
			}
		}
		else if ((_1ab93da5c_Map(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367c00:;
			{
				_1ad4d3765_mapType(_self_, _27325_buf, _1ab93da5c_Map(_27352_k));
				return;;
			}
		}
		else if ((_1ab93d7c6_Trait(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367c77:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_27325_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:309:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1ab93cc8c_Arr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367cee:;
			{
				_1ad4d429e_array(_self_, _27325_buf, _1ab93cc8c_Arr(_27352_k));
				return;;
			}
		}
		else if ((_1ab93d2a9_Fn(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b2367d76:;
			{
				_1ad4d5822_func(_self_, _27325_buf, _1ab93d2a9_Fn(_27352_k));
				return;;
			}
		}
		_match_end_1b23675a1:;
	};
	{
		auto &_match_expr{ (*(_27352_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data29)) {
			_case_begin_1b2367e0e:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_27325_buf, (*((*(_27352_k))._field_Kind.cast_ptr<_1ad4ced5a_customType>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:320:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1b23715ee:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_27325_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:322:4"));
					(except.result);
				});
			}
		}
		_match_end_1b2371588:;
	};
}








inline jule::Bool _1ad4d856c_resultCoder_eq(_1ad4d856c_resultCoder *_self_, _1ad4d856c_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1ad4d856c_resultCoder> static__1ad4d8a78_new(jule::Ptr<_1ad4d0982_typeCoder>* _34121_tc) {
	return jule::new_ptr<_1ad4d856c_resultCoder>(_1ad4d856c_resultCoder{._field_tc=(*(_34121_tc))});;
}



inline void _1ad4d8ddb_ptr(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _34524_s, jule::Ptr<_1ab949c22_Ptr> _34549_p) {
	({
		auto except = _1a387ecd6_WriteStr(_34524_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:346:3"));
		(except.result);
	});
	_1ad4da7c2_codeMut(_self_, _34524_s, &((*(_34549_p))._field_Elem));
}



inline void _1ad4d924e_sptr(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _35025_s, jule::Ptr<_1ab94645a_Sptr> _35050_p) {
	({
		auto except = _1a387ecd6_WriteStr(_35025_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:351:3"));
		(except.result);
	});
	_1ad4da7c2_codeMut(_self_, _35025_s, &((*(_35050_p))._field_Elem));
}



inline void _1ad4d95b2_mapType(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _35528_s, jule::Ptr<_1ab9485c2_Map> _35553_p) {
	({
		auto except = _1a387ecd6_WriteStr(_35528_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:356:3"));
		(except.result);
	});
	_1ad4da7c2_codeMut(_self_, _35528_s, &((*(_35553_p))._field_Key));
	_1ad4da7c2_codeMut(_self_, _35528_s, &((*_35553_p.alloc)._field_Val));
}



inline void _1ad4d9925_slice(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _36126_s, jule::Ptr<_1ab946e2d_Slc> _36151_slc) {
	({
		auto except = _1a387ecd6_WriteStr(_36126_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:362:3"));
		(except.result);
	});
	_1ad4da7c2_codeMut(_self_, _36126_s, &((*(_36151_slc))._field_Elem));
}



inline void _1ad4d9c88_arr(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _36624_s, jule::Ptr<_1ab94924e_Arr> _36649_arr) {
	({
		auto except = _1a387ecd6_WriteStr(_36624_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:367:3"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_36624_s, _1a941c9c2_FmtInt(static_cast<jule::I64>((*(_36649_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:368:3"));
		(except.result);
	});
	_1ad4da7c2_codeMut(_self_, _36624_s, &((*_36649_arr.alloc)._field_Elem));
}



inline void _1ad4da0eb_func(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _37225_s, jule::Ptr<_1ab08c9a3_FnIns> _37250_f) {
	({
		auto except = _1a387ecd6_WriteStr(_37225_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:373:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37250_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2378cbb:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> _37415_p = *it;
			{
				if ((*((*(_37415_p))._field_Decl))._field_Reference) {
					({
						auto except = _1a387ecd6_WriteStr(_37225_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:376:5"));
						(except.result);
					});
				};
				_1ad4da7c2_codeMut(_self_, _37225_s, &((*_37415_p.alloc)._field_Type));
			}
			_iter_next_1b2378cbb:;
			++it;
			goto _iter_begin_1b2378cbb;
		}
		_iter_end_1b2378cbb:;
	};
	if (((*_37250_f.alloc)._field_Result != nullptr)) {
		_1ad4da7c2_codeMut(_self_, _37225_s, &((*_37250_f.alloc)._field_Result));
	};
}



inline void _1ad4da45e_tup(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _38524_s, jule::Ptr<_1ab947a22_Tuple> _38549_tup) {
	{
		auto expr = &((*(_38549_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b237b241:;
		if (it != expr_end) {
			jule::Ptr<_1ab939816_Type> _38615_t = *it;
			{
				({
					auto except = _1a387ecd6_WriteStr(_38524_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:387:4"));
					(except.result);
				});
				_1ad4da7c2_codeMut(_self_, _38524_s, &(_38615_t));
			}
			_iter_next_1b237b241:;
			++it;
			goto _iter_begin_1b237b241;
		}
		_iter_end_1b237b241:;
	};
}



inline void _1ad4da7c2_codeMut(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _39228_s, jule::Ptr<_1ab939816_Type>* _39254_t) {
	if (_1ab93a6b3_Binded((*(_39254_t)).ptr())) {
		({
			auto except = _1a387ecd6_WriteStr(_39228_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:394:4"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_39228_s, (*((*(_39254_t))))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:395:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39254_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data28)) {
			_case_begin_1b237c8d5:;
			{
				_1ad4d8ddb_ptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab949c22_Ptr>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)) {
			_case_begin_1b237d8b4:;
			{
				_1ad4d924e_sptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab94645a_Sptr>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data26)) {
			_case_begin_1b237d540:;
			{
				_1ad4d95b2_mapType(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab9485c2_Map>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data24)) {
			_case_begin_1b237d5a6:;
			{
				_1ad4d9925_slice(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab946e2d_Slc>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data27)) {
			_case_begin_1b237d61c:;
			{
				_1ad4d9c88_arr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab94924e_Arr>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)) {
			_case_begin_1b237d683:;
			{
				_1ad4da0eb_func(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab08c9a3_FnIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data3)) {
			_case_begin_1b237db06:;
			{
				jule::Ptr<_1ab0977b0_Enum> _4124_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab0977b0_Enum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data3);;
				static__1ad20e35e_toOut(_39228_s, (*(_4124_te))._field_Ident, static_cast<jule::Uintptr>(_4124_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data4)) {
			_case_begin_1b237db6c:;
			{
				jule::Ptr<_1ab098eba_TypeEnum> _4154_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab098eba_TypeEnum>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data4);;
				static__1ad20e35e_toOut(_39228_s, (*(_4154_te))._field_Ident, static_cast<jule::Uintptr>(_4154_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)) {
			_case_begin_1b237dbd3:;
			{
				jule::Ptr<_1a37a53d2_StructIns> _4188_si = (*((*(_39254_t))))._field_Kind.cast_ptr<_1a37a53d2_StructIns>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data0);;
				static__1ad210a36_structureIns(_39228_s, &(_4188_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data2)) {
			_case_begin_1b237dc49:;
			{
				jule::Ptr<_1ab095109_Trait> _4218_trt = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab095109_Trait>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data2);;
				static__1ad210173_traitDecl(_39228_s, _4218_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)) {
			_case_begin_1b237dcc1:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_39228_s, (*((*((*(_39254_t))))._field_Kind.cast_ptr<_1ab94292e_Prim>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:424:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab939360_Kind_mptr_data25)) {
			_case_begin_1b237dd48:;
			{
				_1ad4da45e_tup(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ab947a22_Tuple>((jule::Trait::Type*)&_1ab939360_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1b237d4c9:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:428:4"));;
			}
		}
		_match_end_1b237d463:;
	};
}



inline void _1ad4dab35_codeMut1(_1ad4d856c_resultCoder* _self_, _1a387dcd5_Builder* _43229_s, jule::Ptr<_1ab939816_Type>* _43255_t) {
	jule::Ptr<_1ab947a22_Tuple> _4337_tup = _1ab93dce3_Tup((*(_43255_t)).ptr());;
	if ((_4337_tup != nullptr)) {
		_1ad4da45e_tup(_self_, _43229_s, _4337_tup);
	} else {
		_1ad4d5b85_kind((*(_self_))._field_tc.ptr(), _43229_s, (*(_43255_t)));
	};
}



inline jule::Slice<jule::U8> _1ad4dae43_code(_1ad4d856c_resultCoder* _self_, jule::Ptr<_1ab939816_Type>* _44125_t) {
	_1a387dcd5_Builder _4427_s = static__1a387e654_New(20LL);;
	_1ad4da7c2_codeMut(_self_, &(_4427_s), _44125_t);
	return _1a3881117_Buf(&_4427_s);;
}








inline jule::Bool _1b2389ded_Flag_eq(_1b2389ded_Flag *_self_, _1b2389ded_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b238a1d9_Name(_1b2389ded_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b238a32c_What(_1b2389ded_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b238a470_Reset(_1b2389ded_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b238a5b3_Short(_1b2389ded_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b238d781_Flag_eq(_1b238d781_Flag *_self_, _1b238d781_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b238d40c_Name(_1b238d781_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b238da6c_What(_1b238d781_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b238dbb0_Reset(_1b238d781_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b238dd03_Short(_1b238d781_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b2391e8d_Flag_eq(_1b2391e8d_Flag *_self_, _1b2391e8d_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b2391b19_Name(_1b2391e8d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b2392279_What(_1b2391e8d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b23923bc_Reset(_1b2391e8d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b2392510_Short(_1b2391e8d_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b23956de_Flag_eq(_1b23956de_Flag *_self_, _1b23956de_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b239536a_Name(_1b23956de_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b23959ca_What(_1b23956de_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b2395b1d_Reset(_1b23956de_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b2395c61_Short(_1b23956de_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b2398deb_Flag_eq(_1b2398deb_Flag *_self_, _1b2398deb_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b2398a77_Name(_1b2398deb_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b23991d7_What(_1b2398deb_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b239932a_Reset(_1b2398deb_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b239946d_Short(_1b2398deb_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1ad54d725_FlagSet> static__1ad54da44_New(void) {
	return jule::new_ptr<_1ad54d725_FlagSet>(_1ad54d725_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1ad54deea_FindFlag(_1ad54d725_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23a3c6e:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1ad54bb52_CommonFlagMptrData*)_7215_flag.safe_type())->_1ad51a01b_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1b23a3c6e:;
			++it;
			goto _iter_begin_1b23a3c6e;
		}
		_iter_end_1b23a3c6e:;
	};
	return nullptr;;
}



inline jule::Trait _1ad54e33b_FindFlagShort(_1ad54d725_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23a4489:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1ad54bb52_CommonFlagMptrData*)_8215_flag.safe_type())->_1ad51a15e_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1b23a4489:;
			++it;
			goto _iter_begin_1b23a4489;
		}
		_iter_end_1b23a4489:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ad54e913_Parse(_1ad54d725_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1ad5511d9_argParser _1167_ap = _1ad5511d9_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1ad552718_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1b2398deb_Flag> _1b242ab4d_addFlagCommon(_1ad54d725_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1ad54deea_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1ad54e33b_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1b2398deb_Flag> _1407_flag = jule::new_ptr<_1b2398deb_Flag>(_1b2398deb_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1b23956de_Flag> _1b2434c23_addFlagCommon(_1ad54d725_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1ad54deea_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1ad54e33b_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1b23956de_Flag> _1407_flag = jule::new_ptr<_1b23956de_Flag>(_1b23956de_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1b2428420_AddVar(_1ad54d725_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1b2398deb_Flag> _1717_flag = _1b242ab4d_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1b2432539_AddVar(_1ad54d725_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1b23956de_Flag> _1717_flag = _1b2434c23_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1b23abbbc_parseInteger(_1ad5511d9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1b23aec25:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a87a8b1c_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b23ae96c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a87a8b1c_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b23ae32e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a87a8b1c_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b23ae395:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1b23ae40b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b23ae2b8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b23ae1a8:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b23b4796_parseInteger(_1ad5511d9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1b23bc6e4:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a87a8b1c_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b23bc43b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a87a8b1c_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b23bbced:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a87a8b1c_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b23bbd64:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1b23bbdca:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b23bbc87:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b23bbb77:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ad551a36_getData(_1ad5511d9_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ad551cab_processFlag(_1ad5511d9_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data3)) {
			_case_begin_1b23a8d73:;
			{
				jule::Ptr<_1b23956de_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1b23956de_Flag>((jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1b23a8d0c:;
	};
	jule::Str _2203_data = _1ad551a36_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad54bb52_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ad51a01b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data0)) {
			_case_begin_1b23aac76:;
			{
				jule::Ptr<_1b2389ded_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1b2389ded_Flag>((jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b23abbbc_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1b23b06c6, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad54bb52_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ad51a01b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data1)) {
			_case_begin_1b23aa6d2:;
			{
				jule::Ptr<_1b238d781_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1b238d781_Flag>((jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b23b4796_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1b23bd195, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad54bb52_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ad51a01b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data2)) {
			_case_begin_1b23aacdc:;
			{
				jule::Ptr<_1b2391e8d_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1b2391e8d_Flag>((jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1a9412d4c_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad54bb52_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ad51a01b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data4)) {
			_case_begin_1b23aad53:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1b2398deb_Flag>((jule::Trait::Type*)&_1ad54bb52_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1b23aa517:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad552064_singleDash(_1ad5511d9_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1b23c3a19:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1ad54e33b_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type5)};
				};
				({
					auto except = _1ad551cab_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1b23c3a19:;
			it += len;
			goto _iter_begin_1b23c3a19;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad55231c_doubleDash(_1ad5511d9_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1ad54deea_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1ad551cab_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad55251a_tryArg(_1ad5511d9_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1ad55231c_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1ad552064_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad552718_parse(_1ad5511d9_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ad55251a_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1b23c8777:;
	}
	_iter_end_1b23c8777:;;
	return jule::VoidExceptional{};
}








inline jule::Bool _1a68ca14c_Dir_eq(_1a68ca14c_Dir *_self_, _1a68ca14c_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1a696ebc5_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1a68ca14c_Dir>> static__1a87b8038_Read(jule::Str _1517_path) {
	jule::Slice<_1a68ca14c_Dir> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _1a41aec53_StrToBytes(_1517_path);;
	DIR* _177_dir = _1a41c02d5_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<_1a68ca14c_Dir>>{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _1a41c04b1_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1ae58ed5e;
			};
			jule::Str _264_name = _1a41ae9bc_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			_1a696ebc5_Stat _278_stat = ({
				auto except = static__1a68cc193_Of(_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _264_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1a68ca14c_Dir>>{.error=except.error};
				} _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};});
			});;
			{ jule::Slice<_1a68ca14c_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_1a68ca14c_Dir{._field_Name=_264_name, ._field_Stat=_278_stat}); };
		}
	_iter_next_1ae58ed5e:;
	}
	_iter_end_1ae58ed5e:;;
	_1a41c0758_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<_1a68ca14c_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1a87b8269_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _1a41aec53_StrToBytes(_4019_path);;
	if ((_1a41c1160_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1a87b849a_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _1a41aec53_StrToBytes(_5319_path);;
	if ((_1a41c1429_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a698446a_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}











inline __jule_tuple_x_1ab3d5ec7_IR__jule_tuple_s_1a388d1ac_Log static__1ab3d64a0_Build(jule::Str _3018_path, jule::I64 _3029_flags) {
	__jule_tuple_x_1ab3d5ec7_IR__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	jule::Ptr<_1ab3d3447_Importer> _317_importer = static__1ab3d3876_New(_1ab3d7e52_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> _337_files;
	jule::Slice<_1a388d1ac_Log> _3318_logs;
	({
		__jule_tuple_sx_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab3d4d61_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab6bd9b8_AST> _457_firstFile = _337_files[0LL];;
	_1ab3d820a_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1ab868cea_Package> _487_pkg;
	({
		__jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab95b5e6_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1ab863575_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab3d5ec7_IR> _537_ir = jule::new_ptr<_1ab3d5ec7_IR>(_1ab3d5ec7_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1ab866578_ImportInfo>(nullptr), ._field_Used=_1ab3d3b0c_AllPackages(_317_importer), ._field_Ordered=_1ab3e29ea_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1a37a2577_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1ab3d7c43_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab3d6989_appendStructs(_1ab3d5ec7_IR* _self_, jule::Ptr<_1ab868cea_Package>* _6830_p, jule::Slice<jule::Ptr<_1a37a2577_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc2b6c9:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc2c136:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a37a2577_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1abc2c136:;
						++it;
						goto _iter_begin_1abc2c136;
					}
					_iter_end_1abc2c136:;
				};
			}
			_iter_next_1abc2b6c9:;
			++it;
			goto _iter_begin_1abc2b6c9;
		}
		_iter_end_1abc2b6c9:;
	};
}



inline jule::Slice<jule::Ptr<_1a37a2577_Struct>> _1ab3d6c20_GetAllStructures(_1ab3d5ec7_IR* _self_) {
	jule::Slice<jule::Ptr<_1a37a2577_Struct>> _8111_buffer = nullptr;;
	_1ab3d6989_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc2d2e1:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1ab3d6989_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1abc2d2e1:;
			++it;
			goto _iter_begin_1abc2d2e1;
		}
		_iter_end_1abc2d2e1:;
	};
	return _8111_buffer;;
}



inline void _1ab3d7083_appendGlobals(_1ab3d5ec7_IR* _self_, jule::Ptr<_1ab868cea_Package>* _9130_p, jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc2e974:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc303d1:;
					if (it != expr_end) {
						jule::Ptr<_1ab8a7289_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1abc303d1:;
						++it;
						goto _iter_begin_1abc303d1;
					}
					_iter_end_1abc303d1:;
				};
			}
			_iter_next_1abc2e974:;
			++it;
			goto _iter_begin_1abc2e974;
		}
		_iter_end_1abc2e974:;
	};
}



inline jule::Slice<jule::Ptr<_1ab8a7289_Var>> _1ab3d7319_GetAllGlobals(_1ab3d5ec7_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _10411_buffer = nullptr;;
	_1ab3d7083_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc31d0b:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1ab3d7083_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1abc31d0b:;
			++it;
			goto _iter_begin_1abc31d0b;
		}
		_iter_end_1abc31d0b:;
	};
	return _10411_buffer;;
}



inline void _1ab3d7517_Order(_1ab3d5ec7_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1ab3d7319_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1ab3d6c20_GetAllStructures(_self_);
	_1abc33912_order((*(_self_))._field_Ordered._field_Globals);
	_1abc344e5_order((*(_self_))._field_Ordered._field_Structs);
}







inline jule::Ptr<_1a68cac74_Cmd> static__1a68cb1c5_New(jule::Str _3516_path) {
	return jule::new_ptr<_1a68cac74_Cmd>(_1a68cac74_Cmd{._field_attrs=_1a696ca5d_cmdAttrs{._field_pid=-1LL}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1a68cb3c3_Spawn(_1a68cac74_Cmd* _self_) {
	return _1a696d80b_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1a68cb857_Wait(_1a68cac74_Cmd* _self_) {
	return _1a696dc90_wait(_self_);
}



inline jule::VoidExceptional _1a696d80b_spawn(_1a68cac74_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_unix.jule:84:4"));;
	};
	jule::Str _863_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _877_pipe;;
	if ((pipe((&(_877_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_1a41be1b3_Fcntl(static_cast<jule::I64>(_877_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_877_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1a41c7155_Close(static_cast<jule::I64>(_877_pipe[0LL]));
		_1a41c7155_Close(static_cast<jule::I64>(_877_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ae59ec2b:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ae5a0c60:;
			{
				_1a41c7155_Close(static_cast<jule::I64>(_877_pipe[0LL]));
				jule::Slice<jule::Str> _1028_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1028_args[0LL]=_863_path;
				(_1028_args).append((*(_self_))._field_Args);;
				({
					auto except = _1a696d575_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1a696d344_execvp(&(_863_path), &(_1028_args));
				jule::Str _1074_code = _1a692bea1_Itoa(_1a3a989b1_GetLastErrno());;
				{
					_1a41c750c_Write(static_cast<jule::I64>(_877_pipe[1LL]), (&(_1074_code[0LL])), static_cast<jule::U64>(_1074_code.len()));
				};
				_1a41c7155_Close(static_cast<jule::I64>(_877_pipe[1LL]));
				_1a697d750_Exit(1LL);
			}
		}
		else {
			_case_begin_1ae599990:;
			{
				_1a41c7155_Close(static_cast<jule::I64>(_877_pipe[1LL]));
				jule::Array<jule::U8,16> _11312_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I64 _1144_n = _1a41c6c7b_Read(static_cast<jule::I64>(_877_pipe[0LL]), (&(_11312_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_1a41c7155_Close(static_cast<jule::I64>(_877_pipe[0LL]));
				if ((_1144_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1185_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6923580_AtoiBp((&(_11312_buf[0LL])), _1144_n);
						_1185_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1a696e125_cmdErrorFromCode(_1185_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1ae59cb3b:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1a696dc90_wait(_1a68cac74_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_unix.jule:136:4"));;
	};
	jule::I64 _1387_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1387_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_1a696e334_getLastCmdError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1387_stat)};;
}







inline void _1a41813d9_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1a41ae9bc_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_776_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1ad57a4dd:;
		}
		_iter_end_1ad57a4dd:;;
	};
	return __jule_bytesToStr(_776_buf);;
}



inline jule::Slice<jule::U8> _1a41aec53_StrToBytes(jule::Str _9015_s) {
	{
		auto expr = &(_9015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad57a9d8:;
		if (it != expr_end) {
			jule::I64 _916_i = it - expr->begin();
			jule::U8 *_919_b = it;
			{
				if (((*(_919_b)) == 0LLU)) {
					jule::Slice<jule::U8> _938_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_916_i + 1LL), (_916_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_938_bytes, _9015_s.slice(0LL, _938_bytes.len()));
					return _938_bytes;;
				};
			}
			_iter_next_1ad57a9d8:;
			++it;
			_916_i++;
			goto _iter_begin_1ad57a9d8;
		}
		_iter_end_1ad57a9d8:;
	};
	jule::Slice<jule::U8> _986_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9015_s.len() + 1LL), (_9015_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_986_bytes, _9015_s);
	return _986_bytes;;
}



inline jule::I64 _1a3a989b1_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1a41be1b3_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg) {
	return fcntl(_5510_handle, _5523_cmd, _5533_arg);;
}



inline jule::I64 _1a41be537_Stat(jule::U8* _6016_path, struct stat* _6033_stat) {
	return stat(((char*)(_6016_path)), _6033_stat);;
}



inline jule::I64 _1a41be966_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode) {
	return open(((char*)(_6516_path)), _6529_flag, _6540_mode);;
}



inline jule::U8* _1a41becda_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7118_buff)), _7131_bufflen)));;
}



inline DIR* _1a41c02d5_Opendir(jule::U8* _7619_path) {
	return opendir(((char*)(_7619_path)));;
}



inline struct dirent* _1a41c04b1_Readdir(DIR* _7923_dir) {
	return readdir(_7923_dir);;
}



inline jule::I64 _1a41c0758_Closedir(DIR* _8224_dir) {
	return closedir(_8224_dir);;
}



inline jule::I64 _1a41c1160_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode) {
	return mkdir(((char*)(_9117_path)), _9130_mode);;
}



inline jule::I64 _1a41c1429_Rmdir(jule::U8* _9617_path) {
	return rmdir(((char*)(_9617_path)));;
}



inline jule::I64 _1a41c16e3_Unlink(jule::U8* _9918_path) {
	return unlink(((char*)(_9918_path)));;
}



inline jule::I64 _1a41c6c7b_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _1a41c7155_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _1a41c750c_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1a41c773d_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _1a4202180_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1ad5d7605_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1a421833e_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1ad5d7605_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1a42185c5_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1a4202180_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1a421888e_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1a4323119_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1a4321d82_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_1a4322437_acceptRange _1962_accept = _1a43227cd_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a432345a_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1a4321d82_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_1a4322437_acceptRange _2432_accept = _1a43227cd_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a43239aa_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1a43251c6_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1ad628aca;
			};
		}
	_iter_next_1ad628aca:;
	}
	_iter_end_1ad628aca:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1a4324505_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1a4324879_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1a4324879_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1ad637d5e:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1ad636a1c:;
			{
				_41242_r=128LL;
				goto _case_begin_1ad636a83;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1ad636a83:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1ad6362ad:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1ad636236:;
	};
}



inline jule::I64 _1a4324e0c_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1ad641175;
			};
			jule::U8 _4823_x = _1a4321d82_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1ad641175;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1ad641175;
			};
			_1a4322437_acceptRange _4923_accept = _1a43227cd_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1ad641175:;
	}
	_iter_end_1ad641175:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a43251c6_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1a3da1868_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1a3da9200_Len64(_5919_x));;
}



inline jule::I64 _1a3da27ae_TrailingZeros(jule::U64 _8118_x) {
	;
	return _1a3da345d_TrailingZeros64(static_cast<jule::U64>(_8118_x));;
}



inline jule::I64 _1a3da3194_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1a3da1e62__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1a3da345d_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1a3da254a__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1a3da8e36_Len32(jule::U32 _35014_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I64 _1a3da9200_Len64(jule::U64 _36414_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a3da9e8c_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a3dab796_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1a4329c8b__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1ba89a823_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I64 _1ba89b192_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1ad7e6e30_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ad7e8bce:;
	}
	_iter_end_1ad7e8bce:;;
	return true;;
}

inline jule::Bool _1ad8454de_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ad846bd8:;
	}
	_iter_end_1ad846bd8:;;
	return true;;
}

inline jule::Bool _1ae89982d_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ae89aed3:;
	}
	_iter_end_1ae89aed3:;;
	return true;;
}

inline jule::Bool _1a9a391a9_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a9a3ae14:;
	}
	_iter_end_1a9a3ae14:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _1a4200ce9__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf) {
	if ((_2516_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1a4327dbb_handleRW(&(_2516_buf));
	return _1a41c750c_Write(static_cast<jule::I64>(_1a41bd448_STDOUT), (&(_2516_buf[0LL])), static_cast<jule::U64>(_2516_buf.len()));;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf) {
	if ((_3616_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1a4327dbb_handleRW(&(_3616_buf));
	return _1a41c750c_Write(static_cast<jule::I64>(_1a41bd734_STDERR), (&(_3616_buf[0LL])), static_cast<jule::U64>(_3616_buf.len()));;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1a4327dbb_handleRW(&(_4718_buf));
	return _1a41c750c_Write(static_cast<jule::I64>(_1a41bd118_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U64>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_1a421833e_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1ad5d7605_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1a421833e_StrBytes(jule::Str::lit("\n", 1)));
	_1a41c773d_Exit(2LL);
}



inline jule::U64 _1ad71ec8c_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _1ad71ee57_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _1a422039b_executable(void) {
	jule::Slice<jule::U8> _146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4096LL, 4096LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Str _152_p = jule::Str::lit("/proc/self/exe", 14);;
	jule::I64 _162_n = readlink(((char*)((&(_152_p[0LL])))), ((char*)((&(_146_buf[0LL])))), _146_buf.len());;
	if ((_162_n != -1LL)) {
		(_146_buf).mut_slice(0LL, _162_n);;
		return _1a421888e_StrFromBytes(_146_buf);;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_linux.jule:21:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _1ad71ec8c_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_1ad71ee57_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_1ad71ee57_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1ad72b309:;
	}
	_iter_end_1ad72b309:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ad72ba46:;
	}
	_iter_end_1ad72ba46:;;
	return _1a421888e_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _1a4229042_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1a421888e_StrFromBytes(_516_buf);;
}



inline jule::I64 _1a4229042_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1ad731a29:;
	}
	_iter_end_1ad731a29:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1a422a1db_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _1ba89a823_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I64 _852_exp = (static_cast<jule::I64>((_832_bits >> 52LLU)) & static_cast<jule::I64>(2047LL));;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LL)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_1ad737513:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_1ad7372d2:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1ad734d29:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1ad736cd7:;
		};
	};
	;
	jule::I64 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_1a4229042_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I64 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I64 _1203_digit = static_cast<jule::I64>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_1ad73a4d3:;
	}
	_iter_end_1ad73a4d3:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_1ad73b36e;
			};
		}
	_iter_next_1ad73b36e:;
	}
	_iter_end_1ad73b36e:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _1a421888e_StrFromBytes(_1046_buf);;
}



inline jule::Str _1b23ea04b_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23eb316:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_1ad7a5d78_toStr((*(_1459_z))));;
			}
			_iter_next_1b23eb316:;
			++it;
			_1456_i++;
			goto _iter_begin_1b23eb316;
		}
		_iter_end_1b23eb316:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _1a421888e_StrFromBytes(_1436_buf);;
}



inline jule::Str _1b23deddc_structToStr(_1a387dcd5_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1b23e2e23:;
				{
					;
					{
						
{
							_case_begin_1b23e40ab:;
							{
								;
								;
							}
						}
						_match_end_1b23e3c8c:;
					};
				}
			}
			_match_end_1b23e24b6:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1b23e5e8c:;
				{
					(_1966_buf).append(_1b23e6773_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1b23e5de3:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _1a421888e_StrFromBytes(_1966_buf);;
}



inline jule::Str _1ad7900b5_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_1ad7912e7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad791209:;
	};
	{
		
{
			_case_begin_1ad791814:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_1ad79169e:;
	};
}

inline jule::Str _1ad792293_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7934d6:;
			{
				return _21613_x;;
			}
		}
		_match_end_1ad793470:;
	};
}

inline jule::Str _1ad7929e1_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad796022:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ad795e34:;
	};
}

inline jule::Str _1ad79774e_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7989a3:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ad7988b5:;
	};
}

inline jule::Str _1ad795483_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad79b434:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ad79b346:;
	};
}

inline jule::Str _1ad79cb61_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad79de4d:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ad79dd60:;
	};
}

inline jule::Str _1ad7a0647_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7a1967:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ad7a1879:;
	};
}

inline jule::Str _1ad7a3194_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7a4470:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1ad7a430a:;
	};
}

inline jule::Str _1ad7a0ba8_toStr(jule::Uintptr _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7a68b2:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1ad7a674c:;
	};
}

inline jule::Str _1ad7a5d78_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7a8d04:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1ad7a8b8e:;
	};
}

inline jule::Str _1ad7a82ba_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7ab246:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1ad7ab0d1:;
	};
}

inline jule::Str _1ad7aa70c_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7ad688:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1ad7ad523:;
	};
}

inline jule::Str _1ad7acb4e_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7b0c1d:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1ad7b0aa8:;
	};
}

inline jule::Str _1ad7b102b_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7b322b:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1ad7b303e:;
	};
}

inline jule::Str _1ad7b13a0_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7b52a5:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1ad7b50eb:;
	};
}

inline jule::Str _1ad79d03a_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ad7b7153:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_1ad7b6dcd:;
	};
}

inline jule::Str _1ae58dbb5_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae5906ab:;
			{
				return _1ad7929e1_toStr(_21613_x);;
			}
		}
		_match_end_1ae5900b2:;
	};
}

inline jule::Str _1ae598197_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae599b8d:;
			{
				return _1ad7929e1_toStr(_21613_x);;
			}
		}
		_match_end_1ae599594:;
	};
}

inline jule::Str _1ae5cd6c7_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae5d0201:;
			{
				return _1ad7929e1_toStr(_21613_x);;
			}
		}
		_match_end_1ae5ceb07:;
	};
}

inline jule::Str _1ae93db03_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae9405e9:;
			{
				return _1ad7929e1_toStr(_21613_x);;
			}
		}
		_match_end_1ae940000:;
	};
}

inline jule::Str _1b0112a46_toStr(jule::Ptr<_1ab8a7289_Var> _21613_x) {
	;
	{
		
{
			_case_begin_1b0113c34:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0113b46:;
	};
	;
	{
		
{
			_case_begin_1b01146d5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b01143a5:;
	};
}

inline jule::Str _1b01150dc_toStr(jule::Ptr<_1ab938a24_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_1b01175a6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b01174b8:;
	};
	;
	{
		
{
			_case_begin_1b0118057:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0117c27:;
	};
}

inline jule::Str _1b0118a80_toStr(jule::Ptr<_1a37a2577_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_1b011ae8e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b011ada1:;
	};
	;
	{
		
{
			_case_begin_1b011b940:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b011b610:;
	};
}

inline jule::Str _1b011c347_toStr(jule::Ptr<_1ab0898e5_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_1b011e811:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b011e723:;
	};
	;
	{
		
{
			_case_begin_1b01202b2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b011ee82:;
	};
}

inline jule::Str _1b0120e0b_toStr(jule::Ptr<_1ab095109_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_1b01233c5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b01232d7:;
	};
	;
	{
		
{
			_case_begin_1b0123d76:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0123a46:;
	};
}

inline jule::Str _1b01244c5_toStr(jule::Ptr<_1ab0977b0_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_1b012697d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0126890:;
	};
	;
	{
		
{
			_case_begin_1b012742e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b01270ee:;
	};
}

inline jule::Str _1b0127a7d_toStr(jule::Ptr<_1ab098eba_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_1b0129e59:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0129d7c:;
	};
	;
	{
		
{
			_case_begin_1b012a90a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b012a5db:;
	};
}

inline jule::Str _1b0146140_toStr(jule::Ptr<_1a379e651_Field> _21613_x) {
	;
	{
		
{
			_case_begin_1b014732d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0147240:;
	};
	;
	{
		
{
			_case_begin_1b0147cce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b014799e:;
	};
}

inline jule::Str _1b015822e_toStr(jule::Ptr<_1ab070c61_Const> _21613_x) {
	;
	{
		
{
			_case_begin_1b015941c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b015932e:;
	};
	;
	{
		
{
			_case_begin_1b0159dbd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0159a8d:;
	};
}

inline jule::Str _1b0172435_toStr(jule::Ptr<_1ab096c54_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_1b0173612:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0173524:;
	};
	;
	{
		
{
			_case_begin_1b01740b3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0173c83:;
	};
}

inline jule::Str _1b0183a2e_toStr(jule::Ptr<_1ab087e21_Param> _21613_x) {
	;
	{
		
{
			_case_begin_1b0185635:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0185547:;
	};
	;
	{
		
{
			_case_begin_1b01860d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0185ca6:;
	};
}

inline jule::Str _1b026d971_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b027049a:;
			{
				return _1ad792293_toStr(_21613_x);;
			}
		}
		_match_end_1b026eda1:;
	};
}

inline jule::Str _1b0345592_toStr(jule::Ptr<_1ab6c0e82_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b034674c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b034665e:;
	};
	;
	{
		
{
			_case_begin_1b03471ed:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0346dbd:;
	};
}

inline jule::Str _1b03625c0_toStr(jule::Ptr<_1ab082c0c_TupleExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b03635b0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03634c2:;
	};
	;
	{
		
{
			_case_begin_1b0364061:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0363c31:;
	};
}

inline jule::Str _1b0364e74_toStr(jule::Ptr<_1ab6c57a0_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b036740a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b036731c:;
	};
	;
	{
		
{
			_case_begin_1b0367dab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0367a7b:;
	};
}

inline jule::Str _1b0374912_toStr(jule::Ptr<_1a3790565_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b03759e0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0375902:;
	};
	;
	{
		
{
			_case_begin_1b0376491:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0376161:;
	};
}

inline jule::Str _1b037798c_toStr(jule::Ptr<_1ab6c4bab_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0378b36:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0378a48:;
	};
	;
	{
		
{
			_case_begin_1b03795d7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03792a7:;
	};
}

inline jule::Str _1b037701e_toStr(jule::Ptr<_1ab839260_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_1b037c002:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b037be14:;
	};
	;
	{
		
{
			_case_begin_1b037c9a3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b037c673:;
	};
}

inline jule::Str _1b037a187_toStr(jule::Ptr<_1ab839716_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_1b037d7c8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b037d6da:;
	};
	;
	{
		
{
			_case_begin_1b0380a1c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b037d8b6:;
	};
}

inline jule::Str _1b037a275_toStr(jule::Ptr<_1ab839bbc_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_1b038137a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b038128c:;
	};
	;
	{
		
{
			_case_begin_1b03835be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0381468:;
	};
}

inline jule::Str _1b03817ed_toStr(jule::Ptr<_1ab906a8b_Data> _21613_x) {
	;
	{
		
{
			_case_begin_1b03840c5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0383ed7:;
	};
	;
	{
		
{
			_case_begin_1b0385d52:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0385a33:;
	};
}

inline jule::Str _1b0386759_toStr(jule::Ptr<_1ab07e5ee_FnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0388aad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03889c0:;
	};
	;
	{
		
{
			_case_begin_1b038955e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b038922e:;
	};
}

inline jule::Str _1b03b8181_toStr(jule::Ptr<_1ab838726_Label> _21613_x) {
	;
	{
		
{
			_case_begin_1b03b933b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03b924d:;
	};
	;
	{
		
{
			_case_begin_1b03b9cdc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03b99ac:;
	};
}

inline jule::Str _1b03d6952_toStr(jule::Ptr<_1ab835bc9_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_1b03d7b40:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03d7a52:;
	};
	;
	{
		
{
			_case_begin_1b03d85e1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03d82b1:;
	};
}

inline jule::Str _1b03e0de0_toStr(jule::Ptr<_1ab0856b0_BuiltinErrorCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b03e2056:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03e1e68:;
	};
	;
	{
		
{
			_case_begin_1b03e2a07:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03e26c7:;
	};
}

inline jule::Str _1b03e5532_toStr(jule::Ptr<_1ab0866c2_BackendEmitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b03e6588:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03e649a:;
	};
	;
	{
		
{
			_case_begin_1b03e7039:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03e6c09:;
	};
}

inline jule::Str _1b03e6de6_toStr(jule::Ptr<_1ab084439_BuiltinAppendCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b03e7ea2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03e7db4:;
	};
	;
	{
		
{
			_case_begin_1b03e9c95:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03e98ee:;
	};
}

inline jule::Str _1b03e803a_toStr(jule::Ptr<_1ab083009_BuiltinPrintCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b03eaa54:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03ea966:;
	};
	;
	{
		
{
			_case_begin_1b03ec7d1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03ec4b2:;
	};
}

inline jule::Str _1b03eb0b5_toStr(jule::Ptr<_1ab083306_BuiltinPrintlnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b03ed606:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b03ed518:;
	};
	;
	{
		
{
			_case_begin_1b040084a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b03ed6e4:;
	};
}

inline jule::Str _1b04018d4_toStr(jule::Ptr<_1ab083aa9_BuiltinPanicCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b04011a8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b04010ba:;
	};
	;
	{
		
{
			_case_begin_1b04033ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0401296:;
	};
}

inline jule::Str _1b040162b_toStr(jule::Ptr<_1ab0852d6_BuiltinCopyCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0403c5a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0403b6c:;
	};
	;
	{
		
{
			_case_begin_1b0405e9e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0403d48:;
	};
}

inline jule::Str _1b0406c80_toStr(jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b040680c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b040671e:;
	};
	;
	{
		
{
			_case_begin_1b0408a51:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b04068ea:;
	};
}

inline jule::Str _1b0409832_toStr(jule::Ptr<_1ab0869be_FreeExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0409139:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b040904b:;
	};
	;
	{
		
{
			_case_begin_1b040b35b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0409238:;
	};
}

inline jule::Str _1b0413cd1_toStr(jule::Ptr<_1ab836812_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1b0414ebe:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0414dd1:;
	};
	;
	{
		
{
			_case_begin_1b0415970:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0415640:;
	};
}

inline jule::Str _1b041e6b0_toStr(jule::Ptr<_1ab836b0e_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_1b042089d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b04207b0:;
	};
	;
	{
		
{
			_case_begin_1b042134e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b042101e:;
	};
}

inline jule::Str _1b04254eb_toStr(jule::Ptr<_1ab8370b5_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_1b04266d9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b04265eb:;
	};
	;
	{
		
{
			_case_begin_1b042718a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0426d5a:;
	};
}

inline jule::Str _1b044bc2b_toStr(jule::Ptr<_1ab837a11_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_1b044ce19:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b044cd2b:;
	};
	;
	{
		
{
			_case_begin_1b044d8ba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b044d58a:;
	};
}

inline jule::Str _1b045b840_toStr(jule::Ptr<_1a3795e83_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_1b045c9d9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b045c8eb:;
	};
	;
	{
		
{
			_case_begin_1b045d48a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b045d15a:;
	};
}

inline jule::Str _1b045e4ad_toStr(jule::Ptr<_1a379688a_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_1b0461845:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0461757:;
	};
	;
	{
		
{
			_case_begin_1b04622e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0461eb6:;
	};
}

inline jule::Str _1b047aa29_toStr(jule::Ptr<_1ab837d96_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b047bc17:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b047bb29:;
	};
	;
	{
		
{
			_case_begin_1b047c6b8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b047c388:;
	};
}

inline jule::Str _1b048488a_toStr(jule::Ptr<_1ab838d86_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b0485a78:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b048598a:;
	};
	;
	{
		
{
			_case_begin_1b0486529:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b04861e9:;
	};
}

inline jule::Str _1b04c03a9_toStr(jule::Ptr<_1ab6c64c6_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b04c1531:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b04c1443:;
	};
	;
	{
		
{
			_case_begin_1b04c1ed2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b04c1ba2:;
	};
}

inline jule::Str _1b04d4d2a_toStr(jule::Ptr<_1ab07ee7e_IndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0185190:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0185091:;
	};
	;
	{
		
{
			_case_begin_1b04d6557:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b04d5b0b:;
	};
}

inline jule::Str _1b052c5ae_toStr(jule::Ptr<_1ab83a409_Match> _21613_x) {
	;
	{
		
{
			_case_begin_1b052d79c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b052d6ae:;
	};
	;
	{
		
{
			_case_begin_1b052e24d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b052de1d:;
	};
}

inline jule::Str _1b0541628_toStr(jule::Ptr<_1ab83b62a_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b054311e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0543031:;
	};
	;
	{
		
{
			_case_begin_1b0543ac0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0543790:;
	};
}

inline jule::Str _1b055c699_toStr(jule::Ptr<_1ab838270_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b055d887:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b055d799:;
	};
	;
	{
		
{
			_case_begin_1b055e338:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b055e008:;
	};
}

inline jule::Str _1b0563d21_toStr(jule::Ptr<_1ab83b9c1_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b056500e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0564e21:;
	};
	;
	{
		
{
			_case_begin_1b05659b0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0565680:;
	};
}

inline jule::Str _1b056d754_toStr(jule::Ptr<_1a3791bb5_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_1b056e90e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b056e821:;
	};
	;
	{
		
{
			_case_begin_1b05703b0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0570080:;
	};
}

inline jule::Str _1b056da0c_toStr(jule::Ptr<_1a3794a0e_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0572acc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b05729de:;
	};
	;
	{
		
{
			_case_begin_1b057357d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b057324d:;
	};
}

inline jule::Str _1b0570a0e_toStr(jule::Ptr<_1a37986b1_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0575c9a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0575bac:;
	};
	;
	{
		
{
			_case_begin_1b057674b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b057641b:;
	};
}

inline jule::Str _1b0577472_toStr(jule::Ptr<_1a3797e74_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1b057983c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b057974e:;
	};
	;
	{
		
{
			_case_begin_1b057a2dd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0579ead:;
	};
}

inline jule::Str _1b057765e_toStr(jule::Ptr<_1a3795658_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_1b057ca0a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b057c91c:;
	};
	;
	{
		
{
			_case_begin_1b057d4ab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b057d17b:;
	};
}

inline jule::Str _1b057a93c_toStr(jule::Ptr<_1a379713d_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b0580bc8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0580ada:;
	};
	;
	{
		
{
			_case_begin_1b0581679:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0581349:;
	};
}

inline jule::Str _1b057e787_toStr(jule::Ptr<_1a378e19b_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b0582856:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0582768:;
	};
	;
	{
		
{
			_case_begin_1b05845d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b05842a3:;
	};
}

inline jule::Str _1b0581cc8_toStr(jule::Ptr<_1a378e575_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b0586d00:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0586c12:;
	};
	;
	{
		
{
			_case_begin_1b05877a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0587471:;
	};
}

inline jule::Str _1b0588384_toStr(jule::Ptr<_1a3799481_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_1b058a74e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b058a661:;
	};
	;
	{
		
{
			_case_begin_1b058b200:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b058adc0:;
	};
}

inline jule::Str _1b058b84e_toStr(jule::Ptr<_1a378e872_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b058d91c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b058d82e:;
	};
	;
	{
		
{
			_case_begin_1b058e3bd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b058e08d:;
	};
}

inline jule::Str _1b0590666_toStr(jule::Ptr<_1a3796c64_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b0591ada:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b05919ec:;
	};
	;
	{
		
{
			_case_begin_1b059258b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b059225b:;
	};
}

inline jule::Str _1b0593834_toStr(jule::Ptr<_1a3794dd8_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1b0594ca8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0594bba:;
	};
	;
	{
		
{
			_case_begin_1b0595759:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0595429:;
	};
}

inline jule::Str _1b0596a02_toStr(jule::Ptr<_1ab6c5580_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0597e76:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0597d88:;
	};
	;
	{
		
{
			_case_begin_1b0598927:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b05985e7:;
	};
}

inline jule::Str _1b068332a_toStr(jule::Ptr<_1a379d573_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_1b06844d5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b06843e7:;
	};
	;
	{
		
{
			_case_begin_1b0684e86:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0684b56:;
	};
}

inline jule::Str _1b0687de0_toStr(jule::Ptr<_1a379c6c6_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0688e35:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0688d47:;
	};
	;
	{
		
{
			_case_begin_1b06898d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b06895a6:;
	};
}

inline jule::Str _1b068a84e_toStr(jule::Ptr<_1a3793854_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b068cb70:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b068ca82:;
	};
	;
	{
		
{
			_case_begin_1b068d621:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b068d2e1:;
	};
}

inline jule::Str _1b068e446_toStr(jule::Ptr<_1a379ce13_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0691767:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0691679:;
	};
	;
	{
		
{
			_case_begin_1b0692218:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0691dd8:;
	};
}

inline jule::Str _1b06954c4_toStr(jule::Ptr<_1a379aa7b_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0696519:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b069642b:;
	};
	;
	{
		
{
			_case_begin_1b0696eba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0696b8a:;
	};
}

inline jule::Str _1b0697a7b_toStr(jule::Ptr<_1a379ba16_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0699d9c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0699cae:;
	};
	;
	{
		
{
			_case_begin_1b069a84d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b069a51d:;
	};
}

inline jule::Str _1b06c0b4d_toStr(jule::Ptr<_1ab082190_StructSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b06c1e90:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b06c1da2:;
	};
	;
	{
		
{
			_case_begin_1b06c2941:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b06c2611:;
	};
}

inline jule::Str _1b06c116a_toStr(jule::Ptr<_1ab07c9e8_UnaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b06c5a76:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b06c5988:;
	};
	;
	{
		
{
			_case_begin_1b06c6527:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b06c61e7:;
	};
}

inline jule::Str _1b0704148_toStr(jule::Ptr<_1ab08c9a3_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_1b0705336:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0705248:;
	};
	;
	{
		
{
			_case_begin_1b0705cd7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b07059a7:;
	};
}

inline jule::Str _1b09b1cda_toStr(jule::Ptr<_1ab6c3391_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b09b2e95:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b09b2da7:;
	};
	;
	{
		
{
			_case_begin_1b09b3946:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b09b3616:;
	};
}

inline jule::Str _1b09b764d_toStr(jule::Ptr<_1ab6c20a4_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b09b8808:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b09b871a:;
	};
	;
	{
		
{
			_case_begin_1b09b92a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b09b8e79:;
	};
}

inline jule::Str _1b09ca9c4_toStr(jule::Ptr<_1ab6c2b43_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b09cbb90:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b09cbaa2:;
	};
	;
	{
		
{
			_case_begin_1b09cc641:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b09cc311:;
	};
}

inline jule::Str _1b09d1eb4_toStr(jule::Ptr<_1ab6c1ca7_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b09d3180:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b09d3092:;
	};
	;
	{
		
{
			_case_begin_1b09d3b31:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b09d3801:;
	};
}

inline jule::Str _1b09d84a4_toStr(jule::Ptr<_1ab6c23a1_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b09d9670:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b09d9582:;
	};
	;
	{
		
{
			_case_begin_1b09da121:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b09d9ce1:;
	};
}

inline jule::Str _1b09de675_toStr(jule::Ptr<_1ab6c1922_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b09e0841:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b09e0753:;
	};
	;
	{
		
{
			_case_begin_1b09e12e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b09e0eb2:;
	};
}

inline jule::Str _1b0a39b10_toStr(jule::Ptr<_1ab6c7142_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0a3ac21:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0a3ab33:;
	};
	;
	{
		
{
			_case_begin_1b0a3b6c2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0a3b392:;
	};
}

inline jule::Str _1b0a4084c_toStr(jule::Ptr<_1ab07e9c8_SliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0a42563:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0a42475:;
	};
	;
	{
		
{
			_case_begin_1b0a43014:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0a42bd4:;
	};
}

inline jule::Str _1b0a603a5_toStr(jule::Ptr<_1a378a340_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_1b0a61560:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0a61472:;
	};
	;
	{
		
{
			_case_begin_1b0a62011:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0a61bd1:;
	};
}

inline jule::Str _1b0a68c71_toStr(jule::Ptr<_1a378b94b_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_1b0a69e2b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0a69d3d:;
	};
	;
	{
		
{
			_case_begin_1b0a6a8cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0a6a59c:;
	};
}

inline jule::Str _1b0abee2b_toStr(jule::Ptr<_1a378984a_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0ac10d6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0ac0ee8:;
	};
	;
	{
		
{
			_case_begin_1b0ac1a87:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0ac1757:;
	};
}

inline jule::Str _1b0ad29bb_toStr(jule::Ptr<_1ab07d6b9_AllocStructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0ad3ba9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0ad3abb:;
	};
	;
	{
		
{
			_case_begin_1b0ad465a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0ad432a:;
	};
}

inline jule::Str _1b0ae59ac_toStr(jule::Ptr<_1ab07dc4c_CastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0ae6b9a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0ae6aac:;
	};
	;
	{
		
{
			_case_begin_1b0ae764b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0ae731b:;
	};
}

inline jule::Str _1b0b0ca7e_toStr(jule::Ptr<_1ab082536_StructStaticIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0b0e1ac:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0b0e0be:;
	};
	;
	{
		
{
			_case_begin_1b0b0eb5d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0b0e82d:;
	};
}

inline jule::Str _1b0b10763_toStr(jule::Ptr<_1a3788c34_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0b1404c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0b13e5e:;
	};
	;
	{
		
{
			_case_begin_1b0b149ed:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0b146bd:;
	};
}

inline jule::Str _1b0b1c473_toStr(jule::Ptr<_1ab07d3bc_StructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0b1d61c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0b1d52e:;
	};
	;
	{
		
{
			_case_begin_1b0b1e0bd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0b1dc8d:;
	};
}

inline jule::Str _1b0b3e121_toStr(jule::Ptr<_1ab08634d_RuneExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0b4030e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0b40221:;
	};
	;
	{
		
{
			_case_begin_1b0b40cb0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0b40980:;
	};
}

inline jule::Str _1b0b61dad_toStr(jule::Ptr<_1a37a53d2_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_1b0b6309b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0b62ead:;
	};
	;
	{
		
{
			_case_begin_1b0b63a4c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0b6371c:;
	};
}

inline jule::Str _1b0b9d9dd_toStr(jule::Ptr<_1ab939816_Type> _21613_x) {
	;
	{
		
{
			_case_begin_1b0b9eb76:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0b9ea88:;
	};
	;
	{
		
{
			_case_begin_1b0ba068d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0ba573c:;
	};
}

inline jule::Str _1b0bc588e_toStr(jule::Ptr<_1ab082910_ArrayExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0bc6a7c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0bc698e:;
	};
	;
	{
		
{
			_case_begin_1b0bc752d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0bc71ed:;
	};
}

inline jule::Str _1b0c0e80c_toStr(jule::Ptr<_1ab6c124b_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0c109ea:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0c1090c:;
	};
	;
	{
		
{
			_case_begin_1b0c1149b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0c1116b:;
	};
}

inline jule::Str _1b0c13e1b_toStr(jule::Ptr<_1ab6c6c68_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0c150a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0c14eb6:;
	};
	;
	{
		
{
			_case_begin_1b0c15a55:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0c15725:;
	};
}

inline jule::Str _1b0c1d09b_toStr(jule::Ptr<_1ab6c0877_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0c1d640:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0c1d552:;
	};
	;
	{
		
{
			_case_begin_1b0c1e0e1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0c1dcb1:;
	};
}

inline jule::Str _1b0c226aa_toStr(jule::Ptr<_1a378885a_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0c2545a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0c2536c:;
	};
	;
	{
		
{
			_case_begin_1b0c25e0b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0c25acb:;
	};
}

inline jule::Str _1b0c294d6_toStr(jule::Ptr<_1ab6c1625_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1b0c2a6c4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0c2a5d6:;
	};
	;
	{
		
{
			_case_begin_1b0c2b175:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0c2ad45:;
	};
}

inline jule::Str _1b0c64ab5_toStr(jule::Ptr<_1ab08126b_SlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0c65c4d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0c65b60:;
	};
	;
	{
		
{
			_case_begin_1b0c666ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0c663be:;
	};
}

inline jule::Str _1b0cd276a_toStr(jule::Ptr<_1a378c386_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0cd3925:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0cd3837:;
	};
	;
	{
		
{
			_case_begin_1b0cd43c6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0cd4096:;
	};
}

inline jule::Str _1b0d5316a_toStr(jule::Ptr<_1ab0817ee_TraitSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0d54358:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0d5426a:;
	};
	;
	{
		
{
			_case_begin_1b0d54d09:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0d549c9:;
	};
}

inline jule::Str _1b0dec621_toStr(jule::Ptr<_1ab080bd8_MapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0dee29e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0dee1b1:;
	};
	;
	{
		
{
			_case_begin_1b0deec50:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0dee920:;
	};
}

inline jule::Str _1b0e0c9a5_toStr(jule::Ptr<_1ab080435_AnonFnExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e0db93:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e0daa5:;
	};
	;
	{
		
{
			_case_begin_1b0e0e644:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e0e314:;
	};
}

inline jule::Str _1b0e14a45_toStr(jule::Ptr<_1ab6c4e75_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e15c00:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e15b12:;
	};
	;
	{
		
{
			_case_begin_1b0e166a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e16371:;
	};
}

inline jule::Str _1b0e17b9c_toStr(jule::Ptr<_1ab6c5b46_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e195c7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e194d9:;
	};
	;
	{
		
{
			_case_begin_1b0e1a078:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e19c48:;
	};
}

inline jule::Str _1b0e17817_toStr(jule::Ptr<_1ab6c6020_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e1e0e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e1e005:;
	};
	;
	{
		
{
			_case_begin_1b0e1ea94:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e1e764:;
	};
}

inline jule::Str _1b0e21090_toStr(jule::Ptr<_1a378cdae_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e22789:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e2269b:;
	};
	;
	{
		
{
			_case_begin_1b0e2323a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e22e0a:;
	};
}

inline jule::Str _1b0e239aa_toStr(jule::Ptr<_1a378d51e_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e25935:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e25847:;
	};
	;
	{
		
{
			_case_begin_1b0e263d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e260a6:;
	};
}

inline jule::Str _1b0e23b42_toStr(jule::Ptr<_1a3788481_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e28ad1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e289e3:;
	};
	;
	{
		
{
			_case_begin_1b0e29582:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e29252:;
	};
}

inline jule::Str _1b0e26a35_toStr(jule::Ptr<_1a378ab6a_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e2c4db:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e2c3ed:;
	};
	;
	{
		
{
			_case_begin_1b0e2ce8c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e2cb5c:;
	};
}

inline jule::Str _1b0e2dbd5_toStr(jule::Ptr<_1a378b121_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e32623:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e32524:;
	};
	;
	{
		
{
			_case_begin_1b0e3358b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e32c94:;
	};
}

inline jule::Str _1b0e33965_toStr(jule::Ptr<_1a37891da_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1b0e3602d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b0e35e40:;
	};
	;
	{
		
{
			_case_begin_1b0e369ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b0e3669e:;
	};
}

inline jule::Str _1b1085b72_toStr(jule::Ptr<_1ab07c61e_BinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b1086d60:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b1086c72:;
	};
	;
	{
		
{
			_case_begin_1b1087811:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b10874d1:;
	};
}

inline jule::Str _1b1224706_toStr(jule::Ptr<_1ab0836d0_BuiltinNewCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b12258e4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b1225806:;
	};
	;
	{
		
{
			_case_begin_1b1226395:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b1226065:;
	};
}

inline jule::Str _1b123ee3b_toStr(jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b1241129:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b124103b:;
	};
	;
	{
		
{
			_case_begin_1b1241aca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b124179a:;
	};
}

inline jule::Str _1b1274954_toStr(jule::Ptr<_1ab084736_BuiltinLenCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b1275b42:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b1275a54:;
	};
	;
	{
		
{
			_case_begin_1b12765e3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b12762b3:;
	};
}

inline jule::Str _1b128e5c8_toStr(jule::Ptr<_1ab084a33_BuiltinCapCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b12907b6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b12906c8:;
	};
	;
	{
		
{
			_case_begin_1b1291267:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b1290e37:;
	};
}

inline jule::Str _1b12d5ad6_toStr(jule::Ptr<_1ab0859ac_SizeofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b12d6c08:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b12d6b1a:;
	};
	;
	{
		
{
			_case_begin_1b12d76a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b12d7379:;
	};
}

inline jule::Str _1b12de98b_toStr(jule::Ptr<_1ab086161_AlignofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b12e0aad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b12e09c0:;
	};
	;
	{
		
{
			_case_begin_1b12e155e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b12e122e:;
	};
}

inline jule::Str _1abc17dd0_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1abc198b5:;
			{
				return _1ad792293_toStr(_21613_x);;
			}
		}
		_match_end_1abc192bb:;
	};
}

inline jule::Str _1aeae2bca_toStr(jule::Ptr<_1ad12156d_ExceptionalForwardingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aeae3db8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aeae3cca:;
	};
	;
	{
		
{
			_case_begin_1aeae4869:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aeae4539:;
	};
}

inline jule::Str _1aeb2b6c5_toStr(jule::Ptr<_1ad124164_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_1aeb2c8b3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aeb2c7c5:;
	};
	;
	{
		
{
			_case_begin_1aeb2d364:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aeb2d034:;
	};
}

inline jule::Str _1aeb34139_toStr(jule::Ptr<_1ad122d55_MutSlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aeb35327:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aeb35239:;
	};
	;
	{
		
{
			_case_begin_1aeb35cc8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aeb35998:;
	};
}

inline jule::Str _1aeb5b381_toStr(jule::Ptr<_1ad123c8a_AppendToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aeb5c56e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aeb5c481:;
	};
	;
	{
		
{
			_case_begin_1aeb5d020:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aeb5cbe0:;
	};
}

inline jule::Str _1aeb5dbd0_toStr(jule::Ptr<_1ad1238b1_PushToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aeb61199:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aeb610ab:;
	};
	;
	{
		
{
			_case_begin_1aeb61b4a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aeb6181a:;
	};
}

inline jule::Str _1aeb6b7d1_toStr(jule::Ptr<_1ad121b01_SwapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aeb6c9be:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aeb6c8d1:;
	};
	;
	{
		
{
			_case_begin_1aeb6d470:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aeb6d140:;
	};
}

inline jule::Str _1b1ab02d3_toStr(jule::Ptr<_1ad12201e_EmptyCompareExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b1ab14c1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b1ab13d3:;
	};
	;
	{
		
{
			_case_begin_1b1ab1e72:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b1ab1b42:;
	};
}

inline jule::Str _1b1ab3061_toStr(jule::Ptr<_1ad1227c2_StrCompExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1b1ab552a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b1ab543c:;
	};
	;
	{
		
{
			_case_begin_1b1ab5ecb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b1ab5b9b:;
	};
}

inline jule::Str _1a9958dcb_toStr(jule::Ptr<_1ad1231da_UnsafeBinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a995a0b9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9959ecb:;
	};
	;
	{
		
{
			_case_begin_1a995aa6a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a995a73a:;
	};
}

inline jule::Str _1a996229c_toStr(jule::Ptr<_1ad124461_UnsafeDerefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a996348a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a996339c:;
	};
	;
	{
		
{
			_case_begin_1a9963e3b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9963b0b:;
	};
}

inline jule::Str _1a9968c65_toStr(jule::Ptr<_1ad12231b_RefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9969e53:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9969d65:;
	};
	;
	{
		
{
			_case_begin_1a996a904:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a996a5c4:;
	};
}

inline jule::Str _1a996d30d_toStr(jule::Ptr<_1ab07d026_StructArgExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a996e4eb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a996e40d:;
	};
	;
	{
		
{
			_case_begin_1a996ee9c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a996eb6c:;
	};
}

inline jule::Str _1a9974ac8_toStr(jule::Ptr<_1ad12475d_UnsafeCastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9975cb6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9975bc8:;
	};
	;
	{
		
{
			_case_begin_1a9976767:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9976437:;
	};
}

inline jule::Str _1a99826a7_toStr(jule::Ptr<_1ad12175a_FnCallIgnoreExceptionalExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9983895:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99837a7:;
	};
	;
	{
		
{
			_case_begin_1a9984346:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9984016:;
	};
}

inline jule::Str _1a998ceba_toStr(jule::Ptr<_1ad1234d7_UnsafeIndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a998e1a8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a998e0ba:;
	};
	;
	{
		
{
			_case_begin_1a998eb59:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a998e829:;
	};
}

inline jule::Str _1b1b42ab3_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1b1b43c07:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b1b43b19:;
	};
	;
	{
		
{
			_case_begin_1b1b446a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1b1b44378:;
	};
}

inline jule::Str _1b23d9e2b_toStr(_1a387dcd5_Builder _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b23dd32a:;
			{
				return _1b23deddc_structToStr(_21613_x);;
			}
		}
		_match_end_1b23dcda7:;
	};
}

inline jule::Str _1b23e6773_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1b23e7b1a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b23e790b:;
	};
	;
	{
		
{
			_case_begin_1b23e8478:;
			{
				return _1b23ea04b_arrToStr(_21613_x);;
			}
		}
		_match_end_1b23e829c:;
	};
}

inline jule::Str _1b23e1b25_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b23ecda6:;
			{
				return _1ad792293_toStr(_21613_x);;
			}
		}
		_match_end_1b23e729b:;
	};
}

inline jule::Str _1b23ed8ce_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b23eed20:;
			{
				return _1ad792293_toStr(_21613_x);;
			}
		}
		_match_end_1b23ee814:;
	};
}



inline void _1a422a1db_rev(jule::Slice<jule::U8> _26912_b) {
	jule::I64 _2706_i = 0LL;;
	for (; (_2706_i < (_26912_b.len() >> 1LL)); (_2706_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26912_b[((_26912_b.len() - 1LL) - _2706_i)];
				jule::U8 _1___jule_assign_arg = _26912_b[_2706_i];
				_26912_b[_2706_i] = ___jule_assign_arg;
				_26912_b[((_26912_b.len() - 1LL) - _2706_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ad73cb34:;
	}
	_iter_end_1ad73cb34:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1ad73e608:;
	}
	_iter_end_1ad73e608:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1a421888e_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74340e:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1a4324505_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1ad74340e:;
			++it;
			goto _iter_begin_1ad74340e;
		}
		_iter_end_1ad74340e:;
	};
	return _1a421888e_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1a4324e0c_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1ad74460d:;
	}
	_iter_end_1ad74460d:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1a421888e_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1a4324505_AppendRune(_846_buf, _8316_r);
	return _1a421888e_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1ad5d7605_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _1a4327dbb_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1a4200ce9__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _1a43283c7_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7480a1:;
		if (it != expr_end) {
			jule::I64 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_1a4202180_Str(_118_arg, _1a432896b_strlen(_118_arg));
				};
			}
			_iter_next_1ad7480a1:;
			++it;
			_96_i++;
			goto _iter_begin_1ad7480a1;
		}
		_iter_end_1ad7480a1:;
	};
	return _86_args;;
}



inline jule::I64 _1a432896b_strlen(jule::U8* _3122_p) {
	jule::I64 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1ad74bbed:;
	}
	_iter_end_1ad74bbed:;;
	return __jule_func_result;;
}



inline jule::Bool _1a4329c8b__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _1a437b936_hash128to64(_1a437b57e_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1a437bc44_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1a4377e4e_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1a437c00d_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1a4377525_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1a437c34e_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1a437c690_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1a437b936_hash128to64(_1a437b57e_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1a437ca14_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1a437ce43_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1a437d3c7_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1a437bc44_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1a437bc44_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1a437ca14_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1a437ca14_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1a437ce43_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1a437c00d_fetch32(_7517_bytes));;
		return _1a437ce43_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1a437c00d_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_1a437c34e_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1a437b57e_u128 _1a437d77e_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _1a437b57e_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1a437c34e_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1a437d3c7_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1a437c34e_shiftMix((jule::U64)(_1046_a + _1a437bc44_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1a437c34e_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1a437c690_hashLen16((jule::U64)(_1a437bc44_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1a437c690_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1a437bc44_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1a437c34e_shiftMix((jule::U64)(_1a437bc44_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1a437c34e_shiftMix((jule::U64)(_1a437bc44_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1ad762dbd;
				};
			}
		_iter_next_1ad762dbd:;
		}
		_iter_end_1ad762dbd:;;
	};
	_1046_a=_1a437c690_hashLen16(_1046_a, _1066_c);
	_1056_b=_1a437c690_hashLen16(_1076_d, _1056_b);
	return _1a437b57e_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1a437c690_hashLen16(_1056_b, _1046_a)};;
}



inline _1a437b57e_u128 _1a437ddcd_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1a437ca14_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1a437ca14_rotate64(_14563_a, 44LLU);
	return _1a437b57e_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1a437b57e_u128 _1a437e30c_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1a437ddcd_weakHashLen32WithSeeds(_1a437bc44_fetch64(_15529_bytes), _1a437bc44_fetch64(_15529_bytes.slice(8LL)), _1a437bc44_fetch64(_15529_bytes.slice(16LL)), _1a437bc44_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1a437b57e_u128 _1a437e73b_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _1a437b57e_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1a437d77e_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1a437b57e_u128 _16910_v = _1a437b57e_u128{._field_hi=0, ._field_lo=0};;
	_1a437b57e_u128 _17010_w = _1a437b57e_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1a437ca14_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1a437bc44_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1a437ca14_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1a437bc44_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1a437ca14_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1a437ca14_rotate64((jule::U64)(_1716_x + _1a437bc44_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1a437ca14_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1a437bc44_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1a437ca14_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1a437bc44_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1a437bc44_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1a437ca14_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1a437e30c_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1a437e30c_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1a437bc44_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1a437ca14_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1a437bc44_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1a437ca14_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1a437bc44_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1a437bc44_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1a437ca14_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1a437e30c_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1a437e30c_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1a437bc44_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1ad76b57a;
			};
		}
	_iter_next_1ad76b57a:;
	}
	_iter_end_1ad76b57a:;;
	_1716_x+=(jule::U64)(_1a437ca14_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1a437ca14_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1a437ca14_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1a437ca14_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1a437bc44_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1a437bc44_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1a437e30c_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1ad777267:;
	}
	_iter_end_1ad777267:;;
	_1716_x=_1a437c690_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1a437c690_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1a437b57e_u128{._field_hi=(jule::U64)(_1a437c690_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1a437c690_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1a437ea05_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1a437b57e_u128 _2356_sum = _1a437b57e_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1a437e73b_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1a437b57e_u128{._field_hi=_1a437bc44_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1a437bc44_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1a437e73b_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1a437b57e_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1a437b936_hash128to64(_2356_sum);;
}



inline jule::U64 _1a3db0e93_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1a3db18ab_hasZeroByte((_1a3db1b42_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1a3db12a1_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1a3db18ab_hasZeroByte((_1a3db1b42_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1a3db156a_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1a3da345d_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1a3db18ab_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1a3db1b42_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _1a3db1e0b_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1a3db211a_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad781c11:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1ad781c11:;
			++it;
			_886_i++;
			goto _iter_begin_1ad781c11;
		}
		_iter_end_1ad781c11:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1a3db24e4_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1a3db27e1_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _1a3db2b65_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1a3db2b65_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline __jule_tuple_int__jule_tuple_bool _1a6923580_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1ad7c7251:;
	}
	_iter_end_1ad7c7251:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1a692bea1_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1a692c204_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _1a692c204_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _1a692c204_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _1613_x) - (jule::U64)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1ad7cdc91:;
	}
	_iter_end_1ad7cdc91:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1a692c435_rev(&(_206_buf));
	return _1a421888e_StrFromBytes(_206_buf);;
}



inline void _1a692c435_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ad7d2899:;
	}
	_iter_end_1ad7d2899:;;
}



inline jule::I64 _1a6968e11_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1ad7dab6b:;
	}
	_iter_end_1ad7dab6b:;;
	return -1LL;;
}



inline jule::I64 _1a69695b5_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7db023:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1ad7db023:;
			++it;
			_706_i++;
			goto _iter_begin_1ad7db023;
		}
		_iter_end_1ad7db023:;
	};
	return -1LL;;
}



inline jule::I64 _1a6969939_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1a6968e11_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1a697a4e9_Getwd(void) {
	jule::U8* _96_buf = _1a41becda_Getcwd(nullptr, 0LLU);;
	if ((_96_buf == nullptr)) {
		return jule::Str();;
	};
	jule::Str _132_pwd = _1a41ae9bc_BytePtrToStr(_96_buf);;
	{
		_1a41813d9_Free(_96_buf);
	};
	return _132_pwd;;
}



inline jule::Bool _1a873ab59_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a879d738__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1a87a7258_isExcludingLatin(_1a8744b30_Letter, _7613_r);;
}



inline jule::Bool _1a87a65cb_is16(jule::Slice<_1a87a483d_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ae4d2279:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1a87a483d_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1ae4d2279:;
				++it;
				_1937_i++;
				goto _iter_begin_1ae4d2279;
			}
			_iter_end_1ae4d2279:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1a87a483d_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1ae4d10ad:;
	}
	_iter_end_1ae4d10ad:;;
	return false;;
}



inline jule::Bool _1a87a6950_is32(jule::Slice<_1a87a4d6b_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ae4d8659:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1a87a4d6b_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1ae4d8659:;
				++it;
				_2307_i++;
				goto _iter_begin_1ae4d8659;
			}
			_iter_end_1ae4d8659:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1a87a4d6b_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1ae4d537b:;
	}
	_iter_end_1ae4d537b:;;
	return false;;
}



inline jule::Bool _1a87a7258_isExcludingLatin(jule::Ptr<_1a87a52de_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a87a483d_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1a87a65cb_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1a87a4d6b_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1a87a6950_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1a87a749a_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a879d738__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1a87a7258_isExcludingLatin(_1a874ae00_Upper, _29512_r);;
}



inline jule::I32 _1a87a7b93_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_1a87a4387_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1a87a4387_CaseRange> _1a87a8017_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1a87a4387_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1a87a4387_CaseRange> _3397_cr = ((jule::Ptr<_1a87a4387_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1ae4e9e0c:;
	}
	_iter_end_1ae4e9e0c:;;
	return nullptr;;
}



inline jule::I32 _1a87a82d1_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1a87a051a_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _1a87a0806_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1a87a0806_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1ae4ee32e:;
	}
	_iter_end_1ae4ee32e:;;
	if (((_3806_lo < _1a87a0806_caseOrbit.len()) && (static_cast<jule::I32>(_1a87a0806_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1a87a0806_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1a87a4387_CaseRange> _3972_cr = _1a87a8017_lookupCaseRange(_37015_r, _1a879d161_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1a87a7b93_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1a87a7b93_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1a87a8754_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1a387dcd5_Builder _186_ss = static__1a387e654_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1a387ecd6_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1ae5133cb:;
	}
	_iter_end_1ae5133cb:;;
	return _1a3880666_Str(&_186_ss);;
}



inline jule::Bool _1a87a8b1c_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1a87a8e91_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1a87a9447_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1a87a8b1c_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1ae51708e:;
	}
	_iter_end_1ae51708e:;;
	return -1LL;;
}



inline jule::I64 _1a87a9788_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1a87a9447_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1a87a9bb7_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1ae5192e4:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1ae518b0c;
					};
				}
			_iter_next_1ae51aa65:;
			}
			_iter_end_1ae51aa65:;;
			return _636_j;;
		}
	_iter_next_1ae518b0c:;
	}
	_iter_end_1ae518b0c:;;
	return -1LL;;
}



inline jule::I64 _1a87aa03b_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1a87a9bb7_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1a87ab823_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1a6969939_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1a87abb97_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1ae522bc1:;
	}
	_iter_end_1ae522bc1:;;
	return -1LL;;
}



inline jule::I64 _1a87ac5c1_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a87abb97_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1ae525ed2:;
	}
	_iter_end_1ae525ed2:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1a87acc64_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1a87a9447_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1ae52b1e6;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1ae52b1e6:;
	}
	_iter_end_1ae52b1e6:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _1a87ad0d8_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _1a87acc64_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _1a87ad45c_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_1a87a9447_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _1a87adec9_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_1a87ac5c1_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I64 _1a87ae34d_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2746_n = 0LL;;
	jule::I64 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2773_j = _1a87a9447_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1ae5313a5;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1ae5313a5:;
	}
	_iter_end_1ae5313a5:;;
	return _2746_n;;
}



inline jule::Str _1a87ae837_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I64 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I64 _2952_m = _1a87ae34d_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1a387dcd5_Builder _3036_ss = static__1a387e654_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I64 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I64 _3063_j = _1a87a9447_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1ae534e8b;
			};
			({
				auto except = _1a387ecd6_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1a387ecd6_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1ae534e8b:;
	}
	_iter_end_1ae534e8b:;;
	({
		auto except = _1a387ecd6_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1a3880666_Str(&_3036_ss);;
}



inline jule::Str _1a87aec66_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _1a87ae837_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _1a87b09e2_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I64 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I64 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a87abb97_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1ae53a722:;
	}
	_iter_end_1ae53a722:;;
	return jule::Str();;
}



inline jule::Str _1a87b0d66_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I64 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I64 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a43239aa_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a87abb97_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1ae53c339:;
	}
	_iter_end_1ae53c339:;;
	return jule::Str();;
}



inline jule::Str _1a87b1471_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _1a87b09e2_TrimLeft(_1a87b0d66_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Str _1a87b17a1_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep) {
	{
		auto _match_expr{ _3879_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ae53dc20:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ae53e43a:;
			{
				return _3879_parts[0LL];;
			}
		}
		_match_end_1ae53e3a2:;
	};
	jule::I64 _3946_n = 0LL;;
	{
		auto expr = &(_3879_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae53e4e5:;
		if (it != expr_end) {
			jule::Str *_3959_part = it;
			{
				_3946_n+=(*(_3959_part)).len();
				(_3946_n)++;
			}
			_iter_next_1ae53e4e5:;
			++it;
			goto _iter_begin_1ae53e4e5;
		}
		_iter_end_1ae53e4e5:;
	};
	_1a387dcd5_Builder _3996_s = static__1a387e654_New((_3946_n + 1LL));;
	({
		auto except = _1a387ecd6_WriteStr(&_3996_s, _3879_parts[0LL]);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:400:2"));
		(except.result);
	});
	{
		auto expr = _3879_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ae541085:;
		if (it != expr_end) {
			jule::Str *_4019_part = it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_3996_s, _38723_sep);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:402:3"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&_3996_s, (*(_4019_part)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:403:3"));
					(except.result);
				});
			}
			_iter_next_1ae541085:;
			++it;
			goto _iter_begin_1ae541085;
		}
		_iter_end_1ae541085:;
	};
	return _1a3880666_Str(&_3996_s);;
}



inline jule::Bool _1a87b2e78_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1ae54398e;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1ae54430d;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1ae54430d;
			};
			return false;;
		}
	_iter_next_1ae54430d:;
	}
	_iter_end_1ae54430d:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1ae54398e:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1ae546e37:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1ae546e37;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1ae546e37;
					};
					return false;;
				};
				jule::I32 _1237_r = _1a87a82d1_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1a87a82d1_SimpleFold(_1237_r);
					}
				_iter_next_1ae54ae5d:;
				}
				_iter_end_1ae54ae5d:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1ae546e37;
				};
				return false;;
			}
			_iter_next_1ae546e37:;
			it += len;
			goto _iter_begin_1ae546e37;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _1a87b450c_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _1a87b72ce_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1a87b6c07_IsPathSep(_1102_originalPath[0LL])) && _1a87b6c07_IsPathSep(_1102_originalPath[1LL]))) {
			return _1a87b4ad4_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1a87b6c07_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1a87b3671_lazyBuff _1286_out = _1a87b3671_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1a87b3de1_append(&_1286_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1a87b6c07_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1ae55b314:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1a87b6c07_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1ae557d6b:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1a87b6c07_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1ae557dd2:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1ae55e1d5:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1a87b6c07_IsPathSep(_1a87b3b38_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1ae55e999:;
									}
									_iter_end_1ae55e999:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1ae55e27e:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1a87b3de1_append(&_1286_out, 47LLU);
									};
									_1a87b3de1_append(&_1286_out, '.');
									_1a87b3de1_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1ae55dd72:;
						};
					}
				}
				else {
					_case_begin_1ae557d05:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1a87b3de1_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1a87b6c07_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1a87b3de1_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1ae55ad2a:;
						}
						_iter_end_1ae55ad2a:;;
					}
				}
				_match_end_1ae5579c5:;
			};
		}
	_iter_next_1ae5573a9:;
	}
	_iter_end_1ae5573a9:;;
	if ((_1286_out._field_w == 0LL)) {
		_1a87b3de1_append(&_1286_out, '.');
	};
	return _1a87b4ad4_FromSlash(_1a87b4177_string(&_1286_out));;
}



inline jule::Str _1a87b4ad4_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1a87b4e25_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1a87b78a6_join(_2269_elem);;
}



inline jule::Str _1a87b51ab_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1a87b6c07_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1ae563371:;
	}
	_iter_end_1ae563371:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1a87b5475_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1a87b7620_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1a87b573e_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1a87b6c07_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1ae564718:;
	}
	_iter_end_1ae564718:;;
	(_25213_path).mut_slice(_1a87b5d5a_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1a87b6c07_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1ae564ecc:;
	}
	_iter_end_1ae564ecc:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1a87b5b18_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1a87b5d5a_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1a87b6c07_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1ae5680bd:;
	}
	_iter_end_1ae5680bd:;;
	jule::Str _2892_dir = _1a87b450c_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1a87b5d5a_VolumeName(jule::Str _30115_path) {
	return _1a87b4ad4_FromSlash(_30115_path.slice(0LL, _1a87b72ce_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1a87b6c07_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1a87b7015_IsAbs(jule::Str _5310_path) {
	return _1a87a8b1c_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1a87b72ce_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1a87b7620_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1a87b7015_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1a87b450c_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = _1a697a4e9_Getwd();;
	if ((_672_wd).empty()) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a87b78a6_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1a87b78a6_join(jule::Slice<jule::Str> _749_elem) {
	{
		auto expr = &(_749_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae570ed8:;
		if (it != expr_end) {
			jule::I64 _756_i = it - expr->begin();
			jule::Str *_759_e = it;
			{
				if (!((*(_759_e))).empty()) {
					return _1a87b450c_Clean(_1a87b17a1_Join(_749_elem.slice(_756_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1ae570ed8:;
			++it;
			_756_i++;
			goto _iter_begin_1ae570ed8;
		}
		_iter_end_1ae570ed8:;
	};
	return jule::Str();;
}



inline jule::Slice<char*> _1a696cec0_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs) {
	jule::Slice<char*> _376_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3640_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3625_s)).len(), (*(_3625_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae5bbbd2:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::Str *_399_arg = it;
			{
				jule::Slice<jule::U8> _407_barg = _1a41aec53_StrToBytes((*(_399_arg)));;
				(*(_3640_bargs))[_396_i]=_407_barg;
				_376_cs[_396_i]=((char*)((&(_407_barg[0LL]))));
			}
			_iter_next_1ae5bbbd2:;
			++it;
			_396_i++;
			goto _iter_begin_1ae5bbbd2;
		}
		_iter_end_1ae5bbbd2:;
	};
	_376_cs[(_376_cs.len() - 1LL)]=nullptr;
	return _376_cs;;
}



inline jule::I64 _1a696d344_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv) {
	jule::Slice<jule::Slice<jule::U8>> _496_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _502_cargv = _1a696cec0_strSliceToCstrSlice(_4824_argv, &(_496_bargs));;
	jule::Slice<jule::U8> _512_s = _1a41aec53_StrToBytes((*(_4812_file)));;
	{
		return execvp(((char*)((&(_512_s[0LL])))), (char*const*)(&(_502_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1a696d575_setenv(jule::Slice<jule::Str>* _5712_envv) {
	;
	{
		auto expr = _5712_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae5c02bd:;
		if (it != expr_end) {
			jule::Str *_599_env = it;
			{
				jule::I64 _603_i = _1a69695b5_FindByteStr((*(_599_env)), '=');;
				if ((_603_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _654_key = _1a41aec53_StrToBytes((*(_599_env)).slice(0LL, _603_i));;
					if ((((*(_599_env)).len() - _603_i) == 1LL)) {
						jule::Str _675_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_675_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _725_val = _1a41aec53_StrToBytes((*(_599_env)).slice((_603_i + 1LL)));;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_725_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1ae5c02bd:;
			++it;
			goto _iter_begin_1ae5c02bd;
		}
		_iter_end_1ae5c02bd:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _1a696e125_cmdErrorFromCode(jule::I64 _14921_code) {
	{
		auto &_match_expr{ _14921_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae5c0e6c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae5c0ed3:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1ae5c5a10:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1ae5c5724:;
	};
}



inline jule::I64 _1a696e334_getLastCmdError(void) {
	return _1a696e125_cmdErrorFromCode(_1a3a989b1_GetLastErrno());;
}



inline void _1a697d750_Exit(jule::I64 _119_code) {
	_1a41c773d_Exit(_119_code);
}



inline jule::Str _1a697d9b4_Executable(void) {
	return _1a422039b_executable();;
}



inline jule::Slice<jule::Str> _1a697db7e_Args(void) {
	return _1a43283c7_args();;
}



inline jule::Exceptional<jule::Str> _1a697e0e1_Getwd(void) {
	jule::Str _362_wd = _1a697a4e9_Getwd();;
	if ((_362_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1a6984976_getLastOsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_362_wd};;
}



inline jule::I64 _1a698446a_getLastFsError(void) {
	jule::I64 _412_err = _1a3a989b1_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae5e2367:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ae5e2268:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ae5e1b91:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ae5e1c07:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae5e1c6d:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae5e1ce5:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1ae5e1d6c:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ae5e1de4:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ae5e2510:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ae5e2587:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ae5e260e:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ae5e2686:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ae5e270d:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ae5e2785:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ae5e280c:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ae5e2884:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ae5e290b:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ae5e2983:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ae5e2a0a:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ae5e2a82:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ae5e2b09:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ae5e2b81:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae5e2c08:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ae5e2c80:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ae5e2d07:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1ae5e2d7e:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1ae5e2e06:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1ae5e2e7d:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1ae5e1a1a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ae5e1b2a:;
	};
}



inline jule::I64 _1a6984976_getLastOsError(void) {
	jule::I64 _92_err = _1a3a989b1_GetLastErrno();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae600782:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ae6001cc:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ae600254:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ae6002cb:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae600353:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae600474:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ae6004da:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1ae5eea28:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ae5e3016:;
	};
}



inline jule::Bool _1a3e447b8_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a3e44a93_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1a3e43dd3_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae622485:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ae622485:;
			++it;
			goto _iter_begin_1ae622485;
		}
		_iter_end_1ae622485:;
	};
	return false;;
}



inline jule::Bool _1a3e44d5c_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1a3e4280a_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae6232cc:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1ae6232cc:;
			++it;
			goto _iter_begin_1ae6232cc;
		}
		_iter_end_1ae6232cc:;
	};
	{
		auto expr = &(_1a3e44598_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae6231cd:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1ae6231cd:;
			++it;
			goto _iter_begin_1ae6231cd;
		}
		_iter_end_1ae6231cd:;
	};
	return false;;
}



inline jule::Str _1a388d61e_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _1a388e0ae_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _1a388d92c_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ae625576:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ae62581d:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ae625884:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1ae6257a7:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ae625741:;
	};
}



inline jule::I64 _1a388dbe6_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae624c5c:;
		if (it != expr_end) {
			jule::I64 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1ae624c5c:;
			++it;
			_3426_i++;
			goto _iter_begin_1ae624c5c;
		}
		_iter_end_1ae624c5c:;
	};
	return -1LL;;
}



inline jule::Str _1a388e0ae_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_1a387dcd5_Builder _3516_s = static__1a387e654_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae6280a1:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I64 _3533_i = _1a388dbe6_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1ae6280a1;
				};
				({
					auto except = _1a387ecd6_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:357:3"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&_3516_s, _1a388d92c_argToStr((*(_3529_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1ae6280a1:;
			++it;
			goto _iter_begin_1ae6280a1;
		}
		_iter_end_1ae6280a1:;
	};
	({
		auto except = _1a387ecd6_WriteStr(&_3516_s, _35017_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:361:2"));
		(except.result);
	});
	return _1a3880666_Str(&_3516_s);;
}



inline jule::Bool _1a389005a_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1a38914bd_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1a38917cb_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1a3891a95_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1a3891dd6_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1a389216c_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1a3892436_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1a3892700_IsUnix(jule::Str _5511_os) {
	return (_1a38917cb_IsDarwin(_5511_os) || _1a3891a95_IsLinux(_5511_os));;
}



inline jule::Bool _1a3892ac9_Is32Bit(jule::Str _5812_arch) {
	return _1a3891dd6_IsI386(_5812_arch);;
}



inline jule::Bool _1a3892d1b_Is64Bit(jule::Str _6112_arch) {
	return (_1a389216c_IsAmd64(_6112_arch) || _1a3892436_IsArm64(_6112_arch));;
}



inline void _1a87b9b72_init(void) {
	jule::Str _256_path = _1a697d9b4_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1a87b91c1_PathWd=({
			auto except = _1a697e0e1_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1a87b8e3a_PathExec=_1a87b5b18_Dir(_256_path);
		_1a87b8bd7_PathStdlib=_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1a87b8e3a_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1a87b94bd_PathApi=_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1a87b8e3a_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1a93b8c8c_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a93b909a_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a93b9364_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a93b96a5_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a93bbc18_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ae69aa80:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a93c2b20_IsInf(_4714_f, 0LL) || _1a93c248d_IsNaN(_4714_f)) {
			_case_begin_1ae69ab29:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ae69a992:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a93c2dd9_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1a93b9364_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1a93b96a5_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1a93c2180_NaN(void) {
	return _1a93b96a5_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1a93c248d_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1a93c2757_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1a93b96a5_F64FromBits(9218868437227405312LLU);;
	};
	return _1a93b96a5_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1a93c2b20_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a93c2dd9_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a93c5293_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a93c48ad_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a93c248d_IsNaN(_1118_x) || _1a93c2b20_IsInf(_1118_x, 1LL)) {
			_case_begin_1ae6d6d52:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ae6d6deb:;
			{
				return _1a93c2180_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ae6d6e62:;
			{
				return _1a93c2757_Inf(-1LL);;
			}
		}
		_match_end_1ae6d6c86:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a93bbc18_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1a93c5293_Abs(jule::F64 _438_x) {
	return _1a93b96a5_F64FromBits((_1a93b9364_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a93cbd16_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1a93c5293_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1ae7499db:;
		}
		_iter_end_1ae7499db:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1a93cc61e_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a93bbc18_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1a93c48ad_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1a9406208_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _1a421888e_StrFromBytes(_1a94067e1_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1a9409b9b_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1a94067e1_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a940502b_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ae944488:;
			{
				_886_bits=static_cast<jule::U64>(_1a93b8c8c_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1a940502b_floatInfo>)((&(_1a94053e4_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae9441be:;
			{
				_886_bits=_1a93b9364_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1a940502b_floatInfo>)((&(_1a94056e1_f64info))));
			}
		}
		else {
			_case_begin_1ae942e7b:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1ae943d4a:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1ae9482d3:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1ae949a21:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1ae949b0e:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1ae9493a0:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1ae949290:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ae9483c1:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1ae94748b:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1ae947634:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1a9408d21_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1a94094a3_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1a9405b75_decimalSlice _1376_digs = _1a9405b75_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1a9414931_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ae94c79e:;
				{
					_8758_prec=_1a9409b9b_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ae94d7b1:;
				{
					_8758_prec=_1a9409b9b_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ae94d827:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1ae94c9be:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ae9507b3:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ae95087e:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1ae95031d:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1ae95042d:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a9413677_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a9413b1c_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1a9406eea_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1a94076c1_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1a9406eea_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1a940502b_floatInfo* _18824_flt) {
	_1a9418715_decimal _1896_d = _1a9418715_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a9418b00_assign(&_1896_d, _1882_mant);
	_1a9418da8_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1a9405b75_decimalSlice _1926_digs = _1a9405b75_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1a9407ade_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1a9405b75_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ae956742:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ae957545:;
				{
					_18733_prec=_1a9409b9b_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ae9575ab:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1ae9573ad:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ae956467:;
				{
					_1a94196c2_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ae9564cd:;
				{
					_1a94196c2_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ae956544:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1a94196c2_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1ae958a96:;
		};
		_1926_digs=_1a9405b75_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1a94076c1_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1a94076c1_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a9405b75_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ae95bc31:;
			{
				return _1a9408183_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ae95bc97:;
			{
				return _1a940866c_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ae95bd0d:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1a9408183_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1a940866c_fmtF(_22418_dst, _22447_neg, _2252_digs, _1a9409b9b_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1ae95bb76:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1a9407ade_roundShortest(_1a9418715_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1a940502b_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1a9418715_decimal _2926_upper = _1a9418715_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a9418b00_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1a9418da8_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1a9418715_decimal _3116_lower = _1a9418715_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a9418b00_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1a9418da8_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1ae967e3a;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1ae96cbdc:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1ae96cc86:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1ae96ccec:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1ae96cb10:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1ae9706a1:;
					{
						_1a94196c2_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1ae97074a:;
					{
						_1a9419161_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1ae9707b1:;
					{
						_1a9419419_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1ae96cd63:;
			};
		}
	_iter_next_1ae967e3a:;
	}
	_iter_end_1ae967e3a:;;
}



inline jule::Slice<jule::U8> _1a9408183_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a9405b75_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1a9409827_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ae974694:;
		}
		_iter_end_1ae974694:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1ae976d7d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1ae977037:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ae9767ea:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ae976696:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1a940866c_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a9405b75_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1a9409827_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ae97ab51:;
		}
		_iter_end_1ae97ab51:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1ae97be60:;
		}
		_iter_end_1ae97be60:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1a9408d21_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1a940502b_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a941d907_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a941d907_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1a94094a3_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1a940502b_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1ae981c56:;
	}
	_iter_end_1ae981c56:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1ae987179:;
		}
		_iter_end_1ae987179:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1ae988be7:;
		}
		_iter_end_1ae988be7:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1a940a839_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1ae986079:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1ae98b69a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ae98acd7:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ae98ab50:;
	};
	return _51113_dst;;
}



inline jule::I64 _1a9409827_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1a9409b9b_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1a940a839_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a8cd8349_ConvError _1a940acac_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a8cd8349_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1ae991e31:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1ae991d65:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a940a839_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1ae9938d3:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a940a839_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1ae9939c1:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a940a839_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1ae993581:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ae99351a:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1ae99343d:;
					};
				};
			}
		}
		else {
			_case_begin_1ae991282:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ae991815:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ae9978e8:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ae9975c9:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ae992b35:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1ae997563:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ae997640:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae9930ec:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ae998a3c:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae9999d8:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1ae99aca3:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1a940a839_lower(_1099_c)) && (_1a940a839_lower(_1099_c) <= 'z'))) {
						_case_begin_1ae99abd7:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1a940a839_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1ae99a7ca:;
						{
							goto _iter_next_1ae9999d8;
						}
					}
					else {
						_case_begin_1ae99a764:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ae99a6dc:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1ae9999d8:;
			++it;
			goto _iter_begin_1ae9999d8;
		}
		_iter_end_1ae9999d8:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a940b1db_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a8cd8349_ConvError __jule_assign_result = _1a940acac_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1a940b692_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a8cd8349_ConvError __jule_assign_result = _1a940acac_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1a940c330_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1a93b96a5_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1a3da1868_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(_4122_man, _1a940d111_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(_4122_man, _1a940d111_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a93b96a5_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a940c71a_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1a93b909a_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1a3da1868_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(_11022_man, _1a940d111_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(_11022_man, _1a940d111_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a93b909a_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1a940e442_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1ae9bea1e:;
	}
	_iter_end_1ae9bea1e:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a940e750_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ae9c3407:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1ae9c347e;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ae9c347e:;
			{
				jule::I64 _887_caseN = _1a940e442_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1a93c2757_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ae9c34e5:;
			{
				if ((_1a940e442_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1a93c2180_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ae9c335d:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a940ea19_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1ae9c8709:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1ae9c8b05:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1ae9c8693:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a940a839_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1ae9cdaa5:;
					{
						goto _iter_next_1ae9cd038;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1ae9cdb4e:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1ae9d2768;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1ae9cd038;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1ae9cdbb5:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1ae9cd038;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ae9cd038;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1a940a839_lower(_1383_c))) && (_1a940a839_lower(_1383_c) <= 'f'))) {
					_case_begin_1ae9cdc2b:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1a940a839_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ae9cd038;
					}
				}
				_match_end_1ae9cd9b7:;
			};
			goto _iter_end_1ae9cd038;
		}
	_iter_next_1ae9cd038:;
	}
	_iter_end_1ae9cd038:;;
	_julec_label_1ae9d2768:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a940a839_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ae9d5e20;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1ae9d5e20:;
		}
		_iter_end_1ae9d5e20:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a9411565_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1a94056e1_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1ae9dde4a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1ae9ddeb1:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a941092c_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a941092c_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1ae9de027:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1a941092c_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ae9ddd5c:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a9411994_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1a94053e4_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1ae9e31b3:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1ae9e3229:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a9410c5c_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a9410c5c_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1ae9e3290:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1a9410c5c_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ae9e30c5:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a8cd8349_ConvError _1a9412038_atofHex(_1a940502b_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a8cd8349_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1ae9e6a68:;
	}
	_iter_end_1ae9e6a68:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ae9e8d45:;
	}
	_iter_end_1ae9e8d45:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ae9e921e:;
	}
	_iter_end_1ae9e921e:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1a940502b_floatInfo_eq(&(*(_55613_flt)), _1a94053e4_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a93b909a_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a93b96a5_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8cd8349_ConvError _1a9412412_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a8cd8349_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a940e750_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a940ea19_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a8cd8349_ConvError __jule_assign_result = _1a9412038_atofHex(&(_1a94053e4_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a9411994_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a940c71a_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a940c71a_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a9418715_decimal _6676_d = _1a9418715_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a94101ce_set(&_6676_d, _1a421833e_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a9410520_floatBits(&_6676_d, &(_1a94053e4_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a93b909a_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError _1a9412654_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a940e750_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a940ea19_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a8cd8349_ConvError __jule_assign_result = _1a9412038_atofHex(&(_1a94056e1_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a9411565_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a940c330_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a940c330_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a9418715_decimal _7246_d = _1a9418715_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a94101ce_set(&_7246_d, _1a421833e_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a9410520_floatBits(&_7246_d, &(_1a94056e1_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a93b96a5_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError _1a94129c8_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a8cd8349_ConvError __jule_assign_result = _1a9412412_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a9412654_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a9412d4c_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8cd8349_ConvError __jule_assign_result = _1a94129c8_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1a9413677_ryuFtoaFixed32(_1a9405b75_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1a3da8e36_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1a9414bb7_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94165ae_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1a9416d62_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1a9414458_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1a9413b1c_ryuFtoaFixed64(_1a9405b75_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1a3da9200_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1a9414bb7_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94169dd_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1a9416d62_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1a9414458_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1a9414458_formatDecimal(_1a9405b75_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1a9413e5d_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aea33ed4:;
	}
	_iter_end_1aea33ed4:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1aea37191:;
	}
	_iter_end_1aea37191:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1aea3cb58:;
	}
	_iter_end_1aea3cb58:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1a9414931_ryuFtoaShortest(_1a9405b75_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a940502b_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a3da345d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1a9415a0e_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a94153b0_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1a9415a0e_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1a9414bb7_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1a940502b_floatInfo_eq(&(*(_26168_flt)), _1a94053e4_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94165ae_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94165ae_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94165ae_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94169dd_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94169dd_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a94169dd_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1a9416d62_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1a9416d62_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1a9416d62_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1a9415a0e_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1a9414bb7_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1a9414e81_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a94153b0_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a940502b_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1a9415a0e_ryuDigits(_1a9405b75_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a941712b_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a941712b_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a941712b_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1a9416180_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1a9416180_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1aea5a99a:;
		}
		_iter_end_1aea5a99a:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1a9416180_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1aea5b55b:;
	}
	_iter_end_1aea5b55b:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1aea5d382:;
	}
	_iter_end_1aea5d382:;;
}



inline void _1a9416180_ryuDigits32(_1a9405b75_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1aea60c25;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1aea60c25:;
	}
	_iter_end_1aea60c25:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1aea66cd6:;
	}
	_iter_end_1aea66cd6:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a94165ae_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1a940d111_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a9414e81_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a94169dd_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1a940d111_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a9414e81_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3dab796_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a3da9e8c_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a9416d62_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1aea74d5a:;
	}
	_iter_end_1aea74d5a:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a941712b_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1a941a063_trim(_1a9418715_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1aea782d1:;
	}
	_iter_end_1aea782d1:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1a941a34e_rightShift(_1a9418715_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1aea7b4c1:;
				}
				_iter_end_1aea7b4c1:;;
				goto _iter_end_1aea79dd7;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1aea79dd7:;
	}
	_iter_end_1aea79dd7:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1aea7c8bd:;
	}
	_iter_end_1aea7c8bd:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1aea7ec66:;
	}
	_iter_end_1aea7ec66:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1a941a063_trim(_28420_a);
}



inline jule::Bool _1a941a805_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1aea829a0:;
	}
	_iter_end_1aea829a0:;;
	return false;;
}



inline void _1a941aaad_leftShift(_1a9418715_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1a941812c_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1a941a805_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1a941812c_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1aea85ec0:;
	}
	_iter_end_1aea85ec0:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1aea88555:;
	}
	_iter_end_1aea88555:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1a941a063_trim(_35219_a);
}



inline jule::Bool _1a941ae32_shouldRoundUp(_1a9418715_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1a941c609_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1a941d0cc_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a941d907_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1a941c9c2_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1a941d0cc_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a941d907_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1a941cc8b_Itoa(jule::I64 _819_i) {
	return _1a941c9c2_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1a941d0cc_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1a421888e_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1a941d363_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1a941d907_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1acd7cc9c:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1acd7e85e:;
				}
				_iter_end_1acd7e85e:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1a941d363_isPowerOfTwo(_10541_base)) {
			_case_begin_1acd7d4a6:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1a3da27ae_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1acd87416:;
				}
				_iter_end_1acd87416:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1acd7becc:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1acd7ca7c:;
				}
				_iter_end_1acd7ca7c:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1acd7c20d:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1a421888e_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1a9420112_Throw(jule::Str _910_msg) {
	jule::println(_1ad792293_toStr(_910_msg));
	_1a697d750_Exit(1LL);
}



inline jule::Bool _1ab6a5c25_IsUnaryOp(jule::U64 _33314_id) {
	{
		auto expr = &(_1ab607605_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb8e9ad:;
		if (it != expr_end) {
			jule::U64 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1aeb8e9ad:;
			++it;
			goto _iter_begin_1aeb8e9ad;
		}
		_iter_end_1aeb8e9ad:;
	};
	return false;;
}



inline jule::Bool _1ab6a6033_IsBinOp(jule::U64 _34312_id) {
	{
		auto expr = &(_1ab6078d0_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb902a5:;
		if (it != expr_end) {
			jule::U64 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1aeb902a5:;
			++it;
			goto _iter_begin_1aeb902a5;
		}
		_iter_end_1aeb902a5:;
	};
	return false;;
}



inline jule::Bool _1ab6a663d_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1ab6a68c4_IsRawStr(_36310_k)));;
}



inline jule::Bool _1ab6a68c4_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1ab6a6b8d_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1ab6a7573_IsFloat(jule::Str _37912_k) {
	if (_1a87a8b1c_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1a87adec9_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1a87adec9_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1ab6a783c_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1ab6a7dc0_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1ab6a8189_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1ab6a871c_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1ab6073e6_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb97895:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1aeb97895:;
			++it;
			goto _iter_begin_1aeb97895;
		}
		_iter_end_1aeb97895:;
	};
	return false;;
}



inline jule::Bool _1ab6a8c17_IsLetter(jule::I32 _42813_r) {
	return _1a873ab59_IsLetter(_42813_r);;
}



inline jule::Bool _1ab6a918a_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1ab6ad3d1_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeb99d1a:;
		if (it != expr_end) {
			_1ab6acee6_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1aeb99d1a:;
			++it;
			goto _iter_begin_1aeb99d1a;
		}
		_iter_end_1aeb99d1a:;
	};
	return false;;
}



inline jule::Bool _1ab6a9454_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1ab6a971d_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1ab6a99d7_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1ab6a9ca1_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1aeb9bd50:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1aeb9bde9:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1aeb9be71:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aeb9b712:;
			{
				return false;;
			}
		}
		_match_end_1aeb9b811:;
	};
}



inline jule::Bool _1ab6aa06a_IsAssign(jule::U64 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U64>(1LLU)) || (_48213_id == static_cast<jule::U64>(27LLU))) || (_48213_id == static_cast<jule::U64>(30LLU))) || (_48213_id == static_cast<jule::U64>(32LLU))) || (_48213_id == static_cast<jule::U64>(24LLU))) || (_48213_id == static_cast<jule::U64>(74LLU))) || (_48213_id == static_cast<jule::U64>(62LLU))) || (_48213_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1ab6aa334_IsPostfixOp(jule::U64 _49416_id) {
	{
		auto expr = &(_1ab69e9bb_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeba01a5:;
		if (it != expr_end) {
			jule::U64 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1aeba01a5:;
			++it;
			goto _iter_begin_1aeba01a5;
		}
		_iter_end_1aeba01a5:;
	};
	return false;;
}



inline jule::Bool _1ab6aa5ed_IsAssignOp(jule::U64 _50415_id) {
	if (_1ab6aa334_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1ab69eca7_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeba0628:;
		if (it != expr_end) {
			jule::U64 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1aeba0628:;
			++it;
			goto _iter_begin_1aeba0628;
		}
		_iter_end_1aeba0628:;
	};
	return false;;
}



inline _1a388d1ac_Log _1ab6adc50_makeErr(jule::I64 _10112_row, jule::I64 _10122_col, jule::Ptr<_1ab6aadb2_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1a388d61e_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1ab6ae118_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aebaae3b:;
		if (it != expr_end) {
			jule::I64 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1aebaae3b:;
			++it;
			_1156_i++;
			goto _iter_begin_1aebaae3b;
		}
		_iter_end_1aebaae3b:;
	};
	return true;;
}



inline jule::Str _1ab6ae48c_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I64 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1ab6a9454_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1aebae24c;
			};
		}
	_iter_next_1aebae24c:;
	}
	_iter_end_1aebae24c:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1ab6ae855_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I64 _15728_i) {
	return _1ab6ae48c_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1ab6aebc9_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I64 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1aebb10b7:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1ab6a9454_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1aebb1da9:;
					{
						goto _iter_next_1aebb08e1;
					}
				}
				else if (_1ab6b155a_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1aebb1e53:;
					{
						return _1ab6ae855_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1aebb1d32:;
					{
						goto _iter_end_1aebb08e1;
					}
				}
				_match_end_1aebb1cbb:;
			};
		}
	_iter_next_1aebb08e1:;
	}
	_iter_end_1aebb08e1:;;
	return jule::Str();;
}



inline jule::Str _1ab6b004d_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I64 _18236_i) {
	_18236_i+=2LL;
	return _1ab6ae48c_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1ab6b03c2_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I64 _18735_i) {
	(_18735_i)++;
	return _1ab6ae48c_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1ab6b0856_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I64 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1a421888e_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1a421888e_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1ab6ae48c_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1ab6a9454_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1aebb4b8c;
			};
		}
	_iter_next_1aebb4b8c:;
	}
	_iter_end_1aebb4b8c:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1ab6b0a98_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2186_i = 0LL;;
	_julec_label_1aebb6d7b:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1aebb7ae6:;
					{
						__jule_func_result = _1ab6b0856_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1aebb7b90:;
					{
						goto _iter_next_1aebb6ebe;
					}
				}
				else if (_1ab6b11d6_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1aebb7c06:;
					{
						__jule_func_result = _1ab6ae48c_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ab6a9454_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1aebb7c6c:;
					{
						goto _iter_end_1aebb6ebe;
					}
				}
				_match_end_1aebb7a19:;
			};
		}
	_iter_next_1aebb6ebe:;
	}
	_iter_end_1aebb6ebe:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1ab6b0d62_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ab6ae118_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1ab6a971d_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1aebba599;
			};
		}
	_iter_next_1aebba599:;
	}
	_iter_end_1aebba599:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1ab6b11d6_isFloatFmtE(jule::U8 _26216_b, jule::I64 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1ab6b155a_isFloatFmtP(jule::U8 _26616_b, jule::I64 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1ab6b18ce_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I64 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1aebbd38d:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1ab6a9454_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1aebbe24b:;
					{
						goto _iter_next_1aebbd06e;
					}
				}
				else if (_1ab6b155a_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1aebbe2e5:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1aebbe1c4:;
					{
						goto _iter_end_1aebbd06e;
					}
				}
				_match_end_1aebbe15d:;
			};
		}
	_iter_next_1aebbd06e:;
	}
	_iter_end_1aebbd06e:;;
	return false;;
}



inline jule::Bool _1ab6b1c53_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I64 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1aebc037e:;
			{
				goto _case_begin_1aebbd998;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1aebbd998:;
			{
				goto _case_begin_1aebc0417;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1aebc0417:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aebbd8ee:;
			{
				return true;;
			}
		}
		_match_end_1aebbd822:;
	};
}



inline jule::Bool _1ab6b20c7_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I64 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1aebc1ea7:;
			{
				goto _case_begin_1aebc201d;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1aebc201d:;
			{
				goto _case_begin_1aebc2084;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1aebc2084:;
			{
				goto _case_begin_1aebc210b;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1aebc210b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aebc1ddb:;
			{
				return true;;
			}
		}
		_match_end_1aebc198a:;
	};
}



inline jule::Str _1ab6b25c2_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I64 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ab6b0856_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1ab6b11d6_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1ab6ae48c_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1ab6a99d7_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1aebc6561;
			};
		}
	_iter_next_1aebc6561:;
	}
	_iter_end_1aebc6561:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1ab6b279d_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3706_i = 2LL;;
	_julec_label_1aebca224:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1ab6b1c53_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1aebcad90:;
					{
						__jule_func_result = _1ab6b03c2_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab6b20c7_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1aebcae39:;
					{
						__jule_func_result = _1ab6b004d_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab6b155a_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1aebcaea0:;
					{
						__jule_func_result = _1ab6ae855_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab6b18ce_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1aebcb016:;
					{
						__jule_func_result = _1ab6aebc9_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1ab6a9ca1_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1aebcb07c:;
					{
						goto _iter_end_1aebca2bd;
					}
				}
				_match_end_1aebcaca2:;
			};
		}
	_iter_next_1aebca2bd:;
	}
	_iter_end_1aebca2bd:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1ab6b2b00_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I64 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1ab6a9ca1_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1aebcc91e:;
	}
	_iter_end_1aebcc91e:;;
	__jule_func_result=_1a421888e_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1ab6b2db9_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1ab6b2b00_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1ab6b3183_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1ab6b2b00_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1ab6b344c_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1ab6b2b00_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1ab6b3716_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ab6a99d7_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1ab6a99d7_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1ab6a99d7_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1a421888e_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a388d1ac_Log> _1ab6bd567_Lex(jule::Ptr<_1ab6aadb2_Fileset> _80712_f, jule::I64 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1ab6b3e86_lex _8126_lex = _1ab6b3e86_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1ab6a54d8_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1a388d1ac_Log>(nullptr)};;
	_1ab6b6cd0_newLine(&_8126_lex);
	_1ab6b4aad_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1ab079c37_lshiftUnsig(_1ab070c61_Const* _58821_c, _1ab070c61_Const* _58832_x) {
	jule::U64 _5892_l = _1ab07367b_AsU64(_58821_c);;
	jule::U64 _5902_r = _1ab07367b_AsU64(_58832_x);;
	_1ab073e73_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1ab07a067_rshiftUnsig(_1ab070c61_Const* _59421_c, _1ab070c61_Const* _59432_x) {
	jule::U64 _5952_l = _1ab07367b_AsU64(_59421_c);;
	jule::U64 _5962_r = _1ab07367b_AsU64(_59432_x);;
	_1ab073e73_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1ab10ee43_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1aecc463c:;
			{
				return _1ab10e45e_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1aecc8069:;
			{
				return _1ab10e717_SysUint;;
			}
		}
		else {
			_case_begin_1aecc5143:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aecc829a:;
	};
}



inline jule::I64 _1ab11020c_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1aecc9037:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1aecc9499:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aecc9510:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aecc909d:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1aecc9114:;
			{
				return _1ab10e1ea_BitSize;;
			}
		}
		else {
			_case_begin_1aecc93ab:;
			{
				return -1LL;;
			}
		}
		_match_end_1aecc8e7c:;
	};
}



inline jule::Str _1ab11054d_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aeccc48b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aeccc28d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aeccc304:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aeccc502:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1aeccc1a0:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aeccbc82:;
	};
}



inline jule::Str _1ab1107d4_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aecd3aad:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aecd3b24:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aecd3b8a:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aecd3c01:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1aeccc579:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aeccd866:;
	};
}



inline jule::Str _1ab110a9d_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aecd55c6:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aecd5395:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1aeccc876:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aecd4e88:;
	};
}



inline jule::Bool _1ab1116a3_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1a9412d4c_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1ab11196c_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aecda510:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aecd8a3b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aecd8970:;
	};
}



inline jule::I64 _1ab111c36_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1aecdb258:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1aecda7a7:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1aecda81d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aecda730:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aecdad4b:;
	};
}



inline jule::I64 _1ab112000_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1aecdcd09:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1aecdbee5:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1aecdc05b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aecdbe7e:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aecdc3d0:;
	};
}



inline void _1ab112198_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a87b9a2e_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1aecdd733:;
				{
					_1ab10e1ea_BitSize=64LLU;
					_1ab10e45e_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1ab10e717_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1aecddd60:;
				{
					_1ab10e1ea_BitSize=32LLU;
					_1ab10e45e_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1ab10e717_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1aecddc72:;
		};
	};
}



inline void _1ab11231e_init(void) {
	_1ab112198_UpdateTarget();
}



inline jule::I64 _1ab115dd3_MinI(jule::Str _6113_k) {
	_6113_k=_1ab10ee43_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1aece12d5:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1aece15e3:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1aece1659:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1aece16c0:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1aecdd18e:;
			{
				return 0LL;;
			}
		}
		_match_end_1aecdd25a:;
	};
}



inline jule::I64 _1ab1161e1_MaxI(jule::Str _7913_k) {
	_7913_k=_1ab10ee43_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1aece2c10:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1aece3073:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1aece30ea:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1aece3172:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1aece266b:;
			{
				return 0LL;;
			}
		}
		_match_end_1aece2605:;
	};
}



inline jule::U64 _1ab1164aa_MaxU(jule::Str _9713_k) {
	_9713_k=_1ab10ee43_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1aece4690:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1aece4a03:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1aece4a7a:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1aece4b02:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1aece40eb:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aece4085:;
	};
}



inline jule::F64 _1ab1167eb_Min(jule::Str _11512_k) {
	_11512_k=_1ab10ee43_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1ab115dd3_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aece71cb:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aece662b:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aece6890:;
			{
				return 0LL;;
			}
		}
		_match_end_1aece65b5:;
	};
}



inline jule::F64 _1ab116a82_Max(jule::Str _13312_k) {
	_13312_k=_1ab10ee43_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1ab1161e1_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1ab1164aa_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aece96d9:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aece8ab2:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aece8d9d:;
			{
				return 0LL;;
			}
		}
		_match_end_1aece8a4b:;
	};
}



inline jule::Bool _1ab117ba4_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1ab117eb2_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1ab11827b_IsInt(jule::Str _4610_k) {
	return (_1ab117ba4_IsSigInt(_4610_k) || _1ab117eb2_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ab1185bc_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1ab118853_IsNum(jule::Str _5610_k) {
	return (_1ab11827b_IsInt(_5610_k) || _1ab1185bc_IsFloat(_5610_k));;
}



inline jule::Bool _1ab118b1c_IsSigNum(jule::Str _6113_k) {
	return (_1ab117ba4_IsSigInt(_6113_k) || _1ab1185bc_IsFloat(_6113_k));;
}



inline jule::Bool _1ab87ea03_FindModuleFile(jule::Slice<_1a68ca14c_Dir>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aed005ad:;
		if (it != expr_end) {
			_1a68ca14c_Dir *_149_d = it;
			{
				if (((!(_1a69700d2_IsDir(&(*(_149_d))._field_Stat))) && (*(_149_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1aed005ad:;
			++it;
			goto _iter_begin_1aed005ad;
		}
		_iter_end_1aed005ad:;
	};
	return false;;
}



inline jule::Str _1ab87ec12_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<_1a68ca14c_Dir> _277_dirents = ({
				auto except = static__1a87b8038_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aed009dc;
				} jule::Slice<_1a68ca14c_Dir>(nullptr);});
			});;
			jule::Bool _313_exist = _1ab87ea03_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1a87b5b18_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1aed009dc;
			};
		}
	_iter_next_1aed009dc:;
	}
	_iter_end_1aed009dc:;;
	return jule::Str();;
}



inline jule::Slice<_1a388d1ac_Log> _1ab87eecb_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__1a68d0cbd_Read(_1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1a388d1ac_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1a87b1471_Trim(_1a42185c5_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1a388d1ac_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1ab88076d_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1a87a749a_IsUpper(_142_r);;
}



inline jule::Bool _1ab8dd7cb_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1ab8c5263_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1ab8e114c_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1ab8e0701_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1ab8e0a42_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aed0cb81:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1aed0cb81;
				};
			}
			_iter_next_1aed0cb81:;
			++it;
			goto _iter_begin_1aed0cb81;
		}
		_iter_end_1aed0cb81:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1ab8e14e3_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1a4324505_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1aed0dd4c:;
	}
	_iter_end_1aed0dd4c:;;
	return _1a421888e_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1ab8e0cc8_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aed12081:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aed1278a:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aed12801:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aed12867:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aed128cd:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aed12955:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aed129cc:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aed12a54:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aed12acb:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aed12b53:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aed12603:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1ab8e114c_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1ab8e0cc8_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1aed17790:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1a940b1db_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aed17a9d:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1a940b1db_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aed17b25:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a940b1db_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1aed16393:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a940b1db_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1aed165d5:;
	};
}



inline void _1ab8e14e3_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1ab8e114c_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1a4324505_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1ab9a69c6_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1aed20204:;
	}
	_iter_end_1aed20204:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ab9ad56b_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a4323119_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1aed22b85:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aed22beb:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1aed22d50:;
			};
		}
	_iter_next_1aed21e09:;
	}
	_iter_end_1aed21e09:;;
	return nullptr;;
}



inline void _1ab9ad857_FmtByDefault(_1a387dcd5_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1a387ecd6_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1aed221c3:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a9406208_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type138)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aed24c86:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a9406208_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1aed24cec:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c9c2_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type139)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1aed24d63:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c9c2_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type140)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aed24dc9:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c9c2_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aed24505:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c9c2_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1aed2457c:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c609_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type137)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1aed24604:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c609_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type141)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1aed2513d:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c609_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type142)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aed251a4:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1a941c609_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aed2521a:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aed25281:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1a387ecd6_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1a387ecd6_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1aed23e61:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_4822_buf, _1ad7900b5_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1aed23dea:;
	};
}



inline void _1ab9adc75_applyFmtByDefault(_1a387dcd5_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1ab9ad857_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1ab9ae193_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1a387dcd5_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1ab9adc75_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1a387ecd6_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a387e995_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1ab9ae517_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1a421833e_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1ab9a69c6_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_1a387dcd5_Builder _1276_buf = static__1a387e654_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1ab9a69c6_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1a387e995_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1ab9ad56b_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1aed3227c;
			};
			_1ab9ae193_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1a387e995_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1aed3227c;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1aed3227c:;
	}
	_iter_end_1aed3227c:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1a387e995_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1a3881117_Buf(&_1276_buf);;
}



inline jule::Str _1ab9b16b2_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1a421888e_StrFromBytes(_1ab9ae517_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1ab0898e5_Fn> _1aa776643_runtimeFindFn(jule::Ptr<_1ab866578_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1ab0898e5_Fn> _126_f = _1ab867b84_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1a37a2577_Struct> _1aa776b93_runtimeFindStruct(jule::Ptr<_1ab866578_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1a37a2577_Struct> _256_f = _1ab867788_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1ab08ec80_parameterUsesGenerics(jule::Ptr<_1ab08b84d_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _39546_generics) {
	if (_1ab088570_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ab9559b9_kindUsesGenerics(&((*((*(_39531_p))))._field_Type), _39546_generics);;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82bdbd_buildAsComptimeMethodData(jule::Ptr<_1ab08c9a3_FnIns>* _203035_f) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab82c0cc_findComptimePackage(jule::Ptr<_1ab883573_sema>* _203829_s) {
	return _1ab883a4b_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>>((void*)__jule_anon1b0141305, nullptr, nullptr));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82c451_buildComptimeTypeInfoData(jule::Ptr<_1ab883573_sema>* _204435_s, jule::Ptr<_1ab939816_Type>* _204450_t) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab882de1_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab82c792_buildComptimeValue(jule::Ptr<_1ab906a8b_Data>* _205228_d) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab130ccc_comptimeValue>(_1ab130ccc_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Str _1ab8305b9_toStrConstraints(jule::Ptr<_1ab937e30_InsGeneric> _14321_g) {
	_1a387dcd5_Builder _1446_sb = static__1a387e654_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0334b8b:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1ab939816_Type> *_1459_c = it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_1446_sb, _1ab939c12_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1a387ecd6_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1b0334b8b:;
			++it;
			_1456_i++;
			goto _iter_begin_1b0334b8b;
		}
		_iter_end_1b0334b8b:;
	};
	return _1a3880666_Str(&_1446_sb);;
}



inline jule::Bool _1ab830982_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ab939816_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1b0336a4a:;
			{
				jule::Ptr<_1ab94292e_Prim> _1573_prim = _1ab93bebc_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1ab118b1c_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1b0336ab1:;
			{
				jule::Ptr<_1ab94292e_Prim> _1633_prim = _1ab93bebc_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1ab117eb2_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1b0336b27:;
			{
				jule::Ptr<_1ab94292e_Prim> _1693_prim = _1ab93bebc_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1ab1185bc_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1b0336b9e:;
			{
				jule::Ptr<_1ab94292e_Prim> _1753_prim = _1ab93bebc_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1ab118853_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1b0336d7a:;
			{
				return _1ab93b1ec_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1b0336de1:;
			{
				return (!(_1ab93b1ec_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1b0336e57:;
			{
				return _1ab93ae66_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1b0336ebd:;
			{
				return _1ab93b483_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1b0335461:;
			{
				return false;;
			}
		}
		_match_end_1b03368e6:;
	};
}



inline jule::Bool _1ab830c4b_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ab82d980_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b033c9c9:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1b033c9c9:;
			++it;
			goto _iter_begin_1b033c9c9;
		}
		_iter_end_1b033c9c9:;
	};
	return false;;
}



inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab833633_newScopeCheckerBase(jule::Ptr<_1ab883573_sema>* _3229_s, jule::Ptr<_1ab08c9a3_FnIns> _3243_owner) {
	return jule::new_ptr<_1ab83ce67_scopeChecker>(_1ab83ce67_scopeChecker{._field_calledFrom=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1ab83ce67_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1ab090be8_SymTab>(_1ab090be8_SymTab{._field_File=jule::Ptr<_1ab6aadb2_Fileset>(nullptr), ._field_Passes=jule::Slice<_1ab855a51_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ab866578_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a37a2577_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1ab0898e5_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1ab095109_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1ab0977b0_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1ab098eba_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ab8315ba_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_tree=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1ab8a7289_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1ab83be77_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1ab83ce67_scopeChecker> _1ab8339eb_newScopeChecker(jule::Ptr<_1ab883573_sema>* _4025_s, jule::Ptr<_1ab08c9a3_FnIns> _4039_owner) {
	jule::Ptr<_1ab83ce67_scopeChecker> _416_base = _1ab833633_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab83be77_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1ab83be77_scopeLabel> _1ab833d70_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1ab83ce67_scopeChecker> _5037_scope) {
	jule::Ptr<_1ab83be77_scopeLabel> _516_label = _1ab842334_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*_5037_scope.alloc)._field_parent;
			_516_label=_1ab842334_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1b0358451:;
	}
	_iter_end_1b0358451:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1ab906a8b_Data>> _1ab8341b1_getDatasFromTupleData(jule::Ptr<_1ab906a8b_Data>* _6231_d) {
	if ((_1ab93dce3_Tup((*((*(_6231_d))))._field_Type.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1b0362a54:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1ab082c0c_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1b035a299:;
				{
					jule::Ptr<_1ab947a22_Tuple> _688_t = _1ab93dce3_Tup((*((*(_6231_d))))._field_Type);;
					jule::Slice<jule::Ptr<_1ab906a8b_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab906a8b_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b03618ee:;
						if (it != expr_end) {
							jule::Ptr<_1ab939816_Type> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ab906a8b_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})); };
							}
							_iter_next_1b03618ee:;
							++it;
							goto _iter_begin_1b03618ee;
						}
						_iter_end_1b03618ee:;
					};
					return _698_r;;
				}
			}
			_match_end_1b035a233:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab906a8b_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1ab834931_checkMut(jule::Ptr<_1ab883573_sema>* _9718_s, jule::Ptr<_1ab906a8b_Data>* _9729_left, jule::Ptr<_1ab906a8b_Data> _9746_right, jule::Ptr<_1ab6a54d8_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1b036b068:;
			{
				_1ab886477_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1ab93b1ec_Mutable((*_9746_right.alloc)._field_Type.ptr()))) {
			_case_begin_1b036b475:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ab93d540_Struct((*(_9746_right))._field_Type) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ab886477_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_9746_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b036b002:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b036ae47:;
	};
}



inline jule::Bool _1ab834e1a_checkAssign(jule::Ptr<_1ab883573_sema>* _11621_s, jule::Ptr<_1ab906a8b_Data>* _11636_left, jule::Ptr<_1ab906a8b_Data> _11653_right, jule::Ptr<_1ab6a54d8_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab08c9a3_FnIns> _1172_f = _1ab93d2a9_Fn((*((*(_11636_left))))._field_Type.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1ab886477_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ab9074c6_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1b0371c0b:;
			{
				_1ab886477_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1ab8867da_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1b0371ca5:;
			{
				_1ab886477_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ab834931_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1b0371d2c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b0371b95:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b0371a41:;
	};
}



inline jule::Bool _1ab8352e4_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b0359cb0:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1a3790565_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b0374390:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b037425d:;
			{
				return false;;
			}
		}
		_match_end_1b03741e7:;
	};
}



inline jule::Bool _1ab835536_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type43) {
			_case_begin_1b0374406:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b0379494:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1ab906a8b_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b038667c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b0385c75:;
						{
							return false;;
						}
					}
					_match_end_1b0385c0e:;
				};
			}
		}
		else {
			_case_begin_1b0379153:;
			{
				return false;;
			}
		}
		_match_end_1b037986d:;
	};
}



inline jule::U64 _1ab8506b6_removeEqFromOp(jule::U64 _214019_op) {
	{
		auto &_match_expr{ _214019_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b038700c:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b0389460:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b03894c6:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b038734d:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b03873b4:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b038742a:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b0387491:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b038aa5a:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b038aac1:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b038ab37:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1b037a8e6:;
			{
				return _214019_op;;
			}
		}
		_match_end_1b03890ca:;
	};
}



inline void _1ab8508e7_makeComptimeRange(jule::Ptr<_1ab906a8b_Data>* _216927_d) {
	{
		
		if ((_1ab93e310_comptimeStructFields((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038e5db:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab93e310_comptimeStructFields((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else if ((_1ab93e82c_comptimeEnumFields((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038e4ed:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab93e82c_comptimeEnumFields((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else if ((_1ab9405ec_comptimeTypeInfos((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038e564:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab9405ec_comptimeTypeInfos((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else if ((_1ab93ed49_comptimeParams((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038bc48:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab93ed49_comptimeParams((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else if ((_1ab940b19_comptimeStatics((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038bcae:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab940b19_comptimeStatics((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else if ((_1ab941b70_comptimeFiles((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038bd25:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab941b70_comptimeFiles((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else if ((_1ab941653_comptimeDecls((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b038eaa3:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab119cc7_comptimeRange>(_1ab119cc7_comptimeRange{._field_kind=jule::Trait(_1ab941653_comptimeDecls((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1ab119aa7_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1b038bb49:;
			{
				(*((*(_216927_d))))._field_Decl=true;
			}
		}
		_match_end_1b038e1ac:;
	};
}



inline jule::Bool _1ab850bb1_canComptimeMatch(jule::Ptr<_1ab906a8b_Data>* _219226_d) {
	if ((!(_1ab90524e_isGoodValueToInfer(_219226_d)))) {
		return false;;
	};
	return (_1ab9074c6_IsConst((*(_219226_d)).ptr()) || (_1ab940883_comptimeTypeInfo((*((*(_219226_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1ab850e7a_stmtIsDef(jule::Any* _220015_stmt) {
	{
		auto &_match_expr{ (*(_220015_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b0398947:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b039b032:;
			{
				jule::Ptr<_1ab839bbc_MultiAssign> _22053_ma = (*(_220015_stmt)).cast_ptr<_1ab839bbc_MultiAssign>(&__jule_any_type43);;
				return ((*(_22053_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1b039aae2:;
			{
				return false;;
			}
		}
		_match_end_1b039aa59:;
	};
}



inline jule::I64 _1ab8512ee_countMatchType(jule::Ptr<_1ab83a409_Match>* _221220_m, jule::Ptr<_1ab939816_Type>* _221232_t) {
	jule::I64 _22136_n = 0LL;;
	_julec_label_1b039c693:;
	{
		auto expr = &((*((*(_221220_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b039cab1:;
		if (it != expr_end) {
			jule::Ptr<_1ab83ae32_Case> *_22159_c = it;
			{
				if (((*(_22159_c)) == nullptr)) {
					goto _iter_next_1b039cab1;
				};
				{
					auto expr = &((*((*(_22159_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b039d8b4:;
					if (it != expr_end) {
						jule::Ptr<_1ab906a8b_Data> *_221910_expr = it;
						{
							if (((*(_221910_expr)) == nullptr)) {
								goto _iter_end_1b039cab1;
							};
							if (_1ab93a053_Equal((*(_221232_t)), (*((*(_221910_expr))))._field_Model.cast_ptr<_1ab939816_Type>(&__jule_any_type86))) {
								(_22136_n)++;
							};
						}
						_iter_next_1b039d8b4:;
						++it;
						goto _iter_begin_1b039d8b4;
					}
					_iter_end_1b039d8b4:;
				};
			}
			_iter_next_1b039cab1:;
			++it;
			goto _iter_begin_1b039cab1;
		}
		_iter_end_1b039cab1:;
	};
	return _22136_n;;
}



inline jule::Ptr<_1ab942027_TypeSym> _1ab855db4_buildType(jule::Ptr<_1ab6c0877_TypeDecl> _6818_t) {
	if ((_6818_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=_6818_t, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr)});;
}



inline jule::Ptr<_1ab907c13_Value> _1ab8561c2_buildExpr(jule::Ptr<_1ab6c4bab_Expr> _7718_expr) {
	if ((_7718_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=_7718_expr, ._field_Data=jule::Ptr<_1ab906a8b_Data>(nullptr)});;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab85648b_buildTypeAlias(jule::Ptr<_1a37986b1_TypeAliasDecl> _8623_decl) {
	return jule::new_ptr<_1ab938a24_TypeAlias>(_1ab938a24_TypeAlias{._field_Scope=(*(_8623_decl))._field_Scope, ._field_Public=(*_8623_decl.alloc)._field_Public, ._field_Binded=(*_8623_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8623_decl.alloc)._field_Token, ._field_Ident=(*_8623_decl.alloc)._field_Ident, ._field_TypeSym=_1ab855db4_buildType((*_8623_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a379e651_Field> _1ab8567cc_buildField(jule::Ptr<_1a379bcd0_FieldDecl> _9719_decl) {
	return jule::new_ptr<_1a379e651_Field>(_1a379e651_Field{._field_Owner=jule::Ptr<_1a37a2577_Struct>(nullptr), ._field_Token=(*(_9719_decl))._field_Token, ._field_Public=(*_9719_decl.alloc)._field_Public, ._field_Mutable=(*_9719_decl.alloc)._field_Mutable, ._field_Ident=(*_9719_decl.alloc)._field_Ident, ._field_TypeSym=_1ab855db4_buildType((*_9719_decl.alloc)._field_Kind), ._field_Default=(*_9719_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a379e651_Field>> _1ab856a63_buildFields(jule::Slice<jule::Ptr<_1a379bcd0_FieldDecl>>* _10821_decls) {
	jule::Slice<jule::Ptr<_1a379e651_Field>> _1096_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a379e651_Field>>::alloc(0LL, (*(_10821_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a379e651_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10821_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06119a1:;
		if (it != expr_end) {
			jule::Ptr<_1a379bcd0_FieldDecl> _11014_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a379e651_Field>> &__jule_push_dest = _1096_fields; __jule_push_dest.push(_1ab8567cc_buildField(_11014_decl)); };
			}
			_iter_next_1b06119a1:;
			++it;
			goto _iter_begin_1b06119a1;
		}
		_iter_end_1b06119a1:;
	};
	return _1096_fields;;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab856d2c_buildStruct(jule::Ptr<_1a379c6c6_StructDecl> _11620_decl) {
	return jule::new_ptr<_1a37a2577_Struct>(_1a37a2577_Struct{._field_sema=jule::Ptr<_1ab883573_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1a37a2577_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1a37a2577_Struct>>(nullptr), ._field_Token=(*(_11620_decl))._field_Token, ._field_Ident=(*_11620_decl.alloc)._field_Ident, ._field_Fields=_1ab856a63_buildFields(&((*_11620_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1ab0898e5_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr), ._field_Public=(*_11620_decl.alloc)._field_Public, ._field_Binded=(*_11620_decl.alloc)._field_Binded, ._field_Directives=(*_11620_decl.alloc)._field_Directives, ._field_Generics=(*_11620_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1ab095109_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a37a53d2_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1ab087e21_Param> _1ab8570e6_buildParam(jule::Ptr<_1a3792402_ParamDecl> _12819_decl) {
	return jule::new_ptr<_1ab087e21_Param>(_1ab087e21_Param{._field_Token=(*(_12819_decl))._field_Token, ._field_Mutable=(*_12819_decl.alloc)._field_Mutable, ._field_Variadic=(*_12819_decl.alloc)._field_Variadic, ._field_Reference=(*_12819_decl.alloc)._field_Reference, ._field_TypeSym=_1ab855db4_buildType((*_12819_decl.alloc)._field_Kind), ._field_Ident=(*_12819_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ab087e21_Param>> _1ab8574c0_buildParams(jule::Slice<jule::Ptr<_1a3792402_ParamDecl>>* _13921_decls) {
	jule::Slice<jule::Ptr<_1ab087e21_Param>> _1406_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab087e21_Param>>::alloc(0LL, (*(_13921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab087e21_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _13921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06159c7:;
		if (it != expr_end) {
			jule::Ptr<_1a3792402_ParamDecl> _14114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab087e21_Param>> &__jule_push_dest = _1406_params; __jule_push_dest.push(_1ab8570e6_buildParam(_14114_decl)); };
			}
			_iter_next_1b06159c7:;
			++it;
			goto _iter_begin_1b06159c7;
		}
		_iter_end_1b06159c7:;
	};
	return _1406_params;;
}



inline jule::Ptr<_1ab087849_RetType> _1ab857712_buildRetType(jule::Ptr<_1ab6c376a_RetTypeDecl> _14721_decl) {
	if ((((*(_14721_decl))._field_Idents == nullptr) && ((*_14721_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab087849_RetType>(_1ab087849_RetType{._field_TypeSym=_1ab855db4_buildType((*_14721_decl.alloc)._field_Kind), ._field_Idents=(*_14721_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab8579cb_buildFunc(jule::Ptr<_1a3793854_FnDecl> _15718_decl) {
	return jule::new_ptr<_1ab0898e5_Fn>(_1ab0898e5_Fn{._field_sema=jule::Ptr<_1ab883573_sema>(nullptr), ._field_Token=(*(_15718_decl))._field_Token, ._field_Global=(*_15718_decl.alloc)._field_Global, ._field_Unsafety=(*_15718_decl.alloc)._field_Unsafety, ._field_Public=(*_15718_decl.alloc)._field_Public, ._field_Binded=(*_15718_decl.alloc)._field_Binded, ._field_Statically=(*_15718_decl.alloc)._field_Statically, ._field_Exceptional=(*_15718_decl.alloc)._field_Exceptional, ._field_Ident=(*_15718_decl.alloc)._field_Ident, ._field_Directives=(*_15718_decl.alloc)._field_Directives, ._field_Scope=(*_15718_decl.alloc)._field_Scope, ._field_Generics=(*_15718_decl.alloc)._field_Generics, ._field_Result=_1ab857712_buildRetType((*_15718_decl.alloc)._field_Result), ._field_Params=_1ab8574c0_buildParams(&((*_15718_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1a37a2577_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _1ab857c95_buildMethods(jule::Slice<jule::Ptr<_1a3793854_FnDecl>>* _17522_decls) {
	jule::Slice<jule::Ptr<_1ab0898e5_Fn>> _1766_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0898e5_Fn>>::alloc(0LL, (*(_17522_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab0898e5_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17522_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b061aa54:;
		if (it != expr_end) {
			jule::Ptr<_1a3793854_FnDecl> _17714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0898e5_Fn>> &__jule_push_dest = _1766_methods; __jule_push_dest.push(_1ab8579cb_buildFunc(_17714_decl)); };
			}
			_iter_next_1b061aa54:;
			++it;
			goto _iter_begin_1b061aa54;
		}
		_iter_end_1b061aa54:;
	};
	return _1766_methods;;
}



inline jule::Slice<jule::Ptr<_1ab942027_TypeSym>> _1ab85805e_buildTraitInherits(jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>* _18328_inherits) {
	jule::Slice<jule::Ptr<_1ab942027_TypeSym>> _1846_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab942027_TypeSym>>::alloc(0LL, (*(_18328_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab942027_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18328_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b061bb98:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c0877_TypeDecl> _18514_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab942027_TypeSym>> &__jule_push_dest = _1846_symbols; __jule_push_dest.push(_1ab855db4_buildType(_18514_it)); };
			}
			_iter_next_1b061bb98:;
			++it;
			goto _iter_begin_1b061bb98;
		}
		_iter_end_1b061bb98:;
	};
	return _1846_symbols;;
}



inline jule::Ptr<_1ab095109_Trait> _1ab858328_buildTrait(jule::Ptr<_1a379ce13_TraitDecl> _19119_decl) {
	return jule::new_ptr<_1ab095109_Trait>(_1ab095109_Trait{._field_Token=(*(_19119_decl))._field_Token, ._field_Ident=(*_19119_decl.alloc)._field_Ident, ._field_Public=(*_19119_decl.alloc)._field_Public, ._field_Inherits=_1ab85805e_buildTraitInherits(&((*_19119_decl.alloc)._field_Inherits)), ._field_Methods=_1ab857c95_buildMethods(&((*_19119_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1a37a2577_Struct>>(nullptr)});;
}



inline jule::Ptr<_1ab096c54_EnumItem> _1ab8585e2_buildEnumItem(jule::Ptr<_1a3799eba_EnumItemDecl> _20122_decl) {
	return jule::new_ptr<_1ab096c54_EnumItem>(_1ab096c54_EnumItem{._field_Token=(*(_20122_decl))._field_Token, ._field_Ident=(*_20122_decl.alloc)._field_Ident, ._field_Value=_1ab8561c2_buildExpr((*_20122_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _1ab8588ab_buildEnumItems(jule::Slice<jule::Ptr<_1a3799eba_EnumItemDecl>>* _20924_decls) {
	jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> _2106_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab096c54_EnumItem>>::alloc(0LL, (*(_20924_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab096c54_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _20924_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b061ee10:;
		if (it != expr_end) {
			jule::Ptr<_1a3799eba_EnumItemDecl> _21114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab096c54_EnumItem>> &__jule_push_dest = _2106_items; __jule_push_dest.push(_1ab8585e2_buildEnumItem(_21114_decl)); };
			}
			_iter_next_1b061ee10:;
			++it;
			goto _iter_begin_1b061ee10;
		}
		_iter_end_1b061ee10:;
	};
	return _2106_items;;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab858da6_buildEnum(jule::Ptr<_1a379aa7b_EnumDecl> _21718_decl) {
	return jule::new_ptr<_1ab0977b0_Enum>(_1ab0977b0_Enum{._field_Token=(*(_21718_decl))._field_Token, ._field_Public=(*_21718_decl.alloc)._field_Public, ._field_Ident=(*_21718_decl.alloc)._field_Ident, ._field_TypeSym=_1ab855db4_buildType((*_21718_decl.alloc)._field_Kind), ._field_Items=_1ab8588ab_buildEnumItems(&((*_21718_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ab0988e3_TypeEnumItem> _1ab859082_buildTypeEnumItem(jule::Ptr<_1a379b3a6_TypeEnumItemDecl> _22726_decl) {
	return jule::new_ptr<_1ab0988e3_TypeEnumItem>(_1ab0988e3_TypeEnumItem{._field_Token=(*(_22726_decl))._field_Token, ._field_Ident=(*_22726_decl.alloc)._field_Ident, ._field_TypeSym=_1ab855db4_buildType((*_22726_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> _1ab859329_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a379b3a6_TypeEnumItemDecl>>* _23528_decls) {
	jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>>::alloc(0LL, (*(_23528_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab0988e3_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23528_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0627ed4:;
		if (it != expr_end) {
			jule::Ptr<_1a379b3a6_TypeEnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab0988e3_TypeEnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1ab859082_buildTypeEnumItem(_23714_decl)); };
			}
			_iter_next_1b0627ed4:;
			++it;
			goto _iter_begin_1b0627ed4;
		}
		_iter_end_1b0627ed4:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab8595e3_buildTypeEnum(jule::Ptr<_1a379ba16_TypeEnumDecl> _24322_decl) {
	return jule::new_ptr<_1ab098eba_TypeEnum>(_1ab098eba_TypeEnum{._field_Token=(*(_24322_decl))._field_Token, ._field_Public=(*_24322_decl.alloc)._field_Public, ._field_Ident=(*_24322_decl.alloc)._field_Ident, ._field_Items=_1ab859329_buildTypeEnumItems(&((*_24322_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab8598ac_buildVar(jule::Ptr<_1a3794a0e_VarDecl> _25217_decl) {
	return jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Token=(*(_25217_decl))._field_Token, ._field_Ident=(*_25217_decl.alloc)._field_Ident, ._field_Binded=(*_25217_decl.alloc)._field_Binded, ._field_Constant=(*_25217_decl.alloc)._field_Constant, ._field_Mutable=(*_25217_decl.alloc)._field_Mutable, ._field_Public=(*_25217_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25217_decl.alloc)._field_Statically, ._field_Reference=(*_25217_decl.alloc)._field_Reference, ._field_TypeSym=_1ab855db4_buildType((*_25217_decl.alloc)._field_Kind), ._field_Value=_1ab8561c2_buildExpr((*_25217_decl.alloc)._field_Expr), ._field_Refers=static__1ab854863_new(), ._field_Directives=(*_25217_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1ab8a7289_Var>> _1ab859b76_buildVars(jule::Slice<jule::Ptr<_1a3794a0e_VarDecl>> _26918_decls) {
	jule::Slice<jule::Ptr<_1ab8a7289_Var>> _2706_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab8a7289_Var>>::alloc(0LL, _26918_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab8a7289_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_26918_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b062c802:;
		if (it != expr_end) {
			jule::Ptr<_1a3794a0e_VarDecl> _27114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = _2706_vars; __jule_push_dest.push(_1ab8598ac_buildVar(_27114_decl)); };
			}
			_iter_next_1b062c802:;
			++it;
			goto _iter_begin_1b062c802;
		}
		_iter_end_1b062c802:;
	};
	return _2706_vars;;
}



inline jule::Ptr<_1ab8315ba_Impl> _1ab859e40_buildImpl(jule::Ptr<_1a379d573_Impl> _27718_decl) {
	return jule::new_ptr<_1ab8315ba_Impl>(_1ab8315ba_Impl{._field_Base=(*(_27718_decl))._field_Base, ._field_Dest=(*_27718_decl.alloc)._field_Dest, ._field_Methods=_1ab857c95_buildMethods(&((*_27718_decl.alloc)._field_Methods)), ._field_Statics=_1ab859b76_buildVars((*_27718_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1ab861760_isImplicitImport(jule::Ptr<_1ab866578_ImportInfo> _79021_imp) {
	return ((*((*(_79021_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1ab090be8_SymTab> _1ab8638b6_findVarFileInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _4430_files, jule::Ptr<_1ab8a7289_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06a7bac:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _4514_f = *it;
			{
				if ((_1ab09328e_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1b06a7bac:;
			++it;
			goto _iter_begin_1b06a7bac;
		}
		_iter_end_1b06a7bac:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab863d39_findVarInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06a8e66:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1ab8a7289_Var> _577_v = _1ab091611_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1b06a8e66:;
			++it;
			goto _iter_begin_1b06a8e66;
		}
		_iter_end_1b06a8e66:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab864268_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06aa51c:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1ab938a24_TypeAlias> _697_ta = _1ab091a0c_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1b06aa51c:;
			++it;
			goto _iter_begin_1b06aa51c;
		}
		_iter_end_1b06aa51c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab86471e_findStructInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06aba4b:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1a37a2577_Struct> _817_s = _1ab091e08_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1b06aba4b:;
			++it;
			goto _iter_begin_1b06aba4b;
		}
		_iter_end_1b06aba4b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab864b1a_findFnInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06ad07a:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1ab0898e5_Fn> _937_f = _1ab092304_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1b06ad07a:;
			++it;
			goto _iter_begin_1b06ad07a;
		}
		_iter_end_1b06ad07a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab095109_Trait> _1ab864e8e_findTraitInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06ade6b:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1ab095109_Trait> _1057_t = _1ab092645_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1b06ade6b:;
			++it;
			goto _iter_begin_1b06ade6b;
		}
		_iter_end_1b06ade6b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0977b0_Enum> _1ab865313_findEnumInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06b0896:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1ab0977b0_Enum> _1177_e = _1ab092986_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1b06b0896:;
			++it;
			goto _iter_begin_1b06b0896;
		}
		_iter_end_1b06b0896:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab098eba_TypeEnum> _1ab865797_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06b1be9:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1ab098eba_TypeEnum> _1297_e = _1ab092cc7_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1b06b1be9:;
			++it;
			goto _iter_begin_1b06b1be9;
		}
		_iter_end_1b06b1be9:;
	};
	return nullptr;;
}



inline jule::Bool _1ab86b2c5_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1a87a8b1c_HasPrefix((*(_33318_f)), _1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a87b8bd7_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1ab880e33_isValidModelForRef(jule::Any* _1428_m) {
	{
		auto &_match_expr{ (*(_1428_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b06c0653:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b06c06b9:;
			{
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _197_model = (*(_1428_m)).cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_197_model))._field_Field != nullptr) && _1ab880e33_isValidModelForRef(&((*((*_197_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b06c0730:;
			{
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _227_unary = (*(_1428_m)).cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112);;
				if (((*((*(_227_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1ab93c4d9_Ptr((*((*_227_unary.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ab93c253_Sptr((*((*(_227_unary))._field_Expr))._field_Type) == nullptr)) {
					return false;;
				};
				return _1ab880e33_isValidModelForRef(&((*(*(_227_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b06c0796:;
			{
				jule::Ptr<_1ab07ee7e_IndexingExprModel> _367_indexing = (*(_1428_m)).cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42);;
				if ((_1ab93cc8c_Arr((*((*(_367_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1ab880e33_isValidModelForRef(&((*(*(_367_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1b06c0246:;
			{
				return false;;
			}
		}
		_match_end_1b06bed28:;
	};
}



inline _1a388d1ac_Log _1ab881461_compilerErr(jule::Ptr<_1ab6a54d8_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args) {
	_1a388d1ac_Log _496_log = _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4817_token))))._field_Row, ._field_Column=(*((*(_4817_token))))._field_Column, ._field_Path=(*((*((*(_4817_token))))._field_File))._field_Path, ._field_Text=_1a388d61e_Logf(_4851_fmt, _4871_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4839_line) {
		_496_log._field_Line=_1ab6ac1b0_GetRow((*((*(_4817_token))))._field_File, (*((*(_4817_token))))._field_Row);
	};
	return _496_log;;
}



inline void _1ab88174c_appendRetVars(jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _6223_dest, jule::Ptr<_1ab08c9a3_FnIns>* _6242_f) {
	if ((_1ab089d9b_IsVoid((*((*(_6242_f))))._field_Decl.ptr()) || ((*((*(_6242_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab939816_Type>> _676_types = _1ab08dbd5_Types((*(_6242_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6242_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06d0a3c:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _6814_ident = *it;
			{
				if ((_1ab6a7dc0_IsIgnoreIdent((*(_6814_ident))._field_Kind) || _1ab6a8189_IsAnonIdent((*_6814_ident.alloc)._field_Kind))) {
					goto _iter_next_1b06d0a3c;
				};
				{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = (*(_6223_dest)); __jule_push_dest.push(jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=(*((*(_6242_f))))._field_Scope, ._field_Token=_6814_ident, ._field_Ident=(*_6814_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=_676_types[_687_i]}), ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=_687_i, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)})); };
			}
			_iter_next_1b06d0a3c:;
			++it;
			_687_i++;
			goto _iter_begin_1b06d0a3c;
		}
		_iter_end_1b06d0a3c:;
	};
	if ((((*(*((*((*(_6242_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6223_dest)).len() == 1LL))) {
		(*((*(_6223_dest))[((*(_6223_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ab881a7c_appendParamVars(jule::Slice<jule::Ptr<_1ab8a7289_Var>>* _9225_dest, jule::Ptr<_1ab08c9a3_FnIns>* _9244_f) {
	if (((*((*(_9244_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9244_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06d538d:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> _9714_p = *it;
			{
				if ((_1ab6a7dc0_IsIgnoreIdent((*((*(_9714_p))._field_Decl))._field_Ident) || _1ab6a8189_IsAnonIdent((*(*(_9714_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1b06d538d;
				};
				jule::Ptr<_1ab8a7289_Var> _1027_v = jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=(*((*(_9244_f))))._field_Scope, ._field_Token=(*(*(_9714_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9714_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9714_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_9714_p))._field_Decl.alloc)._field_Reference, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
				{
					
					if (_1ab088570_IsSelf((*(_9714_p))._field_Decl)) {
						_case_begin_1b06d9271:;
						{
							(*((*(_1027_v))._field_TypeSym))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9244_f))))._field_Owner, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)});
							(*_1027_v.alloc)._field_Reference=(!(_1ab088806_IsRef((*(_9714_p))._field_Decl)));
							if (_1ab088806_IsRef((*(_9714_p))._field_Decl)) {
								((*(_1027_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1027_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1ab94645a_Sptr>(_1ab94645a_Sptr{._field_Elem=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=(*(*((*(_1027_v))._field_TypeSym))._field_Type.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1027_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9714_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1b06d8e52:;
						{
							(*((*(_1027_v))._field_TypeSym))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab946e2d_Slc>(_1ab946e2d_Slc{._field_Elem=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=(*((*_9714_p.alloc)._field_Type))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9714_p))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1b06d8ddb:;
						{
							(*((*(_1027_v))._field_TypeSym))._field_Type=(*_9714_p.alloc)._field_Type;
						}
					}
					_match_end_1b06d8ca9:;
				};
				{ jule::Slice<jule::Ptr<_1ab8a7289_Var>> &__jule_push_dest = (*(_9225_dest)); __jule_push_dest.push(_1027_v); };
			}
			_iter_next_1b06d538d:;
			++it;
			goto _iter_begin_1b06d538d;
		}
		_iter_end_1b06d538d:;
	};
}



inline void _1ab881d68_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>* _15234_dest, jule::Ptr<_1ab08c9a3_FnIns>* _15259_f) {
	jule::I64 _1536_size = (*((*(_15259_f))))._field_Generics.len();;
	if (((*((*((*(_15259_f))))._field_Decl))._field_Owner != nullptr)) {
		_1536_size+=(*(*((*((*(_15259_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1536_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15259_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06e2686:;
		if (it != expr_end) {
			jule::I64 _1627_i = it - expr->begin();
			jule::Ptr<_1ab937e30_InsGeneric> _16214_g = *it;
			{
				if ((_16214_g == nullptr)) {
					goto _iter_next_1b06e2686;
				};
				jule::Ptr<_1a378dcc2_GenericDecl> _1667_decl = (*(*((*(_15259_f))))._field_Decl.alloc)._field_Generics[_1627_i];;
				{ jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1ab938a24_TypeAlias>(_1ab938a24_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1667_decl.alloc)._field_Token, ._field_Ident=(*(_1667_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_16214_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1b06e2686:;
			++it;
			_1627_i++;
			goto _iter_begin_1b06e2686;
		}
		_iter_end_1b06e2686:;
	};
	if (((*(*((*(_15259_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a37a53d2_StructIns> _1787_owner = (*((*(_15259_f))))._field_Owner;;
		{
			auto expr = &((*_1787_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b06e4028:;
			if (it != expr_end) {
				jule::I64 _1798_i = it - expr->begin();
				jule::Ptr<_1ab937e30_InsGeneric> _17915_g = *it;
				{
					jule::Ptr<_1a378dcc2_GenericDecl> _1808_decl = (*((*(_1787_owner))._field_Decl))._field_Generics[_1798_i];;
					{ jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1ab938a24_TypeAlias>(_1ab938a24_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1808_decl.alloc)._field_Token, ._field_Ident=(*(_1808_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_17915_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1b06e4028:;
				++it;
				_1798_i++;
				goto _iter_begin_1b06e4028;
			}
			_iter_end_1b06e4028:;
		};
	};
}



inline jule::Ptr<_1ab090be8_SymTab> _1ab8821dc_findFile(jule::Slice<jule::Ptr<_1ab090be8_SymTab>>* _19318_files, jule::Ptr<_1ab6aadb2_Fileset>* _19337_handler) {
	{
		auto expr = _19318_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06e8109:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _19414_fl = *it;
			{
				if (((*(_19414_fl))._field_File == (*(_19337_handler)))) {
					return _19414_fl;;
				};
			}
			_iter_next_1b06e8109:;
			++it;
			goto _iter_begin_1b06e8109;
		}
		_iter_end_1b06e8109:;
	};
	return nullptr;;
}



inline void _1ab882583_pushSuggestion(_1a388d1ac_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args) {
	(*(_20230_log))._field_Suggestion=_1a388d61e_Logf(_20248_fmt, _20268_args);
}



inline void _1ab8a51dd_pushImplemented(jule::Ptr<_1ab095109_Trait> _280324_t, jule::Ptr<_1a37a2577_Struct>* _280340_d) {
	_julec_label_1b06e7bca:;
	{
		
		if (((*(_280324_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1b06ead32:;
			{
				{
					auto expr = &((*_280324_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b06eb78e:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> _280710_s = *it;
						{
							if ((_280710_s == (*(_280340_d)))) {
								goto _match_end_1b06ea2b5;
							};
						}
						_iter_next_1b06eb78e:;
						++it;
						goto _iter_begin_1b06eb78e;
					}
					_iter_end_1b06eb78e:;
				};
				goto _case_begin_1b06ea370;
			}
		}
		else {
			_case_begin_1b06ea370:;
			{
				(*(_280324_t))._field_Implemented=jule::append((*_280324_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a37a2577_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_280340_d)); __jule_collection; }));
			}
		}
		_match_end_1b06ea2b5:;
	};
	{
		auto expr = &((*(_280324_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06ec1a7:;
		if (it != expr_end) {
			jule::Ptr<_1ab942027_TypeSym> _281614_i = *it;
			{
				_1ab8a51dd_pushImplemented(_1ab93d7c6_Trait((*(_281614_i))._field_Type.ptr()), _280340_d);
			}
			_iter_next_1b06ec1a7:;
			++it;
			goto _iter_begin_1b06ec1a7;
		}
		_iter_end_1b06ec1a7:;
	};
}



inline void _1ab8a54c9_pushImplements(jule::Ptr<_1a37a2577_Struct>* _282124_s, jule::Ptr<_1ab095109_Trait> _282140_t) {
	_julec_label_1b06eb43c:;
	{
		
		if (((*((*(_282124_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1b06ed8c3:;
			{
				{
					auto expr = &((*((*(_282124_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b06ee330:;
					if (it != expr_end) {
						jule::Ptr<_1ab095109_Trait> _282510_b = *it;
						{
							if ((_282510_b == _282140_t)) {
								goto _match_end_1b06ecd56;
							};
						}
						_iter_next_1b06ee330:;
						++it;
						goto _iter_begin_1b06ee330;
					}
					_iter_end_1b06ee330:;
				};
				goto _case_begin_1b06ece11;
			}
		}
		else {
			_case_begin_1b06ece11:;
			{
				{ jule::Slice<jule::Ptr<_1ab095109_Trait>> &__jule_push_dest = (*((*(_282124_s))))._field_Implements; __jule_push_dest.push(_282140_t); };
			}
		}
		_match_end_1b06ecd56:;
	};
	{
		auto expr = &((*(_282140_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b06eec48:;
		if (it != expr_end) {
			jule::Ptr<_1ab942027_TypeSym> _283414_i = *it;
			{
				_1ab8a54c9_pushImplements(_282124_s, _1ab93d7c6_Trait((*(_283414_i))._field_Type.ptr()));
			}
			_iter_next_1b06eec48:;
			++it;
			goto _iter_begin_1b06eec48;
		}
		_iter_end_1b06eec48:;
	};
}



inline void _1ab8a592a_pushRuntimeToStr(jule::Ptr<_1ab883573_sema>* _283926_s, jule::Ptr<_1ab939816_Type>* _283941_t, jule::Ptr<_1ab6a54d8_Token>* _283956_token, jule::Ptr<_1ab854577_ReferenceStack> _28406_refers) {
	if ((((*((*((*(_283926_s))))._field_meta))._field_runtime == nullptr) || _1ab93a949_IsNil((*(_283941_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _28446_f = _1ab08ae02_instanceForce(_1aa776643_runtimeFindFn(&((*(*((*(_283926_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28446_f))._field_Generics=jule::append((*_28446_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ab937e30_InsGeneric>(_1ab937e30_InsGeneric{._field_Type=(*(_283941_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1ab939816_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28462_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab89dec8_checkGenericFn((*(_283926_s)), &(_28446_f), _283956_token);
		_28462_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28462_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2848:3"));;
	};
	if ((_28406_refers != nullptr)) {
		_1ab855358_Push(_28406_refers, jule::Any(_28446_f, &__jule_any_type63));
	};
}



inline jule::Bool _1ab8a5be4_isValidImpAlias(jule::Str _285724_alias) {
	jule::Bool __jule_func_result = false;
	if (_1ab6a7dc0_IsIgnoreIdent(_285724_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1ab6a918a_IsKeyword(_285724_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28646_r;
	jule::I64 _286413_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_285724_alias);
		_28646_r = __jule_assign_result.__jule_result_arg0;
		_286413_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28646_r != '_') && (!(_1ab6a8c17_IsLetter(_28646_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285724_alias).mut_slice(_286413_size);;
			if ((_285724_alias.len() == 0LL)) {
				goto _iter_end_1b0706ce9;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a432345a_DecodeRuneStr(_285724_alias);
				_28646_r = __jule_assign_result.__jule_result_arg0;
				_286413_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28646_r != '_') && (!((('0' <= _28646_r) && (_28646_r <= '9'))))) && (!(_1ab6a8c17_IsLetter(_28646_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1b0706ce9:;
	}
	_iter_end_1b0706ce9:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab8e1b42_traitHasReferenceReceiver(jule::Ptr<_1ab095109_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b09721c9:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1b09721c9;
				};
				jule::Ptr<_1ab087e21_Param> _233_p = (*(*(_179_f)).alloc)._field_Params[0LL];;
				if ((_1ab088806_IsRef(_233_p.ptr()) && _1ab088570_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1b09721c9:;
			++it;
			goto _iter_begin_1b09721c9;
		}
		_iter_end_1b09721c9:;
	};
	return false;;
}



inline jule::Bool _1ab8e200a_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1ab906a8b_Data>* _3133_d) {
	jule::Str _322_value = _1a9406208_FmtFloat(_1ab073912_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1ab1116a3_CheckBitFloat(_322_value, _1ab11020c_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1ab8e237e_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1ab906a8b_Data>* _3630_d) {
	jule::F64 _372_min = _1ab1167eb_Min(_3618_kind);;
	jule::F64 _382_max = _1ab116a82_Max(_3618_kind);;
	{
		
		if (_1ab07575a_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1b0975c7c:;
			{
				jule::F64 _413_x = _1ab07315e_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a93cbd16_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1ab074ea7_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1b0975ce3:;
			{
				jule::F64 _483_x = _1ab073912_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1ab074c21_IsI64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1b0975d59:;
			{
				jule::F64 _533_x = _1ab073912_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1b0975b5b:;
	};
	return false;;
}



inline jule::Bool _1ab8e2747_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1ab906a8b_Data>* _5932_d) {
	jule::F64 _602_max = _1ab116a82_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1ab8dd7cb_IsAscii(static_cast<jule::I32>(_1ab072625_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1ab07575a_IsF64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1b097b9ca:;
			{
				jule::F64 _673_x = _1ab07315e_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a93cbd16_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1ab074ea7_IsU64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1b097ba41:;
			{
				jule::F64 _773_x = _1ab073912_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1ab074c21_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1b097baa7:;
			{
				jule::F64 _823_x = _1ab073912_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1b097b05c:;
	};
	return false;;
}



inline jule::Bool _1ab8e2abb_intAssignable(jule::Str _8818_kind, jule::Ptr<_1ab906a8b_Data>* _8830_d) {
	{
		
		if (_1ab117ba4_IsSigInt(_8818_kind)) {
			_case_begin_1b0981606:;
			{
				return _1ab8e237e_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1ab117eb2_IsUnsigInt(_8818_kind)) {
			_case_begin_1b098168e:;
			{
				return _1ab8e2747_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1b098112d:;
			{
				return false;;
			}
		}
		_match_end_1b0981051:;
	};
}



inline void _1ab8ee0b1_checkMutRiskOfStructLit(jule::Ptr<_1ab883573_sema>* _90933_s, jule::Ptr<_1ab07d3bc_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b098276c:;
		if (it != expr_end) {
			jule::Ptr<_1ab07d026_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1b098276c;
				};
				if (((!((*((*(*(_9109_arg)).alloc)._field_Expr))._field_Mutable)) && _1ab93b1ec_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1ab886477_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*((*(_9109_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b098276c:;
			++it;
			goto _iter_begin_1b098276c;
		}
		_iter_end_1b098276c:;
	};
}



inline jule::Ptr<_1ab939816_Type> _1ab904dec_lenKind(void) {
	return _1ab9b3c9c_primInt;;
}



inline jule::Bool _1ab90524e_isGoodValueToInfer(jule::Ptr<_1ab906a8b_Data>* _141224_d) {
	return (!(_1ab906ea9_IsNil((*(_141224_d)).ptr())));;
}



inline jule::Ptr<_1ab6bec94_Directive> _1ab93108d_findDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _435423_directives, jule::Str _435454_d) {
	{
		auto expr = _435423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0ac586b:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _435514_dr = *it;
			{
				if (((*((*(_435514_dr))._field_Tag))._field_Kind == _435454_d)) {
					return _435514_dr;;
				};
			}
			_iter_next_1b0ac586b:;
			++it;
			goto _iter_begin_1b0ac586b;
		}
		_iter_end_1b0ac586b:;
	};
	return nullptr;;
}



inline jule::Any _1ab931456_findBuiltinsImport(jule::Str* _436324_ident, jule::Ptr<_1ab866578_ImportInfo> _436336_imp) {
	return _1ab9b70e1_findPackageBuiltinDef(&((*(_436336_imp))._field_LinkPath), _436324_ident);;
}



inline void _1ab931687_fitBitsize(jule::Ptr<_1ab906a8b_Data>* _437220_d) {
	jule::Ptr<_1ab94292e_Prim> _43736_prim = _1ab93bebc_Prim((*((*(_437220_d))))._field_Type.ptr());;
	jule::I64 _43742_z = _1ab11020c_BitSizeOf(_1ab942ca3_Str(_43736_prim.ptr()));;
	{
		
		if (_1ab074c21_IsI64((*((*(_437220_d))))._field_Constant.ptr())) {
			_case_begin_1b0ac8165:;
			{
				jule::I64 _43773_k = _1ab111c36_BitSizeOfInt(_1ab072625_ReadI64((*((*(_437220_d))))._field_Constant));;
				if (((_43773_k > _43742_z) || _1ab117eb2_IsUnsigInt((*_43736_prim.alloc)._field_Kind))) {
					(*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind=_1ab11054d_IntFromBits(_43773_k);
					(*((*(_437220_d))))._field_Type=(*((*(_1ab9b6101_findBuiltinTypeAlias((*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1ab074ea7_IsU64((*((*(_437220_d))))._field_Constant.ptr())) {
			_case_begin_1b0ac81cb:;
			{
				jule::I64 _43833_k = _1ab112000_BitSizeOfUint(_1ab0728ab_ReadU64((*((*(_437220_d))))._field_Constant));;
				if (((_43833_k > _43742_z) || _1ab117ba4_IsSigInt((*_43736_prim.alloc)._field_Kind))) {
					(*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind=_1ab1107d4_UintFromBits(_43833_k);
					(*((*(_437220_d))))._field_Type=(*((*(_1ab9b6101_findBuiltinTypeAlias((*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1ab07575a_IsF64((*((*(_437220_d))))._field_Constant.ptr())) {
			_case_begin_1b0ac8253:;
			{
				if ((_43742_z == 64LLU)) {
					return;;
				};
				jule::I64 _43933_k = _1ab11196c_BitSizeOfFloat(_1ab07315e_ReadF64((*((*(_437220_d))))._field_Constant));;
				if ((_43933_k > _43742_z)) {
					(*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind=_1ab110a9d_FloatFromBits(_43933_k);
					(*((*(_437220_d))))._field_Type=(*((*(_1ab9b6101_findBuiltinTypeAlias((*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_1b0ac8044:;
	};
}



inline void _1ab9319b7_makeStructLitAlloc(jule::Ptr<_1ab906a8b_Data>* _440128_d, jule::Ptr<_1ab07d3bc_StructLitExprModel>* _440143_lit) {
	(*((*(_440128_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab94645a_Sptr>(_1ab94645a_Sptr{._field_Elem=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_440143_lit))))._field_Strct, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)});
	(*((*(_440128_d))))._field_Model=jule::Any(jule::new_ptr<_1ab07d6b9_AllocStructLitExprModel>(_1ab07d6b9_AllocStructLitExprModel{._field_Lit=(*(_440143_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1ab8a7289_Var> _1ab931d3b_buildErrorVar(jule::Ptr<_1ab835bc9_Scope>* _441223_s, jule::Ptr<_1a378984a_FnCallExpr>* _441239_fc) {
	return jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=(*(_441223_s)), ._field_Token=(*((*(_441239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
}



inline jule::Any _1ab9321b0_findBuiltinsSema(jule::Str* _442722_ident, jule::Ptr<_1ab883573_sema> _442738_s) {
	jule::Str _44296_ppath = _1ab6ab852_Dir((*((*(_442738_s))._field_file))._field_File.ptr());;
	if (_1a87a8b1c_HasPrefix(_44296_ppath, _1a87b8bd7_PathStdlib)) {
		(_44296_ppath).mut_slice(_1a87b8bd7_PathStdlib.len());;
		_44296_ppath=(jule::Str::lit("std", 3) + _1a87aec66_ReplaceAll(_44296_ppath, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		return _1ab9b70e1_findPackageBuiltinDef(&(_44296_ppath), _442722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ab932479_isOkForShifting(jule::Ptr<_1ab906a8b_Data>* _444225_d) {
	if (_1ab9074c6_IsConst((*(_444225_d)).ptr())) {
		{
			
			if (_1ab074c21_IsI64((*((*(_444225_d))))._field_Constant.ptr())) {
				_case_begin_1b0ad8eab:;
				{
					return (_1ab072625_ReadI64((*((*(_444225_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1ab074ea7_IsU64((*((*(_444225_d))))._field_Constant.ptr())) {
				_case_begin_1b0ad9055:;
				{
					return true;;
				}
			}
			else if (_1ab07575a_IsF64((*((*(_444225_d))))._field_Constant.ptr())) {
				_case_begin_1b0ad90cc:;
				{
					return (_1ab07315e_ReadF64((*((*(_444225_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1b0ad8e23:;
				{
					return false;;
				}
			}
			_match_end_1b0ad8d46:;
		};
	};
	jule::Ptr<_1ab94292e_Prim> _44552_prim = _1ab93bebc_Prim((*((*(_444225_d))))._field_Type.ptr());;
	return ((_44552_prim != nullptr) && _1ab11827b_IsInt(_1ab942ca3_Str(_44552_prim)));;
}



inline jule::Bool _1ab932853_isInstancedStruct(jule::Ptr<_1a37a53d2_StructIns> _445922_s) {
	return ((*((*(_445922_s))._field_Decl))._field_Generics.len() == (*_445922_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1ab932b50_isPtrArithmeticCompatible(jule::Ptr<_1ab906a8b_Data>* _446335_l, jule::Ptr<_1ab906a8b_Data>* _446350_r) {
	jule::Ptr<_1ab949c22_Ptr> _44642_ptr = _1ab93c4d9_Ptr((*((*(_446350_r))))._field_Type.ptr());;
	if ((_44642_ptr != nullptr)) {
		return _1ab93a053_Equal((*(_1ab93c4d9_Ptr((*((*(_446335_l))))._field_Type)))._field_Elem, (*_44642_ptr.alloc)._field_Elem);;
	};
	if ((_1ab9074c6_IsConst((*(_446350_r)).ptr()) && (*((*(_446350_r))))._field_untyped)) {
		return (_1ab8e2abb_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _446350_r) || _1ab8e2abb_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _446350_r));;
	};
	_1ab8e30a5_typeCompatibilityChecker _44736_tcc = _1ab8e30a5_typeCompatibilityChecker{._field_s=jule::Ptr<_1ab883573_sema>(nullptr), ._field_dest=_1ab9b3c9c_primInt, ._field_src=(*((*(_446350_r))))._field_Type, ._field_errorToken=jule::Ptr<_1ab6a54d8_Token>(nullptr)};;
	if (_1ab8e479e_check(&_44736_tcc)) {
		return true;;
	};
	_44736_tcc._field_dest=_1ab9b38d4_primUint;
	return _1ab8e479e_check(&_44736_tcc);;
}



inline void _1ab93315b_applyRuntimeToStr(jule::Ptr<_1ab883573_sema>* _448427_s, jule::Ptr<_1ab939816_Type>* _448442_from, jule::Ptr<_1ab939816_Type>* _448460_to, jule::Ptr<_1ab6a54d8_Token>* _44857_token, jule::Ptr<_1ab854577_ReferenceStack> _448533_refers) {
	jule::Ptr<_1ab94292e_Prim> _44862_prim = _1ab93bebc_Prim((*(_448460_to)).ptr());;
	if ((_44862_prim != nullptr)) {
		if (_1ab946180_IsAny(_44862_prim)) {
			_1ab8a592a_pushRuntimeToStr(_448427_s, _448442_from, _44857_token, _448533_refers);
		};
		return;;
	};
	if ((_1ab93ca06_TypeEnum((*(_448460_to)).ptr()) != nullptr)) {
		_1ab8a592a_pushRuntimeToStr(_448427_s, _448442_from, _44857_token, _448533_refers);
		return;;
	};
}



inline void _1ab933667_applyCastKindModel(jule::Ptr<_1ab883573_sema>* _449928_s, jule::Ptr<_1ab906a8b_Data>* _449943_d, jule::Ptr<_1ab939816_Type>* _449958_t, jule::Ptr<_1ab6a54d8_Token>* _45007_token, jule::Ptr<_1ab854577_ReferenceStack> _450033_refers) {
	_1ab93315b_applyRuntimeToStr(_449928_s, &((*((*(_449943_d))))._field_Type), _449958_t, _45007_token, _450033_refers);
	(*((*(_449943_d))))._field_Model=jule::Any(jule::new_ptr<_1ab07dc4c_CastingExprModel>(_1ab07dc4c_CastingExprModel{._field_Token=(*(_45007_token)), ._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*((*(_449943_d))))), ._field_Type=(*(_449958_t)), ._field_ExprType=(*((*(_449943_d))))._field_Type}), &__jule_any_type95);
}



inline void _1ab933b73_applyCastKind(jule::Ptr<_1ab883573_sema>* _451023_s, jule::Ptr<_1ab906a8b_Data>* _451038_d, jule::Ptr<_1ab939816_Type>* _451053_t, jule::Ptr<_1ab6a54d8_Token>* _45117_token, jule::Ptr<_1ab854577_ReferenceStack> _451133_refers) {
	_1ab933667_applyCastKindModel(_451023_s, _451038_d, _451053_t, _45117_token, _451133_refers);
	(*((*(_451038_d))))._field_Type=(*(_451053_t));
}



inline jule::Ptr<_1ab906a8b_Data> _1ab933d82_buildVoidData(void) {
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b2a15_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Str _1ab93436b_checkDataForIntegerIndexing(jule::Ptr<_1ab883573_sema>* _452237_s, jule::Ptr<_1ab906a8b_Data>* _452252_d, jule::Ptr<_1ab6a54d8_Token>* _45237_token, jule::Ptr<_1ab854577_ReferenceStack> _452333_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_452252_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1ab93bebc_Prim((*((*(_452252_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1b0aea253:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1ab11827b_IsInt(_1ab942ca3_Str(_1ab93bebc_Prim((*((*(_452252_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1b0aea2b9:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1ab9074c6_IsConst((*(_452252_d)).ptr())) {
			_case_begin_1b0aea330:;
			{
				if ((_1ab073912_AsF64((*((*(_452252_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ab93bebc_Prim((*((*(_452252_d))))._field_Type.ptr()) == nullptr) || _1ab9074c6_IsConst((*(_452252_d)).ptr()) || (_1ab10ee43_RealKindOf(_1ab942ca3_Str(_1ab93bebc_Prim((*((*(_452252_d))))._field_Type).ptr())) != _1ab10ee43_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1b0aea396:;
			{
				_1ab933b73_applyCastKind(_452237_s, _452252_d, &(_1ab9b3c9c_primInt), _45237_token, _452333_refers);
			}
		}
		_match_end_1b0ae9d35:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1ab934877_applyCastModelByEnum(jule::Ptr<_1ab883573_sema>* _454830_s, jule::Ptr<_1ab906a8b_Data>* _454845_d, jule::Ptr<_1ab0977b0_Enum> _454859_e, jule::Ptr<_1ab6a54d8_Token>* _45497_token, jule::Ptr<_1ab854577_ReferenceStack> _454933_refers) {
	if ((_454859_e == nullptr)) {
		return;;
	};
	_1ab933667_applyCastKindModel(_454830_s, _454845_d, &((*((*(_454859_e))._field_TypeSym))._field_Type), _45497_token, _454933_refers);
}



inline void _1ab934d94_castConstByType(jule::Str* _455621_t, jule::Ptr<_1ab906a8b_Data>* _455634_d) {
	{
		
		if (_1ab117ba4_IsSigInt((*(_455621_t)))) {
			_case_begin_1b0b00ee5:;
			{
				{
					auto _match_expr{ _1ab11020c_BitSizeOf(_1ab10ee43_RealKindOf((*(_455621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b0b01ab7:;
						{
							_1ab073bba_SetI64((*((*(_455634_d))))._field_Constant.ptr(), _1ab0733e5_AsI64((*((*(_455634_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b0b01b50:;
						{
							_1ab073bba_SetI64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1ab0733e5_AsI64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b0b01bb6:;
						{
							_1ab073bba_SetI64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1ab0733e5_AsI64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b0b01c2c:;
						{
							_1ab073bba_SetI64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1ab0733e5_AsI64((*((*(_455634_d))))._field_Constant))));
						}
					}
					_match_end_1b0b01a51:;
				};
			}
		}
		else if (_1ab117eb2_IsUnsigInt((*(_455621_t)))) {
			_case_begin_1b0b0108e:;
			{
				{
					auto _match_expr{ _1ab11020c_BitSizeOf(_1ab10ee43_RealKindOf((*(_455621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b0b021c2:;
						{
							_1ab073e73_SetU64((*((*(_455634_d))))._field_Constant.ptr(), _1ab07367b_AsU64((*((*(_455634_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b0b05cec:;
						{
							_1ab073e73_SetU64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1ab07367b_AsU64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b0b05d63:;
						{
							_1ab073e73_SetU64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1ab07367b_AsU64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b0b05dc9:;
						{
							_1ab073e73_SetU64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1ab07367b_AsU64((*((*(_455634_d))))._field_Constant))));
						}
					}
					_match_end_1b0b05c53:;
				};
			}
		}
		else if (_1ab1185bc_IsFloat((*(_455621_t)))) {
			_case_begin_1b0b01105:;
			{
				{
					auto _match_expr{ _1ab11020c_BitSizeOf(_1ab10ee43_RealKindOf((*(_455621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b0b06182:;
						{
							_1ab07478c_SetF64((*((*(_455634_d))))._field_Constant.ptr(), _1ab073912_AsF64((*((*(_455634_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b0b09e66:;
						{
							_1ab07478c_SetF64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1ab073912_AsF64((*((*(_455634_d))))._field_Constant))));
						}
					}
					_match_end_1b0b09e00:;
				};
			}
		}
		_match_end_1b0b00d91:;
	};
}



inline void _1ab935070_updateModelToGenericIns(jule::Any* _459033_m, jule::Ptr<_1ab08c9a3_FnIns>* _459052_f) {
	{
		auto &_match_expr{ (*(_459033_m)) };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b0b020c3:;
			{
				(*(_459033_m))=jule::Any((*(_459052_f)), &__jule_any_type63);
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b0b0a41c:;
			{
				(*((*(_459033_m)).cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100)))._field_Method=(*(_459052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b0b0a1db:;
			{
				(*((*(_459033_m)).cast_ptr<_1ab082536_StructStaticIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_459052_f));
			}
		}
		_match_end_1b0b0203a:;
	};
}



inline jule::Bool _1ab9353e4_pushSubIdentFromExpr(jule::Any _460129_expr, jule::Ptr<_1ab6c124b_SubIdentTypeDecl>* _460155_t) {
	{
		auto &_match_expr{ _460129_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b0b11159:;
			{
				jule::Ptr<_1ab6c64c6_IdentExpr> _46047_e = _460129_expr.unsafe_cast_ptr<_1ab6c64c6_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>> &__jule_push_dest = (*((*(_460155_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*(_46047_e))._field_Token, ._field_Ident=(*_46047_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b0b102ac:;
			{
				jule::Ptr<_1a3788c34_SubIdentExpr> _46107_e = _460129_expr.unsafe_cast_ptr<_1a3788c34_SubIdentExpr>();;
				if ((!(_1ab9353e4_pushSubIdentFromExpr((*((*(_46107_e))._field_Expr))._field_Kind, _460155_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1ab6c0e82_IdentTypeDecl>> &__jule_push_dest = (*((*(_460155_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ab6c0e82_IdentTypeDecl>(_1ab6c0e82_IdentTypeDecl{._field_Token=(*_46107_e.alloc)._field_Ident, ._field_Ident=(*((*_46107_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ab6c0877_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1b0b11236:;
			{
				return false;;
			}
		}
		_match_end_1b0b1108d:;
	};
	return true;;
}



inline jule::Str _1ab9356ad_constoa(jule::Ptr<_1ab070c61_Const>* _462413_c) {
	{
		
		if (_1ab074c21_IsI64((*(_462413_c)).ptr())) {
			_case_begin_1b0b1703e:;
			{
				return _1a941c9c2_FmtInt(_1ab072625_ReadI64((*(_462413_c)).ptr()), 10LL);;
			}
		}
		else if (_1ab074ea7_IsU64((*(_462413_c)).ptr())) {
			_case_begin_1b0b15aed:;
			{
				return _1a941c609_FmtUint(_1ab0728ab_ReadU64((*(_462413_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1b0b17737:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b0b15801:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab935c52_evalEnumStatic(jule::Ptr<_1ab883573_sema>* _463524_s, jule::Ptr<_1ab0977b0_Enum>* _463539_enm, jule::Ptr<_1ab096c54_EnumItem>* _463556_item, jule::Ptr<_1ab6a54d8_Token>* _46367_token, jule::Ptr<_1ab854577_ReferenceStack> _463633_refers) {
	jule::Ptr<_1ab906a8b_Data> _46376_d = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_463539_enm)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	if (((*(_463556_item)) != nullptr)) {
		(*(_46376_d))._field_Constant=jule::new_ptr<_1ab070c61_Const>((*(*((*((*((*(_463556_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46376_d.alloc)._field_Model=jule::Any((*_46376_d.alloc)._field_Constant, &__jule_any_type15);
		_1ab934877_applyCastModelByEnum(_463524_s, &(_46376_d), (*(_463539_enm)), _46367_token, _463633_refers);
	};
	return _46376_d;;
}



inline jule::Ptr<_1ab07d3bc_StructLitExprModel> _1ab93601b_isLitBased(jule::Any* _465320_m) {
	{
		auto &_match_expr{ (*(_465320_m)) };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b0b1c0dd:;
			{
				return (*(_465320_m)).cast_ptr<_1ab07d3bc_StructLitExprModel>(&__jule_any_type97);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b0b1c154:;
			{
				return (*((*(_465320_m)).cast_ptr<_1ab07d6b9_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b0b1c1ba:;
			{
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _46607_ssi = (*(_465320_m)).cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				return _1ab93601b_isLitBased(&((*((*(_46607_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b0b1c231:;
			{
				jule::Ptr<_1ab07dc4c_CastingExprModel> _46637_c = (*(_465320_m)).cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95);;
				return _1ab93601b_isLitBased(&((*((*(_46637_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1b0b1bb8c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0b1bb26:;
	};
}



inline void _1ab936307_makeImplicitDeref(jule::Ptr<_1ab906a8b_Data>* _467027_d, jule::Ptr<_1ab6a54d8_Token> _467041_baseToken) {
	jule::Ptr<_1ab07c9e8_UnaryExprModel> _46716_unary = jule::new_ptr<_1ab07c9e8_UnaryExprModel>(_1ab07c9e8_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab906a8b_Data>((*((*(_467027_d))))), ._field_Op=jule::new_ptr<_1ab6a54d8_Token>((*(_467041_baseToken)))});;
	(*((*(_46716_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_46716_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_467027_d))))._field_Model=jule::Any(_46716_unary, &__jule_any_type112);
}



inline void _1b0c37813_updateRefer(jule::Ptr<_1ab854577_ReferenceStack> _468123_ref, jule::Ptr<_1ab08c9a3_FnIns>* _468146_old, jule::Ptr<_1ab08c9a3_FnIns>* _468159_new) {
	{
		auto expr = &((*(_468123_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0c3924e:;
		if (it != expr_end) {
			jule::I64 _46826_i = it - expr->begin();
			jule::Any _46829_sym = *it;
			{
				if ((jule::Any((*(_468146_old)), &__jule_any_type63) == _46829_sym)) {
					(*(_468123_ref))._field_buffer[_46826_i]=jule::Any((*(_468159_new)), &__jule_any_type63);
				};
			}
			_iter_next_1b0c3924e:;
			++it;
			_46826_i++;
			goto _iter_begin_1b0c3924e;
		}
		_iter_end_1b0c3924e:;
	};
}



inline void _1ab936989_makeVariadic(jule::Ptr<_1ab906a8b_Data>* _468922_d, jule::Ptr<_1ab939816_Type> _468936_elem) {
	(*((*(_468922_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=(*_468936_elem.alloc)._field_BindIdent, ._field_Generic=(*(_468936_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_468936_elem.alloc)._field_Kind});
}



inline jule::Bool _1ab936db8_isVarCaptured(jule::Ptr<_1ab83ce67_scopeChecker> _470318_r, jule::Ptr<_1ab83ce67_scopeChecker> _470340_s, jule::Ptr<_1ab8a7289_Var> _470358_v) {
	if (((*(_470358_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_470340_s))._field_scope == (*_470358_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_470340_s.alloc)._field_parent == nullptr) || (_470340_s == _470318_r))) {
				goto _iter_end_1b0b262c3;
			};
			_470340_s=(*_470340_s.alloc)._field_parent;
		}
	_iter_next_1b0b262c3:;
	}
	_iter_end_1b0b262c3:;;
	return true;;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab93723c_findNamespace(jule::Trait _472022_lookup, jule::Str _472038_namespace) {
	return ((_1ab959bee_LookupMptrData*)_472022_lookup.safe_type())->_1ab957ed8_SelectPackage(_472022_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ab866578_ImportInfo>>((void*)__jule_anon_1b0b2821a, jule::Ptr<__jule_anon_1b0b2821a_ctx>::make(__jule_anon_1b0b2821a_ctx{._472038_namespace=_472038_namespace}).as<jule::Uintptr>(), __jule_anon_1b0b2821a_ctx_handler));;
}



inline jule::Bool _1ab9559b9_kindUsesGenerics(jule::Ptr<_1ab939816_Type>* _173126_k, jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>* _173137_generics) {
	{
		auto expr = _173137_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1092e48:;
		if (it != expr_end) {
			jule::Ptr<_1a378dcc2_GenericDecl> *_17329_g = it;
			{
				if (static__1ab9555bd_exist(&((*((*(_17329_g))))._field_Ident), _173126_k)) {
					return true;;
				};
			}
			_iter_next_1b1092e48:;
			++it;
			goto _iter_begin_1b1092e48;
		}
		_iter_end_1b1092e48:;
	};
	return false;;
}



inline jule::Bool _1ab955d82_hasDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _174122_directives, jule::Str _174153_tag) {
	{
		auto expr = _174122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b109372e:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _174214_dr = *it;
			{
				if (((*((*(_174214_dr))._field_Tag))._field_Kind == _174153_tag)) {
					return true;;
				};
			}
			_iter_next_1b109372e:;
			++it;
			goto _iter_begin_1b109372e;
		}
		_iter_end_1b109372e:;
	};
	return false;;
}



inline jule::Bool _1ab95614b_canGetPtr(jule::Ptr<_1ab906a8b_Data>* _175019_d) {
	return (*((*(_175019_d))))._field_Lvalue;;
}



inline jule::Bool _1ab95648c_isValidForSptrType(jule::Ptr<_1ab939816_Type>* _175328_t) {
	jule::Ptr<_1a37a53d2_StructIns> _17546_s = _1ab93d540_Struct((*(_175328_t)).ptr());;
	if ((((_17546_s != nullptr) && ((*_17546_s.alloc)._field_Decl != nullptr)) && (*(*(_17546_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab956723_isValidForRef(jule::Ptr<_1ab939816_Type>* _176223_t) {
	return (_1ab93d2a9_Fn((*(_176223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ab9569dc_isBuiltinStrConvertable(jule::Ptr<_1ab939816_Type>* _176533_t) {
	return ((((!(_1ab93abd0_Void((*(_176533_t)).ptr()))) && (_1ab93d2a9_Fn((*(_176533_t)).ptr()) == nullptr)) && (_1ab93dce3_Tup((*(_176533_t)).ptr()) == nullptr)) && (!(_1ab93e079_comptime((*(_176533_t)).ptr()))));;
}



inline jule::Ptr<_1ab94292e_Prim> _1ab956ca6_buildPrimType(jule::Str _176918_kind) {
	return jule::new_ptr<_1ab94292e_Prim>(_1ab94292e_Prim{._field_Kind=_176918_kind});;
}



inline void _1ab957614_applyImplicitCast(jule::Ptr<_1ab883573_sema>* _179727_s, jule::Ptr<_1ab939816_Type>* _179742_dest, jule::Ptr<_1ab906a8b_Data>* _179760_d, jule::Ptr<_1ab6a54d8_Token>* _17987_token, jule::Ptr<_1ab854577_ReferenceStack> _179833_refers) {
	if (_1ab93a949_IsNil((*((*(_179760_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1ab94292e_Prim> _18022_destPrim = _1ab93bebc_Prim((*(_179742_dest)).ptr());;
	if (((_18022_destPrim != nullptr) && _1ab946180_IsAny(_18022_destPrim))) {
		jule::Ptr<_1ab94292e_Prim> _18043_prim = _1ab93bebc_Prim((*((*(_179760_d))))._field_Type);;
		if (((_18043_prim == nullptr) || (!(_1ab946180_IsAny(_18043_prim.ptr()))))) {
			_1ab933b73_applyCastKind(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		};
		return;;
	};
	jule::Ptr<_1ab095109_Trait> _18112_dt = _1ab93d7c6_Trait((*(_179742_dest)).ptr());;
	if ((_18112_dt != nullptr)) {
		jule::Ptr<_1ab095109_Trait> _18133_bt = _1ab93d7c6_Trait((*((*(_179760_d))))._field_Type);;
		if (((_18133_bt == nullptr) || (_18133_bt != _18112_dt))) {
			_1ab933667_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
			return;;
		};
	};
	if (((_1ab93ca06_TypeEnum((*(_179742_dest)).ptr()) != nullptr) && (_1ab93ca06_TypeEnum((*((*(_179760_d))))._field_Type) == nullptr))) {
		_1ab933667_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		return;;
	};
}



inline jule::Bool _1ab9578cd_validTypeForXof(jule::Ptr<_1ab939816_Type>* _182725_t) {
	return ((((!(_1ab93abd0_Void((*(_182725_t)).ptr()))) && (_1ab93d2a9_Fn((*(_182725_t)).ptr()) == nullptr)) && (_1ab93dce3_Tup((*(_182725_t)).ptr()) == nullptr)) && (!(_1ab93e079_comptime((*(_182725_t)).ptr()))));;
}



inline __jule_tuple_x_1ab090be8_SymTab__jule_tuple_s_1a388d1ac_Log _1ab95a8d1_buildSymbols(jule::Ptr<_1ab6bd9b8_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1ab85a506_symBuilder> _1667_owner) {
	__jule_tuple_x_1ab090be8_SymTab__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	jule::Ptr<_1ab85a506_symBuilder> _176_sb = jule::new_ptr<_1ab85a506_symBuilder>(_1ab85a506_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1a388d1ac_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1ab090be8_SymTab>(nullptr)});;
	_1ab861397_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1ab95ac11_collectImplicitImports(jule::Ptr<_1ab883573_sema>* _3132_s, jule::Ptr<_1ab090be8_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11c8149:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1ab861760_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1b11c8149;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1b11c9337:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1b11c88ca:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1b11c8e6e:;
				};
			}
			_iter_next_1b11c8149:;
			++it;
			goto _iter_begin_1b11c8149;
		}
		_iter_end_1b11c8149:;
	};
}



inline __jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log _1ab95b140_analyzePackage(jule::Slice<jule::Ptr<_1ab6bd9b8_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags) {
	__jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ab090be8_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab090be8_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab090be8_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11ca569:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bd9b8_AST> _4814_f = *it;
			{
				jule::Ptr<_1ab090be8_SymTab> _497_table;
				jule::Slice<_1a388d1ac_Log> _4918_errors;
				({
					__jule_tuple_x_1ab090be8_SymTab__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab95a8d1_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ab090be8_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1b11ca569:;
			++it;
			goto _iter_begin_1b11ca569;
		}
		_iter_end_1b11ca569:;
	};
	jule::Ptr<_1ab883573_sema> _566_sema = jule::new_ptr<_1ab883573_sema>(_1ab883573_sema{._field_errors=jule::Slice<_1a388d1ac_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1ab090be8_SymTab>>(nullptr), ._field_file=jule::Ptr<_1ab090be8_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1ab88294b_commonSemaMeta>(_1ab88294b_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1ab129bc7_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1ab866578_ImportInfo>(nullptr)})});;
	jule::Ptr<_1ab090be8_SymTab> _636_firstTable = _476_tables[0LL];;
	_1ab95ac11_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1ab8a33a6_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab868cea_Package> _716_pkg = jule::new_ptr<_1ab868cea_Package>(_1ab868cea_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log _1ab95b5e6_AnalyzePackage(jule::Slice<jule::Ptr<_1ab6bd9b8_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags) {
	__jule_tuple_x_1ab868cea_Package__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1ab95b140_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab9b211e_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1b11d50e0:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _2314_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b7894_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1b11d5156:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _2614_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b7cc3_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1b11d51bc:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _2914_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b8202_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1b11d5244:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _3214_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b8631_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1b11d53dc:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _3514_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b8a60_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1b11d5453:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _3814_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b91c0_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1b11d54b9:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _4114_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9b99c8_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1b11d5541:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _4414_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bb16c_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1b11d5673:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _4714_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bb920_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1b11d56d9:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _5014_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bc338_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1b11d4b06:;
			{
				return nullptr;;
			}
		}
		_match_end_1b11d4e69:;
	};
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab9b240a_primTypeAlias(jule::Ptr<_1ab939816_Type>* _5723_k) {
	return jule::new_ptr<_1ab938a24_TypeAlias>(_1ab938a24_TypeAlias{._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1ab8a7289_Var> _1ab9b5cb0_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1b11dc01a:;
			{
				static jule::Ptr<_1ab8a7289_Var> _8814_v = jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=_1ab9b2718_primNil}), ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab071eb5_NewNil()})}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1b11dc0b4:;
			{
				static jule::Ptr<_1ab8a7289_Var> _10314_v = jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab071723_NewBool(true)})}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1b11dc13b:;
			{
				static jule::Ptr<_1ab8a7289_Var> _11614_v = jule::new_ptr<_1ab8a7289_Var>(_1ab8a7289_Var{._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1ab9b6101_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1ab907c13_Value>(_1ab907c13_Value{._field_Expr=jule::Ptr<_1ab6c4bab_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ab071723_NewBool(false)})}), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ab8a7289_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1b11db789:;
			{
				return nullptr;;
			}
		}
		_match_end_1b11d6641:;
	};
}



inline jule::Ptr<_1ab938a24_TypeAlias> _1ab9b6101_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1b11e1ddd:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _13614_t = _1ab9b240a_primTypeAlias(&(_1ab9b2cbd_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1b11e2053:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _13914_t = _1ab9b240a_primTypeAlias(&(_1ab9b30ba_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1b11e20b9:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _14214_t = _1ab9b240a_primTypeAlias(&(_1ab9b3373_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b11e2196:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _14514_t = _1ab9b240a_primTypeAlias(&(_1ab9b362b_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b11e220c:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _14814_t = _1ab9b240a_primTypeAlias(&(_1ab9b38d4_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b11e2273:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _15114_t = _1ab9b240a_primTypeAlias(&(_1ab9b3c9c_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b11e22d9:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _15414_t = _1ab9b240a_primTypeAlias(&(_1ab9b3ede_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b11e2350:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _15714_t = _1ab9b240a_primTypeAlias(&(_1ab9b4286_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b11e242c:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _16014_t = _1ab9b240a_primTypeAlias(&(_1ab9b47e7_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b11e24a4:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _16314_t = _1ab9b240a_primTypeAlias(&(_1ab9b4d58_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b11e252b:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _16614_t = _1ab9b240a_primTypeAlias(&(_1ab9b5111_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b11e25a3:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _16914_t = _1ab9b240a_primTypeAlias(&(_1ab9b55ea_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b11e262a:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _17214_t = _1ab9b240a_primTypeAlias(&(_1ab9b583c_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b11e26a2:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _17514_t = _1ab9b240a_primTypeAlias(&(_1ab9b5a4b_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b11e2729:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _17814_t = _1ab9b240a_primTypeAlias(&(_1ab9b4aa0_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b11e27a1:;
			{
				static jule::Ptr<_1ab938a24_TypeAlias> _18114_t = _1ab9b240a_primTypeAlias(&(_1ab9b453e_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1b11dc67a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b11dc757:;
	};
}



inline jule::Any _1ab9b6387_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1ab8a7289_Var> _1896_v = _1ab9b5cb0_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _1936_f = _1ab9b211e_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type63);;
	};
	jule::Ptr<_1ab938a24_TypeAlias> _1976_ta = _1ab9b6101_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1ab9b6651_findBuiltinDefStdMem(jule::Str* _20426_ident) {
	{
		auto &_match_expr{ (*(_20426_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1b11ebee7:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _20714_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9be4d3_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1b11ec404:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _21014_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9be912_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1b11ec47b:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _21314_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bed41_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b11ea8b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b11ead2b:;
	};
}



inline jule::Any _1ab9b691a_findBuiltinDefStdComptime(jule::Str* _22031_ident) {
	{
		auto &_match_expr{ (*(_22031_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1b11ec712:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _22314_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bc767_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1b11ee736:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _22614_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bcb96_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1b11ee79c:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _22914_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bd0c5_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1b11ec778:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _23214_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bd746_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1b11ec800:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _23514_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9bdb75_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1b11ee8ce:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _23814_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ab0898e5_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9be0a4_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_23814_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b11ec514:;
			{
				return nullptr;;
			}
		}
		_match_end_1b11ee47d:;
	};
}



inline jule::Any _1ab9b6ce4_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident) {
	{
		auto &_match_expr{ (*(_24537_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1b11eeb76:;
			{
				static jule::Ptr<_1ab08c9a3_FnIns> _24814_f = jule::new_ptr<_1ab08c9a3_FnIns>(_1ab08c9a3_FnIns{._field_Owner=jule::Ptr<_1a37a53d2_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1ab0898e5_Fn>(_1ab0898e5_Fn{._field_sema=jule::Ptr<_1ab883573_sema>(nullptr), ._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a378dcc2_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a378dcc2_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1ab087849_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab087e21_Param>>(nullptr), ._field_Owner=jule::Ptr<_1a37a2577_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ab08c9a3_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1ab937e30_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ab08b84d_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ab939816_Type>(nullptr), ._field_Scope=jule::Ptr<_1ab835bc9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ab854577_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ab906a8b_Data>,jule::Ptr<_1ab9087b3_eval>*,jule::Ptr<_1a378984a_FnCallExpr>*,jule::Ptr<_1ab906a8b_Data>*>(_1ab9c0270_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b11ee967:;
			{
				return nullptr;;
			}
		}
		_match_end_1b1203a59:;
	};
}



inline jule::Any _1ab9b70e1_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident) {
	{
		auto &_match_expr{ (*(_26027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1b12059a1:;
			{
				return _1ab9b691a_findBuiltinDefStdComptime(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1b1205a4a:;
			{
				return _1ab9b6651_findBuiltinDefStdMem(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1b120571a:;
			{
				return _1ab9b6ce4_findBuiltinDefStdJuleIntegrated(_26043_ident);;
			}
		}
		else {
			_case_begin_1b12051ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1b1204021:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b7465_builtinCallerError(jule::Ptr<_1ab9087b3_eval>* _27328_e, jule::Ptr<_1a378984a_FnCallExpr>* _27343_fc) {
	if (((*((*(_27343_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_27328_e)).ptr(), (*((*(_27343_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_27343_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_27328_e)).ptr(), (*((*((*(_27343_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _2816_expr = _1ab927628_evalExpr((*(_27328_e)), (*((*(_27343_fc))))._field_Args[0LL]);;
	if ((_2816_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab6a54d8_Token> _2866_token = (*((*((*(_27343_fc))))._field_Args[0LL]))._field_Token;;
	if (_1ab906ea9_IsNil(_2816_expr.ptr())) {
		_1ab908d46_pushErr((*(_27328_e)).ptr(), _2866_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1ab8931ed_checkValidityForInitExpr((*((*(_27328_e))))._field_s, true, false, &(_1ab9b2cbd_primAny), &(_2816_expr), &(_2866_token))))) {
		return nullptr;;
	};
	_1ab93315b_applyRuntimeToStr(&((*((*(_27328_e))))._field_s), &((*(_2816_expr))._field_Type), &(_1ab9b2cbd_primAny), &(_2866_token), _1ab90bd49_getOwnerRefers((*(_27328_e)).ptr()));
	jule::Ptr<_1ab906a8b_Data> _2996_d = _1ab933d82_buildVoidData();;
	(*(_2996_d))._field_Model=jule::Any(jule::new_ptr<_1ab0856b0_BuiltinErrorCallExprModel>(_1ab0856b0_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1ab08c9a3_FnIns>(nullptr), ._field_Err=_2816_expr}), &__jule_any_type20);
	return _2996_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b7894_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _30428_e, jule::Ptr<_1a378984a_FnCallExpr>* _30443_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_30443_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_30428_e)).ptr(), (*((*(_30443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30443_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_30428_e)).ptr(), (*((*((*(_30443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab6c4bab_Expr> _3136_arg = (*((*(_30443_fc))))._field_Args[0LL];;
	jule::Ptr<_1ab906a8b_Data> _3146_expr = _1ab927628_evalExpr((*(_30428_e)), _3136_arg);;
	if ((_3146_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab9569dc_isBuiltinStrConvertable(&((*(_3146_expr))._field_Type))))) {
		_1ab908d46_pushErr((*(_30428_e)).ptr(), (*(_3136_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab8a592a_pushRuntimeToStr(&((*((*(_30428_e))))._field_s), &((*(_3146_expr))._field_Type), &((*_3136_arg.alloc)._field_Token), _1ab90bd49_getOwnerRefers((*(_30428_e)).ptr()));
	jule::Ptr<_1ab906a8b_Data> _3266_d = _1ab933d82_buildVoidData();;
	(*(_3266_d))._field_Model=jule::Any(jule::new_ptr<_1ab083009_BuiltinPrintCallExprModel>(_1ab083009_BuiltinPrintCallExprModel{._field_Expr=_3146_expr}), &__jule_any_type24);
	return _3266_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b7cc3_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _33130_e, jule::Ptr<_1a378984a_FnCallExpr>* _33145_fc, jule::Ptr<_1ab906a8b_Data>* _33172_d) {
	(*(_33172_d))=_1ab9b7894_builtinCallerPrint(nullptr, _33130_e, _33145_fc, _33172_d);
	if (((*(_33172_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_33172_d))))._field_Model=jule::Any(jule::new_ptr<_1ab083306_BuiltinPrintlnCallExprModel>(_1ab083306_BuiltinPrintlnCallExprModel{._field_Expr=(*((*((*(_33172_d))))._field_Model.cast_ptr<_1ab083009_BuiltinPrintCallExprModel>(&__jule_any_type24)))._field_Expr}), &__jule_any_type25);
	return (*(_33172_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b8202_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _34326_e, jule::Ptr<_1a378984a_FnCallExpr>* _34341_fc, jule::Ptr<_1ab906a8b_Data>* _34368_d) {
	if (((*((*(_34341_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_34326_e)).ptr(), (*((*(_34341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_34341_fc))))._field_Args.len() > 2LL)) {
		_1ab908d46_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _3526_t = _1ab926b55_eval1((*(_34326_e)), (*((*(_34341_fc))))._field_Args[0LL]);;
	if ((_3526_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3526_t))._field_Decl))) {
		_1ab908d46_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ab95648c_isValidForSptrType(&((*(_3526_t))._field_Type))))) {
		jule::Ptr<_1a37a53d2_StructIns> _3637_s = _1ab93d540_Struct((*(_3526_t))._field_Type.ptr());;
		if ((((_3637_s != nullptr) && ((*_3637_s.alloc)._field_Decl != nullptr)) && (*(*(_3637_s))._field_Decl.alloc)._field_Binded)) {
			_1ab908d46_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_34368_d))))._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab94645a_Sptr>(_1ab94645a_Sptr{._field_Elem=(*(_3526_t))._field_Type}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)});
	if (((*((*(_34341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab939816_Type> _3777_old = (*((*(_34326_e))))._field_prefix;;
		(*((*(_34326_e))))._field_prefix=(*(_3526_t))._field_Type;
		jule::Ptr<_1ab906a8b_Data> _3807_init = _1ab927628_evalExpr((*(_34326_e)), (*((*(_34341_fc))))._field_Args[1LL]);;
		(*((*(_34326_e))))._field_prefix=_3777_old;
		if ((_3807_init != nullptr)) {
			jule::Ptr<_1ab6a54d8_Token> _3858_token = (*((*((*(_34341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ab8931ed_checkValidityForInitExpr((*((*(_34326_e))))._field_s, (!((*((*(_34326_e))))._field_immutable)), false, &((*(_3526_t))._field_Type), &(_3807_init), &(_3858_token));
			_1ab88d968_checkAssignType((*((*(_34326_e))))._field_s, false, &((*(_3526_t))._field_Type), &(_3807_init), _3858_token, _1ab90bd49_getOwnerRefers((*(_34326_e)).ptr()));
			(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1ab0836d0_BuiltinNewCallExprModel>(_1ab0836d0_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=(*_3807_init.alloc)._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1ab0836d0_BuiltinNewCallExprModel>(_1ab0836d0_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_34368_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b8631_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _40528_e, jule::Ptr<_1a378984a_FnCallExpr>* _40543_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_40543_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_40543_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_40528_e)).ptr(), (*((*((*(_40543_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _4146_expr = _1ab927628_evalExpr((*(_40528_e)), (*((*(_40543_fc))))._field_Args[0LL]);;
	if ((_4146_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ab93bebc_Prim((*(_4146_expr))._field_Type.ptr()) == nullptr) || (!(_1ab945de9_IsStr(_1ab93bebc_Prim((*(_4146_expr))._field_Type).ptr()))))) {
		_1ab908d46_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab906a8b_Data> _4236_d = _1ab933d82_buildVoidData();;
	(*(_4236_d))._field_Model=jule::Any(jule::new_ptr<_1ab083aa9_BuiltinPanicCallExprModel>(_1ab083aa9_BuiltinPanicCallExprModel{._field_Token=(*((*(_40543_fc))))._field_Token, ._field_Expr=(*(_4146_expr))._field_Model}), &__jule_any_type26);
	return _4236_d;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b8a60_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _43127_e, jule::Ptr<_1a378984a_FnCallExpr>* _43142_fc, jule::Ptr<_1ab906a8b_Data>* _43169_d) {
	if (((*((*(_43142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_43142_fc))))._field_Args.len() == 1LL)) {
			_1ab908d46_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1ab908d46_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_43142_fc))))._field_Args.len() > 3LL)) {
		_1ab908d46_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab906a8b_Data> _4446_t = _1ab926814_evalExprKind((*(_43127_e)), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4446_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4446_t))._field_Decl))) {
		_1ab908d46_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ab93d023_Slc((*(_4446_t))._field_Type.ptr()) == nullptr)) {
		_1ab908d46_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_4446_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_43169_d))))._field_Type=(*(_4446_t))._field_Type;
	jule::Ptr<_1ab906a8b_Data> _4596_lenExpr = _1ab927628_evalExpr(_1ab88d00b_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[1LL]);;
	if ((_4596_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ab912ab9_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4596_lenExpr), (*((*((*(_43142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ab084060_BuiltinMakeCallExprModel> _4666_model = jule::new_ptr<_1ab084060_BuiltinMakeCallExprModel>(_1ab084060_BuiltinMakeCallExprModel{._field_Type=(*(_4446_t))._field_Type, ._field_Len=(*(_4596_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_43169_d))))._field_Model=jule::Any(_4666_model, &__jule_any_type116);
	if (((*((*(_43142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ab906a8b_Data> _4727_capExpr = _1ab927628_evalExpr(_1ab88d00b_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[2LL]);;
		if ((_4727_capExpr == nullptr)) {
			return (*(_43169_d));;
		};
		_1ab912ab9_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4727_capExpr), (*((*((*(_43142_fc))))._field_Args[2LL]))._field_Token);
		(*(_4666_model))._field_Cap=(*(_4727_capExpr))._field_Model;
	};
	return (*(_43169_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b91c0_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _48229_e, jule::Ptr<_1a378984a_FnCallExpr>* _48244_fc, jule::Ptr<_1ab906a8b_Data>* _48271_d) {
	if (((*((*(_48244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48244_fc))))._field_Args.len() == 1LL)) {
			_1ab908d46_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1ab908d46_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab6c4bab_Expr> _4926_firstArg = (*((*(_48244_fc))))._field_Args[0LL];;
	jule::Ptr<_1ab906a8b_Data> _4936_t = _1ab927628_evalExpr((*(_48229_e)), _4926_firstArg);;
	if ((_4936_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab946e2d_Slc> _4986_s = _1ab93d023_Slc((*(_4936_t))._field_Type.ptr());;
	if ((_4986_s == nullptr)) {
		_1ab908d46_pushErr((*(_48229_e)).ptr(), (*(_4926_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1ab8931ed_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4936_t))._field_Type), &(_4936_t), &((*_4926_firstArg.alloc)._field_Token))) {
		_1ab88d968_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4936_t))._field_Type), &(_4936_t), (*_4926_firstArg.alloc)._field_Token, _1ab90bd49_getOwnerRefers((*(_48229_e)).ptr()));
	};
	jule::Ptr<_1ab939816_Type> _5136_prefix = (*((*(_48229_e))))._field_prefix;;
	(*((*(_48229_e))))._field_prefix=(*(_4936_t))._field_Type;
	__JULE_DEFER({
		(*((*(_48229_e))))._field_prefix=_5136_prefix;
	});;
	(*(_48271_d))=jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=(*(_4936_t))._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});
	jule::Ptr<_1ab6c4bab_Expr> _5216_secondArg = (*((*(_48244_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5216_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b124e6cb:;
			{
				if (((*((*(_48244_fc))))._field_Args.len() > 2LL)) {
					_1ab908d46_pushErr((*(_48229_e)).ptr(), (*((*((*(_48244_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ab906a8b_Data> _5287_e1 = _1ab927628_evalExpr((*(_48229_e)), (*((*(_5216_secondArg))._field_Kind.unsafe_cast_ptr<_1ab6c7142_VariadicExpr>()))._field_Expr);;
				if ((_5287_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1ab93bebc_Prim((*(_4986_s))._field_Elem.ptr()) != nullptr) && _1ab944359_IsU8(_1ab93bebc_Prim((*(_4986_s))._field_Elem).ptr()))) {
					if (((_1ab93bebc_Prim((*(_5287_e1))._field_Type) != nullptr) && _1ab945de9_IsStr(_1ab93bebc_Prim((*(_5287_e1))._field_Type).ptr()))) {
						_1ab936989_makeVariadic(&(_5287_e1), _1ab9b4aa0_primU8);
						(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084439_BuiltinAppendCallExprModel>(_1ab084439_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type23);
						return (*(_48271_d));;
					};
				};
				if ((!(_1ab93bc36_Variadicable((*(_5287_e1))._field_Type)))) {
					_1ab908d46_pushErr((*(_48229_e)).ptr(), (*(_5216_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_5287_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1ab936989_makeVariadic(&(_5287_e1), (*(_4986_s))._field_Elem);
				(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1ab8931ed_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5287_e1), &((*_5216_secondArg.alloc)._field_Token))) {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
					_1ab88d968_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5287_e1), (*_5216_secondArg.alloc)._field_Token, _1ab90bd49_getOwnerRefers((*(_48229_e)).ptr()));
				} else {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084439_BuiltinAppendCallExprModel>(_1ab084439_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type23);
				return (*(_48271_d));;
			}
		}
		_match_end_1b124e654:;
	};
	jule::Ptr<_1ab906a8b_Data> _5716_e1 = _1ab927628_evalExpr((*(_48229_e)), _5216_secondArg);;
	if ((_5716_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab07e9c8_SliceExprModel> _5766_slice = jule::new_ptr<_1ab07e9c8_SliceExprModel>(_1ab07e9c8_SliceExprModel{._field_ElemType=(*(_4986_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_48244_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_48244_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b125b793:;
		if (it != expr_end) {
			jule::Ptr<_1ab6c4bab_Expr> _58014_arg = *it;
			{
				_5716_e1=_1ab927628_evalExpr((*(_48229_e)), _58014_arg);
				if ((_5716_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5716_e1))._field_Type.alloc)._field_Variadic) {
					_1ab908d46_pushErr((*(_48229_e)).ptr(), (*(_58014_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1ab8931ed_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5716_e1), &((*_58014_arg.alloc)._field_Token))) {
					_1ab88d968_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5716_e1), (*_58014_arg.alloc)._field_Token, _1ab90bd49_getOwnerRefers((*(_48229_e)).ptr()));
				};
				(*(_5766_slice))._field_Elems=jule::append((*_5766_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5716_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1b125b793:;
			++it;
			goto _iter_begin_1b125b793;
		}
		_iter_end_1b125b793:;
	};
	(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084439_BuiltinAppendCallExprModel>(_1ab084439_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=jule::Any(_5766_slice, &__jule_any_type79)}), &__jule_any_type23);
	return (*(_48271_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b9599_callerCopySlice(jule::Ptr<_1ab906a8b_Data>* _60225_dest, jule::Ptr<_1ab9087b3_eval>* _60243_e, jule::Ptr<_1a378984a_FnCallExpr>* _60258_fc, jule::Ptr<_1ab906a8b_Data>* _60285_d) {
	if ((!((*((*(_60225_dest))))._field_Mutable))) {
		_1ab908d46_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab906a8b_Data> _6076_src = _1ab927628_evalExpr((*(_60243_e)), (*((*(_60258_fc))))._field_Args[1LL]);;
	if ((_6076_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab946e2d_Slc> _6116_slc = _1ab93d023_Slc((*(_6076_src))._field_Type.ptr());;
	if ((_6116_slc != nullptr)) {
		if (((!((*(_6076_src))._field_Mutable)) && _1ab93b1ec_Mutable((*_6116_slc.alloc)._field_Elem.ptr()))) {
			_1ab908d46_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1ab93a053_Equal((*((*(_60225_dest))))._field_Type, (*(_6076_src))._field_Type)))) {
			_1ab908d46_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1ab94292e_Prim> _6213_destPrim = _1ab93bebc_Prim((*(_1ab93d023_Slc((*((*(_60225_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1ab94292e_Prim> _6223_prim = _1ab93bebc_Prim((*(_6076_src))._field_Type);;
		if (((((_6213_destPrim == nullptr) || (_6223_prim == nullptr)) || (!(_1ab945de9_IsStr(_6223_prim.ptr())))) || (!(_1ab944359_IsU8(_6213_destPrim.ptr()))))) {
			_1ab908d46_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_60285_d))))._field_Type=_1ab904dec_lenKind();
	(*((*(_60285_d))))._field_Model=jule::Any(jule::new_ptr<_1ab0852d6_BuiltinCopyCallExprModel>(_1ab0852d6_BuiltinCopyCallExprModel{._field_Dest=(*(_60225_dest)), ._field_Src=_6076_src}), &__jule_any_type27);
	return (*(_60285_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b99c8_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _63627_e, jule::Ptr<_1a378984a_FnCallExpr>* _63642_fc, jule::Ptr<_1ab906a8b_Data>* _63669_d) {
	if (((*((*(_63642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63642_fc))))._field_Args.len() == 1LL)) {
			_1ab908d46_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1ab908d46_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_63642_fc))))._field_Args.len() > 2LL)) {
		_1ab908d46_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _6496_dest = _1ab927628_evalExpr((*(_63627_e)), (*((*(_63642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6496_dest == nullptr)) {
			_case_begin_1b1272127:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab93d023_Slc((*(_6496_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1272e4c:;
			{
				return _1ab9b9599_callerCopySlice(&(_6496_dest), _63627_e, _63642_fc, _63669_d);;
			}
		}
		else {
			_case_begin_1b1271c5e:;
			{
				_1ab908d46_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b12700ae:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9b9d4c_callerLenSlice(jule::Ptr<_1ab906a8b_Data>* _66124_expr, jule::Ptr<_1ab906a8b_Data>* _66142_d) {
	(*((*(_66142_d))))._field_Type=_1ab904dec_lenKind();
	(*((*(_66142_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084736_BuiltinLenCallExprModel>(_1ab084736_BuiltinLenCallExprModel{._field_Expr=(*(_66124_expr))}), &__jule_any_type117);
	return (*(_66142_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9ba1c1_callerLenMap(jule::Ptr<_1ab906a8b_Data>* _66922_expr, jule::Ptr<_1ab906a8b_Data>* _66940_d) {
	(*((*(_66940_d))))._field_Type=_1ab904dec_lenKind();
	(*((*(_66940_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084736_BuiltinLenCallExprModel>(_1ab084736_BuiltinLenCallExprModel{._field_Expr=(*(_66922_expr))}), &__jule_any_type117);
	return (*(_66940_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9ba545_callerLenArr(jule::Ptr<_1ab906a8b_Data>* _67722_expr, jule::Ptr<_1ab906a8b_Data>* _67740_d) {
	(*((*(_67740_d))))._field_Type=_1ab904dec_lenKind();
	(*((*(_67740_d))))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>((*(_1ab93cc8c_Arr((*((*(_67722_expr))))._field_Type.ptr())))._field_N));
	(*((*(_67740_d))))._field_Model=jule::Any((*((*(_67740_d))))._field_Constant, &__jule_any_type15);
	return (*(_67740_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9ba8b9_callerLenStr(jule::Ptr<_1ab906a8b_Data>* _68422_expr, jule::Ptr<_1ab906a8b_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Type=_1ab904dec_lenKind();
	if (_1ab9074c6_IsConst((*(_68422_expr)).ptr())) {
		(*((*(_68440_d))))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_1ab072dc8_ReadStr((*((*(_68422_expr))))._field_Constant.ptr()).len()));
		(*((*(_68440_d))))._field_Model=jule::Any((*((*(_68440_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084736_BuiltinLenCallExprModel>(_1ab084736_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type117);
	};
	return (*(_68440_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bac3d_callerLenComptime(jule::Ptr<_1ab906a8b_Data>* _69727_d, jule::I64 _69737_n) {
	(*((*(_69727_d))))._field_Type=_1ab904dec_lenKind();
	(*((*(_69727_d))))._field_Constant=static__1ab071190_NewI64(static_cast<jule::I64>(_69737_n));
	(*((*(_69727_d))))._field_Model=jule::Any((*((*(_69727_d))))._field_Constant, &__jule_any_type15);
	return (*(_69727_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bb16c_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _70426_e, jule::Ptr<_1a378984a_FnCallExpr>* _70441_fc, jule::Ptr<_1ab906a8b_Data>* _70468_d) {
	if (((*((*(_70441_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_70426_e)).ptr(), (*((*(_70441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_70441_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _7126_dest = _1ab9272d7_evalExpr1((*(_70426_e)), (*((*(_70441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7126_dest == nullptr)) {
			_case_begin_1b12822e1:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab93d023_Slc((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1283116:;
			{
				return _1ab9b9d4c_callerLenSlice(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1ab93cc8c_Arr((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b128317c:;
			{
				return _1ab9ba545_callerLenArr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1ab93da5c_Map((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1281e8e:;
			{
				return _1ab9ba1c1_callerLenMap(&(_7126_dest), _70468_d);;
			}
		}
		else if (((_1ab93bebc_Prim((*(_7126_dest))._field_Type.ptr()) != nullptr) && _1ab945de9_IsStr(_1ab93bebc_Prim((*(_7126_dest))._field_Type).ptr()))) {
			_case_begin_1b1282005:;
			{
				return _1ab9ba8b9_callerLenStr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1ab93e310_comptimeStructFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b128206b:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab93e310_comptimeStructFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1ab93e82c_comptimeEnumFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b12820d2:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab93e82c_comptimeEnumFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1ab9405ec_comptimeTypeInfos((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b128326a:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab9405ec_comptimeTypeInfos((*(_7126_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1ab93ed49_comptimeParams((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b12832d1:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab93ed49_comptimeParams((*(_7126_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1ab940b19_comptimeStatics((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1283347:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab940b19_comptimeStatics((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1ab941b70_comptimeFiles((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b12833ad:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab941b70_comptimeFiles((*(_7126_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1ab941653_comptimeDecls((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1283424:;
			{
				return _1ab9bac3d_callerLenComptime(_70468_d, (*(_1ab941653_comptimeDecls((*(_7126_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1b1281e28:;
			{
				_1ab908d46_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1280278:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bb4e1_callerCapSlice(jule::Ptr<_1ab906a8b_Data>* _74424_expr, jule::Ptr<_1ab906a8b_Data>* _74442_d) {
	(*((*(_74442_d))))._field_Type=_1ab904dec_lenKind();
	(*((*(_74442_d))))._field_Model=jule::Any(jule::new_ptr<_1ab084a33_BuiltinCapCallExprModel>(_1ab084a33_BuiltinCapCallExprModel{._field_Expr=(*(_74424_expr))}), &__jule_any_type118);
	return (*(_74442_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bb920_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _75226_e, jule::Ptr<_1a378984a_FnCallExpr>* _75241_fc, jule::Ptr<_1ab906a8b_Data>* _75268_d) {
	if (((*((*(_75241_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_75226_e)).ptr(), (*((*(_75241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_75241_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _7606_dest = _1ab927628_evalExpr((*(_75226_e)), (*((*(_75241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7606_dest == nullptr)) {
			_case_begin_1b1295a96:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7606_dest))._field_Decl) {
			_case_begin_1b12968bb:;
			{
				_1ab908d46_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab93d023_Slc((*(_7606_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b1296932:;
			{
				return _1ab9bb4e1_callerCapSlice(&(_7606_dest), _75268_d);;
			}
		}
		else {
			_case_begin_1b12956cd:;
			{
				_1ab908d46_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1292235:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bbe09_callerDeleteMap(jule::Ptr<_1ab9087b3_eval>* _77525_e, jule::Ptr<_1a378984a_FnCallExpr>* _77540_fc, jule::Ptr<_1ab906a8b_Data>* _77567_expr, jule::Ptr<_1ab906a8b_Data>* _77585_d) {
	if ((!((*((*(_77567_expr))))._field_Mutable))) {
		_1ab908d46_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_77585_d))=_1ab933d82_buildVoidData();
	jule::Ptr<_1ab084e0c_BuiltinDeleteCallExprModel> _7806_model = jule::new_ptr<_1ab084e0c_BuiltinDeleteCallExprModel>(_1ab084e0c_BuiltinDeleteCallExprModel{._field_Dest=(*(_77567_expr)), ._field_Key=jule::Ptr<_1ab906a8b_Data>(nullptr)});;
	if (((*((*(_77540_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab906a8b_Data> _7847_key = _1ab927628_evalExpr((*(_77525_e)), (*((*(_77540_fc))))._field_Args[1LL]);;
		{
			
			if ((_7847_key == nullptr)) {
				_case_begin_1b129c99e:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7847_key))._field_Decl) {
				_case_begin_1b129b607:;
				{
					_1ab908d46_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b129b591:;
				{
					;
					jule::Ptr<_1ab939816_Type> _7938_keyType = (*(_1ab93da5c_Map((*((*(_77567_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1ab88d968_checkAssignType((*((*(_77525_e))))._field_s, false, &(_7938_keyType), &(_7847_key), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, _1ab90bd49_getOwnerRefers((*(_77525_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b129b52a:;
		};
		(*(_7806_model))._field_Key=_7847_key;
	};
	(*((*(_77585_d))))._field_Model=jule::Any(_7806_model, &__jule_any_type28);
	return (*(_77585_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bc338_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _80429_e, jule::Ptr<_1a378984a_FnCallExpr>* _80444_fc, jule::Ptr<_1ab906a8b_Data>* _80471_d) {
	if (((*((*(_80444_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_80429_e)).ptr(), (*((*(_80444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_80444_fc))))._field_Args.len() > 2LL)) {
		_1ab908d46_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _8126_dest = _1ab927628_evalExpr((*(_80429_e)), (*((*(_80444_fc))))._field_Args[0LL]);;
	{
		
		if ((_8126_dest == nullptr)) {
			_case_begin_1b12a4324:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8126_dest))._field_Decl) {
			_case_begin_1b12a5149:;
			{
				_1ab908d46_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab93da5c_Map((*(_8126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1b12a51b0:;
			{
				return _1ab9bbe09_callerDeleteMap(_80429_e, _80444_fc, &(_8126_dest), _80471_d);;
			}
		}
		else {
			_case_begin_1b12a3e5b:;
			{
				_1ab908d46_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b12a22ab:;
	};
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bc767_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _82740_e, jule::Ptr<_1a378984a_FnCallExpr>* _82755_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_82755_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_82740_e)).ptr(), (*((*(_82755_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82755_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _8366_d = _1ab926814_evalExprKind((*(_82740_e)), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8366_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _8402_f = _1ab93d2a9_Fn((*(_8366_d))._field_Type.ptr());;
	if ((_8402_f != nullptr)) {
		if (_1ab08de6b_IsBuiltin(_8402_f)) {
			_1ab908d46_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8402_f.alloc)._field_Generics.len() != (*((*_8402_f.alloc)._field_Decl))._field_Generics.len())) {
			_1ab908d46_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a37a53d2_StructIns> _8512_s = _1ab93d540_Struct((*(_8366_d))._field_Type);;
	if (((_8512_s != nullptr) && ((*_8512_s.alloc)._field_Generics.len() != (*((*_8512_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1ab908d46_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ab93e079_comptime((*(_8366_d))._field_Type)) {
		_1ab908d46_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_8366_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c451_buildComptimeTypeInfoData(&((*((*(_82740_e))))._field_s), &((*(_8366_d))._field_Type));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bcb96_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _86341_e, jule::Ptr<_1a378984a_FnCallExpr>* _86356_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_86356_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_86341_e)).ptr(), (*((*(_86356_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_86356_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _8716_d = _1ab927628_evalExpr((*(_86341_e)), (*((*(_86356_fc))))._field_Args[0LL]);;
	if ((_8716_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab90524e_isGoodValueToInfer(&(_8716_d))))) {
		_1ab908d46_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_8716_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ab82c792_buildComptimeValue(&(_8716_d));;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bd0c5_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _88338_e, jule::Ptr<_1a378984a_FnCallExpr>* _88353_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_88353_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_88338_e)).ptr(), (*((*((*(_88353_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab070c61_Const> _8876_constant = static__1ab071190_NewI64(static_cast<jule::I64>((*((*((*(_88353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b3c9c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8876_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8876_constant});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bd746_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _89538_e, jule::Ptr<_1a378984a_FnCallExpr>* _89553_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_89553_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_89538_e)).ptr(), (*((*((*(_89553_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab1354a7_comptimeFile>(_1ab1354a7_comptimeFile{._field_file=(*((*((*(_89538_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bdb75_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _90839_e, jule::Ptr<_1a378984a_FnCallExpr>* _90854_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_90854_fc))))._field_Args.len() > 0LL)) {
		_1ab908d46_pushErr((*(_90839_e)).ptr(), (*((*((*(_90854_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab133a38_comptimeFiles>(_1ab133a38_comptimeFiles{._field_files=(*((*((*(_90839_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9be0a4_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _92143_e, jule::Ptr<_1a378984a_FnCallExpr>* _92158_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_92158_fc))))._field_Args.len() > 2LL)) {
		_1ab908d46_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 0LL)) {
		_1ab908d46_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 1LL)) {
		_1ab908d46_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b12c3420:;
			{
				goto _match_end_1b12c46eb;
			}
		}
		else {
			_case_begin_1b12c4773:;
			{
				_1ab908d46_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ab9091a9_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b12c46eb:;
	};
	jule::Ptr<_1ab6a54d8_Token> _9426_ident = (*((*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ab6c64c6_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_92143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1)) {
			_case_begin_1b12c7c60:;
			{
				goto _match_end_1b12c7017;
			}
		}
		else {
			_case_begin_1b12c707d:;
			{
				_1ab908d46_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b12c7017:;
	};
	jule::Ptr<_1ab83ce67_scopeChecker> _9516_sc = (*((*(_92143_e))))._field_lookup.cast_ptr<_1ab83ce67_scopeChecker>((jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data1);;
	jule::Ptr<_1ab938a24_TypeAlias> _9526_alias = jule::new_ptr<_1ab938a24_TypeAlias>(_1ab938a24_TypeAlias{._field_Scope=(*(_9516_sc))._field_tree, ._field_Public=_1ab88076d_IsPub((*(_9426_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9426_ident, ._field_Ident=(*_9426_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1ab942027_TypeSym>(_1ab942027_TypeSym{._field_Decl=jule::Ptr<_1ab6c0877_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1ab939816_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>(nullptr)});;
	jule::Ptr<_1ab906a8b_Data> _9626_t = _1ab926b55_eval1((*(_92143_e)), (*((*(_92158_fc))))._field_Args[1LL]);;
	if ((_9626_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9626_t))._field_Decl) {
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9626_t))._field_Type;
	} else {
		jule::Ptr<_1ab129bc7_comptimeTypeInfo> _9697_cti = _1ab940883_comptimeTypeInfo((*(_9626_t))._field_Type.ptr());;
		if ((_9697_cti == nullptr)) {
			_1ab908d46_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1ab9091a9_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9697_cti))._field_base;
	};
	_1ab8430d2_checkTypeAlias(_9516_sc, &(_9526_alias));
	return _1ab933d82_buildVoidData();;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9be4d3_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _98135_e, jule::Ptr<_1a378984a_FnCallExpr>* _98150_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<_1ab906a8b_Data> _9826_result = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b38d4_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	if (((*((*(_98150_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_98135_e)).ptr(), (*((*(_98150_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9826_result;;
	};
	if (((*((*(_98150_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _9946_d = _1ab926814_evalExprKind((*(_98135_e)), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9946_d == nullptr)) {
		return _9826_result;;
	};
	if ((!(_1ab9578cd_validTypeForXof(&((*(_9946_d))._field_Type))))) {
		_1ab908d46_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_9946_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9826_result))._field_Model=jule::Any(jule::new_ptr<_1ab0859ac_SizeofExprModel>(_1ab0859ac_SizeofExprModel{._field_Expr=(*(_9946_d))._field_Model}), &__jule_any_type119);
	return _9826_result;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9be912_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _100636_e, jule::Ptr<_1a378984a_FnCallExpr>* _100651_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<_1ab906a8b_Data> _10076_result = jule::new_ptr<_1ab906a8b_Data>(_1ab906a8b_Data{._field_untyped=false, ._field_Type=_1ab9b38d4_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ab070c61_Const>(nullptr)});;
	if (((*((*(_100651_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_100636_e)).ptr(), (*((*(_100651_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10076_result;;
	};
	if (((*((*(_100651_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _10196_d = _1ab926814_evalExprKind((*(_100636_e)), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10196_d == nullptr)) {
		return _10076_result;;
	};
	if ((!(_1ab9578cd_validTypeForXof(&((*(_10196_d))._field_Type))))) {
		_1ab908d46_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ab939c12_Str((*(_10196_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10076_result))._field_Model=jule::Any(jule::new_ptr<_1ab086161_AlignofExprModel>(_1ab086161_AlignofExprModel{._field_Expr=(*(_10196_d))._field_Model}), &__jule_any_type120);
	return _10076_result;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9bed41_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _103133_e, jule::Ptr<_1a378984a_FnCallExpr>* _103148_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	if (((*((*(_103148_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_103133_e)).ptr(), (*((*(_103148_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103148_fc))))._field_Args.len() > 1LL)) {
		_1ab908d46_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ab906a8b_Data> _10406_d = _1ab927628_evalExpr((*(_103133_e)), (*((*(_103148_fc))))._field_Args[0LL]);;
	if ((_10406_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab93b9a0_GC((*(_10406_d))._field_Type.ptr())))) {
		_1ab908d46_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab906a8b_Data> _10496_result = _1ab933d82_buildVoidData();;
	(*(_10496_result))._field_Model=jule::Any(jule::new_ptr<_1ab0869be_FreeExprModel>(_1ab0869be_FreeExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type29);
	return _10496_result;;
}



inline jule::Ptr<_1ab906a8b_Data> _1ab9c0270_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _105444_e, jule::Ptr<_1a378984a_FnCallExpr>* _105459_fc, jule::Ptr<_1ab906a8b_Data>* _105486_d) {
	if ((!(_1ab90983b_isUnsafe((*(_105444_e)).ptr())))) {
		_1ab908d46_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_105459_fc))))._field_Args.len() < 1LL)) {
		_1ab908d46_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ab906a8b_Data> _10646_argd = _1ab927628_evalExpr((*(_105444_e)), (*((*(_105459_fc))))._field_Args[0LL]);;
	if ((_10646_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ab93bebc_Prim((*(_10646_argd))._field_Type.ptr()) == nullptr) || (!(_1ab945de9_IsStr(_1ab93bebc_Prim((*(_10646_argd))._field_Type).ptr()))))) {
		_1ab908d46_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ab939c12_Str((*(_10646_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1ab9074c6_IsConst(_10646_argd.ptr()))) || (!(_1ab0754c4_IsStr((*(_10646_argd))._field_Constant.ptr()))))) {
		_1ab908d46_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab906a8b_Data> _10796_r = _1ab933d82_buildVoidData();;
	jule::Ptr<_1ab08c9a3_FnIns> _10816_f = _1ab93d2a9_Fn((*((*(_105486_d))))._field_Type);;
	if (((*(_10816_f))._field_Generics.len() > 0LL)) {
		(*(_10796_r))._field_Type=(*((*(_10816_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1ab0866c2_BackendEmitExprModel> _10866_model = jule::new_ptr<_1ab0866c2_BackendEmitExprModel>(_1ab0866c2_BackendEmitExprModel{._field_Code=_1ab072dc8_ReadStr((*(_10646_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_105459_fc))))._field_Args.len() > 1LL)) {
		(*(_10866_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_105459_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_105459_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b13038b2:;
			if (it != expr_end) {
				jule::Ptr<_1ab6c4bab_Expr> _109215_arg = *it;
				{
					_10646_argd=_1ab926b55_eval1((*(_105444_e)), _109215_arg);
					if ((_10646_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10646_argd))._field_Decl) {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_10646_argd))._field_Type, &__jule_any_type86); __jule_collection; }));
					} else {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10646_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1b13038b2:;
				++it;
				goto _iter_begin_1b13038b2;
			}
			_iter_end_1b13038b2:;
		};
	};
	(*_10796_r.alloc)._field_Model=jule::Any(_10866_model, &__jule_any_type22);
	return _10796_r;;
}



inline jule::Ptr<_1ab39bba2_FileInfo> _1ab39c2bd_ParseFile(jule::Ptr<_1ab6aadb2_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab39bba2_FileInfo> _276_finf = jule::new_ptr<_1ab39bba2_FileInfo>(_1ab39bba2_FileInfo{._field_Ast=jule::Ptr<_1ab6bd9b8_AST>(nullptr), ._field_Errors=jule::Slice<_1a388d1ac_Log>(nullptr)});;
	({
		__jule_tuple_x_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log __jule_assign_result = _1ab39c895_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log _1ab39c895_parseFileset(jule::Ptr<_1ab6aadb2_Fileset> _5521_f) {
	__jule_tuple_x_1ab6bd9b8_AST__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	jule::Ptr<_1ab3bd047_parser> _566_p = jule::new_ptr<_1ab3bd047_parser>(_1ab3bd047_parser{._field_ast=jule::Ptr<_1ab6bd9b8_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1ab6bec94_Directive>>(nullptr), ._field_errors=jule::Slice<_1a388d1ac_Log>(nullptr), ._field_ep=jule::Ptr<_1ab3ac762_exprBuilder>(nullptr)});;
	_1ab3cd079_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3791bb5_ScopeTree> _1ab39d225_newScope(void) {
	return jule::new_ptr<_1a3791bb5_ScopeTree>(_1a3791bb5_ScopeTree{._field_Parent=jule::Ptr<_1a3791bb5_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1a3791555_Stmt>(nullptr), ._field_End=jule::Ptr<_1ab6a54d8_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab39d5aa_isSt(jule::Ptr<_1ab6a54d8_Token> _149_current, jule::Ptr<_1ab6a54d8_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ab39d92e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _2026_tokens, jule::I64* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ab6a54d8_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U64>(17LLU)) || ((*_263_prev.alloc)._field_Id == static_cast<jule::U64>(5LLU))) || (_1ab6a6033_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ab39dce7_nextStPos(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3415_tokens, jule::I64 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _356_braceN = 0LL;;
	jule::I64 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1ab6a54d8_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b137dc6c:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1ab39d92e_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab39d5aa_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1b138290d;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1b137c809;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b137deae:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab39d5aa_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1b138290d;
							};
						};
						goto _iter_next_1b137c809;
					}
				}
				_match_end_1b137de15:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1b137c809;
			};
			if ((_366_i > _3440_start)) {
				if (_1ab39d92e_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1b137c809;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab39d5aa_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab39d5aa_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1b137c809;
			};
			_julec_label_1b138290d:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b137c809:;
	}
	_iter_end_1b137c809:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_bool _1ab39e16b_skipSt(jule::I64* _9616_i, jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _9628_tokens) {
	__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab39dce7_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1ab39e16b_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _1ab39e853_splitStmts(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1ab39e49b_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab39e49b_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab39e49b_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_bool __jule_assign_result = _1ab39e16b_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ab39e49b_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1ab39e49b_stmt>(_1ab39e49b_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1b138667b:;
	}
	_iter_end_1b138667b:;;
	return _1186_stmts;;
}



inline jule::Bool _1ab3b7d99_isTypeOp(jule::U64* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U64>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U64>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1ab3b81a7_isTypeRange(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1462d51:;
		if (it != expr_end) {
			jule::I64 _8806_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I64 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b1464715:;
						if (it != expr_end) {
							jule::Ptr<_1ab6a54d8_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1b1464eb8:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1b1464715;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1b14653a3:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1b1464715;
										}
									}
									_match_end_1b14652a4:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1ab3b7d99_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1b1464715:;
							++it;
							goto _iter_begin_1b1464715;
						}
						_iter_end_1b1464715:;
					};
					return true;;
				};
				if ((!(_1ab3b7d99_isTypeOp(&((*_8809_token.alloc)._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1b1462d51:;
			++it;
			_8806_i++;
			goto _iter_begin_1b1462d51;
		}
		_iter_end_1b1462d51:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1ab3b8471_getBlockExpr(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _91122_tokens) {
	jule::I64 _9126_braceN = 0LL;;
	jule::I64 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1463a44:;
		if (it != expr_end) {
			jule::I64 _9146_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b14680a9:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b1468142:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1b1467edd;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b14681a8:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b146821e:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1b1467edd:;
				};
			}
			_iter_next_1b1463a44:;
			++it;
			_9146_i++;
			goto _iter_begin_1b1463a44;
		}
		_iter_end_1b1463a44:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token _1ab3b8839_splitDelim(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _94320_tokens, jule::U64 _94345_delim) {
	__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token __jule_func_result;
	jule::I64 _9446_func = -1LL;;
	jule::I64 _9456_rangeN = 0LL;;
	jule::I64 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1b146cc07:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b146cc7e:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1b146b3dc;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b146cce5:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1b146b3dc;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1b146cd5b:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1b146c971:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1b146b3dc:;
	}
	_iter_end_1b146b3dc:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1ab3b8b03_findLowestPrecOp(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I64 _9886_precPos = -1LL;;
	jule::I64 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1472ee8:;
		if (it != expr_end) {
			jule::I64 _9926_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b1473c96:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1b1473d2e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b1473d2e:;
						{
							(_9906_braceN)++;
							goto _iter_next_1b1472ee8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b1473d95:;
						{
							(_9906_braceN)--;
							goto _iter_next_1b1472ee8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1b1473e0b:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1b1472ee8;
						}
					}
					_match_end_1b1473bca:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1b1473e83:;
						{
							goto _iter_next_1b1472ee8;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1b14756d2:;
						{
							goto _iter_next_1b1472ee8;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1b1475748:;
						{
							goto _iter_next_1b1472ee8;
						}
					}
					else if ((!(_1ab6a6033_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1b14757ae:;
						{
							goto _iter_next_1b1472ee8;
						}
					}
					_match_end_1b1475649:;
				};
				jule::Ptr<_1ab6a54d8_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1ab6a5c25_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b1472ee8;
				};
				if (((_9926_i > 1LL) && ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1ab6a54d8_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1b1472ee8;
						};
					};
				};
				jule::U8 _10383_p = _1ab6a5890_Prec((*(_9929_token)));;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1b1472ee8:;
			++it;
			_9926_i++;
			goto _iter_begin_1b1472ee8;
		}
		_iter_end_1b1472ee8:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1ab6c64c6_IdentExpr> _1ab3b8dbc_buildIdentExpr(jule::Ptr<_1ab6a54d8_Token>* _104724_token) {
	return jule::new_ptr<_1ab6c64c6_IdentExpr>(_1ab6c64c6_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_int _1ab3b9186_getRangeExprTokens(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _105528_tokens) {
	__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10566_rangeN = 0LL;;
	jule::I64 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1ab6a54d8_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b147c5eb:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b147c92b:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1b147c673:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b147bac3:;
	}
	_iter_end_1b147bac3:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ab3b9560_isAnonFnHead(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b147e3cd:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1b147e80c;
				};
				goto _case_begin_1b147e950;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b147e950:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1b147e80c;
				};
				return true;;
			}
		}
		_match_end_1b147e80c:;
	};
	return false;;
}



inline jule::Bool _1ab3ba20e_checkAssignTokens(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ab6aa06a_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b152a765:;
		if (it != expr_end) {
			jule::Ptr<_1ab6a54d8_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b152ae2a:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b152b2b0:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1b152b1b1:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1b152c415:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1b152c49d:;
						{
							goto _iter_next_1b152a765;
						}
					}
					else if (_1ab6aa5ed_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1b152c514:;
						{
							return true;;
						}
					}
					_match_end_1b152c36b:;
				};
			}
			_iter_next_1b152a765:;
			++it;
			goto _iter_begin_1b152a765;
		}
		_iter_end_1b152a765:;
	};
	return false;;
}



inline _1a388d1ac_Log _1ab3bb1bb_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1ab6aadb2_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1a388d61e_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _1ab3bb6e9_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab6a54d8_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I64 _396_rangeN = 1LL;;
	jule::I64 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1ab6a54d8_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1b153256e:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1b15328d2:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1b1532849:;
			};
		}
	_iter_next_1b1530171:;
	}
	_iter_end_1b1530171:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token _1ab3bb9b3_rangeLast(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _6019_tokens) {
	__jule_tuple_sx_1ab6a54d8_Token__jule_tuple_sx_1ab6a54d8_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U64>(73LLU)) && (_642_first != static_cast<jule::U64>(76LLU))) && (_642_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _706_braceN = 0LL;;
	jule::I64 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1ab6a54d8_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b153674e:;
					{
						(_706_braceN)++;
						goto _iter_next_1b1535a8e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b1536a7e:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1b15367c6:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b1535a8e:;
	}
	_iter_end_1b1535a8e:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log _1ab3bbe69_parts(jule::Slice<jule::Ptr<_1ab6a54d8_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1ab6a54d8_Token__jule_tuple_s_1a388d1ac_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1026_rangeN = 0LL;;
	jule::I64 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b153991c:;
		if (it != expr_end) {
			jule::I64 _1046_i = it - expr->begin();
			jule::Ptr<_1ab6a54d8_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b153a951:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b153a9c8:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1b153aa3e:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1b153991c;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1a388d1ac_Log _1155_err = _1ab3bb1bb_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1a388d1ac_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1b153a885:;
				};
			}
			_iter_next_1b153991c:;
			++it;
			_1046_i++;
			goto _iter_begin_1b153991c;
		}
		_iter_end_1b153991c:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab6a54d8_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1ab3bc200_getCloseOfBrace(jule::U64 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b153e0e7:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b153e191:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b153e218:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1b153a302:;
			{
				return _12820_left;;
			}
		}
		_match_end_1b153a3ce:;
	};
}



inline _1a388d1ac_Log _1ab3bc62e_compilerErr(jule::Ptr<_1ab6a54d8_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1a388d61e_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1ab6ac1b0_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1ab3bc9c5_pushSuggestion(_1a388d1ac_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1a388d61e_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1ab6c0877_TypeDecl> _1ab3cd93c_buildVoidType(void) {
	return jule::new_ptr<_1ab6c0877_TypeDecl>(_1ab6c0877_TypeDecl{._field_Token=jule::Ptr<_1ab6a54d8_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1aba4a6e6_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1abbb76cb:;
			{
				__jule_func_result.__jule_result_arg0=_1a38914bd_IsWindows(_1a87b9776_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1abbb7742:;
			{
				__jule_func_result.__jule_result_arg0=_1a38917cb_IsDarwin(_1a87b9776_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1abbb73ac:;
			{
				__jule_func_result.__jule_result_arg0=_1a3891a95_IsLinux(_1a87b9776_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1abbb7423:;
			{
				__jule_func_result.__jule_result_arg0=_1a3892700_IsUnix(_1a87b9776_OS);
			}
		}
		else {
			_case_begin_1abbb6d18:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1abbb728b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1aba45aed_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1abbb9c3e:;
			{
				__jule_func_result.__jule_result_arg0=_1a3891dd6_IsI386(_1a87b9a2e_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1abbb9ca5:;
			{
				__jule_func_result.__jule_result_arg0=_1a389216c_IsAmd64(_1a87b9a2e_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1abbb9920:;
			{
				__jule_func_result.__jule_result_arg0=_1a3892436_IsArm64(_1a87b9a2e_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1abbb9986:;
			{
				__jule_func_result.__jule_result_arg0=_1a3892d1b_Is64Bit(_1a87b9a2e_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1abbb99ec:;
			{
				__jule_func_result.__jule_result_arg0=_1a3892ac9_Is32Bit(_1a87b9a2e_Arch);
			}
		}
		else {
			_case_begin_1abbb937b:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1abbb97ee:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aba60a80_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1a87b573e_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1a87b51ab_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1a87ab823_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba4a6e6_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba45aed_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1a87ab823_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba4a6e6_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba45aed_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba45aed_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba4a6e6_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aba4a6e6_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1aba61c07_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1a87b9776_OS); };
	if (_1a3892700_IsUnix(_1a87b9776_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1aba61e7c_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1a87b9a2e_Arch); };
	if (_1a3892d1b_Is64Bit(_1a87b9a2e_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1a3892ac9_Is32Bit(_1a87b9a2e_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1aba62268_initVars(jule::Slice<jule::Str>* _5518_vars, _1aba618d8_CompileInfo* _5532_info) {
	_1aba61c07_setOsVars(_5518_vars);
	_1aba61e7c_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1abbc5bd4:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1abbc5673:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1abbc560c:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1abbc571c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1abbc6bc4:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1abbc6c3a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1abbc6b3b:;
	};
}



inline jule::Slice<jule::U8> _1ab3d2b50_readBuff(jule::Str _1613_path) {
	return ({
		auto except = static__1a68d0cbd_Read(_1613_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1ad792293_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1a697d750_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a388d1ac_Log _1ab3d2e5d_flatCompilerErr(jule::Str _2720_text) {
	return _1a388d1ac_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2720_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1ab0898e5_Fn> _1ab9c0bdd_RuntimeFindFn(jule::Ptr<_1ab866578_ImportInfo>* _1823_runtime, jule::Str _1851_ident) {
	;
	jule::Ptr<_1ab0898e5_Fn> _206_f = _1ab867b84_FindFn((*(_1823_runtime)).ptr(), _1851_ident, false);;
	if ((_206_f == nullptr)) {
		jule::println(_1abc17dd0_toStr(_1851_ident));
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:23:3"));;
	};
	return _206_f;;
}



inline jule::Ptr<_1a37a2577_Struct> _1ab9c12d7_RuntimeFindStruct(jule::Ptr<_1ab866578_ImportInfo>* _3327_runtime, jule::Str _3355_ident) {
	;
	jule::Ptr<_1a37a2577_Struct> _356_f = _1ab867788_FindStruct((*(_3327_runtime)).ptr(), _3355_ident, false);;
	if ((_356_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:37:3"));;
	};
	return _356_f;;
}



inline void _1ab3d787a_pushPasses(jule::Ptr<_1ab868cea_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc19d16:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _12414_f = *it;
			{
				_julec_label_1abc1a487:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc1a8b6:;
					if (it != expr_end) {
						_1ab855a51_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1abc1a8b6;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abc1c6a9:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1abc1a8b6;
										};
									}
									_iter_next_1abc1c6a9:;
									++it;
									goto _iter_begin_1abc1c6a9;
								}
								_iter_end_1abc1c6a9:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1abc1a8b6:;
						++it;
						goto _iter_begin_1abc1a8b6;
					}
					_iter_end_1abc1a8b6:;
				};
			}
			_iter_next_1abc19d16:;
			++it;
			goto _iter_begin_1abc19d16;
		}
		_iter_end_1abc19d16:;
	};
}



inline jule::Slice<jule::Str> _1ab3d7c43_getAllUniquePasses(jule::Ptr<_1ab868cea_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1ab3d787a_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1c09e:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1ab3d787a_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1abc1c09e:;
			++it;
			goto _iter_begin_1abc1c09e;
		}
		_iter_end_1abc1c09e:;
	};
	return _14110_passes;;
}



inline _1aba618d8_CompileInfo _1ab3d7e52_buildCompileInfo(void) {
	_1aba618d8_CompileInfo _1546_info = _1aba618d8_CompileInfo{._field_Prod=_1a87c1be0_Production, ._field_Test=_1a87c132c_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1a87be418_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1abc1e931:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1abc1ea74:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1abc1ea0d:;
	};
	{
		auto &_match_expr{ _1a87c0a24_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1abc1eb0c:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1abc20217:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1abc2027d:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1abc20b63:;
	};
	return _1546_info;;
}



inline void _1ab3d820a_pushRuntimeToAST(jule::Ptr<_1ab6bd9b8_AST>* _17926_f) {
	jule::Ptr<_1a3799a14_UseDecl> _1806_decl = jule::new_ptr<_1a3799a14_UseDecl>(_1a3799a14_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1ab6a54d8_Token>(_1ab6a54d8_Token{._field_File=jule::Ptr<_1ab6aadb2_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U64>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1a3799a14_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1ab3d8958_IterPackages(jule::Ptr<_1ab3d5ec7_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ab868cea_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc383d9:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1abc383d9:;
			++it;
			goto _iter_begin_1abc383d9;
		}
		_iter_end_1abc383d9:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1ab3d8bcd_IterFiles(jule::Ptr<_1ab868cea_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1ab090be8_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc41788:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1abc41788:;
			++it;
			goto _iter_begin_1abc41788;
		}
		_iter_end_1abc41788:;
	};
}



inline void _1ab3d8eb9_IterTraitMethods(jule::Ptr<_1ab095109_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1ab0898e5_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc4247b:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1abc4247b:;
			++it;
			goto _iter_begin_1abc4247b;
		}
		_iter_end_1abc4247b:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc42932:;
		if (it != expr_end) {
			jule::Ptr<_1ab942027_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1ab095109_Trait> _297_it = _1ab93d7c6_Trait((*(_2814_inh))._field_Type.ptr());;
				_1ab3d8eb9_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1abc42932:;
			++it;
			goto _iter_begin_1abc42932;
		}
		_iter_end_1abc42932:;
	};
}



inline jule::Bool _1ab3db20d_IsForwarded(jule::Ptr<_1ab835bc9_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b17d3402:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1ab906a8b_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b17d3644:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b17d42b0:;
						{
							return false;;
						}
					}
					_match_end_1b17d4249:;
				};
			}
		}
		else {
			_case_begin_1b17d3578:;
			{
				return true;;
			}
		}
		_match_end_1b17d3512:;
	};
}



inline jule::Bool _1ab3db3d9_IsExprComesFromBind(jule::Ptr<_1ab906a8b_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b17d4d0a:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1ab8a7289_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b17d5019:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1b17d3d70:;
			{
				return false;;
			}
		}
		_match_end_1b17d3d09:;
	};
}



inline jule::Bool _1ab3db6a3_IsAny(jule::Ptr<_1ab939816_Type>* _4015_t) {
	if ((_1ab93ca06_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab94292e_Prim> _442_prim = _1ab93bebc_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1ab946180_IsAny(_442_prim));;
}



inline jule::Bool _1ab3db9e4_IsClosure(jule::Ptr<_1ab080435_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1ab3dbc7a_IsOpMethod(jule::Ptr<_1ab0898e5_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ab08c9a3_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ab3dc0ee_IsTraitMethod(jule::Ptr<_1a37a53d2_StructIns>* _6823_owner, jule::Ptr<_1ab08c9a3_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b17da7e4:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _6914_t = *it;
			{
				if ((_1ab095cdb_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b17da7e4:;
			++it;
			goto _iter_begin_1b17da7e4;
		}
		_iter_end_1b17da7e4:;
	};
	return false;;
}



inline jule::Bool _1ab3dc473_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _1a87a8b1c_HasPrefix(_8217_f, _1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a87b8bd7_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1ab6bec94_Directive> _1ab3dd30e_FindDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b17e66ce:;
		if (it != expr_end) {
			jule::Ptr<_1ab6bec94_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1b17e66ce:;
			++it;
			goto _iter_begin_1b17e66ce;
		}
		_iter_end_1b17e66ce:;
	};
	return nullptr;;
}



inline jule::Bool _1ab3dd6c7_HasDirective(jule::Slice<jule::Ptr<_1ab6bec94_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1ab3dd30e_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::I64 _1ab3de211_FindTraitTypeOffsetS(jule::Ptr<_1ab095109_Trait> _3925_t, jule::Ptr<_1a37a53d2_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b17ea804:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b17eb6e5:;
						if (it != expr_end) {
							jule::Ptr<_1a37a53d2_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1b17eb6e5:;
							++it;
							goto _iter_begin_1b17eb6e5;
						}
						_iter_end_1b17eb6e5:;
					};
					goto _iter_end_1b17ea804;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1b17ea804:;
			++it;
			goto _iter_begin_1b17ea804;
		}
		_iter_end_1b17ea804:;
	};
	return -1LL;;
}



inline jule::I64 _1ab3de585_FindTraitTypeOffset(jule::Ptr<_1ab095109_Trait> _6224_t, jule::Ptr<_1ab939816_Type> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a37a53d2_StructIns> _6610_s = nullptr;;
	if ((_1ab93c253_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1ab93c253_Sptr(_6245_k)))._field_Elem;
	};
	_6610_s=_1ab93d540_Struct(_6245_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1ab3de211_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab3de9b4_FindOperator(jule::Ptr<_1a37a53d2_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b18001dd:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b17eeee0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b1800056:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b1800254:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b18002cb:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b1800353:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b1800474:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b18004da:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b1800551:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b18005b7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b180062d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b18006a5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b180072c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b18007a4:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b180082b:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b18008a3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b180092a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b18009a2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b1800a29:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b1800aa1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b1800b28:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b1800ba0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b1800c27:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b1800c9e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b1800d26:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1b17eeb27:;
			{
				return nullptr;;
			}
		}
		_match_end_1b17eec59:;
	};
}



inline jule::Ptr<_1ab08c9a3_FnIns> _1ab3ded38_FindFnGenericInstance(jule::Ptr<_1ab0898e5_Fn>* _14731_f, jule::Slice<jule::Ptr<_1ab939816_Type>> _14745_generics) {
	_julec_label_1b1808537:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b180c76c:;
		if (it != expr_end) {
			jule::Ptr<_1ab08c9a3_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b180d174:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1ab93a053_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Type, _14745_generics[_1507_i])))) {
								goto _iter_next_1b180c76c;
							};
						}
						_iter_next_1b180d174:;
						++it;
						_1507_i++;
						goto _iter_begin_1b180d174;
					}
					_iter_end_1b180d174:;
				};
				return _14914_ins;;
			}
			_iter_next_1b180c76c:;
			++it;
			goto _iter_begin_1b180c76c;
		}
		_iter_end_1b180c76c:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1a37a53d2_StructIns> _1ab3e02bc_FindStructGenericInstance(jule::Ptr<_1a37a2577_Struct>* _16335_s, jule::Slice<jule::Ptr<_1ab939816_Type>> _16353_generics) {
	_julec_label_1b180d5e7:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b180e86d:;
		if (it != expr_end) {
			jule::Ptr<_1a37a53d2_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1810275:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1ab93a053_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Type, _16353_generics[_1667_i])))) {
								goto _iter_next_1b180e86d;
							};
						}
						_iter_next_1b1810275:;
						++it;
						_1667_i++;
						goto _iter_begin_1b1810275;
					}
					_iter_end_1b1810275:;
				};
				return _16514_ins;;
			}
			_iter_next_1b180e86d:;
			++it;
			goto _iter_begin_1b180e86d;
		}
		_iter_end_1b180e86d:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Ptr<_1ab866578_ImportInfo> _1ab3e05b9_SelectImport(jule::Slice<jule::Ptr<_1ab866578_ImportInfo>> _17821_imports, jule::Str _17851_linkpath) {
	{
		auto expr = &(_17821_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18106e8:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> _17914_imp = *it;
			{
				if (((*(_17914_imp))._field_LinkPath == _17851_linkpath)) {
					return _17914_imp;;
				};
			}
			_iter_next_1b18106e8:;
			++it;
			goto _iter_begin_1b18106e8;
		}
		_iter_end_1b18106e8:;
	};
	return nullptr;;
}



inline jule::Bool _1abc362d8_isOrdered(jule::Ptr<_1ab8a7289_Var>* _1418_t, jule::Slice<jule::Ptr<_1ab8a7289_Var>> _1425_s) {
	_julec_label_1abc38719:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc38b6a:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1abc39473:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1abc38b6a;
							};
						}
					}
					_match_end_1abc393eb:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc39b5a:;
					if (it != expr_end) {
						jule::Ptr<_1ab8a7289_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1abc38b6a;
							};
						}
						_iter_next_1abc39b5a:;
						++it;
						goto _iter_begin_1abc39b5a;
					}
					_iter_end_1abc39b5a:;
				};
				return false;;
			}
			_iter_next_1abc38b6a:;
			++it;
			goto _iter_begin_1abc38b6a;
		}
		_iter_end_1abc38b6a:;
	};
	return true;;
}

inline jule::Bool _1abc3c058_isOrdered(jule::Ptr<_1a37a2577_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a37a2577_Struct>> _1425_s) {
	_julec_label_1abc3e445:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc3e896:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc40259:;
					if (it != expr_end) {
						jule::Ptr<_1a37a2577_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1abc3e896;
							};
						}
						_iter_next_1abc40259:;
						++it;
						goto _iter_begin_1abc40259;
					}
					_iter_end_1abc40259:;
				};
				return false;;
			}
			_iter_next_1abc3e896:;
			++it;
			goto _iter_begin_1abc3e896;
		}
		_iter_end_1abc3e896:;
	};
	return true;;
}



inline void _1abc33912_order(jule::Slice<jule::Ptr<_1ab8a7289_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1abc33dc9:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1abc34b66:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1ab8a7289_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1abc35d54:;
				if (it != expr_end) {
					jule::Ptr<_1ab8a7289_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1abc3521b;
						};
					}
					_iter_next_1abc35d54:;
					++it;
					goto _iter_begin_1abc35d54;
				}
				_iter_end_1abc35d54:;
			};
			if (_1abc362d8_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1abc3521b:;
	}
	_iter_end_1abc3521b:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1abc33dc9;
	};
}

inline void _1abc344e5_order(jule::Slice<jule::Ptr<_1a37a2577_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1abc35480:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1abc391ba:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a37a2577_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1abc3bac4:;
				if (it != expr_end) {
					jule::Ptr<_1a37a2577_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1abc3ae8b;
						};
					}
					_iter_next_1abc3bac4:;
					++it;
					goto _iter_begin_1abc3bac4;
				}
				_iter_end_1abc3bac4:;
			};
			if (_1abc3c058_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1abc3ae8b:;
	}
	_iter_end_1abc3ae8b:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1abc35480;
	};
}



inline void _1ad1d1bd3_EliminateDefines(jule::Ptr<_1ab3d5ec7_IR>* _38426_ir) {
	jule::Ptr<_1ad1cd7e5_ObjectDeadCode> _3856_ocd = static__1ad1cdd67_new(_38426_ir);;
	_1ad1d192a_elimanate(_3856_ocd);
}



inline void _1ad1d5a94_eliminateDeadCodeOfScope(jule::Ptr<_1ab835bc9_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1ab838726_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab838726_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab838726_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1ab838d86_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab838d86_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1ad1d2860_scopeDeadCode> _2216_sdc = jule::new_ptr<_1ad1d2860_scopeDeadCode>(_1ad1d2860_scopeDeadCode{._field_parent=jule::Ptr<_1ad1d2860_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ab838726_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ab838d86_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1ad1d5797_optimizeStmts(_2216_sdc);
	};
}



inline void _1ad1d5d19_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ab0898e5_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1897719:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b189a1bc:;
					if (it != expr_end) {
						jule::Ptr<_1ab08c9a3_FnIns> _23215_ins = *it;
						{
							_1ad1d5a94_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1b189a1bc:;
						++it;
						goto _iter_begin_1b189a1bc;
					}
					_iter_end_1b189a1bc:;
				};
			}
			_iter_next_1b1897719:;
			++it;
			goto _iter_begin_1b1897719;
		}
		_iter_end_1b1897719:;
	};
}



inline void _1ad1d604a_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a37a2577_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b189a134:;
		if (it != expr_end) {
			jule::Ptr<_1a37a2577_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b189b2cd:;
					if (it != expr_end) {
						jule::Ptr<_1a37a53d2_StructIns> _24115_ins = *it;
						{
							_1ad1d5d19_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1b189b2cd:;
						++it;
						goto _iter_begin_1b189b2cd;
					}
					_iter_end_1b189b2cd:;
				};
			}
			_iter_next_1b189a134:;
			++it;
			goto _iter_begin_1b189a134;
		}
		_iter_end_1b189a134:;
	};
}



inline void _1ad1d6303_eliminateFunctionsScopePackage(jule::Ptr<_1ab868cea_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b189c08c:;
		if (it != expr_end) {
			jule::Ptr<_1ab090be8_SymTab> _24814_f = *it;
			{
				_1ad1d5d19_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1ad1d604a_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1b189c08c:;
			++it;
			goto _iter_begin_1b189c08c;
		}
		_iter_end_1b189c08c:;
	};
}



inline void _1ad1d6501_eliminateScopePackage(jule::Ptr<_1ab868cea_Package>* _25431_pkg) {
	_1ad1d6303_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1ad1d6732_EliminateScopes(jule::Ptr<_1ab3d5ec7_IR>* _25925_ir) {
	jule::I64 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1ab866578_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1ad1d6501_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1b189d797:;
	}
	_iter_end_1b189d797:;;
	_1ad1d6501_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline jule::Uintptr _1ad10dc75_typeData(jule::Any* _914_m) {
	return ((jule::Uintptr)(((*(_914_m))).type));;
}



inline jule::Bool _1ad10deea_equalConst(jule::Ptr<_1ab070c61_Const> _1315_l, jule::Ptr<_1ab070c61_Const> _1336_r) {
	{
		
		if (_1ab074c21_IsI64(_1315_l.ptr())) {
			_case_begin_1b191282d:;
			{
				return (_1ab074c21_IsI64(_1336_r.ptr()) && (_1ab072625_ReadI64(_1315_l) == _1ab072625_ReadI64(_1336_r)));;
			}
		}
		else if (_1ab074ea7_IsU64(_1315_l.ptr())) {
			_case_begin_1b1912894:;
			{
				return (_1ab074ea7_IsU64(_1336_r.ptr()) && (_1ab0728ab_ReadU64(_1315_l) == _1ab0728ab_ReadU64(_1336_r)));;
			}
		}
		else if (_1ab07575a_IsF64(_1315_l.ptr())) {
			_case_begin_1b191290a:;
			{
				return (_1ab07575a_IsF64(_1336_r.ptr()) && (_1ab07315e_ReadF64(_1315_l) == _1ab07315e_ReadF64(_1336_r)));;
			}
		}
		else if (_1ab0754c4_IsStr(_1315_l.ptr())) {
			_case_begin_1b1912982:;
			{
				return (_1ab0754c4_IsStr(_1336_r.ptr()) && (_1ab072dc8_ReadStr(_1315_l) == _1ab072dc8_ReadStr(_1336_r)));;
			}
		}
		else if (_1ab07523d_IsBool(_1315_l.ptr())) {
			_case_begin_1b1912a09:;
			{
				return (_1ab07523d_IsBool(_1336_r.ptr()) && (_1ab072b42_ReadBool(_1315_l) == _1ab072b42_ReadBool(_1336_r)));;
			}
		}
		else if (_1ab0759e1_IsNil(_1315_l.ptr())) {
			_case_begin_1b1912b6e:;
			{
				return _1ab0759e1_IsNil(_1336_r.ptr());;
			}
		}
		else {
			_case_begin_1b1912740:;
			{
				return false;;
			}
		}
		_match_end_1b1911e48:;
	};
}



inline jule::Bool _1ad11eabb_equalCasting(jule::Ptr<_1ab07dc4c_CastingExprModel> _3217_l, jule::Ptr<_1ab07dc4c_CastingExprModel> _3245_r) {
	if ((!(_1ab93a053_Equal((*(_3217_l))._field_Type, (*(_3245_r))._field_Type)))) {
		return false;;
	};
	return _1ad120a01_equalModels((*((*_3217_l.alloc)._field_Expr))._field_Model, (*(*(_3245_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ad11ee84_equalUnary(jule::Ptr<_1ab07c9e8_UnaryExprModel> _3915_l, jule::Ptr<_1ab07c9e8_UnaryExprModel> _3941_r) {
	if ((((*((*(_3915_l))._field_Op))._field_Id != (*(*(_3941_r))._field_Op.alloc)._field_Id) || ((*(*(_3915_l))._field_Op.alloc)._field_Kind != (*(*(_3941_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1ad120a01_equalModels((*((*_3915_l.alloc)._field_Expr))._field_Model, (*(*(_3941_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ad120308_equalIndexing(jule::Ptr<_1ab07ee7e_IndexingExprModel> _4618_l, jule::Ptr<_1ab07ee7e_IndexingExprModel> _4647_r) {
	return (_1ad120a01_equalModels((*((*(_4618_l))._field_Expr))._field_Model, (*(*(_4647_r))._field_Expr.alloc)._field_Model) && _1ad120a01_equalModels((*((*_4618_l.alloc)._field_Index))._field_Model, (*(*(_4647_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1ad12067c_equalBinary(jule::Ptr<_1ab07c61e_BinaryExprModel> _5116_l, jule::Ptr<_1ab07c61e_BinaryExprModel> _5143_r) {
	if ((((*((*(_5116_l))._field_Op))._field_Id != (*(*(_5143_r))._field_Op.alloc)._field_Id) || ((*(*(_5116_l))._field_Op.alloc)._field_Kind != (*(*(_5143_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1ad120a01_equalModels((*((*_5116_l.alloc)._field_Left))._field_Model, (*(*(_5143_r))._field_Left.alloc)._field_Model) && _1ad120a01_equalModels((*((*_5116_l.alloc)._field_Right))._field_Model, (*(*(_5143_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1ad120a01_equalModels(jule::Any _6216_l, jule::Any _6236_r) {
	if ((_1ad10dc75_typeData(&(_6216_l)) != _1ad10dc75_typeData(&(_6236_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6216_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b1926358:;
			{
				return (_6216_l.unsafe_cast_ptr<_1ab8a7289_Var>() == _6236_r.cast_ptr<_1ab8a7289_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b1926de7:;
			{
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _703_li = _6216_l.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>();;
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _713_ri = _6236_r.cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_703_li))._field_Field == (*(_713_ri))._field_Field) && _1ad120a01_equalModels((*((*_703_li.alloc)._field_Expr))._field_Model, (*(*(_713_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b1926e5d:;
			{
				return _1ad10deea_equalConst(_6216_l.cast_ptr<_1ab070c61_Const>(&__jule_any_type15), _6236_r.cast_ptr<_1ab070c61_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b1926a1d:;
			{
				return _1ad11eabb_equalCasting(_6216_l.cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95), _6236_r.cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1926a84:;
			{
				return _1ad11ee84_equalUnary(_6216_l.cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112), _6236_r.cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b1926aea:;
			{
				return _1ad120308_equalIndexing(_6216_l.cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42), _6236_r.cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b1926b61:;
			{
				return _1ad12067c_equalBinary(_6216_l.cast_ptr<_1ab07c61e_BinaryExprModel>(&__jule_any_type113), _6236_r.cast_ptr<_1ab07c61e_BinaryExprModel>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1b19269a7:;
			{
				return false;;
			}
		}
		_match_end_1b192659a:;
	};
}



inline void _1ad1266a5_possibleNilRemove(jule::Ptr<_1ad1256c6_nils>* _7227_n, jule::Any _7237_m) {
	if (((*(_7227_n)) != nullptr)) {
		_1ad125eac_removeVar((*(_7227_n)).ptr(), _1ad127178_getNilVar(_7237_m));
	};
}



inline jule::Bool _1ad126a6d_isGuaranteedNonNilExpr(jule::Ptr<_1ad1256c6_nils>* _7832_n, jule::Any _7842_m) {
	{
		auto &_match_expr{ _7842_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aeac49e2:;
			{
				return true;;
			}
		}
		_match_end_1aeac497b:;
	};
	return (((*(_7832_n)) != nullptr) && _1ad1262ed_isSafe((*(_7832_n)).ptr(), _1ad127178_getNilVar(_7842_m)));;
}



inline jule::Bool _1ad126d37_isNilValidType(jule::Ptr<_1ab939816_Type> _8623_t) {
	return (_1ab93c253_Sptr(_8623_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1ad127178_getNilVar(jule::Any _8814_m) {
	if ((!(_1ad13d502_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _8814_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aeac60ba:;
			{
				jule::Ptr<_1ab8a7289_Var> _943_v = _8814_m.unsafe_cast_ptr<_1ab8a7289_Var>();;
				if ((!((*(_943_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_8814_m.unsafe_cast_ptr<_1ab8a7289_Var>());;
				};
				return _1ad127178_getNilVar((*((*((*_943_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aeac651b:;
			{
				return static_cast<jule::Uintptr>((*(_8814_m.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1aeac6054:;
	};
	return 0LLU;;
}



inline jule::Bool _1ad12cda4_isConstantValidConditionalCase(jule::Ptr<_1ab8360e7_If>* _67636_i) {
	{
		auto &_match_expr{ (*((*(_67636_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aeacd578:;
			{
				jule::Ptr<_1ab070c61_Const> _6793_c = (*((*(_67636_i))))._field_Expr.unsafe_cast_ptr<_1ab070c61_Const>();;
				return (_1ab07523d_IsBool(_6793_c.ptr()) && _1ab072b42_ReadBool(_6793_c));;
			}
		}
		_match_end_1aeacdc3d:;
	};
	return false;;
}



inline jule::Bool _1ad12d1b2_isUnreachableExpr(jule::Any* _68523_expr) {
	{
		auto &_match_expr{ (*(_68523_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aeace524:;
			{
				jule::Ptr<_1ab070c61_Const> _6883_c = (*(_68523_expr)).cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
				return (_1ab07523d_IsBool(_6883_c.ptr()) && (!(_1ab072b42_ReadBool(_6883_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aeacd611:;
			{
				jule::Ptr<_1ab07c61e_BinaryExprModel> _6913_m = (*(_68523_expr)).cast_ptr<_1ab07c61e_BinaryExprModel>(&__jule_any_type113);;
				if (((*((*(_6913_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1ad12d1b2_isUnreachableExpr(&((*((*_6913_m.alloc)._field_Left))._field_Model)) || _1ad12d1b2_isUnreachableExpr(&((*((*_6913_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1aeacee70:;
	};
	return false;;
}



inline jule::Bool _1ad12d47b_isConstantValidMatchCase(jule::Ptr<_1ab83ae32_Case>* _70030_case) {
	{
		auto expr = &((*((*(_70030_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aead3715:;
		if (it != expr_end) {
			jule::Ptr<_1ab906a8b_Data> *_7019_expr = it;
			{
				if (((_1ab9074c6_IsConst((*(_7019_expr)).ptr()) && _1ab07523d_IsBool((*(*(_7019_expr)).alloc)._field_Constant.ptr())) && _1ab072b42_ReadBool((*((*(_7019_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1aead3715:;
			++it;
			goto _iter_begin_1aead3715;
		}
		_iter_end_1aead3715:;
	};
	return false;;
}



inline jule::Bool _1ad12d7bc_isUnreachableConditionalCase(jule::Ptr<_1ab8360e7_If>* _70934_i) {
	return _1ad12d1b2_isUnreachableExpr(&((*((*(_70934_i))))._field_Expr));;
}



inline jule::Bool _1ad12da53_isUnreachableMatchCase(jule::Ptr<_1ab83ae32_Case>* _71328_case) {
	{
		auto expr = &((*((*(_71328_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aead5728:;
		if (it != expr_end) {
			jule::Ptr<_1ab906a8b_Data> *_7149_expr = it;
			{
				if ((!(_1ad12d1b2_isUnreachableExpr(&((*((*(_7149_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1aead5728:;
			++it;
			goto _iter_begin_1aead5728;
		}
		_iter_end_1aead5728:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ad1340db_checkForBitShiftOpt(jule::Ptr<_1ab07c124_OperandExprModel>* _62225_l, jule::Ptr<_1ab07c124_OperandExprModel>* _62254_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ab11827b_IsInt(_1ab939c12_Str((*((*(_62225_l))))._field_Type.ptr())))) || (!(_1ab11827b_IsInt(_1ab939c12_Str((*((*(_62254_r))))._field_Type)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1ab07367b_AsU64((*((*(_62254_r))))._field_Model.cast_ptr<_1ab070c61_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6302_j = _1a93cc61e_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6312_z = static_cast<jule::U64>(_6302_j);;
	if ((static_cast<jule::F64>(_6312_z) != _6302_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6312_z;
	return __jule_func_result;;
}



inline jule::Bool _1ad1344a4_areSameLvalueExprModel(jule::Any* _63928_l, jule::Any* _63949_r) {
	{
		auto &_match_expr{ (*(_63928_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b1a93728:;
			{
				return ((*(_63949_r)) == (*(_63928_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b1a9353b:;
			{
				{
					auto &_match_expr{ (*(_63949_r)) };
					
					if (_match_expr.type == &__jule_any_type100) {
						_case_begin_1b1a940b9:;
						{
							goto _match_end_1b1a9454d;
						}
					}
					else {
						_case_begin_1b1a945b4:;
						{
							return false;;
						}
					}
					_match_end_1b1a9454d:;
				};
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _6523_lsi = (*(_63928_l)).cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _6533_rsi = (*(_63949_r)).cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				if (((*(_6523_lsi))._field_Field != (*(_6533_rsi))._field_Field)) {
					return false;;
				};
				return _1ad1344a4_areSameLvalueExprModel(&((*((*_6523_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6533_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1a937a0:;
			{
				{
					auto &_match_expr{ (*(_63949_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1b1a95dac:;
						{
							jule::Ptr<_1ab07c9e8_UnaryExprModel> _6654_ul = (*(_63928_l)).cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112);;
							jule::Ptr<_1ab07c9e8_UnaryExprModel> _6664_ur = (*(_63949_r)).cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112);;
							if ((((*((*(_6654_ul))._field_Op))._field_Id != (*(*(_6664_ur))._field_Op.alloc)._field_Id) || ((*(*(_6654_ul))._field_Op.alloc)._field_Kind != (*(*(_6664_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1ad1344a4_areSameLvalueExprModel(&((*((*_6654_ul.alloc)._field_Expr))._field_Model), &((*(*(_6664_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1b1a95d35:;
				};
			}
		}
		_match_end_1b1a936b2:;
	};
	return false;;
}



inline void _1ad136561_possibleDynamicRemove(jule::Ptr<_1ad1354c7_dynamic>* _7331_d, jule::Any _7344_m) {
	if (((*(_7331_d)) != nullptr)) {
		_1ad135cad_removeVar((*(_7331_d)).ptr(), _1ad1370de_getDynamicVar(_7344_m));
	};
}



inline jule::Bool _1ad13686e_isDynamicValidType(jule::Ptr<_1ab939816_Type> _7927_t) {
	return _1ab3db6a3_IsAny(&(_7927_t));;
}



inline jule::Ptr<_1ab939816_Type> _1ad136c9d_isTypeGuaranteedDynamicData(jule::Ptr<_1ad1354c7_dynamic>* _8137_dy, jule::Ptr<_1ab939816_Type> _8155_t, jule::Any _8175_m) {
	jule::Bool _822_isAny = _1ab3db6a3_IsAny(&(_8155_t));;
	if (((!(_822_isAny)) && (_1ab93d7c6_Trait(_8155_t.ptr()) == nullptr))) {
		return _8155_t;;
	};
	if ((!(_822_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8175_m };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a999d838:;
			{
				jule::Ptr<_1ab07dc4c_CastingExprModel> _917_cem = _8175_m.unsafe_cast_ptr<_1ab07dc4c_CastingExprModel>();;
				return _1ad136c9d_isTypeGuaranteedDynamicData(_8137_dy, (*(_917_cem))._field_ExprType, (*((*_917_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1a999d7c2:;
	};
	jule::Uintptr _942_var = _1ad1370de_getDynamicVar(_8175_m);;
	if ((_942_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8137_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99a041c:;
		if (it != expr_end) {
			_1ad135186_dynamicVar _9814_v = *it;
			{
				if ((_9814_v._field_var == _942_var)) {
					return _9814_v._field_kind;;
				};
			}
			_iter_next_1a99a041c:;
			++it;
			goto _iter_begin_1a99a041c;
		}
		_iter_end_1a99a041c:;
	};
	return nullptr;;
}



inline jule::Uintptr _1ad1370de_getDynamicVar(jule::Any _10618_m) {
	if ((!(_1ad13eed7_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _10618_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a99a0ae3:;
			{
				jule::Ptr<_1ab8a7289_Var> _1123_v = _10618_m.unsafe_cast_ptr<_1ab8a7289_Var>();;
				if ((!((*(_1123_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_10618_m.unsafe_cast_ptr<_1ab8a7289_Var>());;
				};
				return _1ad1370de_getDynamicVar((*((*((*_1123_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a99a1770:;
			{
				return static_cast<jule::Uintptr>((*(_10618_m.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a99a0b6a:;
			{
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _1233_uem = _10618_m.unsafe_cast_ptr<_1ab07c9e8_UnaryExprModel>();;
				if (((*((*(_1233_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1ad1370de_getDynamicVar((*((*_1233_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a99a0a7c:;
	};
	return 0LLU;;
}



inline jule::Bool _1ad13ac08_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1ad13b445_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1ad13b0c1_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99b0c79:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1ad13b445_fitsSize((*(_909_m)), _8940_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1a99b0c79:;
			++it;
			_906_i++;
			goto _iter_begin_1a99b0c79;
		}
		_iter_end_1a99b0c79:;
	};
	return -1LL;;
}



inline jule::Bool _1ad13b445_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2) {
	if ((_1ad10dc75_typeData(&(_9813_e1)) != _1ad10dc75_typeData(&(_9834_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a99b2808:;
			{
				jule::Ptr<_1ab070c61_Const> _1043_exprConst = _9834_e2.cast_ptr<_1ab070c61_Const>(&__jule_any_type15);;
				return ((_1ab073912_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1ab077619_GtEq(_9813_e1.unsafe_cast_ptr<_1ab070c61_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a99b286e:;
			{
				return (_9834_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a99b28d5:;
			{
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>();;
				jule::Ptr<_1ab082190_StructSubIdentExprModel> _1103_ssi2 = _9834_e2.cast_ptr<_1ab082190_StructSubIdentExprModel>(&__jule_any_type100);;
				return (_1ad120a01_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a99b2484:;
			{
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1ab07c9e8_UnaryExprModel>();;
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _1143_uem2 = _9834_e2.cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1ad13b445_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1a99b241d:;
			{
				return false;;
			}
		}
		_match_end_1a99b2352:;
	};
}



inline void _1ad13b775_possibleBoundaryRemove(jule::Ptr<_1ad139b91_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99b6675:;
		if (it != expr_end) {
			_1ad139850_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99b98ba:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1ad120a01_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1a99b98ba;
							};
						}
						_iter_next_1a99b98ba:;
						++it;
						_1277_i++;
						goto _iter_begin_1a99b98ba;
					}
					_iter_end_1a99b98ba:;
				};
			}
			_iter_next_1a99b6675:;
			++it;
			goto _iter_begin_1a99b6675;
		}
		_iter_end_1a99b6675:;
	};
}



inline jule::Bool _1ad13ba3e_isBoundaryRiskyType(jule::Ptr<_1ab939816_Type> _13628_t) {
	return (_1ab93cc8c_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1ad13bd08_isBoundaryValidType(jule::Ptr<_1ab939816_Type> _14128_t) {
	return ((_1ab93d023_Slc(_14128_t.ptr()) != nullptr) || (_1ab93cc8c_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1ad13c0c2_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1ad13d502_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a99bbc85:;
			{
				jule::Ptr<_1ab8a7289_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1ab8a7289_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1ab8a7289_Var>());;
				};
				return _1ad13c0c2_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a99bc219:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1ab082190_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a99bbceb:;
			{
				jule::Ptr<_1ab07c9e8_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1ab07c9e8_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1ad13c0c2_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a99bc13c:;
	};
	return 0LLU;;
}



inline void _1ad14069c_PushOptLevel(jule::I64 _3817_level) {
	jule::Bool _392_l1 = (_3817_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _402_l2 = (_3817_level >= static_cast<jule::I64>(2LL));;
	_1ad13c897_Copy=_392_l1;
	_1ad13cb94_Deadcode=_392_l1;
	_1ad13ce4c_Append=_392_l1;
	_1ad13d249_Math=_392_l1;
	_1ad13d502_Access=_392_l1;
	_1ad13d7aa_Inline=_392_l1;
	_1ad13da63_Ptr=_392_l1;
	_1ad13de2b_Cond=_392_l1;
	_1ad13e16d_Str=_392_l1;
	_1ad13e415_Slice=_392_l1;
	_1ad13e6bd_Assign=_392_l1;
	_1ad13e976_Exceptional=_392_l1;
	_1ad13ec2e_Iter=_392_l1;
	_1ad13eed7_Dynamic=_392_l1;
	_1ad140290_StdStrings=_402_l2;
}



inline void _1ad1da1a3_detectEnabled(void) {
	_1ad1d7a52_exprEnabled=((((_1ad140290_StdStrings || _1ad13da63_Ptr) || _1ad13d249_Math) || _1ad13d502_Access) || _1ad13de2b_Cond);
	_1ad1d7dd7_scopeEnabled=((((((((_1ad13de2b_Cond || _1ad13ce4c_Append) || _1ad13c897_Copy) || _1ad13e16d_Str) || _1ad13e415_Slice) || _1ad13e6bd_Assign) || _1ad13e976_Exceptional) || _1ad13ec2e_Iter) || _1ad13eed7_Dynamic);
}



inline void _1b21bddca_Reverse(jule::Slice<jule::U8> _7327_s) {
	{
		auto expr = _7327_s.slice(0LL, (_7327_s.len() >> 1LL));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b21c001e:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr.begin();
			{
				({
					jule::U8 ___jule_assign_arg = _7327_s[((_7327_s.len() - _746_i) - 1LL)];
					jule::U8 _1___jule_assign_arg = _7327_s[_746_i];
					_7327_s[_746_i] = ___jule_assign_arg;
					_7327_s[((_7327_s.len() - _746_i) - 1LL)] = _1___jule_assign_arg;
				});
			}
			_iter_next_1b21c001e:;
			++it;
			_746_i++;
			goto _iter_begin_1b21c001e;
		}
		_iter_end_1b21c001e:;
	};
}



inline void _1b21bc9de_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I64 _4230_r) {
	_1b21bddca_Reverse(_4222_s.slice(0LL, _4230_r));
	_1b21bddca_Reverse(_4222_s.slice(_4230_r));
	_1b21bddca_Reverse(_4222_s);
}



inline void _1b21b8ce8_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I64 _4831_r) {
	_1b21bc9de_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1b21b7489_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U64 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::U8> _1b21b30de_Insert(jule::Slice<jule::U8> _7226_s, jule::I64 _7232_i, jule::Slice<jule::U8> _7240_v) {
	_7226_s.slice(_7232_i);
	jule::I64 _752_m = _7240_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I64 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7240_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7240_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1b21b7489_overlaps(_7240_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7240_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7240_v);
	_1b21b8ce8_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline jule::U64 _1ad4b5736_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1ad1e56ca_isCopyOptimizable(jule::Ptr<_1ab906a8b_Data>* _117623_expr) {
	if ((!((*((*(_117623_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_117623_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b1721de0:;
			{
				return false;;
			}
		}
		_match_end_1b1721d79:;
	};
	return true;;
}



inline jule::Bool _1ad1e5a93_isIterCopyOptimizable(jule::Ptr<_1ab906a8b_Data>* _118727_expr, jule::Ptr<_1ab8a7289_Var>* _118747_v) {
	if (((!((*((*(_118727_expr))))._field_Lvalue)) && (!(_1ab93b1ec_Mutable((*((*(_118727_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_118747_v))))._field_Mutable)) && (!((*((*(_118727_expr))))._field_Mutable)));;
}



inline jule::Bool _1ad1e5ec2_captureVarHandling(jule::Ptr<_1ad4c0a2c_ObjectCoder>* _119428_oc, jule::Ptr<_1ab080435_AnonFnExprModel>* _119451_m, jule::Ptr<_1ab8a7289_Var>* _119483_v) {
	{
		auto expr = &((*((*(_119451_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b17240ac:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _11959_cv = *it;
			{
				if ((_11959_cv == (*(_119483_v)))) {
					_1ad4c1247_write((*(_119428_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1ad21110d_var(&((*((*(_119428_oc))))._field_Buf), (*(_119483_v)));
					return true;;
				};
			}
			_iter_next_1b17240ac:;
			++it;
			goto _iter_begin_1b17240ac;
		}
		_iter_end_1b17240ac:;
	};
	return false;;
}



inline jule::Str _1ad2085bc_decomposeCommonEsq(jule::U8 _191623_b) {
	{
		auto &_match_expr{ _191623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b1a32365:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b1a321cd:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b1a32244:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b1a31c38:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b1a31c9e:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b1a31d26:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b1a31d9d:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b1a31e25:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b1a323cb:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b1a32442:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1b1a2e708:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b1a31b7d:;
	};
}



inline jule::Str _1ad2088ca_sbtoa(jule::U8 _194310_b) {
	if ((_194310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_194310_b < 128LLU)) {
		jule::Str _19483_seq = _1ad2085bc_decomposeCommonEsq(_194310_b);;
		if (!(_19483_seq).empty()) {
			return _19483_seq;;
		};
		if (((32LL <= _194310_b) && (_194310_b <= 126LLU))) {
			return __jule_strFromByte(_194310_b);;
		};
	};
	jule::Str _19562_seq = _1a941c609_FmtUint(static_cast<jule::U64>(_194310_b), 8LL);;
	if ((_19562_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19562_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19562_seq);;
}



inline void _1ad208bb6_cstrBytes(_1a387dcd5_Builder* _196319_s, jule::Str _196340_ctx) {
	{
		auto expr = &(_196340_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a37007:;
		if (it != expr_end) {
			jule::U8 *_19649_b = it;
			{
				({
					auto except = _1a387ecd6_WriteStr(_196319_s, _1ad2088ca_sbtoa((*(_19649_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1965:3"));
					(except.result);
				});
			}
			_iter_next_1b1a37007:;
			++it;
			goto _iter_begin_1b1a37007;
		}
		_iter_end_1b1a37007:;
	};
}



inline void _1ad208ee6_cstrLit(_1a387dcd5_Builder* _196917_s, jule::Str _196938_ctx) {
	({
		auto except = _1a388008e_WriteByte(_196917_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1970:2"));
	});
	_1ad208bb6_cstrBytes(_196917_s, _196938_ctx);
	({
		auto except = _1a388008e_WriteByte(_196917_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1972:2"));
	});
}



inline void _1ad20938c_ftoa(_1a387dcd5_Builder* _197514_s, jule::F64 _197535_f, jule::I64 _197543_bitsize) {
	if ((_197543_bitsize != 32LL)) {
		if ((_197535_f == static_cast<jule::F64>(static_cast<jule::I64>(_197535_f)))) {
			_1ad209678_itoa(_197514_s, static_cast<jule::I64>(_197535_f));
			return;;
		};
		if ((_197535_f == static_cast<jule::F64>(static_cast<jule::U64>(_197535_f)))) {
			_1ad209964_utoa(_197514_s, static_cast<jule::U64>(_197535_f));
			return;;
		};
	};
	jule::Str _19862_m = _1a9406208_FmtFloat(_197535_f, 'f', -1LL, _197543_bitsize);;
	({
		auto except = _1a387ecd6_WriteStr(_197514_s, _19862_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1987:2"));
		(except.result);
	});
	if ((!(_1a87ad45c_Contains(_19862_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1a387ecd6_WriteStr(_197514_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1989:3"));
			(except.result);
		});
	};
}



inline void _1ad209678_itoa(_1a387dcd5_Builder* _199314_s, jule::I64 _199335_x) {
	{
		
		if ((_199335_x == jule::MAX_I64)) {
			_case_begin_1b1a3b5a0:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_199314_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1996:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_199335_x == jule::MIN_I64)) {
			_case_begin_1b1a3b649:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_199314_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1999:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1b1a3b47e:;
	};
	({
		auto except = _1a387ecd6_WriteStr(_199314_s, _1a941c9c2_FmtInt(_199335_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2003:2"));
		(except.result);
	});
	if (_1a3892d1b_Is64Bit(jule::Str::lit("arm64", 5))) {
		({
			auto except = _1a388008e_WriteByte(_199314_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2005:3"));
		});
	};
	({
		auto except = _1a388008e_WriteByte(_199314_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2007:2"));
	});
}



inline void _1ad209964_utoa(_1a387dcd5_Builder* _201014_s, jule::U64 _201035_x) {
	{
		
		if ((_201035_x == jule::MAX_U64)) {
			_case_begin_1b1a3d739:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_201014_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2013:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1b1a3d5e6:;
	};
	({
		auto except = _1a387ecd6_WriteStr(_201014_s, _1a941c609_FmtUint(_201035_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2017:2"));
		(except.result);
	});
	if (_1a3892d1b_Is64Bit(jule::Str::lit("arm64", 5))) {
		({
			auto except = _1a388008e_WriteByte(_201014_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2019:3"));
		});
	};
	({
		auto except = _1a387ecd6_WriteStr(_201014_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:2"));
		(except.result);
	});
}



inline void _1ad20a0b3_operatorOverloadingBinary(_1a387dcd5_Builder* _202435_buf, jule::Ptr<_1a37a53d2_StructIns>* _202463_s, jule::Str* _202485_l, jule::Str* _20253_r, jule::U64 _202511_op, jule::Str _202526_kind) {
	;
	jule::Ptr<_1ab08c9a3_FnIns> _20276_f = static_cast<jule::Ptr<_1ab08c9a3_FnIns>>(nullptr);;
	if ((_202511_op == static_cast<jule::U64>(51LLU))) {
		_20276_f=_1ab3de9b4_FindOperator(_202463_s, static_cast<jule::U64>(50LLU), false);
		({
			auto except = _1a388008e_WriteByte(_202435_buf, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2030:3"));
		});
	} else {
		_20276_f=_1ab3de9b4_FindOperator(_202463_s, _202511_op, false);
	};
	if ((_20276_f == nullptr)) {
		if (((_202511_op == static_cast<jule::U64>(50LLU)) || (_202511_op == static_cast<jule::U64>(51LLU)))) {
			static__1ad210a36_structureIns(_202435_buf, _202463_s);
			({
				auto except = _1a387ecd6_WriteStr(_202435_buf, jule::Str::lit("_eq", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2038:4"));
				(except.result);
			});
			goto _julec_label_1b1a42188;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2041:3"));;
	};
	static__1ad20ed87_funcIns(_202435_buf, &(_20276_f));
	_julec_label_1b1a42188:;
	({
		auto except = _1a387ecd6_WriteStr(_202435_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2045:2"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_202435_buf, (*(_202485_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2046:2"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_202435_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2047:2"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_202435_buf, (*(_20253_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:2"));
		(except.result);
	});
	({
		auto except = _1a388008e_WriteByte(_202435_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2049:2"));
	});
}



inline jule::Slice<jule::U8> _1ad4cd573_concatAllParts(jule::Slice<jule::Ptr<_1ab6a54d8_Token>> _138019_parts) {
	jule::I64 _13816_n = 0LL;;
	{
		auto expr = &(_138019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22664b1:;
		if (it != expr_end) {
			jule::Ptr<_1ab6a54d8_Token> *_13829_part = it;
			{
				_13816_n+=(*((*(_13829_part))))._field_Kind.len();
			}
			_iter_next_1b22664b1:;
			++it;
			goto _iter_begin_1b22664b1;
		}
		_iter_end_1b22664b1:;
	};
	if ((_13816_n == 0LL)) {
		return nullptr;;
	};
	_1a387dcd5_Builder _13886_s = static__1a387e654_New(_13816_n);;
	{
		auto expr = &(_138019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b226734c:;
		if (it != expr_end) {
			jule::Ptr<_1ab6a54d8_Token> *_13899_p = it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_13886_s, (*((*(_13899_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1390:3"));
					(except.result);
				});
			}
			_iter_next_1b226734c:;
			++it;
			goto _iter_begin_1b226734c;
		}
		_iter_end_1b226734c:;
	};
	return _1a3881117_Buf(&_13886_s);;
}



inline jule::Bool _1ad4cd881_isHeadDecl(jule::Ptr<_1ab0898e5_Fn>* _139620_m) {
	if ((((*((*(_139620_m))))._field_Generics.len() > 0LL) || ((*((*(_139620_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	return _1ab3dbc7a_IsOpMethod(_139620_m);;
}



inline jule::Bool _1ad4cdb4a_defaultEq(jule::Ptr<_1a37a53d2_StructIns>* _140415_s) {
	return ((*((*(_140415_s))))._field_Comparable && ((*((*(_140415_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1ad4dca38_ableToInit(jule::Ptr<_1ab939816_Type>* _44920_t) {
	return (!(_1ab93a6b3_Binded((*(_44920_t)).ptr())));;
}



inline jule::Bool _1ad4dcd13_shouldInitialized(jule::Ptr<_1ab939816_Type>* _45627_t) {
	if ((!(_1ad4dca38_ableToInit(_45627_t)))) {
		return false;;
	};
	jule::Ptr<_1ab94292e_Prim> _4602_prim = _1ab93bebc_Prim((*(_45627_t)).ptr());;
	if ((_4602_prim != nullptr)) {
		return ((!(_1ab946180_IsAny(_4602_prim))) && (!(_1ab945de9_IsStr(_4602_prim))));;
	};
	{
		
		if ((_1ab93c253_Sptr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d1a36:;
			{
				return false;;
			}
		}
		else if ((_1ab93da5c_Map((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d27b2:;
			{
				return false;;
			}
		}
		else if ((_1ab93d023_Slc((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d1abe:;
			{
				return false;;
			}
		}
		else if ((_1ab93d7c6_Trait((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d1b35:;
			{
				return false;;
			}
		}
		else if ((_1ab93d2a9_Fn((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d2949:;
			{
				return false;;
			}
		}
		else if ((_1ab93cc8c_Arr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d29b0:;
			{
				jule::Ptr<_1ab94924e_Arr> _4767_arr = _1ab93cc8c_Arr((*(_45627_t)).ptr());;
				return _1ad4dca38_ableToInit(&((*(_4767_arr))._field_Elem));;
			}
		}
		else if ((_1ab93d540_Struct((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b21d2a26:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b21d1937:;
			{
				return true;;
			}
		}
		_match_end_1b21d1d22:;
	};
}



inline void _1a87c3087_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1ad792293_toStr(_3022_msg));
}



inline void _1a87c330c_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1a87c3087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _1a87c2dab_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1a87c2dab_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23d7d6e:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1b23d7d6e:;
			++it;
			goto _iter_begin_1b23d7d6e;
		}
		_iter_end_1b23d7d6e:;
	};
	_1a387dcd5_Builder _496_s = static__1a387e654_New(32LL);;
	;
	{
		auto expr = &(_1a87c2dab_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23d8e5d:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1a387ecd6_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&_496_s, _1a87a8754_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1a387ecd6_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1a388008e_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1b23d8e5d:;
			++it;
			_516_i++;
			goto _iter_begin_1b23d8e5d;
		}
		_iter_end_1b23d8e5d:;
	};
	jule::println(_1b23d9e2b_toStr(_496_s));
}



inline void _1a87c353d_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1a87c3087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1ad792293_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1a87c374c_toolDistos(void) {
	jule::print(_1ad792293_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1b23e1b25_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1ad792293_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1b23e1b25_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1ad792293_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1b23e1b25_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1ad792293_toStr(jule::Str()));
}



inline void _1a87c38b2_toolDistarch(void) {
	jule::print(_1ad792293_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1b23ed8ce_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1ad792293_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1b23ed8ce_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1ad792293_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1b23ed8ce_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1ad792293_toStr(jule::Str()));
}



inline void _1a87c3ab0_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1ad792293_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1a87c3087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1b240222e:;
			{
				_1a87c374c_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1b2400b78:;
			{
				_1a87c38b2_toolDistarch();
			}
		}
		else {
			_case_begin_1b240097a:;
			{
				_1a87c3087_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1b2400a57:;
	};
}



inline void _1a87c3ce1_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1a87c3087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1ad792293_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1ad792293_toStr(jule::Str::lit("architecture: arm64", 19)));
	jule::println(_1ad792293_toStr(jule::Str::lit("operating system: linux", 23)));
	jule::println(_1ad792293_toStr((jule::Str::lit("default compiler: ", 18) + _1a87be418_Compiler)));
	jule::println(_1ad792293_toStr((jule::Str::lit("default C++ standard: ", 22) + _1a87c0a24_CppStd)));
}



inline void _1a87c4132_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1ad792293_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1a87c3087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1b2405b7d:;
			{
				({
					auto except = static__1a68d1164_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1a87c3087_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b2404ebd:;
			{
				_1a87c3087_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b24055d9:;
	};
}



inline jule::Bool _1a87c4374_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1b240691a:;
			{
				_1a87c330c_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1b24070d0:;
			{
				_1a87c353d_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1b2407146:;
			{
				_1a87c3ab0_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1b24071ac:;
			{
				_1a87c3ce1_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1b2407223:;
			{
				_1a87c4132_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b2405760:;
			{
				return false;;
			}
		}
		_match_end_1b24062cc:;
	};
	return true;;
}



inline void _1a87c451c_showInfo(void) {
	jule::println(_1ad792293_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _1a87c4693_main(void) {
	jule::Slice<jule::Str> _1896_args = _1a697db7e_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1a87c451c_showInfo();
		return;;
	};
	if (_1a87c4374_processCommand(&(_1896_args))) {
		return;;
	};
	_1ad556ba1_compileCommand(&(_1896_args));
}



inline void _1ad553ac1_init(void) {
	_1a87be418_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1a68cec56_File> _1ad553d8a_openOutput(jule::Str* _2916_path) {
	jule::Str _302_dir = _1a87b5b18_Dir((*(_2916_path)));;
	({
		auto except = static__1a68cc193_Of(_302_dir);
		if (!except.ok()) {
			({
				auto except = static__1a87b8269_Create(_302_dir);
				if (!except.ok()) {
					_1a9420112_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1a68d0a04_Create((*(_2916_path)));
		(except.ok()) ? (except.result) : ({
			_1a9420112_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ad554033_clearObjects(void) {
	({
		auto except = static__1a68c92d3_Remove(_1ad555188_getCompilePath());
		if (!except.ok()) {
			jule::println(_1ad792293_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1a87b849a_Remove(_1ad553362_OutDir);
}



inline void _1ad554341_compileIr(jule::Str _5814_compiler, jule::Str _5829_compilerCmd) {
	jule::Ptr<_1a68cac74_Cmd> _596_cmd = static__1a68cb1c5_New(_5814_compiler);;
	(*(_596_cmd))._field_Args=_1a87ad0d8_SplitAll(_5829_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1a68cb3c3_Spawn(_596_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b240ced7:;
					{
						static__1a87e69b2_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b240d12a:;
					{
						static__1a87e69b2_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b240c9ba:;
					{
						static__1a87e69b2_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b240caca:;
			};
			_1a9420112_Throw(jule::Str());
		}
	});
	jule::I64 _722_status = ({
		auto except = _1a68cb857_Wait(_596_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:72:12"));
		(except.result);
	});;
	if ((_722_status != 0LL)) {
		jule::Str _743_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1a87be418_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a87e69b2_Print(jule::Str::lit("\033[31m", 5), _743_errorMessage);
		_1a9420112_Throw(jule::Str());
	};
	_1ad554033_clearObjects();
}



inline jule::Bool _1ad55460a_isCppSourceFile(jule::Str _8520_path) {
	jule::I64 _862_offset = _1a87ab823_FindLastByte(_8520_path, '.');;
	if ((_862_offset == -1LL)) {
		return false;;
	};
	return _1a3e44d5c_IsValidCppExt(_8520_path.slice(_862_offset));;
}



inline void _1ad55483b_pushCompCmdClang(_1a387dcd5_Builder* _9326_cmd) {
	({
		auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:95:2"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:98:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1a87c0a24_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b241144c:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:101:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b2411d76:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:103:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b2411ddc:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:105:3"));
					(except.result);
				});
			}
		}
		_match_end_1b2411b12:;
	};
	({
		auto except = _1a388008e_WriteByte(_9326_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:107:2"));
	});
	if (_1a87c1be0_Production) {
		({
			auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:110:3"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1a387ecd6_WriteStr(_9326_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:115:3"));
			(except.result);
		});
	};
}



inline void _1ad554a6c_pushCompCmdGcc(_1a387dcd5_Builder* _11924_cmd) {
	({
		auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:121:2"));
		(except.result);
	});
	({
		auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:124:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1a87c0a24_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b2413394:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:127:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b2414dac:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:129:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b2414e23:;
			{
				({
					auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:131:3"));
					(except.result);
				});
			}
		}
		_match_end_1b2414b48:;
	};
	({
		auto except = _1a388008e_WriteByte(_11924_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:133:2"));
	});
	if (_1a87c1be0_Production) {
		({
			auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:136:3"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1a387ecd6_WriteStr(_11924_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:140:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1ad555001_genCompileCmd(jule::Str _14518_sourcePath, jule::Ptr<_1ab3d5ec7_IR>* _14536_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1463_compiler = &(_1a87c0815_CompilerPath);;
	_1a387dcd5_Builder _1476_cmd = static__1a387e654_New(64LL);;
	{
		auto &_match_expr{ _1a87be418_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b2417b18:;
			{
				_1ad554a6c_pushCompCmdGcc(&(_1476_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b2418146:;
			{
				_1ad55483b_pushCompCmdClang(&(_1476_cmd));
			}
		}
		_match_end_1b2417d5a:;
	};
	{
		auto expr = &((*((*(_14536_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24183ee:;
		if (it != expr_end) {
			jule::Ptr<_1ab866578_ImportInfo> *_1579_u = it;
			{
				if (((*((*(_1579_u))))._field_Binded && _1ad55460a_isCppSourceFile((*(*(_1579_u)).alloc)._field_Path))) {
					({
						auto except = _1a387ecd6_WriteStr(&_1476_cmd, (*(*(_1579_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:159:4"));
						(except.result);
					});
					({
						auto except = _1a388008e_WriteByte(&_1476_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
					});
				};
			}
			_iter_next_1b24183ee:;
			++it;
			goto _iter_begin_1b24183ee;
		}
		_iter_end_1b24183ee:;
	};
	if (!(_1ad553917_Out).empty()) {
		({
			auto except = _1a387ecd6_WriteStr(&_1476_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:165:3"));
			(except.result);
		});
		({
			auto except = _1a387ecd6_WriteStr(&_1476_cmd, _1ad553917_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1a388008e_WriteByte(&_1476_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
		});
	};
	({
		auto except = _1a387ecd6_WriteStr(&_1476_cmd, _14518_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:169:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14536_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b241ae6d:;
		if (it != expr_end) {
			jule::Str *_1729_pass = it;
			{
				({
					auto except = _1a388008e_WriteByte(&_1476_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:173:3"));
				});
				({
					auto except = _1a387ecd6_WriteStr(&_1476_cmd, (*(_1729_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
					(except.result);
				});
			}
			_iter_next_1b241ae6d:;
			++it;
			goto _iter_begin_1b241ae6d;
		}
		_iter_end_1b241ae6d:;
	};
	if ((_1a87b9776_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1a387ecd6_WriteStr(&_1476_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:179:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1463_compiler));
	__jule_func_result.__jule_result_arg1 = _1a3880666_Str(&_1476_cmd);
	return __jule_func_result;;
}



inline jule::Str _1ad555188_getCompilePath(void) {
	return _1a87b4e25_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ad553362_OutDir; (*it++) = _1ad55365e_OutName; __jule_collection; }));;
}



inline void _1ad5553b9_applyTargetIndependentOptimizations(jule::Ptr<_1ab3d5ec7_IR>* _19145_ir) {
	jule::Ptr<_1ad1d80d5_Optimizer> _1926_opt = static__1ad1d859c_New(_19145_ir);;
	_1ad1d9e3e_Optimize(_1926_opt.ptr());
}



inline void _1ad555562_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1a87be418_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b241d734:;
			{
				_1a9420112_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b241d338:;
			{
				if ((_1a87c0815_CompilerPath).empty()) {
					_1a87c0815_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b241d39e:;
			{
				if ((_1a87c0815_CompilerPath).empty()) {
					_1a87c0815_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b241bcb5:;
			{
				_1a9420112_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1a87be418_Compiler));
			}
		}
		_match_end_1b241d17e:;
	};
}



inline void _1ad555771_checkTargetArch(jule::Str _21320_arch) {
	if ((((_21320_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21320_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21320_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1a9420112_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21320_arch));
	};
}



inline void _1ad5559a2_checkTargetOs(jule::Str _22118_os) {
	if ((((_22118_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22118_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22118_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1a9420112_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22118_os));
	};
}



inline void _1ad555bd3_checkTargetFlag(jule::Str* _22921_target) {
	if (((*(_22921_target))).empty()) {
		_1a9420112_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2342_parts = _1a87ad0d8_SplitAll((*(_22921_target)), jule::Str::lit("-", 1));;
	if ((_2342_parts.len() != 2LL)) {
		_1a9420112_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_22921_target))));
	};
	jule::Str _2392_os;
	jule::Str _2396_arch;
	({
		jule::Str ___jule_assign_arg = _2342_parts[0LL];
		jule::Str _1___jule_assign_arg = _2342_parts[1LL];
		_2392_os = ___jule_assign_arg;
		_2396_arch = _1___jule_assign_arg;
	});
	if ((!_2392_os.equal("native", 6))) {
		_1ad5559a2_checkTargetOs(_2392_os);
		_1a87b9776_OS=_2392_os;
	};
	if ((!_2396_arch.equal("native", 6))) {
		_1ad555771_checkTargetArch(_2396_arch);
		_1a87b9a2e_Arch=_2396_arch;
	};
	_1ab112198_UpdateTarget();
}



inline void _1ad555e14_checkOptFlag(jule::Str* _25218_opt) {
	if (((*(_25218_opt))).empty()) {
		_1a9420112_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25218_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1b242565e:;
			{
				goto _match_end_1b2424d34;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1b2424e99:;
			{
				_1ad14069c_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1b2425010:;
			{
				_1ad14069c_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1b2424e22:;
			{
				_1a9420112_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25218_opt))));
			}
		}
		_match_end_1b2424d34:;
	};
}



inline void _1ad5562cc_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1a87c0a24_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b2426a6c:;
			{
				goto _match_end_1b2426473;
			}
		}
		else {
			_case_begin_1b2425362:;
			{
				_1a9420112_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1a87c0a24_CppStd));
			}
		}
		_match_end_1b2426473:;
	};
}



inline jule::Slice<jule::Str> _1ad556497_checkFlags(jule::Slice<jule::Str>* _28016_args) {
	jule::Str _2816_opt = jule::Str::lit("L0", 2);;
	jule::Str _2826_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1ad54d725_FlagSet> _2846_fs = static__1ad54da44_New();;
	_1b2428420_AddVar(_2846_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2816_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1b2428420_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_2826_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1b2428420_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1ad553917_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a87c0cbb_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a87c1074_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1b2428420_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1a87be418_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1b2428420_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1a87c0815_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a87c1be0_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a87c15d5_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a87c199d_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1b2428420_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1a87c0a24_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13c897_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13cb94_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13ce4c_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13d249_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13d502_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13d7aa_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13da63_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13de2b_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13e16d_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13e415_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13e6bd_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13e976_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13ec2e_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad13eed7_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1b2432539_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ad140290_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	jule::Slice<jule::Str> _3136_content = ({
		auto except = _1ad54e913_Parse(_2846_fs, (*(_28016_args)));
		(except.ok()) ? (except.result) : ({
			_1a9420112_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1ad555562_checkCompilerFlag();
	_1ad5562cc_checkCppStdFlag();
	_1ad555bd3_checkTargetFlag(&(_2826_target));
	_1ad555e14_checkOptFlag(&(_2816_opt));
	return _3136_content;;
}



inline void _1ad5566a6_setupSemaFlags(jule::I64* _32624_flags) {
	if (_1a87c0cbb_Shadowing) {
		(*(_32624_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ab3d5ec7_IR> _1ad556970_buildIr(jule::Slice<jule::Str>* _33213_args) {
	jule::Slice<jule::Str> _3332_content = _1ad556497_checkFlags(_33213_args);;
	jule::I64 _3356_semaFlags = static_cast<jule::I64>(0LL);;
	_1ad5566a6_setupSemaFlags(&(_3356_semaFlags));
	if ((_3332_content.len() == 0LL)) {
		_1a9420112_Throw(_1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3332_content.len() > 1LL)) {
		_1a9420112_Throw((jule::Str::lit("undefined content: ", 19) + _3332_content[1LL]));
	};
	jule::Str _3436_path;
	jule::Bool _34312_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a87b5475_Abs(_3332_content[0LL]);
		_3436_path = __jule_assign_result.__jule_result_arg0;
		_34312_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34312_ok))) {
		_1a9420112_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1a696ebc5_Stat _3492_inf = ({
		auto except = static__1a68cc193_Of(_1a87b8bd7_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a9420112_Throw(_1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1a696ebc5_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a69700d2_IsDir(&_3492_inf)))) {
		_1a9420112_Throw(_1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ab3d5ec7_IR> _3576_ir;
	jule::Slice<_1a388d1ac_Log> _35710_logs;
	({
		__jule_tuple_x_1ab3d5ec7_IR__jule_tuple_s_1a388d1ac_Log __jule_assign_result = static__1ab3d64a0_Build(_3436_path, _3356_semaFlags);
		_3576_ir = __jule_assign_result.__jule_result_arg0;
		_35710_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3576_ir == nullptr) && (_35710_logs == nullptr))) {
		_1a9420112_Throw(_1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3436_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_35710_logs != nullptr)) {
		static__1a941e6d8_PrintLogs(&(_35710_logs));
		_1a9420112_Throw(jule::Str());
	};
	return _3576_ir;;
}



inline void _1ad556ba1_compileCommand(jule::Slice<jule::Str>* _37224_args) {
	((*(_37224_args))).mut_slice(1LL);;
	if ((*(_37224_args))[0LL].equal("test", 4)) {
		_1a87c132c_Test=true;
		((*(_37224_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ab3d5ec7_IR> _3786_ir = _1ad556970_buildIr(_37224_args);;
	_1ab3e1136_ProgramMeta=static__1ab3e1db2_Collect(_3786_ir);
	if ((!(_1a87c132c_Test))) {
		;
		(*(_1ab3e1136_ProgramMeta))._field_EntryPoint=_1ab86a3b2_FindFn((*(_3786_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1ab3e1136_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1a9420112_Throw(_1a388d61e_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1ad5553b9_applyTargetIndependentOptimizations(&(_3786_ir));
	_1ab3d7517_Order(_3786_ir);
	jule::Str _3962_compPath = _1ad555188_getCompilePath();;
	jule::Str _3972_compiler;
	jule::Str _39712_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ad555001_genCompileCmd(_3962_compPath, &(_3786_ir));
		_3972_compiler = __jule_assign_result.__jule_result_arg0;
		_39712_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ad4c0a2c_ObjectCoder> _3996_oc = static__1ad4c0e8e_New(&(_3786_ir), _1ad4bd277_SerializationInfo{._field_Compiler=_3972_compiler, ._field_CompilerCommand=_39712_compilerCmd});;
	if (_1a87c132c_Test) {
		jule::Ptr<_1ad20ad2d_TestCoder> _4047_tc = static__1ad20b2d4_New(&(_3996_oc));;
		_1ad20c659_Serialize(_4047_tc);
	} else {
		_1ad4cd1dd_Serialize(_3996_oc);
	};
	jule::Ptr<_1a68cec56_File> _4106_file = _1ad553d8a_openOutput(&(_3962_compPath));;
	({
		auto except = _1a68c9767_Write(_4106_file.ptr(), _1a3881117_Buf(&(*(_3996_oc))._field_Buf));
		if (!except.ok()) {
			_1a9420112_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1a68d196c_Close(_4106_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:414:2"));
	});
	if ((!(_1a87c1074_Transpilation))) {
		_1ad554341_compileIr(_3972_compiler, _39712_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a87b9b72_init();
	_1ab11231e_init();
	_1ad553ac1_init();

}

inline jule::Bool __jule_anon1b00d6e5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab08b84d_ParamIns> _25021_p1, jule::Ptr<_1ab08b84d_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1ab088570_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1ab088570_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1ab088806_IsRef((*(_25021_p1))._field_Decl) != _1ab088806_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1ab93a053_Equal((*_25021_p1.alloc)._field_Type, (*(_25036_p2))._field_Type);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b014c993(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _6521_e, jule::Ptr<_1a378984a_FnCallExpr>* _6536_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b014c993_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b014c993_ctx>();
	return _1ab11b537__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b014e91d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _7221_e, jule::Ptr<_1a378984a_FnCallExpr>* _7236_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b014e91d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b014e91d_ctx>();
	return _1ab11b933__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b016347b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _17821_e, jule::Ptr<_1a378984a_FnCallExpr>* _17836_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b016347b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b016347b_ctx>();
	return _1ab11e75a__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0165406(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _18521_e, jule::Ptr<_1a378984a_FnCallExpr>* _18536_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0165406_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0165406_ctx>();
	return _1ab11eb56__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0176868(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _28321_e, jule::Ptr<_1a378984a_FnCallExpr>* _28336_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0176868_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0176868_ctx>();
	return _1ab12296c__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b018dab1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _40221_e, jule::Ptr<_1a378984a_FnCallExpr>* _40236_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b018dab1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b018dab1_ctx>();
	return _1ab1257a5__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0190a3b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _40921_e, jule::Ptr<_1a378984a_FnCallExpr>* _40936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0190a3b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0190a3b_ctx>();
	return _1ab12609c__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b01929b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _41621_e, jule::Ptr<_1a378984a_FnCallExpr>* _41636_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b01929b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b01929b6_ctx>();
	return _1ab125ba1__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02322d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _97421_e, jule::Ptr<_1a378984a_FnCallExpr>* _97436_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b02322d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02322d6_ctx>();
	return _1ab12aa0d__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0234261(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _98121_e, jule::Ptr<_1a378984a_FnCallExpr>* _98136_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0234261_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0234261_ctx>();
	return _1ab12ae09__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02361db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _98821_e, jule::Ptr<_1a378984a_FnCallExpr>* _98836_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b02361db_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02361db_ctx>();
	return _1ab12b701__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0238166(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _99521_e, jule::Ptr<_1a378984a_FnCallExpr>* _99536_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0238166_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0238166_ctx>();
	return _1ab12baec__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b023a0e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _100221_e, jule::Ptr<_1a378984a_FnCallExpr>* _100236_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b023a0e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b023a0e1_ctx>();
	return _1ab12bee8__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b023c06b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _100921_e, jule::Ptr<_1a378984a_FnCallExpr>* _100936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b023c06b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b023c06b_ctx>();
	return _1ab12c3e4__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b023dee6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _101621_e, jule::Ptr<_1a378984a_FnCallExpr>* _101636_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b023dee6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b023dee6_ctx>();
	return _1ab12c7e0__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0240e71(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _102321_e, jule::Ptr<_1a378984a_FnCallExpr>* _102336_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0240e71_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0240e71_ctx>();
	return _1ab12cbdb__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024303e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _103021_e, jule::Ptr<_1a378984a_FnCallExpr>* _103036_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b024303e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b024303e_ctx>();
	return _1ab12d0d7__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0244eb9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _103721_e, jule::Ptr<_1a378984a_FnCallExpr>* _103736_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0244eb9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0244eb9_ctx>();
	return _1ab1306b1__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0246e44(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _104421_e, jule::Ptr<_1a378984a_FnCallExpr>* _104436_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0246e44_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0246e44_ctx>();
	return _1ab12e5c2__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0248dbe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _105121_e, jule::Ptr<_1a378984a_FnCallExpr>* _105136_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0248dbe_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0248dbe_ctx>();
	return _1ab12d4d3__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024ad49(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _105821_e, jule::Ptr<_1a378984a_FnCallExpr>* _105836_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b024ad49_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b024ad49_ctx>();
	return _1ab12d8ce__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024ccc4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _106521_e, jule::Ptr<_1a378984a_FnCallExpr>* _106536_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b024ccc4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b024ccc4_ctx>();
	return _1ab12dcca__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b024ec4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _107221_e, jule::Ptr<_1a378984a_FnCallExpr>* _107236_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b024ec4e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b024ec4e_ctx>();
	return _1ab12e1c6__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0251bc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _107921_e, jule::Ptr<_1a378984a_FnCallExpr>* _107936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0251bc9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0251bc9_ctx>();
	return _1ab12e9bd__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0253b54(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _108621_e, jule::Ptr<_1a378984a_FnCallExpr>* _108636_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0253b54_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0253b54_ctx>();
	return _1ab12edb9__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0255ace(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _109321_e, jule::Ptr<_1a378984a_FnCallExpr>* _109336_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0255ace_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0255ace_ctx>();
	return _1ab1302b5__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0257a59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _110021_e, jule::Ptr<_1a378984a_FnCallExpr>* _110036_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0257a59_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0257a59_ctx>();
	return _1ab12b305__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0283d3d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _126221_e, jule::Ptr<_1a378984a_FnCallExpr>* _126236_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0283d3d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0283d3d_ctx>();
	return _1ab131a36__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0285cb8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _126921_e, jule::Ptr<_1a378984a_FnCallExpr>* _126936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0285cb8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0285cb8_ctx>();
	return _1ab131e32__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0287c43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _127621_e, jule::Ptr<_1a378984a_FnCallExpr>* _127636_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0287c43_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0287c43_ctx>();
	return _1ab13232d__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0289bbd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _128321_e, jule::Ptr<_1a378984a_FnCallExpr>* _128336_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0289bbd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0289bbd_ctx>();
	return _1ab132729__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b028bb48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _129021_e, jule::Ptr<_1a378984a_FnCallExpr>* _129036_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b028bb48_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b028bb48_ctx>();
	return _1ab132b25__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b028dac3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _129721_e, jule::Ptr<_1a378984a_FnCallExpr>* _129736_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b028dac3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b028dac3_ctx>();
	return _1ab133021__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0290a4d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _130421_e, jule::Ptr<_1a378984a_FnCallExpr>* _130436_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0290a4d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0290a4d_ctx>();
	return _1ab13341c__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02a5766(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _142921_e, jule::Ptr<_1a378984a_FnCallExpr>* _142936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b02a5766_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02a5766_ctx>();
	return _1ab1361bc__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02a76e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _143621_e, jule::Ptr<_1a378984a_FnCallExpr>* _143636_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b02a76e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02a76e1_ctx>();
	return _1ab1365b8__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b02a966b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _144321_e, jule::Ptr<_1a378984a_FnCallExpr>* _144336_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b02a966b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02a966b_ctx>();
	return _1ab1369b4__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b031d559(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _194921_e, jule::Ptr<_1a378984a_FnCallExpr>* _194936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b031d559_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b031d559_ctx>();
	return _1ab13a413__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03204d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _195621_e, jule::Ptr<_1a378984a_FnCallExpr>* _195636_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b03204d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03204d4_ctx>();
	return _1ab828d21__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032245e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _196321_e, jule::Ptr<_1a378984a_FnCallExpr>* _196336_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b032245e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b032245e_ctx>();
	return _1ab82921c__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03243d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _197021_e, jule::Ptr<_1a378984a_FnCallExpr>* _197036_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b03243d9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03243d9_ctx>();
	return _1ab829618__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b0326364(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _197721_e, jule::Ptr<_1a378984a_FnCallExpr>* _197736_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b0326364_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0326364_ctx>();
	return _1ab829a14__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03282de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _198421_e, jule::Ptr<_1a378984a_FnCallExpr>* _198436_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b03282de_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03282de_ctx>();
	return _1ab829e10__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032a269(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _199121_e, jule::Ptr<_1a378984a_FnCallExpr>* _199136_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b032a269_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b032a269_ctx>();
	return _1ab82a30b__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032c1e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _199821_e, jule::Ptr<_1a378984a_FnCallExpr>* _199836_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b032c1e4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b032c1e4_ctx>();
	return _1ab82a707__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b032e2b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _200521_e, jule::Ptr<_1a378984a_FnCallExpr>* _200536_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b032e2b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b032e2b2_ctx>();
	return _1ab82ab03__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b033123c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _201221_e, jule::Ptr<_1a378984a_FnCallExpr>* _201236_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b033123c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b033123c_ctx>();
	return _1ab82aeee__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1ab906a8b_Data> __jule_anon_1b03331b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab9087b3_eval>* _201921_e, jule::Ptr<_1a378984a_FnCallExpr>* _201936_fc, jule::Ptr<_1ab906a8b_Data>* ) {
	jule::Ptr<__jule_anon_1b03331b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03331b7_ctx>();
	return _1ab82b3ea__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1b033e48c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _6415_sema, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1b033e48c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b033e48c_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0340548:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1a378dcc2_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1ab937e30_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1b0340548;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab939816_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03432d7:;
					if (it != expr_end) {
						jule::Ptr<_1ab6c0877_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1ab939816_Type> _7310_kind = _1ab88a877_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1ab959bee_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type77) {
										_case_begin_1b0345141:;
										{
											jule::Ptr<_1ab6c0e82_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1ab6c0e82_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1ab830c4b_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1b034873d;
											};
										}
									}
									_match_end_1b03450b9:;
								};
								return false;;
							};
							_julec_label_1b034873d:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab939816_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1b03432d7:;
						++it;
						goto _iter_begin_1b03432d7;
					}
					_iter_end_1b03432d7:;
				};
			}
			_iter_next_1b0340548:;
			++it;
			_659_i++;
			goto _iter_begin_1b0340548;
		}
		_iter_end_1b0340548:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1b065809c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab866578_ImportInfo> _48635_spkg) {
	jule::Ptr<__jule_anon_1b065809c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b065809c_ctx>();
	return ((!(_1ab861760_isImplicitImport(_48635_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48528_pkg))))._field_Path == (*(_48635_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1b07643d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _83342_sema) {
	jule::Ptr<__jule_anon_1b07643d9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b07643d9_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82643_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b07653da:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> _83516_p = *it;
			{
				if ((!(_1ab088570_IsSelf((*(_83516_p))._field_Decl.ptr())))) {
					(*_83516_p.alloc)._field_Type=_1ab890250_buildNonGenericType((*(_83342_sema)), &((*((*(*(_83516_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82659_ignored);
					__jule_func_result=(__jule_func_result && ((*_83516_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1b07653da:;
			++it;
			goto _iter_begin_1b07653da;
		}
		_iter_end_1b07653da:;
	};
	if ((!(_1ab089d9b_IsVoid((*__jule_closure_ctx.alloc->_82643_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82643_f.alloc)._field_Result=_1ab890250_buildNonGenericType((*(_83342_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82643_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82659_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82643_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1b077c3ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _93642_sema) {
	jule::Ptr<__jule_anon_1b077c3ad_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b077c3ad_ctx>();
	return __jule_closure_ctx.alloc->_92946_algo(_93642_sema, &(__jule_closure_ctx.alloc->_9347_generics));;
}

inline jule::Bool __jule_anon_1b0786a05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab883573_sema>* _95237_sema, jule::Slice<jule::Ptr<_1ab938a24_TypeAlias>>* _95255_generics) {
	jule::Ptr<__jule_anon_1b0786a05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0786a05_ctx>();
	jule::Bool _9538_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0787e9b:;
		if (it != expr_end) {
			jule::Ptr<_1ab08b84d_ParamIns> _95416_p = *it;
			{
				if (_1ab088570_IsSelf((*(_95416_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1b0787e9b;
					};
					if (_1ab088806_IsRef((*(_95416_p))._field_Decl)) {
						(*_95416_p.alloc)._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab94645a_Sptr>(_1ab94645a_Sptr{._field_Elem=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)});
					} else {
						(*_95416_p.alloc)._field_Type=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1ab939360_Kind_mptr_data0)});
					};
				} else {
					(*(_95416_p))._field_Type=_1ab88bec7_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*_95416_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
					if (((*_95416_p.alloc)._field_Type != nullptr)) {
						_1ab891e99_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95416_p));
					} else {
						_9538_ok=false;
					};
				};
			}
			_iter_next_1b0787e9b:;
			++it;
			goto _iter_begin_1b0787e9b;
		}
		_iter_end_1b0787e9b:;
	};
	if ((!(_1ab089d9b_IsVoid((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result=_1ab88bec7_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94837_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
		_9538_ok=(((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result != nullptr) && _9538_ok);
	};
	return _9538_ok;;
}

inline jule::Str __jule_anon1b111c7b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b111d8b9:;
			{
				return (*((*(_85519_def)).cast_ptr<_1ab938a24_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b111d6dd:;
			{
				return (*((*(_85519_def)).cast_ptr<_1a37a2577_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1b111d29d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b111d237:;
	};
}

inline void __jule_anon_1b1870d0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _20331_file) {
	jule::Ptr<__jule_anon_1b1870d0d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b1870d0d_ctx>();
	{
		auto expr = &((*((*(_20331_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b187178c:;
		if (it != expr_end) {
			jule::Ptr<_1ab8a7289_Var> _20416_v = *it;
			{
				if (_1ab3dd6c7_HasDirective(&((*(_20416_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1b18669b3_isLive(__jule_closure_ctx.alloc->_self_, &(_20416_v))))) {
						_1b1869e28_pushLive(__jule_closure_ctx.alloc->_self_, _20416_v);
						_1ad1ce98e_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_20416_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1b187178c:;
			++it;
			goto _iter_begin_1b187178c;
		}
		_iter_end_1b187178c:;
	};
	{
		auto expr = &((*((*(_20331_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1872705:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _21216_f = *it;
			{
				if (_1ab3dd6c7_HasDirective(&((*(_21216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_21216_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b1874240:;
						if (it != expr_end) {
							jule::Ptr<_1ab08c9a3_FnIns> _21418_ins = *it;
							{
								if ((!(_1b1836983_isLive(__jule_closure_ctx.alloc->_self_, &(_21418_ins))))) {
									_1b183a16d_pushLive(__jule_closure_ctx.alloc->_self_, _21418_ins);
									_1ad1ce98e_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_21418_ins))._field_Refers));
								};
							}
							_iter_next_1b1874240:;
							++it;
							goto _iter_begin_1b1874240;
						}
						_iter_end_1b1874240:;
					};
				};
			}
			_iter_next_1b1872705:;
			++it;
			goto _iter_begin_1b1872705;
		}
		_iter_end_1b1872705:;
	};
}

inline void __jule_anon_1b18c8ddd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1b18c8ddd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b18c8ddd_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b18c9839:;
			{
				jule::Ptr<_1ab07e5ee_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1ad1d3135_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b18c9680:;
			{
				jule::Ptr<_1ab080435_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1ab080435_AnonFnExprModel>(&__jule_any_type102);;
				_1ad1d5a94_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1b18c97b2:;
	};
}

inline void __jule_anon_1a9996699(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _59047_m) {
	jule::Ptr<__jule_anon_1a9996699_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9996699_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_59047_m));
	};
	{
		auto &_match_expr{ (*(_59047_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a9997029:;
			{
				{
					_1ad131e96_binary(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab07c61e_BinaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a999727c:;
			{
				{
					_1ad13224e_unary(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab07c9e8_UnaryExprModel>(&__jule_any_type112));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a9997090:;
			{
				{
					_1ad132507_structureLit(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab07d3bc_StructLitExprModel>(&__jule_any_type97));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a9997106:;
			{
				{
					_1ad1327b0_casting(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab07dc4c_CastingExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a999716c:;
			{
				{
					_1ad13343c_funcCall(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab07e5ee_FnCallExprModel>(&__jule_any_type30));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a9997986:;
			{
				{
					_1ad1336e5_indexing(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab07ee7e_IndexingExprModel>(&__jule_any_type42));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a99979ec:;
			{
				{
					_1ad13399d_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1ab080435_AnonFnExprModel>(&__jule_any_type102));
				};
			}
		}
		_match_end_1a9996e2a:;
	};
}

inline void __jule_anon_1b17389a6(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b17389a6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b17389a6_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1b173c4b0(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b173c4b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b173c4b0_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1b175ca96(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b175ca96_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b175ca96_ctx>();
	_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1ad15b9d7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad15b9d7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad15b9d7_ctx>();
	_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1ad1761c7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad1761c7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad1761c7_ctx>();
	_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1b19a433c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b19a433c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b19a433c_ctx>();
	_1ad4c1247_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1b19a566d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b19a566d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b19a566d_ctx>();
	_1ad1ece0d_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_76130_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1b1a26986(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab8a7289_Var> _113767_v) {
	jule::Ptr<__jule_anon_1b1a26986_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b1a26986_ctx>();
	return _1ad1e5ec2_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_113134_m), &(_113767_v));;
}

inline void __jule_anon_1b2321060(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _84038_pkg) {
	jule::Ptr<__jule_anon_1b2321060_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2321060_ctx>();
	_1ab3d8bcd_IterFiles(_84038_pkg, jule::__new_closure<void,jule::Ptr<_1ab090be8_SymTab>*>((void*)__jule_anon_1b2321e95, jule::Ptr<__jule_anon_1b2321e95_ctx>::make(__jule_anon_1b2321e95_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b2321e95_ctx_handler));
}

inline void __jule_anon_1b2335d88(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b2335d88_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2335d88_ctx>();
	_1ad4c1247_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1ad20706b_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92524_v))._field_Value))._field_Data.alloc)._field_Model);
	_1ad4c1247_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1b2337e78(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b2337e78_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2337e78_ctx>();
	_1ad1ece0d_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92524_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1b233a684(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b233a684_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b233a684_ctx>();
	_1ad4c1247_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1b233b82d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b233b82d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b233b82d_ctx>();
	_1ad208237_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92524_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1b2199702(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _118738_pkg) {
	jule::Ptr<__jule_anon_1b2199702_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2199702_ctx>();
	_1ab3d8bcd_IterFiles(_118738_pkg, jule::__new_closure<void,jule::Ptr<_1ab090be8_SymTab>*>((void*)__jule_anon_1b219a637, jule::Ptr<__jule_anon_1b219a637_ctx>::make(__jule_anon_1b219a637_ctx{._118738_pkg=_118738_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b219a637_ctx_handler));
}

inline void __jule_anon_1b219ac20(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _121031_file) {
	jule::Ptr<__jule_anon_1b219ac20_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b219ac20_ctx>();
	{
		auto expr = &((*((*(_121031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b219ee77:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _121116_f = *it;
			{
				if ((*(_121116_f))._field_Ident.equal("init", 4)) {
					_1ad4c1ae9_indent(__jule_closure_ctx.alloc->_self_);
					static__1ad20ea9b_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_121116_f));
					_1ad4c1247_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1b219ee77:;
			++it;
			goto _iter_begin_1b219ee77;
		}
		_iter_end_1b219ee77:;
	};
}

inline void __jule_anon_1b21a70b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _124938_pkg) {
	jule::Ptr<__jule_anon_1b21a70b1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b21a70b1_ctx>();
	_1ad4cb9d3_pushInit(__jule_closure_ctx.alloc->_self_, _124938_pkg);
}

inline void __jule_anon_1b21ac2d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab0898e5_Fn>* _128636_m) {
	jule::Ptr<__jule_anon_1b21ac2d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b21ac2d6_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12827_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21acd31:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _128811_em = *it;
			{
				if ((_128811_em == (*(_128636_m)))) {
					return;;
				};
			}
			_iter_next_1b21acd31:;
			++it;
			goto _iter_begin_1b21acd31;
		}
		_iter_end_1b21acd31:;
	};
	(*__jule_closure_ctx.alloc->_12827_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12827_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab0898e5_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_128636_m)); __jule_collection; }));
}

inline void __jule_anon_1b21ae8b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab868cea_Package>* _130038_pkg) {
	jule::Ptr<__jule_anon_1b21ae8b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b21ae8b0_ctx>();
	_1ab3d8bcd_IterFiles(_130038_pkg, jule::__new_closure<void,jule::Ptr<_1ab090be8_SymTab>*>((void*)__jule_anon_1b21b07c3, jule::Ptr<__jule_anon_1b21b07c3_ctx>::make(__jule_anon_1b21b07c3_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b21b07c3_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b23b06c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a940b692_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b23bd195(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a940b1db_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1b0141305(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab866578_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1b0b2821a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab866578_ImportInfo> _472130_imp) {
	jule::Ptr<__jule_anon_1b0b2821a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0b2821a_ctx>();
	return (((*(_472130_imp))._field_Alias == __jule_closure_ctx.alloc->_472038_namespace) && (!(_1ab861760_isImplicitImport(_472130_imp))));;
}

inline void __jule_anon_1b2321e95(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _84132_file) {
	jule::Ptr<__jule_anon_1b2321e95_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2321e95_ctx>();
	{
		auto expr = &((*((*(_84132_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2322946:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _84217_f = *it;
			{
				if (((!((*(_84217_f))._field_Binded)) && ((*_84217_f.alloc)._field_Token != nullptr))) {
					_1ad4c32b0_pushResult(__jule_closure_ctx.alloc->_self_, &(_84217_f));
					_1ad4c6934_funcDecl(__jule_closure_ctx.alloc->_self_, &(_84217_f), false);
				};
			}
			_iter_next_1b2322946:;
			++it;
			goto _iter_begin_1b2322946;
		}
		_iter_end_1b2322946:;
	};
}

inline void __jule_anon_1b219a637(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _118832_file) {
	jule::Ptr<__jule_anon_1b219a637_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b219a637_ctx>();
	{
		auto expr = &((*((*(_118832_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b219b0d8:;
		if (it != expr_end) {
			jule::Ptr<_1ab0898e5_Fn> _118917_f = *it;
			{
				if (((!(_1a87c132c_Test)) && _1ab3dd6c7_HasDirective(&((*(_118917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1b219b0d8;
				};
				if (((*(__jule_closure_ctx.alloc->_118738_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118917_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1b219ca13:;
							{
								goto _iter_next_1b219b0d8;
							}
						}
						_match_end_1b219c947:;
					};
				};
				if (((!((*_118917_f.alloc)._field_Binded)) && ((*_118917_f.alloc)._field_Token != nullptr))) {
					_1ad4c8e75_func(__jule_closure_ctx.alloc->_self_, &(_118917_f));
					_1ad4c1247_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b219b0d8:;
			++it;
			goto _iter_begin_1b219b0d8;
		}
		_iter_end_1b219b0d8:;
	};
}

inline void __jule_anon_1b21b07c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab090be8_SymTab>* _130132_file) {
	jule::Ptr<__jule_anon_1b21b07c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b21b07c3_ctx>();
	{
		auto expr = &((*((*(_130132_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21b1252:;
		if (it != expr_end) {
			jule::Ptr<_1ab095109_Trait> _130217_t = *it;
			{
				if (((*(_130217_t))._field_Token != nullptr)) {
					_1ad4cc583_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_130217_t));
				};
			}
			_iter_next_1b21b1252:;
			++it;
			goto _iter_begin_1b21b1252;
		}
		_iter_end_1b21b1252:;
	};
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1a87c2dab_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1ad553362_OutDir = jule::Str::lit("dist", 4);
	_1ad55365e_OutName = jule::Str::lit("ir.cpp", 6);
	_1ad553917_Out = jule::Str();
	_1a41bd118_STDIN = 0LLU;
	_1a41bd448_STDOUT = 1LLU;
	_1a41bd734_STDERR = 2LLU;
	_1a4321d82_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1a43227cd_acceptRanges = ({ auto __jule_collection = jule::Array<_1a4322437_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1a4322437_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1a4322437_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1a4322437_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1a4322437_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1a4322437_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1a4322437_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1a3da1e62__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1a3da254a__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1a873cc38__L = jule::new_ptr<_1a87a52de_RangeTable>(_1a87a52de_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1a87a483d_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1a87a483d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1a87a4d6b_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1a87a4d6b_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1a873db4b__LU = jule::new_ptr<_1a87a52de_RangeTable>(_1a87a52de_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1a87a483d_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1a87a483d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1a87a483d_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1a87a4d6b_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1a87a4d6b_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1a87a4d6b_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1a8744b30_Letter = _1a873cc38__L;
	_1a874ae00_Upper = _1a873db4b__LU;
	_1a879d44c__CaseRanges = ({ auto __jule_collection = jule::Slice<_1a87a4387_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1a87a4387_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a87a4387_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1a879d738__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1a87a051a_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1a87a0806_caseOrbit = ({ auto __jule_collection = jule::Slice<_1a87a3d8c_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1a87a3d8c_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1a87a3d8c_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1a3e43dd3_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1a3e4280a_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1a3e44598_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1a87b8bd7_PathStdlib = jule::Str();
	_1a87b8e3a_PathExec = jule::Str();
	_1a87b91c1_PathWd = jule::Str();
	_1a87b94bd_PathApi = jule::Str();
	_1a87b9776_OS = jule::Str::lit("linux", 5);
	_1a87b9a2e_Arch = jule::Str::lit("arm64", 5);
	_1a87be418_Compiler = jule::Str();
	_1a87c0815_CompilerPath = jule::Str();
	_1a87c0a24_CppStd = jule::Str::lit("cpp17", 5);
	_1a87c0cbb_Shadowing = false;
	_1a87c1074_Transpilation = false;
	_1a87c132c_Test = false;
	_1a87c15d5_RC = true;
	_1a87c199d_Safety = true;
	_1a87c1be0_Production = false;
	_1a94053e4_f32info = _1a940502b_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1a94056e1_f64info = _1a940502b_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1a940d111_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1a940ed6b_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1a941092c_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1a9410c5c_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1a9413e5d_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1a941812c_leftCheats = ({ auto __jule_collection = jule::Slice<_1a9417bed_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1a9417bed_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1a9417bed_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1a9417bed_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1a9417bed_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1a9417bed_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1a9417bed_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1a9417bed_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1a9417bed_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1a9417bed_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1a9417bed_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1a9417bed_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1a9417bed_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1a9417bed_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1a9417bed_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1a9417bed_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1a9417bed_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1a9417bed_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1a9417bed_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1a9417bed_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1a9417bed_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1a9417bed_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1a9417bed_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1a9417bed_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1a9417bed_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1a9417bed_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1a9417bed_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1a9417bed_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1a9417bed_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1a9417bed_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1a9417bed_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1a9417bed_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1a9417bed_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1a9417bed_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1a9417bed_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1a9417bed_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1a9417bed_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1a9417bed_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1a9417bed_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1a9417bed_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1a9417bed_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1a9417bed_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1a9417bed_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1a9417bed_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1a9417bed_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1a9417bed_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1a9417bed_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1a9417bed_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1a9417bed_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1a9417bed_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1a9417bed_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1a9417bed_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1a9417bed_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1a9417bed_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1a9417bed_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1a9417bed_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1a9417bed_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1a9417bed_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1a9417bed_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1a9417bed_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1a9417bed_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1a9417bed_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1ab6073e6_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1ab607605_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1ab6078d0_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1ab69e9bb_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1ab69eca7_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1ab6ad3d1_keywords = ({ auto __jule_collection = jule::Array<_1ab6acee6_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1ab6ad711_basicOps = ({ auto __jule_collection = jule::Array<_1ab6acee6_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1ab6acee6_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1ab10e1ea_BitSize = 0LL;
	_1ab10e45e_SysInt = jule::Str();
	_1ab10e717_SysUint = jule::Str();
	_1ab82d980_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1ab9b2718_primNil = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1ab9b2a15_primVoid = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b2cbd_primAny = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b30ba_primStr = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b3373_primBool = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b362b_primUintptr = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b38d4_primUint = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b3c9c_primInt = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b3ede_primI8 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b4286_primI16 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b453e_primI32 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b47e7_primI64 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b4aa0_primU8 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b4d58_primU16 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b5111_primU32 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b55ea_primU64 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b583c_primF32 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab9b5a4b_primF64 = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ab956ca6_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)});
	_1ab3e1136_ProgramMeta = static_cast<jule::Ptr<_1ab3e19c7_Meta>>(nullptr);
	_1ad1378e7_emptyData = jule::new_ptr<_1ad1383a9_data>(_1ad1383a9_data{._field_boundary=jule::Ptr<_1ad139b91_boundary>(nullptr), ._field_nils=jule::Ptr<_1ad1256c6_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ad1354c7_dynamic>(nullptr), ._field_flags=0LL});
	_1ad13c897_Copy = false;
	_1ad13cb94_Deadcode = false;
	_1ad13ce4c_Append = false;
	_1ad13d249_Math = false;
	_1ad13d502_Access = false;
	_1ad13d7aa_Inline = false;
	_1ad13da63_Ptr = false;
	_1ad13de2b_Cond = false;
	_1ad13e16d_Str = false;
	_1ad13e415_Slice = false;
	_1ad13e6bd_Assign = false;
	_1ad13e976_Exceptional = false;
	_1ad13ec2e_Iter = false;
	_1ad13eed7_Dynamic = false;
	_1ad140290_StdStrings = false;
	_1ad1d7a52_exprEnabled = false;
	_1ad1d7dd7_scopeEnabled = false;
	_1ad4b23d1_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1ad1dba45_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1ad4bce9c_generalGCPtr = jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab94645a_Sptr>(_1ab94645a_Sptr{._field_Elem=jule::new_ptr<_1ab939816_Type>(_1ab939816_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ab94292e_Prim>(_1ab94292e_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1ab939360_Kind_mptr_data23)});
	_1a879d161_CaseRanges = _1a879d44c__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_1a87c4693_main();

	return EXIT_SUCCESS;
}