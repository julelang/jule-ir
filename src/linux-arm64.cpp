// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 28/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <pthread.h>
#include <time.h>
#include <signal.h>
#include <sys/wait.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _2173649bb_Char;
struct _217365071_Wchar;
struct _217365626_SignedChar;
struct _217365bcb_UnsignedChar;
struct _217366281_Short;
struct _2173667c0_ShortInt;
struct _217366d75_SignedShort;
struct _21736742a_SignedShortInt;
struct _217367a46_UnsignedShort;
struct _217368085_UnsignedShortInt;
struct _2173686a1_Int;
struct _217368be0_Signed;
struct _217369295_SignedInt;
struct _2173698b1_Unsigned;
struct _217369e00_UnsignedInt;
struct _21736a51b_Long;
struct _21736aa5a_LongInt;
struct _21736b110_SignedLong;
struct _21736b6b5_SignedLongInt;
struct _21736bcd1_UnsignedLong;
struct _21736c320_UnsignedLongInt;
struct _21736c93b_LongLong;
struct _21736ce7a_LongLongInt;
struct _21736d530_SignedLongLong;
struct _21736dad5_SignedLongLongInt;
struct _21736e201_UnsignedLongLong;
struct _21736e740_UnsignedLongLongInt;
struct _21736ed5b_Float;
struct _217370411_Double;
struct _2173709b6_LongDouble;
struct _21737106b_Bool;
struct _2173899be_Errno;
struct _21738e93b_Dir;
struct _217390475_Dirent;
struct _217391014_SysStat;
struct _217393324_Timeval;
struct _217392125_secType;
struct _217392cc4_usecType;
struct _217393bc6_Sockaddr;
struct _217394ec4_SockaddrIn;
struct _217396228_SockaddrIn6;
struct _217396998_Fd;
struct _21e42c7b3_acceptRange;
struct _21e46c46d_LittleEndian;
struct _21e48718b_u128;
struct _21a6410c4_group;
struct _21a688a56_group;
struct _21a63e017__Map;
struct _21a686ba8__Map;
struct _21a649792_mapIterator;
struct _21a690343_mapIterator;
struct _2174e4453_metadata;
struct _21e64c5b5_Builder;
struct _220c573c7_foldPair;
struct _220c578c2_CaseRange;
struct _220c57d78_Range16;
struct _220c583a6_Range32;
struct _220c58829_RangeTable;
struct _2175ba606_d;
struct _220c66a24_lazyBuff;
struct _21e8109ed_File;
struct _21e88968c_cmdAttrs;
struct _21e88b804_Stat;
struct _21e65b904_Log;
struct _21ec8689c_floatInfo;
struct _21ec874e6_decimalSlice;
struct _21ec9956e_leftCheat;
struct _21ec9a086_decimal;
struct _220c98acd_AnsiEscape;
struct _21eca071d_Logger;
struct _208711827_Token;
struct _2087173cc_Fileset;
struct _2087196ed_kindPair;
struct _20872068d_lex;
struct _2087253da_AST;
struct _208726342_Node;
struct _208726760_Directive;
struct _208727343_TypeDecl;
struct _20872794d_IdentTypeDecl;
struct _208727c17_SubIdentTypeDecl;
struct _2087280e1_NamespaceTypeDecl;
struct _2087283dd_SptrTypeDecl;
struct _208728773_SlcTypeDecl;
struct _208728a70_TupleTypeDecl;
struct _208728d6c_PtrTypeDecl;
struct _20872960e_ArrTypeDecl;
struct _208729d5c_MapTypeDecl;
struct _20872a236_RetTypeDecl;
struct _20872b677_Expr;
struct _20872b941_RangeExpr;
struct _20872c04b_UseExpr;
struct _20872c26b_TupleExpr;
struct _20872c612_LitExpr;
struct _20872c9db_UnsafeExpr;
struct _20872ce92_IdentExpr;
struct _20872d734_UnaryExpr;
struct _20872db0d_VariadicExpr;
struct _20872ded7_CastExpr;
struct _20872e3b1_NamespaceExpr;
struct _20872e78a_SubIdentExpr;
struct _20872ec41_BinaryExpr;
struct _2087303a1_FnCallExpr;
struct _208730d96_FieldExprPair;
struct _2087316c1_StructLit;
struct _208731b77_BraceLit;
struct _2087324a2_KeyValPair;
struct _208732bcd_SliceExpr;
struct _20873363a_IndexingExpr;
struct _208733c9a_SlicingExpr;
struct _208734097_Constraint;
struct _20873454d_GenericDecl;
struct _208734927_LabelSt;
struct _208734d01_GotoSt;
struct _2087350ed_FallSt;
struct _20873575d_AssignLeft;
struct _208735ce1_AssignSt;
struct _208736cd1_Stmt;
struct _208737441_ScopeTree;
struct _208737b7d_ParamDecl;
struct _2087390d0_FnDecl;
struct _20873a28a_VarDecl;
struct _20873a664_RetSt;
struct _20873add4_Iter;
struct _20873b70e_WhileKind;
struct _20873c116_RangeKind;
struct _20873c4e0_BreakSt;
struct _20873c8b9_ContSt;
struct _20873cd70_If;
struct _20873d249_Else;
struct _20873d700_Conditional;
struct _20873e019_TypeAliasDecl;
struct _20873e4c0_Case;
struct _20873ecd9_MatchCase;
struct _20874036c_UseDecl;
struct _208740823_EnumItemDecl;
struct _2087413d4_EnumDecl;
struct _208741c0e_TypeEnumItemDecl;
struct _20874236e_TypeEnumDecl;
struct _208742638_FieldDecl;
struct _20874302e_StructDecl;
struct _20874376b_TraitDecl;
struct _208743dcb_Impl;
struct _208799195_Const;
struct _208744e10_Field;
struct _208746230_Struct;
struct _208748496_FieldIns;
struct _2087490bd_StructIns;
struct _208811a9d_OperandExpr;
struct _208812098_BinaryExpr;
struct _208812472_UnaryExpr;
struct _2088129a0_StructArgExpr;
struct _208812d46_StructLitExpr;
struct _208813143_AllocStructLitExpr;
struct _2088136c6_CastingExpr;
struct _208814078_FnCallExpr;
struct _208814452_SliceExpr;
struct _208814908_IndexingExpr;
struct _208814dae_AnonFnExpr;
struct _208815288_KeyValPairExpr;
struct _208815662_MapExpr;
struct _208815be5_SlicingExpr;
struct _208816278_TraitSubIdentExpr;
struct _208816b19_StructSubIdentExpr;
struct _208816eb0_StructStaticIdentExpr;
struct _208817389_ArrayExpr;
struct _208817686_TupleExpr;
struct _208817983_BuiltinPrintCallExpr;
struct _208817c80_BuiltinPrintlnCallExpr;
struct _208818159_BuiltinNewCallExpr;
struct _208818533_BuiltinPanicCallExpr;
struct _2088189d9_BuiltinMakeCallExpr;
struct _208818db3_BuiltinAppendCallExpr;
struct _2088191b0_BuiltinLenCallExpr;
struct _2088194ac_BuiltinCapCallExpr;
struct _208819886_BuiltinDeleteCallExpr;
struct _208819c60_BuiltinCopyCallExpr;
struct _20881a139_BuiltinErrorCallExpr;
struct _20881a436_SizeofExpr;
struct _20881aada_AlignofExpr;
struct _20881acc7_RuneExpr;
struct _20881b14b_BackendEmitExpr;
struct _20881b448_FreeExpr;
struct _20881c229_RetType;
struct _20881c7e0_Param;
struct _20881e2b4_Fn;
struct _20882121c_ParamIns;
struct _208822372_FnIns;
struct _2088255b7_SymTab;
struct _2088299c8_Trait;
struct _20882b623_EnumItem;
struct _20882c17e_Enum;
struct _20882d2b2_TypeEnumItem;
struct _20882d889_TypeEnum;
struct _20889e696_comptimeRange;
struct _2088a0202_comptimeStructField;
struct _2088a1995_comptimeStructFields;
struct _2088a3425_comptimeStatic;
struct _2088a4bc9_comptimeStatics;
struct _2088a6648_comptimeEnumField;
struct _2088a7957_comptimeEnumFields;
struct _2088a945e_comptimeParam;
struct _2088ab2b8_comptimeParams;
struct _2088acb27_comptimeTypeInfos;
struct _2088ae596_comptimeTypeInfo;
struct _2088b569b_comptimeValue;
struct _2088b8407_comptimeFiles;
struct _2088b9d76_comptimeFile;
struct _2088bb99e_comptimeDecls;
struct _2088bdc8c_comptimeDecl;
struct _2088c5678_constraintChecker;
struct _2088c7977_Impl;
struct _2088ca1d8_exprPart;
struct _2088ca969_Scope;
struct _2088cad43_If;
struct _2088cb1b7_Else;
struct _2088cb55d_Conditional;
struct _2088cb85a_InfIter;
struct _2088cbd11_WhileIter;
struct _2088cc7e5_RangeIter;
struct _2088ccae2_ContSt;
struct _2088ccebb_BreakSt;
struct _2088cd472_Label;
struct _2088cdad2_GotoSt;
struct _2088cdeab_Postfix;
struct _2088ce462_Assign;
struct _2088ce9e5_MultiAssign;
struct _2088d0463_Match;
struct _2088d0c5a_Case;
struct _2088d1453_FallSt;
struct _2088d17e9_RetSt;
struct _2088d1ca0_scopeLabel;
struct _2088d2179_result;
struct _2088d3169_scopeChecker;
struct _2088e86ac_directiveChecker;
struct _2088eaeb7_ReferenceStack;
struct _2088ec518_Pass;
struct _208901ebd_symBuilder;
struct _20890d040_ImportInfo;
struct _2089107b2_Package;
struct _208929765_commonSemaMeta;
struct _20892a755_sema;
struct _208949d07_missingRetChecker;
struct _20894d7de_Var;
struct _206596bba_FuncPattern;
struct _208986959_typeCompatibilityChecker;
struct _2089887d5_assignTypeChecker;
struct _20898a1aa_dynamicTypeAnnotation;
struct _208990017_fnCallArgChecker;
struct _208992e4e_structLitChecker;
struct _208994c31_rangeChecker;
struct _20899764b_retTypeChecker;
struct _20899a9a1_Data;
struct _20899bb28_Value;
struct _20899c002_target;
struct _20899c970_eval;
struct _2089bca6c_unaryEval;
struct _2089bea08_binaryEval;
struct _2089ccc7a_InsGeneric;
struct _2089cd94b_TypeAlias;
struct _2089ce661_Type;
struct _2089d7a65_TypeSym;
struct _2089d846c_Prim;
struct _2089dbe98_Sptr;
struct _2089dc96b_Slc;
struct _2089dd560_Tuple;
struct _2089de110_Map;
struct _2089dec8c_Arr;
struct _2089e0760_Ptr;
struct _2089e1761_referencer;
struct _2089e2751_typeChecker;
struct _2089ea814_identTypeLookup;
struct _20931304e_FileInfo;
struct _209362ad7_stmt;
struct _209363478_scopeParser;
struct _209370d9d_exprBuilder;
struct _20937d493_assignInfo;
struct _209381683_parser;
struct _20939283c_typeBuilder;
struct _208b0e098_CompileInfo;
struct _208b107d6_directiveEval;
struct _209396940_Importer;
struct _208a620c8_anyData;
struct _20939ca56_ExprInspector;
struct _2093a5124_MetaStrBuilder;
struct _2093a5ce5_MetaRuntime;
struct _2093a67b8_MetaMathCmplx;
struct _2093a6dc3_Meta;
struct _2093a839c_OrderedDefines;
struct _21a2d3ccd_xorshift;
struct _2171c7ea0_liveTable;
struct _2171c8368_ObjectDeadCode;
struct _2171cc48d_scopeDeadCode;
struct _2171d1a25_exprDeadCode;
struct _216d93a39_StrFromBytes;
struct _216da6057_ExceptionalForwardingExpr;
struct _216da6244_FnCallIgnoreExceptionalExpr;
struct _216da64a8_StrConcatExpr;
struct _216da680a_SwapExpr;
struct _216da6bd4_EmptyCompareExpr;
struct _216da6ed1_RefExpr;
struct _216da7520_StrCompExpr;
struct _216da7aa3_MutSlicingExpr;
struct _216da7da0_UnsafeBinaryExpr;
struct _216da819c_UnsafeIndexingExpr;
struct _216da8576_PushToSliceExpr;
struct _216da8950_AppendToSliceExpr;
struct _216da8d29_StrRuneIter;
struct _216da9126_UnsafeDerefExpr;
struct _216da9654_UnsafeCastingExpr;
struct _216daa1b0_nilVar;
struct _216daa501_nils;
struct _2170a3188_scopeOptimizer;
struct _2170aa998_exprOptimizer;
struct _2170b3341_dynamicVar;
struct _2170b3682_dynamic;
struct _2170b5cb1_dataCheckpoint;
struct _2170b62ab_data;
struct _2170b8225_boundaryVar;
struct _2170b8566_boundary;
struct _2171d2b47_Optimizer;
struct _2172a3cd4_AbsTime;
struct _2172a44aa_Time;
struct _21a5e58b4_UnixTime;
struct _21a5e5dd1_TimeData;
struct _21a5e65a7_DurInt;
struct _2171d6b29_scopeCoder;
struct _2171e2bce_exprCoder;
struct _2172053a6_TestCoder;
struct _217208002_identCoder;
struct _2172ae251_SerializationInfo;
struct _2172ae66e_traitCast;
struct _2172aea48_anonHash;
struct _2172aee66_traitHash;
struct _2172b0263_metadata;
struct _2172b1a06_ObjectCoder;
struct _2172c0a26_customType;
struct _2172c163c_typeCoder;
struct _2172c9227_resultCoder;
struct _21ad1e164_Flag;
struct _21ad22299_Flag;
struct _21ad254de_Flag;
struct _21ad28778_Flag;
struct _21ad2b9bd_Flag;
struct _21733e325_FlagSet;
struct _217341cd9_argParser;
struct _20939938d_IR;
struct _21e80ade4_Dir;
struct _21e80ba1b_Cmd;
struct _2173649bb_Char {
};
inline jule::Bool _2173649bb_Char_eq(_2173649bb_Char *_self_, _2173649bb_Char _other_);


struct _217365071_Wchar {
};
inline jule::Bool _217365071_Wchar_eq(_217365071_Wchar *_self_, _217365071_Wchar _other_);


struct _217365626_SignedChar {
};
inline jule::Bool _217365626_SignedChar_eq(_217365626_SignedChar *_self_, _217365626_SignedChar _other_);


struct _217365bcb_UnsignedChar {
};
inline jule::Bool _217365bcb_UnsignedChar_eq(_217365bcb_UnsignedChar *_self_, _217365bcb_UnsignedChar _other_);


struct _217366281_Short {
};
inline jule::Bool _217366281_Short_eq(_217366281_Short *_self_, _217366281_Short _other_);


struct _2173667c0_ShortInt {
};
inline jule::Bool _2173667c0_ShortInt_eq(_2173667c0_ShortInt *_self_, _2173667c0_ShortInt _other_);


struct _217366d75_SignedShort {
};
inline jule::Bool _217366d75_SignedShort_eq(_217366d75_SignedShort *_self_, _217366d75_SignedShort _other_);


struct _21736742a_SignedShortInt {
};
inline jule::Bool _21736742a_SignedShortInt_eq(_21736742a_SignedShortInt *_self_, _21736742a_SignedShortInt _other_);


struct _217367a46_UnsignedShort {
};
inline jule::Bool _217367a46_UnsignedShort_eq(_217367a46_UnsignedShort *_self_, _217367a46_UnsignedShort _other_);


struct _217368085_UnsignedShortInt {
};
inline jule::Bool _217368085_UnsignedShortInt_eq(_217368085_UnsignedShortInt *_self_, _217368085_UnsignedShortInt _other_);


struct _2173686a1_Int {
};
inline jule::Bool _2173686a1_Int_eq(_2173686a1_Int *_self_, _2173686a1_Int _other_);


struct _217368be0_Signed {
};
inline jule::Bool _217368be0_Signed_eq(_217368be0_Signed *_self_, _217368be0_Signed _other_);


struct _217369295_SignedInt {
};
inline jule::Bool _217369295_SignedInt_eq(_217369295_SignedInt *_self_, _217369295_SignedInt _other_);


struct _2173698b1_Unsigned {
};
inline jule::Bool _2173698b1_Unsigned_eq(_2173698b1_Unsigned *_self_, _2173698b1_Unsigned _other_);


struct _217369e00_UnsignedInt {
};
inline jule::Bool _217369e00_UnsignedInt_eq(_217369e00_UnsignedInt *_self_, _217369e00_UnsignedInt _other_);


struct _21736a51b_Long {
};
inline jule::Bool _21736a51b_Long_eq(_21736a51b_Long *_self_, _21736a51b_Long _other_);


struct _21736aa5a_LongInt {
};
inline jule::Bool _21736aa5a_LongInt_eq(_21736aa5a_LongInt *_self_, _21736aa5a_LongInt _other_);


struct _21736b110_SignedLong {
};
inline jule::Bool _21736b110_SignedLong_eq(_21736b110_SignedLong *_self_, _21736b110_SignedLong _other_);


struct _21736b6b5_SignedLongInt {
};
inline jule::Bool _21736b6b5_SignedLongInt_eq(_21736b6b5_SignedLongInt *_self_, _21736b6b5_SignedLongInt _other_);


struct _21736bcd1_UnsignedLong {
};
inline jule::Bool _21736bcd1_UnsignedLong_eq(_21736bcd1_UnsignedLong *_self_, _21736bcd1_UnsignedLong _other_);


struct _21736c320_UnsignedLongInt {
};
inline jule::Bool _21736c320_UnsignedLongInt_eq(_21736c320_UnsignedLongInt *_self_, _21736c320_UnsignedLongInt _other_);


struct _21736c93b_LongLong {
};
inline jule::Bool _21736c93b_LongLong_eq(_21736c93b_LongLong *_self_, _21736c93b_LongLong _other_);


struct _21736ce7a_LongLongInt {
};
inline jule::Bool _21736ce7a_LongLongInt_eq(_21736ce7a_LongLongInt *_self_, _21736ce7a_LongLongInt _other_);


struct _21736d530_SignedLongLong {
};
inline jule::Bool _21736d530_SignedLongLong_eq(_21736d530_SignedLongLong *_self_, _21736d530_SignedLongLong _other_);


struct _21736dad5_SignedLongLongInt {
};
inline jule::Bool _21736dad5_SignedLongLongInt_eq(_21736dad5_SignedLongLongInt *_self_, _21736dad5_SignedLongLongInt _other_);


struct _21736e201_UnsignedLongLong {
};
inline jule::Bool _21736e201_UnsignedLongLong_eq(_21736e201_UnsignedLongLong *_self_, _21736e201_UnsignedLongLong _other_);


struct _21736e740_UnsignedLongLongInt {
};
inline jule::Bool _21736e740_UnsignedLongLongInt_eq(_21736e740_UnsignedLongLongInt *_self_, _21736e740_UnsignedLongLongInt _other_);


struct _21736ed5b_Float {
};
inline jule::Bool _21736ed5b_Float_eq(_21736ed5b_Float *_self_, _21736ed5b_Float _other_);


struct _217370411_Double {
};
inline jule::Bool _217370411_Double_eq(_217370411_Double *_self_, _217370411_Double _other_);


struct _2173709b6_LongDouble {
};
inline jule::Bool _2173709b6_LongDouble_eq(_2173709b6_LongDouble *_self_, _2173709b6_LongDouble _other_);


struct _21737106b_Bool {
};
inline jule::Bool _21737106b_Bool_eq(_21737106b_Bool *_self_, _21737106b_Bool _other_);


struct _2173899be_Errno {
};
inline jule::Bool _2173899be_Errno_eq(_2173899be_Errno *_self_, _2173899be_Errno _other_);


struct _21738e93b_Dir {
};
inline jule::Bool _21738e93b_Dir_eq(_21738e93b_Dir *_self_, _21738e93b_Dir _other_);


struct _217390475_Dirent {
};
inline jule::Bool _217390475_Dirent_eq(_217390475_Dirent *_self_, _217390475_Dirent _other_);


struct _217391014_SysStat {
};
inline jule::Bool _217391014_SysStat_eq(_217391014_SysStat *_self_, _217391014_SysStat _other_);


struct _217393324_Timeval {
};
inline jule::Bool _217393324_Timeval_eq(_217393324_Timeval *_self_, _217393324_Timeval _other_);


struct _217392125_secType {
};
inline jule::Bool _217392125_secType_eq(_217392125_secType *_self_, _217392125_secType _other_);


struct _217392cc4_usecType {
};
inline jule::Bool _217392cc4_usecType_eq(_217392cc4_usecType *_self_, _217392cc4_usecType _other_);


struct _217393bc6_Sockaddr {
};
inline jule::Bool _217393bc6_Sockaddr_eq(_217393bc6_Sockaddr *_self_, _217393bc6_Sockaddr _other_);


struct _217394ec4_SockaddrIn {
};
struct _217396228_SockaddrIn6 {
};
struct _217396998_Fd {
};
inline jule::Bool _217396998_Fd_eq(_217396998_Fd *_self_, _217396998_Fd _other_);


struct _21e42c7b3_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _21e42c7b3_acceptRange_eq(_21e42c7b3_acceptRange *_self_, _21e42c7b3_acceptRange _other_);


struct _21e46c46d_LittleEndian {
};
inline jule::Bool _21e46c46d_LittleEndian_eq(_21e46c46d_LittleEndian *_self_, _21e46c46d_LittleEndian _other_);


struct _21e48718b_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _21e48718b_u128_eq(_21e48718b_u128 *_self_, _21e48718b_u128 _other_);


struct _21a6410c4_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _21a6410c4_group_eq(_21a6410c4_group *_self_, _21a6410c4_group _other_);

struct _21a688a56_group {
	jule::Array<jule::Ptr<_208822372_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _21a63e017__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_21a6410c4_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
};struct _21a686ba8__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_21a688a56_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
};
struct _21a649792_mapIterator {
	jule::Ptr<_21a63e017__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_21a6410c4_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
};struct _21a690343_mapIterator {
	jule::Ptr<_21a686ba8__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_21a688a56_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
};
struct _2174e4453_metadata {
};
inline jule::Bool _2174e4453_metadata_eq(_2174e4453_metadata *_self_, _2174e4453_metadata _other_);


struct _21e64c5b5_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _220c573c7_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _220c573c7_foldPair_eq(_220c573c7_foldPair *_self_, _220c573c7_foldPair _other_);


struct _220c578c2_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _220c578c2_CaseRange_eq(_220c578c2_CaseRange *_self_, _220c578c2_CaseRange _other_);


struct _220c57d78_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _220c57d78_Range16_eq(_220c57d78_Range16 *_self_, _220c57d78_Range16 _other_);


struct _220c583a6_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _220c583a6_Range32_eq(_220c583a6_Range32 *_self_, _220c583a6_Range32 _other_);


struct _220c58829_RangeTable {
	jule::Slice<_220c57d78_Range16> _field_R16;
	jule::Slice<_220c583a6_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
};
struct _2175ba606_d {
};
inline jule::Bool _2175ba606_d_eq(_2175ba606_d *_self_, _2175ba606_d _other_);


struct _220c66a24_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
};
struct _21e8109ed_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _21e8109ed_File_eq(_21e8109ed_File *_self_, _21e8109ed_File _other_);


struct _21e88968c_cmdAttrs {
	jule::I64 _field_pid;
};
inline jule::Bool _21e88968c_cmdAttrs_eq(_21e88968c_cmdAttrs *_self_, _21e88968c_cmdAttrs _other_);


struct _21e88b804_Stat {
	jule::I64 _field_mode;
	jule::U64 _field_size;
};
inline jule::Bool _21e88b804_Stat_eq(_21e88b804_Stat *_self_, _21e88b804_Stat _other_);


struct _21e65b904_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _21e65b904_Log_eq(_21e65b904_Log *_self_, _21e65b904_Log _other_);


struct _21ec8689c_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
};
inline jule::Bool _21ec8689c_floatInfo_eq(_21ec8689c_floatInfo *_self_, _21ec8689c_floatInfo _other_);


struct _21ec874e6_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
};
struct _21ec9956e_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _21ec9956e_leftCheat_eq(_21ec9956e_leftCheat *_self_, _21ec9956e_leftCheat _other_);


struct _21ec9a086_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _21ec9a086_decimal_eq(_21ec9a086_decimal *_self_, _21ec9a086_decimal _other_);


struct _220c98acd_AnsiEscape {
};
inline jule::Bool _220c98acd_AnsiEscape_eq(_220c98acd_AnsiEscape *_self_, _220c98acd_AnsiEscape _other_);


struct _21eca071d_Logger {
};
inline jule::Bool _21eca071d_Logger_eq(_21eca071d_Logger *_self_, _21eca071d_Logger _other_);


struct _208711827_Token {
	jule::Ptr<_2087173cc_Fileset> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
};
inline jule::Bool _208711827_Token_eq(_208711827_Token *_self_, _208711827_Token _other_);


struct _2087173cc_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_Tokens;
};
struct _2087196ed_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
};
inline jule::Bool _2087196ed_kindPair_eq(_2087196ed_kindPair *_self_, _2087196ed_kindPair _other_);


struct _20872068d_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_tokens;
	jule::Ptr<_2087173cc_Fileset> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_21e65b904_Log> _field_errors;
};
struct _2087253da_AST {
	jule::Ptr<_2087173cc_Fileset> _field_File;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_20874036c_UseDecl>> _field_UseDecls;
	jule::Slice<_208726342_Node> _field_Nodes;
};
struct _208726342_Node {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _208726342_Node_eq(_208726342_Node *_self_, _208726342_Node _other_);


struct _208726760_Directive {
	jule::Ptr<_208711827_Token> _field_Tag;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_Args;
};
struct _208727343_TypeDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _208727343_TypeDecl_eq(_208727343_TypeDecl *_self_, _208727343_TypeDecl _other_);


struct _20872794d_IdentTypeDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _field_Generics;
};
struct _208727c17_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>> _field_Idents;
};
struct _2087280e1_NamespaceTypeDecl {
	jule::Ptr<_208711827_Token> _field_Namespace;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
};
inline jule::Bool _2087280e1_NamespaceTypeDecl_eq(_2087280e1_NamespaceTypeDecl *_self_, _2087280e1_NamespaceTypeDecl _other_);


struct _2087283dd_SptrTypeDecl {
	jule::Ptr<_208727343_TypeDecl> _field_Elem;
};
inline jule::Bool _2087283dd_SptrTypeDecl_eq(_2087283dd_SptrTypeDecl *_self_, _2087283dd_SptrTypeDecl _other_);


struct _208728773_SlcTypeDecl {
	jule::Ptr<_208727343_TypeDecl> _field_Elem;
};
inline jule::Bool _208728773_SlcTypeDecl_eq(_208728773_SlcTypeDecl *_self_, _208728773_SlcTypeDecl _other_);


struct _208728a70_TupleTypeDecl {
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _field_Types;
};
struct _208728d6c_PtrTypeDecl {
	jule::Ptr<_208727343_TypeDecl> _field_Elem;
};
inline jule::Bool _208728d6c_PtrTypeDecl_eq(_208728d6c_PtrTypeDecl *_self_, _208728d6c_PtrTypeDecl _other_);


struct _20872960e_ArrTypeDecl {
	jule::Ptr<_208727343_TypeDecl> _field_Elem;
	jule::Ptr<_20872b677_Expr> _field_Size;
};
inline jule::Bool _20872960e_ArrTypeDecl_eq(_20872960e_ArrTypeDecl *_self_, _20872960e_ArrTypeDecl _other_);


struct _208729d5c_MapTypeDecl {
	jule::Ptr<_208727343_TypeDecl> _field_Key;
	jule::Ptr<_208727343_TypeDecl> _field_Val;
};
inline jule::Bool _208729d5c_MapTypeDecl_eq(_208729d5c_MapTypeDecl *_self_, _208729d5c_MapTypeDecl _other_);


struct _20872a236_RetTypeDecl {
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_Idents;
};
struct _20872b677_Expr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _20872b677_Expr_eq(_20872b677_Expr *_self_, _20872b677_Expr _other_);


struct _20872b941_RangeExpr {
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20872b941_RangeExpr_eq(_20872b941_RangeExpr *_self_, _20872b941_RangeExpr _other_);


struct _20872c04b_UseExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20872c04b_UseExpr_eq(_20872c04b_UseExpr *_self_, _20872c04b_UseExpr _other_);


struct _20872c26b_TupleExpr {
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_Expr;
};
struct _20872c612_LitExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _20872c612_LitExpr_eq(_20872c612_LitExpr *_self_, _20872c612_LitExpr _other_);


struct _20872c9db_UnsafeExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20872c9db_UnsafeExpr_eq(_20872c9db_UnsafeExpr *_self_, _20872c9db_UnsafeExpr _other_);


struct _20872ce92_IdentExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _20872ce92_IdentExpr_eq(_20872ce92_IdentExpr *_self_, _20872ce92_IdentExpr _other_);


struct _20872d734_UnaryExpr {
	jule::Ptr<_208711827_Token> _field_Op;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20872d734_UnaryExpr_eq(_20872d734_UnaryExpr *_self_, _20872d734_UnaryExpr _other_);


struct _20872db0d_VariadicExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20872db0d_VariadicExpr_eq(_20872db0d_VariadicExpr *_self_, _20872db0d_VariadicExpr _other_);


struct _20872ded7_CastExpr {
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20872ded7_CastExpr_eq(_20872ded7_CastExpr *_self_, _20872ded7_CastExpr _other_);


struct _20872e3b1_NamespaceExpr {
	jule::Ptr<_208711827_Token> _field_Namespace;
	jule::Ptr<_208711827_Token> _field_Ident;
};
inline jule::Bool _20872e3b1_NamespaceExpr_eq(_20872e3b1_NamespaceExpr *_self_, _20872e3b1_NamespaceExpr _other_);


struct _20872e78a_SubIdentExpr {
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Ptr<_208711827_Token> _field_Ident;
};
inline jule::Bool _20872e78a_SubIdentExpr_eq(_20872e78a_SubIdentExpr *_self_, _20872e78a_SubIdentExpr _other_);


struct _20872ec41_BinaryExpr {
	jule::Ptr<_20872b677_Expr> _field_Left;
	jule::Ptr<_20872b677_Expr> _field_Right;
	jule::Ptr<_208711827_Token> _field_Op;
};
inline jule::Bool _20872ec41_BinaryExpr_eq(_20872ec41_BinaryExpr *_self_, _20872ec41_BinaryExpr _other_);


struct _2087303a1_FnCallExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_Args;
	jule::Ptr<_208737441_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _208730d96_FieldExprPair {
	jule::Ptr<_208711827_Token> _field_Field;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _208730d96_FieldExprPair_eq(_208730d96_FieldExprPair *_self_, _208730d96_FieldExprPair _other_);


struct _2087316c1_StructLit {
	jule::Ptr<_208711827_Token> _field_End;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_Exprs;
};
struct _208731b77_BraceLit {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_Exprs;
};
struct _2087324a2_KeyValPair {
	jule::Ptr<_20872b677_Expr> _field_Key;
	jule::Ptr<_20872b677_Expr> _field_Val;
	jule::Ptr<_208711827_Token> _field_Colon;
};
inline jule::Bool _2087324a2_KeyValPair_eq(_2087324a2_KeyValPair *_self_, _2087324a2_KeyValPair _other_);


struct _208732bcd_SliceExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_Exprs;
};
struct _20873363a_IndexingExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Ptr<_20872b677_Expr> _field_Index;
};
inline jule::Bool _20873363a_IndexingExpr_eq(_20873363a_IndexingExpr *_self_, _20873363a_IndexingExpr _other_);


struct _208733c9a_SlicingExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Ptr<_20872b677_Expr> _field_Start;
	jule::Ptr<_20872b677_Expr> _field_To;
};
inline jule::Bool _208733c9a_SlicingExpr_eq(_208733c9a_SlicingExpr *_self_, _208733c9a_SlicingExpr _other_);


struct _208734097_Constraint {
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _field_Mask;
};
struct _20873454d_GenericDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_208734097_Constraint> _field_Constraint;
};
inline jule::Bool _20873454d_GenericDecl_eq(_20873454d_GenericDecl *_self_, _20873454d_GenericDecl _other_);


struct _208734927_LabelSt {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _208734927_LabelSt_eq(_208734927_LabelSt *_self_, _208734927_LabelSt _other_);


struct _208734d01_GotoSt {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_Label;
};
inline jule::Bool _208734d01_GotoSt_eq(_208734d01_GotoSt *_self_, _208734d01_GotoSt _other_);


struct _2087350ed_FallSt {
	jule::Ptr<_208711827_Token> _field_Token;
};
inline jule::Bool _2087350ed_FallSt_eq(_2087350ed_FallSt *_self_, _2087350ed_FallSt _other_);


struct _20873575d_AssignLeft {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20873575d_AssignLeft_eq(_20873575d_AssignLeft *_self_, _20873575d_AssignLeft _other_);


struct _208735ce1_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_208711827_Token> _field_Setter;
	jule::Slice<jule::Ptr<_20873575d_AssignLeft>> _field_Left;
	jule::Ptr<_20872b677_Expr> _field_Right;
};
struct _208736cd1_Stmt {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _208736cd1_Stmt_eq(_208736cd1_Stmt *_self_, _208736cd1_Stmt _other_);


struct _208737441_ScopeTree {
	jule::Ptr<_208737441_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_208736cd1_Stmt> _field_Stmts;
	jule::Ptr<_208711827_Token> _field_End;
};
struct _208737b7d_ParamDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _208737b7d_ParamDecl_eq(_208737b7d_ParamDecl *_self_, _208737b7d_ParamDecl _other_);


struct _2087390d0_FnDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_Directives;
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _field_Generics;
	jule::Ptr<_20872a236_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_208737b7d_ParamDecl>> _field_Params;
};
struct _20873a28a_VarDecl {
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_Directives;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
struct _20873a664_RetSt {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _20873a664_RetSt_eq(_20873a664_RetSt *_self_, _20873a664_RetSt _other_);


struct _20873add4_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
};
inline jule::Bool _20873add4_Iter_eq(_20873add4_Iter *_self_, _20873add4_Iter _other_);


struct _20873b70e_WhileKind {
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_208711827_Token> _field_NextToken;
};
inline jule::Bool _20873b70e_WhileKind_eq(_20873b70e_WhileKind *_self_, _20873b70e_WhileKind _other_);


struct _20873c116_RangeKind {
	jule::Ptr<_208711827_Token> _field_InToken;
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Ptr<_20873a28a_VarDecl> _field_KeyA;
	jule::Ptr<_20873a28a_VarDecl> _field_KeyB;
};
inline jule::Bool _20873c116_RangeKind_eq(_20873c116_RangeKind *_self_, _20873c116_RangeKind _other_);


struct _20873c4e0_BreakSt {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_Label;
};
inline jule::Bool _20873c4e0_BreakSt_eq(_20873c4e0_BreakSt *_self_, _20873c4e0_BreakSt _other_);


struct _20873c8b9_ContSt {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_Label;
};
inline jule::Bool _20873c8b9_ContSt_eq(_20873c8b9_ContSt *_self_, _20873c8b9_ContSt _other_);


struct _20873cd70_If {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
};
inline jule::Bool _20873cd70_If_eq(_20873cd70_If *_self_, _20873cd70_If _other_);


struct _20873d249_Else {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
};
inline jule::Bool _20873d249_Else_eq(_20873d249_Else *_self_, _20873d249_Else _other_);


struct _20873d700_Conditional {
	jule::Ptr<_20873cd70_If> _field_Head;
	jule::Slice<jule::Ptr<_20873cd70_If>> _field_Tail;
	jule::Ptr<_20873d249_Else> _field_Default;
};
struct _20873e019_TypeAliasDecl {
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Strict;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
};
inline jule::Bool _20873e019_TypeAliasDecl_eq(_20873e019_TypeAliasDecl *_self_, _20873e019_TypeAliasDecl _other_);


struct _20873e4c0_Case {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_Exprs;
};
struct _20873ecd9_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_20873e4c0_Case>> _field_Cases;
	jule::Ptr<_20873d249_Else> _field_Default;
};
struct _20874036c_UseDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_Path;
	jule::Ptr<_208711827_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _20874036c_UseDecl_eq(_20874036c_UseDecl *_self_, _20874036c_UseDecl _other_);


struct _208740823_EnumItemDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20872b677_Expr> _field_Expr;
};
inline jule::Bool _208740823_EnumItemDecl_eq(_208740823_EnumItemDecl *_self_, _208740823_EnumItemDecl _other_);


struct _2087413d4_EnumDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_208740823_EnumItemDecl>> _field_Items;
	jule::Ptr<_208711827_Token> _field_End;
};
struct _208741c0e_TypeEnumItemDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
};
inline jule::Bool _208741c0e_TypeEnumItemDecl_eq(_208741c0e_TypeEnumItemDecl *_self_, _208741c0e_TypeEnumItemDecl _other_);


struct _20874236e_TypeEnumDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_208711827_Token> _field_End;
};
struct _208742638_FieldDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_208727343_TypeDecl> _field_Kind;
	jule::Ptr<_20872b677_Expr> _field_Default;
};
inline jule::Bool _208742638_FieldDecl_eq(_208742638_FieldDecl *_self_, _208742638_FieldDecl _other_);


struct _20874302e_StructDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_208742638_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _field_Generics;
};
struct _20874376b_TraitDecl {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208711827_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_2087390d0_FnDecl>> _field_Methods;
};
struct _208743dcb_Impl {
	jule::Ptr<_208711827_Token> _field_End;
	jule::Ptr<_208727343_TypeDecl> _field_Base;
	jule::Ptr<_208727343_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_2087390d0_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _field_Statics;
};
struct _208799195_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
inline jule::Bool _208799195_Const_eq(_208799195_Const *_self_, _208799195_Const _other_);


struct _208744e10_Field {
	jule::Ptr<_208746230_Struct> _field_Owner;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
	jule::Ptr<_20872b677_Expr> _field_Default;
};
inline jule::Bool _208744e10_Field_eq(_208744e10_Field *_self_, _208744e10_Field _other_);


struct _208746230_Struct {
	jule::Ptr<_20892a755_sema> _field_sema;
	jule::Slice<jule::Ptr<_208746230_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_208746230_Struct>> _field_Uses;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_208744e10_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_2088299c8_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_2087490bd_StructIns>> _field_Instances;
};
struct _208748496_FieldIns {
	jule::Ptr<_2087490bd_StructIns> _field_Owner;
	jule::Ptr<_208744e10_Field> _field_Decl;
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Ptr<_20899a9a1_Data> _field_Default;
};
inline jule::Bool _208748496_FieldIns_eq(_208748496_FieldIns *_self_, _208748496_FieldIns _other_);


struct _2087490bd_StructIns {
	jule::Ptr<_2089ce661_Type> _field_Source;
	jule::Bool _field_Checked;
	jule::Ptr<_208746230_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_208748496_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_2088eaeb7_ReferenceStack> _field_Refers;
};
struct _208811a9d_OperandExpr {
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _208811a9d_OperandExpr_eq(_208811a9d_OperandExpr *_self_, _208811a9d_OperandExpr _other_);


struct _208812098_BinaryExpr {
	jule::Ptr<_208811a9d_OperandExpr> _field_Left;
	jule::Ptr<_208811a9d_OperandExpr> _field_Right;
	jule::Ptr<_208711827_Token> _field_Op;
};
inline jule::Bool _208812098_BinaryExpr_eq(_208812098_BinaryExpr *_self_, _208812098_BinaryExpr _other_);


struct _208812472_UnaryExpr {
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Ptr<_208711827_Token> _field_Op;
};
inline jule::Bool _208812472_UnaryExpr_eq(_208812472_UnaryExpr *_self_, _208812472_UnaryExpr _other_);


struct _2088129a0_StructArgExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208748496_FieldIns> _field_Field;
	jule::Ptr<_20899a9a1_Data> _field_Expr;
};
inline jule::Bool _2088129a0_StructArgExpr_eq(_2088129a0_StructArgExpr *_self_, _2088129a0_StructArgExpr _other_);


struct _208812d46_StructLitExpr {
	jule::Ptr<_2087490bd_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_2088129a0_StructArgExpr>> _field_Args;
};
struct _208813143_AllocStructLitExpr {
	jule::Ptr<_208812d46_StructLitExpr> _field_Lit;
};
inline jule::Bool _208813143_AllocStructLitExpr_eq(_208813143_AllocStructLitExpr *_self_, _208813143_AllocStructLitExpr _other_);


struct _2088136c6_CastingExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Ptr<_2089ce661_Type> _field_ExprType;
};
inline jule::Bool _2088136c6_CastingExpr_eq(_2088136c6_CastingExpr *_self_, _2088136c6_CastingExpr _other_);


struct _208814078_FnCallExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_208822372_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_2088ca969_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _208814452_SliceExpr {
	jule::Ptr<_2089ce661_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _208814908_IndexingExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Ptr<_20899a9a1_Data> _field_Index;
};
inline jule::Bool _208814908_IndexingExpr_eq(_208814908_IndexingExpr *_self_, _208814908_IndexingExpr _other_);


struct _208814dae_AnonFnExpr {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Captured;
	jule::Ptr<_208822372_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _208815288_KeyValPairExpr {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _208815288_KeyValPairExpr_eq(_208815288_KeyValPairExpr *_self_, _208815288_KeyValPairExpr _other_);


struct _208815662_MapExpr {
	jule::Ptr<_2089de110_Map> _field_Kind;
	jule::Slice<jule::Ptr<_208815288_KeyValPairExpr>> _field_Entries;
};
struct _208815be5_SlicingExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _208815be5_SlicingExpr_eq(_208815be5_SlicingExpr *_self_, _208815be5_SlicingExpr _other_);


struct _208816278_TraitSubIdentExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_20881e2b4_Fn> _field_Method;
	jule::Ptr<_2088299c8_Trait> _field_Trt;
};
inline jule::Bool _208816278_TraitSubIdentExpr_eq(_208816278_TraitSubIdentExpr *_self_, _208816278_TraitSubIdentExpr _other_);


struct _208816b19_StructSubIdentExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Ptr<_208822372_FnIns> _field_Method;
	jule::Ptr<_208748496_FieldIns> _field_Field;
	jule::Ptr<_2087490bd_StructIns> _field_Owner;
};
inline jule::Bool _208816b19_StructSubIdentExpr_eq(_208816b19_StructSubIdentExpr *_self_, _208816b19_StructSubIdentExpr _other_);


struct _208816eb0_StructStaticIdentExpr {
	jule::Ptr<_2087490bd_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_208822372_FnIns> _field_Method;
};
inline jule::Bool _208816eb0_StructStaticIdentExpr_eq(_208816eb0_StructStaticIdentExpr *_self_, _208816eb0_StructStaticIdentExpr _other_);


struct _208817389_ArrayExpr {
	jule::Ptr<_2089dec8c_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _208817686_TupleExpr {
	jule::Slice<jule::Ptr<_20899a9a1_Data>> _field_Datas;
};
struct _208817983_BuiltinPrintCallExpr {
	jule::Ptr<_20899a9a1_Data> _field_Expr;
};
inline jule::Bool _208817983_BuiltinPrintCallExpr_eq(_208817983_BuiltinPrintCallExpr *_self_, _208817983_BuiltinPrintCallExpr _other_);


struct _208817c80_BuiltinPrintlnCallExpr {
	jule::Ptr<_20899a9a1_Data> _field_Expr;
};
inline jule::Bool _208817c80_BuiltinPrintlnCallExpr_eq(_208817c80_BuiltinPrintlnCallExpr *_self_, _208817c80_BuiltinPrintlnCallExpr _other_);


struct _208818159_BuiltinNewCallExpr {
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _208818159_BuiltinNewCallExpr_eq(_208818159_BuiltinNewCallExpr *_self_, _208818159_BuiltinNewCallExpr _other_);


struct _208818533_BuiltinPanicCallExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _208818533_BuiltinPanicCallExpr_eq(_208818533_BuiltinPanicCallExpr *_self_, _208818533_BuiltinPanicCallExpr _other_);


struct _2088189d9_BuiltinMakeCallExpr {
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _2088189d9_BuiltinMakeCallExpr_eq(_2088189d9_BuiltinMakeCallExpr *_self_, _2088189d9_BuiltinMakeCallExpr _other_);


struct _208818db3_BuiltinAppendCallExpr {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _208818db3_BuiltinAppendCallExpr_eq(_208818db3_BuiltinAppendCallExpr *_self_, _208818db3_BuiltinAppendCallExpr _other_);


struct _2088191b0_BuiltinLenCallExpr {
	jule::Ptr<_20899a9a1_Data> _field_Expr;
};
inline jule::Bool _2088191b0_BuiltinLenCallExpr_eq(_2088191b0_BuiltinLenCallExpr *_self_, _2088191b0_BuiltinLenCallExpr _other_);


struct _2088194ac_BuiltinCapCallExpr {
	jule::Ptr<_20899a9a1_Data> _field_Expr;
};
inline jule::Bool _2088194ac_BuiltinCapCallExpr_eq(_2088194ac_BuiltinCapCallExpr *_self_, _2088194ac_BuiltinCapCallExpr _other_);


struct _208819886_BuiltinDeleteCallExpr {
	jule::Ptr<_20899a9a1_Data> _field_Dest;
	jule::Ptr<_20899a9a1_Data> _field_Key;
};
inline jule::Bool _208819886_BuiltinDeleteCallExpr_eq(_208819886_BuiltinDeleteCallExpr *_self_, _208819886_BuiltinDeleteCallExpr _other_);


struct _208819c60_BuiltinCopyCallExpr {
	jule::Ptr<_20899a9a1_Data> _field_Dest;
	jule::Ptr<_20899a9a1_Data> _field_Src;
};
inline jule::Bool _208819c60_BuiltinCopyCallExpr_eq(_208819c60_BuiltinCopyCallExpr *_self_, _208819c60_BuiltinCopyCallExpr _other_);


struct _20881a139_BuiltinErrorCallExpr {
	jule::Ptr<_208822372_FnIns> _field_Func;
	jule::Ptr<_20899a9a1_Data> _field_Err;
};
inline jule::Bool _20881a139_BuiltinErrorCallExpr_eq(_20881a139_BuiltinErrorCallExpr *_self_, _20881a139_BuiltinErrorCallExpr _other_);


struct _20881a436_SizeofExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _20881a436_SizeofExpr_eq(_20881a436_SizeofExpr *_self_, _20881a436_SizeofExpr _other_);


struct _20881aada_AlignofExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _20881aada_AlignofExpr_eq(_20881aada_AlignofExpr *_self_, _20881aada_AlignofExpr _other_);


struct _20881acc7_RuneExpr {
	jule::I32 _field_Code;
};
inline jule::Bool _20881acc7_RuneExpr_eq(_20881acc7_RuneExpr *_self_, _20881acc7_RuneExpr _other_);


struct _20881b14b_BackendEmitExpr {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _20881b448_FreeExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _20881b448_FreeExpr_eq(_20881b448_FreeExpr *_self_, _20881b448_FreeExpr _other_);


struct _20881c229_RetType {
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_Idents;
};
struct _20881c7e0_Param {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _20881c7e0_Param_eq(_20881c7e0_Param *_self_, _20881c7e0_Param _other_);


struct _20881e2b4_Fn {
	jule::Ptr<_20892a755_sema> _field_sema;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_Directives;
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _field_Generics;
	jule::Ptr<_20881c229_RetType> _field_Result;
	jule::Slice<jule::Ptr<_20881c7e0_Param>> _field_Params;
	jule::Ptr<_208746230_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_208822372_FnIns>> _field_Instances;
};
struct _20882121c_ParamIns {
	jule::Ptr<_20881c7e0_Param> _field_Decl;
	jule::Ptr<_2089ce661_Type> _field_Type;
};
inline jule::Bool _20882121c_ParamIns_eq(_20882121c_ParamIns *_self_, _20882121c_ParamIns _other_);


struct _208822372_FnIns {
	jule::Ptr<_2087490bd_StructIns> _field_Owner;
	jule::Ptr<_20881e2b4_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20882121c_ParamIns>> _field_Params;
	jule::Ptr<_2089ce661_Type> _field_Result;
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::Ptr<_2088eaeb7_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _2088255b7_SymTab {
	jule::Ptr<_2087173cc_Fileset> _field_File;
	jule::Slice<_2088ec518_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_208746230_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_2088299c8_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_20882c17e_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_20882d889_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_2088c7977_Impl>> _field_Impls;
};
struct _2088299c8_Trait {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_2089d7a65_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_208746230_Struct>> _field_Implemented;
};
struct _20882b623_EnumItem {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20899bb28_Value> _field_Value;
};
inline jule::Bool _20882b623_EnumItem_eq(_20882b623_EnumItem *_self_, _20882b623_EnumItem _other_);


struct _20882c17e_Enum {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_20882b623_EnumItem>> _field_Items;
};
struct _20882d2b2_TypeEnumItem {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
};
inline jule::Bool _20882d2b2_TypeEnumItem_eq(_20882d2b2_TypeEnumItem *_self_, _20882d2b2_TypeEnumItem _other_);


struct _20882d889_TypeEnum {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> _field_Items;
};
struct _20889e696_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _20889e696_comptimeRange_eq(_20889e696_comptimeRange *_self_, _20889e696_comptimeRange _other_);


struct _2088a0202_comptimeStructField {
	jule::Ptr<_208748496_FieldIns> _field_field;
};
inline jule::Bool _2088a0202_comptimeStructField_eq(_2088a0202_comptimeStructField *_self_, _2088a0202_comptimeStructField _other_);


struct _2088a1995_comptimeStructFields {
	jule::Slice<jule::Ptr<_208748496_FieldIns>> _field_fields;
};
struct _2088a3425_comptimeStatic {
	jule::Ptr<_20894d7de_Var> _field_field;
};
inline jule::Bool _2088a3425_comptimeStatic_eq(_2088a3425_comptimeStatic *_self_, _2088a3425_comptimeStatic _other_);


struct _2088a4bc9_comptimeStatics {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_fields;
};
struct _2088a6648_comptimeEnumField {
	jule::Ptr<_20882b623_EnumItem> _field_field;
};
inline jule::Bool _2088a6648_comptimeEnumField_eq(_2088a6648_comptimeEnumField *_self_, _2088a6648_comptimeEnumField _other_);


struct _2088a7957_comptimeEnumFields {
	jule::Slice<jule::Ptr<_20882b623_EnumItem>> _field_fields;
};
struct _2088a945e_comptimeParam {
	jule::Ptr<_20882121c_ParamIns> _field_param;
};
inline jule::Bool _2088a945e_comptimeParam_eq(_2088a945e_comptimeParam *_self_, _2088a945e_comptimeParam _other_);


struct _2088ab2b8_comptimeParams {
	jule::Slice<jule::Ptr<_20882121c_ParamIns>> _field_params;
};
struct _2088acb27_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_2088ae596_comptimeTypeInfo>> _field_types;
};
struct _2088ae596_comptimeTypeInfo {
	jule::Ptr<_2089ce661_Type> _field_base;
};
inline jule::Bool _2088ae596_comptimeTypeInfo_eq(_2088ae596_comptimeTypeInfo *_self_, _2088ae596_comptimeTypeInfo _other_);


struct _2088b569b_comptimeValue {
	jule::Ptr<_20899a9a1_Data> _field_data;
};
inline jule::Bool _2088b569b_comptimeValue_eq(_2088b569b_comptimeValue *_self_, _2088b569b_comptimeValue _other_);


struct _2088b8407_comptimeFiles {
	jule::Slice<jule::Ptr<_2088255b7_SymTab>> _field_files;
};
struct _2088b9d76_comptimeFile {
	jule::Ptr<_2088255b7_SymTab> _field_file;
};
inline jule::Bool _2088b9d76_comptimeFile_eq(_2088b9d76_comptimeFile *_self_, _2088b9d76_comptimeFile _other_);


struct _2088bb99e_comptimeDecls {
	jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>> _field_decls;
};
struct _2088bdc8c_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _2088bdc8c_comptimeDecl_eq(_2088bdc8c_comptimeDecl *_self_, _2088bdc8c_comptimeDecl _other_);


struct _2088c5678_constraintChecker {
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _field_genericsA;
	jule::Ptr<_208822372_FnIns> _field_fi;
	jule::Ptr<_2087490bd_StructIns> _field_si;
	jule::Ptr<_208711827_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _2088c7977_Impl {
	jule::Ptr<_208727343_TypeDecl> _field_Base;
	jule::Ptr<_208727343_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Statics;
};
struct _2088ca1d8_exprPart {
	jule::Ptr<_20899a9a1_Data> _field_data;
	jule::Ptr<_20872b677_Expr> _field_expr;
};
inline jule::Bool _2088ca1d8_exprPart_eq(_2088ca1d8_exprPart *_self_, _2088ca1d8_exprPart _other_);


struct _2088ca969_Scope {
	jule::Ptr<_2088ca969_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
};
struct _2088cad43_If {
	jule::Any _field_Expr;
	jule::Ptr<_2088ca969_Scope> _field_Scope;
};
inline jule::Bool _2088cad43_If_eq(_2088cad43_If *_self_, _2088cad43_If _other_);


struct _2088cb1b7_Else {
	jule::Ptr<_2088ca969_Scope> _field_Scope;
};
inline jule::Bool _2088cb1b7_Else_eq(_2088cb1b7_Else *_self_, _2088cb1b7_Else _other_);


struct _2088cb55d_Conditional {
	jule::Slice<jule::Ptr<_2088cad43_If>> _field_Elifs;
	jule::Ptr<_2088cb1b7_Else> _field_Default;
};
struct _2088cb85a_InfIter {
	jule::Ptr<_2088ca969_Scope> _field_Scope;
};
inline jule::Bool _2088cb85a_InfIter_eq(_2088cb85a_InfIter *_self_, _2088cb85a_InfIter _other_);


struct _2088cbd11_WhileIter {
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _2088cbd11_WhileIter_eq(_2088cbd11_WhileIter *_self_, _2088cbd11_WhileIter _other_);


struct _2088cc7e5_RangeIter {
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Ptr<_20894d7de_Var> _field_KeyA;
	jule::Ptr<_20894d7de_Var> _field_KeyB;
};
inline jule::Bool _2088cc7e5_RangeIter_eq(_2088cc7e5_RangeIter *_self_, _2088cc7e5_RangeIter _other_);


struct _2088ccae2_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _2088ccae2_ContSt_eq(_2088ccae2_ContSt *_self_, _2088ccae2_ContSt _other_);


struct _2088ccebb_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _2088ccebb_BreakSt_eq(_2088ccebb_BreakSt *_self_, _2088ccebb_BreakSt _other_);


struct _2088cd472_Label {
	jule::Str _field_Ident;
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::I64 _field_Index;
};
inline jule::Bool _2088cd472_Label_eq(_2088cd472_Label *_self_, _2088cd472_Label _other_);


struct _2088cdad2_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Ptr<_2088cd472_Label> _field_Label;
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::I64 _field_Index;
};
inline jule::Bool _2088cdad2_GotoSt_eq(_2088cdad2_GotoSt *_self_, _2088cdad2_GotoSt _other_);


struct _2088cdeab_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _2088cdeab_Postfix_eq(_2088cdeab_Postfix *_self_, _2088cdeab_Postfix _other_);


struct _2088ce462_Assign {
	jule::Ptr<_208811a9d_OperandExpr> _field_Left;
	jule::Ptr<_208811a9d_OperandExpr> _field_Right;
	jule::Ptr<_208711827_Token> _field_Op;
};
inline jule::Bool _2088ce462_Assign_eq(_2088ce462_Assign *_self_, _2088ce462_Assign _other_);


struct _2088ce9e5_MultiAssign {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_20899a9a1_Data>> _field_Left;
	jule::Any _field_Right;
	jule::Ptr<_208711827_Token> _field_Op;
};
struct _2088d0463_Match {
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_2088d0c5a_Case>> _field_Cases;
	jule::Ptr<_2088d0c5a_Case> _field_Default;
};
struct _2088d0c5a_Case {
	jule::Ptr<_2088d0463_Match> _field_Owner;
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_20899a9a1_Data>> _field_Exprs;
	jule::Ptr<_2088d0c5a_Case> _field_Next;
};
struct _2088d1453_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _2088d1453_FallSt_eq(_2088d1453_FallSt *_self_, _2088d1453_FallSt _other_);


struct _2088d17e9_RetSt {
	jule::Ptr<_208822372_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _2088d17e9_RetSt_eq(_2088d17e9_RetSt *_self_, _2088d17e9_RetSt _other_);


struct _2088d1ca0_scopeLabel {
	jule::Ptr<_208711827_Token> _field_token;
	jule::Ptr<_2088cd472_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _2088d1ca0_scopeLabel_eq(_2088d1ca0_scopeLabel *_self_, _2088d1ca0_scopeLabel _other_);


struct _2088d2179_result {
	jule::Ptr<_208822372_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _2088d2179_result_eq(_2088d2179_result *_self_, _2088d2179_result _other_);


struct _2088d3169_scopeChecker {
	jule::Ptr<_208711827_Token> _field_calledFrom;
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Ptr<_208822372_FnIns> _field_owner;
	jule::Ptr<_2088d3169_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_2088255b7_SymTab> _field_table;
	jule::Ptr<_2088ca969_Scope> _field_scope;
	jule::Ptr<_208737441_ScopeTree> _field_tree;
	jule::Ptr<_2088d2179_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_20894d7de_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_2088d1ca0_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
};
inline jule::Bool _2088d3169_scopeChecker_eq(_2088d3169_scopeChecker *_self_, _2088d3169_scopeChecker _other_);


struct _2088e86ac_directiveChecker {
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_208726760_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _2088e86ac_directiveChecker_eq(_2088e86ac_directiveChecker *_self_, _2088e86ac_directiveChecker _other_);


struct _2088eaeb7_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _2088ec518_Pass {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _2088ec518_Pass_eq(_2088ec518_Pass *_self_, _2088ec518_Pass _other_);


struct _208901ebd_symBuilder {
	jule::Ptr<_208901ebd_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_21e65b904_Log> _field_errors;
	jule::Ptr<_2087253da_AST> _field_ast;
	jule::Ptr<_2088255b7_SymTab> _field_table;
};
struct _20890d040_ImportInfo {
	jule::Ptr<_20874036c_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_2089107b2_Package> _field_Package;
	jule::I64 _field_ModId;
};
inline jule::Bool _20890d040_ImportInfo_eq(_20890d040_ImportInfo *_self_, _20890d040_ImportInfo _other_);


struct _2089107b2_Package {
	jule::Slice<jule::Ptr<_2088255b7_SymTab>> _field_Files;
};
struct _208929765_commonSemaMeta {
	jule::Slice<jule::Ptr<_2088ae596_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_20890d040_ImportInfo> _field_runtime;
};
struct _20892a755_sema {
	jule::Slice<_21e65b904_Log> _field_errors;
	jule::Slice<jule::Ptr<_2088255b7_SymTab>> _field_files;
	jule::Ptr<_2088255b7_SymTab> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_208929765_commonSemaMeta> _field_meta;
	jule::I64 _field_step;
};
struct _208949d07_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _20894d7de_Var {
	jule::Ptr<_2088ca969_Scope> _field_Scope;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
	jule::Ptr<_20899bb28_Value> _field_Value;
	jule::Ptr<_2088eaeb7_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Depends;
};
struct _206596bba_FuncPattern {
};
inline jule::Bool _206596bba_FuncPattern_eq(_206596bba_FuncPattern *_self_, _206596bba_FuncPattern _other_);


struct _208986959_typeCompatibilityChecker {
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Ptr<_2089ce661_Type> _field_dest;
	jule::Ptr<_2089ce661_Type> _field_src;
	jule::Ptr<_208711827_Token> _field_errorToken;
};
inline jule::Bool _208986959_typeCompatibilityChecker_eq(_208986959_typeCompatibilityChecker *_self_, _208986959_typeCompatibilityChecker _other_);


struct _2089887d5_assignTypeChecker {
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Ptr<_2089ce661_Type> _field_dest;
	jule::Ptr<_20899a9a1_Data> _field_d;
	jule::Ptr<_208711827_Token> _field_errorToken;
	jule::Ptr<_2088eaeb7_ReferenceStack> _field_refers;
};
inline jule::Bool _2089887d5_assignTypeChecker_eq(_2089887d5_assignTypeChecker *_self_, _2089887d5_assignTypeChecker _other_);


struct _20898a1aa_dynamicTypeAnnotation {
	jule::Ptr<_20899c970_eval> _field_e;
	jule::Ptr<_208822372_FnIns> _field_f;
	jule::Ptr<_20882121c_ParamIns> _field_p;
	jule::Ptr<_20899a9a1_Data> _field_a;
	jule::Ptr<_208711827_Token> _field_errorToken;
	jule::Ptr<_2089ce661_Type>* _field_k;
	jule::Ptr<_208727343_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_ignored;
};
struct _208990017_fnCallArgChecker {
	jule::Ptr<_20899c970_eval> _field_e;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_args;
	jule::Ptr<_208711827_Token> _field_errorToken;
	jule::Ptr<_208822372_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_ignored;
};
struct _208992e4e_structLitChecker {
	jule::Ptr<_20899c970_eval> _field_e;
	jule::Ptr<_208711827_Token> _field_errorToken;
	jule::Ptr<_2087490bd_StructIns> _field_s;
	jule::Slice<jule::Ptr<_2088129a0_StructArgExpr>> _field_args;
};
struct _208994c31_rangeChecker {
	jule::Ptr<_2088d3169_scopeChecker> _field_sc;
	jule::Ptr<_20873c116_RangeKind> _field_rang;
	jule::Ptr<_2088cc7e5_RangeIter> _field_Kind;
	jule::Ptr<_20899a9a1_Data> _field_d;
};
inline jule::Bool _208994c31_rangeChecker_eq(_208994c31_rangeChecker *_self_, _208994c31_rangeChecker _other_);


struct _20899764b_retTypeChecker {
	jule::Ptr<_2088d3169_scopeChecker> _field_sc;
	jule::Ptr<_208822372_FnIns> _field_f;
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_types;
	jule::Slice<jule::Ptr<_20899a9a1_Data>> _field_exprs;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _field_exprDecls;
	jule::Ptr<_208711827_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _20899a9a1_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_208799195_Const> _field_Constant;
};
inline jule::Bool _20899a9a1_Data_eq(_20899a9a1_Data *_self_, _20899a9a1_Data _other_);


struct _20899bb28_Value {
	jule::Ptr<_20872b677_Expr> _field_Expr;
	jule::Ptr<_20899a9a1_Data> _field_Data;
};
inline jule::Bool _20899bb28_Value_eq(_20899bb28_Value *_self_, _20899bb28_Value _other_);


struct _20899c002_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _20899c002_target_eq(_20899c002_target *_self_, _20899c002_target _other_);


struct _20899c970_eval {
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_2089ce661_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_20894d7de_Var> _field_owner;
	jule::Ptr<_208748496_FieldIns> _field_field;
	_20899c002_target _field_target;
};
inline jule::Bool _20899c970_eval_eq(_20899c970_eval *_self_, _20899c970_eval _other_);


struct _2089bca6c_unaryEval {
	jule::Ptr<_20899c970_eval> _field_e;
	jule::Ptr<_20899a9a1_Data> _field_d;
	jule::Ptr<_20872d734_UnaryExpr> _field_u;
};
inline jule::Bool _2089bca6c_unaryEval_eq(_2089bca6c_unaryEval *_self_, _2089bca6c_unaryEval _other_);


struct _2089bea08_binaryEval {
	jule::Ptr<_20899c970_eval> _field_e;
	jule::Ptr<_20899a9a1_Data> _field_l;
	jule::Ptr<_20899a9a1_Data> _field_r;
	jule::Ptr<_208711827_Token> _field_op;
};
inline jule::Bool _2089bea08_binaryEval_eq(_2089bea08_binaryEval *_self_, _2089bea08_binaryEval _other_);


struct _2089ccc7a_InsGeneric {
	jule::Ptr<_2089ce661_Type> _field_Type;
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_Constraint;
};
struct _2089cd94b_TypeAlias {
	jule::Ptr<_208737441_ScopeTree> _field_Scope;
	jule::Bool _field_Strict;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2089d7a65_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _field_Generics;
};
struct _2089ce661_Type {
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _2089ce661_Type_eq(_2089ce661_Type *_self_, _2089ce661_Type _other_);


struct _2089d7a65_TypeSym {
	jule::Ptr<_208727343_TypeDecl> _field_Decl;
	jule::Ptr<_2089ce661_Type> _field_Type;
};
inline jule::Bool _2089d7a65_TypeSym_eq(_2089d7a65_TypeSym *_self_, _2089d7a65_TypeSym _other_);


struct _2089d846c_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _2089d846c_Prim_eq(_2089d846c_Prim *_self_, _2089d846c_Prim _other_);


struct _2089dbe98_Sptr {
	jule::Ptr<_2089ce661_Type> _field_Elem;
};
inline jule::Bool _2089dbe98_Sptr_eq(_2089dbe98_Sptr *_self_, _2089dbe98_Sptr _other_);


struct _2089dc96b_Slc {
	jule::Ptr<_2089ce661_Type> _field_Elem;
};
inline jule::Bool _2089dc96b_Slc_eq(_2089dc96b_Slc *_self_, _2089dc96b_Slc _other_);


struct _2089dd560_Tuple {
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_Types;
};
struct _2089de110_Map {
	jule::Ptr<_2089ce661_Type> _field_Key;
	jule::Ptr<_2089ce661_Type> _field_Val;
};
inline jule::Bool _2089de110_Map_eq(_2089de110_Map *_self_, _2089de110_Map _other_);


struct _2089dec8c_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_2089ce661_Type> _field_Elem;
};
inline jule::Bool _2089dec8c_Arr_eq(_2089dec8c_Arr *_self_, _2089dec8c_Arr _other_);


struct _2089e0760_Ptr {
	jule::Ptr<_2089ce661_Type> _field_Elem;
};
inline jule::Bool _2089e0760_Ptr_eq(_2089e0760_Ptr *_self_, _2089e0760_Ptr _other_);


struct _2089e1761_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _2089e1761_referencer_eq(_2089e1761_referencer *_self_, _2089e1761_referencer _other_);


struct _2089e2751_typeChecker {
	jule::Ptr<_20892a755_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_2089e1761_referencer> _field_referencer;
	jule::Ptr<_2088eaeb7_ReferenceStack> _field_refers;
	jule::Ptr<_208711827_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_2089ce661_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_2089cd94b_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _2089ea814_identTypeLookup {
};
inline jule::Bool _2089ea814_identTypeLookup_eq(_2089ea814_identTypeLookup *_self_, _2089ea814_identTypeLookup _other_);


struct _20931304e_FileInfo {
	jule::Ptr<_2087253da_AST> _field_Ast;
	jule::Slice<_21e65b904_Log> _field_Errors;
};
struct _209362ad7_stmt {
	jule::Slice<jule::Ptr<_208711827_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _209363478_scopeParser {
	jule::Ptr<_209381683_parser> _field_p;
	jule::Ptr<_208737441_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_209362ad7_stmt>> _field_stmts;
	jule::I64 _field_pos;
};
struct _209370d9d_exprBuilder {
	jule::Ptr<_209381683_parser> _field_p;
};
inline jule::Bool _209370d9d_exprBuilder_eq(_209370d9d_exprBuilder *_self_, _209370d9d_exprBuilder _other_);


struct _20937d493_assignInfo {
	jule::Slice<jule::Ptr<_208711827_Token>> _field_l;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_r;
	jule::Ptr<_208711827_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _209381683_parser {
	jule::Ptr<_2087253da_AST> _field_ast;
	jule::Slice<jule::Ptr<_208726760_Directive>> _field_directives;
	jule::Slice<_21e65b904_Log> _field_errors;
	jule::Ptr<_209370d9d_exprBuilder> _field_ep;
};
struct _20939283c_typeBuilder {
	jule::Ptr<_209381683_parser> _field_p;
	jule::Slice<jule::Ptr<_208711827_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
};
struct _208b0e098_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _208b0e098_CompileInfo_eq(_208b0e098_CompileInfo *_self_, _208b0e098_CompileInfo _other_);


struct _208b107d6_directiveEval {
	jule::Slice<_21e65b904_Log> _field_logs;
	jule::Ptr<_208726760_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _209396940_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _208a620c8_anyData {
	jule::Ptr<jule::U64> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _208a620c8_anyData_eq(_208a620c8_anyData *_self_, _208a620c8_anyData _other_);


struct _20939ca56_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _2093a5124_MetaStrBuilder {
	jule::Ptr<_208822372_FnIns> _field_Write;
	jule::Ptr<_208822372_FnIns> _field_WriteByte;
	jule::Ptr<_208822372_FnIns> _field_WriteRune;
	jule::Ptr<_208822372_FnIns> _field_WriteStr;
};
inline jule::Bool _2093a5124_MetaStrBuilder_eq(_2093a5124_MetaStrBuilder *_self_, _2093a5124_MetaStrBuilder _other_);


struct _2093a5ce5_MetaRuntime {
	jule::Ptr<_20881e2b4_Fn> _field_ToStr;
	jule::Ptr<_20881e2b4_Fn> _field_ArrayCmp;
	jule::Ptr<_208822372_FnIns> _field_RCAdd;
	jule::Ptr<_208822372_FnIns> _field_RCLoad;
	jule::Ptr<_208822372_FnIns> _field_RCDrop;
	jule::Ptr<_208822372_FnIns> _field_RCAddAtomic;
	jule::Ptr<_208822372_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_208822372_FnIns> _field_RCDropAtomic;
	jule::Ptr<_208822372_FnIns> _field_RuneCount;
	jule::Ptr<_208746230_Struct> _field_Map;
	jule::Ptr<_208746230_Struct> _field_MapIterator;
};
inline jule::Bool _2093a5ce5_MetaRuntime_eq(_2093a5ce5_MetaRuntime *_self_, _2093a5ce5_MetaRuntime _other_);


struct _2093a67b8_MetaMathCmplx {
	jule::Ptr<_2087490bd_StructIns> _field_Cmplx;
	jule::Ptr<_208822372_FnIns> _field_CmplxAdd;
	jule::Ptr<_208822372_FnIns> _field_CmplxSub;
	jule::Ptr<_208822372_FnIns> _field_CmplxMul;
	jule::Ptr<_208822372_FnIns> _field_CmplxDiv;
	jule::Ptr<_208822372_FnIns> _field_CmplxAddZ;
	jule::Ptr<_208822372_FnIns> _field_CmplxSubZ;
	jule::Ptr<_208822372_FnIns> _field_CmplxMulZ;
	jule::Ptr<_208822372_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _2093a67b8_MetaMathCmplx_eq(_2093a67b8_MetaMathCmplx *_self_, _2093a67b8_MetaMathCmplx _other_);


struct _2093a6dc3_Meta {
	jule::Ptr<_2093a5ce5_MetaRuntime> _field_Runtime;
	jule::Ptr<_2093a5124_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_2093a67b8_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_20881e2b4_Fn> _field_EntryPoint;
};
inline jule::Bool _2093a6dc3_Meta_eq(_2093a6dc3_Meta *_self_, _2093a6dc3_Meta _other_);


struct _2093a839c_OrderedDefines {
	jule::Slice<jule::Ptr<_208746230_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_Globals;
};
struct _21a2d3ccd_xorshift {
};
inline jule::Bool _21a2d3ccd_xorshift_eq(_21a2d3ccd_xorshift *_self_, _21a2d3ccd_xorshift _other_);


struct _2171c7ea0_liveTable {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _field_vars;
	jule::Slice<jule::Ptr<_208822372_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_2087490bd_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_2088299c8_Trait>> _field_traits;
};
struct _2171c8368_ObjectDeadCode {
	_2171c7ea0_liveTable _field_live;
	jule::Ptr<_20939938d_IR> _field_ir;
};
struct _2171cc48d_scopeDeadCode {
	jule::Ptr<_2171cc48d_scopeDeadCode> _field_parent;
	jule::Ptr<_2088ca969_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_2088cd472_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _2171cc48d_scopeDeadCode_eq(_2171cc48d_scopeDeadCode *_self_, _2171cc48d_scopeDeadCode _other_);


struct _2171d1a25_exprDeadCode {
	jule::Ptr<_2171cc48d_scopeDeadCode> _field_s;
};
inline jule::Bool _2171d1a25_exprDeadCode_eq(_2171d1a25_exprDeadCode *_self_, _2171d1a25_exprDeadCode _other_);


struct _216d93a39_StrFromBytes {
	jule::Any _field_Expr;
};
inline jule::Bool _216d93a39_StrFromBytes_eq(_216d93a39_StrFromBytes *_self_, _216d93a39_StrFromBytes _other_);


struct _216da6057_ExceptionalForwardingExpr {
	jule::Ptr<_208814078_FnCallExpr> _field_Expr;
};
inline jule::Bool _216da6057_ExceptionalForwardingExpr_eq(_216da6057_ExceptionalForwardingExpr *_self_, _216da6057_ExceptionalForwardingExpr _other_);


struct _216da6244_FnCallIgnoreExceptionalExpr {
	jule::Ptr<_208814078_FnCallExpr> _field_Base;
};
inline jule::Bool _216da6244_FnCallIgnoreExceptionalExpr_eq(_216da6244_FnCallIgnoreExceptionalExpr *_self_, _216da6244_FnCallIgnoreExceptionalExpr _other_);


struct _216da64a8_StrConcatExpr {
	jule::Slice<jule::Any> _field_Parts;
};
struct _216da680a_SwapExpr {
	jule::Ptr<_20899a9a1_Data> _field_Left;
	jule::Ptr<_20899a9a1_Data> _field_Right;
};
inline jule::Bool _216da680a_SwapExpr_eq(_216da680a_SwapExpr *_self_, _216da680a_SwapExpr _other_);


struct _216da6bd4_EmptyCompareExpr {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _216da6bd4_EmptyCompareExpr_eq(_216da6bd4_EmptyCompareExpr *_self_, _216da6bd4_EmptyCompareExpr _other_);


struct _216da6ed1_RefExpr {
	jule::Ptr<_20894d7de_Var> _field_Var;
};
inline jule::Bool _216da6ed1_RefExpr_eq(_216da6ed1_RefExpr *_self_, _216da6ed1_RefExpr _other_);


struct _216da7520_StrCompExpr {
	jule::Any _field_Left;
	jule::Ptr<_208799195_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _216da7520_StrCompExpr_eq(_216da7520_StrCompExpr *_self_, _216da7520_StrCompExpr _other_);


struct _216da7aa3_MutSlicingExpr {
	jule::Ptr<_208711827_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _216da7aa3_MutSlicingExpr_eq(_216da7aa3_MutSlicingExpr *_self_, _216da7aa3_MutSlicingExpr _other_);


struct _216da7da0_UnsafeBinaryExpr {
	jule::Ptr<_208812098_BinaryExpr> _field_Node;
};
inline jule::Bool _216da7da0_UnsafeBinaryExpr_eq(_216da7da0_UnsafeBinaryExpr *_self_, _216da7da0_UnsafeBinaryExpr _other_);


struct _216da819c_UnsafeIndexingExpr {
	jule::Ptr<_208814908_IndexingExpr> _field_Node;
};
inline jule::Bool _216da819c_UnsafeIndexingExpr_eq(_216da819c_UnsafeIndexingExpr *_self_, _216da819c_UnsafeIndexingExpr _other_);


struct _216da8576_PushToSliceExpr {
	jule::Any _field_Dest;
	jule::Ptr<_208814452_SliceExpr> _field_Elems;
};
inline jule::Bool _216da8576_PushToSliceExpr_eq(_216da8576_PushToSliceExpr *_self_, _216da8576_PushToSliceExpr _other_);


struct _216da8950_AppendToSliceExpr {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _216da8950_AppendToSliceExpr_eq(_216da8950_AppendToSliceExpr *_self_, _216da8950_AppendToSliceExpr _other_);


struct _216da8d29_StrRuneIter {
	jule::Ptr<_20899a9a1_Data> _field_Expr;
	jule::Ptr<_2088cc7e5_RangeIter> _field_Base;
};
inline jule::Bool _216da8d29_StrRuneIter_eq(_216da8d29_StrRuneIter *_self_, _216da8d29_StrRuneIter _other_);


struct _216da9126_UnsafeDerefExpr {
	jule::Ptr<_208812472_UnaryExpr> _field_Base;
};
inline jule::Bool _216da9126_UnsafeDerefExpr_eq(_216da9126_UnsafeDerefExpr *_self_, _216da9126_UnsafeDerefExpr _other_);


struct _216da9654_UnsafeCastingExpr {
	jule::Ptr<_2088136c6_CastingExpr> _field_Base;
};
inline jule::Bool _216da9654_UnsafeCastingExpr_eq(_216da9654_UnsafeCastingExpr *_self_, _216da9654_UnsafeCastingExpr _other_);


struct _216daa1b0_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _216daa1b0_nilVar_eq(_216daa1b0_nilVar *_self_, _216daa1b0_nilVar _other_);


struct _216daa501_nils {
	jule::Slice<_216daa1b0_nilVar> _field_vars;
};
struct _2170a3188_scopeOptimizer {
	jule::Ptr<_2170a3188_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_2088ca969_Scope> _field_scope;
	jule::Ptr<_2170b62ab_data> _field_data;
};
inline jule::Bool _2170a3188_scopeOptimizer_eq(_2170a3188_scopeOptimizer *_self_, _2170a3188_scopeOptimizer _other_);


struct _2170aa998_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_2170b62ab_data> _field_data;
	jule::Ptr<_20939ca56_ExprInspector> _field_inspector;
	jule::Ptr<_2170a3188_scopeOptimizer> _field_scopeOpt;
};
inline jule::Bool _2170aa998_exprOptimizer_eq(_2170aa998_exprOptimizer *_self_, _2170aa998_exprOptimizer _other_);


struct _2170b3341_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_2089ce661_Type> _field_kind;
};
inline jule::Bool _2170b3341_dynamicVar_eq(_2170b3341_dynamicVar *_self_, _2170b3341_dynamicVar _other_);


struct _2170b3682_dynamic {
	jule::Slice<_2170b3341_dynamicVar> _field_vars;
};
struct _2170b5cb1_dataCheckpoint {
	jule::Ptr<_2170b8566_boundary> _field_boundary;
	jule::Ptr<_216daa501_nils> _field_nils;
	jule::Ptr<_2170b3682_dynamic> _field_dynamic;
};
inline jule::Bool _2170b5cb1_dataCheckpoint_eq(_2170b5cb1_dataCheckpoint *_self_, _2170b5cb1_dataCheckpoint _other_);


struct _2170b62ab_data {
	jule::Ptr<_2170b8566_boundary> _field_boundary;
	jule::Ptr<_216daa501_nils> _field_nils;
	jule::Ptr<_2170b3682_dynamic> _field_dynamic;
};
inline jule::Bool _2170b62ab_data_eq(_2170b62ab_data *_self_, _2170b62ab_data _other_);


struct _2170b8225_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _2170b8566_boundary {
	jule::Slice<_2170b8225_boundaryVar> _field_vars;
};
struct _2171d2b47_Optimizer {
	jule::Ptr<_20939938d_IR> _field_ir;
};
inline jule::Bool _2171d2b47_Optimizer_eq(_2171d2b47_Optimizer *_self_, _2171d2b47_Optimizer _other_);


struct _2172a3cd4_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _2172a3cd4_AbsTime_eq(_2172a3cd4_AbsTime *_self_, _2172a3cd4_AbsTime _other_);


struct _2172a44aa_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _2172a44aa_Time_eq(_2172a44aa_Time *_self_, _2172a44aa_Time _other_);


struct _21a5e58b4_UnixTime {
};
inline jule::Bool _21a5e58b4_UnixTime_eq(_21a5e58b4_UnixTime *_self_, _21a5e58b4_UnixTime _other_);


struct _21a5e5dd1_TimeData {
};
inline jule::Bool _21a5e5dd1_TimeData_eq(_21a5e5dd1_TimeData *_self_, _21a5e5dd1_TimeData _other_);


struct _21a5e65a7_DurInt {
};
inline jule::Bool _21a5e65a7_DurInt_eq(_21a5e65a7_DurInt *_self_, _21a5e65a7_DurInt _other_);


struct _2171d6b29_scopeCoder {
	jule::Ptr<_2172b1a06_ObjectCoder> _field_oc;
};
inline jule::Bool _2171d6b29_scopeCoder_eq(_2171d6b29_scopeCoder *_self_, _2171d6b29_scopeCoder _other_);


struct _2171e2bce_exprCoder {
	jule::Ptr<_2172b1a06_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_20894d7de_Var>>> _field_varPrefixes;
};
struct _2172053a6_TestCoder {
	jule::Ptr<_2087490bd_StructIns> _field_t;
	jule::Ptr<_20881e2b4_Fn> _field_tmReset;
	jule::Ptr<_20881e2b4_Fn> _field_tmFailed;
	jule::Ptr<_20881e2b4_Fn> _field_tmSkipped;
	jule::Ptr<_2172b1a06_ObjectCoder> _field_oc;
};
inline jule::Bool _2172053a6_TestCoder_eq(_2172053a6_TestCoder *_self_, _2172053a6_TestCoder _other_);


struct _217208002_identCoder {
};
inline jule::Bool _217208002_identCoder_eq(_217208002_identCoder *_self_, _217208002_identCoder _other_);


struct _2172ae251_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _2172ae251_SerializationInfo_eq(_2172ae251_SerializationInfo *_self_, _2172ae251_SerializationInfo _other_);


struct _2172ae66e_traitCast {
	jule::Ptr<_2088299c8_Trait> _field_t1;
	jule::Ptr<_2088299c8_Trait> _field_t2;
};
inline jule::Bool _2172ae66e_traitCast_eq(_2172ae66e_traitCast *_self_, _2172ae66e_traitCast _other_);


struct _2172aea48_anonHash {
	jule::Ptr<_208814dae_AnonFnExpr> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _2172aea48_anonHash_eq(_2172aea48_anonHash *_self_, _2172aea48_anonHash _other_);


struct _2172aee66_traitHash {
	jule::Ptr<_2088299c8_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _field_methods;
};
struct _2172b0263_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _2172b0263_metadata_eq(_2172b0263_metadata *_self_, _2172b0263_metadata _other_);


struct _2172b1a06_ObjectCoder {
	_21e64c5b5_Builder _field_Buf;
	_21e64c5b5_Builder _field_resultDecls;
	_21e64c5b5_Builder _field_anyObj;
	_21e64c5b5_Builder _field_anonObj;
	_21e64c5b5_Builder _field_deallocObj;
	_21e64c5b5_Builder _field_coSpawnObj;
	jule::Ptr<_20939938d_IR> _field_ir;
	_2172ae251_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_2172aea48_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_21a63e017__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_2089ce661_Type>> _field_anyTypeMap;
	jule::Slice<_2172ae66e_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_208822372_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_2172aee66_traitHash>> _field_traitMap;
	jule::Ptr<_21a686ba8__Map> _field_traitMetMap;
	jule::Ptr<_2171e2bce_exprCoder> _field_ec;
	jule::Ptr<_2171d6b29_scopeCoder> _field_sc;
	jule::Ptr<_2172c163c_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_2172b0263_metadata _field_meta;
};
struct _2172c0a26_customType {
	jule::Str _field_kind;
};
inline jule::Bool _2172c0a26_customType_eq(_2172c0a26_customType *_self_, _2172c0a26_customType _other_);


struct _2172c163c_typeCoder {
	jule::Ptr<_2172b1a06_ObjectCoder> _field_oc;
	jule::Ptr<_2172c9227_resultCoder> _field_rc;
};
inline jule::Bool _2172c163c_typeCoder_eq(_2172c163c_typeCoder *_self_, _2172c163c_typeCoder _other_);


struct _2172c9227_resultCoder {
	jule::Ptr<_2172c163c_typeCoder> _field_tc;
};
inline jule::Bool _2172c9227_resultCoder_eq(_2172c9227_resultCoder *_self_, _2172c9227_resultCoder _other_);


struct _21ad1e164_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _21ad1e164_Flag_eq(_21ad1e164_Flag *_self_, _21ad1e164_Flag _other_);

struct _21ad22299_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _21ad22299_Flag_eq(_21ad22299_Flag *_self_, _21ad22299_Flag _other_);

struct _21ad254de_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _21ad254de_Flag_eq(_21ad254de_Flag *_self_, _21ad254de_Flag _other_);

struct _21ad28778_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _21ad28778_Flag_eq(_21ad28778_Flag *_self_, _21ad28778_Flag _other_);

struct _21ad2b9bd_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _21ad2b9bd_Flag_eq(_21ad2b9bd_Flag *_self_, _21ad2b9bd_Flag _other_);


struct _21733e325_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _217341cd9_argParser {
	_21733e325_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
};
struct _20939938d_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_2089107b2_Package> _field_Main;
	jule::Ptr<_20890d040_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _field_Used;
	_2093a839c_OrderedDefines _field_Ordered;
};
struct _21e80ade4_Dir {
	jule::Str _field_Name;
	_21e88b804_Stat _field_Stat;
};
inline jule::Bool _21e80ade4_Dir_eq(_21e80ade4_Dir *_self_, _21e80ade4_Dir _other_);


struct _21e80ba1b_Cmd {
	_21e88968c_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_208822372_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_208822372_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_s_2088ca1d8_exprPart__jule_tuple_x_20899a9a1_Data__jule_tuple_bool {
	jule::Slice<_2088ca1d8_exprPart> __jule_result_arg0;
	jule::Ptr<_20899a9a1_Data> __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20899a9a1_Data__jule_tuple_x_20899a9a1_Data {
	jule::Ptr<_20899a9a1_Data> __jule_result_arg0;
	jule::Ptr<_20899a9a1_Data> __jule_result_arg1;
};
struct __jule_tuple_x_20899a9a1_Data__jule_tuple_bool {
	jule::Ptr<_20899a9a1_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20872b677_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_20872b677_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20873e4c0_Case__jule_tuple_bool {
	jule::Ptr<_20873e4c0_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20873e4c0_Case__jule_tuple_x_20873d249_Else {
	jule::Slice<jule::Ptr<_20873e4c0_Case>> __jule_result_arg0;
	jule::Ptr<_20873d249_Else> __jule_result_arg1;
};
struct __jule_tuple__2087369a1_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_208735ce1_AssignSt__jule_tuple_bool {
	jule::Ptr<_208735ce1_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool {
	jule::Ptr<_208727343_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_20872a236_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log {
	jule::Slice<jule::Ptr<_2087253da_AST>> __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_21e65b904_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_x_208822372_FnIns__jule_tuple_bool {
	jule::Ptr<_208822372_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20939938d_IR__jule_tuple_s_21e65b904_Log {
	jule::Ptr<_20939938d_IR> __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__205e60243_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__205e60243_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__205e60243_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_s_21734d334_byte__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple__21734d334_byte__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2088255b7_SymTab__jule_tuple_s_21e65b904_Log {
	jule::Ptr<_2088255b7_SymTab> __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log {
	jule::Ptr<_2089107b2_Package> __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_x_2087253da_AST__jule_tuple_s_21e65b904_Log {
	jule::Ptr<_2087253da_AST> __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_208711827_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_208711827_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token {
	jule::Slice<jule::Ptr<_208711827_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_208711827_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_208711827_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_208711827_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> __jule_result_arg0;
	jule::Slice<_21e65b904_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__21e483132_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__21e483a5b_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_21a63e017__Map> static__21a63e3e1_make(void);
inline void _21a63e545_initData(_21a63e017__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _21a63e699_hash(_21a63e017__Map* _self_, jule::Str _14616_k);
inline void _21a63e7ed_rehash(_21a63e017__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _21a63e952_nextSize(_21a63e017__Map* _self_);
inline void _21a63eaa6_lookup(jule::Ptr<_21a63e017__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _21a63ec0a_get(jule::Ptr<_21a63e017__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _21a63ed5e_set(_21a63e017__Map* _self_, jule::Str _24123_k);
inline jule::Bool _21a63eeb3_del(jule::Ptr<_21a63e017__Map> _self_, jule::Str _27624_k);
inline void _21a640117_clear(jule::Ptr<_21a63e017__Map> _self_);
inline jule::I64 _21a64026b_len(jule::Ptr<_21a63e017__Map> _self_);
inline jule::I64 _21a6403c0_cap(_21a63e017__Map* _self_);
inline _21a649792_mapIterator _21a640524_iterator(jule::Ptr<_21a63e017__Map> _self_);
inline jule::Ptr<_21a686ba8__Map> static__21a686ed8_make(void);
inline void _21a68713c_initData(_21a686ba8__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _21a687291_hash(_21a686ba8__Map* _self_, jule::Ptr<_208822372_FnIns> _14616_k);
inline void _21a6873e5_rehash(_21a686ba8__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _21a687549_nextSize(_21a686ba8__Map* _self_);
inline void _21a68769d_lookup(jule::Ptr<_21a686ba8__Map> _self_, jule::Ptr<_208822372_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _21a687802_get(jule::Ptr<_21a686ba8__Map> _self_, jule::Ptr<_208822372_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _21a687956_set(_21a686ba8__Map* _self_, jule::Ptr<_208822372_FnIns> _24123_k);
inline jule::Bool _21a687aaa_del(jule::Ptr<_21a686ba8__Map> _self_, jule::Ptr<_208822372_FnIns> _27624_k);
inline void _21a687c0e_clear(jule::Ptr<_21a686ba8__Map> _self_);
inline jule::I64 _21a687d63_len(jule::Ptr<_21a686ba8__Map> _self_);
inline jule::I64 _21a687eb7_cap(_21a686ba8__Map* _self_);
inline _21a690343_mapIterator _21a68811b_iterator(jule::Ptr<_21a686ba8__Map> _self_);
inline void _21a649b38_init(_21a649792_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _21a649c8c_next(_21a649792_mapIterator* _self_);
inline void _21a6906d9_init(_21a690343_mapIterator* _self_);
inline __jule_tuple_px_208822372_FnIns__jule_tuple_psuintptr _21a69083d_next(_21a690343_mapIterator* _self_);
inline _21e64c5b5_Builder static__21e64ce12_New(jule::I64 _2316_cap);
inline jule::Exceptional<jule::I64> _21e64d253_Write(_21e64c5b5_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I64> _21e64d594_WriteStr(_21e64c5b5_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _21e64d84c_WriteByte(_21e64c5b5_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I64> _21e64db8d_WriteRune(_21e64c5b5_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _21e64de24_Str(_21e64c5b5_Builder* _self_);
inline void _21e64e122_Clear(_21e64c5b5_Builder* _self_);
inline jule::I64 _21e64e3a8_Len(_21e64c5b5_Builder* _self_);
inline jule::Slice<jule::U8> _21e64e8c5_Buf(_21e64c5b5_Builder* _self_);
inline void _21e64eb7d_SetBuf(_21e64c5b5_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _220c66edb_index(_220c66a24_lazyBuff* _self_, jule::I64 _5421_i);
inline void _220c67294_append(_220c66a24_lazyBuff* _self_, jule::U8 _6122_c);
inline jule::Str _220c6752a_string(_220c66a24_lazyBuff* _self_);
inline jule::Exceptional<jule::Ptr<_21e8109ed_File>> static__21e809d6b_Open(jule::Str _1517_path, jule::I64 _1528_flag, jule::I64 _1541_mode);
inline jule::VoidExceptional static__21e80a07a_Remove(jule::Str _2519_path);
inline jule::Exceptional<jule::I64> _21e80a50e_Write(_21e8109ed_File* _self_, jule::Slice<jule::U8> _3821_buf);
inline jule::Exceptional<jule::I64> _21e80a850_Read(_21e8109ed_File* _self_, jule::Slice<jule::U8> _5724_buf);
inline jule::Ptr<_21e8109ed_File> static__21e8114d2_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_21e8109ed_File>> static__21e81179b_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__21e811a65_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__21e811e0b_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I64 _12443_perm);
inline jule::VoidExceptional _21e812714_Close(_21e8109ed_File* _self_);
inline jule::Exceptional<_21e88b804_Stat> static__21e80ce3a_Of(jule::Str _1015_path);
inline jule::Bool _21e88bc11_IsDir(_21e88b804_Stat* _self_);
inline jule::Bool _21e88be97_IsReg(_21e88b804_Stat* _self_);
inline jule::U64 _21e88c22d_Size(_21e88b804_Stat* _self_);
inline jule::Bool _21ec91a50_set(_21ec9a086_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _21ec91d91_floatBits(_21ec9a086_decimal* _self_, _21ec8689c_floatInfo* _33226_flt);
inline void _21ec9a471_assign(_21ec9a086_decimal* _self_, jule::U64 _15126_v);
inline void _21ec9a729_shift(_21ec9a086_decimal* _self_, jule::I64 _17625_k);
inline void _21ec9a9d2_roundDown(_21ec9a086_decimal* _self_, jule::I64 _19625_nd);
inline void _21ec9ac8a_roundUp(_21ec9a086_decimal* _self_, jule::I64 _20523_nd);
inline void _21ec9b043_round(_21ec9a086_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _21ec9b2c9_roundedInteger(_21ec9a086_decimal* _self_);
inline void static__220c7743b_Reset(void);
inline void static__220c98cba_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__21eca09c6_LogFlat(_21e65b904_Log* _1421_l);
inline void static__21eca0be6_LogError(_21e65b904_Log* _1922_l);
inline void static__21eca0e27_Log(_21e65b904_Log* _6417_l);
inline void static__21eca1158_PrintLogs(jule::Slice<_21e65b904_Log>* _7423_logs);
inline jule::U8 _208711bce_Prec(_208711827_Token* _self_);
inline jule::Ptr<_2087173cc_Fileset> static__208717762_New(jule::Str _2016_path);
inline void _208717cc3_FillMut(_2087173cc_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _208718059_Dir(_2087173cc_Fileset* _self_);
inline jule::Str _2087182e0_Name(_2087173cc_Fileset* _self_);
inline jule::Str _2087188b7_GetRow(_2087173cc_Fileset* _self_, jule::I64 _5718_row);
inline void _208720c54_pushErr(_20872068d_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _2087212b5_lex(_20872068d_lex* _self_);
inline jule::Str _208721606_id(_20872068d_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _20872188c_resume(_20872068d_lex* _self_);
inline void _208721b45_lexLineComment(_20872068d_lex* _self_, jule::Ptr<_208711827_Token>* _52235_token);
inline void _208721ded_lexRangeComment(_20872068d_lex* _self_, jule::Ptr<_208711827_Token>* _53736_token);
inline jule::Str _20872223e_num(_20872068d_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _208722580_escapeSeq(_20872068d_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _20872297b_getRune(_20872068d_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _208722cbc_lexRune(_20872068d_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _208723053_lexStr(_20872068d_lex* _self_);
inline void _2087234d7_newLine(_20872068d_lex* _self_);
inline jule::Bool _208723a48_isOp(_20872068d_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U64 _70845_id, jule::Ptr<_208711827_Token>* _70858_t);
inline jule::Bool _208723e44_lexBasicOps(_20872068d_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_208711827_Token>* _71845_tok);
inline jule::Bool _208724340_lexId(_20872068d_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_208711827_Token>* _72740_t);
inline jule::Bool _20872473b_lexNum(_20872068d_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_208711827_Token>* _73741_t);
inline jule::Ptr<_208711827_Token> _2087249c2_token(_20872068d_lex* _self_);
inline jule::Bool _208729213_IsUnsafe(_208728d6c_PtrTypeDecl* _self_);
inline jule::Bool _2087299a5_AutoSized(_20872960e_ArrTypeDecl* _self_);
inline jule::Bool _208730758_Unhandled(_2087303a1_FnCallExpr* _self_);
inline jule::Bool _2087309de_Ignored(_2087303a1_FnCallExpr* _self_);
inline jule::Bool _208738035_IsSelf(_208737b7d_ParamDecl* _self_);
inline jule::Bool _208739476_IsAnon(_2087390d0_FnDecl* _self_);
inline jule::Bool _20873b27a_IsInf(_20873add4_Iter* _self_);
inline jule::Bool _20873baa5_IsWhileNext(_20873b70e_WhileKind* _self_);
inline jule::Ptr<_208799195_Const> static__208805bc4_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_208799195_Const> static__208805e49_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_208799195_Const> static__208806213_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_208799195_Const> static__2088064cc_NewStr(jule::Str _2319_x);
inline jule::Ptr<_208799195_Const> static__208806796_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_208799195_Const> static__2088069a5_NewNil(void);
inline jule::I64 _208807115_ReadI64(_208799195_Const* _self_);
inline jule::U64 _20880739b_ReadU64(_208799195_Const* _self_);
inline jule::Bool _208807632_ReadBool(_208799195_Const* _self_);
inline jule::Str _2088078b8_ReadStr(_208799195_Const* _self_);
inline jule::F64 _208807b4e_ReadF64(_208799195_Const* _self_);
inline jule::I64 _208807dd5_AsI64(_208799195_Const* _self_);
inline jule::U64 _20880816b_AsU64(_208799195_Const* _self_);
inline jule::F64 _208808402_AsF64(_208799195_Const* _self_);
inline void _2088086aa_SetI64(_208799195_Const* _self_, jule::I64 _13622_x);
inline void _208808963_SetU64(_208799195_Const* _self_, jule::U64 _13922_x);
inline void _208808c1b_SetBool(_208799195_Const* _self_, jule::Bool _14223_x);
inline void _208808ec4_SetStr(_208799195_Const* _self_, jule::Str _14522_x);
inline void _20880927c_SetF64(_208799195_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _208809711_IsI64(_208799195_Const* _self_);
inline jule::Bool _208809997_IsU64(_208799195_Const* _self_);
inline jule::Bool _208809c2d_IsBool(_208799195_Const* _self_);
inline jule::Bool _208809eb4_IsStr(_208799195_Const* _self_);
inline jule::Bool _20880a24a_IsF64(_208799195_Const* _self_);
inline jule::Bool _20880a4d1_IsNil(_208799195_Const* _self_);
inline jule::Bool _20880ab63_And(_208799195_Const* _self_, _208799195_Const _23615_x);
inline jule::Bool _20880aea4_Or(_208799195_Const* _self_, _208799195_Const _24714_x);
inline jule::Bool _20880b2e5_Eq(_208799195_Const* _self_, _208799195_Const _25814_x);
inline jule::Bool _20880b636_Lt(_208799195_Const* _self_, _208799195_Const _28514_x);
inline jule::Bool _20880b977_LtEq(_208799195_Const* _self_, _208799195_Const _30816_x);
inline jule::Bool _20880bcb8_Gt(_208799195_Const* _self_, _208799195_Const _33114_x);
inline jule::Bool _20880c109_GtEq(_208799195_Const* _self_, _208799195_Const _35416_x);
inline jule::Bool _20880c44a_Add(_208799195_Const* _self_, _208799195_Const _37519_x);
inline jule::Bool _20880c78b_Sub(_208799195_Const* _self_, _208799195_Const _40419_x);
inline jule::Bool _20880cacc_Mul(_208799195_Const* _self_, _208799195_Const _42819_x);
inline jule::Bool _20880ce1d_Div(_208799195_Const* _self_, _208799195_Const _45619_x);
inline jule::Bool _20880d25e_Mod(_208799195_Const* _self_, _208799195_Const _48519_x);
inline jule::Bool _20880d5a0_BitwiseAnd(_208799195_Const* _self_, _208799195_Const _50726_x);
inline jule::Bool _20880d8e1_BitwiseOr(_208799195_Const* _self_, _208799195_Const _52125_x);
inline jule::Bool _20880dc32_Xor(_208799195_Const* _self_, _208799195_Const _53519_x);
inline jule::Bool _20880e073_Lshift(_208799195_Const* _self_, _208799195_Const _54922_x);
inline jule::Bool _20880e3b4_Rshift(_208799195_Const* _self_, _208799195_Const _56922_x);
inline jule::Ptr<_208748496_FieldIns> _2087452ea_instance(jule::Ptr<_208744e10_Field> _self_);
inline jule::Ptr<_2087490bd_StructIns> _20874664d_instance(jule::Ptr<_208746230_Struct> _self_);
inline jule::Ptr<_2087490bd_StructIns> _20874698e_appendInstance(_208746230_Struct* _self_, jule::Ptr<_2087490bd_StructIns>* _10235_ins);
inline jule::Ptr<_20881e2b4_Fn> _208746d8a_FindMethod(_208746230_Struct* _self_, jule::Str _12026_ident, jule::Bool _12038_statically);
inline jule::Ptr<_20894d7de_Var> _2087471cb_FindStatic(_208746230_Struct* _self_, jule::Str _13126_ident);
inline jule::Ptr<_208744e10_Field> _20874751c_FindField(_208746230_Struct* _self_, jule::Str _14225_ident);
inline jule::Bool _20874785d_IsImplements(_208746230_Struct* _self_, jule::Ptr<_2088299c8_Trait> _15224_t);
inline jule::Bool _208747b9e_IsUses(_208746230_Struct* _self_, jule::Ptr<_208746230_Struct> _16218_s);
inline jule::Str _208749442_Str(_2087490bd_StructIns* _self_);
inline jule::Bool _208749783_Equal(jule::Ptr<_2087490bd_StructIns> _self_, jule::Ptr<_2089ce661_Type> _22718_other);
inline jule::Bool _208749c39_Same(_2087490bd_StructIns* _self_, jule::Ptr<_2087490bd_StructIns> _26216_s);
inline jule::Ptr<_20881e2b4_Fn> _20874a135_FindMethod(_2087490bd_StructIns* _self_, jule::Str _27726_ident, jule::Bool _27738_statically);
inline jule::Ptr<_208748496_FieldIns> _20874a476_FindField(_2087490bd_StructIns* _self_, jule::Str _28825_ident);
inline jule::Ptr<_20894d7de_Var> _20874a7b7_FindStatic(_2087490bd_StructIns* _self_, jule::Str _29926_ident);
inline jule::Ptr<_20882121c_ParamIns> _20881cba8_instance(jule::Ptr<_20881c7e0_Param> _self_);
inline jule::Bool _20881ce3e_IsSelf(_20881c7e0_Param* _self_);
inline jule::Bool _20881d1c5_IsRef(_20881c7e0_Param* _self_);
inline jule::Bool _20881e76a_IsVoid(_20881e2b4_Fn* _self_);
inline jule::Bool _20881ea01_IsMethod(_20881e2b4_Fn* _self_);
inline jule::Bool _20881ec87_IsEntryPoint(_20881e2b4_Fn* _self_);
inline jule::Bool _20882001d_IsInit(_20881e2b4_Fn* _self_);
inline jule::Bool _2088202a4_IsAnon(_20881e2b4_Fn* _self_);
inline jule::Bool _20882053a_AnyVar(_20881e2b4_Fn* _self_);
inline jule::Ptr<_208822372_FnIns> _2088207c1_instanceForce(jule::Ptr<_20881e2b4_Fn> _self_);
inline jule::Ptr<_208822372_FnIns> _208820a57_instance(jule::Ptr<_20881e2b4_Fn> _self_);
inline jule::Ptr<_208822372_FnIns> _208820d65_appendInstance(_20881e2b4_Fn* _self_, jule::Ptr<_208822372_FnIns>* _14535_ins);
inline jule::Str _2088215b3_Str(_20882121c_ParamIns* _self_);
inline jule::Str _2088226e6_Str(_208822372_FnIns* _self_);
inline jule::Bool _208822a37_Equal(jule::Ptr<_208822372_FnIns> _self_, jule::Ptr<_2089ce661_Type> _23618_other);
inline jule::Bool _208822ecc_EqualFn(jule::Ptr<_208822372_FnIns> _self_, jule::Ptr<_208822372_FnIns>* _24721_f);
inline jule::Bool _20882331d_equalTrait(jule::Ptr<_208822372_FnIns> _self_, jule::Ptr<_208822372_FnIns>* _30624_other);
inline jule::Slice<jule::Ptr<_2089ce661_Type>> _2088235a4_Types(_208822372_FnIns* _self_);
inline jule::Bool _20882383a_IsBuiltin(_208822372_FnIns* _self_);
inline jule::Bool _208823ac1_IsAnon(_208822372_FnIns* _self_);
inline jule::Bool _208823e12_Same(_208822372_FnIns* _self_, jule::Ptr<_208822372_FnIns> _34916_f);
inline jule::Str _208824253_GetKindStr(_208822372_FnIns* _self_, jule::Bool _36622_ident);
inline jule::Ptr<_20890d040_ImportInfo> _208825ad4_SelectPackage(_2088255b7_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _2729_selector);
inline jule::Ptr<_20894d7de_Var> _208825ed0_FindVar(_2088255b7_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_2089cd94b_TypeAlias> _2088263cb_FindTypeAlias(_2088255b7_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_208746230_Struct> _2088267c7_FindStruct(_2088255b7_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_20881e2b4_Fn> _208826bc3_FindFn(_2088255b7_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_2088299c8_Trait> _208827014_FindTrait(_2088255b7_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_20882c17e_Enum> _208827355_FindEnum(_2088255b7_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_20882d889_TypeEnum> _208827696_FindTypeEnum(_2088255b7_SymTab* _self_, jule::Str _9728_ident);
inline jule::I64 _208827b5d_findVar1(_2088255b7_SymTab* _self_, jule::Ptr<_20894d7de_Var>* _10825_v);
inline jule::Ptr<_20894d7de_Var> _208828114_findVar(_2088255b7_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_2089cd94b_TypeAlias> _2088285ba_findTypeAlias(_2088255b7_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _2088289b6_defByIdent(_2088255b7_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _208828e6c_isDuplicatedIdent(_2088255b7_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _208829dc4_Str(_2088299c8_Trait* _self_);
inline jule::Bool _20882a215_Equal(jule::Ptr<_2088299c8_Trait> _self_, jule::Ptr<_2089ce661_Type> _2518_other);
inline jule::Ptr<_20881e2b4_Fn> _20882a6aa_FindMethod(_2088299c8_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_20881e2b4_Fn> _20882ad3c_findMethodInherit(_2088299c8_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _20882b9ec_AutoExpr(_20882b623_EnumItem* _self_);
inline jule::Str _20882c536_Str(_20882c17e_Enum* _self_);
inline jule::Bool _20882c877_Equal(jule::Ptr<_20882c17e_Enum> _self_, jule::Ptr<_2089ce661_Type> _3818_other);
inline jule::Ptr<_20882b623_EnumItem> _20882cca6_FindItem(_20882c17e_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _20882dc0d_Str(_20882d889_TypeEnum* _self_);
inline jule::Bool _20882e04e_Equal(jule::Ptr<_20882d889_TypeEnum> _self_, jule::Ptr<_2089ce661_Type> _8018_other);
inline jule::Ptr<_20882d2b2_TypeEnumItem> _20882e47d_FindItem(_20882d889_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _20889ea92_Str(_20889e696_comptimeRange* _self_);
inline jule::Bool _20889edd3_Equal(jule::Ptr<_20889e696_comptimeRange> _self_, jule::Ptr<_2089ce661_Type> _2718_other);
inline jule::Str _2088a05a9_Str(_2088a0202_comptimeStructField* _self_);
inline jule::Bool _2088a08ea_Equal(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Ptr<_2089ce661_Type> _3718_other);
inline jule::Ptr<_20899a9a1_Data> _2088a0e06__Decl(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Ptr<_20899c970_eval>* _4127_e, jule::Ptr<_2087303a1_FnCallExpr>* _4142_fc);
inline jule::Ptr<_20899a9a1_Data> _2088a1302__Type(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Ptr<_20899c970_eval>* _5327_e, jule::Ptr<_2087303a1_FnCallExpr>* _5342_fc);
inline jule::Ptr<_20899a9a1_Data> _2088a1643_subIdent(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _2088a1d5d_Str(_2088a1995_comptimeStructFields* _self_);
inline jule::Bool _2088a219e_Equal(jule::Ptr<_2088a1995_comptimeStructFields> _self_, jule::Ptr<_2089ce661_Type> _9018_other);
inline void _2088a2633_ready(_2088a1995_comptimeStructFields* _self_, jule::Ptr<_20894d7de_Var>* _9426_keyA, jule::Ptr<_20894d7de_Var>* _9443_keyB);
inline void _2088a2996_index(_2088a1995_comptimeStructFields* _self_, jule::Ptr<_20899a9a1_Data>* _11526_d, jule::I64 _11536_i);
inline void _2088a2db4_step(_2088a1995_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_20894d7de_Var>* _12633_keyA, jule::Ptr<_20894d7de_Var>* _12650_keyB);
inline jule::I64 _2088a314a_len(_2088a1995_comptimeStructFields* _self_);
inline jule::Str _2088a37cc_Str(_2088a3425_comptimeStatic* _self_);
inline jule::Bool _2088a3b1d_Equal(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Ptr<_2089ce661_Type> _15018_other);
inline jule::Ptr<_20899a9a1_Data> _2088a4129__Decl(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Ptr<_20899c970_eval>* _15427_e, jule::Ptr<_2087303a1_FnCallExpr>* _15442_fc);
inline jule::Ptr<_20899a9a1_Data> _2088a4525__Type(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Ptr<_20899c970_eval>* _16627_e, jule::Ptr<_2087303a1_FnCallExpr>* _16642_fc);
inline jule::Ptr<_20899a9a1_Data> _2088a4866_subIdent(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _2088a5081_Str(_2088a4bc9_comptimeStatics* _self_);
inline jule::Bool _2088a53c2_Equal(jule::Ptr<_2088a4bc9_comptimeStatics> _self_, jule::Ptr<_2089ce661_Type> _20318_other);
inline void _2088a5856_ready(_2088a4bc9_comptimeStatics* _self_, jule::Ptr<_20894d7de_Var>* _20726_keyA, jule::Ptr<_20894d7de_Var>* _20743_keyB);
inline void _2088a5bb9_index(_2088a4bc9_comptimeStatics* _self_, jule::Ptr<_20899a9a1_Data>* _22826_d, jule::I64 _22836_i);
inline void _2088a60d7_step(_2088a4bc9_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_20894d7de_Var>* _23933_keyA, jule::Ptr<_20894d7de_Var>* _23950_keyB);
inline jule::I64 _2088a636d_len(_2088a4bc9_comptimeStatics* _self_);
inline jule::Str _2088a6a00_Str(_2088a6648_comptimeEnumField* _self_);
inline jule::Bool _2088a6d41_Equal(jule::Ptr<_2088a6648_comptimeEnumField> _self_, jule::Ptr<_2089ce661_Type> _26318_other);
inline jule::Ptr<_20899a9a1_Data> _2088a733b__Decl(jule::Ptr<_2088a6648_comptimeEnumField> _self_, jule::Ptr<_20899c970_eval>* _26727_e, jule::Ptr<_2087303a1_FnCallExpr>* _26742_fc);
inline jule::Ptr<_20899a9a1_Data> _2088a767c_subIdent(jule::Ptr<_2088a6648_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _2088a7e1e_Str(_2088a7957_comptimeEnumFields* _self_);
inline jule::Bool _2088a8260_Equal(jule::Ptr<_2088a7957_comptimeEnumFields> _self_, jule::Ptr<_2089ce661_Type> _30118_other);
inline void _2088a866c_ready(_2088a7957_comptimeEnumFields* _self_, jule::Ptr<_20894d7de_Var>* _30526_keyA, jule::Ptr<_20894d7de_Var>* _30543_keyB);
inline void _2088a89d0_index(_2088a7957_comptimeEnumFields* _self_, jule::Ptr<_20899a9a1_Data>* _32626_d, jule::I64 _32636_i);
inline void _2088a8ded_step(_2088a7957_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_20894d7de_Var>* _33733_keyA, jule::Ptr<_20894d7de_Var>* _33750_keyB);
inline jule::I64 _2088a9184_len(_2088a7957_comptimeEnumFields* _self_);
inline jule::Str _2088a9816_Str(_2088a945e_comptimeParam* _self_);
inline jule::Bool _2088a9b57_Equal(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_2089ce661_Type> _36118_other);
inline jule::Ptr<_20899a9a1_Data> _2088aa174__Decl(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_20899c970_eval>* _36527_e, jule::Ptr<_2087303a1_FnCallExpr>* _36542_fc);
inline jule::Ptr<_20899a9a1_Data> _2088aa570__Type(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_20899c970_eval>* _37727_e, jule::Ptr<_2087303a1_FnCallExpr>* _37742_fc);
inline jule::Ptr<_20899a9a1_Data> _2088aa96b__Recv(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_20899c970_eval>* _38527_e, jule::Ptr<_2087303a1_FnCallExpr>* _38542_fc);
inline jule::Ptr<_20899a9a1_Data> _2088aacac_subIdent(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _2088ab560_Str(_2088ab2b8_comptimeParams* _self_);
inline jule::Bool _2088ab8a1_Equal(jule::Ptr<_2088ab2b8_comptimeParams> _self_, jule::Ptr<_2089ce661_Type> _43418_other);
inline void _2088abd35_ready(_2088ab2b8_comptimeParams* _self_, jule::Ptr<_20894d7de_Var>* _43826_keyA, jule::Ptr<_20894d7de_Var>* _43843_keyB);
inline void _2088ac198_index(_2088ab2b8_comptimeParams* _self_, jule::Ptr<_20899a9a1_Data>* _45926_d, jule::I64 _45936_i);
inline void _2088ac5b6_step(_2088ab2b8_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_20894d7de_Var>* _47033_keyA, jule::Ptr<_20894d7de_Var>* _47050_keyB);
inline jule::I64 _2088ac84c_len(_2088ab2b8_comptimeParams* _self_);
inline jule::Str _2088acece_Str(_2088acb27_comptimeTypeInfos* _self_);
inline jule::Bool _2088ad320_Equal(jule::Ptr<_2088acb27_comptimeTypeInfos> _self_, jule::Ptr<_2089ce661_Type> _49418_other);
inline void _2088ad7a4_ready(_2088acb27_comptimeTypeInfos* _self_, jule::Ptr<_20894d7de_Var>* _49826_keyA, jule::Ptr<_20894d7de_Var>* _49843_keyB);
inline void _2088adb17_index(_2088acb27_comptimeTypeInfos* _self_, jule::Ptr<_20899a9a1_Data>* _51926_d, jule::I64 _51936_i);
inline void _2088ae035_step(_2088acb27_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_20894d7de_Var>* _52833_keyA, jule::Ptr<_20894d7de_Var>* _52850_keyB);
inline jule::I64 _2088ae2bb_len(_2088acb27_comptimeTypeInfos* _self_);
inline jule::Str _2088ae94d_Str(_2088ae596_comptimeTypeInfo* _self_);
inline jule::Bool _2088aec8e_Equal(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_2089ce661_Type> _55218_other);
inline jule::Ptr<_20899a9a1_Data> _2088b03cc__Decl(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _55627_e, jule::Ptr<_2087303a1_FnCallExpr>* _55642_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b07c8__Str(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _59322_e, jule::Ptr<_2087303a1_FnCallExpr>* _59337_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b0bc4__Kind(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _60627_e, jule::Ptr<_2087303a1_FnCallExpr>* _60642_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b10c0__Bits(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _68627_e, jule::Ptr<_2087303a1_FnCallExpr>* _68642_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b14bb__Elem(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _71027_e, jule::Ptr<_2087303a1_FnCallExpr>* _71042_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b18b7__Size(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _74327_e, jule::Ptr<_2087303a1_FnCallExpr>* _74342_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b1cb3__Key(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _76226_e, jule::Ptr<_2087303a1_FnCallExpr>* _76241_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b21ae__Value(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _77528_e, jule::Ptr<_2087303a1_FnCallExpr>* _77543_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b25aa__Fields(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _78829_e, jule::Ptr<_2087303a1_FnCallExpr>* _78844_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b29a6__Statics(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _81730_e, jule::Ptr<_2087303a1_FnCallExpr>* _81745_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b2da2__Binded(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _83629_e, jule::Ptr<_2087303a1_FnCallExpr>* _83644_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b329d__Ordered(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _84926_e, jule::Ptr<_2087303a1_FnCallExpr>* _84941_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b3699__Comparable(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _86229_e, jule::Ptr<_2087303a1_FnCallExpr>* _86244_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b3a95__Mutable(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _87526_e, jule::Ptr<_2087303a1_FnCallExpr>* _87541_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b3e91__Types(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _88828_e, jule::Ptr<_2087303a1_FnCallExpr>* _88843_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b438c__CanNil(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _91129_e, jule::Ptr<_2087303a1_FnCallExpr>* _91144_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b4788__GC(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _92425_e, jule::Ptr<_2087303a1_FnCallExpr>* _92440_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b4b84__Result(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _93729_e, jule::Ptr<_2087303a1_FnCallExpr>* _93744_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b5080__Params(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _95329_e, jule::Ptr<_2087303a1_FnCallExpr>* _95344_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b53c1_subIdent(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _2088b5a53_Str(_2088b569b_comptimeValue* _self_);
inline jule::Bool _2088b5d94_Equal(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_2089ce661_Type> _111818_other);
inline jule::Ptr<_20899a9a1_Data> _2088b6405__Unwrap(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _112229_e, jule::Ptr<_2087303a1_FnCallExpr>* _112244_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b6801__Type(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _113027_e, jule::Ptr<_2087303a1_FnCallExpr>* _113042_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b6bec__Lvalue(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _113829_e, jule::Ptr<_2087303a1_FnCallExpr>* _113844_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b70e8__Mutable(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _115130_e, jule::Ptr<_2087303a1_FnCallExpr>* _115145_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b74e4__Const(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _116428_e, jule::Ptr<_2087303a1_FnCallExpr>* _116443_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b78e0__Field(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _117728_e, jule::Ptr<_2087303a1_FnCallExpr>* _117743_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b7cdb__Method(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _121229_e, jule::Ptr<_2087303a1_FnCallExpr>* _121244_fc);
inline jule::Ptr<_20899a9a1_Data> _2088b812c_subIdent(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Str* _125926_ident);
inline jule::Str _2088b87ae_Str(_2088b8407_comptimeFiles* _self_);
inline jule::Bool _2088b8b00_Equal(jule::Ptr<_2088b8407_comptimeFiles> _self_, jule::Ptr<_2089ce661_Type> _132318_other);
inline void _2088b9084_ready(_2088b8407_comptimeFiles* _self_, jule::Ptr<_20894d7de_Var>* _132726_keyA, jule::Ptr<_20894d7de_Var>* _132743_keyB);
inline void _2088b93e7_index(_2088b8407_comptimeFiles* _self_, jule::Ptr<_20899a9a1_Data>* _134826_d, jule::I64 _134836_i);
inline void _2088b9815_step(_2088b8407_comptimeFiles* _self_, jule::I64 _135920_i, jule::Ptr<_20894d7de_Var>* _135933_keyA, jule::Ptr<_20894d7de_Var>* _135950_keyB);
inline jule::I64 _2088b9a9b_len(_2088b8407_comptimeFiles* _self_);
inline jule::Str _2088ba22d_Str(_2088b9d76_comptimeFile* _self_);
inline jule::Bool _2088ba56e_Equal(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_2089ce661_Type> _138318_other);
inline jule::Ptr<_20899a9a1_Data> _2088baa8b__Path(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_20899c970_eval>* _138727_e, jule::Ptr<_2087303a1_FnCallExpr>* _138742_fc);
inline jule::Ptr<_20899a9a1_Data> _2088bae87__Name(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_20899c970_eval>* _140027_e, jule::Ptr<_2087303a1_FnCallExpr>* _140042_fc);
inline jule::Ptr<_20899a9a1_Data> _2088bb383__Dir(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_20899c970_eval>* _141326_e, jule::Ptr<_2087303a1_FnCallExpr>* _141341_fc);
inline jule::Ptr<_20899a9a1_Data> _2088bb6c4_subIdent(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Str* _142626_ident);
inline jule::Str _2088bc087_Str(_2088bb99e_comptimeDecls* _self_);
inline jule::Bool _2088bc3c8_Equal(jule::Ptr<_2088bb99e_comptimeDecls> _self_, jule::Ptr<_2089ce661_Type> _146218_other);
inline void _2088bc74c_ready(_2088bb99e_comptimeDecls* _self_, jule::Ptr<_20894d7de_Var>* _146626_keyA, jule::Ptr<_20894d7de_Var>* _146643_keyB);
inline void _2088bcab0_index(_2088bb99e_comptimeDecls* _self_, jule::Ptr<_20899a9a1_Data>* _148726_d, jule::I64 _148736_i);
inline void _2088bcecd_step(_2088bb99e_comptimeDecls* _self_, jule::I64 _149620_i, jule::Ptr<_20894d7de_Var>* _149633_keyA, jule::Ptr<_20894d7de_Var>* _149650_keyB);
inline jule::I64 _2088bd264_len(_2088bb99e_comptimeDecls* _self_);
inline jule::Str _2088be144_Str(_2088bdc8c_comptimeDecl* _self_);
inline jule::Bool _2088be485_Equal(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_2089ce661_Type> _153518_other);
inline jule::Str _2088be8d6_declAsStr(_2088bdc8c_comptimeDecl* _self_);
inline jule::Ptr<_20899a9a1_Data> _2088becd2__Name(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _156627_e, jule::Ptr<_2087303a1_FnCallExpr>* _156642_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c01cd__Public(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _160429_e, jule::Ptr<_2087303a1_FnCallExpr>* _160444_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c05c9__Binded(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _164229_e, jule::Ptr<_2087303a1_FnCallExpr>* _164244_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c09c5__Exceptional(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _167634_e, jule::Ptr<_2087303a1_FnCallExpr>* _167649_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c0dc1__Mutable(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _169730_e, jule::Ptr<_2087303a1_FnCallExpr>* _169745_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c12bc__Variadic(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _173031_e, jule::Ptr<_2087303a1_FnCallExpr>* _173046_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c16b8__Reference(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _176132_e, jule::Ptr<_2087303a1_FnCallExpr>* _176147_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c1ab4__Params(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _179329_e, jule::Ptr<_2087303a1_FnCallExpr>* _179344_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c1eb0__Fields(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _182829_e, jule::Ptr<_2087303a1_FnCallExpr>* _182844_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c23ab__Statics(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _186930_e, jule::Ptr<_2087303a1_FnCallExpr>* _186945_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c27a7__Methods(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _190530_e, jule::Ptr<_2087303a1_FnCallExpr>* _190545_fc);
inline jule::Ptr<_20899a9a1_Data> _2088c2ae8_subIdent(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Str* _194626_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*> _2088c5aa7_readyFn(jule::Ptr<_2088c5678_constraintChecker> _self_);
inline jule::Bool _2088c5d3d_readyFi(jule::Ptr<_2088c5678_constraintChecker> _self_);
inline jule::Bool _2088c60c4_readySi(jule::Ptr<_2088c5678_constraintChecker> _self_);
inline jule::Bool _2088c635a_ready(jule::Ptr<_2088c5678_constraintChecker> _self_);
inline jule::Bool _2088c65e1_check(jule::Ptr<_2088c5678_constraintChecker> _self_);
inline jule::Bool _2088c7d73_IsTraitImpl(_2088c7977_Impl* _self_);
inline jule::Bool _2088c8109_IsStructImpl(_2088c7977_Impl* _self_);
inline jule::Bool _2088cc2b7_IsWhileNext(_2088cbd11_WhileIter* _self_);
inline jule::Ptr<_20890d040_ImportInfo> _2088d3642_SelectPackage(_2088d3169_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _24029_selector);
inline jule::Ptr<_20894d7de_Var> _2088d3a3d_FindVar(_2088d3169_scopeChecker* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_2089cd94b_TypeAlias> _2088d3e39_FindTypeAlias(_2088d3169_scopeChecker* _self_, jule::Str _26829_ident, jule::Bool _26841_binded);
inline jule::Ptr<_208746230_Struct> _2088d4335_FindStruct(_2088d3169_scopeChecker* _self_, jule::Str _29326_ident, jule::Bool _29338_binded);
inline jule::Ptr<_20881e2b4_Fn> _2088d4731_FindFn(_2088d3169_scopeChecker* _self_, jule::Str _30222_ident, jule::Bool _30234_binded);
inline jule::Ptr<_2088299c8_Trait> _2088d4a72_FindTrait(_2088d3169_scopeChecker* _self_, jule::Str _31125_ident);
inline jule::Ptr<_20882c17e_Enum> _2088d4db3_FindEnum(_2088d3169_scopeChecker* _self_, jule::Str _32024_ident);
inline jule::Ptr<_20882d889_TypeEnum> _2088d5204_FindTypeEnum(_2088d3169_scopeChecker* _self_, jule::Str _32928_ident);
inline jule::Bool _2088d5556_isUnsafe(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline jule::Bool _2088d57dc_isRoot(_2088d3169_scopeChecker* _self_);
inline void _2088d59da_stop(_2088d3169_scopeChecker* _self_);
inline jule::Bool _2088d5c71_stopped(_2088d3169_scopeChecker* _self_);
inline jule::Bool _2088d6007_isDeferred(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline void _2088d62b0_pushCaptured(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20894d7de_Var>* _39134_v);
inline jule::Ptr<_2088d3169_scopeChecker> _2088d6546_getRoot(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline jule::Ptr<_2088d3169_scopeChecker> _2088d67cc_getHardRoot(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline jule::Ptr<_2088eaeb7_ReferenceStack> _2088d6a63_getOwnerRefers(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline jule::Ptr<_20894d7de_Var> _2088d6da4_findVar(_2088d3169_scopeChecker* _self_, jule::Str _43823_ident);
inline jule::Ptr<_2088cd472_Label> _2088d71e5_findLabel(_2088d3169_scopeChecker* _self_, jule::Str* _45926_ident);
inline jule::Ptr<_2088d1ca0_scopeLabel> _2088d7536_findLabelScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Str* _47532_ident);
inline jule::Ptr<_2088d1ca0_scopeLabel> _2088d7877_findLabelAll(_2088d3169_scopeChecker* _self_, jule::Str* _48629_ident);
inline jule::Bool _2088d7c73_isDuplicatedIdent(_2088d3169_scopeChecker* _self_, jule::Uintptr _49833_itself, jule::Str* _49851_ident);
inline void _2088d802b_checkVarDecl(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873a28a_VarDecl> _51833_decl);
inline void _2088d82d4_checkTypeAlias(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _54936_ta);
inline void _2088d858c_checkTypeAliasDecl(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873e019_TypeAliasDecl> _56539_decl);
inline jule::Ptr<_2088ca969_Scope> _2088d8823_getChild(_2088d3169_scopeChecker* _self_);
inline void _2088d8c41_checkChildSsc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _57635_tree, jule::Ptr<_2088ca969_Scope>* _57663_s, jule::Ptr<_2088d3169_scopeChecker>* _57679_ssc);
inline jule::Ptr<_2088ca969_Scope> _2088d913c_checkChildSc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _58334_tree, jule::Ptr<_2088d3169_scopeChecker>* _58362_ssc);
inline jule::Ptr<_2088ca969_Scope> _2088d947d_checkChild(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _58932_tree);
inline void _2088d9736_checkAnonScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree> _59435_tree);
inline void _2088d9a99_processErrorCall(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20881a139_BuiltinErrorCallExpr>* _59938_m, jule::Ptr<_208711827_Token> _59964_err);
inline void _2088d9d52_checkExpr(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20872b677_Expr> _61230_expr);
inline jule::Ptr<_2088cad43_If> _2088da193_checkIf(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873cd70_If> _64228_i);
inline jule::Ptr<_2088cb1b7_Else> _2088da4d4_checkElse(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873d249_Else> _66230_e);
inline void _2088da78c_checkConditional(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873d700_Conditional> _66837_conditional);
inline void _2088dac65_checkIterScopeSsc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _68434_it, jule::Ptr<_208737441_ScopeTree> _68451_tree, jule::Ptr<_2088ca969_Scope>* _68479_s, jule::Ptr<_2088d3169_scopeChecker> _68494_ssc);
inline jule::Ptr<_2088ca969_Scope> _2088db21b_checkIterScopeSc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _68933_it, jule::Ptr<_208737441_ScopeTree> _68950_tree, jule::Ptr<_2088d3169_scopeChecker> _68977_ssc);
inline jule::Ptr<_2088ca969_Scope> _2088db617_checkIterScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _69531_it, jule::Ptr<_208737441_ScopeTree>* _69549_tree);
inline void _2088db8c0_checkInfIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _70034_it);
inline void _2088dbb78_checkWhileIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _70636_it);
inline void _2088dc096_checkComptimeRangeIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _75644_it, jule::Ptr<_2088cc7e5_RangeIter>* _75665_kind, jule::Ptr<_20899a9a1_Data>* _75688_d);
inline void _2088dc34e_checkRangeIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _81336_it);
inline void _2088dc607_checkIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter> _88030_it);
inline jule::Bool _2088dc948_checkValidContLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _90436_it);
inline jule::Bool _2088dcc89_checkValidBreakLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _92037_ptr);
inline jule::Ptr<_2088ccae2_ContSt> _2088dd0ca_checkContValidScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c8b9_ContSt> _94336_c);
inline void _2088dd383_checkCont(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c8b9_ContSt> _96726_c);
inline void _2088dd63b_checkLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208734927_LabelSt> _101431_l);
inline void _2088dd8e4_pushGoto(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208734d01_GotoSt> _103329_gt);
inline void _2088ddb9c_checkPostfix(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt> _104433_a);
inline jule::Bool _2088ddedd_isNewAssignIdent(_2088d3169_scopeChecker* _self_, jule::Str _108032_ident);
inline void _2088de296_removeInteriorMutRisk(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20899a9a1_Data>* _109343_d);
inline void _2088de54e_checkSingleAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt>* _110739_a);
inline void _2088deb8c_processEndPartOfMultiAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _118749_st, jule::Ptr<_208735ce1_AssignSt>* _118772_a, jule::Ptr<_20873575d_AssignLeft>* _11888_lexpr, jule::Ptr<_20899a9a1_Data>* _118838_l, _2088ca1d8_exprPart* _118853_r, jule::Bool _118866_strict);
inline __jule_tuple_s_2088ca1d8_exprPart__jule_tuple_x_20899a9a1_Data__jule_tuple_bool _2088e0088_getRightExprsOfMultiAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt> _126347_a, jule::Ptr<_20899c970_eval> _12647_eval);
inline void _2088e0341_checkMultiAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt>* _133738_a);
inline void _2088e05e9_checkAssignSt(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt> _141034_a);
inline jule::Ptr<_2088ca969_Scope> _2088e09e5_checkCaseScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0c5a_Case>* _142132_c, jule::Ptr<_208737441_ScopeTree>* _142147_tree);
inline jule::Ptr<_2088d0c5a_Case> _2088e1056_checkCase(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0463_Match> _142730_m, jule::I64 _142741_i, jule::Ptr<_20873e4c0_Case> _142753_c, jule::Ptr<_20899a9a1_Data> _142772_expr);
inline void _2088e1474_checkCases(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase>* _150432_m, jule::Ptr<_2088d0463_Match> _150456_rm, jule::Ptr<_20899a9a1_Data> _150472_expr);
inline jule::Ptr<_2088d0c5a_Case> _2088e1870_checkDefault(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0463_Match> _152533_m, jule::Ptr<_20873d249_Else> _152548_d);
inline void _2088e1bd3_checkComptimePanic(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208711827_Token> _153339_callToken, jule::Ptr<_2088ca969_Scope>* _153366_s);
inline void _2088e2046_processConstMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0463_Match>* _156539_tm, jule::Ptr<_20873ecd9_MatchCase>* _156556_m);
inline void _2088e22ee_checkTypeMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase>* _159436_m);
inline void _2088e25a7_checkCommonMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase>* _163738_m);
inline void _2088e2860_checkMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase> _168831_m);
inline void _2088e2b18_checkFall(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2087350ed_FallSt> _169626_f);
inline jule::Ptr<_2088ccebb_BreakSt> _2088e2e59_checkBreakWithLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c4e0_BreakSt> _171936_b);
inline jule::Ptr<_2088ccebb_BreakSt> _2088e329a_checkPlainBreak(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c4e0_BreakSt> _177732_b);
inline void _2088e3553_checkBreak(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c4e0_BreakSt> _179927_b);
inline void _2088e380b_checkRet(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873a664_RetSt> _181029_r);
inline void _2088e3ab4_checkUseExpr(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20872c04b_UseExpr> _183629_ue);
inline void _2088e3d6c_checkNode(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Any* _185231_node);
inline void _2088e406a_checkResult(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline void _2088e4268_checkTree(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline void _2088e45cb_checkGoto(_2088d3169_scopeChecker* _self_, jule::Ptr<_2088cdad2_GotoSt>* _195530_gt, jule::Ptr<_2088d1ca0_scopeLabel>* _195548_label);
inline void _2088e47c9_checkGotos(_2088d3169_scopeChecker* _self_);
inline void _2088e49c7_checkLabels(_2088d3169_scopeChecker* _self_);
inline void _2088e4bc5_checkVars(_2088d3169_scopeChecker* _self_);
inline void _2088e4dc3_checkAliases(_2088d3169_scopeChecker* _self_);
inline void _2088e5236_check(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _205027_tree, jule::Ptr<_2088ca969_Scope>* _205055_s);
inline jule::Ptr<_2088d3169_scopeChecker> _2088e54bc_newChildChecker(jule::Ptr<_2088d3169_scopeChecker> _self_);
inline void _2088e8b0d_checkCdef(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _1626_d);
inline void _2088e8db6_checkTypedef(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _3229_d);
inline void _2088e916e_checkNamespace(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _4835_d);
inline void _2088e9427_checkDeprecated(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _10036_d);
inline void _2088e96d0_checkTest(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _14126_d);
inline void _2088e9988_checkExport(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _16232_d);
inline void _2088e9c41_checkDirective(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _20035_d);
inline void _2088e9e3e_check(_2088e86ac_directiveChecker* _self_);
inline jule::Ptr<_2088eaeb7_ReferenceStack> static__2088eb32a_new(void);
inline jule::I64 _2088eb726_Len(_2088eaeb7_ReferenceStack* _self_);
inline jule::Any _2088eba67_At(_2088eaeb7_ReferenceStack* _self_, jule::I64 _4318_i);
inline void _2088ebd20_Push(_2088eaeb7_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _2196e1076_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_2087490bd_StructIns> _5320_t);
inline jule::Bool _2196ebe1c_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_208822372_FnIns> _5320_t);
inline jule::Bool _219713263_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_20894d7de_Var> _5320_t);
inline jule::Bool _219b2a603_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_2088299c8_Trait> _5320_t);
inline void _2089029c4_pushErr(_208901ebd_symBuilder* _self_, jule::Ptr<_208711827_Token>* _30824_token, jule::Str _30846_fmt, jule::Slice<jule::Any> _30866_args);
inline void _208903255_pushSuggestion(_208901ebd_symBuilder* _self_, jule::Str _31730_fmt, jule::Slice<jule::Any> _31750_args);
inline jule::Bool _208903651_checkCppUseDeclPath(_208901ebd_symBuilder* _self_, jule::Ptr<_20874036c_UseDecl>* _32136_decl, jule::Str* _32158_path);
inline jule::Ptr<_20890d040_ImportInfo> _20890395e_buildCppHeaderImport(_208901ebd_symBuilder* _self_, jule::Ptr<_20874036c_UseDecl>* _34141_decl);
inline jule::Str _208903d5a_checkAbsPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Str _37133_filepath, jule::Ptr<_20874036c_UseDecl>* _37153_decl);
inline jule::Str _208904256_checkStdAbsPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Str _40036_filepath, jule::Ptr<_20874036c_UseDecl>* _40056_decl);
inline __jule_tuple_bool__jule_tuple_str _208904597_checkImpPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20874036c_UseDecl>* _42334_decl);
inline void _208904850_assignAlias(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20890d040_ImportInfo>* _45333_imp);
inline jule::Ptr<_20890d040_ImportInfo> _208904b91_buildImport(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20874036c_UseDecl>* _46033_decl);
inline jule::Ptr<_20890d040_ImportInfo> _208904ed2_findUseDecl(_208901ebd_symBuilder* _self_, jule::Ptr<_20890d040_ImportInfo>* _48728_pkg);
inline jule::Bool _208905323_checkDuplicateUseDecl(_208901ebd_symBuilder* _self_, jule::Ptr<_20890d040_ImportInfo>* _49542_pkg);
inline jule::Str _208905664_getAsLinkPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Str _50534_path);
inline void _208905a82_pushCycleError(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_208901ebd_symBuilder>* _52632_sb, jule::Str _52649_path, _21e64c5b5_Builder* _52665_message);
inline void _208905ea0_pushCrossCycleError(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_208901ebd_symBuilder>* _53937_target, jule::Ptr<_20890d040_ImportInfo>* _53959_imp, jule::Ptr<_208711827_Token>* _53978_errorToken);
inline jule::Bool _20890639b_checkImportCycles(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20890d040_ImportInfo> _56234_imp, jule::Ptr<_20874036c_UseDecl>* _56253_decl);
inline void _2089067b9_checkPackageAccessibility(_208901ebd_symBuilder* _self_, jule::Ptr<_20874036c_UseDecl>* _59342_decl, jule::Str* _59364_mod, jule::Str* _59375_path);
inline jule::Bool _208906bb5_importPackage(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20890d040_ImportInfo>* _62335_imp, jule::Ptr<_20874036c_UseDecl>* _62358_decl);
inline jule::Ptr<_20890d040_ImportInfo> _208907006_importUseDecl(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20874036c_UseDecl>* _66935_decl);
inline void _208907204_importUseDecls(jule::Ptr<_208901ebd_symBuilder> _self_);
inline void _2089074ac_appendNode(_208901ebd_symBuilder* _self_, _208726342_Node* _69831_node);
inline void _2089076aa_appendNodes(_208901ebd_symBuilder* _self_);
inline void _208907963_pushDirectivePass(_208901ebd_symBuilder* _self_, jule::Ptr<_208726760_Directive>* _73438_d);
inline void _208907b61_appendTopDirectives(_208901ebd_symBuilder* _self_);
inline void _208907d5e_build(jule::Ptr<_208901ebd_symBuilder> _self_);
inline jule::Ptr<_20890d040_ImportInfo> _20890d55c_SelectPackage(_20890d040_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> );
inline jule::Ptr<_20894d7de_Var> _20890d958_FindVar(_20890d040_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_2089cd94b_TypeAlias> _20890dd54_FindTypeAlias(_20890d040_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_208746230_Struct> _20890e250_FindStruct(_20890d040_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_20881e2b4_Fn> _20890e64b_FindFn(_20890d040_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_2088299c8_Trait> _20890e98c_FindTrait(_20890d040_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_20882c17e_Enum> _20890eccd_FindEnum(_20890d040_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_20882d889_TypeEnum> _20891011e_FindTypeEnum(_20890d040_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _2089104d7_isLookupable(_20890d040_ImportInfo* _self_);
inline jule::Ptr<_20890d040_ImportInfo> _208910c8a_SelectPackage(_2089107b2_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> );
inline jule::Ptr<_20894d7de_Var> _208911186_FindVar(_2089107b2_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_2089cd94b_TypeAlias> _208911582_FindTypeAlias(_2089107b2_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_208746230_Struct> _20891197d_FindStruct(_2089107b2_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_20881e2b4_Fn> _208911d79_FindFn(_2089107b2_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_2088299c8_Trait> _2089121ba_FindTrait(_2089107b2_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_20882c17e_Enum> _20891250b_FindEnum(_2089107b2_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_20882d889_TypeEnum> _20891284c_FindTypeEnum(_2089107b2_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_2088ae596_comptimeTypeInfo> _208929c0a_pushComptimeTypeInfo(_208929765_commonSemaMeta* _self_, jule::Ptr<_2089ce661_Type>* _21141_t);
inline jule::Ptr<_20890d040_ImportInfo> _20892ac2d_SelectPackage(_20892a755_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _24729_selector);
inline jule::Ptr<_20894d7de_Var> _20892b129_FindVar(_20892a755_sema* _self_, jule::Str _25723_ident, jule::Bool _25735_binded);
inline jule::Ptr<_2089cd94b_TypeAlias> _20892b525_FindTypeAlias(_20892a755_sema* _self_, jule::Str _27229_ident, jule::Bool _27241_binded);
inline jule::Ptr<_208746230_Struct> _20892b921_FindStruct(_20892a755_sema* _self_, jule::Str _28726_ident, jule::Bool _28738_binded);
inline jule::Ptr<_20881e2b4_Fn> _20892bd1c_FindFn(_20892a755_sema* _self_, jule::Str _30222_ident, jule::Bool _30234_binded);
inline jule::Ptr<_2088299c8_Trait> _20892c15d_FindTrait(_20892a755_sema* _self_, jule::Str _31725_ident);
inline jule::Ptr<_20882c17e_Enum> _20892c49e_FindEnum(_20892a755_sema* _self_, jule::Str _33224_ident);
inline jule::Ptr<_20882d889_TypeEnum> _20892c7e0_FindTypeEnum(_20892a755_sema* _self_, jule::Str _34728_ident);
inline jule::Bool _20892cbec_isFlag(_20892a755_sema* _self_, jule::I64 _35918_flags);
inline jule::Ptr<_2088255b7_SymTab> _20892ce83_getCurrentFile(_20892a755_sema* _self_);
inline void _20892d23b_setCurrentFile(_20892a755_sema* _self_, jule::Ptr<_2088255b7_SymTab> _36234_f);
inline void _20892d659_pushErr(_20892a755_sema* _self_, jule::Ptr<_208711827_Token> _36423_token, jule::Str _36445_fmt, jule::Slice<jule::Any> _36465_args);
inline void _20892d9bc_pushSuggestion(_20892a755_sema* _self_, jule::Str _36930_fmt, jule::Slice<jule::Any> _36950_args);
inline jule::Bool _20892ddb8_isAccessibleDefine(_20892a755_sema* _self_, jule::Bool _37530_public, jule::Ptr<_208711827_Token> _37544_token);
inline jule::Bool _20892e36e_isDuplicatedIdent(_20892a755_sema* _self_, jule::Uintptr _39829_itself, jule::Str* _39847_ident, jule::Bool _39859_binded);
inline void _20892e6d2_checkDirectives(jule::Ptr<_20892a755_sema> _self_, jule::Slice<jule::Ptr<_208726760_Directive>>* _40737_d, jule::Any _40763_o);
inline jule::Bool _20892eb88_checkGenericQuantity(_20892a755_sema* _self_, jule::I64 _41636_required, jule::I64 _41651_given, jule::Ptr<_208711827_Token> _41663_token);
inline jule::Bool _208930bbc_isUseAliasDuplication(_20892a755_sema* _self_, jule::Ptr<_20890d040_ImportInfo>* _47438_imp);
inline jule::Bool _20893100d_checkAutoAlias(_20892a755_sema* _self_, jule::Ptr<_20890d040_ImportInfo>* _48635_imp);
inline jule::Bool _20893134e_checkImport(_20892a755_sema* _self_, jule::Ptr<_20890d040_ImportInfo>* _50432_imp);
inline void _20893154c_checkImports(_20892a755_sema* _self_);
inline void _20893174a_implFileImpls(jule::Ptr<_20892a755_sema> _self_);
inline void _208931948_implImpls(jule::Ptr<_20892a755_sema> _self_);
inline void _208931b46_checkEnums(jule::Ptr<_20892a755_sema> _self_);
inline void _208931d44_checkFileInherits(jule::Ptr<_20892a755_sema> _self_);
inline void _208932042_checkInherits(jule::Ptr<_20892a755_sema> _self_);
inline _2089e2751_typeChecker _2089324e8_typeChecker(jule::Ptr<_20892a755_sema> _self_, jule::Trait _59732_l, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _59747_generics, jule::Ptr<_2089e1761_referencer> _5987_referencer);
inline jule::Ptr<_2089ce661_Type> _208932a59_buildTypeWithRefers(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _62441_t, jule::Trait _62464_l, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _6257_generics, jule::Ptr<_2089e1761_referencer> _62535_referencer);
inline jule::Bool _2089330ba_checkTypeSymWithRefers(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d7a65_TypeSym>* _63144_t, jule::Trait _63161_l, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _6327_generics, jule::Ptr<_2089e1761_referencer> _63235_referencer);
inline jule::Ptr<_2088c5678_constraintChecker> _208933351_constraintChecker(jule::Ptr<_20892a755_sema> _self_);
inline jule::Bool _20893374c_checkTypeSym(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d7a65_TypeSym>* _64634_t, jule::Trait _64651_l);
inline jule::Ptr<_2089ce661_Type> _208933c03_checkTypeSymRefers(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _65140_t, jule::Trait _65163_l, jule::Ptr<_2088eaeb7_ReferenceStack> _65178_refers);
inline jule::Ptr<_2089ce661_Type> _2089341a9_buildTypeWithGenerics(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _66343_t, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _6647_generics, jule::Ptr<_2088eaeb7_ReferenceStack> _66435_refers);
inline jule::Ptr<_2089ce661_Type> _20893483b_selectType(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _68132_t);
inline jule::Ptr<_20899c970_eval> _208934ce2_evalpd(jule::Ptr<_20892a755_sema> _self_, jule::Trait _69327_l, jule::Ptr<_2089ce661_Type> _69342_p, jule::Ptr<_20894d7de_Var> _69356_owner);
inline jule::Ptr<_20899c970_eval> _2089351dd_evalp(jule::Ptr<_20892a755_sema> _self_, jule::Trait _70826_l, jule::Ptr<_2089ce661_Type> _70841_p);
inline jule::Ptr<_20899c970_eval> _20893552e_eval(jule::Ptr<_20892a755_sema> _self_, jule::Trait _71325_l);
inline jule::Bool _208935b4a_checkAssignType(jule::Ptr<_20892a755_sema> _self_, jule::Bool _71832_destIsRef, jule::Ptr<_2089ce661_Type>* _71854_dest, jule::Ptr<_20899a9a1_Data>* _7198_d, jule::Ptr<_208711827_Token> _71922_errorToken, jule::Ptr<_2088eaeb7_ReferenceStack> _71953_refers);
inline jule::Bool _208936101__checkTypeCompatibility(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089ce661_Type>* _76145_dest, jule::Ptr<_2089ce661_Type>* _76163_src, jule::Ptr<_208711827_Token> _7627_errorToken);
inline jule::Bool _2089365a7_checkTypeCompatibility(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089ce661_Type>* _77944_dest, jule::Ptr<_2089ce661_Type>* _7808_src, jule::Ptr<_208711827_Token>* _78025_errorToken);
inline void _2089369c5_pushCompatiblityError(_20892a755_sema* _self_, jule::Ptr<_2089ce661_Type>* _78842_dest, jule::Ptr<_20899a9a1_Data>* _78860_src, jule::Ptr<_208711827_Token>* _7898_errorToken);
inline jule::Bool _208936e7b_checkTypeCompatibility1(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089ce661_Type>* _80645_dest, jule::Ptr<_20899a9a1_Data>* _80663_src, jule::Ptr<_208711827_Token>* _8078_errorToken);
inline jule::Ptr<_2089ce661_Type> _208937432_buildNonGenericType(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _82141_ast, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _8228_generics, jule::Slice<jule::Ptr<_2089ce661_Type>>* _82244_ignored);
inline jule::Bool _20893782d_buildFnNonGenericTypes(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns> _83343_f, jule::Slice<jule::Ptr<_2089ce661_Type>>* _83359_ignored);
inline jule::Ptr<_208822372_FnIns> _208937b6e_getTraitCheckFnKind(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _85641_f);
inline jule::Bool _208938125_checkConstraintsFn(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _88540_f, jule::Ptr<_208711827_Token>* _88556_et, jule::Ptr<_208822372_FnIns> _88579_exist);
inline jule::Bool _2089385cb_checkConstraintsStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _89944_s, jule::Ptr<_208711827_Token>* _89964_et, jule::Ptr<_2087490bd_StructIns> _89987_exist);
inline jule::Bool _2089389c7_basicFnEnvironment(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _91640_f, jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*> _91651_algo);
inline jule::Bool _208938dc3_fnEnvironment(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _93635_f, jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*> _93646_algo);
inline void _20893917b_checkFnParamKind(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882121c_ParamIns>* _94838_p);
inline jule::Bool _2089394bc_reloadFnInsTypes(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns> _95237_f);
inline jule::Bool _208939973_checkRefValidityForInitExpr(jule::Ptr<_20892a755_sema> _self_, jule::Bool _99244_leftMut, jule::Ptr<_20899a9a1_Data>* _99264_d, jule::Ptr<_208711827_Token>* _99279_errorToken);
inline jule::Bool _208939cb4_isMutRiskyStruct(_20892a755_sema* _self_, jule::Ptr<_2087490bd_StructIns>* _100929_s);
inline jule::Bool _20893a3d0_checkValidityForInitExpr(jule::Ptr<_20892a755_sema> _self_, jule::Bool _103641_leftMut, jule::Bool _103656_leftRef, jule::Ptr<_2089ce661_Type>* _10374_leftKind, jule::Ptr<_20899a9a1_Data>* _103726_d, jule::Ptr<_208711827_Token>* _103741_errorToken);
inline jule::Bool _20893a7cb_checkTypeAliasDeclKind(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _106444_ta, jule::Trait _106464_l);
inline jule::Bool _20893abc7_checkTypeAliasDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _108740_ta, jule::Trait _108760_l);
inline void _20893ae80_checkTypeAliasDeclDup(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _111843_ta);
inline jule::Bool _20893b216_checkTypeAliasDecls(jule::Ptr<_20892a755_sema> _self_);
inline void _21931d80d_checkEnumItemsDup(_20892a755_sema* _self_, jule::Slice<jule::Ptr<_20882b623_EnumItem>> _113936_items);
inline void _21932b640_checkEnumItemsDup(_20892a755_sema* _self_, jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> _113936_items);
inline void _20893b777_checkEnumItemsStr(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882c17e_Enum>* _115939_e);
inline void _2192ed4ad_checkEnumItemInt(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20899c970_eval>* _118643_eval, jule::Ptr<_20882c17e_Enum>* _118661_e, jule::Ptr<_2089d846c_Prim>* _118672_prim, jule::Ptr<_20882b623_EnumItem>* _118690_item, jule::U64* _1186112_n);
inline void _21930d91e_checkEnumItemInt(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20899c970_eval>* _118643_eval, jule::Ptr<_20882c17e_Enum>* _118661_e, jule::Ptr<_2089d846c_Prim>* _118672_prim, jule::Ptr<_20882b623_EnumItem>* _118690_item, jule::I64* _1186112_n);
inline void _2192e97ea_checkEnumItemsInt1(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d846c_Prim>* _122241_prim, jule::Ptr<_20882c17e_Enum>* _122259_e);
inline void _2192e9ac5_checkEnumItemsInt1(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d846c_Prim>* _122241_prim, jule::Ptr<_20882c17e_Enum>* _122259_e);
inline void _20893c426_checkEnumItemsInt(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882c17e_Enum>* _125739_e);
inline void _20893c6ce_checkEnumDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882c17e_Enum>* _126735_e);
inline void _20893c987_checkTypeEnumDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882d889_TypeEnum>* _130839_e);
inline jule::Bool _20893cc1d_checkEnumDecls(jule::Ptr<_20892a755_sema> _self_);
inline jule::Bool _20893cea4_checkTypeEnumDecls(jule::Ptr<_20892a755_sema> _self_);
inline jule::Bool _20893d2e5_checkDeclGenerics(_20892a755_sema* _self_, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _137134_generics);
inline jule::Bool _20893d636_checkFnDeclParamsDup(_20892a755_sema* _self_, jule::Ptr<_20881e2b4_Fn>* _139837_f);
inline jule::Bool _20893d977_checkFnDeclResultDup(_20892a755_sema* _self_, jule::Ptr<_20881e2b4_Fn>* _143541_f);
inline jule::Bool _20893dcb8_checkFnVariadicParam(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _148042_f);
inline void _20893e071_checkFnDeclPrototype(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _149342_f);
inline jule::Bool _20893e527_catchTraitInheritCycle(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait> _151539_t1, jule::Ptr<_2088299c8_Trait> _151555_t2, _21e64c5b5_Builder* _151572_message);
inline jule::Bool _20893e868__checkTraitDeclInherits(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _153445_t);
inline void _20893eb21_checkTraitDeclInherits(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _157544_t);
inline void _20893edc9_checkTraitDeclMethod(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _160042_f);
inline void _208940182_checkTraitDeclMethods(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _161443_t);
inline void _20894043a_checkTraitDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _165036_t);
inline jule::Bool _2089406c1_checkTraitDecls(jule::Ptr<_20892a755_sema> _self_);
inline jule::Bool _208940abc_checkTraitImplMethods(_20892a755_sema* _self_, jule::Ptr<_2088299c8_Trait>* _167442_base, jule::Ptr<_2088c7977_Impl>* _167457_ipl);
inline jule::Bool _208940eb8_implToStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _168534_dest, jule::Ptr<_2088c7977_Impl>* _168554_ipl);
inline void _208941271_implTrait(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088c7977_Impl>* _173831_decl);
inline void _208941529_implStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088c7977_Impl>* _178132_decl);
inline void _2089417d2_implImpl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088c7977_Impl>* _180530_decl);
inline void _208941b45_checkVarDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _181634_decl, jule::Trait _181650_l);
inline void _208941ded_checkGlobalVarDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _186240_decl);
inline jule::Bool _208942184_checkGlobalDecls(jule::Ptr<_20892a755_sema> _self_);
inline jule::Bool _208942580_checkStructTraitImpl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _189042_strct, jule::Ptr<_2088299c8_Trait>* _189063_trt);
inline jule::Bool _2089428c1_checkStructImpls(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _191638_s);
inline jule::Bool _208942c12_checkStructFields(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _192439_st);
inline void _208942eba_checkStructDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _194137_s);
inline jule::Bool _208943251_checkStructDecls(jule::Ptr<_20892a755_sema> _self_);
inline void _208943509_checkAnonFuncDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _198539_f);
inline void _2089437b2_checkFuncDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _199035_f);
inline jule::Bool _208943b03_checkFuncDeclsBy(jule::Ptr<_20892a755_sema> _self_, jule::Slice<jule::Ptr<_20881e2b4_Fn>>* _201238_funcs);
inline jule::Bool _208943d89_checkFuncDecls(jule::Ptr<_20892a755_sema> _self_);
inline void _2089442a7_pushCycleError(_20892a755_sema* _self_, jule::Str* _202827_st1, jule::Str* _202838_st2, _21e64c5b5_Builder* _202853_message);
inline void _20894495b_checkPackageDecls(jule::Ptr<_20892a755_sema> _self_);
inline void _208944cbe_checkDataForTypeInference(_20892a755_sema* _self_, jule::Ptr<_20899a9a1_Data>* _208842_d, jule::Ptr<_208711827_Token>* _208853_errToken);
inline void _208945077_checkVarValue(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _210035_v);
inline void _2089453da_evalVarValue(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _214934_decl, jule::Trait _214950_l);
inline void _20894574d_checkVar(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _216630_decl, jule::Trait _216646_l);
inline void _20894594b_checkGlobals(jule::Ptr<_20892a755_sema> _self_);
inline jule::Ptr<_208822372_FnIns> _208945d47_readyToCheckFn(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _218936_s, jule::Ptr<_20881e2b4_Fn>* _218956_f);
inline __jule_tuple_bool__jule_tuple_bool _208946243_checkGenericFn(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _220536_f, jule::Ptr<_208711827_Token>* _220552_et);
inline void _2089465a6_checkTypeMethod(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _222837_s, jule::Ptr<_20881e2b4_Fn>* _222857_f);
inline jule::Bool _2089469a2_checkStructEnv(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _224436_s, jule::Ptr<_208711827_Token> _224455_errorToken);
inline jule::Bool _208946d9d_precheckStructIns(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _234239_s, jule::Ptr<_208711827_Token> _234258_errorToken);
inline void _208947156_checkStructIns(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _237936_s);
inline void _20894740e_checkTypeStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _238537_s);
inline void _20894760c_checkStructTypes(jule::Ptr<_20892a755_sema> _self_);
inline void _2089478b5_checkRets(_20892a755_sema* _self_, jule::Ptr<_208822372_FnIns>* _241630_f);
inline void _208947c28_checkFnInsSc(_20892a755_sema* _self_, jule::Ptr<_208822372_FnIns>* _242733_f, jule::Ptr<_2088d3169_scopeChecker>* _242749_sc);
inline void _20894808b_checkFnInsCaller(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _244038_f, jule::Ptr<_208711827_Token> _244053_caller);
inline void _208948344_checkFnIns(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _246232_f);
inline void _2089485ec_checkFunc(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _246631_f);
inline void _2089488a5_checkTestFn(_20892a755_sema* _self_, jule::Ptr<_208822372_FnIns>* _248132_f);
inline void _208948b5d_precheckFunc(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _251734_f);
inline void _208948d5b_precheckFuncs(jule::Ptr<_20892a755_sema> _self_);
inline void _208949059_checkFuncs(jule::Ptr<_20892a755_sema> _self_);
inline void _208949257_checkPackageTypes(jule::Ptr<_20892a755_sema> _self_);
inline void _208949455_setFileSemaFields(jule::Ptr<_20892a755_sema> _self_);
inline void _208949653_setSemaFields(jule::Ptr<_20892a755_sema> _self_);
inline void _20894990b_check(jule::Ptr<_20892a755_sema> _self_, jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _260527_files);
inline _208949d07_missingRetChecker static__20894a203_new(void);
inline jule::Bool _20894a511_checkConditional(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088cb55d_Conditional> _265532_c);
inline jule::Bool _20894a852_checkMatch(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088d0463_Match> _266726_m);
inline jule::Bool _20894ac4d_checkInfIter(_208949d07_missingRetChecker* _self_, jule::Uintptr _269324_it, jule::Ptr<_2088ca969_Scope>* _269342_s);
inline jule::Bool _20894b08e_checkScope(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088ca969_Scope> _271126_s);
inline jule::Bool _20894b3d0_check(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088ca969_Scope> _276621_s);
inline jule::Bool _2065961a3_IsInitialized(_20894d7de_Var* _self_);
inline jule::Bool _206596439_IsTypeInferred(_20894d7de_Var* _self_);
inline jule::Bool _2065966c0_untypedConstant(_20894d7de_Var* _self_);
inline jule::Bool static__2065970b6_Str(jule::Ptr<_20881e2b4_Fn> _1016_f);
inline void _208986e87_pushErr(_208986959_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _20898721d_checkTrait(_208986959_typeCompatibilityChecker* _self_);
inline jule::Bool _2089874a4_checkPtr(_208986959_typeCompatibilityChecker* _self_);
inline jule::Bool _20898773a_checkPrim(_208986959_typeCompatibilityChecker* _self_);
inline jule::Bool _208987b36_typeEnum(_208986959_typeCompatibilityChecker* _self_, jule::Ptr<_20882d889_TypeEnum>* _18725_e, jule::Ptr<_2089ce661_Type>* _18744_t2);
inline jule::Bool _208987dbc_checkTypeEnum(_208986959_typeCompatibilityChecker* _self_);
inline jule::Bool _208988153_check(_208986959_typeCompatibilityChecker* _self_);
inline void _208988c9c_pushErr(_2089887d5_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25543_args);
inline jule::Bool _208989033_checkValidity(_2089887d5_assignTypeChecker* _self_);
inline jule::Bool _2089892b9_checkConst(_2089887d5_assignTypeChecker* _self_);
inline jule::Bool _208989550_checkCompatibility(_2089887d5_assignTypeChecker* _self_);
inline jule::Bool _2089897d6_check(_2089887d5_assignTypeChecker* _self_);
inline jule::Bool _219492c6d_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k);
inline jule::Bool _219493026_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k);
inline jule::Bool _219498614_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k);
inline jule::Bool _21949e582_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k);
inline jule::Bool _20898aad4_annotateConstraintMap(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _39142_k);
inline jule::Bool _20898ae25_annotateConstraintTup(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _40642_k);
inline jule::Bool _20898b266_annotateConstraintFn(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _42341_k);
inline jule::Bool _20898b5a7_annotateConstraintIdent(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _44444_k);
inline jule::Bool _20898b8e8_annotateConstraint(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _47339_k);
inline void _20898bc5b_pushGeneric(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _49832_k, jule::I64 _49842_i);
inline jule::Bool _20898c09c_annotatePrim(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _51340_k);
inline jule::Bool _20898c3dd_annotateArr(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _51739_k);
inline jule::Bool _20898c72e_annotateSlc(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _52739_k);
inline jule::Bool _20898cb2a_checkMapKey(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _53738_k, jule::Ptr<_2089ce661_Type>* _53754_ck);
inline jule::Bool _20898ce6b_annotateMap(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _54539_k);
inline jule::Bool _20898d2ac_annotateFn(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _55538_k);
inline jule::Bool _20898d5ed_annotatePtr(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _58439_k);
inline jule::Bool _20898d93e_annotateSptr(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _59440_k);
inline jule::Bool _20898dc80_annotateStruct(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _60442_k);
inline jule::Bool _20898e0c1_annotateAny(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _62639_k);
inline jule::Bool _20898e412_annotateKind(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _64740_k);
inline jule::Bool _20898e698_annotate(_20898a1aa_dynamicTypeAnnotation* _self_);
inline void _2089905ab_pushErrToken(_208990017_fnCallArgChecker* _self_, jule::Ptr<_208711827_Token> _69228_token, jule::Str _69250_fmt, jule::Slice<jule::Any> _69270_args);
inline void _20899091e_pushErr(_208990017_fnCallArgChecker* _self_, jule::Str _69623_fmt, jule::Slice<jule::Any> _69643_args);
inline jule::Slice<jule::Ptr<_20882121c_ParamIns>> _208990ba5_getParams(_208990017_fnCallArgChecker* _self_);
inline jule::Bool _208990ee6_checkCounts(_208990017_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20882121c_ParamIns>>* _70928_params);
inline jule::Bool _20899149c_checkArg(_208990017_fnCallArgChecker* _self_, jule::Ptr<_20882121c_ParamIns>* _74129_p, jule::Ptr<_20899a9a1_Data>* _74148_arg, jule::Ptr<_208711827_Token>* _74165_errorToken);
inline jule::Bool _208991898_push(_208990017_fnCallArgChecker* _self_, jule::Ptr<_20882121c_ParamIns>* _77025_p, jule::Ptr<_20872b677_Expr> _77043_arg);
inline jule::Bool _208991c94_pushVariadic(_208990017_fnCallArgChecker* _self_, jule::Ptr<_20882121c_ParamIns>* _79433_p, jule::I64 _79451_i);
inline jule::Bool _2089920d5_checkArgs(_208990017_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20882121c_ParamIns>>* _87930_params);
inline jule::Bool _20899236b_checkDynamicTypeAnnotation(_208990017_fnCallArgChecker* _self_);
inline jule::Bool _208992602_check(_208990017_fnCallArgChecker* _self_);
inline void _2089934d2_pushErr(_208992e4e_structLitChecker* _self_, jule::Ptr<_208711827_Token> _95923_token, jule::Str _95945_fmt, jule::Slice<jule::Any> _95965_args);
inline void _208993845_pushSuggestion(_208992e4e_structLitChecker* _self_, jule::Str _96430_fmt, jule::Slice<jule::Any> _96450_args);
inline void _208993c63_pushMatch(_208992e4e_structLitChecker* _self_, jule::Ptr<_208748496_FieldIns>* _96830_f, jule::Ptr<_20899a9a1_Data>* _96849_d, jule::Ptr<_208711827_Token>* _96864_errorToken);
inline void _2089940c6_checkPair(_208992e4e_structLitChecker* _self_, jule::Ptr<_208730d96_FieldExprPair>* _98730_pair, jule::Slice<jule::Ptr<_20872b677_Expr>>* _98762_exprs);
inline jule::Bool _208994417_readyExprs(_208992e4e_structLitChecker* _self_, jule::Slice<jule::Ptr<_20872b677_Expr>>* _102631_exprs);
inline void _2089946c0_check(_208992e4e_structLitChecker* _self_, jule::Slice<jule::Ptr<_20872b677_Expr>>* _105026_exprs);
inline jule::Ptr<_20894d7de_Var> _20899524d_buildVar(_208994c31_rangeChecker* _self_, jule::Ptr<_20873a28a_VarDecl>* _112625_decl);
inline void _20899544b_setSizeKey(_208994c31_rangeChecker* _self_);
inline void _208995869_checkRangeExprValidity(_208994c31_rangeChecker* _self_, jule::Ptr<_20899a9a1_Data>* _114543_d, jule::Ptr<_20894d7de_Var>* _114554_key, jule::Ptr<_2089ce661_Type>* _114570_k);
inline void _208995a67_checkSlice(_208994c31_rangeChecker* _self_);
inline void _208995c65_checkArray(_208994c31_rangeChecker* _self_);
inline void _208995e63_checkMapKeyA(_208994c31_rangeChecker* _self_);
inline void _208996161_checkMapKeyB(_208994c31_rangeChecker* _self_);
inline void _20899635e_checkMap(_208994c31_rangeChecker* _self_);
inline void _20899655c_checkStr(_208994c31_rangeChecker* _self_);
inline void _20899675a_checkComptime(_208994c31_rangeChecker* _self_);
inline jule::Bool _2089969e1_checkComptimeRange(_208994c31_rangeChecker* _self_);
inline jule::Bool _208996c77_check(_208994c31_rangeChecker* _self_);
inline void _208997a47_prepareTypes(_20899764b_retTypeChecker* _self_);
inline jule::Bool _208997d88_prepareExprs(_20899764b_retTypeChecker* _self_, jule::Ptr<_20872b677_Expr>* _130633_e);
inline void _208998086_checkExprs(_20899764b_retTypeChecker* _self_);
inline void _208998284_tryFuncMultiRetForward(_20899764b_retTypeChecker* _self_);
inline void _208998482_notFitVariables(_20899764b_retTypeChecker* _self_);
inline jule::Bool _2089987c3_check(_20899764b_retTypeChecker* _self_, jule::Ptr<_20872b677_Expr>* _140126_e);
inline jule::Bool _20899adbe_IsNil(_20899a9a1_Data* _self_);
inline jule::Bool _20899b155_IsVoid(_20899a9a1_Data* _self_);
inline jule::Bool _20899b3db_IsConst(_20899a9a1_Data* _self_);
inline jule::Bool _20899b72c_GoodOperand(_20899a9a1_Data* _self_, jule::Ptr<_20899a9a1_Data>* _6228_other);
inline void _20899ce48_pushErr(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _20899d2ab_pushSuggestion(_20899c970_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _20899d4a9_allowBuiltin(_20899c970_eval* _self_);
inline void _20899d6a7_disallowBuiltin(_20899c970_eval* _self_);
inline jule::Bool _20899d93d_isUnsafe(_20899c970_eval* _self_);
inline jule::Bool _20899dbc4_isGlobal(_20899c970_eval* _self_);
inline jule::Bool _20899e015_applyNumericPrefix(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _12939_d);
inline jule::Ptr<_20899a9a1_Data> _20899e356_litStr(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _16419_l);
inline jule::Ptr<_20899a9a1_Data> _20899e697_litRune(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _18220_l);
inline jule::Ptr<_20899a9a1_Data> _20899e9d8_litFloat(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _20121_l);
inline jule::Ptr<_20899a9a1_Data> _20899ed29_litInt(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _21323_l);
inline jule::Ptr<_20899a9a1_Data> _2089a016a_litNum(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _26823_l);
inline jule::Ptr<_20899a9a1_Data> _2089a04ab_evalLit(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr> _27723_lit);
inline jule::Any _2089a07ec_findBuiltins(_20899c970_eval* _self_, jule::Str* _29029_ident);
inline jule::Any _2089a0be8_getDef(_20899c970_eval* _self_, jule::Str* _31723_ident, jule::Bool _31735_binded);
inline jule::Ptr<_2088eaeb7_ReferenceStack> _2089a0e7e_getOwnerRefers(_20899c970_eval* _self_);
inline void _2196ddda9_pushReference(_20899c970_eval* _self_, jule::Ptr<_2087490bd_StructIns>* _37537_ref);
inline void _2196e9975_pushReference(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns>* _37537_ref);
inline void _219710e97_pushReference(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _37537_ref);
inline jule::Ptr<_20899a9a1_Data> _2089a1578__evalEnum(_20899c970_eval* _self_, jule::Ptr<_20882c17e_Enum> _38225_enm);
inline jule::Ptr<_20899a9a1_Data> _2089a1974_evalEnum(_20899c970_eval* _self_, jule::Ptr<_20882c17e_Enum> _39128_enm, jule::Ptr<_208711827_Token> _39140_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089a1cb5__evalTypeEnum(_20899c970_eval* _self_, jule::Ptr<_20882d889_TypeEnum> _40029_enm);
inline jule::Ptr<_20899a9a1_Data> _2089a21b1_evalTypeEnum(_20899c970_eval* _self_, jule::Ptr<_20882d889_TypeEnum> _40932_enm, jule::Ptr<_208711827_Token> _40948_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089a2502__evalStruct(_20899c970_eval* _self_, jule::Ptr<_2087490bd_StructIns> _41827_s);
inline jule::Ptr<_20899a9a1_Data> _2089a28ed_evalStruct(_20899c970_eval* _self_, jule::Ptr<_208746230_Struct> _42930_s, jule::Ptr<_208711827_Token> _42946_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089a2c3e_evalFnIns(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns> _45925_f);
inline void _2089a30a2_checkDeprecated(_20899c970_eval* _self_, jule::Slice<jule::Ptr<_208726760_Directive>>* _46836_directives, jule::Ptr<_208711827_Token> _46867_tok);
inline jule::Ptr<_20899a9a1_Data> _2089a349d_evalFn(_20899c970_eval* _self_, jule::Ptr<_20881e2b4_Fn> _48426_f, jule::Ptr<_208711827_Token> _48434_errorToken);
inline void _2089a38bb_pushIllegalCycleError(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _50938_v1, jule::Ptr<_20894d7de_Var>* _50949_v2, _21e64c5b5_Builder* _50964_message);
inline jule::Bool _2089a3cb7_checkCrossCycle(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _51932_v, _21e64c5b5_Builder* _51946_message);
inline jule::Bool _2089a41b3_checkIllegalCycles(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _53639_v, jule::Ptr<_208711827_Token> _53648_declToken);
inline jule::Ptr<_20899a9a1_Data> _2089a45ae_evalVar(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var> _56427_v, jule::Ptr<_208711827_Token> _56436_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089a49aa_evalTypeAlias(_20899c970_eval* _self_, jule::Ptr<_2089cd94b_TypeAlias> _66433_ta, jule::Ptr<_208711827_Token> _66449_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089a4da6_evalDef(_20899c970_eval* _self_, jule::Any* _71728_def, jule::Ptr<_208711827_Token> _71742_ident);
inline jule::Ptr<_20899a9a1_Data> _2089a51e7_evalIdent(_20899c970_eval* _self_, jule::Ptr<_20872ce92_IdentExpr> _74129_ident);
inline jule::Ptr<_20899a9a1_Data> _2089a5538_evalUnary(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872d734_UnaryExpr> _74630_u);
inline jule::Ptr<_20899a9a1_Data> _2089a5879_evalVariadic(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872db0d_VariadicExpr> _75133_v);
inline jule::Ptr<_20899a9a1_Data> _2089a5bba_evalUnsafe(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872c9db_UnsafeExpr> _77331_u);
inline jule::Ptr<_20899a9a1_Data> _2089a600b_evalArr(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208732bcd_SliceExpr> _78128_s);
inline jule::Ptr<_20899a9a1_Data> _2089a64b2_evalExpSlc(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208732bcd_SliceExpr> _85831_s, jule::Ptr<_2089ce661_Type> _85855_t, jule::Any _85869_first);
inline jule::Ptr<_20899a9a1_Data> _2089a6803_evalSliceExpr(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208732bcd_SliceExpr> _89634_s);
inline jule::Bool _2089a6bee_checkIntegerIndexingByData(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _94147_d, jule::Ptr<_208711827_Token> _94161_token);
inline void _2089a711c_indexingPtr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _95432_d, jule::Ptr<_20899a9a1_Data>* _95447_index, jule::Ptr<_20873363a_IndexingExpr>* _95466_i);
inline void _2089a753a_indexingArr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _97032_d, jule::Ptr<_20899a9a1_Data>* _97047_index, jule::Ptr<_20873363a_IndexingExpr>* _97066_i);
inline void _2089a7958_indexingSlc(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _98032_d, jule::Ptr<_20899a9a1_Data>* _98047_index, jule::Ptr<_20873363a_IndexingExpr>* _98066_i);
inline void _2089a7d76_indexingMap(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _100332_d, jule::Ptr<_20899a9a1_Data>* _100347_index, jule::Ptr<_20873363a_IndexingExpr>* _100366_i);
inline void _2089a8294_indexingStr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _102032_d, jule::Ptr<_20899a9a1_Data>* _102047_index, jule::Ptr<_20873363a_IndexingExpr>* _102066_i);
inline void _2089a86b2_comptimeRange(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _104834_d, jule::Ptr<_20899a9a1_Data>* _104849_index, jule::Ptr<_20873363a_IndexingExpr>* _104868_i);
inline void _2089a8ad0_toIndexing(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _107331_d, jule::Ptr<_20899a9a1_Data>* _107346_index, jule::Ptr<_20873363a_IndexingExpr>* _107365_i);
inline jule::Bool _2089a9086_pushGenericsFromExprSubIdent(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872e78a_SubIdentExpr>* _110150_sexpr, jule::Slice<jule::Ptr<_208727343_TypeDecl>>* _11028_generics, jule::Ptr<_20872b677_Expr>* _110241_expr);
inline jule::Bool _2089a9482_pushGenericsFromData(jule::Ptr<_20899c970_eval> _self_, jule::Slice<jule::Ptr<_208727343_TypeDecl>>* _111242_generics, jule::Ptr<_20872b677_Expr>* _111275_expr);
inline void _2089a97e5_evalIdentDeclFromIndexing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20899a9a1_Data>* _118247_d, jule::Ptr<_20873363a_IndexingExpr>* _118262_i);
inline __jule_tuple_bool__jule_tuple_bool _2089a9c9b_checkGenericFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208822372_FnIns>* _122536_f, jule::Ptr<_208711827_Token>* _122552_et, jule::Any* _122576_model);
inline void _2089aa10e_evalFnGenericFromIndexing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20899a9a1_Data>* _124147_d, jule::Ptr<_20873363a_IndexingExpr>* _124162_i);
inline jule::Ptr<_20899a9a1_Data> _2089aa450_evalIndexing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20873363a_IndexingExpr> _128133_i);
inline __jule_tuple_x_20899a9a1_Data__jule_tuple_x_20899a9a1_Data _2089aa791_evalSlicingExprs(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208733c9a_SlicingExpr>* _134138_s);
inline void _2089aaa49_slicingArr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _137727_d);
inline void _2089aae67_slicingStr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _139227_d, jule::Ptr<_20899a9a1_Data>* _139238_l, jule::Ptr<_20899a9a1_Data>* _139249_r);
inline void _2089ab440_checkSlicing(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _143033_d, jule::Ptr<_20899a9a1_Data>* _143044_l, jule::Ptr<_20899a9a1_Data>* _143055_r, jule::Ptr<_208733c9a_SlicingExpr>* _143066_s);
inline jule::Ptr<_20899a9a1_Data> _2089ab781_evalSlicing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208733c9a_SlicingExpr> _144932_s);
inline void _2089abb9e_castPtr(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _148627_t, jule::Ptr<_20899a9a1_Data> _148641_d, jule::Ptr<_208711827_Token> _148651_errorToken);
inline void _2089ac0bc_castStruct(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _150830_t, jule::Ptr<_20899a9a1_Data> _150844_d, jule::Ptr<_208711827_Token> _150854_errorToken);
inline void _2089ac4da_castRef(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _152527_t, jule::Ptr<_20899a9a1_Data> _152541_d, jule::Ptr<_208711827_Token> _152551_errorToken);
inline void _2089ac908_castSlc(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _154827_t, jule::Ptr<_20899a9a1_Data> _154841_d, jule::Ptr<_208711827_Token> _154851_errorToken);
inline void _2089acd26_castBool(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _160328_t, jule::Ptr<_20899a9a1_Data> _160342_d, jule::Ptr<_208711827_Token> _160352_errorToken);
inline void _2089ad244_castStr(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _161027_t, jule::Ptr<_20899a9a1_Data> _161041_d, jule::Ptr<_208711827_Token> _161051_errorToken);
inline void _2089ad662_castInt(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _166027_t, jule::Ptr<_20899a9a1_Data> _166041_d, jule::Ptr<_208711827_Token> _166051_errorToken);
inline void _2089ada80_castNum(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _170627_t, jule::Ptr<_20899a9a1_Data> _170641_d, jule::Ptr<_208711827_Token> _170651_errorToken);
inline void _2089ade9d_castPrim(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _173728_t, jule::Ptr<_20899a9a1_Data> _173742_d, jule::Ptr<_208711827_Token> _173752_errorToken);
inline void _2089ae311_castConstant(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type>* _175533_t, jule::Ptr<_20899a9a1_Data>* _175548_d);
inline void _2089ae72e_castTypeEnum(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type>* _176433_t, jule::Ptr<_20899a9a1_Data>* _176448_d, jule::Ptr<_208711827_Token>* _176463_errorToken);
inline void _2089aeb4c_castTypeEnumT(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type>* _177434_t, jule::Ptr<_20899a9a1_Data>* _177449_d, jule::Ptr<_208711827_Token>* _177464_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089b0103_evalCastByTypeNData(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _178439_t, jule::Ptr<_20899a9a1_Data> _178453_d, jule::Ptr<_208711827_Token> _178467_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089b05a9_evalCastT(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2089ce661_Type>* _187331_t, jule::Ptr<_20872b677_Expr>* _187346_e, jule::Ptr<_208711827_Token>* _187366_et);
inline jule::Ptr<_20899a9a1_Data> _2089b08ea_evalCast(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872ded7_CastExpr> _189029_c);
inline jule::Ptr<_20899a9a1_Data> _2089b0c3b_evalNamespace(_20899c970_eval* _self_, jule::Ptr<_20872e3b1_NamespaceExpr> _189933_s);
inline jule::Ptr<_20899a9a1_Data> _2089b11e2_evalStructLitExplicit(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087490bd_StructIns> _191842_s, jule::Slice<jule::Ptr<_20872b677_Expr>> _19197_exprs, jule::Ptr<_208711827_Token> _191932_errorToken);
inline jule::Ptr<_20899a9a1_Data> _2089b1533_evalStructLit(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087316c1_StructLit> _195334_lit);
inline _2089e2751_typeChecker _2089b17b9_typeChecker(_20899c970_eval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089b1b0a_evalType(_20899c970_eval* _self_, jule::Ptr<_208727343_TypeDecl> _199528_t);
inline void _2089b1e6d_callTypeFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr>* _200832_fc, jule::Ptr<_20899a9a1_Data>* _200859_d);
inline void _2089b22d1_callBuiltinFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr>* _203435_fc, jule::Ptr<_20899a9a1_Data>* _203462_d);
inline void _2089b2644_checkFnOfConcurrentCall(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns>* _204640_f, jule::Ptr<_208711827_Token> _204651_errorToken);
inline void _2089b2a62_processExceptionalHandler(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns>* _206546_f, jule::Ptr<_2087303a1_FnCallExpr>* _206562_fc, jule::Ptr<_20899a9a1_Data>* _206589_d);
inline void _2089b2dc5_callFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr>* _209228_fc, jule::Ptr<_20899a9a1_Data>* _209255_d);
inline jule::Ptr<_20899a9a1_Data> _2089b3216_evalFnCall(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr> _224131_fc);
inline jule::Ptr<_20899a9a1_Data> _2089b3612_evalEnumStatic(_20899c970_eval* _self_, jule::Ptr<_20882c17e_Enum> _227434_enm, jule::Ptr<_208711827_Token> _227450_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b3a0d_evalTypeEnumStatic(_20899c970_eval* _self_, jule::Ptr<_20882d889_TypeEnum> _228238_enm, jule::Ptr<_208711827_Token> _228254_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b3e09_evalStructStatic(_20899c970_eval* _self_, jule::Ptr<_2087490bd_StructIns> _230536_s, jule::Ptr<_208711827_Token> _230551_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b43b0_evalTraitSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _234037_d, jule::Ptr<_2088299c8_Trait> _234051_trt, jule::Ptr<_208711827_Token> _234068_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b4921_evalStructSubIdentField(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _236244_d, jule::Ptr<_2087490bd_StructIns>* _236259_s, jule::Ptr<_208711827_Token>* _236279_tok, jule::Ptr<_208748496_FieldIns>* _2362104_f);
inline __jule_tuple_x_20899a9a1_Data__jule_tuple_bool _2089b4dc7_evalStructSubIdentFieldOnly(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _238647_d, jule::Ptr<_2087490bd_StructIns> _238661_s, jule::Ptr<_20872e78a_SubIdentExpr> _238680_si);
inline jule::Ptr<_20899a9a1_Data> _2089b54e3_evalStructSubIdentMethod(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _240045_d, jule::Ptr<_2087490bd_StructIns>* _240060_s, jule::Ptr<_208711827_Token>* _240080_tok, jule::Ptr<_20881e2b4_Fn>* _2400105_m, jule::Bool _2400113_ref);
inline jule::Ptr<_20899a9a1_Data> _2089b5a54_evalStructSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _242138_d, jule::Ptr<_2087490bd_StructIns> _242152_s, jule::Ptr<_20872e78a_SubIdentExpr> _242171_si, jule::Bool _242195_ref);
inline jule::Ptr<_20899a9a1_Data> _2089b5d95_evalIntTypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _244933_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b61d6_evalUintTypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _247634_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b6527_evalI8TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _249432_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b6868_evalI16TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _252333_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b6ba9_evalI32TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _255233_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b6eea_evalI64TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _258133_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b733b_evalU8TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _261032_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b767c_evalU16TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _262933_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b79bd_evalU32TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _264833_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b7d0e_evalU64TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _266733_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b8150_evalF32TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _268633_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b8491_evalF64TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _272533_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b888c_evalPrimStatic(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _276434_t, jule::Ptr<_208711827_Token> _276444_ident);
inline jule::Ptr<_20899a9a1_Data> _2089b8c88_evalTypeStatic(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _280234_d, jule::Ptr<_20872e78a_SubIdentExpr> _280248_si);
inline jule::Ptr<_20899a9a1_Data> _219933780_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088ae596_comptimeTypeInfo>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _219937d8e_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a0202_comptimeStructField>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _219617420_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a6648_comptimeEnumField>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _21961ba73_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a945e_comptimeParam>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _219621281_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a3425_comptimeStatic>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _21962584b_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088b569b_comptimeValue>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _219629e16_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088b9d76_comptimeFile>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline jule::Ptr<_20899a9a1_Data> _21962e569_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088bdc8c_comptimeDecl>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si);
inline __jule_tuple_x_20899a9a1_Data__jule_tuple_bool _2089b963a_tryComptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _282643_d, jule::Ptr<_20872e78a_SubIdentExpr> _282657_si);
inline jule::Ptr<_20899a9a1_Data> _2089b9a36_evalObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _285735_d, jule::Ptr<_20872e78a_SubIdentExpr> _285749_si);
inline jule::Ptr<_20899a9a1_Data> _2089b9d77_evalSubIdent(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872e78a_SubIdentExpr> _290533_si);
inline jule::Ptr<_20899a9a1_Data> _2089ba273_evalTupleFunc(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872c26b_TupleExpr> _291934_tup, jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20872b677_Expr>*> _291956_part);
inline jule::Ptr<_20899a9a1_Data> _2089ba5b4_evalTuple(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872c26b_TupleExpr> _294830_tup);
inline jule::Ptr<_20899a9a1_Data> _2089ba9b0_evalMap(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2089de110_Map> _295428_m, jule::Ptr<_208731b77_BraceLit> _295441_lit);
inline jule::Ptr<_20899a9a1_Data> _2089bad01_evalBraceLit(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208731b77_BraceLit> _300233_lit);
inline jule::Ptr<_20899a9a1_Data> _2089bb142_evalAnonFunc(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087390d0_FnDecl> _302833_decl);
inline jule::Ptr<_20899a9a1_Data> _2089bb483_evalBinary(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872ec41_BinaryExpr> _306631_op);
inline jule::Ptr<_20899a9a1_Data> _2089bb7c4_evalExprKind(jule::Ptr<_20899c970_eval> _self_, jule::Any _308133_kind);
inline jule::Ptr<_20899a9a1_Data> _2089bbb15_eval1(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _312926_expr);
inline jule::Ptr<_20899a9a1_Data> _2089bbe56_eval(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _317425_expr);
inline jule::Ptr<_20899a9a1_Data> _2089bc297_evalExpr1(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _318930_expr);
inline jule::Ptr<_20899a9a1_Data> _2089bc5d8_evalExpr(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _320529_expr);
inline _2089bca6c_unaryEval static__2089bcee0_new(jule::Ptr<_20899c970_eval> _322620_e);
inline void _2089bd1dd_minus(_2089bca6c_unaryEval* _self_);
inline void _2089bd3db_plus(_2089bca6c_unaryEval* _self_);
inline void _2089bd5d9_caret(_2089bca6c_unaryEval* _self_);
inline void _2089bd7d7_excl(_2089bca6c_unaryEval* _self_);
inline void _2089bd9d5_star(_2089bca6c_unaryEval* _self_);
inline void _2089bdbd3_amper(_2089bca6c_unaryEval* _self_);
inline void _2089bddd1_typeDecl(_2089bca6c_unaryEval* _self_);
inline void _2089be0ce_evalData(_2089bca6c_unaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089be420_eval(_2089bca6c_unaryEval* _self_, jule::Ptr<_20872d734_UnaryExpr> _349824_u);
inline _2089bea08_binaryEval static__2089c00e1_newPlain(jule::Ptr<_20899c970_eval> _354625_e);
inline _2089bea08_binaryEval static__2089c0465_new(jule::Ptr<_20899c970_eval> _355220_e, jule::Ptr<_208711827_Token> _355234_op);
inline jule::Bool _2089c06eb_checkTypeCompatibility(_2089bea08_binaryEval* _self_);
inline jule::Bool _2089c0982_checkTypeCompatibility1(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c0c18_evalComptimeTypeInfo(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c0e9e_evalNil(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c1235_evalEnum(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c14bb_evalTypeEnum(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c1752_evalSptr(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c19d8_evalPtr(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c1c6e_evalArr(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c2005_evalStruct(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c228b_evalTrait(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c2522_evalAny(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c27a8_evalBool(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c2a3e_evalStr(_2089bea08_binaryEval* _self_);
inline void _2089c2c3c_setTypeToGreater(_2089bea08_binaryEval* _self_);
inline void _2089c2ee5_checkModData(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _389333_d);
inline void _2089c31e3_mod(_2089bea08_binaryEval* _self_);
inline jule::Bool _2089c3479_numbersAreCompatibile(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c3710_shift(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c3996_evalFloat(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c3c2c_evalInt(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c3eb3_evalPrim(_2089bea08_binaryEval* _self_);
inline jule::Bool _2089c4249_checkSpecialCases(_2089bea08_binaryEval* _self_);
inline jule::Ptr<_20899a9a1_Data> _2089c44d0_evalOp(_2089bea08_binaryEval* _self_);
inline void _2089c4788_evalConst(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _421730_d);
inline void _2089c4a41_checkData(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _429530_d);
inline void _2089c4c3e_checkDatas(_2089bea08_binaryEval* _self_);
inline void _2089c4ee7_setModel(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _430729_d);
inline void _2089c52a0_postEval(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _433629_d);
inline jule::Ptr<_20899a9a1_Data> _2089c569b_solveExplicit(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _434134_l, jule::Ptr<_20899a9a1_Data>* _434149_r);
inline jule::Ptr<_20899a9a1_Data> _2089c59dc_eval(_2089bea08_binaryEval* _self_, jule::Ptr<_20872ec41_BinaryExpr>* _436125_op);
inline jule::Str _2089cea5c_Str(_2089ce661_Type* _self_);
inline jule::Bool _2089ced9d_Equal(jule::Ptr<_2089ce661_Type> _self_, jule::Ptr<_2089ce661_Type> _6618_other);
inline jule::Bool _2089d0552_Binded(_2089ce661_Type* _self_);
inline jule::Bool _2089d07d8_IsNil(_2089ce661_Type* _self_);
inline jule::Bool _2089d0a6e_Void(_2089ce661_Type* _self_);
inline jule::Trait _2089d0d05_ActualKind(_2089ce661_Type* _self_);
inline jule::Bool _2089d1146_ActualEqual(jule::Ptr<_2089ce661_Type> _self_, jule::Ptr<_2089ce661_Type> _11524_other);
inline jule::Bool _2089d1487_deepActualEqual(jule::Ptr<_2089ce661_Type> _self_, jule::Ptr<_2089ce661_Type> _13028_other);
inline jule::Bool _2089d171d_Comparable(_2089ce661_Type* _self_);
inline jule::Bool _2089d19a4_Mutable(_2089ce661_Type* _self_);
inline jule::Bool _2089d1c3a_Ordered(_2089ce661_Type* _self_);
inline jule::Bool _2089d1ec1_NilCompatible(_2089ce661_Type* _self_);
inline jule::Bool _2089d2257_GC(_2089ce661_Type* _self_);
inline jule::Bool _2089d24dd_Variadicable(_2089ce661_Type* _self_);
inline jule::Ptr<_2089d846c_Prim> _2089d2774_Prim(_2089ce661_Type* _self_);
inline jule::Ptr<_2089dbe98_Sptr> _2089d2a0a_Sptr(_2089ce661_Type* _self_);
inline jule::Ptr<_2089e0760_Ptr> _2089d2c91_Ptr(_2089ce661_Type* _self_);
inline jule::Ptr<_20882c17e_Enum> _2089d3027_Enum(_2089ce661_Type* _self_);
inline jule::Ptr<_20882d889_TypeEnum> _2089d32ad_TypeEnum(_2089ce661_Type* _self_);
inline jule::Ptr<_2089dec8c_Arr> _2089d3544_Arr(_2089ce661_Type* _self_);
inline jule::Ptr<_2089dc96b_Slc> _2089d37ca_Slc(_2089ce661_Type* _self_);
inline jule::Ptr<_208822372_FnIns> _2089d3a61_Fn(_2089ce661_Type* _self_);
inline jule::Ptr<_2087490bd_StructIns> _2089d3ce7_Struct(_2089ce661_Type* _self_);
inline jule::Ptr<_2087490bd_StructIns> _2089d407d_softStruct(_2089ce661_Type* _self_);
inline jule::Ptr<_2088299c8_Trait> _2089d4314_Trait(_2089ce661_Type* _self_);
inline jule::Ptr<_2089de110_Map> _2089d459a_Map(_2089ce661_Type* _self_);
inline jule::Ptr<_2089dd560_Tuple> _2089d4831_Tup(_2089ce661_Type* _self_);
inline jule::Bool _2089d4ab7_comptime(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a1995_comptimeStructFields> _2089d4d4d_comptimeStructFields(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a0202_comptimeStructField> _2089d50d4_comptimeStructField(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a7957_comptimeEnumFields> _2089d536a_comptimeEnumFields(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a6648_comptimeEnumField> _2089d5601_comptimeEnumField(_2089ce661_Type* _self_);
inline jule::Ptr<_2088ab2b8_comptimeParams> _2089d5887_comptimeParams(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a945e_comptimeParam> _2089d5b1d_comptimeParam(_2089ce661_Type* _self_);
inline jule::Ptr<_20889e696_comptimeRange> _2089d5da4_comptimeRange(_2089ce661_Type* _self_);
inline jule::Ptr<_2088acb27_comptimeTypeInfos> _2089d613a_comptimeTypeInfos(_2089ce661_Type* _self_);
inline jule::Ptr<_2088ae596_comptimeTypeInfo> _2089d63c1_comptimeTypeInfo(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a4bc9_comptimeStatics> _2089d6657_comptimeStatics(_2089ce661_Type* _self_);
inline jule::Ptr<_2088a3425_comptimeStatic> _2089d68dd_comptimeStatic(_2089ce661_Type* _self_);
inline jule::Ptr<_2088b569b_comptimeValue> _2089d6b74_comptimeValue(_2089ce661_Type* _self_);
inline jule::Ptr<_2088bdc8c_comptimeDecl> _2089d6e0a_comptimeDecl(_2089ce661_Type* _self_);
inline jule::Ptr<_2088bb99e_comptimeDecls> _2089d7191_comptimeDecls(_2089ce661_Type* _self_);
inline jule::Ptr<_2088b9d76_comptimeFile> _2089d7427_comptimeFile(_2089ce661_Type* _self_);
inline jule::Ptr<_2088b8407_comptimeFiles> _2089d76ad_comptimeFiles(_2089ce661_Type* _self_);
inline jule::Bool _2089d7e1c_checked(_2089d7a65_TypeSym* _self_);
inline jule::Str _2089d87e1_Str(_2089d846c_Prim* _self_);
inline jule::Bool _2089d8b32_Equal(jule::Ptr<_2089d846c_Prim> _self_, jule::Ptr<_2089ce661_Type> _57118_other);
inline jule::Bool _2089d90c7_IsConstraint(_2089d846c_Prim* _self_);
inline jule::Bool _2089d935d_IsI8(_2089d846c_Prim* _self_);
inline jule::Bool _2089d95e4_IsI16(_2089d846c_Prim* _self_);
inline jule::Bool _2089d987a_IsI32(_2089d846c_Prim* _self_);
inline jule::Bool _2089d9b11_IsI64(_2089d846c_Prim* _self_);
inline jule::Bool _2089d9d97_IsU8(_2089d846c_Prim* _self_);
inline jule::Bool _2089da12d_IsU16(_2089d846c_Prim* _self_);
inline jule::Bool _2089da3b4_IsU32(_2089d846c_Prim* _self_);
inline jule::Bool _2089da64a_IsU64(_2089d846c_Prim* _self_);
inline jule::Bool _2089da8d1_IsF32(_2089d846c_Prim* _self_);
inline jule::Bool _2089dab67_IsF64(_2089d846c_Prim* _self_);
inline jule::Bool _2089daded_IsInt(_2089d846c_Prim* _self_);
inline jule::Bool _2089db184_IsUint(_2089d846c_Prim* _self_);
inline jule::Bool _2089db41a_IsUintptr(_2089d846c_Prim* _self_);
inline jule::Bool _2089db6a1_IsBool(_2089d846c_Prim* _self_);
inline jule::Bool _2089db937_IsStr(_2089d846c_Prim* _self_);
inline jule::Bool _2089dbbbd_IsAny(_2089d846c_Prim* _self_);
inline jule::Str _2089dc350_Str(_2089dbe98_Sptr* _self_);
inline jule::Bool _2089dc691_Equal(jule::Ptr<_2089dbe98_Sptr> _self_, jule::Ptr<_2089ce661_Type> _64818_other);
inline jule::Str _2089dce33_Str(_2089dc96b_Slc* _self_);
inline jule::Bool _2089dd274_Equal(jule::Ptr<_2089dc96b_Slc> _self_, jule::Ptr<_2089ce661_Type> _66718_other);
inline jule::Str _2089dd917_Str(_2089dd560_Tuple* _self_);
inline jule::Bool _2089ddc58_Equal(jule::Ptr<_2089dd560_Tuple> _self_, jule::Ptr<_2089ce661_Type> _69618_other);
inline jule::Str _2089de4b7_Str(_2089de110_Map* _self_);
inline jule::Bool _2089de808_Equal(jule::Ptr<_2089de110_Map> _self_, jule::Ptr<_2089ce661_Type> _73318_other);
inline jule::Str _2089e0144_Str(_2089dec8c_Arr* _self_);
inline jule::Bool _2089e0485_Equal(jule::Ptr<_2089dec8c_Arr> _self_, jule::Ptr<_2089ce661_Type> _76218_other);
inline jule::Str _2089e0b17_Str(_2089e0760_Ptr* _self_);
inline jule::Bool _2089e0e58_Equal(jule::Ptr<_2089e0760_Ptr> _self_, jule::Ptr<_2089ce661_Type> _78718_other);
inline jule::Bool _2089e12cc_IsUnsafe(_2089e0760_Ptr* _self_);
inline void _2089e2ed2_pushErr(_2089e2751_typeChecker* _self_, jule::Ptr<_208711827_Token> _88123_token, jule::Str _88145_fmt, jule::Slice<jule::Any> _88165_args);
inline void _2089e31d0_allowBuiltin(_2089e2751_typeChecker* _self_);
inline void _2089e33cd_disallowBuiltin(_2089e2751_typeChecker* _self_);
inline void _219b2607c_pushReference(_2089e2751_typeChecker* _self_, jule::Ptr<_2087490bd_StructIns>* _89337_t);
inline void _219b28920_pushReference(_2089e2751_typeChecker* _self_, jule::Ptr<_2088299c8_Trait>* _89337_t);
inline void _2089e393e_pushReferenceByKind(_2089e2751_typeChecker* _self_, jule::Ptr<_2089ce661_Type>* _90340_k);
inline void _2089e3d5c_pushCycleError(_2089e2751_typeChecker* _self_, jule::Any _91426_def1, jule::Any _91437_def2, _21e64c5b5_Builder* _91453_message);
inline jule::Bool _2089e4258_checkCrossCycle(_2089e2751_typeChecker* _self_, jule::Any _93627_decl, _21e64c5b5_Builder* _93643_message);
inline jule::Bool _2089e4654_checkIllegalCycles(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _97035_ident, jule::Any _97067_decl);
inline jule::Trait _2089e4a50_fromTypeAlias(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _102034_decl, jule::Ptr<_2089cd94b_TypeAlias>* _102066_ta);
inline jule::Ptr<_20882c17e_Enum> _2089e4e4b_fromEnum(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _110525_decl, jule::Ptr<_20882c17e_Enum>* _110557_e);
inline jule::Ptr<_20882d889_TypeEnum> _2089e5347_fromTypeEnum(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _111729_decl, jule::Ptr<_20882d889_TypeEnum>* _111761_e);
inline jule::Ptr<_2088299c8_Trait> _2089e5743_fromTrait(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _112926_decl, jule::Ptr<_2088299c8_Trait>* _112958_t);
inline jule::Bool _2089e5b3e_checkStructIns(_2089e2751_typeChecker* _self_, jule::Ptr<_2087490bd_StructIns>* _114235_ins, jule::Ptr<_208711827_Token>* _114257_errorToken);
inline void _2089e5de7_appendUsedStructReference(_2089e2751_typeChecker* _self_, jule::Ptr<_208746230_Struct>* _116246_s);
inline jule::Ptr<_2087490bd_StructIns> _2089e62e3_buildStructInstance(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _117540_decl, jule::Ptr<_208746230_Struct>* _117572_s);
inline jule::Ptr<_2087490bd_StructIns> _2089e66de_fromStructIns(_2089e2751_typeChecker* _self_, jule::Ptr<_2087490bd_StructIns>* _122334_ins, jule::Ptr<_208711827_Token> _122355_token);
inline jule::Ptr<_2087490bd_StructIns> _2089e6ada_fromStruct(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _124131_decl, jule::Ptr<_208746230_Struct>* _124163_s);
inline jule::Trait _2089e6e2b_getDef(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _128527_decl);
inline jule::Trait _2089e726c_buildIdent(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl> _134630_decl);
inline jule::Trait _2089e75ad_buildSubIdent(_2089e2751_typeChecker* _self_, jule::Ptr<_208727c17_SubIdentTypeDecl> _135033_decl);
inline jule::Ptr<_2089dbe98_Sptr> _2089e78ee_buildSptrFromType(_2089e2751_typeChecker* _self_, jule::Ptr<_2089ce661_Type>* _138438_elem);
inline jule::Ptr<_2089dbe98_Sptr> _2089e7c40_buildSptr(_2089e2751_typeChecker* _self_, jule::Ptr<_2087283dd_SptrTypeDecl> _139829_decl);
inline jule::Ptr<_2089e0760_Ptr> _2089e8081_buildPtrFromType(_2089e2751_typeChecker* _self_, jule::Ptr<_2089ce661_Type>* _140737_elem);
inline jule::Ptr<_2089e0760_Ptr> _2089e83c2_buildPtr(_2089e2751_typeChecker* _self_, jule::Ptr<_208728d6c_PtrTypeDecl> _142228_decl);
inline jule::Ptr<_2089dc96b_Slc> _2089e8713_buildSlc(_2089e2751_typeChecker* _self_, jule::Ptr<_208728773_SlcTypeDecl> _143928_decl);
inline jule::Ptr<_2089dec8c_Arr> _2089e8a54_buildArr(_2089e2751_typeChecker* _self_, jule::Ptr<_20872960e_ArrTypeDecl> _146028_decl);
inline jule::Ptr<_2089de110_Map> _2089e8d95_buildMap(_2089e2751_typeChecker* _self_, jule::Ptr<_208729d5c_MapTypeDecl> _150928_decl);
inline jule::Ptr<_2089dd560_Tuple> _2089e91d6_buildTuple(_2089e2751_typeChecker* _self_, jule::Ptr<_208728a70_TupleTypeDecl> _154130_decl);
inline jule::Bool _2089e9527_checkFuncTypes(_2089e2751_typeChecker* _self_, jule::Ptr<_208822372_FnIns>* _155435_f);
inline jule::Ptr<_208822372_FnIns> _2089e9868_buildFunc(_2089e2751_typeChecker* _self_, jule::Ptr<_2087390d0_FnDecl> _157229_decl);
inline jule::Trait _2089e9ba9_buildNamespace(_2089e2751_typeChecker* _self_, jule::Ptr<_2087280e1_NamespaceTypeDecl> _160234_ns);
inline jule::Ptr<_2089ce661_Type> _2089e9eea_build(_2089e2751_typeChecker* _self_, jule::Any* _161826_declKind);
inline jule::Ptr<_2089ce661_Type> _2089ea33b_checkDecl(_2089e2751_typeChecker* _self_, jule::Ptr<_208727343_TypeDecl>* _170130_decl);
inline jule::Bool static__2089eac87_prim(jule::Str* _172818_ident, jule::Ptr<_2089d846c_Prim> _172830_t);
inline jule::Bool static__2089eb10b_exist(jule::Str* _173219_ident, jule::Ptr<_2089ce661_Type>* _173236_k);
inline void _209363b2c_stop(_209363478_scopeParser* _self_);
inline jule::Bool _209363db3_stopped(_209363478_scopeParser* _self_);
inline jule::Bool _209364149_finished(_209363478_scopeParser* _self_);
inline jule::Bool _2093643d0_isLastSt(_209363478_scopeParser* _self_);
inline void _209364743_pushErr(_209363478_scopeParser* _self_, jule::Ptr<_208711827_Token> _15423_token, jule::Str _15445_fmt);
inline void _209364aa6_pushSuggestion(_209363478_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _209364d5e_insertAsNext(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _16333_tokens);
inline jule::Ptr<_209362ad7_stmt> _2093650e5_next(_209363478_scopeParser* _self_);
inline jule::Ptr<_208737441_ScopeTree> _2093654e1_buildScope(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _17331_tokens, jule::Ptr<_208711827_Token> _17360_end);
inline jule::Ptr<_20873a28a_VarDecl> _209365832_buildVarSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _18431_tokens);
inline jule::Ptr<_20873a664_RetSt> _209365b73_buildRetSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _19230_tokens);
inline jule::Ptr<_20873add4_Iter> _209365eb4_buildWhileNextIter(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _20339_s);
inline jule::Ptr<_20873b70e_WhileKind> _209366305_buildWhileIterKind(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _209366646_getRangeKindKeysTokens(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _25443_toks);
inline jule::Ptr<_20873a28a_VarDecl> _209366987_buildRangeKindKey(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _209366cc8_buildRangeKindKeys(_209363478_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _28639_parts);
inline void _20936713b_setupRangeKindKeysPlain(_209363478_scopeParser* _self_, jule::Ptr<_20873c116_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_208711827_Token>>* _29471_tokens);
inline void _20936749e_setupRangeKindKeysExplicit(_209363478_scopeParser* _self_, jule::Ptr<_20873c116_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_208711827_Token>>* _30974_tokens);
inline void _209367812_setupRangeKindKeys(_209363478_scopeParser* _self_, jule::Ptr<_20873c116_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_208711827_Token>>* _31866_tokens);
inline jule::Ptr<_20873c116_RangeKind> _209367cb8_buildRangeIterKind(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_208711827_Token>>* _3278_exprTokens, jule::Ptr<_208711827_Token>* _32742_inToken);
inline jule::Any _2093681b4_buildCommonIterKind(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _34240_tokens, jule::Ptr<_208711827_Token>* _34266_errTok);
inline jule::Ptr<_20873add4_Iter> _209368505_buildCommonIter(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _36935_tokens);
inline jule::Ptr<_20873add4_Iter> _209368846_buildIterSt(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _39932_st);
inline jule::Ptr<_20873c4e0_BreakSt> _209368b87_buildBreakSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _40633_tokens);
inline jule::Ptr<_20873c8b9_ContSt> _209368ec8_buildContSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _42432_tokens);
inline jule::Ptr<_20873cd70_If> _209369319_buildIf(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _44228_tokens);
inline jule::Ptr<_20873d249_Else> _20936965a_buildElse(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _47530_tokens);
inline jule::Ptr<_20873d700_Conditional> _20936999b_buildIfElseChain(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _49936_tokens);
inline jule::Ptr<_20872b677_Expr> _209369cdc_buildCoCallSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _52233_tokens);
inline jule::Ptr<_208734d01_GotoSt> _20936a12d_buildGotoSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _53832_tokens);
inline jule::Ptr<_2087350ed_FallSt> _20936a46e_buildFallSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _55832_tokens);
inline jule::Ptr<_20873e019_TypeAliasDecl> _20936a7b0_buildTypeAliasSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _56837_tokens);
inline void _20936ac88_pushCaseExpr(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _57432_tokens, jule::Ptr<_208711827_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_20872b677_Expr>>* _57525_exprs);
inline __jule_tuple_sx_20872b677_Expr__jule_tuple_bool _20936b23e_buildCaseExprs(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _59735_tokens, jule::Ptr<_208711827_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_208737441_ScopeTree> _20936b580_buildCaseScope(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _63935_tokens);
inline __jule_tuple_x_20873e4c0_Case__jule_tuple_bool _20936b97b_buildCase(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_20873e4c0_Case__jule_tuple_x_20873d249_Else _20936bd77_buildCases(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_20873ecd9_MatchCase> _20936c1b8_buildMatchCase(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _71934_tokens);
inline jule::Ptr<_208737441_ScopeTree> _20936c509_buildScopeSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _75232_tokens);
inline jule::Ptr<_208734927_LabelSt> _20936c84a_buildLabelSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _79533_tokens);
inline __jule_tuple__2087369a1_StmtData__jule_tuple_bool _20936cb8b_buildIdSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _81030_tokens);
inline jule::Ptr<_20937d493_assignInfo> _20936cecc_buildAssignInfo(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _82436_tokens);
inline jule::Ptr<_20873575d_AssignLeft> _20936d31d_buildAssignL(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_20873575d_AssignLeft>> _20936d65e_buildAssignLs(_209363478_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _88034_parts);
inline __jule_tuple__2087369a1_StmtData__jule_tuple_bool _20936d9a0_buildPlainAssign(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _88937_tokens);
inline jule::Bool _20936dd9b_buildDeclAssign1(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _94337_lefts, jule::Ptr<_208735ce1_AssignSt>* _94366_assign);
inline __jule_tuple_x_208735ce1_AssignSt__jule_tuple_bool _20936e1dc_buildDeclAssign(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _99135_tokens);
inline __jule_tuple__2087369a1_StmtData__jule_tuple_bool _20936e52d_buildAssignSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _102534_tokens);
inline jule::Ptr<_20872c04b_UseExpr> _20936e86e_buildUseExpr(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _103833_tokens);
inline jule::Any _20936ebb0_buildConstSt(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _105133_st);
inline jule::Any _209370001_buildSt(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _107628_st);
inline void _209370364_build(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _114026_tokens, jule::Ptr<_208737441_ScopeTree>* _114056_s);
inline void _2093715a7_pushErr(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _20937191a_pushSuggestion(_209370d9d_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_20872c26b_TupleExpr> _209371c5b_buildTuple(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _2331_parts);
inline jule::Ptr<_20872c612_LitExpr> _20937209c_buildLit(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token> _3324_token);
inline jule::Any _20937272e_buildSingle(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token> _4431_token);
inline jule::Ptr<_20872ce92_IdentExpr> _209372a70_buildBindIdent(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _6135_tokens);
inline jule::Ptr<_20872d734_UnaryExpr> _209372db1_buildUnary(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _8030_tokens);
inline jule::Ptr<_20872e78a_SubIdentExpr> _209373202_buildObjSubIdent(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _10136_tokens);
inline jule::Ptr<_20872e3b1_NamespaceExpr> _209373543_buildNamespace(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _11635_tokens);
inline jule::Ptr<_208727343_TypeDecl> _209373884_buildType(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _15030_tokens);
inline jule::Any _209373bc5_buildSubIdent(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _16434_tokens);
inline jule::Ptr<_20872db0d_VariadicExpr> _209374016_buildVariadic(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _18633_tokens);
inline jule::Ptr<_20872b941_RangeExpr> _209374357_buildBetweenParentheses(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _19543_tokens);
inline jule::Ptr<_20872ded7_CastExpr> _209374698_tryBuildCast(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _20733_tokens);
inline void _209374ab6_pushArg(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_20872b677_Expr>>* _28028_args, jule::Slice<jule::Ptr<_208711827_Token>> _28052_tokens, jule::Ptr<_208711827_Token> _28077_errToken);
inline jule::Slice<jule::Ptr<_20872b677_Expr>> _209374e07_buildArgs(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _28929_tokens);
inline jule::Ptr<_2087303a1_FnCallExpr> _2093756ee_buildFnCall(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token>* _35532_token, jule::Slice<jule::Ptr<_208711827_Token>>* _35559_expr, jule::Slice<jule::Ptr<_208711827_Token>>* _35587_args);
inline jule::Any _209375a40_buildParenthesesRange(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _36342_tokens);
inline jule::Ptr<_20872c9db_UnsafeExpr> _209375d81_buildUnsafeExpr(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _38535_tokens);
inline jule::Ptr<_2087390d0_FnDecl> _2093761c2_buildAnonFn(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _40032_tokens);
inline jule::Any _209376513_buildUnsafe(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _40932_tokens);
inline void _209376931_pushRangeLitPart(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _41936_part, jule::Ptr<_208711827_Token> _4203_errorToken, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _42035_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _209376c72_getBraceRangeLitExprParts(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _43045_tokens);
inline jule::Ptr<_208730d96_FieldExprPair> _2093770b3_buildFieldExprPair(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _47238_tokens);
inline jule::Ptr<_20872b677_Expr> _209377404_buildStructLitExpr(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _48539_tokens);
inline jule::Slice<jule::Ptr<_20872b677_Expr>> _209377745_buildStructLitExprs(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _50040_tokens);
inline jule::Ptr<_2087316c1_StructLit> _209377a86_buildTypedStructLiteral(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _51343_tokens);
inline jule::Ptr<_20872b677_Expr> _209377dc7_buildBraceLitPart(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _53738_tokens);
inline jule::Ptr<_208731b77_BraceLit> _209378218_buildBraceLit(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _55434_tokens);
inline jule::Any _209378559_buildBraceRange(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _57336_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _20937889a_getEnumerableParts(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _62538_tokens);
inline jule::Ptr<_208732bcd_SliceExpr> _209378bdb_buildSlice(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _63230_tokens);
inline jule::Ptr<_20873363a_IndexingExpr> _209379192_buildIndexing(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _65433_exprTokens, jule::Slice<jule::Ptr<_208711827_Token>> _6557_tokens, jule::Ptr<_208711827_Token> _65536_errorToken);
inline jule::Ptr<_208733c9a_SlicingExpr> _2093797ad_buildSlicing(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _67833_exprTokens, jule::Slice<jule::Ptr<_208711827_Token>>* _67867_start, jule::Slice<jule::Ptr<_208711827_Token>>* _6798_to, jule::Ptr<_208711827_Token>* _67934_errorToken, jule::Ptr<_208711827_Token> _67965_end);
inline jule::Any _209379aee_buildBracketRange(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _69437_tokens);
inline jule::Any _209379e40_buildExclRight(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _71935_tokens);
inline jule::Any _20937a281_buildData(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _73730_tokens);
inline jule::Any _20937a67c_buildBinary(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _80632_tokens, jule::I64 _80657_i);
inline jule::Any _20937a9bd_build(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _83126_tokens);
inline jule::Any _20937ad0e_buildKind(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _84230_tokens);
inline jule::Ptr<_20872b677_Expr> _20937b150_buildFromTokens(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _85335_tokens);
inline void _2093819b3_stop(_209381683_parser* _self_);
inline jule::Bool _209381c49_stopped(_209381683_parser* _self_);
inline void _209382167_pushErr(_209381683_parser* _self_, jule::Ptr<_208711827_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _2093824ca_pushSuggestion(_209381683_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_20872b677_Expr> _20938281b_buildExpr(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _17831_tokens);
inline jule::Ptr<_208726760_Directive> _209382b5c_buildDirective(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _18234_tokens);
inline void _209382e15_pushDirective(_209381683_parser* _self_, jule::Ptr<_208726760_Directive> _19733_d);
inline jule::Ptr<_208737441_ScopeTree> _209383311_buildScope(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _21032_tokens, jule::Ptr<_208711827_Token> _21061_end);
inline __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool _2093837b7__buildType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool _209383c6d_buildType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_20873e019_TypeAliasDecl> _2093840ae_buildTypeAliasDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _24240_tokens);
inline void _209384422_buildVarTypeAndExpr(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20873a28a_VarDecl>* _28841_v, jule::Slice<jule::Ptr<_208711827_Token>>* _28864_tokens);
inline void _209384785_buildVarCommon(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20873a28a_VarDecl>* _32136_v, jule::Slice<jule::Ptr<_208711827_Token>> _32158_tokens);
inline void _209384ae8_buildVarBegin(_209381683_parser* _self_, jule::Ptr<_20873a28a_VarDecl>* _33734_v, jule::Slice<jule::Ptr<_208711827_Token>>* _33757_tokens);
inline jule::Ptr<_20873a28a_VarDecl> _209384e39_buildVar(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _36529_tokens);
inline jule::Ptr<_20873454d_GenericDecl> _20938527a_buildGeneric(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _38434_tokens);
inline jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _209385676_buildGenerics(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _42135_tokens, jule::Ptr<_208711827_Token>* _42161_errorToken);
inline jule::Ptr<_208737b7d_ParamDecl> _2093859b7_buildSelfParam(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _44134_tokens);
inline void _209385dd5_paramTypeBegin(_209381683_parser* _self_, jule::Ptr<_208737b7d_ParamDecl>* _48135_param, jule::I64* _48164_i, jule::Slice<jule::Ptr<_208711827_Token>>* _48173_tokens);
inline void _209386248_buildParamType(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_208737b7d_ParamDecl>* _49636_param, jule::Slice<jule::Ptr<_208711827_Token>>* _49665_tokens);
inline void _2093865ab_buildParamBody(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_208737b7d_ParamDecl>* _50936_param, jule::Slice<jule::Ptr<_208711827_Token>> _50964_tokens);
inline jule::Ptr<_208737b7d_ParamDecl> _2093868ec_buildParam(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _52931_tokens);
inline void _209386ba5_checkParams(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208737b7d_ParamDecl>>* _57232_params);
inline jule::Slice<jule::Ptr<_208737b7d_ParamDecl>> _2093870a1_buildParams(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _59233_tokens, jule::Bool _59258_method);
inline __jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool _20938749c_buildMultiRetType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _62239_tokens, jule::I64* _62269_i);
inline __jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool _209387898_buildRetType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _69334_tokens, jule::I64* _69364_i);
inline jule::Ptr<_2087390d0_FnDecl> _209387d4e_buildFnPrototype(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _73238_tokens, jule::I64* _73268_i, jule::Bool _73276_method);
inline jule::Ptr<_2087390d0_FnDecl> _209388305_buildFn(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _80929_tokens, jule::Bool _80954_method, jule::Bool _80968_prototype);
inline void _209388668_buildBindUseDecl(_209381683_parser* _self_, jule::Ptr<_20874036c_UseDecl>* _84337_decl, jule::Slice<jule::Ptr<_208711827_Token>>* _84363_tokens);
inline void _2093889cb_parseUseDecl(_209381683_parser* _self_, jule::Ptr<_20874036c_UseDecl>* _85633_decl, jule::Slice<jule::Ptr<_208711827_Token>> _85658_tokens);
inline jule::Ptr<_20874036c_UseDecl> _209388dc7_buildUseDecl(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _88632_tokens, jule::Bool _88657_binded);
inline jule::Ptr<_208727343_TypeDecl> _2093892c3_buildTypeEnumItemKind(jule::Ptr<_209381683_parser> _self_, jule::I64* _90043_i, jule::Slice<jule::Ptr<_208711827_Token>>* _90056_tokens);
inline jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>> _209389614_buildTypeEnumItems(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _93740_tokens);
inline jule::Ptr<_20874236e_TypeEnumDecl> _209389955_buildTypeEnumDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _96139_tokens);
inline jule::Ptr<_20872b677_Expr> _209389d51_buildEnumItemExpr(jule::Ptr<_209381683_parser> _self_, jule::I64* _98839_i, jule::Slice<jule::Ptr<_208711827_Token>>* _98852_tokens);
inline jule::Slice<jule::Ptr<_208740823_EnumItemDecl>> _20938a192_buildEnumItems(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _102036_tokens);
inline jule::Ptr<_2087413d4_EnumDecl> _20938a4d3_buildEnumDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _105735_tokens);
inline jule::Any _20938a824_buildNodeEnumDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _110239_tokens);
inline jule::Ptr<_208742638_FieldDecl> _20938ab65_buildField(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _111131_tokens);
inline jule::Slice<jule::Ptr<_208742638_FieldDecl>> _20938aea6_buildStructDeclFields(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _116042_tokens);
inline jule::Ptr<_20874302e_StructDecl> _20938b2e7_buildStructDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _117137_tokens);
inline void _20938b5a0_checkMethodReceiver(_209381683_parser* _self_, jule::Ptr<_2087390d0_FnDecl>* _121936_f);
inline void _20938b913_buildTraitBody(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20874376b_TraitDecl>* _123836_t, jule::Slice<jule::Ptr<_208711827_Token>> _123860_tokens);
inline jule::Ptr<_20874376b_TraitDecl> _20938bc54_buildTraitDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _127036_tokens);
inline jule::Ptr<_2087390d0_FnDecl> _20938c095_buildBindFn(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _130032_tokens);
inline jule::Ptr<_20873a28a_VarDecl> _20938c3d6_buildBindVar(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _131033_tokens);
inline jule::Ptr<_20874302e_StructDecl> _20938c727_buildBindStruct(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _132336_tokens);
inline jule::Ptr<_20873e019_TypeAliasDecl> _20938ca68_buildBindTypeAlias(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _133739_tokens);
inline jule::Ptr<_20874036c_UseDecl> _20938cda9_buildBindUse(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _134733_tokens);
inline jule::Any _20938d1ea_buildBind(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _135831_tokens);
inline jule::Ptr<_2087390d0_FnDecl> _20938d53b_getMethod(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _138231_tokens);
inline void _20938d89e_parseImplBody(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_208743dcb_Impl>* _141135_ipl, jule::Slice<jule::Ptr<_208711827_Token>>* _141157_tokens);
inline jule::Ptr<_208743dcb_Impl> _20938dbe0_buildImpl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _144430_tokens);
inline jule::Any _20938e031_buildNodeData(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _151535_tokens);
inline void _20938e2d9_applyFnMeta(_209381683_parser* _self_, jule::Ptr<_2087390d0_FnDecl>* _154832_f);
inline void _20938e592_applyMeta(_209381683_parser* _self_, _208726342_Node* _155330_node);
inline void _20938e84a_pushUseDecl(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20874036c_UseDecl>* _157833_decl);
inline jule::Bool _20938eb8b_pushMetaNodes(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _158635_tokens);
inline _208726342_Node _20938eecc_parseNode(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _160631_st);
inline void _209390285_appendNode(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _163032_st);
inline void _20939075d_removeRange(_209381683_parser* _self_, jule::I64 _164027_i, jule::U64 _164035_id, jule::Slice<jule::Ptr<_208711827_Token>>* _164051_tokens, jule::Slice<jule::I64>* _164081_ranges);
inline void _209390b7b_pushWrongOrderCloseErr(_209381683_parser* _self_, jule::Ptr<_208711827_Token>* _165239_t, jule::Slice<jule::Ptr<_208711827_Token>>* _165258_tokens, jule::Slice<jule::I64>* _165284_ranges);
inline void _209391154_pushRangeClose(_209381683_parser* _self_, jule::Ptr<_208711827_Token> _166330_t, jule::U64 _166348_left, jule::Slice<jule::Ptr<_208711827_Token>>* _166366_tokens, jule::Slice<jule::I64>* _166396_ranges);
inline void _20939140c_checkRanges(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _168128_tokens);
inline void _2093916b5_parse(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_2087173cc_Fileset>* _171227_f);
inline void _209392e14_pushErr(_20939283c_typeBuilder* _self_, jule::Ptr<_208711827_Token> _3123_token, jule::Str _3145_fmt);
inline void _209393277_pushSuggestion(_20939283c_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_208727343_TypeDecl> _20939350d_buildNamespace(_20939283c_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_208727343_TypeDecl>> _209393794_buildGenerics(_20939283c_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _209393a2a_identGenerics(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _209393cb1_buildIdent(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _209394047_buildCppLink(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _2093942cd_buildFn(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _209394564_buildPtr(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _2093947ea_buildSptr(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _209394a81_buildSlc(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _209394d17_buildArr(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _20939509d_buildMap(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _209395334_buildEnumerable(_20939283c_typeBuilder* _self_);
inline jule::Ptr<_208727343_TypeDecl> _2093955ba_step(_20939283c_typeBuilder* _self_);
inline __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool _209395851_build(_20939283c_typeBuilder* _self_);
inline void _208b10d69_pushErr(_208b107d6_directiveEval* _self_, jule::Ptr<_208711827_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _208b11265_splitOperans(_208b107d6_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_208711827_Token>>* _3348_tokens);
inline jule::Bool _208b115a6_evalDirectiveIdent(_208b107d6_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _208b118e7_evalDirectivePart(_208b107d6_directiveEval* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _7037_part);
inline jule::Bool _208b11b7d_eval(_208b107d6_directiveEval* _self_);
inline jule::Bool _208b0d11e_isPassFileAnnotation(_209396940_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_209396940_Importer> static__209396d6e_New(_208b0e098_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _209397105_AllPackages(_209396940_Importer* _self_);
inline void _209397545_SetModPath(_209396940_Importer* _self_, jule::Str _6226_path);
inline jule::Str _2093977cb_GetModPath(_209396940_Importer* _self_);
inline jule::Str _209397b1c_ModById(_209396940_Importer* _self_, jule::I64 _7019_id);
inline jule::Ptr<_20890d040_ImportInfo> _209397e5d_GetImport(_209396940_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log _209398359_ImportPackage(_209396940_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _209398612_Imported(_209396940_Importer* _self_, jule::Ptr<_20890d040_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_21e65b904_Log _209398a41_isPassBuildDirectives(_209396940_Importer* _self_, jule::Ptr<_2087253da_AST>* _16842_file);
inline jule::Ptr<_20939ca56_ExprInspector> static__20939cd97_New(void);
inline void _20939d150_args(_20939ca56_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _20939d408_InspectStep(_20939ca56_ExprInspector* _self_, jule::Any* _3339_m);
inline void _20939d6b1_inspect(_20939ca56_ExprInspector* _self_, jule::Any* _3728_m);
inline void _20939da24_Inspect(_20939ca56_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16143_f);
inline jule::Ptr<_2093a6dc3_Meta> static__2093a729c_Collect(jule::Ptr<_20939938d_IR> _7124_ir);
inline jule::Ptr<_2093a5ce5_MetaRuntime> static__2093a7566_CollectRuntime(jule::Ptr<_20939938d_IR>* _8032_ir);
inline jule::Ptr<_2093a5124_MetaStrBuilder> static__2093a7830_CollectStrBuilder(jule::Ptr<_20939938d_IR>* _10635_ir);
inline jule::Ptr<_2093a67b8_MetaMathCmplx> static__2093a7ae9_CollectMathCmplx(jule::Ptr<_20939938d_IR>* _12334_ir);
inline jule::Ptr<_2171c8368_ObjectDeadCode> static__2171c8852_new(jule::Ptr<_20939938d_IR>* _2521_ir);
inline jule::Bool _21a2e784c_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2087490bd_StructIns>* _3127_t);
inline jule::Bool _21a2ee1c2_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_208822372_FnIns>* _3127_t);
inline jule::Bool _21a3094a7_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088299c8_Trait>* _3127_t);
inline jule::Bool _21a314270_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_20894d7de_Var>* _3127_t);
inline void _21a2e9c5b_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2087490bd_StructIns> _5132_t);
inline void _21a30026c_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_208822372_FnIns> _5132_t);
inline void _21a30b267_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088299c8_Trait> _5132_t);
inline void _21a3174c6_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_20894d7de_Var> _5132_t);
inline void _2171c9204_pushStructAsLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2087490bd_StructIns>* _6438_s);
inline void _2171c94ac_setReferencesAsLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088eaeb7_ReferenceStack>* _10841_rs);
inline void _2171c9765_inits(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2089107b2_Package>* _15827_pkg);
inline void _2171c9a1d_collectLivePackage(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2089107b2_Package>* _17240_pkg);
inline void _2171c9c1b_collectLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_);
inline void _2171c9ec4_removeDeadGlobals(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20894d7de_Var>>* _24839_vars);
inline void _2171ca27c_removeDeadFns(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20881e2b4_Fn>>* _26035_funcs);
inline void _2171ca535_removeDeadStructs(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_208746230_Struct>>* _28139_structs);
inline void _2171ca7dd_removeDeadTraits(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2088299c8_Trait>>* _30338_traits);
inline void _2171caa96_removeDeadsFile(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088255b7_SymTab>* _32437_file);
inline void _2171cad4e_removeDeadsPackage(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2089107b2_Package>* _33140_pkg);
inline void _2171cb04c_removeDeads(jule::Ptr<_2171c8368_ObjectDeadCode> _self_);
inline void _2171cb24a_elimanate(jule::Ptr<_2171c8368_ObjectDeadCode> _self_);
inline void _2171cc9aa_optimizeChild(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ca969_Scope>* _1935_s);
inline void _2171ccc63_optimizeBodyChildExceptional(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ca969_Scope>* _2950_s);
inline void _2171cd01b_optimizeBodyChild(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ca969_Scope>* _3939_s);
inline void _2171cd2c4_optimizeExpr(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Any* _4834_model);
inline void _2171cd4c2_eliminateFollowed(_2171cc48d_scopeDeadCode* _self_);
inline void _2171cd77a_pushGoto(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cdad2_GotoSt> _6929_gt);
inline void _2171cda33_pushLabel(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cd472_Label> _7930_l);
inline void _2171cdcdb_optimizeRangeIter(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cc7e5_RangeIter> _9238_it);
inline void _2171ce094_optimizeWhileIter(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cbd11_WhileIter> _9738_it);
inline void _2171ce34c_optimizeInfIter(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cb85a_InfIter> _10536_it);
inline void _2171ce605_optimizeConditional(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cb55d_Conditional> _10940_c);
inline void _2171ce8ad_optimizeMatch(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088d0463_Match> _12734_m);
inline void _2171ceb66_optimizeAssign(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ce462_Assign> _14535_assign);
inline void _2171cee1e_optimizeMultiAssign(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ce9e5_MultiAssign> _15040_assign);
inline void _2171d01c7_optimizeStmt(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _2171d03c5_optimizeStmts(jule::Ptr<_2171cc48d_scopeDeadCode> _self_);
inline _2171d1a25_exprDeadCode static__2171d1e43_new(jule::Ptr<_2171cc48d_scopeDeadCode>* _1421_s);
inline void _2171d21eb_optimize(_2171d1a25_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _216daa996_pushVar(_216daa501_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _216daacd7_removeVar(_216daa501_nils* _self_, jule::Uintptr _4825_var);
inline jule::Bool _216dab128_isSafe(_216daa501_nils* _self_, jule::Uintptr _6322_var);
inline jule::Ptr<_2170a3188_scopeOptimizer> static__2170a3771_new(jule::Ptr<_2088ca969_Scope> _2420_scope);
inline void _2170a3a29_setCurrentStmt(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Any _3635_stmt);
inline void _2170a3c27_removeCurrent(jule::Ptr<_2170a3188_scopeOptimizer> _self_);
inline jule::Bool _2170a3ead_isLastStmt(jule::Ptr<_2170a3188_scopeOptimizer> _self_);
inline jule::Bool _2170a4244_isIter(jule::Ptr<_2170a3188_scopeOptimizer> _self_);
inline void _2170a44ec_optimizeData(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_20899a9a1_Data> _6833_d);
inline void _2170a47a5_optimizeVar(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_20894d7de_Var> _8732_v);
inline void _2170a4a5d_optimizeConditional(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cb55d_Conditional> _10840_c);
inline void _2170a4e7b_buildDefaultConstantTrueCase(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088d0c5a_Case> _19149_case, jule::I64* _19173_i, jule::Ptr<_2088d0463_Match>* _19186_m);
inline void _2170a5234_optimizeMatch(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088d0463_Match> _21734_m);
inline void _2170a54dc_optimizeRangeIter(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cc7e5_RangeIter> _30938_it);
inline void _2170a5795_optimizeWhileIter(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cbd11_WhileIter> _36638_it);
inline jule::Bool _2170a5ad6_substr(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _37227_a);
inline jule::Bool _2170a5e27_strAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _39230_a);
inline jule::Bool _2170a6268_sliceAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _40332_a);
inline void _2170a6521_optimizePostfix(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cdeab_Postfix> _41136_postfix);
inline jule::Bool _2170a6862_cmplxAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign>* _41833_assign);
inline void _2170a6b1a_optimizeAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _46035_assign);
inline void _2170a6e7d_normalizeAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _59437_assign, jule::Ptr<_208817686_TupleExpr>* _59470_tup);
inline jule::Bool _2170a7379_tryOptimizeSwap(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _66737_assign, jule::Ptr<_208817686_TupleExpr>* _66770_tup);
inline void _2170a76dc_splitAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _68933_assign, jule::Ptr<_208817686_TupleExpr>* _68966_tup);
inline void _2170a7995_optimizeMultiAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign> _77040_assign);
inline void _2170a7c4d_optimizeRet(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088d17e9_RetSt> _89332_r);
inline void _2170a8006_optimizeStmt(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Any _91733_stmt);
inline void _2170a82ae_optimizeChild(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ca969_Scope> _94734_child);
inline void _2170a8567_optimizeChildHard(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ca969_Scope> _98338_child);
inline void _2170a8765_optimize(jule::Ptr<_2170a3188_scopeOptimizer> _self_);
inline void static__2170aaee8_optimize(jule::Any* _2326_model);
inline jule::Ptr<_2170aa998_exprOptimizer> static__2170ab427_new(jule::Any* _2721_model, jule::Ptr<_2170b62ab_data>* _2745_d, jule::Ptr<_2170a3188_scopeOptimizer> _2759_s);
inline void static__2170ab7bd_optimizeData(jule::Any* _3630_model, jule::Ptr<_2170b62ab_data>* _3654_d, jule::Ptr<_2170a3188_scopeOptimizer> _3668_s);
inline void static__2170abb64_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_2170b62ab_data>* _4765_d, jule::Ptr<_2170a3188_scopeOptimizer> _4779_s);
inline jule::Bool _2170abea5_selfCmpCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _10128_m);
inline jule::Bool _2170ac2e6_boolCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _13025_m);
inline jule::Bool _2170ac637_arrayCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr> _18325_m);
inline void _2170ac8e0_strConv(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208811a9d_OperandExpr>* _19824_m);
inline jule::Bool _2170acc31_strCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _22324_m);
inline jule::Bool _2170ad072_strConcat(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _28126_m);
inline jule::Bool _2170ad528_tryNeutralElement1(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _34535_m, jule::Ptr<_208799195_Const> _34561_c, jule::Ptr<_208811a9d_OperandExpr>* _34587_nc);
inline jule::Bool _2170ad869_tryNeutralElement(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _39534_m);
inline void _2170adb22_checkBinaryForBoundary(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _41039_m);
inline void _2170addca_checkBinaryForNil(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _46234_m);
inline void _2170ae183_shift(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr> _49621_m);
inline jule::Bool _2170ae4c4_binaryMath(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _51627_m);
inline void _2170ae77c_binaryStrCommon(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _62432_m);
inline void _2170aea35_binary(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr> _62922_m);
inline void _2170aecdd_unary(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812472_UnaryExpr> _70621_m);
inline void _2170b0096_structureLit(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812d46_StructLitExpr> _74528_m);
inline void _2170b034e_casting(_2170aa998_exprOptimizer* _self_, jule::Ptr<_2088136c6_CastingExpr> _76123_m);
inline void _2170b06b2_args(_2170aa998_exprOptimizer* _self_, jule::Slice<jule::Ptr<_20882121c_ParamIns>> _77520_params, jule::Slice<jule::Any>* _77552_args);
inline void _2170b0a25_scope(_2170aa998_exprOptimizer* _self_, jule::Ptr<_2088ca969_Scope>* _80022_s, jule::Bool _80039_child);
inline void _2170b0ccd_optimizeStrBuilderCall(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814078_FnCallExpr>* _81639_m);
inline void _2170b1086_lenCall(_2170aa998_exprOptimizer* _self_, jule::Ptr<_2088191b0_BuiltinLenCallExpr> _83123_m);
inline void _2170b133e_funcCall(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814078_FnCallExpr> _87424_m);
inline void _2170b15e7_indexing(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814908_IndexingExpr> _88824_m);
inline void _2170b18a0_anonFunc(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814dae_AnonFnExpr> _91224_m);
inline void _2170b1b58_inspectStep(_2170aa998_exprOptimizer* _self_, jule::Any* _92128_m);
inline void _2170b1d56_do(_2170aa998_exprOptimizer* _self_);
inline void _2170b3b27_pushVar(jule::Ptr<_2170b3682_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_2089ce661_Type> _2442_kind);
inline jule::Bool _2170b3e68_removeVar(_2170b3682_dynamic* _self_, jule::Uintptr _4925_var);
inline jule::Bool _2170b4364_isFits(_2170b3682_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_2089ce661_Type> _6436_kind);
inline void _2170b6a92_removeDeads(_2170b62ab_data* _self_, jule::Ptr<_2170b62ab_data>* _4228_other);
inline _2170b5cb1_dataCheckpoint _2170b6d28_getCheckpoint(_2170b62ab_data* _self_);
inline _2170b5cb1_dataCheckpoint _2170b70ae_getMutCheckpoint(_2170b62ab_data* _self_);
inline void _2170b7367_loadCheckpoint(_2170b62ab_data* _self_, _2170b5cb1_dataCheckpoint _8534_c);
inline void _2170b8a0b_pushVar(_2170b8566_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize);
inline jule::Bool _2170b8d4c_removeVar(_2170b8566_boundary* _self_, jule::Uintptr _5825_var);
inline jule::Bool _2170b9248_fitsMaxSize(_2170b8566_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr);
inline jule::Ptr<_2171d2b47_Optimizer> static__2171d310e_New(jule::Ptr<_20939938d_IR>* _2121_ir);
inline void _2171d33b7_optimizeExpr(_2171d2b47_Optimizer* _self_, jule::Any* _2733_model);
inline void _2171d3670_optimizeGlobal(_2171d2b47_Optimizer* _self_, jule::Ptr<_20894d7de_Var>* _3135_v);
inline void _2171d3928_optimizeFunction(_2171d2b47_Optimizer* _self_, jule::Ptr<_20881e2b4_Fn>* _3737_func);
inline void _2171d3bd1_optimizeStruct(_2171d2b47_Optimizer* _self_, jule::Ptr<_208746230_Struct> _4734_s);
inline void _2171d3e89_optimizeGlobals(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _6336_p);
inline void _2171d4242_optimizeFunctions(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _7138_p);
inline void _2171d44ea_optimizeStructs(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _7936_p);
inline void _2171d47a3_optimizePackage(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _9236_p);
inline void _2171d49a1_Optimize(_2171d2b47_Optimizer* _self_);
inline _2172a44aa_Time static__2172a4895_Unix(jule::U64 _9117_sec);
inline _2172a44aa_Time static__2172a4aa4_Now(void);
inline _2172a3cd4_AbsTime _2172a628c_Abs(_2172a44aa_Time* _self_);
inline jule::Ptr<_2171d6b29_scopeCoder> static__2171d7311_new(jule::Ptr<_2172b1a06_ObjectCoder>* _3721_oc);
inline void _21a74d841_iterHead(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _2171d79d7_rangeIndexIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter>* _9336_it);
inline void _2171d7c90_rangeHashmapIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter>* _16038_it);
inline void _2171d8048_strRuneIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da8d29_StrRuneIter> _24132_it);
inline void _2171d8301_ifCase(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cad43_If> _35327_i);
inline void _2171d85a9_conditional(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cb55d_Conditional> _36232_c);
inline void _2171d8862_infIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cb85a_InfIter> _38228_it);
inline void _2171d8b1a_whileIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cbd11_WhileIter> _39930_it);
inline void _2171d8dc3_rangeIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter> _43830_it);
inline void _2171d917b_cont(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ccae2_ContSt> _45121_c);
inline void _2171d9434_label(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cd472_Label> _45622_l);
inline void _2171d96dc_gotoSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cdad2_GotoSt> _46123_gt);
inline void _2171d9995_postfix(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cdeab_Postfix> _46628_p);
inline void _2171d9c4d_assignLeft(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Any* _47332_model);
inline void _2171da006_shl(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _50424_a);
inline void _2171da2ae_shr(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _51024_a);
inline void _2171da567_divByZeroAssign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _51636_a);
inline void _2171da820_assign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _52227_a);
inline void _2171daac8_mapLookupAssign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _55337_a);
inline void _2171dad81_multiAssignTup(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _58536_a);
inline void _2171db139_multiAssignFn(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _65535_a);
inline void _2171db3e2_multiAssign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign> _71432_a);
inline jule::Fn<void> _2171db733_matchExpr(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d0463_Match> _74030_m);
inline void _2171dba96_case(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d0463_Match> _75025_m, jule::Ptr<_2088d0c5a_Case> _75046_c);
inline void _2171dbd4e_matchSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d0463_Match> _82028_m);
inline void _2171dc107_fallSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d1453_FallSt> _87523_f);
inline void _2171dc3b0_breakSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ccebb_BreakSt> _88024_b);
inline void _2171dc668_setResult(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d17e9_RetSt> _88930_r);
inline void _2171dc921_retSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d17e9_RetSt> _91726_r);
inline void _2171dcbc9_var(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_20894d7de_Var> _95324_v);
inline void _2171dce82_mutSlicing(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da7aa3_MutSlicingExpr> _95931_m);
inline void _2171dd23a_swap(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da680a_SwapExpr> _97625_m);
inline void _2171dd4e3_exceptionalForwarding(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da6057_ExceptionalForwardingExpr> _98442_m);
inline void _2171dd79b_st(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Any _99023_st);
inline void _2171dda54_scopeStmts(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ca969_Scope>* _104632_s);
inline void _2171ddd0c_scope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ca969_Scope> _105526_s);
inline void _2171de0b5_commonFuncScope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_208822372_FnIns>* _107037_f);
inline void _2171de428_anonFuncScope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr> _111034_m, jule::Str _111056_ident);
inline void _2171de6d1_funcScope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_208822372_FnIns> _114230_f);
inline jule::Ptr<_2171e2bce_exprCoder> static__2171e30ca_new(jule::Ptr<_2172b1a06_ObjectCoder>* _5021_oc);
inline void _2171e3383_string(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const>* _5624_c);
inline void _2171e363b_boolean(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Bool _7124_b);
inline void _2171e3839_nilLit(jule::Ptr<_2171e2bce_exprCoder> _self_);
inline jule::Bool _2171e3b7a_ftoaSpecialCases(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::F64* _8334_x);
inline void _2171e3e33_float32(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const>* _9725_c);
inline void _2171e41db_float64(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const>* _11625_c);
inline void _2171e4494_constant(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const> _13429_c);
inline void _2171e48b2_divByZeroBinary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208711827_Token>* _15833_op, jule::Ptr<_208811a9d_OperandExpr>* _15857_l, jule::Ptr<_208811a9d_OperandExpr>* _15885_r);
inline void _2171e50aa__unsafeBinary(jule::Ptr<_2171e2bce_exprCoder> _self_, _21e64c5b5_Builder* _19735_buf, jule::Str* _19759_l, jule::Str* _19768_r, jule::Ptr<_2089ce661_Type>* _1988_lk, jule::Ptr<_2089ce661_Type>* _19830_rk, jule::U64 _19847_op, jule::Str _19862_kind);
inline void _2171e5363_unsafeBinary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812098_BinaryExpr> _26633_m);
inline void _2171e56c6_shl(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208811a9d_OperandExpr>* _27825_l, jule::Ptr<_208811a9d_OperandExpr>* _27853_r);
inline void _2171e5a39_shr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208811a9d_OperandExpr>* _30625_l, jule::Ptr<_208811a9d_OperandExpr>* _30653_r);
inline void _2171e5ce2_binary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812098_BinaryExpr> _33427_m);
inline void _2171e609a_var(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20894d7de_Var> _35124_m);
inline void _2171e6353_structureIns(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2087490bd_StructIns> _36733_m);
inline void _2171e660b_unary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812472_UnaryExpr> _37126_m);
inline void _2171e68b4_structureLit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812d46_StructLitExpr> _39533_m);
inline void _2171e6b6c_allocStructure(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208813143_AllocStructLitExpr> _43935_m);
inline void _2171e6e25_possibleRefExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _44732_expr);
inline void _2171e7343_castTraitFromTrait(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088136c6_CastingExpr>* _46140_m, jule::Ptr<_2088299c8_Trait> _46167_t1, jule::Ptr<_2088299c8_Trait> _46189_t2);
inline void _2171e75eb_casting(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088136c6_CastingExpr> _47428_m);
inline void _2171e78a4_args(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _62626_m);
inline void _2171e7b5c_modelForCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _65733_expr);
inline void _2171e7e15_pushCallInf(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _67229_m);
inline jule::Bool _2171e8256_isWrapped(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _69531_m);
inline jule::Bool _2171e8597_writeReceiver(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _72234_m);
inline void _2171e8850_pureFuncCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _73634_m);
inline void _2171e8b08_coFuncCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _83032_m);
inline void _2171e8e6b_writeUseExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208822372_FnIns>* _90834_f, jule::Ptr<_20899a9a1_Data> _90855_d);
inline void _2171e92ce_funcCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr> _92929_m, jule::Bool _92951_ignoreExceptional);
inline void _2171e9587_slice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814452_SliceExpr> _101226_m);
inline void _2171e9840_indexing(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814908_IndexingExpr> _104129_m);
inline void _2171e9ae8_unsafeIndexing(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da819c_UnsafeIndexingExpr> _109235_m);
inline void _2171e9da1_anonFunc(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr> _110929_m);
inline void _2171ea159_mapExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208815662_MapExpr> _114028_m);
inline void _2171ea412_slicing(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208815be5_SlicingExpr> _117528_m);
inline void _2171ea6ba_traitSub(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208816278_TraitSubIdentExpr> _119129_m);
inline void _2171ea973_structureSub(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208816b19_StructSubIdentExpr> _120733_m);
inline void _2171eac2b_array(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817389_ArrayExpr> _121626_m);
inline void _2171eaed4_funcInsCommon(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208822372_FnIns> _126634_m);
inline void _2171eb28c_funcIns(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208822372_FnIns> _127328_m);
inline void _2171eb545_tuple(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817686_TupleExpr> _128426_m);
inline void _2171eb7ed_newCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208818159_BuiltinNewCallExpr> _129528_m);
inline void _2171ebaa6_printCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817983_BuiltinPrintCallExpr> _130730_m);
inline void _2171ebd5e_printlnCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817c80_BuiltinPrintlnCallExpr> _131632_m);
inline void _2171ec117_panicCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208818533_BuiltinPanicCallExpr> _132530_m);
inline void _2171ec3c0_errorCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881a139_BuiltinErrorCallExpr> _133330_m);
inline void _2171ec678_copyCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208819c60_BuiltinCopyCallExpr> _136529_m);
inline void _2171ec931_lenCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088191b0_BuiltinLenCallExpr> _137328_m);
inline void _2171ecbd9_capCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088194ac_BuiltinCapCallExpr> _138928_m);
inline void _2171ece92_deleteCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208819886_BuiltinDeleteCallExpr> _139431_m);
inline void _2171ed24a_makeCallSlice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088189d9_BuiltinMakeCallExpr>* _141835_m);
inline void _2171ed503_makeCallStr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088189d9_BuiltinMakeCallExpr>* _144233_m);
inline void _2171ed7ab_makeCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088189d9_BuiltinMakeCallExpr> _145329_m);
inline void _2171eda64_pushToSlice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da8576_PushToSliceExpr> _146132_m);
inline void _2171edd1c_appendToSlice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da8950_AppendToSliceExpr> _152134_m);
inline void _2171ee0c5_appendCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208818db3_BuiltinAppendCallExpr> _152931_m);
inline void _2171ee37d_sizeof(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881a436_SizeofExpr> _153727_m);
inline void _2171ee636_alignof(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881aada_AlignofExpr> _154328_m);
inline void _2171ee8de_runeLit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881acc7_RuneExpr> _154924_m);
inline void _2171eeb97_structureStatic(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208816eb0_StructStaticIdentExpr> _156336_m);
inline void _2171eee50_backendEmit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881b14b_BackendEmitExpr> _156732_m);
inline void _217200208_free(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881b448_FreeExpr> _158325_m);
inline void _2172004b1_strComp(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da7520_StrCompExpr> _159228_m);
inline void _217200769_emptyCompare(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da6bd4_EmptyCompareExpr> _160833_m);
inline void _217200a22_unsafeDeref(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da9126_UnsafeDerefExpr> _161732_m);
inline void _217200cca_unsafeCasting(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da9654_UnsafeCastingExpr> _162834_m);
inline void _217201083_strConcat(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da64a8_StrConcatExpr> _164530_m);
inline void _21720133b_strFromBytes(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216d93a39_StrFromBytes> _166733_m);
inline void _2172015e4_model(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _167326_m);
inline jule::Bool _217201935_handleFieldByDefault(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208748496_FieldIns>* _177942_f);
inline void _217201bdd_initStructLit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _180035_s);
inline void _217201e96_fillCollectionByDefault(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089ce661_Type>* _182245_elem);
inline void _21720224e_initCollection(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089ce661_Type>* _183736_elem);
inline void _217202507_initArray(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089dec8c_Arr>* _185131_arr);
inline void _2172027b0_initExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089ce661_Type> _186529_t);
inline jule::Ptr<_2172053a6_TestCoder> static__21720585c_New(jule::Ptr<_2172b1a06_ObjectCoder>* _2021_oc);
inline jule::Ptr<_20890d040_ImportInfo> _217205ae3_findTestingPackage(jule::Ptr<_2172053a6_TestCoder> _self_);
inline void _217205d9b_appendTest(jule::Ptr<_2172053a6_TestCoder> _self_, jule::Ptr<_208822372_FnIns> _3531_f);
inline void _217206154_appendPackageTests(jule::Ptr<_2172053a6_TestCoder> _self_, jule::Ptr<_2089107b2_Package>* _5040_p);
inline jule::Bool _2172063da_readyTestingPackage(jule::Ptr<_2172053a6_TestCoder> _self_);
inline void _2172065d8_callTmReset(jule::Ptr<_2172053a6_TestCoder> _self_);
inline void _2172067d6_callTmFailed(jule::Ptr<_2172053a6_TestCoder> _self_);
inline void _2172069d4_callTmSkipped(jule::Ptr<_2172053a6_TestCoder> _self_);
inline void _217206bd2_Serialize(jule::Ptr<_2172053a6_TestCoder> _self_);
inline void static__217208541_writeIdentTo(_21e64c5b5_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__2172088d7_toOut(_21e64c5b5_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__217208d38_toLocal(_21e64c5b5_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident);
inline void static__217209124_func(_21e64c5b5_Builder* _7722_buf, jule::Ptr<_20881e2b4_Fn>* _7750_f);
inline void static__217209410_funcIns(_21e64c5b5_Builder* _9525_buf, jule::Ptr<_208822372_FnIns>* _9553_f);
inline void static__2172096eb_traitDecl(_21e64c5b5_Builder* _11027_buf, jule::Ptr<_2088299c8_Trait> _11050_t);
inline void static__2172099d7_param(_21e64c5b5_Builder* _11423_buf, jule::Ptr<_20881c7e0_Param>* _11447_p);
inline void static__217209cc3_structure(_21e64c5b5_Builder* _12927_buf, jule::Ptr<_208746230_Struct>* _12951_s);
inline void static__21720a0ae_structureIns(_21e64c5b5_Builder* _14030_buf, jule::Ptr<_2087490bd_StructIns>* _14054_s);
inline void static__21720a39a_field(_21e64c5b5_Builder* _14823_buf, jule::Ptr<_208744e10_Field>* _14847_f);
inline void static__21720a686_var(_21e64c5b5_Builder* _15821_buf, jule::Ptr<_20894d7de_Var> _15848_v);
inline void static__21720a972_iterBegin(_21e64c5b5_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__21720ac5d_iterEnd(_21e64c5b5_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__21720b049_iterNext(_21e64c5b5_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__21720b335_label(_21e64c5b5_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__21720b621_matchEnd(_21e64c5b5_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__21720b90c_caseBegin(_21e64c5b5_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_2172b1a06_ObjectCoder> static__2172b1e68_New(jule::Ptr<_20939938d_IR>* _11921_ir, _2172ae251_SerializationInfo _11935_info);
inline void _2172b2221_write(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Str _13222_s);
inline void _2172b24c9_writeBytes(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Slice<jule::U8> _13627_b);
inline void _2172b26c7_addIndent(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b28c5_doneIndent(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b2ac3_indent(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline jule::I64 _2172b2e14_findAnyType(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089ce661_Type>* _15533_t);
inline jule::I64 _2172b3255_pushCoSpawn(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns> _16432_f);
inline jule::I64 _2172b3596_pushDealloc(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089ce661_Type> _26732_t);
inline jule::Str _2172b38d7_pushAnonFn(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr>* _28332_m);
inline jule::I64 _2172b3c28_pushAnyType(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089ce661_Type> _32532_t);
inline void _2172b3ed1_pushResultIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns>* _42535_f);
inline void _2172b4289_pushResult(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _44632_f);
inline void _2172b45ec_pushAndWriteMaskMapper(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2088299c8_Trait> _45943_t1, jule::Ptr<_2088299c8_Trait> _45965_t2);
inline void _2172b48a5_locInfo(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208711827_Token>* _51025_t);
inline void _2172b4aa3_head(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b4d5b_links(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Bool _57722_std);
inline void _2172b5114_prepareStructure(_2172b1a06_ObjectCoder* _self_, jule::Ptr<_208746230_Struct>* _60037_s);
inline void _2172b5312_prepareStructures(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b55ba_structurePlainDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _63140_s);
inline void _2172b57b8_structurePlainDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b5a71_fieldDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208748496_FieldIns>* _64731_f);
inline void _2172b5e8e_structureOperatorEq(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Str _65436_ident, jule::Ptr<_2087490bd_StructIns>* _65453_s, jule::Bool _65474_decl);
inline void _2172b6302_structureOperators(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _72240_s, jule::Bool _72261_decl);
inline void _2172b65aa_structureInsDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _73138_s);
inline void _2172b6863_structureDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _75135_s);
inline void _2172b6a61_structureDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b6d19_structureMethodDecls1(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _76643_s);
inline void _2172b7017_structureMethodDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b74e0_funcHead(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _78630_buf, jule::Ptr<_208822372_FnIns>* _78658_f, jule::Bool _78675_ptr, jule::Str _78686_ident);
inline void _2172b7853_funcDeclIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns>* _80533_f, jule::Bool _80550_ptr);
inline void _2172b7bb6_funcDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _81330_f, jule::Bool _81344_ptr);
inline void _2172b7e6e_funcDeclTrait(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _81935_f);
inline void _2172b816c_funcDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b8425_traitDataTypeMethods(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2172aee66_traitHash>* _84142_hash);
inline void _2172b8623_traitDataTypes(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172b8986_paramIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _86930_buf, jule::Ptr<_20882121c_ParamIns>* _86958_p);
inline void _2172b8ce9_paramsIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _87531_buf, jule::Ptr<_208822372_FnIns>* _87559_f);
inline void _2172b915c_varInitExpr(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20894d7de_Var>* _89633_v, jule::Fn<void> _89648_init);
inline void _2172b9415_var(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20894d7de_Var> _91424_v);
inline void _2172b9778_anonFuncInsDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr>* _94537_m, jule::Str _94559_ident);
inline void _2172b9adb_anonFuncIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr>* _95133_m, jule::Str _95155_ident);
inline void _2172b9e4e_funcIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns> _96128_f, jule::Str _96145_ident);
inline void _2172ba207_func(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _97126_f);
inline void _2172ba56a_funcTrait(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _97727_s, jule::Ptr<_208822372_FnIns>* _97753_f);
inline __jule_tuple_x_208822372_FnIns__jule_tuple_bool _2172ba8ab_findTraitMetMap(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _99237_m);
inline void _2172bac1e_traitWrapper(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2088299c8_Trait>* _100434_t, jule::Ptr<_20881e2b4_Fn>* _100456_m);
inline void _2172bae1c_traitWrappers(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bb280_traitDataMethods(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2172aee66_traitHash>* _106838_hash, jule::Ptr<_2087490bd_StructIns> _106856_s);
inline void _2172bb69d_traitData(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2172aee66_traitHash>* _108631_hash, jule::I64 _108649_i, jule::Ptr<_2087490bd_StructIns>* _108662_s);
inline void _2172bb89b_traitDatas(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bba99_globalDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bbc97_decls(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bc050_structureMethods(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _114638_s);
inline void _2172bc308_structureIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _115334_s);
inline void _2172bc5b1_structure(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _116231_s);
inline void _2172bc7ae_structures(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bc9ac_funcs(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bcc65_pushInit(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089107b2_Package>* _120130_pkg);
inline void _2172bce63_anonHashes(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bd161_initGlobals(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bd35e_initCaller(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bd55c_end(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bd815_buildTraitHash(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2088299c8_Trait>* _127336_t);
inline void _2172bda13_buildTraitHashes(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172bdd76_insertBuf(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _130331_buf, jule::I64 _130354_pos);
inline void _2172be074_implementRC(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172be272_serializeHead(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline void _2172be470_Serialize(jule::Ptr<_2172b1a06_ObjectCoder> _self_);
inline jule::Str _2172c0e00_Str(_2172c0a26_customType* _self_);
inline jule::Bool _2172c1241_Equal(jule::Ptr<_2172c0a26_customType> _self_, jule::Ptr<_2089ce661_Type> _2518_k);
inline jule::Ptr<_2172c163c_typeCoder> static__2172c1b8c_new(jule::Ptr<_2172b1a06_ObjectCoder>* _5021_oc);
inline void _2172c2000_toType(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _5727_buf, jule::Str _5754_id);
inline void _2172c2363_prim(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _7125_buf, jule::Ptr<_2089d846c_Prim> _7148_p);
inline void _2172c26c6_tuple(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _7626_buf, jule::Ptr<_2089dd560_Tuple> _7653_t);
inline void _2172c2a39_asSptr(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _2172c2d9c_sptr(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _9525_buf, jule::Ptr<_2089dbe98_Sptr> _9552_sptr);
inline void _2172c3210_ptr(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _10224_buf, jule::Ptr<_2089e0760_Ptr> _10251_p);
inline void _2172c3573_enumDecl(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _11329_buf, jule::Ptr<_20882c17e_Enum> _11356_e);
inline void _2172c38d6_typeEnumDecl(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _11833_buf, jule::Ptr<_20882d889_TypeEnum> _11860_e);
inline void _2172c3c49_asSlice(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _12228_buf, jule::Ptr<_2089ce661_Type> _12255_elem);
inline void _2172c40ac_slice(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _12926_buf, jule::Ptr<_2089dc96b_Slc> _12953_s);
inline void _2172c4420_mapType(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _13428_buf, jule::Ptr<_2089de110_Map> _13455_m);
inline void _2172c4ae6_structureIns(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _14733_buf, jule::Ptr<_2087490bd_StructIns> _14760_s);
inline void _2172c4e59_array(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _17526_buf, jule::Ptr<_2089dec8c_Arr> _17553_a);
inline void _2172c5630_paramIns(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _19829_buf, jule::Ptr<_20882121c_ParamIns>* _19857_p);
inline void _2172c5d06_funcInsResult(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _23034_s, jule::Ptr<_208822372_FnIns>* _23060_f);
inline void _2172c6169_anonFunc(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _24829_buf, jule::Ptr<_208822372_FnIns> _24856_f);
inline void _2172c64cc_func(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _26925_buf, jule::Ptr<_208822372_FnIns> _26952_f);
inline void _2172c6840_kind(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _27625_buf, jule::Ptr<_2089ce661_Type> _27652_k);
inline jule::Ptr<_2172c9227_resultCoder> static__2172c9733_new(jule::Ptr<_2172c163c_typeCoder>* _34421_tc);
inline void _2172c9a96_ptr(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _34824_s, jule::Ptr<_2089e0760_Ptr> _34849_p);
inline void _2172c9e09_sptr(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _35325_s, jule::Ptr<_2089dbe98_Sptr> _35350_p);
inline void _2172ca26c_mapType(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _35828_s, jule::Ptr<_2089de110_Map> _35853_p);
inline void _2172ca5d0_slice(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _36426_s, jule::Ptr<_2089dc96b_Slc> _36451_slc);
inline void _2172ca943_arr(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _36924_s, jule::Ptr<_2089dec8c_Arr> _36949_arr);
inline void _2172caca6_func(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _37525_s, jule::Ptr<_208822372_FnIns> _37550_f);
inline void _2172cb119_tup(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _38824_s, jule::Ptr<_2089dd560_Tuple> _38849_tup);
inline void _2172cb47c_codeMut(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _39528_s, jule::Ptr<_2089ce661_Type>* _39554_t);
inline void _2172cb7e0_codeMut1(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _44229_s, jule::Ptr<_2089ce661_Type>* _44255_t);
inline jule::Slice<jule::U8> _2172cbaed_code(_2172c9227_resultCoder* _self_, jule::Ptr<_2089ce661_Type>* _45125_t);
inline jule::Str _21ad1e32e_Name(_21ad1e164_Flag* _self_);
inline jule::Str _21ad1e483_What(_21ad1e164_Flag* _self_);
inline void _21ad1e5d7_Reset(_21ad1e164_Flag* _self_);
inline jule::I32 _21ad1e73b_Short(_21ad1e164_Flag* _self_);
inline jule::Str _21ad22453_Name(_21ad22299_Flag* _self_);
inline jule::Str _21ad22761_What(_21ad22299_Flag* _self_);
inline void _21ad228a4_Reset(_21ad22299_Flag* _self_);
inline jule::I32 _21ad229e7_Short(_21ad22299_Flag* _self_);
inline jule::Str _21ad25698_Name(_21ad254de_Flag* _self_);
inline jule::Str _21ad259a6_What(_21ad254de_Flag* _self_);
inline void _21ad25ae9_Reset(_21ad254de_Flag* _self_);
inline jule::I32 _21ad25c3c_Short(_21ad254de_Flag* _self_);
inline jule::Str _21ad28932_Name(_21ad28778_Flag* _self_);
inline jule::Str _21ad28c40_What(_21ad28778_Flag* _self_);
inline void _21ad28d83_Reset(_21ad28778_Flag* _self_);
inline jule::I32 _21ad28ec6_Short(_21ad28778_Flag* _self_);
inline jule::Str _21ad2bb77_Name(_21ad2b9bd_Flag* _self_);
inline jule::Str _21ad2be85_What(_21ad2b9bd_Flag* _self_);
inline void _21ad2c0c8_Reset(_21ad2b9bd_Flag* _self_);
inline jule::I32 _21ad2c21b_Short(_21ad2b9bd_Flag* _self_);
inline jule::Ptr<_21733e325_FlagSet> static__21733e644_New(void);
inline jule::Trait _21733eaea_FindFlag(_21733e325_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _21733ee3b_FindFlagShort(_21733e325_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _217340513_Parse(_21733e325_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_21ad2b9bd_Flag> _21ada597b_addFlagCommon(_21733e325_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_21ad28778_Flag> _21adae15a_addFlagCommon(_21733e325_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _21ada344b_AddVar(_21733e325_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _21adabb6e_AddVar(_21733e325_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _21ad3db45_parseInteger(_217341cd9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _21ad46444_parseInteger(_217341cd9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _217342636_getData(_217341cd9_argParser* _self_);
inline jule::VoidExceptional _2173428ab_processFlag(_217341cd9_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _217342b64_singleDash(_217341cd9_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _217342e1c_doubleDash(_217341cd9_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _21734311a_tryArg(_217341cd9_argParser* _self_);
inline jule::VoidExceptional _217343318_parse(_217341cd9_argParser* _self_);
inline __jule_tuple_x_20939938d_IR__jule_tuple_s_21e65b904_Log static__209399866_Build(jule::Str _3018_path, jule::I64 _3029_flags);
inline void _209399d50_appendStructs(_20939938d_IR* _self_, jule::Ptr<_2089107b2_Package>* _6830_p, jule::Slice<jule::Ptr<_208746230_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_208746230_Struct>> _20939a0d6_GetAllStructures(_20939938d_IR* _self_);
inline void _20939a449_appendGlobals(_20939938d_IR* _self_, jule::Ptr<_2089107b2_Package>* _9630_p, jule::Slice<jule::Ptr<_20894d7de_Var>>* _9654_buffer);
inline jule::Slice<jule::Ptr<_20894d7de_Var>> _20939a6d0_GetAllGlobals(_20939938d_IR* _self_);
inline void _20939a8cd_Order(_20939938d_IR* _self_);
inline jule::Exceptional<jule::Slice<_21e80ade4_Dir>> static__220c6b1cc_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__220c6b3ca_Create(jule::Str _3419_path);
inline jule::VoidExceptional static__220c6b60b_Remove(jule::Str _4519_path);
inline jule::Ptr<_21e80ba1b_Cmd> static__21e80be6c_New(jule::Str _3516_path);
inline jule::VoidExceptional _21e80c16a_Spawn(_21e80ba1b_Cmd* _self_);
inline jule::Exceptional<jule::I64> _21e80c5ee_Wait(_21e80ba1b_Cmd* _self_);
inline jule::VoidExceptional _21e88a43a_spawn(_21e80ba1b_Cmd* _self_);
inline jule::Exceptional<jule::I64> _21e88a8be_wait(_21e80ba1b_Cmd* _self_);
inline void _238c8eddb_Free(void* _4520_ptr);
inline jule::Str _238cbd47a_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _238cbd711_StrToBytes(jule::Str _9015_s);
inline jule::Str _238cbe06e_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _2173859dc_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _238cd51b7_StrBytes(jule::Str _4013_s);
inline jule::Str _238cd544d_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _238cd5717_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I64 _239079c86_GetLastErrno(void);
inline jule::I64 _2390a8710_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg);
inline jule::I64 _2390a8a84_Stat(jule::U8* _6016_path, struct stat* _6033_stat);
inline jule::I64 _2390a8eb3_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode);
inline jule::U8* _2390a9337_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen);
inline DIR* _2390a9832_Opendir(jule::U8* _7619_path);
inline struct dirent* _2390a9a0d_Readdir(DIR* _7923_dir);
inline jule::I64 _2390a9ca5_Closedir(DIR* _8224_dir);
inline jule::I64 _2390aa6ac_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode);
inline jule::I64 _2390aa976_Rmdir(jule::U8* _9617_path);
inline jule::I64 _2390aac40_Unlink(jule::U8* _9918_path);
inline jule::I64 _2390c50bc_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _2390c5496_Close(jule::I64 _2510_handle);
inline jule::I64 _2390c584d_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _2390c5a7e_Exit(jule::I64 _339_code);
inline __jule_tuple_i32__jule_tuple_int _21e42d495_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _21e42d7d6_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _21e42dd36_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _21e42e881_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _21e42ec05_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _21e430288_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _21e430552_RuneStart(jule::U8 _51714_b);
inline jule::I64 _21e56c5c3_LeadingZeros64(jule::U64 _5919_x);
inline jule::I64 _21e56d519_TrailingZeros(jule::U64 _8118_x);
inline jule::I64 _21e56ddee_TrailingZeros32(jule::U32 _10320_x);
inline jule::I64 _21e56e1b8_TrailingZeros64(jule::U64 _11220_x);
inline jule::I64 _21e574b91_Len32(jule::U32 _35014_x);
inline jule::I64 _21e574e5a_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _21e575be7_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _21e577501_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _238b40bb0_f64bits(jule::F64 _612_f);
inline jule::I64 _238b89bc6_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _238cd6a26_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _21ad7a3e0_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _21ad6d1c4_structToStr(_21e64c5b5_Builder _17519_x);
inline jule::Str _217590cd5_toStr(jule::Any _21613_x);
inline jule::Str _2175dc518_toStr(jule::Str _21613_x);
inline jule::Str _21828e296_toStr(jule::I64 _21613_x);
inline jule::Str _2182954ab_toStr(jule::I64 _21613_x);
inline jule::Str _2182a1330_toStr(jule::I64 _21613_x);
inline jule::Str _2182d43b8_toStr(jule::I64 _21613_x);
inline jule::Str _2183249be_toStr(jule::U8 _21613_x);
inline jule::Str _21832523e_toStr(jule::I32 _21613_x);
inline jule::Str _21863b3ce_toStr(jule::I64 _21613_x);
inline jule::Str _218901c8d_toStr(jule::I64 _21613_x);
inline jule::Str _218902068_toStr(jule::U64 _21613_x);
inline jule::Str _2189079db_toStr(jule::Bool _21613_x);
inline jule::Str _21890e053_toStr(jule::F64 _21613_x);
inline jule::Str _2189b2b95_toStr(jule::F32 _21613_x);
inline jule::Str _2189b31c3_toStr(jule::I8 _21613_x);
inline jule::Str _218324d98_toStr(jule::I16 _21613_x);
inline jule::Str _2189bdc28_toStr(jule::U8 _21613_x);
inline jule::Str _2189c74a1_toStr(jule::U16 _21613_x);
inline jule::Str _2189cc550_toStr(jule::U32 _21613_x);
inline jule::Str _218c3581e_toStr(jule::Ptr<_20894d7de_Var> _21613_x);
inline jule::Str _218c37c1c_toStr(jule::Ptr<_2089cd94b_TypeAlias> _21613_x);
inline jule::Str _218c3a181_toStr(jule::Ptr<_208746230_Struct> _21613_x);
inline jule::Str _218c3a406_toStr(jule::Ptr<_20881e2b4_Fn> _21613_x);
inline jule::Str _218c41e68_toStr(jule::Ptr<_2088299c8_Trait> _21613_x);
inline jule::Str _218c42199_toStr(jule::Ptr<_20882c17e_Enum> _21613_x);
inline jule::Str _218c45620_toStr(jule::Ptr<_20882d889_TypeEnum> _21613_x);
inline jule::Str _218c67158_toStr(jule::Ptr<_208744e10_Field> _21613_x);
inline jule::Str _218c7870d_toStr(jule::Ptr<_208799195_Const> _21613_x);
inline jule::Str _218c91b22_toStr(jule::Ptr<_20882b623_EnumItem> _21613_x);
inline jule::Str _218ca27c0_toStr(jule::Ptr<_20881c7e0_Param> _21613_x);
inline jule::Str _218e55412_toStr(jule::Ptr<_20872794d_IdentTypeDecl> _21613_x);
inline jule::Str _218e77dc4_toStr(jule::Ptr<_2088ce9e5_MultiAssign> _21613_x);
inline jule::Str _218e809d1_toStr(jule::Ptr<_20872c26b_TupleExpr> _21613_x);
inline jule::Str _218e8cbca_toStr(jule::Ptr<_208735ce1_AssignSt> _21613_x);
inline jule::Str _218e8e2c5_toStr(jule::Ptr<_20872b677_Expr> _21613_x);
inline jule::Str _218e8e605_toStr(jule::Ptr<_2088cdeab_Postfix> _21613_x);
inline jule::Str _218e926a2_toStr(jule::Ptr<_2088ce462_Assign> _21613_x);
inline jule::Str _218e918e3_toStr(jule::Ptr<_20899a9a1_Data> _21613_x);
inline jule::Str _218e97c07_toStr(jule::Ptr<_208814078_FnCallExpr> _21613_x);
inline jule::Str _218eb7ba0_toStr(jule::Ptr<_2088cd472_Label> _21613_x);
inline jule::Str _218ed5b46_toStr(jule::Ptr<_2088ca969_Scope> _21613_x);
inline jule::Str _218edec60_toStr(jule::Ptr<_20881a139_BuiltinErrorCallExpr> _21613_x);
inline jule::Str _218ee2d62_toStr(jule::Ptr<_20881b14b_BackendEmitExpr> _21613_x);
inline jule::Str _218ee3549_toStr(jule::Ptr<_208818db3_BuiltinAppendCallExpr> _21613_x);
inline jule::Str _219001942_toStr(jule::Ptr<_208817983_BuiltinPrintCallExpr> _21613_x);
inline jule::Str _2190041b4_toStr(jule::Ptr<_208817c80_BuiltinPrintlnCallExpr> _21613_x);
inline jule::Str _21900059a_toStr(jule::Ptr<_208818533_BuiltinPanicCallExpr> _21613_x);
inline jule::Str _219006705_toStr(jule::Ptr<_208819c60_BuiltinCopyCallExpr> _21613_x);
inline jule::Str _219003e83_toStr(jule::Ptr<_208819886_BuiltinDeleteCallExpr> _21613_x);
inline jule::Str _21900e19c_toStr(jule::Ptr<_20881b448_FreeExpr> _21613_x);
inline jule::Str _219015956_toStr(jule::Ptr<_2088cb55d_Conditional> _21613_x);
inline jule::Str _219020d6d_toStr(jule::Ptr<_2088cb85a_InfIter> _21613_x);
inline jule::Str _2190255d1_toStr(jule::Ptr<_2088cbd11_WhileIter> _21613_x);
inline jule::Str _2190520ad_toStr(jule::Ptr<_2088cc7e5_RangeIter> _21613_x);
inline jule::Str _2190616c7_toStr(jule::Ptr<_20873b70e_WhileKind> _21613_x);
inline jule::Str _219064103_toStr(jule::Ptr<_20873c116_RangeKind> _21613_x);
inline jule::Str _21907eb8a_toStr(jule::Ptr<_2088ccae2_ContSt> _21613_x);
inline jule::Str _21908859a_toStr(jule::Ptr<_2088cdad2_GotoSt> _21613_x);
inline jule::Str _2190c1627_toStr(jule::Ptr<_20872ce92_IdentExpr> _21613_x);
inline jule::Str _2190e55c4_toStr(jule::Ptr<_208814908_IndexingExpr> _21613_x);
inline jule::Str _21913d760_toStr(jule::Ptr<_2088d0463_Match> _21613_x);
inline jule::Str _219157416_toStr(jule::Ptr<_2088d1453_FallSt> _21613_x);
inline jule::Str _219172068_toStr(jule::Ptr<_2088ccebb_BreakSt> _21613_x);
inline jule::Str _219177dc6_toStr(jule::Ptr<_2088d17e9_RetSt> _21613_x);
inline jule::Str _219184dd3_toStr(jule::Ptr<_208737441_ScopeTree> _21613_x);
inline jule::Str _219186511_toStr(jule::Ptr<_20873a28a_VarDecl> _21613_x);
inline jule::Str _219188513_toStr(jule::Ptr<_20873e019_TypeAliasDecl> _21613_x);
inline jule::Str _21918c737_toStr(jule::Ptr<_20873d700_Conditional> _21613_x);
inline jule::Str _219194321_toStr(jule::Ptr<_20873add4_Iter> _21613_x);
inline jule::Str _21919283b_toStr(jule::Ptr<_20873c8b9_ContSt> _21613_x);
inline jule::Str _219199eb4_toStr(jule::Ptr<_208734927_LabelSt> _21613_x);
inline jule::Str _21919ca99_toStr(jule::Ptr<_208734d01_GotoSt> _21613_x);
inline jule::Str _21919c868_toStr(jule::Ptr<_20873ecd9_MatchCase> _21613_x);
inline jule::Str _2191a4166_toStr(jule::Ptr<_2087350ed_FallSt> _21613_x);
inline jule::Str _2191a2450_toStr(jule::Ptr<_20873c4e0_BreakSt> _21613_x);
inline jule::Str _2191a9ac8_toStr(jule::Ptr<_20873a664_RetSt> _21613_x);
inline jule::Str _2191a50ac_toStr(jule::Ptr<_20872c04b_UseExpr> _21613_x);
inline jule::Str _2085a0111_toStr(jule::Ptr<_208743dcb_Impl> _21613_x);
inline jule::Str _2085a3653_toStr(jule::Ptr<_20874302e_StructDecl> _21613_x);
inline jule::Str _2085a715c_toStr(jule::Ptr<_2087390d0_FnDecl> _21613_x);
inline jule::Str _2085a7679_toStr(jule::Ptr<_20874376b_TraitDecl> _21613_x);
inline jule::Str _2085b02ec_toStr(jule::Ptr<_2087413d4_EnumDecl> _21613_x);
inline jule::Str _2085b380b_toStr(jule::Ptr<_20874236e_TypeEnumDecl> _21613_x);
inline jule::Str _2085db02b_toStr(jule::Ptr<_208816b19_StructSubIdentExpr> _21613_x);
inline jule::Str _2085db6d0_toStr(jule::Ptr<_208812472_UnaryExpr> _21613_x);
inline jule::Str _20861cce9_toStr(jule::Ptr<_208822372_FnIns> _21613_x);
inline jule::Str _21947b4c6_toStr(jule::Ptr<_208729d5c_MapTypeDecl> _21613_x);
inline jule::Str _2194807a5_toStr(jule::Ptr<_208728a70_TupleTypeDecl> _21613_x);
inline jule::Str _219494720_toStr(jule::Ptr<_20872960e_ArrTypeDecl> _21613_x);
inline jule::Str _219499505_toStr(jule::Ptr<_208728773_SlcTypeDecl> _21613_x);
inline jule::Str _2194a04b7_toStr(jule::Ptr<_208728d6c_PtrTypeDecl> _21613_x);
inline jule::Str _2194a618d_toStr(jule::Ptr<_2087283dd_SptrTypeDecl> _21613_x);
inline jule::Str _2195075da_toStr(jule::Ptr<_20872db0d_VariadicExpr> _21613_x);
inline jule::Str _21950bc3d_toStr(jule::Ptr<_208814452_SliceExpr> _21613_x);
inline jule::Str _21952aba2_toStr(jule::Ptr<_208730d96_FieldExprPair> _21613_x);
inline jule::Str _219534183_toStr(jule::Ptr<_2087324a2_KeyValPair> _21613_x);
inline jule::Str _21957e673_toStr(jule::Ptr<_208817686_TupleExpr> _21613_x);
inline jule::Str _21959e583_toStr(jule::Ptr<_208813143_AllocStructLitExpr> _21613_x);
inline jule::Str _2195b2123_toStr(jule::Ptr<_2088136c6_CastingExpr> _21613_x);
inline jule::Str _2195c90e6_toStr(jule::Ptr<_208816eb0_StructStaticIdentExpr> _21613_x);
inline jule::Str _2195cc79d_toStr(jule::Ptr<_20872e78a_SubIdentExpr> _21613_x);
inline jule::Str _2195d7ad8_toStr(jule::Ptr<_208812d46_StructLitExpr> _21613_x);
inline jule::Str _219609610_toStr(jule::Ptr<_20881acc7_RuneExpr> _21613_x);
inline jule::Str _2196d6e5c_toStr(jule::Ptr<_2087490bd_StructIns> _21613_x);
inline jule::Str _2197238a0_toStr(jule::Ptr<_2089ce661_Type> _21613_x);
inline jule::Str _219748485_toStr(jule::Ptr<_208817389_ArrayExpr> _21613_x);
inline jule::Str _2197841b3_toStr(jule::Ptr<_208727c17_SubIdentTypeDecl> _21613_x);
inline jule::Str _21978733c_toStr(jule::Ptr<_20872d734_UnaryExpr> _21613_x);
inline jule::Str _21978e8b6_toStr(jule::Ptr<_208727343_TypeDecl> _21613_x);
inline jule::Str _219795988_toStr(jule::Ptr<_20872e3b1_NamespaceExpr> _21613_x);
inline jule::Str _21979ba49_toStr(jule::Ptr<_2087280e1_NamespaceTypeDecl> _21613_x);
inline jule::Str _2197d7a41_toStr(jule::Ptr<_208815be5_SlicingExpr> _21613_x);
inline jule::Str _21985b257_toStr(jule::Ptr<_208732bcd_SliceExpr> _21613_x);
inline jule::Str _2198c7977_toStr(jule::Ptr<_208816278_TraitSubIdentExpr> _21613_x);
inline jule::Str _2196514e2_toStr(jule::Ptr<_208815662_MapExpr> _21613_x);
inline jule::Str _219663adc_toStr(jule::Ptr<_208814dae_AnonFnExpr> _21613_x);
inline jule::Str _21966a7d6_toStr(jule::Ptr<_20872b941_RangeExpr> _21613_x);
inline jule::Str _21966be14_toStr(jule::Ptr<_20872c612_LitExpr> _21613_x);
inline jule::Str _21966d1ce_toStr(jule::Ptr<_20872c9db_UnsafeExpr> _21613_x);
inline jule::Str _21967853b_toStr(jule::Ptr<_20873363a_IndexingExpr> _21613_x);
inline jule::Str _21967757e_toStr(jule::Ptr<_208733c9a_SlicingExpr> _21613_x);
inline jule::Str _21967b75e_toStr(jule::Ptr<_20872ded7_CastExpr> _21613_x);
inline jule::Str _21967ae23_toStr(jule::Ptr<_2087316c1_StructLit> _21613_x);
inline jule::Str _2196859aa_toStr(jule::Ptr<_2087303a1_FnCallExpr> _21613_x);
inline jule::Str _2196845be_toStr(jule::Ptr<_208731b77_BraceLit> _21613_x);
inline jule::Str _219687e1e_toStr(jule::Ptr<_20872ec41_BinaryExpr> _21613_x);
inline jule::Str _219a8bc07_toStr(jule::Ptr<_208812098_BinaryExpr> _21613_x);
inline jule::Str _219c3083a_toStr(jule::Ptr<_208818159_BuiltinNewCallExpr> _21613_x);
inline jule::Str _219c45a70_toStr(jule::Ptr<_2088189d9_BuiltinMakeCallExpr> _21613_x);
inline jule::Str _219c7e933_toStr(jule::Ptr<_2088191b0_BuiltinLenCallExpr> _21613_x);
inline jule::Str _219c99079_toStr(jule::Ptr<_2088194ac_BuiltinCapCallExpr> _21613_x);
inline jule::Str _219cde476_toStr(jule::Ptr<_20881a436_SizeofExpr> _21613_x);
inline jule::Str _219ce7e52_toStr(jule::Ptr<_20881aada_AlignofExpr> _21613_x);
inline jule::Str _21a3c981e_toStr(jule::Ptr<_216da6057_ExceptionalForwardingExpr> _21613_x);
inline jule::Str _21a41299a_toStr(jule::Ptr<_216da8d29_StrRuneIter> _21613_x);
inline jule::Str _21a41c774_toStr(jule::Ptr<_216da7aa3_MutSlicingExpr> _21613_x);
inline jule::Str _21a457160_toStr(jule::Ptr<_216da8950_AppendToSliceExpr> _21613_x);
inline jule::Str _21a459690_toStr(jule::Ptr<_216da8576_PushToSliceExpr> _21613_x);
inline jule::Str _21a47ad43_toStr(jule::Ptr<_216da680a_SwapExpr> _21613_x);
inline jule::Str _21a4d56b6_toStr(jule::Ptr<_216d93a39_StrFromBytes> _21613_x);
inline jule::Str _21a4dec0e_toStr(jule::Ptr<_216da6bd4_EmptyCompareExpr> _21613_x);
inline jule::Str _21a4e26a1_toStr(jule::Ptr<_216da7520_StrCompExpr> _21613_x);
inline jule::Str _21a4ed888_toStr(jule::Ptr<_216da64a8_StrConcatExpr> _21613_x);
inline jule::Str _21a526581_toStr(jule::Ptr<_216da7da0_UnsafeBinaryExpr> _21613_x);
inline jule::Str _21a54d740_toStr(jule::Ptr<_216da9126_UnsafeDerefExpr> _21613_x);
inline jule::Str _21a554bca_toStr(jule::Ptr<_216da6ed1_RefExpr> _21613_x);
inline jule::Str _21a557d54_toStr(jule::Ptr<_2088129a0_StructArgExpr> _21613_x);
inline jule::Str _21a560356_toStr(jule::Ptr<_216da9654_UnsafeCastingExpr> _21613_x);
inline jule::Str _21a56e376_toStr(jule::Ptr<_216da6244_FnCallIgnoreExceptionalExpr> _21613_x);
inline jule::Str _21a5812bc_toStr(jule::Ptr<_216da819c_UnsafeIndexingExpr> _21613_x);
inline jule::Str _21aad4d70_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _21ad66046_toStr(_21e64c5b5_Builder _21613_x);
inline jule::Str _21ad748e5_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _21ad793cd_toStr(jule::Str _21613_x);
inline jule::Str _21ad7d1b2_toStr(jule::Str _21613_x);
inline void _238cd7bc0_rev(jule::Slice<jule::U8> _26512_b);
inline jule::Bool _2175be4b7_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _21761ea89_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _2185a01cd_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _21a6415be_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _2390ee05d__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline jule::U64 _21753ac5d_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _21753ae28_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Str _239107440_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline jule::I64 __jule_runeCount(jule::Str _10514_s);
inline void _21e4332be_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _21e4337ca_args(void);
inline jule::I64 _21e433d6e_strlen(jule::U8* _3122_p);
inline jule::Bool _21e43518e__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _21e487543_hash128to64(_21e48718b_u128 _4316_sum);
inline jule::U64 _21e487851_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _21e487b1a_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _21e487e5b_shiftMix(jule::U64 _5513_z);
inline jule::U64 _21e48829c_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _21e488621_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _21e488a50_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _21e488ed4_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _21e48718b_u128 _21e48938b_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _21e48718b_u128 _10342_seed);
inline _21e48718b_u128 _21e4899da_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _21e48718b_u128 _21e489e19_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _21e48718b_u128 _21e48a348_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _21e48718b_u128 _16048_seed);
inline jule::U64 _21e48a612_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _21e57bb76_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _21e57be84_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _21e57c24d_nextMatch(jule::U64* _6419_b);
inline jule::U64 _21e57c58e_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _21e57c825_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _21e57cade_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _21e57cced_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _21e57d1c7_splitHash(jule::U64 _9414_h);
inline jule::U32 _21e57d4c4_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _21e57d848_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline __jule_tuple_int__jule_tuple_bool _21e8572d6_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _21e860c07_Itoa(jule::I64 _89_x);
inline jule::Str _21e860e5a_Utoa(jule::U64 _1613_x);
inline void _21e86118b_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::I64 _21e87ad43_findLastByte(jule::U8* _2117_begin, jule::U8* _2135_end, jule::U8 _2147_b);
inline jule::I64 _21e8861e4_FindByteStr(jule::Str _4416_s, jule::U8 _4424_b);
inline jule::I64 _21e886568_FindLastByteStr(jule::Str _5520_s, jule::U8 _5528_b);
inline jule::Str _21e897128_Getwd(void);
inline jule::Bool _220bde194_IsLetter(jule::I32 _7613_r);
inline jule::Bool _220c59b16_is16(jule::Slice<_220c57d78_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _220c59e8a_is32(jule::Slice<_220c583a6_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _220c5a793_isExcludingLatin(jule::Ptr<_220c58829_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _220c5a9d5_IsUpper(jule::I32 _29512_r);
inline jule::I32 _220c5b1cd_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_220c578c2_CaseRange> _31336_cr);
inline jule::Ptr<_220c578c2_CaseRange> _220c5b552_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_220c578c2_CaseRange> _33329_caseRange);
inline jule::I32 _220c5b81b_SimpleFold(jule::I32 _37015_r);
inline jule::Str _220c5bc8e_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _220c5c157_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _220c5c4cb_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _220c5c982_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _220c5ccc3_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _220c5d202_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _220c5d576_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _220c5ed5d_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _220c601d2_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _220c60b0b_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _220c6129e_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Slice<jule::Str> _220c61623_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _220c61997_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _220c62514_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I64 _220c62888_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _220c62d72_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I64 _29044_n);
inline jule::Str _220c632a1_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _220c6402c_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _220c643a1_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _220c649ab_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Str _220c64cdb_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep);
inline jule::Bool _220c664b3_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _220c678b0_Clean(jule::Str _10814_path);
inline jule::Str _220c67e87_FromSlash(jule::Str _21114_path);
inline jule::Str _220c682c8_Join(jule::Slice<jule::Str> _2259_elem);
inline jule::Str _220c6855e_Ext(jule::Str _2308_path);
inline __jule_tuple_str__jule_tuple_bool _220c68828_Abs(jule::Str _2458_path);
inline jule::Str _220c68ae2_Base(jule::Str _25113_path);
inline jule::Str _220c68ebb_Dir(jule::Str _2828_path);
inline jule::Str _220c6920d_VolumeName(jule::Str _30015_path);
inline jule::Bool _220c6a0aa_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _220c6a3b8_IsAbs(jule::Str _5310_path);
inline jule::I64 _220c6a682_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _220c6a9c3_abs(jule::Str _638_path);
inline jule::Str _220c6ac59_join(jule::Slice<jule::Str> _749_elem);
inline jule::Slice<char*> _21e889aee_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs);
inline jule::I64 _21e889e73_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv);
inline jule::VoidExceptional _21e88a1a4_setenv(jule::Slice<jule::Str>* _5712_envv);
inline jule::I64 _21e88ac54_cmdErrorFromCode(jule::I64 _15121_code);
inline jule::I64 _21e88ae63_getLastCmdError(void);
inline void _21e89a5d2_Exit(jule::I64 _119_code);
inline jule::Str _21e89a7e1_Executable(void);
inline jule::Slice<jule::Str> _21e89aa00_Args(void);
inline jule::Exceptional<jule::Str> _21e89ae62_Getwd(void);
inline jule::I64 _21e8a12db_getLastFsError(void);
inline jule::I64 _21e8a17e7_getLastOsError(void);
inline jule::Bool _21e6118cb_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _21e611ba6_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _21e611e70_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _21e65bd66_Logf(jule::Str _3259_fmt, jule::Slice<jule::Any> _32522_args);
inline jule::Str _21e65c174_argToStr(jule::Any _32913_arg);
inline jule::I64 _21e65c43d_findNextFmt(jule::Str _34216_fmt);
inline jule::Str _21e65c806_applyFmt(jule::Str _35117_fmt, jule::Slice<jule::Any> _35127_args);
inline jule::Bool _21e65d708_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _21e65eb27_IsWindows(jule::Str _3714_os);
inline jule::Bool _21e65ee35_IsDarwin(jule::Str _4013_os);
inline jule::Bool _21e6601ee_IsLinux(jule::Str _4312_os);
inline jule::Bool _21e660540_IsI386(jule::Str _4611_arch);
inline jule::Bool _21e6607c6_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _21e660a90_IsArm64(jule::Str _5212_arch);
inline jule::Bool _21e660d59_IsUnix(jule::Str _5511_os);
inline jule::Bool _21e661233_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _21e661475_Is64Bit(jule::Str _6112_arch);
inline void _220c6ccd3_init(void);
inline jule::U32 _21ec4a60d_F32Bits(jule::F32 _4112_f);
inline jule::F32 _21ec4a91b_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _21ec4abd5_F64Bits(jule::F64 _5212_f);
inline jule::F64 _21ec4b026_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _21ec4d589_Frexp(jule::F64 _4714_f);
inline jule::F64 _21ec53a01_NaN(void);
inline jule::Bool _21ec53d0e_IsNaN(jule::F64 _5210_f);
inline jule::F64 _21ec540c8_Inf(jule::I64 _618_sign);
inline jule::Bool _21ec54491_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _21ec5475a_normalize(jule::F64 _8214_x);
inline jule::F64 _21ec5622e_Log(jule::F64 _1118_x);
inline jule::F64 _21ec56b14_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _21ec5d687_Modf(jule::F64 _449_f);
inline jule::F64 _21ec5de90_Log2(jule::F64 _449_x);
inline jule::Str _21ec87a79_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _21ec88162_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _21ec8886b_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _21ec8689c_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _21ec89042_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _21ec874e6_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _21ec89460_roundShortest(_21ec9a086_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _21ec8689c_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _21ec89a04_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _21ec874e6_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _21ec89edd_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _21ec874e6_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _21ec8a692_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _21ec8689c_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _21ec8ad24_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _21ec8689c_floatInfo* _51232_flt);
inline jule::I64 _21ec8b198_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _21ec8b51c_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _21ec8c1aa_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__205e60243_ConvError _21ec8c62d_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _21ec8ca5c_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _21ec8d013_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _21ec8dba1_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _21ec8e08b_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _21ec90cb3_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _21ec910c1_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _21ec9138a_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _21ec92dd6_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _21ec93315_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__205e60243_ConvError _21ec938a9_atofHex(_21ec8689c_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__205e60243_ConvError _21ec93c83_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError _21ec93ec5_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError _21ec94349_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _21ec946bd_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _21ec94ee8_ryuFtoaFixed32(_21ec874e6_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _21ec9548d_ryuFtoaFixed64(_21ec874e6_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _21ec95cc9_formatDecimal(_21ec874e6_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _21ec962a2_ryuFtoaShortest(_21ec874e6_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _21ec8689c_floatInfo* _26168_flt);
inline jule::I64 _21ec96538_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _21ec96802_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _21ec96c31_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _21ec8689c_floatInfo* _3963_flt);
inline void _21ec97380_ryuDigits(_21ec874e6_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _21ec97a01_ryuDigits32(_21ec874e6_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _21ec97e30_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _21ec9835e_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _21ec986d3_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _21ec9899c_divmod1e9(jule::U64 _60214_x);
inline void _21ec9b8d4_trim(_21ec9a086_decimal* _27414_a);
inline void _21ec9bbc0_rightShift(_21ec9a086_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _21ec9c176_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _21ec9c42e_leftShift(_21ec9a086_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _21ec9c7a3_shouldRoundUp(_21ec9a086_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _21ec9de7a_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _21ec9e343_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _21ec9e60c_Itoa(jule::I64 _819_i);
inline jule::Str _21ec9e94d_small(jule::I64 _8610_i);
inline jule::Bool _21ec9ebd4_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_s_21734d334_byte__jule_tuple_str _21eca0278_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _21eca1b2b_Throw(jule::Str _910_msg);
inline jule::Bool _208712064_IsUnaryOp(jule::U64 _33314_id);
inline jule::Bool _208712372_IsBinOp(jule::U64 _34312_id);
inline jule::Bool _20871297c_IsStr(jule::Str _36310_k);
inline jule::Bool _208712c13_IsRawStr(jule::Str _36613_k);
inline jule::Bool _208712ecc_IsRune(jule::Str _37011_k);
inline jule::Bool _2087138b2_IsFloat(jule::Str _37912_k);
inline jule::Bool _208713b7b_IsNum(jule::Str _38710_k);
inline jule::Bool _20871420e_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _2087144c8_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _208714a5b_IsSpace(jule::I32 _41812_r);
inline jule::Bool _208715056_IsLetter(jule::I32 _42813_r);
inline jule::Bool _2087154c9_IsKeyword(jule::Str _44814_s);
inline jule::Bool _208715793_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _208715a5c_IsBinary(jule::I32 _46113_r);
inline jule::Bool _208715d26_IsOctal(jule::I32 _46412_r);
inline jule::Bool _2087160e0_IsHex(jule::I32 _46710_r);
inline jule::Bool _2087163a9_IsAssign(jule::U64 _48213_id);
inline jule::Bool _208716673_IsPostfixOp(jule::U64 _49416_id);
inline jule::Bool _20871693c_IsAssignOp(jule::U64 _50415_id);
inline _21e65b904_Log _20871a457_makeErr(jule::I64 _10112_row, jule::I64 _10122_col, jule::Ptr<_2087173cc_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _20871a820_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _20871ab94_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I64 _12332_i);
inline jule::Str _20871b05c_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I64 _15728_i);
inline jule::Str _20871b3d1_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I64 _16136_i);
inline jule::Str _20871b755_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I64 _18236_i);
inline jule::Str _20871bac9_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I64 _18735_i);
inline jule::Str _20871c05d_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I64 _19231_i);
inline jule::Str _20871c2a0_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _20871c569_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _20871c8dd_isFloatFmtE(jule::U8 _26216_b, jule::I64 _26225_i);
inline jule::Bool _20871cc62_isFloatFmtP(jule::U8 _26616_b, jule::I64 _26625_i);
inline jule::Bool _20871d0d6_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I64 _27038_i);
inline jule::Bool _20871d45a_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I64 _29133_i);
inline jule::Bool _20871d7ce_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I64 _30434_i);
inline jule::Str _20871dcc9_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _20871dea5_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _20871e307_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I64 _39428_n);
inline jule::Str _20871e5c1_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _20871e88a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _20871eb54_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _20871ee1d_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_21e65b904_Log> _208724e12_Lex(jule::Ptr<_2087173cc_Fileset> _80712_f, jule::I64 _80725_mode);
inline void _20880e727_lshiftUnsig(_208799195_Const* _58821_c, _208799195_Const* _58832_x);
inline void _20880ea57_rshiftUnsig(_208799195_Const* _59421_c, _208799195_Const* _59432_x);
inline jule::Str _208894812_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _208894acb_BitSizeOf(jule::Str _5914_k);
inline jule::Str _208894e1c_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _2088951a3_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _20889546c_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _208896072_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _20889633b_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _208896605_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I64 _2088968be_BitSizeOfUint(jule::U64 _19718_x);
inline void _208896a67_UpdateTarget(void);
inline void _208896bdd_init(void);
inline jule::I64 _20889a7a2_MinI(jule::Str _6113_k);
inline jule::I64 _20889aab0_MaxI(jule::Str _7913_k);
inline jule::U64 _20889ad79_MaxU(jule::Str _9713_k);
inline jule::F64 _20889b1ba_Min(jule::Str _11512_k);
inline jule::F64 _20889b451_Max(jule::Str _13312_k);
inline jule::Bool _20889c573_IsSigInt(jule::Str _2717_k);
inline jule::Bool _20889c881_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _20889cb4a_IsInt(jule::Str _4610_k);
inline jule::Bool _20889ce8b_IsFloat(jule::Str _5112_k);
inline jule::Bool _20889d222_IsNum(jule::Str _5610_k);
inline jule::Bool _20889d4db_IsSigNum(jule::Str _6113_k);
inline jule::Bool _208926751_FindModuleFile(jule::Slice<_21e80ade4_Dir>* _1420_dirents);
inline jule::Str _208926a2b_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_21e65b904_Log> _208926ce5_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _208927587_IsPub(jule::Str _910_ident);
inline jule::Bool _208982180_IsAscii(jule::I32 _1112_r);
inline jule::I32 _208968b17_ToRune(jule::Str _2015_lit);
inline jule::Str _2089840a5_ToRawStr(jule::Str _3613_lit);
inline jule::Str _2089843e6_ToStr(jule::Str _4714_lit);
inline __jule_tuple__21734d334_byte__jule_tuple_bool _20898467c_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _208984a01_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _208984d97_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _208a47498_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _208a4e03d_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _208a4e329_FmtByDefault(_21e64c5b5_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _208a4e747_applyFmtByDefault(_21e64c5b5_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _208a4eb65_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _21e64c5b5_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _208a4eed9_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _208a52184_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_20881e2b4_Fn> _2083e3152_runtimeFindFn(jule::Ptr<_20890d040_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_208746230_Struct> _2083e35d6_runtimeFindStruct(jule::Ptr<_20890d040_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _20882464e_parameterUsesGenerics(jule::Ptr<_20882121c_ParamIns>* _40231_p, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _40246_generics);
inline jule::Ptr<_20899a9a1_Data> _2088c327a_buildAsComptimeMethodData(jule::Ptr<_208822372_FnIns>* _203135_f);
inline jule::Ptr<_20890d040_ImportInfo> _2088c3489_findComptimePackage(jule::Ptr<_20892a755_sema>* _203929_s);
inline jule::Ptr<_20899a9a1_Data> _2088c380d_buildComptimeTypeInfoData(jule::Ptr<_20892a755_sema>* _204535_s, jule::Ptr<_2089ce661_Type>* _204550_t);
inline jule::Ptr<_20899a9a1_Data> _2088c3b4e_buildComptimeValue(jule::Ptr<_20899a9a1_Data>* _205328_d);
inline jule::Str _2088c6976_toStrConstraints(jule::Ptr<_2089ccc7a_InsGeneric> _14321_g);
inline jule::Bool _2088c6d3e_matchConstraint(jule::Str* _15421_c, jule::Ptr<_2089ce661_Type>* _15434_g);
inline jule::Bool _2088c7108_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_2088d3169_scopeChecker> _2088c99e0_newScopeCheckerBase(jule::Ptr<_20892a755_sema>* _3229_s, jule::Ptr<_208822372_FnIns> _3243_owner);
inline jule::Ptr<_2088d3169_scopeChecker> _2088c9da8_newScopeChecker(jule::Ptr<_20892a755_sema>* _4025_s, jule::Ptr<_208822372_FnIns> _4039_owner);
inline jule::U64 _2088e580d_removeEqFromOp(jule::U64 _208319_op);
inline void _2088e5ab6_makeComptimeRange(jule::Ptr<_20899a9a1_Data>* _211227_d);
inline jule::Bool _2088e5d4c_canComptimeMatch(jule::Ptr<_20899a9a1_Data>* _213526_d);
inline jule::Bool _2088e6116_stmtIsDef(jule::Any* _214315_stmt);
inline jule::I64 _2088e648a_countMatchType(jule::Ptr<_2088d0463_Match>* _215520_m, jule::Ptr<_2089ce661_Type>* _215532_t);
inline jule::Ptr<_2088d1ca0_scopeLabel> _2088e691e_findLabelParent(jule::Str* _217921_ident, jule::Ptr<_2088d3169_scopeChecker> _217937_scope);
inline jule::Bool _2088e714a_checkAssignMut(jule::Ptr<_20892a755_sema>* _222624_s, jule::Ptr<_20899a9a1_Data>* _222635_left, jule::Ptr<_20899a9a1_Data> _222652_right, jule::Ptr<_208711827_Token> _222666_op);
inline jule::Bool _2088e7634_checkAssign(jule::Ptr<_20892a755_sema>* _223921_s, jule::Ptr<_20899a9a1_Data>* _223936_left, jule::Ptr<_20899a9a1_Data> _223953_right, jule::Ptr<_208711827_Token> _223967_op);
inline jule::Bool _2088e78ed_isValidAstStForNextSt(jule::Any* _225731_n);
inline jule::Bool _2088e7bb7_isValidStForNextSt(jule::Any* _226824_st);
inline jule::Ptr<_2089d7a65_TypeSym> _2088ec87b_buildType(jule::Ptr<_208727343_TypeDecl> _6918_t);
inline jule::Ptr<_20899bb28_Value> _2088ecb89_buildExpr(jule::Ptr<_20872b677_Expr> _7818_expr);
inline jule::Ptr<_2089cd94b_TypeAlias> _2088ece53_buildTypeAlias(jule::Ptr<_20873e019_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_208744e10_Field> _2088ed294_buildField(jule::Ptr<_208742638_FieldDecl> _9919_decl);
inline jule::Slice<jule::Ptr<_208744e10_Field>> _2088ed52a_buildFields(jule::Slice<jule::Ptr<_208742638_FieldDecl>>* _11021_decls);
inline jule::Ptr<_208746230_Struct> _2088ed7e4_buildStruct(jule::Ptr<_20874302e_StructDecl> _11820_decl);
inline jule::Ptr<_20881c7e0_Param> _2088edaad_buildParam(jule::Ptr<_208737b7d_ParamDecl> _13019_decl);
inline jule::Slice<jule::Ptr<_20881c7e0_Param>> _2088ede87_buildParams(jule::Slice<jule::Ptr<_208737b7d_ParamDecl>>* _14121_decls);
inline jule::Ptr<_20881c229_RetType> _2088ee1c9_buildRetType(jule::Ptr<_20872a236_RetTypeDecl> _14921_decl);
inline jule::Ptr<_20881e2b4_Fn> _2088ee493_buildFunc(jule::Ptr<_2087390d0_FnDecl> _15918_decl);
inline jule::Slice<jule::Ptr<_20881e2b4_Fn>> _2088ee75c_buildMethods(jule::Slice<jule::Ptr<_2087390d0_FnDecl>>* _17722_decls);
inline jule::Slice<jule::Ptr<_2089d7a65_TypeSym>> _2088eea26_buildTraitInherits(jule::Slice<jule::Ptr<_208727343_TypeDecl>>* _18528_inherits);
inline jule::Ptr<_2088299c8_Trait> _2088eece0_buildTrait(jule::Ptr<_20874376b_TraitDecl> _19319_decl);
inline jule::Ptr<_20882b623_EnumItem> _2089000a9_buildEnumItem(jule::Ptr<_208740823_EnumItemDecl> _20322_decl);
inline jule::Slice<jule::Ptr<_20882b623_EnumItem>> _208900373_buildEnumItems(jule::Slice<jule::Ptr<_208740823_EnumItemDecl>>* _21124_decls);
inline jule::Ptr<_20882c17e_Enum> _20890086d_buildEnum(jule::Ptr<_2087413d4_EnumDecl> _21918_decl);
inline jule::Ptr<_20882d2b2_TypeEnumItem> _208900a49_buildTypeEnumItem(jule::Ptr<_208741c0e_TypeEnumItemDecl> _22926_decl);
inline jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> _208900ce1_buildTypeEnumItems(jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>>* _23728_decls);
inline jule::Ptr<_20882d889_TypeEnum> _2089010aa_buildTypeEnum(jule::Ptr<_20874236e_TypeEnumDecl> _24522_decl);
inline jule::Ptr<_20894d7de_Var> _208901374_buildVar(jule::Ptr<_20873a28a_VarDecl> _25417_decl);
inline jule::Slice<jule::Ptr<_20894d7de_Var>> _20890163d_buildVars(jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _27118_decls);
inline jule::Ptr<_2088c7977_Impl> _208901907_buildImpl(jule::Ptr<_208743dcb_Impl> _27918_decl);
inline jule::Bool _208908227_isImplicitImport(jule::Ptr<_20890d040_ImportInfo> _79221_imp);
inline jule::Ptr<_2088255b7_SymTab> _20890a37d_findVarFileInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _4430_files, jule::Ptr<_20894d7de_Var>* _4449_v);
inline jule::Ptr<_20894d7de_Var> _20890a801_findVarInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_2089cd94b_TypeAlias> _20890ac30_findTypeAliasInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_208746230_Struct> _20890b1d6_findStructInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_20881e2b4_Fn> _20890b5d2_findFnInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_2088299c8_Trait> _20890b956_findTraitInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_20882c17e_Enum> _20890bcca_findEnumInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_20882d889_TypeEnum> _20890c25e_findTypeEnumInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _208912c8c_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _208927c4c_isValidModelForRef(jule::Any* _1528_m);
inline _21e65b904_Log _20892827a_compilerErr(jule::Ptr<_208711827_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _208928566_appendRetVars(jule::Slice<jule::Ptr<_20894d7de_Var>>* _6323_dest, jule::Ptr<_208822372_FnIns>* _6342_f);
inline void _208928896_appendParamVars(jule::Slice<jule::Ptr<_20894d7de_Var>>* _9325_dest, jule::Ptr<_208822372_FnIns>* _9344_f);
inline void _208928b82_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>* _15134_dest, jule::Ptr<_208822372_FnIns>* _15159_f);
inline jule::Ptr<_2088255b7_SymTab> _208929006_findFile(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _19218_files, jule::Ptr<_2087173cc_Fileset>* _19237_handler);
inline void _20892939c_pushSuggestion(_21e65b904_Log* _20130_log, jule::Str _20148_fmt, jule::Slice<jule::Any> _20168_args);
inline void _20894b743_pushImplemented(jule::Ptr<_2088299c8_Trait> _277124_t, jule::Ptr<_208746230_Struct>* _277140_d);
inline void _20894ba2e_pushImplements(jule::Ptr<_208746230_Struct>* _278924_s, jule::Ptr<_2088299c8_Trait> _278940_t);
inline void _20894be80_pushRuntimeToStr(jule::Ptr<_20892a755_sema>* _280726_s, jule::Ptr<_2089ce661_Type>* _280741_t, jule::Ptr<_208711827_Token>* _280756_token, jule::Ptr<_2088eaeb7_ReferenceStack> _28086_refers);
inline jule::Bool _20894c249_isValidImpAlias(jule::Str _282324_alias);
inline jule::Bool _2089854e6_traitHasReferenceReceiver(jule::Ptr<_2088299c8_Trait>* _1631_t);
inline jule::Bool _2089858ae_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_20899a9a1_Data>* _3133_d);
inline jule::Bool _208985c33_sigAssignable(jule::Str _3618_kind, jule::Ptr<_20899a9a1_Data>* _3630_d);
inline jule::Bool _2089860eb_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_20899a9a1_Data>* _5932_d);
inline jule::Bool _208986470_intAssignable(jule::Str _8818_kind, jule::Ptr<_20899a9a1_Data>* _8830_d);
inline void _208992965_checkMutRiskOfStructLit(jule::Ptr<_20892a755_sema>* _93833_s, jule::Ptr<_208812d46_StructLitExpr>* _93844_m);
inline jule::Ptr<_2089ce661_Type> _208998b69_lenKind(void);
inline jule::Bool _208998ebb_isGoodValueToInfer(jule::Ptr<_20899a9a1_Data>* _143224_d);
inline jule::Ptr<_208726760_Directive> _2089c5dd8_findDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _439523_directives, jule::Str _439554_d);
inline jule::Any _2089c62a1_findBuiltinsImport(jule::Str* _440424_ident, jule::Ptr<_20890d040_ImportInfo> _440436_imp);
inline void _2089c64d2_fitBitsize(jule::Ptr<_20899a9a1_Data>* _441320_d);
inline void _2089c6812_makeStructLitAlloc(jule::Ptr<_20899a9a1_Data>* _444228_d, jule::Ptr<_208812d46_StructLitExpr>* _444243_lit);
inline jule::Ptr<_20894d7de_Var> _2089c6b86_buildErrorVar(jule::Ptr<_2088ca969_Scope>* _445323_s, jule::Ptr<_2087303a1_FnCallExpr>* _445339_fc);
inline jule::Any _2089c700a_findBuiltinsSema(jule::Str* _446822_ident, jule::Ptr<_20892a755_sema> _446838_s);
inline jule::Bool _2089c72c4_isOkForShifting(jule::Ptr<_20899a9a1_Data>* _448325_d);
inline jule::Bool _2089c769d_isInstancedStruct(jule::Ptr<_2087490bd_StructIns> _450022_s);
inline jule::Bool _2089c799a_isPtrArithmeticCompatible(jule::Ptr<_20899a9a1_Data>* _450435_l, jule::Ptr<_20899a9a1_Data>* _450450_r);
inline void _2089c7ea6_applyRuntimeToStr(jule::Ptr<_20892a755_sema>* _452527_s, jule::Ptr<_2089ce661_Type>* _452542_from, jule::Ptr<_2089ce661_Type>* _452560_to, jule::Ptr<_208711827_Token>* _45267_token, jule::Ptr<_2088eaeb7_ReferenceStack> _452633_refers);
inline void _2089c84b2_applyCastKindModel(jule::Ptr<_20892a755_sema>* _454028_s, jule::Ptr<_20899a9a1_Data>* _454043_d, jule::Ptr<_2089ce661_Type>* _454058_t, jule::Ptr<_208711827_Token>* _45417_token, jule::Ptr<_2088eaeb7_ReferenceStack> _454133_refers);
inline void _2089c89bd_applyCastKind(jule::Ptr<_20892a755_sema>* _455123_s, jule::Ptr<_20899a9a1_Data>* _455138_d, jule::Ptr<_2089ce661_Type>* _455153_t, jule::Ptr<_208711827_Token>* _45527_token, jule::Ptr<_2088eaeb7_ReferenceStack> _455233_refers);
inline jule::Ptr<_20899a9a1_Data> _2089c8bcc_buildVoidData(void);
inline jule::Str _2089c91b6_checkDataForIntegerIndexing(jule::Ptr<_20892a755_sema>* _456337_s, jule::Ptr<_20899a9a1_Data>* _456352_d, jule::Ptr<_208711827_Token>* _45647_token, jule::Ptr<_2088eaeb7_ReferenceStack> _456433_refers);
inline void _2089c96c2_applyCastModelByEnum(jule::Ptr<_20892a755_sema>* _458930_s, jule::Ptr<_20899a9a1_Data>* _458945_d, jule::Ptr<_20882c17e_Enum> _458959_e, jule::Ptr<_208711827_Token>* _45907_token, jule::Ptr<_2088eaeb7_ReferenceStack> _459033_refers);
inline void _2089c9bde_castConstByType(jule::Str* _459721_t, jule::Ptr<_20899a9a1_Data>* _459734_d);
inline void _2089c9dba_updateModelToGenericIns(jule::Any* _463133_m, jule::Ptr<_208822372_FnIns>* _463147_f);
inline jule::Bool _2089ca23e_pushSubIdentFromExpr(jule::Any _464229_expr, jule::Ptr<_208727c17_SubIdentTypeDecl>* _464255_t);
inline jule::Str _2089ca508_constoa(jule::Ptr<_208799195_Const>* _466513_c);
inline jule::Ptr<_20899a9a1_Data> _2089caa9c_evalEnumStatic(jule::Ptr<_20892a755_sema>* _467624_s, jule::Ptr<_20882c17e_Enum>* _467639_enm, jule::Ptr<_20882b623_EnumItem>* _467656_item, jule::Ptr<_208711827_Token>* _46777_token, jule::Ptr<_2088eaeb7_ReferenceStack> _467733_refers);
inline jule::Ptr<_208812d46_StructLitExpr> _2089cad66_isLitBased(jule::Any* _469420_m);
inline void _2089cb152_makeImplicitDeref(jule::Ptr<_20899a9a1_Data>* _471127_d, jule::Ptr<_208711827_Token> _471141_baseToken);
inline void _2197aaa8b_updateRefer(jule::Ptr<_2088eaeb7_ReferenceStack> _472223_ref, jule::Ptr<_208822372_FnIns>* _472246_old, jule::Ptr<_208822372_FnIns>* _472259_new);
inline void _2089cb7d4_makeVariadic(jule::Ptr<_20899a9a1_Data>* _473022_d, jule::Ptr<_2089ce661_Type> _473036_elem);
inline jule::Bool _2089cbc13_isVarCaptured(jule::Ptr<_2088d3169_scopeChecker> _474318_r, jule::Ptr<_2088d3169_scopeChecker> _474340_s, jule::Ptr<_20894d7de_Var> _474358_v);
inline jule::Ptr<_20890d040_ImportInfo> _2089cc087_findNamespace(jule::Trait _476022_lookup, jule::Str _476038_namespace);
inline jule::Bool _2089eb507_kindUsesGenerics(jule::Ptr<_2089ce661_Type>* _178826_k, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _178837_generics);
inline jule::Bool _2089eb8c0_hasDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _179822_directives, jule::Str _179853_tag);
inline jule::Bool _2089ebb89_canGetPtr(jule::Ptr<_20899a9a1_Data>* _180719_d);
inline jule::Bool _2089ebeca_isBuiltinStrConvertable(jule::Ptr<_2089ce661_Type>* _181033_t);
inline jule::Ptr<_2089d846c_Prim> _2089ec261_buildPrimType(jule::Str _181418_kind);
inline void _2089eca36_applyImplicitCast(jule::Ptr<_20892a755_sema>* _184227_s, jule::Ptr<_2089ce661_Type>* _184242_dest, jule::Ptr<_20899a9a1_Data>* _184260_d, jule::Ptr<_208711827_Token>* _18437_token, jule::Ptr<_2088eaeb7_ReferenceStack> _184333_refers);
inline jule::Bool _2089ece10_validTypeForXof(jule::Ptr<_2089ce661_Type>* _187225_t);
inline jule::Ptr<_2087490bd_StructIns> _2089ed20c_initNewStructType(jule::Str _187822_ident, jule::Ptr<_2089ce661_Type> _187838_source);
inline __jule_tuple_x_2088255b7_SymTab__jule_tuple_s_21e65b904_Log _208a01210_buildSymbols(jule::Ptr<_2087253da_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_208901ebd_symBuilder> _1667_owner);
inline void _208a01540_collectImplicitImports(jule::Ptr<_20892a755_sema>* _3132_s, jule::Ptr<_2088255b7_SymTab>* _3147_file);
inline __jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log _208a0196e_analyzePackage(jule::Slice<jule::Ptr<_2087253da_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags);
inline __jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log _208a01e25_AnalyzePackage(jule::Slice<jule::Ptr<_2087253da_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags);
inline jule::Ptr<_208822372_FnIns> _208a52ae1_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_2089cd94b_TypeAlias> _208a53042_primTypeAlias(jule::Str _5718_ident, jule::Ptr<_2089ce661_Type>* _5735_k, jule::Bool _5745_strict);
inline jule::Ptr<_20894d7de_Var> _208a568e7_findBuiltinVar(jule::Str* _9820_ident);
inline jule::Ptr<_2089cd94b_TypeAlias> _208a56c38_findBuiltinTypeAlias(jule::Str _14825_ident);
inline jule::Any _208a56ebe_findBuiltinDef(jule::Str* _20920_ident);
inline jule::Any _208a57288_findBuiltinDefStdMem(jule::Str* _22526_ident);
inline jule::Any _208a57552_findBuiltinDefStdComptime(jule::Str* _24131_ident);
inline jule::Any _208a5792b_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident);
inline jule::Any _208a57c28_findPackageBuiltinDef(jule::Str* _28127_linkPath, jule::Str* _28143_ident);
inline jule::Ptr<_20899a9a1_Data> _208a5809c_builtinCallerError(jule::Ptr<_20899c970_eval>* _29428_e, jule::Ptr<_2087303a1_FnCallExpr>* _29443_fc);
inline jule::Ptr<_20899a9a1_Data> _208a584cb_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _32528_e, jule::Ptr<_2087303a1_FnCallExpr>* _32543_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a5890a_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _35230_e, jule::Ptr<_2087303a1_FnCallExpr>* _35245_fc, jule::Ptr<_20899a9a1_Data>* _35272_d);
inline jule::Ptr<_20899a9a1_Data> _208a58d39_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _36426_e, jule::Ptr<_2087303a1_FnCallExpr>* _36441_fc, jule::Ptr<_20899a9a1_Data>* _36468_d);
inline jule::Ptr<_20899a9a1_Data> _208a59268_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _41828_e, jule::Ptr<_2087303a1_FnCallExpr>* _41843_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a59697_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _44427_e, jule::Ptr<_2087303a1_FnCallExpr>* _44442_fc, jule::Ptr<_20899a9a1_Data>* _44469_d);
inline jule::Ptr<_20899a9a1_Data> _208a59d07_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _49529_e, jule::Ptr<_2087303a1_FnCallExpr>* _49544_fc, jule::Ptr<_20899a9a1_Data>* _49571_d);
inline jule::Ptr<_20899a9a1_Data> _208a5a1d1_callerCopySlice(jule::Ptr<_20899a9a1_Data>* _61525_dest, jule::Ptr<_20899c970_eval>* _61543_e, jule::Ptr<_2087303a1_FnCallExpr>* _61558_fc, jule::Ptr<_20899a9a1_Data>* _61585_d);
inline jule::Ptr<_20899a9a1_Data> _208a5a610_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _64927_e, jule::Ptr<_2087303a1_FnCallExpr>* _64942_fc, jule::Ptr<_20899a9a1_Data>* _64969_d);
inline jule::Ptr<_20899a9a1_Data> _208a5a984_callerLenSlice(jule::Ptr<_20899a9a1_Data>* _67424_expr, jule::Ptr<_20899a9a1_Data>* _67442_d);
inline jule::Ptr<_20899a9a1_Data> _208a5ad08_callerLenMap(jule::Ptr<_20899a9a1_Data>* _68222_expr, jule::Ptr<_20899a9a1_Data>* _68240_d);
inline jule::Ptr<_20899a9a1_Data> _208a5b17c_callerLenArr(jule::Ptr<_20899a9a1_Data>* _69022_expr, jule::Ptr<_20899a9a1_Data>* _69040_d);
inline jule::Ptr<_20899a9a1_Data> _208a5b501_callerLenStr(jule::Ptr<_20899a9a1_Data>* _69722_expr, jule::Ptr<_20899a9a1_Data>* _69740_d);
inline jule::Ptr<_20899a9a1_Data> _208a5b875_callerLenComptime(jule::Ptr<_20899a9a1_Data>* _71027_d, jule::I64 _71037_n);
inline jule::Ptr<_20899a9a1_Data> _208a5bca4_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _71726_e, jule::Ptr<_2087303a1_FnCallExpr>* _71741_fc, jule::Ptr<_20899a9a1_Data>* _71768_d);
inline jule::Ptr<_20899a9a1_Data> _208a5c128_callerCapSlice(jule::Ptr<_20899a9a1_Data>* _75724_expr, jule::Ptr<_20899a9a1_Data>* _75742_d);
inline jule::Ptr<_20899a9a1_Data> _208a5c557_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _76526_e, jule::Ptr<_2087303a1_FnCallExpr>* _76541_fc, jule::Ptr<_20899a9a1_Data>* _76568_d);
inline jule::Ptr<_20899a9a1_Data> _208a5ca41_callerDeleteMap(jule::Ptr<_20899c970_eval>* _78825_e, jule::Ptr<_2087303a1_FnCallExpr>* _78840_fc, jule::Ptr<_20899a9a1_Data>* _78867_expr, jule::Ptr<_20899a9a1_Data>* _78885_d);
inline jule::Ptr<_20899a9a1_Data> _208a5ce70_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _81729_e, jule::Ptr<_2087303a1_FnCallExpr>* _81744_fc, jule::Ptr<_20899a9a1_Data>* _81771_d);
inline jule::Ptr<_20899a9a1_Data> _208a5d39e_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _84040_e, jule::Ptr<_2087303a1_FnCallExpr>* _84055_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a5d7cd_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _87641_e, jule::Ptr<_2087303a1_FnCallExpr>* _87656_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a5dc0c_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _89638_e, jule::Ptr<_2087303a1_FnCallExpr>* _89653_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a5e37d_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _90838_e, jule::Ptr<_2087303a1_FnCallExpr>* _90853_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a5e7ac_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _92139_e, jule::Ptr<_2087303a1_FnCallExpr>* _92154_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a5ebdb_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _93443_e, jule::Ptr<_2087303a1_FnCallExpr>* _93458_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a6011a_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _99435_e, jule::Ptr<_2087303a1_FnCallExpr>* _99450_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a60549_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _101936_e, jule::Ptr<_2087303a1_FnCallExpr>* _101951_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a60978_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _104433_e, jule::Ptr<_2087303a1_FnCallExpr>* _104448_fc, jule::Ptr<_20899a9a1_Data>* );
inline jule::Ptr<_20899a9a1_Data> _208a60da7_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _106744_e, jule::Ptr<_2087303a1_FnCallExpr>* _106759_fc, jule::Ptr<_20899a9a1_Data>* _106786_d);
inline jule::Ptr<_20931304e_FileInfo> _209315d65_ParseFile(jule::Ptr<_2087173cc_Fileset> _2318_f);
inline __jule_tuple_x_2087253da_AST__jule_tuple_s_21e65b904_Log _209360ed1_parseFileset(jule::Ptr<_2087173cc_Fileset> _5521_f);
inline jule::Ptr<_208737441_ScopeTree> _209361861_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _209361be6_isSt(jule::Ptr<_208711827_Token> _149_current, jule::Ptr<_208711827_Token> _1433_prev);
inline jule::Bool _20936206a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_208711827_Token>>* _2026_tokens, jule::I64* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _209362433_nextStPos(jule::Slice<jule::Ptr<_208711827_Token>>* _3415_tokens, jule::I64 _3440_start);
inline __jule_tuple_sx_208711827_Token__jule_tuple_bool _2093627a7_skipSt(jule::I64* _9616_i, jule::Slice<jule::Ptr<_208711827_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_209362ad7_stmt>> _209362e8e_splitStmts(jule::Slice<jule::Ptr<_208711827_Token>>* _11720_tokens);
inline jule::Bool _20937b4d5_isTypeOp(jule::U64* _87014_id);
inline jule::Bool _20937b7e3_isTypeRange(jule::Slice<jule::Ptr<_208711827_Token>>* _87721_tokens);
inline jule::Slice<jule::Ptr<_208711827_Token>> _20937baac_getBlockExpr(jule::Slice<jule::Ptr<_208711827_Token>>* _91022_tokens);
inline __jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token _20937be75_splitDelim(jule::Slice<jule::Ptr<_208711827_Token>>* _94220_tokens, jule::U64 _94245_delim);
inline jule::I64 _20937c23e_findLowestPrecOp(jule::Slice<jule::Ptr<_208711827_Token>>* _98122_tokens);
inline jule::Ptr<_20872ce92_IdentExpr> _20937c508_buildIdentExpr(jule::Ptr<_208711827_Token>* _104624_token);
inline __jule_tuple_sx_208711827_Token__jule_tuple_int _20937c7c2_getRangeExprTokens(jule::Slice<jule::Ptr<_208711827_Token>>* _105428_tokens);
inline jule::Bool _20937cb9b_isAnonFnHead(jule::Slice<jule::Ptr<_208711827_Token>>* _107718_tokens);
inline jule::Bool _20937d84a_checkAssignTokens(jule::Slice<jule::Ptr<_208711827_Token>>* _1623_tokens);
inline _21e65b904_Log _20937e807_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_2087173cc_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_208711827_Token>> _20937ed35_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_208711827_Token>>* _3063_tokens);
inline __jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token _2093800ee_rangeLast(jule::Slice<jule::Ptr<_208711827_Token>>* _6019_tokens);
inline __jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log _2093805a5_parts(jule::Slice<jule::Ptr<_208711827_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust);
inline jule::U64 _20938083b_getCloseOfBrace(jule::U64 _12820_left);
inline _21e65b904_Log _209380c6a_compilerErr(jule::Ptr<_208711827_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _209381111_pushSuggestion(_21e65b904_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_208727343_TypeDecl> _209392078_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _208ae7adc_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _208ae2e4a_checkArch(jule::Str _2814_arg);
inline void _208b0e3b7_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _208b0e63c_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _208b0e928_initVars(jule::Slice<jule::Str>* _5518_vars, _208b0e098_CompileInfo* _5532_info);
inline jule::I64 _208b0ece1_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _209396148_readBuff(jule::Str _1713_path);
inline _21e65b904_Log _209396456_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_20881e2b4_Fn> _208a611c6_RuntimeFindFn(jule::Ptr<_20890d040_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_208746230_Struct> _208a6158e_RuntimeFindStruct(jule::Ptr<_20890d040_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline jule::Uintptr _208a622b5_TypeData(jule::Any* _1414_m);
inline jule::Bool _208a6267d_equalConst(jule::Ptr<_208799195_Const> _1815_l, jule::Ptr<_208799195_Const> _1836_r);
inline jule::Bool _208a62a02_equalCasting(jule::Ptr<_2088136c6_CastingExpr> _3717_l, jule::Ptr<_2088136c6_CastingExpr> _3740_r);
inline jule::Bool _208a62dba_equalUnary(jule::Ptr<_208812472_UnaryExpr> _4415_l, jule::Ptr<_208812472_UnaryExpr> _4436_r);
inline jule::Bool _208a6323e_equalIndexing(jule::Ptr<_208814908_IndexingExpr> _5118_l, jule::Ptr<_208814908_IndexingExpr> _5142_r);
inline jule::Bool _208a635b3_equalBinary(jule::Ptr<_208812098_BinaryExpr> _5616_l, jule::Ptr<_208812098_BinaryExpr> _5638_r);
inline jule::Bool _208a63937_EqualModels(jule::Any _6716_l, jule::Any _6731_r);
inline void _20939ac41_pushPasses(jule::Ptr<_2089107b2_Package>* _12820_p, jule::Slice<jule::Str>* _12844_passes);
inline jule::Slice<jule::Str> _20939b109_getAllUniquePasses(jule::Ptr<_2089107b2_Package>* _14528_pkg, jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _14553_uses);
inline _208b0e098_CompileInfo _20939b318_buildCompileInfo(void);
inline void _20939b5c1_pushRuntimeToAST(jule::Ptr<_2087253da_AST>* _18426_f);
inline void _20939bcdb_IterPackages(jule::Ptr<_20939938d_IR>* _722_ir, jule::Fn<void,jule::Ptr<_2089107b2_Package>*> _731_f);
inline void _20939c03e_IterFiles(jule::Ptr<_2089107b2_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_2088255b7_SymTab>*> _1640_f);
inline void _20939c32a_IterTraitMethods(jule::Ptr<_2088299c8_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_20881e2b4_Fn>*> _2443_f);
inline jule::Bool _20939e55d_IsForwarded(jule::Ptr<_2088ca969_Scope>* _1117_s);
inline jule::Bool _20939e86b_IsExprComesFromBind(jule::Ptr<_20899a9a1_Data>* _2725_d);
inline jule::Bool _20939eb35_IsAny(jule::Ptr<_2089ce661_Type>* _3915_t);
inline jule::Bool _20939ee76_IsClosure(jule::Ptr<_208814dae_AnonFnExpr>* _4815_m);
inline jule::Bool _2093a02b7_IsTraitMethod(jule::Ptr<_2087490bd_StructIns>* _5123_owner, jule::Ptr<_208822372_FnIns>* _5149_f);
inline jule::Bool _2093a063b_IsStdPackage(jule::Str _6517_f, jule::Str _6525_p);
inline jule::Bool _2093a0cce_IsStructBinded(jule::Ptr<_2087490bd_StructIns> _7919_s);
inline jule::Ptr<_208726760_Directive> _2093a152c_FindDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _2093a18e5_HasDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::I64 _2093a242e_FindTraitTypeOffsetS(jule::Ptr<_2088299c8_Trait> _3725_t, jule::Ptr<_2087490bd_StructIns> _3746_s);
inline jule::I64 _2093a27a3_FindTraitTypeOffset(jule::Ptr<_2088299c8_Trait> _6024_t, jule::Ptr<_2089ce661_Type> _6045_k);
inline jule::Ptr<_208822372_FnIns> _2093a2b27_FindFnGenericInstance(jule::Ptr<_20881e2b4_Fn>* _8431_f, jule::Slice<jule::Ptr<_2089ce661_Type>> _8445_generics);
inline jule::Ptr<_2087490bd_StructIns> _2093a2e9b_FindStructGenericInstance(jule::Ptr<_208746230_Struct>* _10035_s, jule::Slice<jule::Ptr<_2089ce661_Type>> _10053_generics);
inline jule::Ptr<_20890d040_ImportInfo> _2093a3430_SelectImport(jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _11521_imports, jule::Str _11551_linkpath);
inline jule::I64 _2093a372c_FindVar(jule::Ptr<_20894d7de_Var> _12512_v, jule::Slice<jule::Ptr<_20894d7de_Var>> _12527_vars);
inline jule::Str _2093a39e6_GetBindIdent(jule::Ptr<_2089ce661_Type> _13617_t);
inline jule::Bool _21a26ce87_isOrdered(jule::Ptr<_20894d7de_Var>* _1418_t, jule::Slice<jule::Ptr<_20894d7de_Var>> _1425_s);
inline jule::Bool _21a273a81_isOrdered(jule::Ptr<_208746230_Struct>* _1418_t, jule::Slice<jule::Ptr<_208746230_Struct>> _1425_s);
inline void _21a26a1c6_order(jule::Slice<jule::Ptr<_20894d7de_Var>> _3717_s);
inline void _21a26a902_order(jule::Slice<jule::Ptr<_208746230_Struct>> _3717_s);
inline void _21a46b185_Reverse(jule::Slice<jule::Any> _7327_s);
inline void _21acaecc5_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _21a469d54_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I64 _4230_r);
inline void _21acad9d8_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I64 _4230_r);
inline void _21a4677d0_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I64 _4831_r);
inline void _21acab4a8_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I64 _4831_r);
inline jule::Bool _21a464b84_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b);
inline jule::Bool _21aca88a1_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::Any> _21a45e3ba_Insert(jule::Slice<jule::Any> _7226_s, jule::I64 _7232_i, jule::Slice<jule::Any> _7244_v);
inline jule::Slice<jule::U8> _21aca4737_Insert(jule::Slice<jule::U8> _7226_s, jule::I64 _7232_i, jule::Slice<jule::U8> _7244_v);
inline void _2171cb547_EliminateDefines(jule::Ptr<_20939938d_IR>* _35226_ir);
inline jule::Bool _2171cb855_isAllMethodsLive(jule::Ptr<_208746230_Struct> _35821_s);
inline void _2171d06c2_eliminateDeadCodeOfScope(jule::Ptr<_2088ca969_Scope> _21833_s);
inline void _2171d0947_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20881e2b4_Fn>>* _23033_funcs);
inline void _2171d0b78_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_208746230_Struct>>* _23937_structs);
inline void _2171d0e31_eliminateFunctionsScopePackage(jule::Ptr<_2089107b2_Package>* _24740_pkg);
inline void _2171d112e_eliminateScopePackage(jule::Ptr<_2089107b2_Package>* _25431_pkg);
inline void _2171d1360_EliminateScopes(jule::Ptr<_20939938d_IR>* _25925_ir);
inline void _216dab4d0_possibleNilRemove(jule::Ptr<_216daa501_nils>* _7527_n, jule::Any _7537_m);
inline jule::Bool _216dab898_isGuaranteedNonNilExpr(jule::Ptr<_216daa501_nils>* _8132_n, jule::Any _8142_m);
inline jule::Bool _216dabb62_isNilValidType(jule::Ptr<_2089ce661_Type> _8923_t);
inline jule::Uintptr _216dabea3_getNilVar(jule::Any _9114_m);
inline jule::Bool _2170a8aea_isConstantValidConditionalCase(jule::Ptr<_2088cad43_If>* _100736_i);
inline jule::Bool _2170a8e08_isUnreachableExpr(jule::Any* _101623_expr);
inline jule::Bool _2170a91c2_isConstantValidMatchCase(jule::Ptr<_2088d0c5a_Case>* _103130_case);
inline jule::Bool _2170a9513_isUnreachableConditionalCase(jule::Ptr<_2088cad43_If>* _104034_i);
inline jule::Bool _2170a9799_isUnreachableMatchCase(jule::Ptr<_2088d0c5a_Case>* _104428_case);
inline __jule_tuple_bool__jule_tuple_u64 _2170b2296_checkForBitShiftOpt(jule::Ptr<_208811a9d_OperandExpr>* _96029_l, jule::Ptr<_208811a9d_OperandExpr>* _96057_r);
inline jule::Bool _2170b265e_areSameLvalueExpr(jule::Any* _97923_l, jule::Any* _97939_r);
inline void _2170b471b_possibleDynamicRemove(jule::Ptr<_2170b3682_dynamic>* _7631_d, jule::Any _7644_m);
inline jule::Bool _2170b4a29_isDynamicValidType(jule::Ptr<_2089ce661_Type> _8227_t);
inline jule::Ptr<_2089ce661_Type> _2170b4e58_isTypeGuaranteedDynamicData(jule::Ptr<_2170b3682_dynamic>* _8437_dy, jule::Ptr<_2089ce661_Type> _8455_t, jule::Any _8475_m);
inline jule::Uintptr _2170b5299_getDynamicVar(jule::Any _11218_m);
inline void _21a5a6688__removeDeads(jule::Ptr<_2170b8566_boundary>* _2340_alive, jule::Ptr<_2170b8566_boundary>* _2366_other, jule::Uintptr _2391_invalid);
inline void _21a5a858b__removeDeads(jule::Ptr<_216daa501_nils>* _2340_alive, jule::Ptr<_216daa501_nils>* _2366_other, jule::Uintptr _2391_invalid);
inline void _21a5aba23__removeDeads(jule::Ptr<_2170b3682_dynamic>* _2340_alive, jule::Ptr<_2170b3682_dynamic>* _2366_other, jule::Uintptr _2391_invalid);
inline jule::Bool _2170b95cd_isValidBoundaryInfo(jule::Any _8524_m);
inline jule::I64 _2170b9996_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9035_expr);
inline jule::Bool _2170b9d1a_fitsSize(jule::Any _9913_e1, jule::Any _9929_e2);
inline void _2170ba14a_possibleBoundaryRemove(jule::Ptr<_2170b8566_boundary>* _12532_b, jule::Any _12546_model);
inline jule::Bool _2170ba414_isBoundaryRiskyType(jule::Ptr<_2089ce661_Type> _13728_t);
inline jule::Bool _2170ba6cd_isBoundaryValidType(jule::Ptr<_2089ce661_Type> _14228_t);
inline jule::Uintptr _2170ba997_getBoundaryVar(jule::Any _14419_m);
inline void _2170be814_PushOptLevel(jule::I64 _4117_level);
inline void _2171d4c15_detectEnabled(void);
inline jule::U64 _2172a659a_unix(void);
inline jule::Bool _2171dea66_isCopyOptimizable(jule::Ptr<_20899a9a1_Data>* _115523_expr);
inline jule::Bool _2171dee2e_isIterCopyOptimizable(jule::Ptr<_20899a9a1_Data>* _116627_expr, jule::Ptr<_20894d7de_Var>* _116647_v);
inline jule::Bool _2171e035d_captureVarHandling(jule::Ptr<_2172b1a06_ObjectCoder>* _117328_oc, jule::Ptr<_208814dae_AnonFnExpr>* _117351_m, jule::Ptr<_20894d7de_Var>* _117378_v);
inline jule::Str _217202b45_decomposeCommonEsq(jule::U8 _193023_b);
inline jule::Str _217202e53_sbtoa(jule::U8 _195710_b);
inline void _21720323e_cstrBytes(_21e64c5b5_Builder* _197719_s, jule::Str _197740_ctx);
inline void _21720356e_cstrLit(_21e64c5b5_Builder* _198317_s, jule::Str _198338_ctx);
inline void _217203915_ftoa(_21e64c5b5_Builder* _198914_s, jule::F64 _198935_f, jule::I64 _198943_bitsize);
inline void _217203c01_itoa(_21e64c5b5_Builder* _200714_s, jule::I64 _200735_x);
inline void _217203edc_utoa(_21e64c5b5_Builder* _202414_s, jule::U64 _202435_x);
inline void _21720463b_structBinary(_21e64c5b5_Builder* _203822_buf, jule::Ptr<_2087490bd_StructIns>* _203850_s, jule::Str* _203872_l, jule::Str* _20393_r, jule::U64 _203911_op, jule::Str _203926_kind);
inline jule::Slice<jule::U8> _2172be805_concatAllParts(jule::Slice<jule::Ptr<_208711827_Token>> _137219_parts);
inline jule::Bool _2172cd6e3_ableToInit(jule::Ptr<_2089ce661_Type>* _45920_t);
inline jule::Bool _2172cd9bd_shouldInitialized(jule::Ptr<_2089ce661_Type>* _46627_t);
inline void _220c75390_printErrorMessage(jule::Str _3022_msg);
inline void _220c75615_help(jule::Slice<jule::Str>* _3510_args);
inline void _220c75846_version(jule::Slice<jule::Str>* _6313_args);
inline void _220c75a55_toolDistos(void);
inline void _220c75bba_toolDistarch(void);
inline void _220c75db8_tool(jule::Slice<jule::Str>* _9410_args);
inline void _220c760e9_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _220c7643a_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _220c7667c_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _220c76825_showInfo(void);
void _220c7699b_main(void);
inline void _217344737_init(void);
inline jule::Ptr<_21e8109ed_File> _217344a01_openOutput(jule::Str* _3016_path);
inline void _217344b99_clearObjects(void);
inline void _217344ea7_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _217345271_isCppSourceFile(jule::Str _8620_path);
inline void _2173454a2_pushCompCmdClang(_21e64c5b5_Builder* _9426_cmd);
inline void _2173456d3_pushCompCmdGcc(_21e64c5b5_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _217345b67_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_20939938d_IR>* _14636_ir);
inline jule::Str _217345cee_getCompilePath(void);
inline void _217346030_applyTargetIndependentOptimizations(jule::Ptr<_20939938d_IR>* _19245_ir);
inline void _2173461c8_checkCompilerFlag(void);
inline void _2173463d7_checkTargetArch(jule::Str _21420_arch);
inline void _217346618_checkTargetOs(jule::Str _22218_os);
inline void _217346849_checkTargetFlag(jule::Str* _23021_target);
inline void _217346a7a_checkOptFlag(jule::Str* _25318_opt);
inline void _217346e43_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _21734710d_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _21734731c_setupSemaFlags(jule::I64* _33024_flags);
inline jule::Ptr<_20939938d_IR> _2173475d6_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _217347817_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _20889e476_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_20889d80a_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i);
	void(*_20889db6d_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB);
	void(*_20889e08b_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB);
	jule::I64(*_20889e322_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _20890a03c_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_208908db5_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_2089090a2_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_2089093e3_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_20890d040_ImportInfo>(*_208909734_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log(*_208909b30_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_208909dd8_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20890d040_ImportInfo> _4128__0);
};

struct _2089ce287_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_2089cdce2_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_2089ce133_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other);
};

struct _208a0052d_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_20890d040_ImportInfo>(*_2089ed817_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _929_selector);
	jule::Ptr<_20894d7de_Var>(*_2089edc13_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_2089cd94b_TypeAlias>(*_2089ee10e_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_208746230_Struct>(*_2089ee50a_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_20881e2b4_Fn>(*_2089ee906_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_2088299c8_Trait>(*_2089eec47_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_20882c17e_Enum>(*_208a00088_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_20882d889_TypeEnum>(*_208a003c9_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _21733c752_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_21730ab1b_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_21730ac5e_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_21730ae3a_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_21733c60e_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a1995_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a4bc9_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a7957_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ab2b8_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088acb27_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088b8407_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088bb99e_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_209396940_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087490bd_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208822372_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088299c8_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20882c17e_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20882d889_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20889e696_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a0202_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a3425_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a6648_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088a945e_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ae596_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088b569b_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088b9d76_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088bdc8c_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089ce661_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089d846c_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089dbe98_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089dc96b_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089dd560_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089de110_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089dec8c_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089e0760_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2172c0a26_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088255b7_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088d3169_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20890d040_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089107b2_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20892a755_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21ad1e164_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21ad22299_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21ad254de_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21ad28778_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21ad2b9bd_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20894d7de_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2089cd94b_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208746230_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881e2b4_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208744e10_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208799195_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20882b623_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881c7e0_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cd472_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ca969_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881a139_BuiltinErrorCallExpr>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20899a9a1_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881b14b_BackendEmitExpr>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208818db3_BuiltinAppendCallExpr>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208817983_BuiltinPrintCallExpr>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208817c80_BuiltinPrintlnCallExpr>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208818533_BuiltinPanicCallExpr>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208819c60_BuiltinCopyCallExpr>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208819886_BuiltinDeleteCallExpr>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881b448_FreeExpr>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208814078_FnCallExpr>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cb55d_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cb85a_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873b70e_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cbd11_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873c116_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cc7e5_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ccae2_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cdad2_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088cdeab_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ce462_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872ce92_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872c26b_TupleExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208814908_IndexingExpr>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ce9e5_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088d0463_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088d1453_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088ccebb_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088d17e9_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208737441_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873a28a_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873e019_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872b677_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873d700_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873add4_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873c8b9_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208734927_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208734d01_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208735ce1_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873ecd9_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087350ed_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873c4e0_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873a664_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872c04b_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208743dcb_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20874302e_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087390d0_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20874376b_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087413d4_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20874236e_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872960e_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208728773_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208728d6c_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087283dd_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208729d5c_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208728a70_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872794d_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872db0d_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208814452_SliceExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208730d96_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087324a2_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208817686_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881acc7_RuneExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208817389_ArrayExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872e78a_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208727c17_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872d734_UnaryExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208727343_TypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872e3b1_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087280e1_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208815be5_SlicingExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088136c6_CastingExpr>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208732bcd_SliceExpr>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208812d46_StructLitExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208816eb0_StructStaticIdentExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208816278_TraitSubIdentExpr>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208816b19_StructSubIdentExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208815662_MapExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208814dae_AnonFnExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872b941_RangeExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872c612_LitExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872c9db_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20873363a_IndexingExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208733c9a_SlicingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872ded7_CastExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087316c1_StructLit>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2087303a1_FnCallExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208731b77_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20872ec41_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208812472_UnaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208812098_BinaryExpr>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208813143_AllocStructLitExpr>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_208818159_BuiltinNewCallExpr>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088189d9_BuiltinMakeCallExpr>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088191b0_BuiltinLenCallExpr>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088194ac_BuiltinCapCallExpr>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881a436_SizeofExpr>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20881aada_AlignofExpr>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da6057_ExceptionalForwardingExpr>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da8d29_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da7aa3_MutSlicingExpr>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da8576_PushToSliceExpr>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da8950_AppendToSliceExpr>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da680a_SwapExpr>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216d93a39_StrFromBytes>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da6bd4_EmptyCompareExpr>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da7520_StrCompExpr>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da64a8_StrConcatExpr>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da7da0_UnsafeBinaryExpr>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da9126_UnsafeDerefExpr>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da6ed1_RefExpr>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2088129a0_StructArgExpr>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da9654_UnsafeCastingExpr>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da6244_FnCallIgnoreExceptionalExpr>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216da819c_UnsafeIndexingExpr>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator181(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator182(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_218b5d307_218b16e09(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088a2996_index(_self_.as<_2088a1995_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d307_218b2c4e6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088a5bb9_index(_self_.as<_2088a4bc9_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d307_218b1c470(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088a89d0_index(_self_.as<_2088a7957_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d307_218b222cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088ac198_index(_self_.as<_2088ab2b8_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d307_218b293b1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088adb17_index(_self_.as<_2088acb27_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d307_218b45784(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088b93e7_index(_self_.as<_2088b8407_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d307_218b3ea14(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20899a9a1_Data>* _1426_d, jule::I64 _1436_i) {
	_2088bcab0_index(_self_.as<_2088bb99e_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_218b5d78b_218b16e09(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088a2633_ready(_self_.as<_2088a1995_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5d78b_218b2c4e6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088a5856_ready(_self_.as<_2088a4bc9_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5d78b_218b1c470(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088a866c_ready(_self_.as<_2088a7957_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5d78b_218b222cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088abd35_ready(_self_.as<_2088ab2b8_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5d78b_218b293b1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088ad7a4_ready(_self_.as<_2088acb27_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5d78b_218b45784(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088b9084_ready(_self_.as<_2088b8407_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5d78b_218b3ea14(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20894d7de_Var>* _1526_keyA, jule::Ptr<_20894d7de_Var>* _1543_keyB) {
	_2088bc74c_ready(_self_.as<_2088bb99e_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_218b5dd96_218b16e09(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088a2db4_step(_self_.as<_2088a1995_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_218b5dd96_218b2c4e6(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088a60d7_step(_self_.as<_2088a4bc9_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_218b5dd96_218b1c470(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088a8ded_step(_self_.as<_2088a7957_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_218b5dd96_218b222cc(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088ac5b6_step(_self_.as<_2088ab2b8_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_218b5dd96_218b293b1(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088ae035_step(_self_.as<_2088acb27_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_218b5dd96_218b45784(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088b9815_step(_self_.as<_2088b8407_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_218b5dd96_218b3ea14(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_20894d7de_Var>* _1633_keyA, jule::Ptr<_20894d7de_Var>* _1650_keyB) {
	_2088bcecd_step(_self_.as<_2088bb99e_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b16e09(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a314a_len(_self_.as<_2088a1995_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b2c4e6(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a636d_len(_self_.as<_2088a4bc9_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b1c470(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a9184_len(_self_.as<_2088a7957_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b222cc(jule::Ptr<jule::Uintptr> _self_) {
	return _2088ac84c_len(_self_.as<_2088ab2b8_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b293b1(jule::Ptr<jule::Uintptr> _self_) {
	return _2088ae2bb_len(_self_.as<_2088acb27_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b45784(jule::Ptr<jule::Uintptr> _self_) {
	return _2088b9a9b_len(_self_.as<_2088b8407_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_218b5e4c3_218b3ea14(jule::Ptr<jule::Uintptr> _self_) {
	return _2088bd264_len(_self_.as<_2088bb99e_comptimeDecls>().alloc);
}
inline void __jule_trait_method_218b5e803_21a2007dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_209397545_SetModPath(_self_.as<_209396940_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_218b5ec32_21a2007dd(jule::Ptr<jule::Uintptr> _self_) {
	return _2093977cb_GetModPath(_self_.as<_209396940_Importer>().alloc);
}
inline jule::Str __jule_trait_method_218b6011c_21a2007dd(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _209397b1c_ModById(_self_.as<_209396940_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_20890d040_ImportInfo> __jule_trait_method_218b60590_21a2007dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _209397e5d_GetImport(_self_.as<_209396940_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log __jule_trait_method_218b60b12_21a2007dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _209398359_ImportPackage(_self_.as<_209396940_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_218b613a4_21a2007dd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_20890d040_ImportInfo> _4128__0) {
	_209398612_Imported(_self_.as<_209396940_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_218b61849_218a19070(jule::Ptr<jule::Uintptr> _self_) {
	return _208749442_Str(_self_.as<_2087490bd_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a185d0(jule::Ptr<jule::Uintptr> _self_) {
	return _2088226e6_Str(_self_.as<_208822372_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a2cade(jule::Ptr<jule::Uintptr> _self_) {
	return _208829dc4_Str(_self_.as<_2088299c8_Trait>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a0c904(jule::Ptr<jule::Uintptr> _self_) {
	return _20882c536_Str(_self_.as<_20882c17e_Enum>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a136b8(jule::Ptr<jule::Uintptr> _self_) {
	return _20882dc0d_Str(_self_.as<_20882d889_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b2804c(jule::Ptr<jule::Uintptr> _self_) {
	return _20889ea92_Str(_self_.as<_20889e696_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b19a99(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a05a9_Str(_self_.as<_2088a0202_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b16e09(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a1d5d_Str(_self_.as<_2088a1995_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b30186(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a37cc_Str(_self_.as<_2088a3425_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b2c4e6(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a5081_Str(_self_.as<_2088a4bc9_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b20110(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a6a00_Str(_self_.as<_2088a6648_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b1c470(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a7e1e_Str(_self_.as<_2088a7957_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b24e6c(jule::Ptr<jule::Uintptr> _self_) {
	return _2088a9816_Str(_self_.as<_2088a945e_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b222cc(jule::Ptr<jule::Uintptr> _self_) {
	return _2088ab560_Str(_self_.as<_2088ab2b8_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b293b1(jule::Ptr<jule::Uintptr> _self_) {
	return _2088acece_Str(_self_.as<_2088acb27_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a3c329(jule::Ptr<jule::Uintptr> _self_) {
	return _2088ae94d_Str(_self_.as<_2088ae596_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b32a5c(jule::Ptr<jule::Uintptr> _self_) {
	return _2088b5a53_Str(_self_.as<_2088b569b_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b45784(jule::Ptr<jule::Uintptr> _self_) {
	return _2088b87ae_Str(_self_.as<_2088b8407_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b426a4(jule::Ptr<jule::Uintptr> _self_) {
	return _2088ba22d_Str(_self_.as<_2088b9d76_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b3ea14(jule::Ptr<jule::Uintptr> _self_) {
	return _2088bc087_Str(_self_.as<_2088bb99e_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218b37963(jule::Ptr<jule::Uintptr> _self_) {
	return _2088be144_Str(_self_.as<_2088bdc8c_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_2189edcad(jule::Ptr<jule::Uintptr> _self_) {
	return _2089cea5c_Str(_self_.as<_2089ce661_Type>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a03b81(jule::Ptr<jule::Uintptr> _self_) {
	return _2089d87e1_Str(_self_.as<_2089d846c_Prim>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a09b43(jule::Ptr<jule::Uintptr> _self_) {
	return _2089dc350_Str(_self_.as<_2089dbe98_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a170e5(jule::Ptr<jule::Uintptr> _self_) {
	return _2089dce33_Str(_self_.as<_2089dc96b_Slc>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a71517(jule::Ptr<jule::Uintptr> _self_) {
	return _2089dd917_Str(_self_.as<_2089dd560_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a6edc8(jule::Ptr<jule::Uintptr> _self_) {
	return _2089de4b7_Str(_self_.as<_2089de110_Map>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a15a83(jule::Ptr<jule::Uintptr> _self_) {
	return _2089e0144_Str(_self_.as<_2089dec8c_Arr>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_218a0b062(jule::Ptr<jule::Uintptr> _self_) {
	return _2089e0b17_Str(_self_.as<_2089e0760_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_218b61849_21ac05ee6(jule::Ptr<jule::Uintptr> _self_) {
	return _2172c0e00_Str(_self_.as<_2172c0a26_customType>().alloc);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a19070(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _208749783_Equal(_self_.as<_2087490bd_StructIns>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a185d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _208822a37_Equal(_self_.as<_208822372_FnIns>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a2cade(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _20882a215_Equal(_self_.as<_2088299c8_Trait>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a0c904(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _20882c877_Equal(_self_.as<_20882c17e_Enum>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a136b8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _20882e04e_Equal(_self_.as<_20882d889_TypeEnum>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b2804c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _20889edd3_Equal(_self_.as<_20889e696_comptimeRange>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b19a99(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a08ea_Equal(_self_.as<_2088a0202_comptimeStructField>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b16e09(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a219e_Equal(_self_.as<_2088a1995_comptimeStructFields>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b30186(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a3b1d_Equal(_self_.as<_2088a3425_comptimeStatic>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b2c4e6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a53c2_Equal(_self_.as<_2088a4bc9_comptimeStatics>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b20110(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a6d41_Equal(_self_.as<_2088a6648_comptimeEnumField>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b1c470(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a8260_Equal(_self_.as<_2088a7957_comptimeEnumFields>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b24e6c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088a9b57_Equal(_self_.as<_2088a945e_comptimeParam>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b222cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088ab8a1_Equal(_self_.as<_2088ab2b8_comptimeParams>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b293b1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088ad320_Equal(_self_.as<_2088acb27_comptimeTypeInfos>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a3c329(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088aec8e_Equal(_self_.as<_2088ae596_comptimeTypeInfo>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b32a5c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088b5d94_Equal(_self_.as<_2088b569b_comptimeValue>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b45784(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088b8b00_Equal(_self_.as<_2088b8407_comptimeFiles>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b426a4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088ba56e_Equal(_self_.as<_2088b9d76_comptimeFile>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b3ea14(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088bc3c8_Equal(_self_.as<_2088bb99e_comptimeDecls>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218b37963(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2088be485_Equal(_self_.as<_2088bdc8c_comptimeDecl>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_2189edcad(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089ced9d_Equal(_self_.as<_2089ce661_Type>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a03b81(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089d8b32_Equal(_self_.as<_2089d846c_Prim>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a09b43(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089dc691_Equal(_self_.as<_2089dbe98_Sptr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a170e5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089dd274_Equal(_self_.as<_2089dc96b_Slc>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a71517(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089ddc58_Equal(_self_.as<_2089dd560_Tuple>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a6edc8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089de808_Equal(_self_.as<_2089de110_Map>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a15a83(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089e0485_Equal(_self_.as<_2089dec8c_Arr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_218a0b062(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2089e0e58_Equal(_self_.as<_2089e0760_Ptr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_218b61b9b_21ac05ee6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_2089ce661_Type> _3918_other) {
	return _2172c1241_Equal(_self_.as<_2172c0a26_customType>(), _3918_other);
}
inline jule::Ptr<_20890d040_ImportInfo> __jule_trait_method_218b621c9_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _929_selector) {
	return _208825ad4_SelectPackage(_self_.as<_2088255b7_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_20890d040_ImportInfo> __jule_trait_method_218b621c9_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _929_selector) {
	return _2088d3642_SelectPackage(_self_.as<_2088d3169_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_20890d040_ImportInfo> __jule_trait_method_218b621c9_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _929_selector) {
	return _20890d55c_SelectPackage(_self_.as<_20890d040_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_20890d040_ImportInfo> __jule_trait_method_218b621c9_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _929_selector) {
	return _208910c8a_SelectPackage(_self_.as<_2089107b2_Package>().alloc, _929_selector);
}
inline jule::Ptr<_20890d040_ImportInfo> __jule_trait_method_218b621c9_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _929_selector) {
	return _20892ac2d_SelectPackage(_self_.as<_20892a755_sema>().alloc, _929_selector);
}
inline jule::Ptr<_20894d7de_Var> __jule_trait_method_218b62e44_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _208825ed0_FindVar(_self_.as<_2088255b7_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_20894d7de_Var> __jule_trait_method_218b62e44_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _2088d3a3d_FindVar(_self_.as<_2088d3169_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_20894d7de_Var> __jule_trait_method_218b62e44_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _20890d958_FindVar(_self_.as<_20890d040_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_20894d7de_Var> __jule_trait_method_218b62e44_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _208911186_FindVar(_self_.as<_2089107b2_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_20894d7de_Var> __jule_trait_method_218b62e44_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _20892b129_FindVar(_self_.as<_20892a755_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_2089cd94b_TypeAlias> __jule_trait_method_218b63494_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _2088263cb_FindTypeAlias(_self_.as<_2088255b7_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_2089cd94b_TypeAlias> __jule_trait_method_218b63494_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _2088d3e39_FindTypeAlias(_self_.as<_2088d3169_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_2089cd94b_TypeAlias> __jule_trait_method_218b63494_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _20890dd54_FindTypeAlias(_self_.as<_20890d040_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_2089cd94b_TypeAlias> __jule_trait_method_218b63494_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _208911582_FindTypeAlias(_self_.as<_2089107b2_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_2089cd94b_TypeAlias> __jule_trait_method_218b63494_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _20892b525_FindTypeAlias(_self_.as<_20892a755_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_208746230_Struct> __jule_trait_method_218b63a16_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _2088267c7_FindStruct(_self_.as<_2088255b7_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_208746230_Struct> __jule_trait_method_218b63a16_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _2088d4335_FindStruct(_self_.as<_2088d3169_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_208746230_Struct> __jule_trait_method_218b63a16_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _20890e250_FindStruct(_self_.as<_20890d040_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_208746230_Struct> __jule_trait_method_218b63a16_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _20891197d_FindStruct(_self_.as<_2089107b2_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_208746230_Struct> __jule_trait_method_218b63a16_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _20892b921_FindStruct(_self_.as<_20892a755_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_20881e2b4_Fn> __jule_trait_method_218b64088_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _208826bc3_FindFn(_self_.as<_2088255b7_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_20881e2b4_Fn> __jule_trait_method_218b64088_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _2088d4731_FindFn(_self_.as<_2088d3169_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_20881e2b4_Fn> __jule_trait_method_218b64088_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _20890e64b_FindFn(_self_.as<_20890d040_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_20881e2b4_Fn> __jule_trait_method_218b64088_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _208911d79_FindFn(_self_.as<_2089107b2_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_20881e2b4_Fn> __jule_trait_method_218b64088_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _20892bd1c_FindFn(_self_.as<_20892a755_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_2088299c8_Trait> __jule_trait_method_218b6460a_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _208827014_FindTrait(_self_.as<_2088255b7_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_2088299c8_Trait> __jule_trait_method_218b6460a_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _2088d4a72_FindTrait(_self_.as<_2088d3169_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_2088299c8_Trait> __jule_trait_method_218b6460a_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _20890e98c_FindTrait(_self_.as<_20890d040_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_2088299c8_Trait> __jule_trait_method_218b6460a_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _2089121ba_FindTrait(_self_.as<_2089107b2_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_2088299c8_Trait> __jule_trait_method_218b6460a_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _20892c15d_FindTrait(_self_.as<_20892a755_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_20882c17e_Enum> __jule_trait_method_218b64ae4_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _208827355_FindEnum(_self_.as<_2088255b7_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_20882c17e_Enum> __jule_trait_method_218b64ae4_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _2088d4db3_FindEnum(_self_.as<_2088d3169_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_20882c17e_Enum> __jule_trait_method_218b64ae4_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _20890eccd_FindEnum(_self_.as<_20890d040_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_20882c17e_Enum> __jule_trait_method_218b64ae4_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _20891250b_FindEnum(_self_.as<_2089107b2_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_20882c17e_Enum> __jule_trait_method_218b64ae4_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _20892c49e_FindEnum(_self_.as<_20892a755_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_20882d889_TypeEnum> __jule_trait_method_218b650cd_218a1ad74(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _208827696_FindTypeEnum(_self_.as<_2088255b7_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_20882d889_TypeEnum> __jule_trait_method_218b650cd_218acb8b3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _2088d5204_FindTypeEnum(_self_.as<_2088d3169_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_20882d889_TypeEnum> __jule_trait_method_218b650cd_218a1be96(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _20891011e_FindTypeEnum(_self_.as<_20890d040_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_20882d889_TypeEnum> __jule_trait_method_218b650cd_218a1c9e1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _20891284c_FindTypeEnum(_self_.as<_2089107b2_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_20882d889_TypeEnum> __jule_trait_method_218b650cd_218a1a55a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _20892c7e0_FindTypeEnum(_self_.as<_20892a755_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_21ad2ec13_21ad1e164(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad1e32e_Name(_self_.as<_21ad1e164_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad2ec13_21ad22299(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad22453_Name(_self_.as<_21ad22299_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad2ec13_21ad254de(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad25698_Name(_self_.as<_21ad254de_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad2ec13_21ad28778(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad28932_Name(_self_.as<_21ad28778_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad2ec13_21ad2b9bd(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad2bb77_Name(_self_.as<_21ad2b9bd_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_21ad2d8e3_21ad1e164(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad1e73b_Short(_self_.as<_21ad1e164_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_21ad2d8e3_21ad22299(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad229e7_Short(_self_.as<_21ad22299_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_21ad2d8e3_21ad254de(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad25c3c_Short(_self_.as<_21ad254de_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_21ad2d8e3_21ad28778(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad28ec6_Short(_self_.as<_21ad28778_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_21ad2d8e3_21ad2b9bd(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad2c21b_Short(_self_.as<_21ad2b9bd_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad3042d_21ad1e164(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad1e483_What(_self_.as<_21ad1e164_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad3042d_21ad22299(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad22761_What(_self_.as<_21ad22299_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad3042d_21ad254de(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad259a6_What(_self_.as<_21ad254de_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad3042d_21ad28778(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad28c40_What(_self_.as<_21ad28778_Flag>().alloc);
}
inline jule::Str __jule_trait_method_21ad3042d_21ad2b9bd(jule::Ptr<jule::Uintptr> _self_) {
	return _21ad2be85_What(_self_.as<_21ad2b9bd_Flag>().alloc);
}
inline void __jule_trait_method_21ad30818_21ad1e164(jule::Ptr<jule::Uintptr> _self_) {
	_21ad1e5d7_Reset(_self_.as<_21ad1e164_Flag>().alloc);
}
inline void __jule_trait_method_21ad30818_21ad22299(jule::Ptr<jule::Uintptr> _self_) {
	_21ad228a4_Reset(_self_.as<_21ad22299_Flag>().alloc);
}
inline void __jule_trait_method_21ad30818_21ad254de(jule::Ptr<jule::Uintptr> _self_) {
	_21ad25ae9_Reset(_self_.as<_21ad254de_Flag>().alloc);
}
inline void __jule_trait_method_21ad30818_21ad28778(jule::Ptr<jule::Uintptr> _self_) {
	_21ad28d83_Reset(_self_.as<_21ad28778_Flag>().alloc);
}
inline void __jule_trait_method_21ad30818_21ad2b9bd(jule::Ptr<jule::Uintptr> _self_) {
	_21ad2c0c8_Reset(_self_.as<_21ad2b9bd_Flag>().alloc);
}


static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._20889d80a_index=__jule_trait_method_218b5d307_218b16e09,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b16e09,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b16e09,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b16e09,
};
static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._20889d80a_index=__jule_trait_method_218b5d307_218b2c4e6,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b2c4e6,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b2c4e6,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b2c4e6,
};
static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._20889d80a_index=__jule_trait_method_218b5d307_218b1c470,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b1c470,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b1c470,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b1c470,
};
static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._20889d80a_index=__jule_trait_method_218b5d307_218b222cc,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b222cc,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b222cc,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b222cc,
};
static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._20889d80a_index=__jule_trait_method_218b5d307_218b293b1,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b293b1,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b293b1,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b293b1,
};
static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._20889d80a_index=__jule_trait_method_218b5d307_218b45784,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b45784,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b45784,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b45784,
};
static _20889e476_comptimeRangeKindMptrData _20889e476_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._20889d80a_index=__jule_trait_method_218b5d307_218b3ea14,
	._20889db6d_ready=__jule_trait_method_218b5d78b_218b3ea14,
	._20889e08b_step=__jule_trait_method_218b5dd96_218b3ea14,
	._20889e322_len=__jule_trait_method_218b5e4c3_218b3ea14,
};
static _20890a03c_ImporterMptrData _20890a03c_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._208908db5_SetModPath=__jule_trait_method_218b5e803_21a2007dd,
	._2089090a2_GetModPath=__jule_trait_method_218b5ec32_21a2007dd,
	._2089093e3_ModById=__jule_trait_method_218b6011c_21a2007dd,
	._208909734_GetImport=__jule_trait_method_218b60590_21a2007dd,
	._208909b30_ImportPackage=__jule_trait_method_218b60b12_21a2007dd,
	._208909dd8_Imported=__jule_trait_method_218b613a4_21a2007dd,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a19070,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a19070,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a185d0,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a185d0,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a2cade,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a2cade,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a0c904,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a0c904,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a136b8,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a136b8,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b2804c,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b2804c,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b19a99,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b19a99,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b16e09,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b16e09,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b30186,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b30186,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b2c4e6,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b2c4e6,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b20110,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b20110,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b1c470,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b1c470,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b24e6c,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b24e6c,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b222cc,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b222cc,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b293b1,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b293b1,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a3c329,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a3c329,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b32a5c,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b32a5c,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b45784,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b45784,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b426a4,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b426a4,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b3ea14,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b3ea14,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._2089cdce2_Str=__jule_trait_method_218b61849_218b37963,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218b37963,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._2089cdce2_Str=__jule_trait_method_218b61849_2189edcad,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_2189edcad,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a03b81,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a03b81,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a09b43,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a09b43,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a170e5,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a170e5,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a71517,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a71517,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a6edc8,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a6edc8,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a15a83,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a15a83,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._2089cdce2_Str=__jule_trait_method_218b61849_218a0b062,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_218a0b062,
};
static _2089ce287_KindMptrData _2089ce287_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._2089cdce2_Str=__jule_trait_method_218b61849_21ac05ee6,
	._2089ce133_Equal=__jule_trait_method_218b61b9b_21ac05ee6,
};
static _208a0052d_LookupMptrData _208a0052d_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._2089ed817_SelectPackage=__jule_trait_method_218b621c9_218a1ad74,
	._2089edc13_FindVar=__jule_trait_method_218b62e44_218a1ad74,
	._2089ee10e_FindTypeAlias=__jule_trait_method_218b63494_218a1ad74,
	._2089ee50a_FindStruct=__jule_trait_method_218b63a16_218a1ad74,
	._2089ee906_FindFn=__jule_trait_method_218b64088_218a1ad74,
	._2089eec47_FindTrait=__jule_trait_method_218b6460a_218a1ad74,
	._208a00088_FindEnum=__jule_trait_method_218b64ae4_218a1ad74,
	._208a003c9_FindTypeEnum=__jule_trait_method_218b650cd_218a1ad74,
};
static _208a0052d_LookupMptrData _208a0052d_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._2089ed817_SelectPackage=__jule_trait_method_218b621c9_218acb8b3,
	._2089edc13_FindVar=__jule_trait_method_218b62e44_218acb8b3,
	._2089ee10e_FindTypeAlias=__jule_trait_method_218b63494_218acb8b3,
	._2089ee50a_FindStruct=__jule_trait_method_218b63a16_218acb8b3,
	._2089ee906_FindFn=__jule_trait_method_218b64088_218acb8b3,
	._2089eec47_FindTrait=__jule_trait_method_218b6460a_218acb8b3,
	._208a00088_FindEnum=__jule_trait_method_218b64ae4_218acb8b3,
	._208a003c9_FindTypeEnum=__jule_trait_method_218b650cd_218acb8b3,
};
static _208a0052d_LookupMptrData _208a0052d_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._2089ed817_SelectPackage=__jule_trait_method_218b621c9_218a1be96,
	._2089edc13_FindVar=__jule_trait_method_218b62e44_218a1be96,
	._2089ee10e_FindTypeAlias=__jule_trait_method_218b63494_218a1be96,
	._2089ee50a_FindStruct=__jule_trait_method_218b63a16_218a1be96,
	._2089ee906_FindFn=__jule_trait_method_218b64088_218a1be96,
	._2089eec47_FindTrait=__jule_trait_method_218b6460a_218a1be96,
	._208a00088_FindEnum=__jule_trait_method_218b64ae4_218a1be96,
	._208a003c9_FindTypeEnum=__jule_trait_method_218b650cd_218a1be96,
};
static _208a0052d_LookupMptrData _208a0052d_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._2089ed817_SelectPackage=__jule_trait_method_218b621c9_218a1c9e1,
	._2089edc13_FindVar=__jule_trait_method_218b62e44_218a1c9e1,
	._2089ee10e_FindTypeAlias=__jule_trait_method_218b63494_218a1c9e1,
	._2089ee50a_FindStruct=__jule_trait_method_218b63a16_218a1c9e1,
	._2089ee906_FindFn=__jule_trait_method_218b64088_218a1c9e1,
	._2089eec47_FindTrait=__jule_trait_method_218b6460a_218a1c9e1,
	._208a00088_FindEnum=__jule_trait_method_218b64ae4_218a1c9e1,
	._208a003c9_FindTypeEnum=__jule_trait_method_218b650cd_218a1c9e1,
};
static _208a0052d_LookupMptrData _208a0052d_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._2089ed817_SelectPackage=__jule_trait_method_218b621c9_218a1a55a,
	._2089edc13_FindVar=__jule_trait_method_218b62e44_218a1a55a,
	._2089ee10e_FindTypeAlias=__jule_trait_method_218b63494_218a1a55a,
	._2089ee50a_FindStruct=__jule_trait_method_218b63a16_218a1a55a,
	._2089ee906_FindFn=__jule_trait_method_218b64088_218a1a55a,
	._2089eec47_FindTrait=__jule_trait_method_218b6460a_218a1a55a,
	._208a00088_FindEnum=__jule_trait_method_218b64ae4_218a1a55a,
	._208a003c9_FindTypeEnum=__jule_trait_method_218b650cd_218a1a55a,
};
static _21733c752_CommonFlagMptrData _21733c752_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._21730ab1b_Name=__jule_trait_method_21ad2ec13_21ad1e164,
	._21730ac5e_Short=__jule_trait_method_21ad2d8e3_21ad1e164,
	._21730ae3a_What=__jule_trait_method_21ad3042d_21ad1e164,
	._21733c60e_Reset=__jule_trait_method_21ad30818_21ad1e164,
};
static _21733c752_CommonFlagMptrData _21733c752_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._21730ab1b_Name=__jule_trait_method_21ad2ec13_21ad22299,
	._21730ac5e_Short=__jule_trait_method_21ad2d8e3_21ad22299,
	._21730ae3a_What=__jule_trait_method_21ad3042d_21ad22299,
	._21733c60e_Reset=__jule_trait_method_21ad30818_21ad22299,
};
static _21733c752_CommonFlagMptrData _21733c752_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._21730ab1b_Name=__jule_trait_method_21ad2ec13_21ad254de,
	._21730ac5e_Short=__jule_trait_method_21ad2d8e3_21ad254de,
	._21730ae3a_What=__jule_trait_method_21ad3042d_21ad254de,
	._21733c60e_Reset=__jule_trait_method_21ad30818_21ad254de,
};
static _21733c752_CommonFlagMptrData _21733c752_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._21730ab1b_Name=__jule_trait_method_21ad2ec13_21ad28778,
	._21730ac5e_Short=__jule_trait_method_21ad2d8e3_21ad28778,
	._21730ae3a_What=__jule_trait_method_21ad3042d_21ad28778,
	._21733c60e_Reset=__jule_trait_method_21ad30818_21ad28778,
};
static _21733c752_CommonFlagMptrData _21733c752_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._21730ab1b_Name=__jule_trait_method_21ad2ec13_21ad2b9bd,
	._21730ac5e_Short=__jule_trait_method_21ad2d8e3_21ad2b9bd,
	._21730ae3a_What=__jule_trait_method_21ad3042d_21ad2b9bd,
	._21733c60e_Reset=__jule_trait_method_21ad30818_21ad2b9bd,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _21828e296_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _21832523e_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _218901c8d_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _218902068_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _2189079db_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _2175dc518_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _21890e053_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_20894d7de_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_2089cd94b_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_208746230_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_20881e2b4_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_2088299c8_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_20882c17e_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_20882d889_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_208744e10_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_208799195_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_20882b623_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_20881c7e0_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_2088cd472_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_2088ca969_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_20881a139_BuiltinErrorCallExpr> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_20899a9a1_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_20881b14b_BackendEmitExpr> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_208818db3_BuiltinAppendCallExpr> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_208817983_BuiltinPrintCallExpr> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_208817c80_BuiltinPrintlnCallExpr> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_208818533_BuiltinPanicCallExpr> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_208819c60_BuiltinCopyCallExpr> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_208819886_BuiltinDeleteCallExpr> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_20881b448_FreeExpr> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_208814078_FnCallExpr> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_2088cb55d_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_2088cb85a_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_20873b70e_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_2088cbd11_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_20873c116_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_2088cc7e5_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_2088ccae2_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_2088cdad2_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_2088cdeab_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_2088ce462_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_20872ce92_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_20872c26b_TupleExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_208814908_IndexingExpr> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_2088ce9e5_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_2088d0463_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_2088d1453_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_2088ccebb_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_2088d17e9_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_208737441_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_20873a28a_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_20873e019_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_20872b677_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_20873d700_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_20873add4_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_20873c8b9_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_208734927_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_208734d01_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_208735ce1_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_20873ecd9_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_2087350ed_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_20873c4e0_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_20873a664_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_20872c04b_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_2087490bd_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_208822372_FnIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_208743dcb_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_20874302e_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_2087390d0_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_20874376b_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_2087413d4_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_20874236e_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_20872960e_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_208728773_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_208728d6c_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_2087283dd_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_208729d5c_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_208728a70_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_20872794d_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_20872db0d_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_208814452_SliceExpr> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_208730d96_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_2087324a2_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_208817686_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_20881acc7_RuneExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_2089ce661_Type> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_208817389_ArrayExpr> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_20872e78a_SubIdentExpr> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_208727c17_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_20872d734_UnaryExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_208727343_TypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_20872e3b1_NamespaceExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_2087280e1_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_208815be5_SlicingExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_2088136c6_CastingExpr> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_208732bcd_SliceExpr> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_208812d46_StructLitExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_208816eb0_StructStaticIdentExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_208816278_TraitSubIdentExpr> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_208816b19_StructSubIdentExpr> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_208815662_MapExpr> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_208814dae_AnonFnExpr> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_20872b941_RangeExpr> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_20872c612_LitExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_20872c9db_UnsafeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_20873363a_IndexingExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_208733c9a_SlicingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_20872ded7_CastExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_2087316c1_StructLit> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_2087303a1_FnCallExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_208731b77_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_20872ec41_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_208812472_UnaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_208812098_BinaryExpr> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_208813143_AllocStructLitExpr> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_208818159_BuiltinNewCallExpr> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_2088189d9_BuiltinMakeCallExpr> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_2088191b0_BuiltinLenCallExpr> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_2088194ac_BuiltinCapCallExpr> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_20881a436_SizeofExpr> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_20881aada_AlignofExpr> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_216da6057_ExceptionalForwardingExpr> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_216da8d29_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_216da7aa3_MutSlicingExpr> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_216da8576_PushToSliceExpr> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_216da8950_AppendToSliceExpr> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_216da680a_SwapExpr> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_216d93a39_StrFromBytes> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_216da6bd4_EmptyCompareExpr> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_216da7520_StrCompExpr> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_216da64a8_StrConcatExpr> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_216da7da0_UnsafeBinaryExpr> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_216da9126_UnsafeDerefExpr> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_216da6ed1_RefExpr> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_2088129a0_StructArgExpr> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_216da9654_UnsafeCastingExpr> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_216da6244_FnCallIgnoreExceptionalExpr> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator172, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<_216da819c_UnsafeIndexingExpr> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type138 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _2182a1330_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _2182d43b8_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _2183249be_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _21863b3ce_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _2189b2b95_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _2189b31c3_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _218324d98_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _2189bdc28_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
jule::Bool __jule_any_type147_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type147_to_str(void *alloc) noexcept { return _2189c74a1_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type147{.dealloc=__jule_type_deallocator181, .eq=__jule_any_type147_eq, .to_str=__jule_any_type147_to_str};
jule::Bool __jule_any_type148_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type148_to_str(void *alloc) noexcept { return _2189cc550_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type148{.dealloc=__jule_type_deallocator182, .eq=__jule_any_type148_eq, .to_str=__jule_any_type148_to_str};
inline jule::Bool __jule_anon218c05b74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20882121c_ParamIns> _25721_p1, jule::Ptr<_20882121c_ParamIns> _25736_p2);
struct __jule_anon_218c6d59e_ctx{
	jule::Ptr<_2088a0202_comptimeStructField> _self_;
};
static void __jule_anon_218c6d59e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218c6d59e_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c6d59e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _6521_e, jule::Ptr<_2087303a1_FnCallExpr>* _6536_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218c70381_ctx{
	jule::Ptr<_2088a0202_comptimeStructField> _self_;
};
static void __jule_anon_218c70381_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218c70381_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c70381(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _7221_e, jule::Ptr<_2087303a1_FnCallExpr>* _7236_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218c833d8_ctx{
	jule::Ptr<_2088a3425_comptimeStatic> _self_;
};
static void __jule_anon_218c833d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218c833d8_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c833d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _17821_e, jule::Ptr<_2087303a1_FnCallExpr>* _17836_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218c851cb_ctx{
	jule::Ptr<_2088a3425_comptimeStatic> _self_;
};
static void __jule_anon_218c851cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218c851cb_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c851cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _18521_e, jule::Ptr<_2087303a1_FnCallExpr>* _18536_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218c9499e_ctx{
	jule::Ptr<_2088a6648_comptimeEnumField> _self_;
};
static void __jule_anon_218c9499e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218c9499e_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c9499e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _28321_e, jule::Ptr<_2087303a1_FnCallExpr>* _28336_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218cabba3_ctx{
	jule::Ptr<_2088a945e_comptimeParam> _self_;
};
static void __jule_anon_218cabba3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218cabba3_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218cabba3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _40221_e, jule::Ptr<_2087303a1_FnCallExpr>* _40236_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218cad996_ctx{
	jule::Ptr<_2088a945e_comptimeParam> _self_;
};
static void __jule_anon_218cad996_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218cad996_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218cad996(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _40921_e, jule::Ptr<_2087303a1_FnCallExpr>* _40936_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218cb0789_ctx{
	jule::Ptr<_2088a945e_comptimeParam> _self_;
};
static void __jule_anon_218cb0789_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218cb0789_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218cb0789(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _41621_e, jule::Ptr<_2087303a1_FnCallExpr>* _41636_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d48190_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d48190_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d48190_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d48190(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _97421_e, jule::Ptr<_2087303a1_FnCallExpr>* _97436_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d49e83_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d49e83_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d49e83_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d49e83(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _98121_e, jule::Ptr<_2087303a1_FnCallExpr>* _98136_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d4bc76_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d4bc76_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d4bc76_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d4bc76(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _98821_e, jule::Ptr<_2087303a1_FnCallExpr>* _98836_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d4da69_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d4da69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d4da69_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d4da69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _99521_e, jule::Ptr<_2087303a1_FnCallExpr>* _99536_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d5085c_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d5085c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d5085c_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5085c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _100221_e, jule::Ptr<_2087303a1_FnCallExpr>* _100236_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d52650_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d52650_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d52650_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d52650(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _100921_e, jule::Ptr<_2087303a1_FnCallExpr>* _100936_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d54443_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d54443_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d54443_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d54443(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _101621_e, jule::Ptr<_2087303a1_FnCallExpr>* _101636_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d56236_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d56236_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d56236_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d56236(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _102321_e, jule::Ptr<_2087303a1_FnCallExpr>* _102336_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d5816c_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d5816c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d5816c_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5816c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _103021_e, jule::Ptr<_2087303a1_FnCallExpr>* _103036_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d59e60_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d59e60_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d59e60_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d59e60(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _103721_e, jule::Ptr<_2087303a1_FnCallExpr>* _103736_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d5bc53_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d5bc53_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d5bc53_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5bc53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _104421_e, jule::Ptr<_2087303a1_FnCallExpr>* _104436_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d5da46_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d5da46_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d5da46_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5da46(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _105121_e, jule::Ptr<_2087303a1_FnCallExpr>* _105136_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d60839_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d60839_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d60839_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d60839(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _105821_e, jule::Ptr<_2087303a1_FnCallExpr>* _105836_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d6262c_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d6262c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d6262c_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d6262c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _106521_e, jule::Ptr<_2087303a1_FnCallExpr>* _106536_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d64420_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d64420_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d64420_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d64420(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _107221_e, jule::Ptr<_2087303a1_FnCallExpr>* _107236_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d66213_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d66213_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d66213_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d66213(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _107921_e, jule::Ptr<_2087303a1_FnCallExpr>* _107936_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d68006_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d68006_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d68006_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d68006(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _108621_e, jule::Ptr<_2087303a1_FnCallExpr>* _108636_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d69ce9_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d69ce9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d69ce9_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d69ce9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _109321_e, jule::Ptr<_2087303a1_FnCallExpr>* _109336_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d6badc_ctx{
	jule::Ptr<_2088ae596_comptimeTypeInfo> _self_;
};
static void __jule_anon_218d6badc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d6badc_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d6badc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _110021_e, jule::Ptr<_2087303a1_FnCallExpr>* _110036_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d9ab4e_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218d9ab4e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d9ab4e_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d9ab4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _126321_e, jule::Ptr<_2087303a1_FnCallExpr>* _126336_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d9c942_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218d9c942_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d9c942_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d9c942(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _127021_e, jule::Ptr<_2087303a1_FnCallExpr>* _127036_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218d9e735_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218d9e735_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218d9e735_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d9e735(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _127721_e, jule::Ptr<_2087303a1_FnCallExpr>* _127736_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218da1528_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218da1528_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218da1528_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da1528(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _128421_e, jule::Ptr<_2087303a1_FnCallExpr>* _128436_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218da331b_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218da331b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218da331b_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da331b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _129121_e, jule::Ptr<_2087303a1_FnCallExpr>* _129136_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218da510e_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218da510e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218da510e_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da510e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _129821_e, jule::Ptr<_2087303a1_FnCallExpr>* _129836_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218da6e02_ctx{
	jule::Ptr<_2088b569b_comptimeValue> _self_;
};
static void __jule_anon_218da6e02_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218da6e02_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da6e02(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _130521_e, jule::Ptr<_2087303a1_FnCallExpr>* _130536_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218dbb389_ctx{
	jule::Ptr<_2088b9d76_comptimeFile> _self_;
};
static void __jule_anon_218dbb389_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218dbb389_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218dbb389(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _143021_e, jule::Ptr<_2087303a1_FnCallExpr>* _143036_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218dbd17c_ctx{
	jule::Ptr<_2088b9d76_comptimeFile> _self_;
};
static void __jule_anon_218dbd17c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218dbd17c_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218dbd17c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _143721_e, jule::Ptr<_2087303a1_FnCallExpr>* _143736_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218dbee70_ctx{
	jule::Ptr<_2088b9d76_comptimeFile> _self_;
};
static void __jule_anon_218dbee70_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218dbee70_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218dbee70(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _144421_e, jule::Ptr<_2087303a1_FnCallExpr>* _144436_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e2e81a_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e2e81a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e2e81a_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e2e81a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _195021_e, jule::Ptr<_2087303a1_FnCallExpr>* _195036_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e3160d_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e3160d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e3160d_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3160d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _195721_e, jule::Ptr<_2087303a1_FnCallExpr>* _195736_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e33401_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e33401_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e33401_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e33401(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _196421_e, jule::Ptr<_2087303a1_FnCallExpr>* _196436_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e351e4_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e351e4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e351e4_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e351e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _197121_e, jule::Ptr<_2087303a1_FnCallExpr>* _197136_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e36ed7_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e36ed7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e36ed7_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e36ed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _197821_e, jule::Ptr<_2087303a1_FnCallExpr>* _197836_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e38cca_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e38cca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e38cca_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e38cca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _198521_e, jule::Ptr<_2087303a1_FnCallExpr>* _198536_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e3aabd_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e3aabd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e3aabd_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3aabd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _199221_e, jule::Ptr<_2087303a1_FnCallExpr>* _199236_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e3c8b1_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e3c8b1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e3c8b1_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3c8b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _199921_e, jule::Ptr<_2087303a1_FnCallExpr>* _199936_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e3e7e7_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e3e7e7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e3e7e7_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3e7e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _200621_e, jule::Ptr<_2087303a1_FnCallExpr>* _200636_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e415da_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e415da_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e415da_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e415da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _201321_e, jule::Ptr<_2087303a1_FnCallExpr>* _201336_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e433cd_ctx{
	jule::Ptr<_2088bdc8c_comptimeDecl> _self_;
};
static void __jule_anon_218e433cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e433cd_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e433cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _202021_e, jule::Ptr<_2087303a1_FnCallExpr>* _202036_fc, jule::Ptr<_20899a9a1_Data>* );
struct __jule_anon_218e4e395_ctx{
	jule::Ptr<_2088c5678_constraintChecker> _self_;
};
static void __jule_anon_218e4e395_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_218e4e395_ctx>().dealloc(); }
inline jule::Bool __jule_anon_218e4e395(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _6415_sema, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>* _6433_generics);
struct __jule_anon_2190d2a89_ctx{
	jule::Ptr<_208735ce1_AssignSt> _126347_a;
	jule::Ptr<_20899c970_eval> _12647_eval;
	jule::Ptr<_2088d3169_scopeChecker> _self_;
};
static void __jule_anon_2190d2a89_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2190d2a89_ctx>().dealloc(); }
inline void __jule_anon_2190d2a89(jule::Ptr<jule::Uintptr> __f_ctx, jule::I64 _126519_i);
struct __jule_anon_2190ddd5e_ctx{
	jule::Ptr<jule::I64> _12948__i;
	jule::Ptr<_208735ce1_AssignSt> _126347_a;
	jule::Fn<void,jule::I64> _12653_updateMut;
	jule::Ptr<_20899c970_eval> _12647_eval;
	jule::Ptr<jule::Slice<_2088ca1d8_exprPart>> _12958__parts;
};
static void __jule_anon_2190ddd5e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2190ddd5e_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_2190ddd5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20872b677_Expr>* _129644_expr);
struct __jule_anon_2085752d4_ctx{
	jule::Ptr<_20890d040_ImportInfo> *_48728_pkg;
};
static void __jule_anon_2085752d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2085752d4_ctx>().dealloc(); }
inline jule::Bool __jule_anon_2085752d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20890d040_ImportInfo> _48835_spkg);
struct __jule_anon_20867e50e_ctx{
	jule::Ptr<_208822372_FnIns> _83343_f;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _83411_generics;
	jule::Slice<jule::Ptr<_2089ce661_Type>> *_83359_ignored;
};
static void __jule_anon_20867e50e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20867e50e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_20867e50e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _84042_sema);
struct __jule_anon_2192b9d4d_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*> _93646_algo;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _9417_generics;
};
static void __jule_anon_2192b9d4d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2192b9d4d_ctx>().dealloc(); }
inline jule::Bool __jule_anon_2192b9d4d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _94342_sema);
struct __jule_anon_2192bc735_ctx{
	jule::Ptr<_208822372_FnIns> _95237_f;
	jule::Ptr<_20892a755_sema> _self_;
};
static void __jule_anon_2192bc735_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2192bc735_ctx>().dealloc(); }
inline jule::Bool __jule_anon_2192bc735(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _95637_sema, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>* _95655_generics);
struct __jule_anon_2196463e9_ctx{
	jule::Ptr<_20899c970_eval> _self_;
};
static void __jule_anon_2196463e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2196463e9_ctx>().dealloc(); }
inline jule::Ptr<_20899a9a1_Data> __jule_anon_2196463e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20872b677_Expr>* _294939_expr);
inline jule::Str __jule_anon219b2c8d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _91619_def);
struct __jule_anon_21a31cec1_ctx{
	jule::Ptr<_2171c8368_ObjectDeadCode> _self_;
};
static void __jule_anon_21a31cec1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a31cec1_ctx>().dealloc(); }
inline void __jule_anon_21a31cec1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _17731_file);
struct __jule_anon_21a37a171_ctx{
	_2171d1a25_exprDeadCode *_self_;
};
static void __jule_anon_21a37a171_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a37a171_ctx>().dealloc(); }
inline void __jule_anon_21a37a171(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_21a4be01d_ctx{
	jule::Ptr<jule::Bool> _687__check;
	jule::Ptr<_2170aa998_exprOptimizer> _527_exop;
};
static void __jule_anon_21a4be01d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a4be01d_ctx>().dealloc(); }
inline void __jule_anon_21a4be01d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m);
struct __jule_anon_21a4ed57a_ctx{
	jule::Ptr<_216da64a8_StrConcatExpr> _3057_model;
	_2170aa998_exprOptimizer *_self_;
	jule::Fn<void,jule::Any> *_3094__step;
};
static void __jule_anon_21a4ed57a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a4ed57a_ctx>().dealloc(); }
inline void __jule_anon_21a4ed57a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _31013_m);
struct __jule_anon_21a58d829_ctx{
	_2170aa998_exprOptimizer *_self_;
};
static void __jule_anon_21a58d829_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a58d829_ctx>().dealloc(); }
inline void __jule_anon_21a58d829(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _94447_m);
struct __jule_anon_21a75e19d_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_21a75e19d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a75e19d_ctx>().dealloc(); }
inline void __jule_anon_21a75e19d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a762ba7_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
	jule::Ptr<_2088cc7e5_RangeIter> *_9336_it;
};
static void __jule_anon_21a762ba7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a762ba7_ctx>().dealloc(); }
inline void __jule_anon_21a762ba7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a782138_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
};
static void __jule_anon_21a782138_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a782138_ctx>().dealloc(); }
inline void __jule_anon_21a782138(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a784624_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
};
static void __jule_anon_21a784624_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a784624_ctx>().dealloc(); }
inline void __jule_anon_21a784624(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a79d231_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
};
static void __jule_anon_21a79d231_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a79d231_ctx>().dealloc(); }
inline void __jule_anon_21a79d231(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a82ea21_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
};
static void __jule_anon_21a82ea21_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a82ea21_ctx>().dealloc(); }
inline void __jule_anon_21a82ea21(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a830d52_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
	jule::Ptr<_2088d0463_Match> _74030_m;
};
static void __jule_anon_21a830d52_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a830d52_ctx>().dealloc(); }
inline void __jule_anon_21a830d52(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21a8a4c3e_ctx{
	jule::Ptr<_2171d6b29_scopeCoder> _self_;
	jule::Ptr<_208814dae_AnonFnExpr> _111034_m;
};
static void __jule_anon_21a8a4c3e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21a8a4c3e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_21a8a4c3e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20894d7de_Var> _111667_v);
struct __jule_anon_21ac32066_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac32066_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac32066_ctx>().dealloc(); }
inline void __jule_anon_21ac32066(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _82938_pkg);
struct __jule_anon_21ac46a92_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
	jule::Ptr<_20894d7de_Var> _91424_v;
};
static void __jule_anon_21ac46a92_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac46a92_ctx>().dealloc(); }
inline void __jule_anon_21ac46a92(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21ac48b82_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
	jule::Ptr<_20894d7de_Var> _91424_v;
};
static void __jule_anon_21ac48b82_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac48b82_ctx>().dealloc(); }
inline void __jule_anon_21ac48b82(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21ac4b38d_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac4b38d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac4b38d_ctx>().dealloc(); }
inline void __jule_anon_21ac4b38d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21ac4c537_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
	jule::Ptr<_20894d7de_Var> _91424_v;
};
static void __jule_anon_21ac4c537_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac4c537_ctx>().dealloc(); }
inline void __jule_anon_21ac4c537(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_21ac865a4_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac865a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac865a4_ctx>().dealloc(); }
inline void __jule_anon_21ac865a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _117938_pkg);
struct __jule_anon_21ac8c775_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac8c775_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac8c775_ctx>().dealloc(); }
inline void __jule_anon_21ac8c775(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _120231_file);
struct __jule_anon_21ac98a39_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac98a39_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac98a39_ctx>().dealloc(); }
inline void __jule_anon_21ac98a39(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _124138_pkg);
struct __jule_anon_21ac9da72_ctx{
	jule::Ptr<_2172aee66_traitHash> _12747_hash;
};
static void __jule_anon_21ac9da72_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac9da72_ctx>().dealloc(); }
inline void __jule_anon_21ac9da72(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20881e2b4_Fn>* _127836_m);
struct __jule_anon_21aca10c4_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21aca10c4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21aca10c4_ctx>().dealloc(); }
inline void __jule_anon_21aca10c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _129238_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon21ad42473(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon21ad49d4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon218c62560(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20890d040_ImportInfo> _204025_pkg);
struct __jule_anon_2195e2e56_ctx{
	jule::Str _476038_namespace;
};
static void __jule_anon_2195e2e56_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2195e2e56_ctx>().dealloc(); }
inline jule::Bool __jule_anon_2195e2e56(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20890d040_ImportInfo> _476130_imp);
struct __jule_anon_21ac32e24_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac32e24_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac32e24_ctx>().dealloc(); }
inline void __jule_anon_21ac32e24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _83032_file);
struct __jule_anon_21ac87462_ctx{
	jule::Ptr<_2089107b2_Package> *_117938_pkg;
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21ac87462_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21ac87462_ctx>().dealloc(); }
inline void __jule_anon_21ac87462(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _118032_file);
struct __jule_anon_21aca1e82_ctx{
	jule::Ptr<_2172b1a06_ObjectCoder> _self_;
};
static void __jule_anon_21aca1e82_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_21aca1e82_ctx>().dealloc(); }
inline void __jule_anon_21aca1e82(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _129332_file);
jule::Array<jule::Array<jule::Str,2>,5> _220c751b4_HelpMap;
jule::Str _217343ec8_OutDir;
jule::Str _21734436e_OutName;
jule::Str _21734457d_Out;
jule::Uintptr _2390a7665_STDIN;
jule::Uintptr _2390a7995_STDOUT;
jule::Uintptr _2390a7c81_STDERR;
jule::Array<jule::U8,256> _21e42c20d_first;
jule::Array<_21e42c7b3_acceptRange,16> _21e42cb59_acceptRanges;
jule::Array<jule::U8,32> _21e56cbbc__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _21e56d2a5__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_220c58829_RangeTable> _220be1273__L;
jule::Ptr<_220c58829_RangeTable> _220be2186__LU;
jule::Ptr<_220c58829_RangeTable> _220be816a_Letter;
jule::Ptr<_220c58829_RangeTable> _220bee43a_Upper;
jule::Slice<_220c578c2_CaseRange> _220c51987__CaseRanges;
jule::Array<jule::U8,256> _220c51c73__PROPERTIES;
jule::Array<jule::U16,128> _220c53a55_asciiFold;
jule::Slice<_220c573c7_foldPair> _220c53d41_caseOrbit;
jule::Array<jule::Str,4> _21e587753_CppHeaderExts;
jule::Array<jule::Str,3> _21e587841_CppExts;
jule::Array<jule::Str,1> _21e611722_ObjectiveCppExts;
jule::Str _220c6bce3_PathStdlib;
jule::Str _220c6c079_PathExec;
jule::Str _220c6c332_PathWd;
jule::Str _220c6c62e_PathApi;
jule::Str _220c6c8d7_OS;
jule::Str _220c6cb90_Arch;
jule::Str _220c71721_Compiler;
jule::Str _220c72b1d_CompilerPath;
jule::Str _220c72d2c_CppStd;
jule::Bool _220c730c4_Shadowing;
jule::Bool _220c7337c_Transpilation;
jule::Bool _220c73635_Test;
jule::Bool _220c738dd_RC;
jule::Bool _220c73ca6_Safety;
jule::Bool _220c73ee8_Production;
_21ec8689c_floatInfo _21ec86c65_f32info;
_21ec8689c_floatInfo _21ec87062_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _21ec8e982_detailedPowsOfTen;
jule::Slice<jule::I64> _21ec916dc_powtab;
jule::Slice<jule::F64> _21ec9229d_f64pow10;
jule::Slice<jule::F32> _21ec925cd_f32pow10;
jule::Array<jule::U64,20> _21ec957ce_u64pow10;
jule::Slice<_21ec9956e_leftCheat> _21ec9999d_leftCheats;
jule::Array<jule::I32,5> _20823b693_Spaces;
jule::Array<jule::U64,6> _20823b97e_UnaryOps;
jule::Array<jule::U64,18> _20823bcae_BinOps;
jule::Array<jule::U64,2> _20870ad0a_PostfixOps;
jule::Array<jule::U64,11> _20870b0e6_AssignOps;
jule::Array<_2087196ed_kindPair,28> _208719ad8_keywords;
jule::Array<_2087196ed_kindPair,46> _208719e18_basicOps;
jule::I64 _208893ab9_BitSize;
jule::Str _208893d2d_SysInt;
jule::Str _2088940d6_SysUint;
jule::Slice<jule::Str> _2088c4d3c_builtinConstraints;
jule::Ptr<_2089ce661_Type> _208a53350_primNil;
jule::Ptr<_2089ce661_Type> _208a5364c_primVoid;
jule::Ptr<_2089ce661_Type> _208a53905_primAny;
jule::Ptr<_2089ce661_Type> _208a53c02_primStr;
jule::Ptr<_2089ce661_Type> _208a53eaa_primBool;
jule::Ptr<_2089ce661_Type> _208a54263_primUintptr;
jule::Ptr<_2089ce661_Type> _208a5451b_primUint;
jule::Ptr<_2089ce661_Type> _208a548d4_primInt;
jule::Ptr<_2089ce661_Type> _208a54b26_primI8;
jule::Ptr<_2089ce661_Type> _208a54dbd_primI16;
jule::Ptr<_2089ce661_Type> _208a55176_primI32;
jule::Ptr<_2089ce661_Type> _208a5542e_primI64;
jule::Ptr<_2089ce661_Type> _208a556d7_primU8;
jule::Ptr<_2089ce661_Type> _208a55990_primU16;
jule::Ptr<_2089ce661_Type> _208a55c48_primU32;
jule::Ptr<_2089ce661_Type> _208a56232_primU64;
jule::Ptr<_2089ce661_Type> _208a56474_primF32;
jule::Ptr<_2089ce661_Type> _208a56683_primF64;
jule::Ptr<_2093a6dc3_Meta> _2093a4b90_ProgramMeta;
jule::Ptr<_2170b62ab_data> _2170b594d_emptyData;
jule::Bool _2170bb305_Copy;
jule::Bool _2170bb602_Deadcode;
jule::Bool _2170bb8aa_Append;
jule::Bool _2170bbba7_Math;
jule::Bool _2170bbe60_Access;
jule::Bool _2170bc218_Inline;
jule::Bool _2170bc4c1_Ptr;
jule::Bool _2170bc889_Cond;
jule::Bool _2170bcacb_Str;
jule::Bool _2170bcd73_Slice;
jule::Bool _2170bd12b_Assign;
jule::Bool _2170bd3d4_Exceptional;
jule::Bool _2170bd68c_Iter;
jule::Bool _2170bd945_Dynamic;
jule::Bool _2170bdbed_Array;
jule::Bool _2170be1d7_Len;
jule::Bool _2170be429_StdStrings;
jule::Bool _2170be638_StdMathCmplx;
jule::Bool _2171d27a1_exprEnabled;
jule::Bool _2171d29b0_scopeEnabled;
jule::Array<jule::I64,12> _2172a3245_mdays;
jule::Str _2171d63ba_assignArgName;
jule::Ptr<_2089ce661_Type> _2172ade76_generalGCPtr;
jule::Slice<_220c578c2_CaseRange> _220c5169b_CaseRanges;










































































































































































inline jule::Bool _21e42c7b3_acceptRange_eq(_21e42c7b3_acceptRange *_self_, _21e42c7b3_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _21e46c46d_LittleEndian_eq(_21e46c46d_LittleEndian *_self_, _21e46c46d_LittleEndian _other_) { return true; }

inline jule::U32 static__21e483132_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__21e483a5b_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _21e48718b_u128_eq(_21e48718b_u128 *_self_, _21e48718b_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _21a6410c4_group_eq(_21a6410c4_group *_self_, _21a6410c4_group _other_) {
	return 
		_2175be4b7_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_21a6415be_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_21a63e017__Map> static__21a63e3e1_make(void) {
	return jule::new_ptr<_21a63e017__Map>(_21a63e017__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_21a6410c4_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _21a63e545_initData(_21a63e017__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _21e57cade_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_21a6410c4_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _21a6410c4_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a65b4c9:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_21e57cced_newEmptyMetadata();
			}
			_iter_next_21a65b4c9:;
			++it;
			_1407_i++;
			goto _iter_begin_21a65b4c9;
		}
		_iter_end_21a65b4c9:;
	};
}



inline jule::U64 _21a63e699_hash(_21a63e017__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _2175dc518_toStr(_14616_k);;
	return _21e48a612_hash(_238cd51b7_StrBytes(_1473_bytes));;
}



inline void _21a63e7ed_rehash(_21a63e017__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_21a63e545_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_21a6410c4_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_21a6410c4_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_21a6410c4_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _21a6410c4_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a65e741:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_21e57cced_newEmptyMetadata();
			}
			_iter_next_21a65e741:;
			++it;
			_1617_i++;
			goto _iter_begin_21a65e741;
		}
		_iter_end_21a65e741:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a65ea82:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a66137a:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_21a66137a;
							};
							{
								(*(_21a63ed5e_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_21a66137a:;
						++it;
						_1678_s++;
						goto _iter_begin_21a66137a;
					}
					_iter_end_21a66137a:;
				};
			}
			_iter_next_21a65ea82:;
			++it;
			_1667_g++;
			goto _iter_begin_21a65ea82;
		}
		_iter_end_21a65ea82:;
	};
}



inline jule::I64 _21a63e952_nextSize(_21a63e017__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _21a63eaa6_lookup(jule::Ptr<_21a63e017__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21e57d1c7_splitHash(_21a63e699_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _21e57d4c4_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _21e57bb76_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _21e57c24d_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_21a66788c:;
			}
			_iter_end_21a66788c:;;
			_2018_matches=_21e57be84_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_21a651128:;
	}
	_iter_end_21a651128:;;
}



inline jule::Bool _21a63ec0a_get(jule::Ptr<_21a63e017__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_21a63eaa6_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _21a63ed5e_set(_21a63e017__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_21a63e7ed_rehash(_self_, _21a63e952_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21e57d1c7_splitHash(_21a63e699_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _21e57d4c4_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _21e57bb76_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _21e57c24d_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_21a670510:;
			}
			_iter_end_21a670510:;;
			_2488_matches=_21e57be84_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _21e57c24d_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=_2457_lo;
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_21a66d93c:;
	}
	_iter_end_21a66d93c:;;
}



inline jule::Bool _21a63eeb3_del(jule::Ptr<_21a63e017__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21e57d1c7_splitHash(_21a63e699_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _21e57d4c4_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _21e57bb76_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _21e57c24d_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_21e57be84_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*_self_.alloc)._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_21a678051:;
			}
			_iter_end_21a678051:;;
			_2838_matches=_21e57be84_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_21a6770d8:;
	}
	_iter_end_21a6770d8:;;
}



inline void _21a640117_clear(jule::Ptr<_21a63e017__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a67e5eb:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a680124:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_21a680124:;
						++it;
						_3298_j++;
						goto _iter_begin_21a680124;
					}
					_iter_end_21a680124:;
				};
			}
			_iter_next_21a67e5eb:;
			++it;
			_3287_i++;
			goto _iter_begin_21a67e5eb;
		}
		_iter_end_21a67e5eb:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a66ea81:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_21a6410c4_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21a6826dc:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_21a6826dc:;
							++it;
							_3389_j++;
							goto _iter_begin_21a6826dc;
						}
						_iter_end_21a6826dc:;
					};
				};
			}
			_iter_next_21a66ea81:;
			++it;
			_3357_i++;
			goto _iter_begin_21a66ea81;
		}
		_iter_end_21a66ea81:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I64 _21a64026b_len(jule::Ptr<_21a63e017__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I64 _21a6403c0_cap(_21a63e017__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _21a649792_mapIterator _21a640524_iterator(jule::Ptr<_21a63e017__Map> _self_) {
	_21a649792_mapIterator _3607_iterator = _21a649792_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_21a6410c4_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_21a649b38_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_21a686ba8__Map> static__21a686ed8_make(void) {
	return jule::new_ptr<_21a686ba8__Map>(_21a686ba8__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_21a688a56_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _21a68713c_initData(_21a686ba8__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _21e57cade_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_21a688a56_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _21a688a56_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_208822372_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208822372_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a6a20be:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_21e57cced_newEmptyMetadata();
			}
			_iter_next_21a6a20be:;
			++it;
			_1407_i++;
			goto _iter_begin_21a6a20be;
		}
		_iter_end_21a6a20be:;
	};
}



inline jule::U64 _21a687291_hash(_21a686ba8__Map* _self_, jule::Ptr<_208822372_FnIns> _14616_k) {
	jule::Str _1473_bytes = _20861cce9_toStr(_14616_k);;
	return _21e48a612_hash(_238cd51b7_StrBytes(_1473_bytes));;
}



inline void _21a6873e5_rehash(_21a686ba8__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_21a68713c_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_21a688a56_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_21a688a56_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_21a688a56_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _21a688a56_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_208822372_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208822372_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a6a5336:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_21e57cced_newEmptyMetadata();
			}
			_iter_next_21a6a5336:;
			++it;
			_1617_i++;
			goto _iter_begin_21a6a5336;
		}
		_iter_end_21a6a5336:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a6a5677:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a6a6e70:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_21a6a6e70;
							};
							{
								(*(_21a687956_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_21a6a6e70:;
						++it;
						_1678_s++;
						goto _iter_begin_21a6a6e70;
					}
					_iter_end_21a6a6e70:;
				};
			}
			_iter_next_21a6a5677:;
			++it;
			_1667_g++;
			goto _iter_begin_21a6a5677;
		}
		_iter_end_21a6a5677:;
	};
}



inline jule::I64 _21a687549_nextSize(_21a686ba8__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _21a68769d_lookup(jule::Ptr<_21a686ba8__Map> _self_, jule::Ptr<_208822372_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21e57d1c7_splitHash(_21a687291_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _21e57d4c4_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _21e57bb76_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _21e57c24d_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_21a6ad482:;
			}
			_iter_end_21a6ad482:;;
			_2018_matches=_21e57be84_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_21a696c1d:;
	}
	_iter_end_21a696c1d:;;
}



inline jule::Slice<jule::Uintptr> _21a687802_get(jule::Ptr<_21a686ba8__Map> _self_, jule::Ptr<_208822372_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_21a68769d_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _21a687956_set(_21a686ba8__Map* _self_, jule::Ptr<_208822372_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_21a6873e5_rehash(_self_, _21a687549_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21e57d1c7_splitHash(_21a687291_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _21e57d4c4_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _21e57bb76_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _21e57c24d_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_21a6b6105:;
			}
			_iter_end_21a6b6105:;;
			_2488_matches=_21e57be84_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _21e57c24d_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=_2457_lo;
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_21a6b4532:;
	}
	_iter_end_21a6b4532:;;
}



inline jule::Bool _21a687aaa_del(jule::Ptr<_21a686ba8__Map> _self_, jule::Ptr<_208822372_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21e57d1c7_splitHash(_21a687291_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _21e57d4c4_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _21e57bb76_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _21e57c24d_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_21e57be84_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Ptr<_208822372_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*_self_.alloc)._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_21a6bdb46:;
			}
			_iter_end_21a6bdb46:;;
			_2838_matches=_21e57be84_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_21a6bcbcd:;
	}
	_iter_end_21a6bcbcd:;;
}



inline void _21a687c0e_clear(jule::Ptr<_21a686ba8__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a6c51e1:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a6c5c19:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_21a6c5c19:;
						++it;
						_3298_j++;
						goto _iter_begin_21a6c5c19;
					}
					_iter_end_21a6c5c19:;
				};
			}
			_iter_next_21a6c51e1:;
			++it;
			_3287_i++;
			goto _iter_begin_21a6c51e1;
		}
		_iter_end_21a6c51e1:;
	};
	jule::Ptr<_208822372_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a6b5676:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_21a688a56_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21a6c82d2:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_21a6c82d2:;
							++it;
							_3389_j++;
							goto _iter_begin_21a6c82d2;
						}
						_iter_end_21a6c82d2:;
					};
				};
			}
			_iter_next_21a6b5676:;
			++it;
			_3357_i++;
			goto _iter_begin_21a6b5676;
		}
		_iter_end_21a6b5676:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I64 _21a687d63_len(jule::Ptr<_21a686ba8__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I64 _21a687eb7_cap(_21a686ba8__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _21a690343_mapIterator _21a68811b_iterator(jule::Ptr<_21a686ba8__Map> _self_) {
	_21a690343_mapIterator _3607_iterator = _21a690343_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_21a688a56_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_21a6906d9_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _21a649b38_init(_21a649792_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_21a6410c4_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_21a64026b_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_238b89bc6_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _21a649c8c_next(_21a649792_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_21a651d82;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_21a651d82:;
			}
			_iter_end_21a651d82:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_21a64d961:;
	}
	_iter_end_21a64d961:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _21a6906d9_init(_21a690343_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_21a688a56_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_21a687d63_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_238b89bc6_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_208822372_FnIns__jule_tuple_psuintptr _21a69083d_next(_21a690343_mapIterator* _self_) {
	__jule_tuple_px_208822372_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_21a697977;
					};
					jule::Ptr<_208822372_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_21a697977:;
			}
			_iter_end_21a697977:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_21a694556:;
	}
	_iter_end_21a694556:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}











inline _21e64c5b5_Builder static__21e64ce12_New(jule::I64 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _21e64c5b5_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I64> _21e64d253_Write(_21e64c5b5_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I64 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21e64d594_WriteStr(_21e64c5b5_Builder* _self_, jule::Str _4124_s) {
	jule::I64 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _21e64d84c_WriteByte(_21e64c5b5_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21e64db8d_WriteRune(_21e64c5b5_Builder* _self_, jule::I32 _5525_r) {
	jule::I64 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_21e42e881_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Str _21e64de24_Str(_21e64c5b5_Builder* _self_) {
	jule::Str _687_s = _238cd5717_StrFromBytes((*(_self_))._field_buf);;
	_21e64e122_Clear(_self_);
	return _687_s;;
}



inline void _21e64e122_Clear(_21e64c5b5_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _21e64e3a8_Len(_21e64c5b5_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _21e64e8c5_Buf(_21e64c5b5_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _21e64eb7d_SetBuf(_21e64c5b5_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _220c573c7_foldPair_eq(_220c573c7_foldPair *_self_, _220c573c7_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _220c578c2_CaseRange_eq(_220c578c2_CaseRange *_self_, _220c578c2_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_21761ea89_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _220c57d78_Range16_eq(_220c57d78_Range16 *_self_, _220c57d78_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _220c583a6_Range32_eq(_220c583a6_Range32 *_self_, _220c583a6_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}













inline jule::U8 _220c66edb_index(_220c66a24_lazyBuff* _self_, jule::I64 _5421_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5421_i];;
	};
	return (*(_self_))._field_path[_5421_i];;
}



inline void _220c67294_append(_220c66a24_lazyBuff* _self_, jule::U8 _6122_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6122_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6122_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _220c6752a_string(_220c66a24_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + jule::Str::unsafe_from_bytes((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _21e8109ed_File_eq(_21e8109ed_File *_self_, _21e8109ed_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_21e8109ed_File>> static__21e809d6b_Open(jule::Str _1517_path, jule::I64 _1528_flag, jule::I64 _1541_mode) {
	jule::Slice<jule::U8> _163_s = _238cbd711_StrToBytes(_1517_path);;
	jule::I64 _173_handle = _2390a8eb3_Open((&(_163_s[0LL])), _1528_flag, _1541_mode);;
	if ((_173_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21e8109ed_File>>{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_21e8109ed_File>>{.result=static__21e8114d2_New(static_cast<jule::Uintptr>(_173_handle))};;
}



inline jule::VoidExceptional static__21e80a07a_Remove(jule::Str _2519_path) {
	jule::Slice<jule::U8> _263_s = _238cbd711_StrToBytes(_2519_path);;
	if ((_2390aac40_Unlink((&(_263_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21e80a50e_Write(_21e8109ed_File* _self_, jule::Slice<jule::U8> _3821_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_3821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21e4332be_handleRW(&(_3821_buf));
	__jule_func_result=_2390c584d_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_3821_buf[0LL])), static_cast<jule::U64>(_3821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21e80a850_Read(_21e8109ed_File* _self_, jule::Slice<jule::U8> _5724_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5724_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21e4332be_handleRW(&(_5724_buf));
	__jule_func_result=_2390c50bc_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5724_buf[0LL])), static_cast<jule::U64>(_5724_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_21e8109ed_File> static__21e8114d2_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_21e8109ed_File>(_21e8109ed_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_21e8109ed_File>> static__21e81179b_Create(jule::Str _7819_path) {
	return static__21e809d6b_Open(_7819_path, static_cast<jule::I64>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__21e811a65_Read(jule::Str _8517_path) {
	_21e88b804_Stat _863_s = ({
		auto except = static__21e80ce3a_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _21e88b804_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21e88be97_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _917_sz = static_cast<jule::I64>(_21e88c22d_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I64>(_21e88c22d_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_21e8109ed_File> _1047_f = ({
		auto except = static__21e809d6b_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_21e8109ed_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I64 _1084_rn = ({
				auto except = _21e80a850_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_2182b8ee6;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_2182b8ee6:;
	}
	_iter_end_2182b8ee6:;;
	({
		auto except = _21e812714_Close(_1047_f.ptr());
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__21e811e0b_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I64 _12443_perm) {
	jule::Ptr<_21e8109ed_File> _1257_f = ({
		auto except = static__21e809d6b_Open(_12418_path, static_cast<jule::I64>(577LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_21e8109ed_File>(nullptr);});
	});;
	jule::I64 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _21e80a50e_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_2182bdeeb:;
	}
	_iter_end_2182bdeeb:;;
	return _21e812714_Close(_1257_f.ptr());
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _21e812714_Close(_21e8109ed_File* _self_) {
	if ((_2390c5496_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _21e88968c_cmdAttrs_eq(_21e88968c_cmdAttrs *_self_, _21e88968c_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _21e88b804_Stat_eq(_21e88b804_Stat *_self_, _21e88b804_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<_21e88b804_Stat> static__21e80ce3a_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_21e88b804_Stat>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _147_handle = (struct stat){};;
	jule::Slice<jule::U8> _153_s = _238cbd711_StrToBytes(_1015_path);;
	jule::I64 _163_code = _2390a8a84_Stat((&(_153_s[0LL])), (&(_147_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_21e88b804_Stat>{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	_21e88b804_Stat _207_stat = _21e88b804_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U64>(_147_handle.st_size);
	if (((_147_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_147_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<_21e88b804_Stat>{.result=_207_stat};;
}



inline jule::Bool _21e88bc11_IsDir(_21e88b804_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _21e88be97_IsReg(_21e88b804_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _21e88c22d_Size(_21e88b804_Stat* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _21e65b904_Log_eq(_21e65b904_Log *_self_, _21e65b904_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _21ec8689c_floatInfo_eq(_21ec8689c_floatInfo *_self_, _21ec8689c_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _21ec9956e_leftCheat_eq(_21ec9956e_leftCheat *_self_, _21ec9956e_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _21ec9a086_decimal_eq(_21ec9a086_decimal *_self_, _21ec9a086_decimal _other_) {
	return 
		_2185a01cd_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _21ec91a50_set(_21ec9a086_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_218787a7a:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_218787ae1:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_218787b9b:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_2187896c5:;
					{
						goto _iter_next_218788e55;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_21878976e:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_218788e55;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_2187897d5:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_218788e55;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_218788e55;
					}
				}
				_match_end_218789593:;
			};
			goto _iter_end_218788e55;
		}
	_iter_next_218788e55:;
	}
	_iter_end_218788e55:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_21ec8c1aa_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_2187905aa;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_2187905aa:;
		}
		_iter_end_2187905aa:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _21ec91d91_floatBits(_21ec9a086_decimal* _self_, _21ec8689c_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_21879ce58;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_21879cd37;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_21879ce58;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _21ec916dc_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_21ec916dc_powtab[(*(_self_))._field_dp];
			};
			_21ec9a729_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_218795703:;
	}
	_iter_end_218795703:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _21ec916dc_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_21ec916dc_powtab[(-((*(_self_))._field_dp))];
			};
			_21ec9a729_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_218793e2c:;
	}
	_iter_end_218793e2c:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_21ec9a729_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= (({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
		goto _julec_label_21879cd37;
	};
	_21ec9a729_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_21ec9b2c9_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= (({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			goto _julec_label_21879cd37;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_21879ce58;
	_julec_label_21879cd37:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_21879ce58:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & (({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _21ec9a471_assign(_21ec9a086_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_2187a13bd:;
	}
	_iter_end_2187a13bd:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_2187a1698:;
	}
	_iter_end_2187a1698:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_21ec9b8d4_trim(_self_);
}



inline void _21ec9a729_shift(_21ec9a086_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_2187a3c0b:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_2187a3ca5:;
			{
				while ((_17625_k > 60LL)) {
					{
						_21ec9c42e_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_2187a4855:;
				}
				_iter_end_2187a4855:;;
				_21ec9c42e_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_2187a3d1b:;
			{
				while ((_17625_k < -60LL)) {
					{
						_21ec9bbc0_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_2187a479a:;
				}
				_iter_end_2187a479a:;;
				_21ec9bbc0_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_2187a3a96:;
	};
}



inline void _21ec9a9d2_roundDown(_21ec9a086_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_21ec9b8d4_trim(_self_);
}



inline void _21ec9ac8a_roundUp(_21ec9a086_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_2187a7b22:;
	}
	_iter_end_2187a7b22:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _21ec9b043_round(_21ec9a086_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_21ec9c7a3_shouldRoundUp(_self_, _23221_nd)) {
		_21ec9ac8a_roundUp(_self_, _23221_nd);
	} else {
		_21ec9a9d2_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _21ec9b2c9_roundedInteger(_21ec9a086_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_2187aa44e:;
	}
	_iter_end_2187aa44e:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_2187ac352:;
	}
	_iter_end_2187ac352:;;
	if (_21ec9c7a3_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _220c98acd_AnsiEscape_eq(_220c98acd_AnsiEscape *_self_, _220c98acd_AnsiEscape _other_) { return true; }

inline void static__220c7743b_Reset(void) {
	jule::print(_2175dc518_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__220c98cba_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_2175dc518_toStr(_1918_escape));
	jule::print(_2175dc518_toStr(_1931_text));
	static__220c7743b_Reset();
}








inline jule::Bool _21eca071d_Logger_eq(_21eca071d_Logger *_self_, _21eca071d_Logger _other_) { return true; }

inline void static__21eca09c6_LogFlat(_21e65b904_Log* _1421_l) {
	jule::println(_2175dc518_toStr((*(_1421_l))._field_Text));
}



inline void static__21eca0be6_LogError(_21e65b904_Log* _1922_l) {
	jule::print(_2175dc518_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_2175dc518_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_2175dc518_toStr((*(_1922_l))._field_Text));
	static__220c7743b_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_2175dc518_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_2175dc518_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_2175dc518_toStr(jule::Str::lit(":", 1)));
		jule::print(_2175dc518_toStr(_21ec9e60c_Itoa((*(_1922_l))._field_Row)));
		jule::print(_2175dc518_toStr(jule::Str::lit(":", 1)));
		jule::print(_2175dc518_toStr(_21ec9e60c_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _220c649ab_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_220c632a1_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_2175dc518_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _21ec9e60c_Itoa((*(_1922_l))._field_Row);;
		jule::print(_2175dc518_toStr(_434_row));
		jule::print(_2175dc518_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_2175dc518_toStr(_388_line));
		jule::print(_2175dc518_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_2175dc518_toStr(_220c5bc8e_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_2175dc518_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_2175dc518_toStr(_220c5bc8e_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_2175dc518_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_2175dc518_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_2175dc518_toStr(_220c5bc8e_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_2175dc518_toStr(jule::Str::lit(" | ", 3)));
			static__220c98cba_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_2175dc518_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_2175dc518_toStr(jule::Str::lit("\n", 1)));
}



inline void static__21eca0e27_Log(_21e65b904_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_2187ce918:;
			{
				static__21eca09c6_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_2187cebe3:;
			{
				static__21eca0be6_LogError(_6417_l);
			}
		}
		_match_end_2187ceae4:;
	};
}



inline void static__21eca1158_PrintLogs(jule::Slice<_21e65b904_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2187cecae:;
		if (it != expr_end) {
			_21e65b904_Log *_7510_l = it;
			{
				static__21eca0e27_Log(_7510_l);
			}
			_iter_next_2187cecae:;
			++it;
			goto _iter_begin_2187cecae;
		}
		_iter_end_2187cecae:;
	};
	jule::print(_2175dc518_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_2175dc518_toStr(_21ec9e60c_Itoa((*(_7423_logs)).len())));
	jule::println(_2175dc518_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _208711827_Token_eq(_208711827_Token *_self_, _208711827_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _208711bce_Prec(_208711827_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_2188392be:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_218839896:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_21883990c:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_218839335:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_21883939b:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_218838d3a:;
			{
				return 0LLU;;
			}
		}
		_match_end_21883918c:;
	};
}







inline jule::Ptr<_2087173cc_Fileset> static__208717762_New(jule::Str _2016_path) {
	return jule::new_ptr<_2087173cc_Fileset>(_2087173cc_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr)});;
}



inline void _208717cc3_FillMut(_2087173cc_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _208718059_Dir(_2087173cc_Fileset* _self_) {
	return _220c68ebb_Dir((*(_self_))._field_Path);;
}



inline jule::Str _2087182e0_Name(_2087173cc_Fileset* _self_) {
	return _220c68ae2_Base((*(_self_))._field_Path);;
}



inline jule::Str _2087188b7_GetRow(_2087173cc_Fileset* _self_, jule::I64 _5718_row) {
	jule::I64 _587_n = 0LL;;
	jule::I64 _597_lineStart = 0LL;;
	jule::I64 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_218840528;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _238cd5717_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_218840528:;
	}
	_iter_end_218840528:;;
	return jule::Str();;
}








inline jule::Bool _2087196ed_kindPair_eq(_2087196ed_kindPair *_self_, _2087196ed_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _208720c54_pushErr(_20872068d_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_21e65b904_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20871a457_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _2087212b5_lex(_20872068d_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_2087234d7_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_208711827_Token> _4638_token = _2087249c2_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_208711827_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_218875c34:;
	}
	_iter_end_218875c34:;;
}



inline jule::Str _208721606_id(_20872068d_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I64 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_208715056_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I64 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_208715793_IsDecimal(_4824_pr)))) && (!(_208715056_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _238cd5717_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_21887940d:;
	}
	_iter_end_21887940d:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _238cd5717_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _20872188c_resume(_20872068d_lex* _self_) {
	jule::I64 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_data[_4977_i]);;
			if (_208714a5b_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_21887d247:;
						{
							_2087234d7_newLine(_self_);
						}
					}
					else {
						_case_begin_21887cb09:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_21887cd90:;
				};
				goto _iter_next_21887b850;
			};
			jule::I64 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_21887c6b9;
					};
				}
			_iter_next_21887c6b9:;
			}
			_iter_end_21887c6b9:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_21887b850:;
	}
	_iter_end_21887b850:;;
	return nullptr;;
}



inline void _208721b45_lexLineComment(_20872068d_lex* _self_, jule::Ptr<_208711827_Token>* _52235_token) {
	jule::I64 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_2188808a9;
			};
		}
	_iter_next_2188808a9:;
	}
	_iter_end_2188808a9:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52235_token))))._field_Kind=_238cd5717_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _208721ded_lexRangeComment(_20872068d_lex* _self_, jule::Ptr<_208711827_Token>* _53736_token) {
	jule::I64 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_218883e62;
			};
			if ((_5414_r == '\n')) {
				_2087234d7_newLine(_self_);
				goto _iter_next_218883e62;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53736_token))))._field_Kind=_238cd5717_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_218883e62:;
	}
	_iter_end_218883e62:;;
	_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _20872223e_num(_20872068d_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_20871dea5_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_21888aa6d;
	};
	__jule_func_result=_20871dcc9_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_21888aa6d;
	};
	__jule_func_result=_20871c569_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_21888aa6d;
	};
	__jule_func_result=_20871c2a0_commonNum(_56520_txt);
	_julec_label_21888aa6d:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _208722580_escapeSeq(_20872068d_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_21888e731;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_21888c4ed:;
			{
				(*(_self_))._field_pos+=2LL;
				return _238cd5717_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_21888c564:;
			{
				_5887_seq=_20871e5c1_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_21888c1ce:;
			{
				_5887_seq=_20871e88a_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_21888c245:;
			{
				_5887_seq=_20871eb54_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_21888b909:;
			{
				_5887_seq=_20871ee1d_byteEscape(_58726_txt);
			}
		}
		_match_end_21888c069:;
	};
	_julec_label_21888e731:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _20872297b_getRune(_20872068d_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _208722580_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I64 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _208722cbc_lexRune(_20872068d_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_21e64c5b5_Builder _6277_run = static__21e64ce12_New(8LL);;
	({
		auto except = _21e64d84c_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I64 _6307_n = 0LL;;
	jule::I64 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_2188934b0;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_2087234d7_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _20872297b_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _21e64d594_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_21e430288_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_2188934b0;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_2188934b0:;
	}
	_iter_end_2188934b0:;;
	if ((_6307_n == 0LL)) {
		_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _21e64de24_Str(&_6277_run);;
}



inline jule::Str _208723053_lexStr(_20872068d_lex* _self_) {
	_21e64c5b5_Builder _6677_s = static__21e64ce12_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _21e64d84c_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_2188992a7;
			};
			if ((_6754_ch == '\n')) {
				_2087234d7_newLine(_self_);
				if ((!(_6703_raw))) {
					_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _20872297b_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _21e64d594_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_21e430288_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_2188992a7;
			};
		}
	_iter_next_2188992a7:;
	}
	_iter_end_2188992a7:;;
	return _21e64de24_Str(&_6677_s);;
}



inline void _2087234d7_newLine(_20872068d_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _208723a48_isOp(_20872068d_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U64 _70845_id, jule::Ptr<_208711827_Token>* _70858_t) {
	if ((!(_20871a820_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _208723e44_lexBasicOps(_20872068d_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_208711827_Token>* _71845_tok) {
	{
		auto expr = &(_208719e18_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2188a07a8:;
		if (it != expr_end) {
			_2087196ed_kindPair *_71910_pair = it;
			{
				if (_208723a48_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_2188a07a8:;
			++it;
			goto _iter_begin_2188a07a8;
		}
		_iter_end_2188a07a8:;
	};
	return false;;
}



inline jule::Bool _208724340_lexId(_20872068d_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_208711827_Token>* _72740_t) {
	jule::Str _7283_lex = _208721606_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _20872473b_lexNum(_20872068d_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_208711827_Token>* _73741_t) {
	jule::Str _7383_lex = _20872223e_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_208711827_Token> _2087249c2_token(_20872068d_lex* _self_) {
	jule::Ptr<_208711827_Token> _7497_t = jule::new_ptr<_208711827_Token>(_208711827_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _20872188c_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_20872473b_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_2188a66d2:;
			{
				goto _match_end_2188a60d8;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_2188a644b:;
			{
				(*_7497_t.alloc)._field_Kind=_208722cbc_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_2188a64b2:;
			{
				(*_7497_t.alloc)._field_Kind=_208723053_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7497_t;;
			}
		}
		else if (_20871a820_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_2188a6528:;
			{
				_208721b45_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_20871a820_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_2188a658e:;
			{
				_208721ded_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_208723e44_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_2188a6605:;
			{
				goto _match_end_2188a60d8;
			}
		}
		else if (_208724340_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_2188a79be:;
			{
				{
					auto expr = &(_208719ad8_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2188ab2db:;
					if (it != expr_end) {
						_2087196ed_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_2188ab2db;
							};
						}
						_iter_next_2188ab2db:;
						++it;
						goto _iter_begin_2188ab2db;
					}
					_iter_end_2188ab2db:;
				};
			}
		}
		else {
			_case_begin_2188a634c:;
			{
				jule::I32 _7934_r;
				jule::I64 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_208720c54_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_2188a60d8:;
	};
	(*(_self_))._field_column+=_21e430288_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _208726342_Node_eq(_208726342_Node *_self_, _208726342_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _208727343_TypeDecl_eq(_208727343_TypeDecl *_self_, _208727343_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _2087280e1_NamespaceTypeDecl_eq(_2087280e1_NamespaceTypeDecl *_self_, _2087280e1_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _2087283dd_SptrTypeDecl_eq(_2087283dd_SptrTypeDecl *_self_, _2087283dd_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _208728773_SlcTypeDecl_eq(_208728773_SlcTypeDecl *_self_, _208728773_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _208728d6c_PtrTypeDecl_eq(_208728d6c_PtrTypeDecl *_self_, _208728d6c_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _208729213_IsUnsafe(_208728d6c_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _20872960e_ArrTypeDecl_eq(_20872960e_ArrTypeDecl *_self_, _20872960e_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _2087299a5_AutoSized(_20872960e_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _208729d5c_MapTypeDecl_eq(_208729d5c_MapTypeDecl *_self_, _208729d5c_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _20872b677_Expr_eq(_20872b677_Expr *_self_, _20872b677_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _20872b941_RangeExpr_eq(_20872b941_RangeExpr *_self_, _20872b941_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _20872c04b_UseExpr_eq(_20872c04b_UseExpr *_self_, _20872c04b_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _20872c612_LitExpr_eq(_20872c612_LitExpr *_self_, _20872c612_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _20872c9db_UnsafeExpr_eq(_20872c9db_UnsafeExpr *_self_, _20872c9db_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _20872ce92_IdentExpr_eq(_20872ce92_IdentExpr *_self_, _20872ce92_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _20872d734_UnaryExpr_eq(_20872d734_UnaryExpr *_self_, _20872d734_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _20872db0d_VariadicExpr_eq(_20872db0d_VariadicExpr *_self_, _20872db0d_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _20872ded7_CastExpr_eq(_20872ded7_CastExpr *_self_, _20872ded7_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _20872e3b1_NamespaceExpr_eq(_20872e3b1_NamespaceExpr *_self_, _20872e3b1_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _20872e78a_SubIdentExpr_eq(_20872e78a_SubIdentExpr *_self_, _20872e78a_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _20872ec41_BinaryExpr_eq(_20872ec41_BinaryExpr *_self_, _20872ec41_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _208730758_Unhandled(_2087303a1_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _2087309de_Ignored(_2087303a1_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}








inline jule::Bool _208730d96_FieldExprPair_eq(_208730d96_FieldExprPair *_self_, _208730d96_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _2087324a2_KeyValPair_eq(_2087324a2_KeyValPair *_self_, _2087324a2_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _20873363a_IndexingExpr_eq(_20873363a_IndexingExpr *_self_, _20873363a_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _208733c9a_SlicingExpr_eq(_208733c9a_SlicingExpr *_self_, _208733c9a_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _20873454d_GenericDecl_eq(_20873454d_GenericDecl *_self_, _20873454d_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _208734927_LabelSt_eq(_208734927_LabelSt *_self_, _208734927_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _208734d01_GotoSt_eq(_208734d01_GotoSt *_self_, _208734d01_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _2087350ed_FallSt_eq(_2087350ed_FallSt *_self_, _2087350ed_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _20873575d_AssignLeft_eq(_20873575d_AssignLeft *_self_, _20873575d_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _208736cd1_Stmt_eq(_208736cd1_Stmt *_self_, _208736cd1_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _208737b7d_ParamDecl_eq(_208737b7d_ParamDecl *_self_, _208737b7d_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _208738035_IsSelf(_208737b7d_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _208739476_IsAnon(_2087390d0_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _20873a664_RetSt_eq(_20873a664_RetSt *_self_, _20873a664_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _20873add4_Iter_eq(_20873add4_Iter *_self_, _20873add4_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _20873b27a_IsInf(_20873add4_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _20873b70e_WhileKind_eq(_20873b70e_WhileKind *_self_, _20873b70e_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _20873baa5_IsWhileNext(_20873b70e_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _20873c116_RangeKind_eq(_20873c116_RangeKind *_self_, _20873c116_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _20873c4e0_BreakSt_eq(_20873c4e0_BreakSt *_self_, _20873c4e0_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _20873c8b9_ContSt_eq(_20873c8b9_ContSt *_self_, _20873c8b9_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _20873cd70_If_eq(_20873cd70_If *_self_, _20873cd70_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _20873d249_Else_eq(_20873d249_Else *_self_, _20873d249_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _20873e019_TypeAliasDecl_eq(_20873e019_TypeAliasDecl *_self_, _20873e019_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Strict == _self_->_field_Strict) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _20874036c_UseDecl_eq(_20874036c_UseDecl *_self_, _20874036c_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _208740823_EnumItemDecl_eq(_208740823_EnumItemDecl *_self_, _208740823_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _208741c0e_TypeEnumItemDecl_eq(_208741c0e_TypeEnumItemDecl *_self_, _208741c0e_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _208742638_FieldDecl_eq(_208742638_FieldDecl *_self_, _208742638_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _208799195_Const_eq(_208799195_Const *_self_, _208799195_Const _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_208799195_Const> static__208805bc4_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_208799195_Const>(_208799195_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_208799195_Const> static__208805e49_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_208799195_Const>(_208799195_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_208799195_Const> static__208806213_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_208799195_Const>(_208799195_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_208799195_Const> static__2088064cc_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_208799195_Const>(_208799195_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_208799195_Const> static__208806796_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_208799195_Const>(_208799195_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_208799195_Const> static__2088069a5_NewNil(void) {
	return jule::new_ptr<_208799195_Const>(_208799195_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _208807115_ReadI64(_208799195_Const* _self_) {
	if ((!(_208809711_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _20880739b_ReadU64(_208799195_Const* _self_) {
	if ((!(_208809997_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _208807632_ReadBool(_208799195_Const* _self_) {
	if ((!(_208809c2d_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _2088078b8_ReadStr(_208799195_Const* _self_) {
	if ((!(_208809eb4_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _208807b4e_ReadF64(_208799195_Const* _self_) {
	if ((!(_20880a24a_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _208807dd5_AsI64(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_218917ac8:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_2189189ec:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_218918a63:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_218918579:;
			{
				return 0LL;;
			}
		}
		_match_end_218918513:;
	};
}



inline jule::U64 _20880816b_AsU64(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_218919e0a:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_218918722:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_218918788:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_2189186ab:;
			{
				return 0LLU;;
			}
		}
		_match_end_218918645:;
	};
}



inline jule::F64 _208808402_AsF64(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_21891bb98:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_21891a2d4:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_21891a34a:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_21891a26d:;
			{
				return 0LL;;
			}
		}
		_match_end_21891a207:;
	};
}



inline void _2088086aa_SetI64(_208799195_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _208808963_SetU64(_208799195_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _208808c1b_SetBool(_208799195_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _208808ec4_SetStr(_208799195_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _20880927c_SetF64(_208799195_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _208809711_IsI64(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2189202c8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_21892054d:;
			{
				return false;;
			}
		}
		_match_end_2189204d7:;
	};
}



inline jule::Bool _208809997_IsU64(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_218920729:;
			{
				return true;;
			}
		}
		else {
			_case_begin_218920d89:;
			{
				return false;;
			}
		}
		_match_end_218920d23:;
	};
}



inline jule::Bool _208809c2d_IsBool(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_21892140b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_218921791:;
			{
				return false;;
			}
		}
		_match_end_21892172a:;
	};
}



inline jule::Bool _208809eb4_IsStr(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_218921d46:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2189221cb:;
			{
				return false;;
			}
		}
		_match_end_218922165:;
	};
}



inline jule::Bool _20880a24a_IsF64(_208799195_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_218922781:;
			{
				return true;;
			}
		}
		else {
			_case_begin_218922b16:;
			{
				return false;;
			}
		}
		_match_end_218922aa0:;
	};
}



inline jule::Bool _20880a4d1_IsNil(_208799195_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _20880ab63_And(_208799195_Const* _self_, _208799195_Const _23615_x) {
	{
		
		if ((_208809c2d_IsBool(_self_) && _208809c2d_IsBool(&_23615_x))) {
			_case_begin_218926ee4:;
			{
				return (_208807632_ReadBool(_self_) && _208807632_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_218926e7d:;
			{
				return false;;
			}
		}
		_match_end_218926a60:;
	};
}



inline jule::Bool _20880aea4_Or(_208799195_Const* _self_, _208799195_Const _24714_x) {
	{
		
		if ((_208809c2d_IsBool(_self_) && _208809c2d_IsBool(&_24714_x))) {
			_case_begin_2189282d1:;
			{
				return (_208807632_ReadBool(_self_) || _208807632_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_218927995:;
			{
				return false;;
			}
		}
		_match_end_218927885:;
	};
}



inline jule::Bool _20880b2e5_Eq(_208799195_Const* _self_, _208799195_Const _25814_x) {
	{
		
		if (_20880a4d1_IsNil(_self_)) {
			_case_begin_218929623:;
			{
				return _20880a4d1_IsNil(&_25814_x);;
			}
		}
		else if (_208809c2d_IsBool(_self_)) {
			_case_begin_218929689:;
			{
				return (_208809c2d_IsBool(&_25814_x) && (_208807632_ReadBool(_self_) == _208807632_ReadBool(&_25814_x)));;
			}
		}
		else if (_208809eb4_IsStr(_self_)) {
			_case_begin_218929700:;
			{
				return (_208809eb4_IsStr(&_25814_x) && (_2088078b8_ReadStr(_self_) == _2088078b8_ReadStr(&_25814_x)));;
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_218929766:;
			{
				return (_208807115_ReadI64(_self_) == _208807dd5_AsI64(&_25814_x));;
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_2189297dd:;
			{
				return (_20880739b_ReadU64(_self_) == _20880816b_AsU64(&_25814_x));;
			}
		}
		else if (_20880a24a_IsF64(_self_)) {
			_case_begin_218929964:;
			{
				return (_208807b4e_ReadF64(_self_) == _208808402_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_218928c60:;
			{
				return false;;
			}
		}
		_match_end_218928b50:;
	};
}



inline jule::Bool _20880b636_Lt(_208799195_Const* _self_, _208799195_Const _28514_x) {
	{
		
		if (_208809eb4_IsStr(_self_)) {
			_case_begin_21892d319:;
			{
				return (_208809eb4_IsStr(&_28514_x) && (_2088078b8_ReadStr(_self_) < _2088078b8_ReadStr(&_28514_x)));;
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_21892d380:;
			{
				return (_208807115_ReadI64(_self_) < _208807dd5_AsI64(&_28514_x));;
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_21892d3e6:;
			{
				return (_20880739b_ReadU64(_self_) < _20880816b_AsU64(&_28514_x));;
			}
		}
		else if (_20880a24a_IsF64(_self_)) {
			_case_begin_21892d45c:;
			{
				return (_208807b4e_ReadF64(_self_) < _208808402_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_21892a05d:;
			{
				return false;;
			}
		}
		_match_end_218929e4d:;
	};
}



inline jule::Bool _20880b977_LtEq(_208799195_Const* _self_, _208799195_Const _30816_x) {
	{
		
		if (_208809eb4_IsStr(_self_)) {
			_case_begin_218930eed:;
			{
				return (_208809eb4_IsStr(&_30816_x) && (_2088078b8_ReadStr(_self_) <= _2088078b8_ReadStr(&_30816_x)));;
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_218931064:;
			{
				return (_208807115_ReadI64(_self_) <= _208807dd5_AsI64(&_30816_x));;
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_2189310ca:;
			{
				return (_20880739b_ReadU64(_self_) <= _20880816b_AsU64(&_30816_x));;
			}
		}
		else if (_20880a24a_IsF64(_self_)) {
			_case_begin_218931141:;
			{
				return (_208807b4e_ReadF64(_self_) <= _208808402_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_21892db55:;
			{
				return false;;
			}
		}
		_match_end_21892da45:;
	};
}



inline jule::Bool _20880bcb8_Gt(_208799195_Const* _self_, _208799195_Const _33114_x) {
	{
		
		if (_208809eb4_IsStr(_self_)) {
			_case_begin_218933bd2:;
			{
				return (_208809eb4_IsStr(&_33114_x) && (_2088078b8_ReadStr(_self_) > _2088078b8_ReadStr(&_33114_x)));;
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_218933c48:;
			{
				return (_208807115_ReadI64(_self_) > _208807dd5_AsI64(&_33114_x));;
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218933cae:;
			{
				return (_20880739b_ReadU64(_self_) > _20880816b_AsU64(&_33114_x));;
			}
		}
		else if (_20880a24a_IsF64(_self_)) {
			_case_begin_218933d25:;
			{
				return (_208807b4e_ReadF64(_self_) > _208808402_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_218931839:;
			{
				return false;;
			}
		}
		_match_end_218931729:;
	};
}



inline jule::Bool _20880c109_GtEq(_208799195_Const* _self_, _208799195_Const _35416_x) {
	{
		
		if (_208809eb4_IsStr(_self_)) {
			_case_begin_2189368b6:;
			{
				return (_208809eb4_IsStr(&_35416_x) && (_2088078b8_ReadStr(_self_) >= _2088078b8_ReadStr(&_35416_x)));;
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_21893692c:;
			{
				return (_208807115_ReadI64(_self_) >= _208807dd5_AsI64(&_35416_x));;
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218936993:;
			{
				return (_20880739b_ReadU64(_self_) >= _20880816b_AsU64(&_35416_x));;
			}
		}
		else if (_20880a24a_IsF64(_self_)) {
			_case_begin_218936a09:;
			{
				return (_208807b4e_ReadF64(_self_) >= _208808402_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_21893451d:;
			{
				return false;;
			}
		}
		_match_end_21893440d:;
	};
}



inline jule::Bool _20880c44a_Add(_208799195_Const* _self_, _208799195_Const _37519_x) {
	{
		
		if (_208809eb4_IsStr(_self_)) {
			_case_begin_21893959a:;
			{
				if ((!(_208809eb4_IsStr(&_37519_x)))) {
					return false;;
				};
				_208808ec4_SetStr(_self_, (_2088078b8_ReadStr(_self_) + _2088078b8_ReadStr(&_37519_x)));
			}
		}
		else if (_20880a24a_IsF64(_self_)) {
			_case_begin_218939611:;
			{
				_20880927c_SetF64(_self_, (_208807b4e_ReadF64(_self_) + _208808402_AsF64(&_37519_x)));
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_218939677:;
			{
				if (_20880a24a_IsF64(&_37519_x)) {
					_20880927c_SetF64(_self_, (_208808402_AsF64(_self_) + _208807b4e_ReadF64(&_37519_x)));
				} else {
					_2088086aa_SetI64(_self_, (_208807115_ReadI64(_self_) + _208807dd5_AsI64(&_37519_x)));
				};
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_2189396dd:;
			{
				if (_20880a24a_IsF64(&_37519_x)) {
					_20880927c_SetF64(_self_, (_208808402_AsF64(_self_) + _208807b4e_ReadF64(&_37519_x)));
				} else {
					_208808963_SetU64(_self_, (jule::U64)(_20880739b_ReadU64(_self_) + _20880816b_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_218937202:;
			{
				return false;;
			}
		}
		_match_end_2189370e2:;
	};
	return true;;
}



inline jule::Bool _20880c78b_Sub(_208799195_Const* _self_, _208799195_Const _40419_x) {
	{
		
		if (_20880a24a_IsF64(_self_)) {
			_case_begin_21893e391:;
			{
				_20880927c_SetF64(_self_, (_208807b4e_ReadF64(_self_) - _208808402_AsF64(&_40419_x)));
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_21893e407:;
			{
				if (_20880a24a_IsF64(&_40419_x)) {
					_20880927c_SetF64(_self_, (_208808402_AsF64(_self_) - _208807b4e_ReadF64(&_40419_x)));
				} else {
					_2088086aa_SetI64(_self_, (_208807115_ReadI64(_self_) - _208807dd5_AsI64(&_40419_x)));
				};
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_21893e46d:;
			{
				if (_20880a24a_IsF64(&_40419_x)) {
					_20880927c_SetF64(_self_, (_208808402_AsF64(_self_) - _208807b4e_ReadF64(&_40419_x)));
				} else {
					_208808963_SetU64(_self_, (jule::U64)(_20880739b_ReadU64(_self_) - _20880816b_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_21893db10:;
			{
				return false;;
			}
		}
		_match_end_21893da33:;
	};
	return true;;
}



inline jule::Bool _20880cacc_Mul(_208799195_Const* _self_, _208799195_Const _42819_x) {
	{
		
		if (_20880a24a_IsF64(_self_)) {
			_case_begin_218943274:;
			{
				_20880927c_SetF64(_self_, (_208807b4e_ReadF64(_self_) * _208808402_AsF64(&_42819_x)));
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_2189432da:;
			{
				if (_20880a24a_IsF64(&_42819_x)) {
					_20880927c_SetF64(_self_, (_208808402_AsF64(_self_) * _208807b4e_ReadF64(&_42819_x)));
				} else {
					_2088086aa_SetI64(_self_, (_208807115_ReadI64(_self_) * _208807dd5_AsI64(&_42819_x)));
				};
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218943351:;
			{
				if (_20880a24a_IsF64(&_42819_x)) {
					_20880927c_SetF64(_self_, (_208808402_AsF64(_self_) * _208807b4e_ReadF64(&_42819_x)));
				} else {
					_208808963_SetU64(_self_, (jule::U64)(_20880739b_ReadU64(_self_) * _20880816b_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_21894286c:;
			{
				return false;;
			}
		}
		_match_end_21894276d:;
	};
	return true;;
}



inline jule::Bool _20880ce1d_Div(_208799195_Const* _self_, _208799195_Const _45619_x) {
	{
		
		if (_20880a24a_IsF64(_self_)) {
			_case_begin_218947157:;
			{
				jule::F64 _4594_l = _208808402_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_20880927c_SetF64(_self_, ({ jule::F64 __jule_x = _208807b4e_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_208809711_IsI64(_self_)) {
			_case_begin_2189471bd:;
			{
				jule::F64 _4654_l = _208808402_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_20880927c_SetF64(_self_, ({ jule::F64 __jule_x = _208808402_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218947234:;
			{
				jule::F64 _4714_l = _208808402_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_20880927c_SetF64(_self_, ({ jule::F64 __jule_x = _208808402_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_218946750:;
			{
				return false;;
			}
		}
		_match_end_218946651:;
	};
	return true;;
}



inline jule::Bool _20880d25e_Mod(_208799195_Const* _self_, _208799195_Const _48519_x) {
	{
		
		if (_208809711_IsI64(_self_)) {
			_case_begin_21894b018:;
			{
				jule::I64 _4884_l = _208807dd5_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_2088086aa_SetI64(_self_, ({ jule::I64 __jule_x = _208807115_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_21894b0b2:;
			{
				jule::U64 _4944_l = _20880816b_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_208808963_SetU64(_self_, ({ jule::U64 __jule_x = _20880739b_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_21894aea2:;
			{
				return false;;
			}
		}
		_match_end_21894ad92:;
	};
	return true;;
}



inline jule::Bool _20880d5a0_BitwiseAnd(_208799195_Const* _self_, _208799195_Const _50726_x) {
	{
		
		if (_208809711_IsI64(_self_)) {
			_case_begin_21894dd1d:;
			{
				_2088086aa_SetI64(_self_, (_208807115_ReadI64(_self_) & _208807dd5_AsI64(&_50726_x)));
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_21894ddb7:;
			{
				_208808963_SetU64(_self_, (_20880739b_ReadU64(_self_) & _20880816b_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_21894dca7:;
			{
				return false;;
			}
		}
		_match_end_21894db97:;
	};
	return true;;
}



inline jule::Bool _20880d8e1_BitwiseOr(_208799195_Const* _self_, _208799195_Const _52125_x) {
	{
		
		if (_208809711_IsI64(_self_)) {
			_case_begin_218950abc:;
			{
				_2088086aa_SetI64(_self_, (_208807115_ReadI64(_self_) | _208807dd5_AsI64(&_52125_x)));
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218950b66:;
			{
				_208808963_SetU64(_self_, (_20880739b_ReadU64(_self_) | _20880816b_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_218950a56:;
			{
				return false;;
			}
		}
		_match_end_218950946:;
	};
	return true;;
}



inline jule::Bool _20880dc32_Xor(_208799195_Const* _self_, _208799195_Const _53519_x) {
	{
		
		if (_208809711_IsI64(_self_)) {
			_case_begin_21895286b:;
			{
				_2088086aa_SetI64(_self_, (_208807115_ReadI64(_self_) ^ _208807dd5_AsI64(&_53519_x)));
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218952915:;
			{
				_208808963_SetU64(_self_, (_20880739b_ReadU64(_self_) ^ _20880816b_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_218952805:;
			{
				return false;;
			}
		}
		_match_end_2189526e5:;
	};
	return true;;
}



inline jule::Bool _20880e073_Lshift(_208799195_Const* _self_, _208799195_Const _54922_x) {
	{
		
		if (_208809711_IsI64(_self_)) {
			_case_begin_21895461a:;
			{
				jule::I64 _5524_l = _208807dd5_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _20880816b_AsU64(&_54922_x);;
					_2088086aa_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_20880e727_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_2189546b4:;
			{
				_20880e727_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_2189545a4:;
			{
				return false;;
			}
		}
		_match_end_218954494:;
	};
	return true;;
}



inline jule::Bool _20880e3b4_Rshift(_208799195_Const* _self_, _208799195_Const _56922_x) {
	{
		
		if (_208809711_IsI64(_self_)) {
			_case_begin_218956b5b:;
			{
				jule::I64 _5724_l = _208807dd5_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _20880816b_AsU64(&_56922_x);;
					_2088086aa_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_20880ea57_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_208809997_IsU64(_self_)) {
			_case_begin_218956c05:;
			{
				_20880ea57_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_218956ae5:;
			{
				return false;;
			}
		}
		_match_end_2189569d5:;
	};
	return true;;
}








inline jule::Bool _208744e10_Field_eq(_208744e10_Field *_self_, _208744e10_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_208748496_FieldIns> _2087452ea_instance(jule::Ptr<_208744e10_Field> _self_) {
	return jule::new_ptr<_208748496_FieldIns>(_208748496_FieldIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Default=jule::Ptr<_20899a9a1_Data>(nullptr)});;
}







inline jule::Ptr<_2087490bd_StructIns> _20874664d_instance(jule::Ptr<_208746230_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_2087490bd_StructIns> _667_ins = jule::new_ptr<_2087490bd_StructIns>(_2087490bd_StructIns{._field_Source=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_208748496_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208748496_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20894d7de_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_20881e2b4_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__2088eb32a_new()});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bbccc3:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _7315_s = *it;
			{
				(*(_667_ins))._field_Statics=jule::append((*_667_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_20894d7de_Var>((*(_7315_s))); __jule_collection; }));
			}
			_iter_next_218bbccc3:;
			++it;
			goto _iter_begin_218bbccc3;
		}
		_iter_end_218bbccc3:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bbde6c:;
		if (it != expr_end) {
			jule::Ptr<_208744e10_Field> _7715_f = *it;
			{
				jule::Ptr<_208748496_FieldIns> _788_f2 = _2087452ea_instance(_7715_f);;
				(*(_788_f2))._field_Owner=_667_ins;
				(*(_667_ins))._field_Fields=jule::append((*_667_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_208748496_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _788_f2; __jule_collection; }));
				if ((((!((*_7715_f.alloc)._field_Mutable)) && ((*((*_7715_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _2089d19a4_Mutable((*((*(_7715_f))._field_TypeSym))._field_Type))) {
					(*_667_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_218bbde6c:;
			++it;
			goto _iter_begin_218bbde6c;
		}
		_iter_end_218bbde6c:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*(_667_ins))._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*(_667_ins))._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_20881e2b4_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20881e2b4_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218bc2e0a:;
			if (it != expr_end) {
				jule::Ptr<_20881e2b4_Fn> _9016_f = *it;
				{
					jule::Ptr<_20881e2b4_Fn> _919_fins = jule::new_ptr<_20881e2b4_Fn>((*(_9016_f)));;
					(*_919_fins.alloc)._field_Instances=nullptr;
					(*_667_ins.alloc)._field_Methods=jule::append((*_667_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_20881e2b4_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_fins; __jule_collection; }));
				}
				_iter_next_218bc2e0a:;
				++it;
				goto _iter_begin_218bc2e0a;
			}
			_iter_end_218bc2e0a:;
		};
	};
	return _667_ins;;
}



inline jule::Ptr<_2087490bd_StructIns> _20874698e_appendInstance(_208746230_Struct* _self_, jule::Ptr<_2087490bd_StructIns>* _10235_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bc51d7:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _10815_ains = *it;
			{
				if (_208749c39_Same(_10815_ains.ptr(), (*(_10235_ins)))) {
					return _10815_ains;;
				};
			}
			_iter_next_218bc51d7:;
			++it;
			goto _iter_begin_218bc51d7;
		}
		_iter_end_218bc51d7:;
	};
	{ jule::Slice<jule::Ptr<_2087490bd_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_10235_ins))); };
	return nullptr;;
}



inline jule::Ptr<_20881e2b4_Fn> _208746d8a_FindMethod(_208746230_Struct* _self_, jule::Str _12026_ident, jule::Bool _12038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bc6738:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _12115_f = *it;
			{
				if ((((*(_12115_f))._field_Statically == _12038_statically) && ((*_12115_f.alloc)._field_Ident == _12026_ident))) {
					return _12115_f;;
				};
			}
			_iter_next_218bc6738:;
			++it;
			goto _iter_begin_218bc6738;
		}
		_iter_end_218bc6738:;
	};
	return nullptr;;
}



inline jule::Ptr<_20894d7de_Var> _2087471cb_FindStatic(_208746230_Struct* _self_, jule::Str _13126_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bc7a58:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _13215_v = *it;
			{
				if (((*(_13215_v))._field_Ident == _13126_ident)) {
					return _13215_v;;
				};
			}
			_iter_next_218bc7a58:;
			++it;
			goto _iter_begin_218bc7a58;
		}
		_iter_end_218bc7a58:;
	};
	return nullptr;;
}



inline jule::Ptr<_208744e10_Field> _20874751c_FindField(_208746230_Struct* _self_, jule::Str _14225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bc8a15:;
		if (it != expr_end) {
			jule::Ptr<_208744e10_Field> _14315_f = *it;
			{
				if (((*(_14315_f))._field_Ident == _14225_ident)) {
					return _14315_f;;
				};
			}
			_iter_next_218bc8a15:;
			++it;
			goto _iter_begin_218bc8a15;
		}
		_iter_end_218bc8a15:;
	};
	return nullptr;;
}



inline jule::Bool _20874785d_IsImplements(_208746230_Struct* _self_, jule::Ptr<_2088299c8_Trait> _15224_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bc99d3:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> *_15310_it = it;
			{
				if ((_15224_t == (*(_15310_it)))) {
					return true;;
				};
			}
			_iter_next_218bc99d3:;
			++it;
			goto _iter_begin_218bc99d3;
		}
		_iter_end_218bc99d3:;
	};
	return false;;
}



inline jule::Bool _208747b9e_IsUses(_208746230_Struct* _self_, jule::Ptr<_208746230_Struct> _16218_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bca42e:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> *_16310_u = it;
			{
				while ((_16218_s == (*(_16310_u)))) {
					{
						return true;;
					}
				_iter_next_218bcb012:;
				}
				_iter_end_218bcb012:;;
			}
			_iter_next_218bca42e:;
			++it;
			goto _iter_begin_218bca42e;
		}
		_iter_end_218bca42e:;
	};
	return false;;
}








inline jule::Bool _208748496_FieldIns_eq(_208748496_FieldIns *_self_, _208748496_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _208749442_Str(_2087490bd_StructIns* _self_) {
	_21e64c5b5_Builder _2087_kind = static__21e64ce12_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Binded) {
		({
			auto except = _21e64d594_WriteStr(&_2087_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:210:4"));
			(except.result);
		});
	};
	({
		auto except = _21e64d594_WriteStr(&_2087_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:212:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _21e64d84c_WriteByte(&_2087_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:214:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218bce5cb:;
			if (it != expr_end) {
				jule::I64 _2158_i = it - expr->begin();
				jule::Ptr<_2089ccc7a_InsGeneric> *_21511_g = it;
				{
					({
						auto except = _21e64d594_WriteStr(&_2087_kind, _2089cea5c_Str((*((*(_21511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:216:5"));
						(except.result);
					});
					if ((_2158_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _21e64d84c_WriteByte(&_2087_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:218:6"));
						});
					};
				}
				_iter_next_218bce5cb:;
				++it;
				_2158_i++;
				goto _iter_begin_218bce5cb;
			}
			_iter_end_218bce5cb:;
		};
		({
			auto except = _21e64d84c_WriteByte(&_2087_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:221:4"));
		});
	};
	return _21e64de24_Str(&_2087_kind);;
}



inline jule::Bool _208749783_Equal(jule::Ptr<_2087490bd_StructIns> _self_, jule::Ptr<_2089ce661_Type> _22718_other) {
	{
		auto &_match_expr{ (*(_22718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_218bd229e:;
			{
				jule::Ptr<_2087490bd_StructIns> _2304_s = (*(_22718_other))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				if (((*(_2304_s))._field_Source != nullptr)) {
					return (_self_ == _2304_s);;
				};
			}
		}
		else {
			_case_begin_218bd1875:;
			{
				if (((*(_self_))._field_Source != nullptr)) {
					return false;;
				};
			}
		}
		_match_end_218bd180e:;
	};
	jule::Ptr<_2087490bd_StructIns> _2403_s = _2089d3ce7_Struct(_22718_other.ptr());;
	if ((((_2403_s == nullptr) || ((*(_self_))._field_Decl != (*(_2403_s))._field_Decl)) || ((*(_self_))._field_Generics.len() != (*(_2403_s))._field_Generics.len()))) {
		return false;;
	};
	jule::I64 _2487_i = 0LL;;
	for (; (_2487_i < (*(_self_))._field_Generics.len()); (_2487_i)++) {
		{
			if ((!(_2089ced9d_Equal((*((*_self_.alloc)._field_Generics[_2487_i]))._field_Type, (*((*(_2403_s))._field_Generics[_2487_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_218bd4da6:;
	}
	_iter_end_218bd4da6:;;
	return true;;
}



inline jule::Bool _208749c39_Same(_2087490bd_StructIns* _self_, jule::Ptr<_2087490bd_StructIns> _26216_s) {
	if ((((*(_self_))._field_Decl != (*(_26216_s))._field_Decl) || ((*(_26216_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bd777c:;
		if (it != expr_end) {
			jule::I64 _2667_i = it - expr->begin();
			jule::Ptr<_2089ccc7a_InsGeneric> *_26610_g = it;
			{
				jule::Ptr<_2089ccc7a_InsGeneric> _2674_g2 = (*(_26216_s))._field_Generics[_2667_i];;
				if ((!(_2089ced9d_Equal((*((*(_26610_g))))._field_Type, (*(_2674_g2))._field_Type)))) {
					return false;;
				};
			}
			_iter_next_218bd777c:;
			++it;
			_2667_i++;
			goto _iter_begin_218bd777c;
		}
		_iter_end_218bd777c:;
	};
	return true;;
}



inline jule::Ptr<_20881e2b4_Fn> _20874a135_FindMethod(_2087490bd_StructIns* _self_, jule::Str _27726_ident, jule::Bool _27738_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bd9817:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _27815_f = *it;
			{
				if ((((*(_27815_f))._field_Statically == _27738_statically) && ((*_27815_f.alloc)._field_Ident == _27726_ident))) {
					return _27815_f;;
				};
			}
			_iter_next_218bd9817:;
			++it;
			goto _iter_begin_218bd9817;
		}
		_iter_end_218bd9817:;
	};
	return nullptr;;
}



inline jule::Ptr<_208748496_FieldIns> _20874a476_FindField(_2087490bd_StructIns* _self_, jule::Str _28825_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bdab37:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> _28915_f = *it;
			{
				if (((*((*(_28915_f))._field_Decl))._field_Ident == _28825_ident)) {
					return _28915_f;;
				};
			}
			_iter_next_218bdab37:;
			++it;
			goto _iter_begin_218bdab37;
		}
		_iter_end_218bdab37:;
	};
	return nullptr;;
}



inline jule::Ptr<_20894d7de_Var> _20874a7b7_FindStatic(_2087490bd_StructIns* _self_, jule::Str _29926_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218bdbd03:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _30015_v = *it;
			{
				if (((*(_30015_v))._field_Ident == _29926_ident)) {
					return _30015_v;;
				};
			}
			_iter_next_218bdbd03:;
			++it;
			goto _iter_begin_218bdbd03;
		}
		_iter_end_218bdbd03:;
	};
	return nullptr;;
}








inline jule::Bool _208811a9d_OperandExpr_eq(_208811a9d_OperandExpr *_self_, _208811a9d_OperandExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _208812098_BinaryExpr_eq(_208812098_BinaryExpr *_self_, _208812098_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _208812472_UnaryExpr_eq(_208812472_UnaryExpr *_self_, _208812472_UnaryExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _2088129a0_StructArgExpr_eq(_2088129a0_StructArgExpr *_self_, _2088129a0_StructArgExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _208813143_AllocStructLitExpr_eq(_208813143_AllocStructLitExpr *_self_, _208813143_AllocStructLitExpr _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _2088136c6_CastingExpr_eq(_2088136c6_CastingExpr *_self_, _2088136c6_CastingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _208814908_IndexingExpr_eq(_208814908_IndexingExpr *_self_, _208814908_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _208815288_KeyValPairExpr_eq(_208815288_KeyValPairExpr *_self_, _208815288_KeyValPairExpr _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _208815be5_SlicingExpr_eq(_208815be5_SlicingExpr *_self_, _208815be5_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _208816278_TraitSubIdentExpr_eq(_208816278_TraitSubIdentExpr *_self_, _208816278_TraitSubIdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _208816b19_StructSubIdentExpr_eq(_208816b19_StructSubIdentExpr *_self_, _208816b19_StructSubIdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _208816eb0_StructStaticIdentExpr_eq(_208816eb0_StructStaticIdentExpr *_self_, _208816eb0_StructStaticIdentExpr _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _208817983_BuiltinPrintCallExpr_eq(_208817983_BuiltinPrintCallExpr *_self_, _208817983_BuiltinPrintCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _208817c80_BuiltinPrintlnCallExpr_eq(_208817c80_BuiltinPrintlnCallExpr *_self_, _208817c80_BuiltinPrintlnCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _208818159_BuiltinNewCallExpr_eq(_208818159_BuiltinNewCallExpr *_self_, _208818159_BuiltinNewCallExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _208818533_BuiltinPanicCallExpr_eq(_208818533_BuiltinPanicCallExpr *_self_, _208818533_BuiltinPanicCallExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _2088189d9_BuiltinMakeCallExpr_eq(_2088189d9_BuiltinMakeCallExpr *_self_, _2088189d9_BuiltinMakeCallExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _208818db3_BuiltinAppendCallExpr_eq(_208818db3_BuiltinAppendCallExpr *_self_, _208818db3_BuiltinAppendCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _2088191b0_BuiltinLenCallExpr_eq(_2088191b0_BuiltinLenCallExpr *_self_, _2088191b0_BuiltinLenCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _2088194ac_BuiltinCapCallExpr_eq(_2088194ac_BuiltinCapCallExpr *_self_, _2088194ac_BuiltinCapCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _208819886_BuiltinDeleteCallExpr_eq(_208819886_BuiltinDeleteCallExpr *_self_, _208819886_BuiltinDeleteCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _208819c60_BuiltinCopyCallExpr_eq(_208819c60_BuiltinCopyCallExpr *_self_, _208819c60_BuiltinCopyCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _20881a139_BuiltinErrorCallExpr_eq(_20881a139_BuiltinErrorCallExpr *_self_, _20881a139_BuiltinErrorCallExpr _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _20881a436_SizeofExpr_eq(_20881a436_SizeofExpr *_self_, _20881a436_SizeofExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _20881aada_AlignofExpr_eq(_20881aada_AlignofExpr *_self_, _20881aada_AlignofExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _20881acc7_RuneExpr_eq(_20881acc7_RuneExpr *_self_, _20881acc7_RuneExpr _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _20881b448_FreeExpr_eq(_20881b448_FreeExpr *_self_, _20881b448_FreeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _20881c7e0_Param_eq(_20881c7e0_Param *_self_, _20881c7e0_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_20882121c_ParamIns> _20881cba8_instance(jule::Ptr<_20881c7e0_Param> _self_) {
	return jule::new_ptr<_20882121c_ParamIns>(_20882121c_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr)});;
}



inline jule::Bool _20881ce3e_IsSelf(_20881c7e0_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _20881d1c5_IsRef(_20881c7e0_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _20881e76a_IsVoid(_20881e2b4_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _20881ea01_IsMethod(_20881e2b4_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_20881c7e0_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_20881ce3e_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _20881ec87_IsEntryPoint(_20881e2b4_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _20882001d_IsInit(_20881e2b4_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _2088202a4_IsAnon(_20881e2b4_Fn* _self_) {
	return _2087144c8_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _20882053a_AnyVar(_20881e2b4_Fn* _self_) {
	if (((*(_self_))._field_Result != nullptr)) {
		{
			auto expr = &((*(*(_self_))._field_Result.alloc)._field_Idents);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218be35ce:;
			if (it != expr_end) {
				jule::Ptr<_208711827_Token> *_10611_ident = it;
				{
					if ((!(_2087144c8_IsAnonIdent((*((*(_10611_ident))))._field_Kind)))) {
						return true;;
					};
				}
				_iter_next_218be35ce:;
				++it;
				goto _iter_begin_218be35ce;
			}
			_iter_end_218be35ce:;
		};
	};
	return false;;
}



inline jule::Ptr<_208822372_FnIns> _2088207c1_instanceForce(jule::Ptr<_20881e2b4_Fn> _self_) {
	jule::Ptr<_208822372_FnIns> _1177_ins = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::new_ptr<_2088ca969_Scope>(_2088ca969_Scope{._field_Parent=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__2088eb32a_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1177_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_20882121c_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20882121c_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218be5779:;
		if (it != expr_end) {
			jule::Ptr<_20881c7e0_Param> _12415_p = *it;
			{
				(*_1177_ins.alloc)._field_Params=jule::append((*_1177_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_20882121c_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20881cba8_instance(_12415_p); __jule_collection; }));
			}
			_iter_next_218be5779:;
			++it;
			goto _iter_begin_218be5779;
		}
		_iter_end_218be5779:;
	};
	if (((*((*_1177_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1177_ins.alloc)._field_Result=(*((*(*((*(_1177_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1177_ins;;
}



inline jule::Ptr<_208822372_FnIns> _208820a57_instance(jule::Ptr<_20881e2b4_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _2088207c1_instanceForce(_self_);;
}



inline jule::Ptr<_208822372_FnIns> _208820d65_appendInstance(_20881e2b4_Fn* _self_, jule::Ptr<_208822372_FnIns>* _14535_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_208822372_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_208822372_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218beae33:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _16115_ains = *it;
			{
				if (_208823e12_Same(_16115_ains.ptr(), (*(_14535_ins)))) {
					return _16115_ains;;
				};
			}
			_iter_next_218beae33:;
			++it;
			goto _iter_begin_218beae33;
		}
		_iter_end_218beae33:;
	};
	{ jule::Slice<jule::Ptr<_208822372_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
	return nullptr;;
}








inline jule::Bool _20882121c_ParamIns_eq(_20882121c_ParamIns *_self_, _20882121c_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _2088215b3_Str(_20882121c_ParamIns* _self_) {
	_21e64c5b5_Builder _1837_s = static__21e64ce12_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _21e64d594_WriteStr(&_1837_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:185:4"));
			(except.result);
		});
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		({
			auto except = _21e64d594_WriteStr(&_1837_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
	};
	if (_20881ce3e_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_20881d1c5_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _21e64d84c_WriteByte(&_1837_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:5"));
			});
		};
		({
			auto except = _21e64d594_WriteStr(&_1837_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:196:4"));
			(except.result);
		});
		return _21e64de24_Str(&_1837_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		({
			auto except = _21e64d594_WriteStr(&_1837_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:201:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _21e64d594_WriteStr(&_1837_s, _2089cea5c_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:204:4"));
			(except.result);
		});
	};
	return _21e64de24_Str(&_1837_s);;
}







inline jule::Str _2088226e6_Str(_208822372_FnIns* _self_) {
	;
	return _208824253_GetKindStr(_self_, false);;
}



inline jule::Bool _208822a37_Equal(jule::Ptr<_208822372_FnIns> _self_, jule::Ptr<_2089ce661_Type> _23618_other) {
	jule::Ptr<_208822372_FnIns> _2373_f = _2089d3a61_Fn(_23618_other.ptr());;
	if ((_2373_f == nullptr)) {
		return false;;
	};
	return _208822ecc_EqualFn(_self_, &(_2373_f));;
}



inline jule::Bool _208822ecc_EqualFn(jule::Ptr<_208822372_FnIns> _self_, jule::Ptr<_208822372_FnIns>* _24721_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24721_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*(*((*(_24721_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_20881e76a_IsVoid((*(_self_))._field_Decl.ptr()) != _20881e76a_IsVoid((*((*(_24721_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_20882121c_ParamIns>,jule::Ptr<_20882121c_ParamIns>> _2573_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_20882121c_ParamIns>,jule::Ptr<_20882121c_ParamIns>>((void*)__jule_anon218c05b74, nullptr, nullptr);;
	if (((*((*(_24721_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _2897_i = 0LL;;
	for (; (_2897_i < (*(_self_))._field_Params.len()); (_2897_i)++) {
		{
			if ((!(_2573_checkParams((*_self_.alloc)._field_Params[_2897_i], (*((*(_24721_f))))._field_Params[_2897_i])))) {
				return false;;
			};
		}
	_iter_next_218c0b905:;
	}
	_iter_end_218c0b905:;;
	if ((!(_20881e76a_IsVoid((*_self_.alloc)._field_Decl.ptr())))) {
		if ((!(_2089ced9d_Equal((*_self_.alloc)._field_Result, (*((*(_24721_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _20882331d_equalTrait(jule::Ptr<_208822372_FnIns> _self_, jule::Ptr<_208822372_FnIns>* _30624_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_208822ecc_EqualFn(_self_, _30624_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_2089ce661_Type>> _2088235a4_Types(_208822372_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_218c12125:;
			{
				return nullptr;;
			}
		}
		else if ((_2089d4831_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_218c12532:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_218c120ae:;
			{
				return (*(_2089d4831_Tup((*(_self_))._field_Result)))._field_Types;;
			}
		}
		_match_end_218c11ec1:;
	};
}



inline jule::Bool _20882383a_IsBuiltin(_208822372_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _208823ac1_IsAnon(_208822372_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _2088202a4_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _208823e12_Same(_208822372_FnIns* _self_, jule::Ptr<_208822372_FnIns> _34916_f) {
	if ((((*(_self_))._field_Decl != (*(_34916_f))._field_Decl) || ((*(_34916_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c15986:;
		if (it != expr_end) {
			jule::I64 _3547_i = it - expr->begin();
			jule::Ptr<_2089ccc7a_InsGeneric> *_35410_g = it;
			{
				jule::Ptr<_2089ccc7a_InsGeneric> _3554_g2 = (*(_34916_f))._field_Generics[_3547_i];;
				if ((!(_2089ced9d_Equal((*((*(_35410_g))))._field_Type, (*(_3554_g2))._field_Type)))) {
					return false;;
				};
			}
			_iter_next_218c15986:;
			++it;
			_3547_i++;
			goto _iter_begin_218c15986;
		}
		_iter_end_218c15986:;
	};
	return true;;
}



inline jule::Str _208824253_GetKindStr(_208822372_FnIns* _self_, jule::Bool _36622_ident) {
	_21e64c5b5_Builder _3677_s = static__21e64ce12_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _21e64d594_WriteStr(&_3677_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _21e64d594_WriteStr(&_3677_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
		(except.result);
	});
	if ((_36622_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _21e64d84c_WriteByte(&_3677_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:376:4"));
		});
		({
			auto except = _21e64d594_WriteStr(&_3677_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:4"));
			(except.result);
		});
	};
	({
		auto except = _21e64d84c_WriteByte(&_3677_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:380:3"));
	});
	jule::I64 _3813_n = (*(_self_))._field_Params.len();;
	if ((_3813_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218c1a66c:;
			if (it != expr_end) {
				jule::I64 _3838_i = it - expr->begin();
				jule::Ptr<_20882121c_ParamIns> *_38311_p = it;
				{
					({
						auto except = _21e64d594_WriteStr(&_3677_s, _2088215b3_Str((*(_38311_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:384:5"));
						(except.result);
					});
					if ((_3838_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _21e64d84c_WriteByte(&_3677_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:386:6"));
						});
					};
				}
				_iter_next_218c1a66c:;
				++it;
				_3838_i++;
				goto _iter_begin_218c1a66c;
			}
			_iter_end_218c1a66c:;
		};
	};
	({
		auto except = _21e64d84c_WriteByte(&_3677_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:390:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _21e64d84c_WriteByte(&_3677_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:392:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_20881e76a_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _21e64d84c_WriteByte(&_3677_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:395:4"));
		});
		({
			auto except = _21e64d594_WriteStr(&_3677_s, _2089cea5c_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:396:4"));
			(except.result);
		});
	};
	return _21e64de24_Str(&_3677_s);;
}







inline jule::Ptr<_20890d040_ImportInfo> _208825ad4_SelectPackage(_2088255b7_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c1e011:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_218c1e011:;
			++it;
			goto _iter_begin_218c1e011;
		}
		_iter_end_218c1e011:;
	};
	return nullptr;;
}



inline jule::Ptr<_20894d7de_Var> _208825ed0_FindVar(_2088255b7_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _208828114_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _2088263cb_FindTypeAlias(_2088255b7_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _2088285ba_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_208746230_Struct> _2088267c7_FindStruct(_2088255b7_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c21794:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_218c21794:;
			++it;
			goto _iter_begin_218c21794;
		}
		_iter_end_218c21794:;
	};
	return nullptr;;
}



inline jule::Ptr<_20881e2b4_Fn> _208826bc3_FindFn(_2088255b7_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c22cd4:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_218c22cd4:;
			++it;
			goto _iter_begin_218c22cd4;
		}
		_iter_end_218c22cd4:;
	};
	return nullptr;;
}



inline jule::Ptr<_2088299c8_Trait> _208827014_FindTrait(_2088255b7_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c24104:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_218c24104:;
			++it;
			goto _iter_begin_218c24104;
		}
		_iter_end_218c24104:;
	};
	return nullptr;;
}



inline jule::Ptr<_20882c17e_Enum> _208827355_FindEnum(_2088255b7_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c250b1:;
		if (it != expr_end) {
			jule::Ptr<_20882c17e_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_218c250b1:;
			++it;
			goto _iter_begin_218c250b1;
		}
		_iter_end_218c250b1:;
	};
	return nullptr;;
}



inline jule::Ptr<_20882d889_TypeEnum> _208827696_FindTypeEnum(_2088255b7_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c2607e:;
		if (it != expr_end) {
			jule::Ptr<_20882d889_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_218c2607e:;
			++it;
			goto _iter_begin_218c2607e;
		}
		_iter_end_218c2607e:;
	};
	return nullptr;;
}



inline jule::I64 _208827b5d_findVar1(_2088255b7_SymTab* _self_, jule::Ptr<_20894d7de_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c2704c:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_218c2704c:;
			++it;
			_1097_i++;
			goto _iter_begin_218c2704c;
		}
		_iter_end_218c2704c:;
	};
	return -1LL;;
}



inline jule::Ptr<_20894d7de_Var> _208828114_findVar(_2088255b7_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_20894d7de_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_218c28da6:;
		}
		_iter_end_218c28da6:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218c2a2d6:;
			if (it != expr_end) {
				jule::Ptr<_20894d7de_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_218c2a2d6:;
				++it;
				goto _iter_begin_218c2a2d6;
			}
			_iter_end_218c2a2d6:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _2088285ba_findTypeAlias(_2088255b7_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_2089cd94b_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_218c2c1a6:;
		}
		_iter_end_218c2c1a6:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218c33443:;
			if (it != expr_end) {
				jule::Ptr<_2089cd94b_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_218c33443:;
				++it;
				goto _iter_begin_218c33443;
			}
			_iter_end_218c33443:;
		};
	};
	return nullptr;;
}



inline jule::Any _2088289b6_defByIdent(_2088255b7_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c34697:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_218c34697:;
			++it;
			goto _iter_begin_218c34697;
		}
		_iter_end_218c34697:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c3abba:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_218c3abba:;
			++it;
			goto _iter_begin_218c3abba;
		}
		_iter_end_218c3abba:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c3e295:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_218c3e295:;
			++it;
			goto _iter_begin_218c3e295;
		}
		_iter_end_218c3e295:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c393c2:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_218c393c2:;
			++it;
			goto _iter_begin_218c393c2;
		}
		_iter_end_218c393c2:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c4160a:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_218c4160a:;
			++it;
			goto _iter_begin_218c4160a;
		}
		_iter_end_218c4160a:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c3d74a:;
		if (it != expr_end) {
			jule::Ptr<_20882c17e_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_218c3d74a:;
			++it;
			goto _iter_begin_218c3d74a;
		}
		_iter_end_218c3d74a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c45c91:;
		if (it != expr_end) {
			jule::Ptr<_20882d889_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_218c45c91:;
			++it;
			goto _iter_begin_218c45c91;
		}
		_iter_end_218c45c91:;
	};
	return nullptr;;
}



inline jule::Bool _208828e6c_isDuplicatedIdent(_2088255b7_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c4b1c5:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_218c4b1c5:;
			++it;
			goto _iter_begin_218c4b1c5;
		}
		_iter_end_218c4b1c5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c4483e:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_218c4483e:;
			++it;
			goto _iter_begin_218c4483e;
		}
		_iter_end_218c4483e:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c4c2d6:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_218c4c2d6:;
			++it;
			goto _iter_begin_218c4c2d6;
		}
		_iter_end_218c4c2d6:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c4ebbd:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_218c4ebbd:;
			++it;
			goto _iter_begin_218c4ebbd;
		}
		_iter_end_218c4ebbd:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c51ab0:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_218c51ab0:;
			++it;
			goto _iter_begin_218c51ab0;
		}
		_iter_end_218c51ab0:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c5341e:;
		if (it != expr_end) {
			jule::Ptr<_20882c17e_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_218c5341e:;
			++it;
			goto _iter_begin_218c5341e;
		}
		_iter_end_218c5341e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c542ee:;
		if (it != expr_end) {
			jule::Ptr<_20882d889_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_218c542ee:;
			++it;
			goto _iter_begin_218c542ee;
		}
		_iter_end_218c542ee:;
	};
	return false;;
}







inline jule::Str _208829dc4_Str(_2088299c8_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _20882a215_Equal(jule::Ptr<_2088299c8_Trait> _self_, jule::Ptr<_2089ce661_Type> _2518_other) {
	jule::Ptr<_2088299c8_Trait> _263_trt = _2089d4314_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_20881e2b4_Fn> _20882a6aa_FindMethod(_2088299c8_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c56c80:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_218c56c80:;
			++it;
			goto _iter_begin_218c56c80;
		}
		_iter_end_218c56c80:;
	};
	return _20882ad3c_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_20881e2b4_Fn> _20882ad3c_findMethodInherit(_2088299c8_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c59887:;
		if (it != expr_end) {
			jule::Ptr<_2089d7a65_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_218c59887;
				};
				jule::Ptr<_2088299c8_Trait> _608_t = _2089d4314_Trait((*(_5615_i))._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_20881e2b4_Fn> _629_f2 = _20882a6aa_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_218c59887:;
			++it;
			goto _iter_begin_218c59887;
		}
		_iter_end_218c59887:;
	};
	return nullptr;;
}








inline jule::Bool _20882b623_EnumItem_eq(_20882b623_EnumItem *_self_, _20882b623_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _20882b9ec_AutoExpr(_20882b623_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _20882c536_Str(_20882c17e_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _20882c877_Equal(jule::Ptr<_20882c17e_Enum> _self_, jule::Ptr<_2089ce661_Type> _3818_other) {
	jule::Ptr<_20882c17e_Enum> _393_enm = _2089d3027_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_20882b623_EnumItem> _20882cca6_FindItem(_20882c17e_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c5d616:;
		if (it != expr_end) {
			jule::Ptr<_20882b623_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_218c5d616:;
			++it;
			goto _iter_begin_218c5d616;
		}
		_iter_end_218c5d616:;
	};
	return nullptr;;
}








inline jule::Bool _20882d2b2_TypeEnumItem_eq(_20882d2b2_TypeEnumItem *_self_, _20882d2b2_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _20882dc0d_Str(_20882d889_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _20882e04e_Equal(jule::Ptr<_20882d889_TypeEnum> _self_, jule::Ptr<_2089ce661_Type> _8018_other) {
	jule::Ptr<_20882d889_TypeEnum> _813_tenm = _2089d32ad_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_20882d2b2_TypeEnumItem> _20882e47d_FindItem(_20882d889_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218c60805:;
		if (it != expr_end) {
			jule::Ptr<_20882d2b2_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_218c60805:;
			++it;
			goto _iter_begin_218c60805;
		}
		_iter_end_218c60805:;
	};
	return nullptr;;
}








inline jule::Bool _20889e696_comptimeRange_eq(_20889e696_comptimeRange *_self_, _20889e696_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _20889ea92_Str(_20889e696_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _20889edd3_Equal(jule::Ptr<_20889e696_comptimeRange> _self_, jule::Ptr<_2089ce661_Type> _2718_other) {
	return false;;
}








inline jule::Bool _2088a0202_comptimeStructField_eq(_2088a0202_comptimeStructField *_self_, _2088a0202_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _2088a05a9_Str(_2088a0202_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _2088a08ea_Equal(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Ptr<_2089ce661_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088a0e06__Decl(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Ptr<_20899c970_eval>* _4127_e, jule::Ptr<_2087303a1_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088a1302__Type(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Ptr<_20899c970_eval>* _5327_e, jule::Ptr<_2087303a1_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_20899a9a1_Data> _2088a1643_subIdent(jule::Ptr<_2088a0202_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_218c6b129:;
			{
				jule::Ptr<_208822372_FnIns> _648_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218c6d59e, jule::Ptr<__jule_anon_218c6d59e_ctx>::make(__jule_anon_218c6d59e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218c6d59e_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_218c6b1c3:;
			{
				jule::Ptr<_208822372_FnIns> _718_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218c70381, jule::Ptr<__jule_anon_218c70381_ctx>::make(__jule_anon_218c70381_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218c70381_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_218c6ae2b:;
			{
				return nullptr;;
			}
		}
		_match_end_218c6b04c:;
	};
}







inline jule::Str _2088a1d5d_Str(_2088a1995_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _2088a219e_Equal(jule::Ptr<_2088a1995_comptimeStructFields> _self_, jule::Ptr<_2089ce661_Type> _9018_other) {
	return false;;
}



inline void _2088a2633_ready(_2088a1995_comptimeStructFields* _self_, jule::Ptr<_20894d7de_Var>* _9426_keyA, jule::Ptr<_20894d7de_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a0202_comptimeStructField>(_2088a0202_comptimeStructField{._field_field=jule::Ptr<_208748496_FieldIns>(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data6)})});
	};
}



inline void _2088a2996_index(_2088a1995_comptimeStructFields* _self_, jule::Ptr<_20899a9a1_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a0202_comptimeStructField>(_2088a0202_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data6)});
}



inline void _2088a2db4_step(_2088a1995_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_20894d7de_Var>* _12633_keyA, jule::Ptr<_20894d7de_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_2089d50d4_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _2088a314a_len(_2088a1995_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _2088a3425_comptimeStatic_eq(_2088a3425_comptimeStatic *_self_, _2088a3425_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _2088a37cc_Str(_2088a3425_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _2088a3b1d_Equal(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Ptr<_2089ce661_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088a4129__Decl(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Ptr<_20899c970_eval>* _15427_e, jule::Ptr<_2087303a1_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088a4525__Type(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Ptr<_20899c970_eval>* _16627_e, jule::Ptr<_2087303a1_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_20899a9a1_Data> _2088a4866_subIdent(jule::Ptr<_2088a3425_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_218c82162:;
			{
				jule::Ptr<_208822372_FnIns> _1778_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218c833d8, jule::Ptr<__jule_anon_218c833d8_ctx>::make(__jule_anon_218c833d8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218c833d8_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_218c821ea:;
			{
				jule::Ptr<_208822372_FnIns> _1848_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218c851cb, jule::Ptr<__jule_anon_218c851cb_ctx>::make(__jule_anon_218c851cb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218c851cb_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_218c81eca:;
			{
				return nullptr;;
			}
		}
		_match_end_218c820da:;
	};
}







inline jule::Str _2088a5081_Str(_2088a4bc9_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _2088a53c2_Equal(jule::Ptr<_2088a4bc9_comptimeStatics> _self_, jule::Ptr<_2089ce661_Type> _20318_other) {
	return false;;
}



inline void _2088a5856_ready(_2088a4bc9_comptimeStatics* _self_, jule::Ptr<_20894d7de_Var>* _20726_keyA, jule::Ptr<_20894d7de_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a3425_comptimeStatic>(_2088a3425_comptimeStatic{._field_field=jule::Ptr<_20894d7de_Var>(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data8)})});
	};
}



inline void _2088a5bb9_index(_2088a4bc9_comptimeStatics* _self_, jule::Ptr<_20899a9a1_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a3425_comptimeStatic>(_2088a3425_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data8)});
}



inline void _2088a60d7_step(_2088a4bc9_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_20894d7de_Var>* _23933_keyA, jule::Ptr<_20894d7de_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_2089d68dd_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _2088a636d_len(_2088a4bc9_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _2088a6648_comptimeEnumField_eq(_2088a6648_comptimeEnumField *_self_, _2088a6648_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _2088a6a00_Str(_2088a6648_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _2088a6d41_Equal(jule::Ptr<_2088a6648_comptimeEnumField> _self_, jule::Ptr<_2089ce661_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088a733b__Decl(jule::Ptr<_2088a6648_comptimeEnumField> _self_, jule::Ptr<_20899c970_eval>* _26727_e, jule::Ptr<_2087303a1_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088a767c_subIdent(jule::Ptr<_2088a6648_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_218c9375b:;
			{
				jule::Ptr<_208822372_FnIns> _2828_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218c9499e, jule::Ptr<__jule_anon_218c9499e_ctx>::make(__jule_anon_218c9499e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218c9499e_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_218c93272:;
			{
				return nullptr;;
			}
		}
		_match_end_218c9334e:;
	};
}







inline jule::Str _2088a7e1e_Str(_2088a7957_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _2088a8260_Equal(jule::Ptr<_2088a7957_comptimeEnumFields> _self_, jule::Ptr<_2089ce661_Type> _30118_other) {
	return false;;
}



inline void _2088a866c_ready(_2088a7957_comptimeEnumFields* _self_, jule::Ptr<_20894d7de_Var>* _30526_keyA, jule::Ptr<_20894d7de_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a6648_comptimeEnumField>(_2088a6648_comptimeEnumField{._field_field=jule::Ptr<_20882b623_EnumItem>(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data10)})});
	};
}



inline void _2088a89d0_index(_2088a7957_comptimeEnumFields* _self_, jule::Ptr<_20899a9a1_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a6648_comptimeEnumField>(_2088a6648_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data10)});
}



inline void _2088a8ded_step(_2088a7957_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_20894d7de_Var>* _33733_keyA, jule::Ptr<_20894d7de_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_2089d5601_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _2088a9184_len(_2088a7957_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _2088a945e_comptimeParam_eq(_2088a945e_comptimeParam *_self_, _2088a945e_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _2088a9816_Str(_2088a945e_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _2088a9b57_Equal(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_2089ce661_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088aa174__Decl(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_20899c970_eval>* _36527_e, jule::Ptr<_2087303a1_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088aa570__Type(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_20899c970_eval>* _37727_e, jule::Ptr<_2087303a1_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_20899a9a1_Data> _2088aa96b__Recv(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Ptr<_20899c970_eval>* _38527_e, jule::Ptr<_2087303a1_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _3907_constant = static__208806213_NewBool(_20881ce3e_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088aacac_subIdent(jule::Ptr<_2088a945e_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_218caa894:;
			{
				jule::Ptr<_208822372_FnIns> _4018_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218cabba3, jule::Ptr<__jule_anon_218cabba3_ctx>::make(__jule_anon_218cabba3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218cabba3_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_218caab5d:;
			{
				jule::Ptr<_208822372_FnIns> _4088_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218cad996, jule::Ptr<__jule_anon_218cad996_ctx>::make(__jule_anon_218cad996_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218cad996_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_218caa92c:;
			{
				jule::Ptr<_208822372_FnIns> _4158_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218cb0789, jule::Ptr<__jule_anon_218cb0789_ctx>::make(__jule_anon_218cb0789_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218cb0789_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_218caa6da:;
			{
				return nullptr;;
			}
		}
		_match_end_218caa7b7:;
	};
}







inline jule::Str _2088ab560_Str(_2088ab2b8_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _2088ab8a1_Equal(jule::Ptr<_2088ab2b8_comptimeParams> _self_, jule::Ptr<_2089ce661_Type> _43418_other) {
	return false;;
}



inline void _2088abd35_ready(_2088ab2b8_comptimeParams* _self_, jule::Ptr<_20894d7de_Var>* _43826_keyA, jule::Ptr<_20894d7de_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a945e_comptimeParam>(_2088a945e_comptimeParam{._field_param=jule::Ptr<_20882121c_ParamIns>(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data12)})});
	};
}



inline void _2088ac198_index(_2088ab2b8_comptimeParams* _self_, jule::Ptr<_20899a9a1_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a945e_comptimeParam>(_2088a945e_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data12)});
}



inline void _2088ac5b6_step(_2088ab2b8_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_20894d7de_Var>* _47033_keyA, jule::Ptr<_20894d7de_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_2089d5b1d_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _2088ac84c_len(_2088ab2b8_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _2088acece_Str(_2088acb27_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _2088ad320_Equal(jule::Ptr<_2088acb27_comptimeTypeInfos> _self_, jule::Ptr<_2089ce661_Type> _49418_other) {
	return false;;
}



inline void _2088ad7a4_ready(_2088acb27_comptimeTypeInfos* _self_, jule::Ptr<_20894d7de_Var>* _49826_keyA, jule::Ptr<_20894d7de_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088ae596_comptimeTypeInfo>(_2088ae596_comptimeTypeInfo{._field_base=jule::Ptr<_2089ce661_Type>(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data15)})});
	};
}



inline void _2088adb17_index(_2088acb27_comptimeTypeInfos* _self_, jule::Ptr<_20899a9a1_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_2089ce287_Kind_mptr_data15)});
}



inline void _2088ae035_step(_2088acb27_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_20894d7de_Var>* _52833_keyA, jule::Ptr<_20894d7de_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_2089ce287_Kind_mptr_data15);
	};
}



inline jule::I64 _2088ae2bb_len(_2088acb27_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _2088ae596_comptimeTypeInfo_eq(_2088ae596_comptimeTypeInfo *_self_, _2088ae596_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _2088ae94d_Str(_2088ae596_comptimeTypeInfo* _self_) {
	return ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("comptimeTypeInfo[", 17)); size += part0.len(); jule::Str part1 = std::move(_2089cea5c_Str((*(_self_))._field_base.ptr())); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit("]", 1)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
}



inline jule::Bool _2088aec8e_Equal(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_2089ce661_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088b03cc__Decl(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _55627_e, jule::Ptr<_2087303a1_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_2089d407d_softStruct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_218cc5c99:;
			{
				_5617_decl=jule::Any((*(_2089d407d_softStruct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_2089d4314_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_218cc6d77:;
			{
				_5617_decl=jule::Any(_2089d4314_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_2089d3027_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cc6ddd:;
			{
				_5617_decl=jule::Any(_2089d3027_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_2089d32ad_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cc6e54:;
			{
				_5617_decl=jule::Any(_2089d32ad_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_2089d3a61_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cc5914:;
			{
				jule::Ptr<_208822372_FnIns> _5728_f = _2089d3a61_Fn((*(_self_))._field_base);;
				{
					
					if (_20882383a_IsBuiltin(_5728_f.ptr())) {
						_case_begin_218ccbe37:;
						{
							_20899ce48_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_208823ac1_IsAnon(_5728_f.ptr())) {
						_case_begin_218ccbed1:;
						{
							_20899ce48_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_218ccbd9e:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_218cc589d:;
			{
				_20899ce48_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_218cc576b:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b07c8__Str(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _59322_e, jule::Ptr<_2087303a1_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _5987_constant = static__2088064cc_NewStr(_2089cea5c_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53c02_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b0bc4__Kind(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _60627_e, jule::Ptr<_2087303a1_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_20882c17e_Enum> _6117_enm = _20890eccd_FindEnum(_2088c3489_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_20882b623_EnumItem> _61211_item = nullptr;;
	{
		
		if (_2089d0a6e_Void((*(_self_))._field_base.ptr())) {
			_case_begin_218cd5638:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_2089d3ce7_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_218cd569e:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_2089d4314_Trait((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd5715:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Trait", 5));
			}
		}
		else if ((_2089d2c91_Ptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd578c:;
			{
				if (_2089e12cc_IsUnsafe(_2089d2c91_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_2089d2a0a_Sptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd5814:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_2089d3027_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd588b:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Enum", 4));
			}
		}
		else if ((_2089d32ad_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd62b5:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_2089d459a_Map((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd632b:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Map", 3));
			}
		}
		else if ((_2089d37ca_Slc((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd63a3:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Slice", 5));
			}
		}
		else if ((_2089d3544_Arr((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd642a:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Array", 5));
			}
		}
		else if ((_2089d3a61_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd64a2:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Func", 4));
			}
		}
		else if ((_2089d4831_Tup((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd6529:;
			{
				_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_2089d2774_Prim((*(_self_))._field_base) != nullptr)) {
			_case_begin_218cd65a1:;
			{
				jule::Ptr<_2089d846c_Prim> _6434_prim = _2089d2774_Prim((*(_self_))._field_base);;
				{
					
					if (_2089dbbbd_IsAny(_6434_prim.ptr())) {
						_case_begin_218ce2bea:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Any", 3));
						}
					}
					else if (_2089db6a1_IsBool(_6434_prim.ptr())) {
						_case_begin_218ce2e1a:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Bool", 4));
						}
					}
					else if (_2089db937_IsStr(_6434_prim)) {
						_case_begin_218ce2e92:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Str", 3));
						}
					}
					else if (_2089da8d1_IsF32(_6434_prim)) {
						_case_begin_218ce2c61:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("F32", 3));
						}
					}
					else if (_2089dab67_IsF64(_6434_prim)) {
						_case_begin_218ce2cc7:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("F64", 3));
						}
					}
					else if (_2089d935d_IsI8(_6434_prim)) {
						_case_begin_218ce3745:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("I8", 2));
						}
					}
					else if (_2089d95e4_IsI16(_6434_prim)) {
						_case_begin_218ce37ab:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("I16", 3));
						}
					}
					else if (_2089d987a_IsI32(_6434_prim)) {
						_case_begin_218ce3822:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("I32", 3));
						}
					}
					else if (_2089d9b11_IsI64(_6434_prim)) {
						_case_begin_218ce3888:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("I64", 3));
						}
					}
					else if (_2089d9d97_IsU8(_6434_prim)) {
						_case_begin_218ce38ee:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("U8", 2));
						}
					}
					else if (_2089da12d_IsU16(_6434_prim)) {
						_case_begin_218ce3965:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("U16", 3));
						}
					}
					else if (_2089da3b4_IsU32(_6434_prim)) {
						_case_begin_218ce39dc:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("U32", 3));
						}
					}
					else if (_2089da64a_IsU64(_6434_prim)) {
						_case_begin_218ce3a64:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("U64", 3));
						}
					}
					else if (_2089daded_IsInt(_6434_prim)) {
						_case_begin_218ce3adb:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Int", 3));
						}
					}
					else if (_2089db184_IsUint(_6434_prim)) {
						_case_begin_218ce3b63:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Uint", 4));
						}
					}
					else if (_2089db41a_IsUintptr(_6434_prim)) {
						_case_begin_218ce3bda:;
						{
							_61211_item=_20882cca6_FindItem(_6117_enm, jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_218ce2a52:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _2089cea5c_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_218ce29ca:;
				};
			}
		}
		else {
			_case_begin_218cd55c2:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _2089cea5c_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_218cd5517:;
	};
	return _2089caa9c_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _2089a0e7e_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b10c0__Bits(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _68627_e, jule::Ptr<_2087303a1_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089d846c_Prim> _6913_prim = _2089d2774_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_20899ce48_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _208894acb_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_20899ce48_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _7017_constant = static__208805bc4_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a548d4_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b14bb__Elem(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _71027_e, jule::Ptr<_2087303a1_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089e0760_Ptr> _7157_ptr = _2089d2c91_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_2089e12cc_IsUnsafe(_7157_ptr)) {
			_20899ce48_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _2088c380d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_2089dbe98_Sptr> _7237_sptr = _2089d2a0a_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _2088c380d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_2089dc96b_Slc> _7277_slice = _2089d37ca_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _2088c380d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_2089dec8c_Arr> _7317_array = _2089d3544_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _2088c380d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_20882c17e_Enum> _7357_enm = _2089d3027_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _2088c380d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_20899ce48_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_20899a9a1_Data> _2088b18b7__Size(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _74327_e, jule::Ptr<_2087303a1_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089dec8c_Arr> _7487_arr = _2089d3544_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_20899ce48_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _7537_constant = static__208805bc4_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a548d4_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b1cb3__Key(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _76226_e, jule::Ptr<_2087303a1_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089de110_Map> _7677_m = _2089d459a_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_20899ce48_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b21ae__Value(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _77528_e, jule::Ptr<_2087303a1_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089de110_Map> _7807_m = _2089d459a_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_20899ce48_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b25aa__Fields(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _78829_e, jule::Ptr<_2087303a1_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2087490bd_StructIns> _7937_s = _2089d3ce7_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a1995_comptimeStructFields>(_2088a1995_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	};
	jule::Ptr<_20882c17e_Enum> _8037_enm = _2089d3027_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a7957_comptimeEnumFields>(_2088a7957_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	};
	_20899ce48_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_20899a9a1_Data> _2088b29a6__Statics(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _81730_e, jule::Ptr<_2087303a1_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2087490bd_StructIns> _8227_s = _2089d3ce7_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_20899ce48_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088a4bc9_comptimeStatics>(_2088a4bc9_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b2da2__Binded(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _83629_e, jule::Ptr<_2087303a1_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _8417_constant = static__208806213_NewBool(_2089d0552_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b329d__Ordered(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _84926_e, jule::Ptr<_2087303a1_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _8547_constant = static__208806213_NewBool(_2089d1c3a_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b3699__Comparable(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _86229_e, jule::Ptr<_2087303a1_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _8677_constant = static__208806213_NewBool(_2089d171d_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b3a95__Mutable(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _87526_e, jule::Ptr<_2087303a1_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _8807_constant = static__208806213_NewBool(_2089d19a4_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b3e91__Types(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _88828_e, jule::Ptr<_2087303a1_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089dd560_Tuple> _8937_tup = _2089d4831_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_20899ce48_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2088acb27_comptimeTypeInfos> _8987_infos = jule::new_ptr<_2088acb27_comptimeTypeInfos>(_2088acb27_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088ae596_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088ae596_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*_8937_tup.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218d358ca:;
		if (it != expr_end) {
			jule::Ptr<_2089ce661_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088ae596_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _208929c0a_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_218d358ca:;
			++it;
			goto _iter_begin_218d358ca;
		}
		_iter_end_218d358ca:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b438c__CanNil(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _91129_e, jule::Ptr<_2087303a1_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _9167_constant = static__208806213_NewBool(_2089d1ec1_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b4788__GC(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _92425_e, jule::Ptr<_2087303a1_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _9297_constant = static__208806213_NewBool(_2089d2257_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b4b84__Result(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _93729_e, jule::Ptr<_2087303a1_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208822372_FnIns> _9427_f = _2089d3a61_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_20899ce48_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _2088c380d_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_208a5364c_primVoid));;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b5080__Params(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Ptr<_20899c970_eval>* _95329_e, jule::Ptr<_2087303a1_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208822372_FnIns> _9587_f = _2089d3a61_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_20899ce48_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088ab2b8_comptimeParams>(_2088ab2b8_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b53c1_subIdent(jule::Ptr<_2088ae596_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_218d46600:;
			{
				jule::Ptr<_208822372_FnIns> _9738_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d48190, jule::Ptr<__jule_anon_218d48190_ctx>::make(__jule_anon_218d48190_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d48190_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_218d46666:;
			{
				jule::Ptr<_208822372_FnIns> _9808_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d49e83, jule::Ptr<__jule_anon_218d49e83_ctx>::make(__jule_anon_218d49e83_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d49e83_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_218d466cc:;
			{
				jule::Ptr<_208822372_FnIns> _9878_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d4bc76, jule::Ptr<__jule_anon_218d4bc76_ctx>::make(__jule_anon_218d4bc76_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d4bc76_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_218d46864:;
			{
				jule::Ptr<_208822372_FnIns> _9948_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d4da69, jule::Ptr<__jule_anon_218d4da69_ctx>::make(__jule_anon_218d4da69_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d4da69_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_218d468ca:;
			{
				jule::Ptr<_208822372_FnIns> _10018_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d5085c, jule::Ptr<__jule_anon_218d5085c_ctx>::make(__jule_anon_218d5085c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d5085c_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_218d46952:;
			{
				jule::Ptr<_208822372_FnIns> _10088_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d52650, jule::Ptr<__jule_anon_218d52650_ctx>::make(__jule_anon_218d52650_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d52650_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_218d469c9:;
			{
				jule::Ptr<_208822372_FnIns> _10158_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d54443, jule::Ptr<__jule_anon_218d54443_ctx>::make(__jule_anon_218d54443_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d54443_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_218d46a51:;
			{
				jule::Ptr<_208822372_FnIns> _10228_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d56236, jule::Ptr<__jule_anon_218d56236_ctx>::make(__jule_anon_218d56236_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d56236_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_218d46b3e:;
			{
				jule::Ptr<_208822372_FnIns> _10298_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d5816c, jule::Ptr<__jule_anon_218d5816c_ctx>::make(__jule_anon_218d5816c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d5816c_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_218d46bb6:;
			{
				jule::Ptr<_208822372_FnIns> _10368_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d59e60, jule::Ptr<__jule_anon_218d59e60_ctx>::make(__jule_anon_218d59e60_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d59e60_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_218d46c3d:;
			{
				jule::Ptr<_208822372_FnIns> _10438_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d5bc53, jule::Ptr<__jule_anon_218d5bc53_ctx>::make(__jule_anon_218d5bc53_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d5bc53_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_218d46cb5:;
			{
				jule::Ptr<_208822372_FnIns> _10508_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d5da46, jule::Ptr<__jule_anon_218d5da46_ctx>::make(__jule_anon_218d5da46_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d5da46_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_218d46d3c:;
			{
				jule::Ptr<_208822372_FnIns> _10578_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d60839, jule::Ptr<__jule_anon_218d60839_ctx>::make(__jule_anon_218d60839_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d60839_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_218d46db4:;
			{
				jule::Ptr<_208822372_FnIns> _10648_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d6262c, jule::Ptr<__jule_anon_218d6262c_ctx>::make(__jule_anon_218d6262c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d6262c_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_218d46e3b:;
			{
				jule::Ptr<_208822372_FnIns> _10718_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d64420, jule::Ptr<__jule_anon_218d64420_ctx>::make(__jule_anon_218d64420_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d64420_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_218d46eb3:;
			{
				jule::Ptr<_208822372_FnIns> _10788_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d66213, jule::Ptr<__jule_anon_218d66213_ctx>::make(__jule_anon_218d66213_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d66213_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_218d4703a:;
			{
				jule::Ptr<_208822372_FnIns> _10858_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d68006, jule::Ptr<__jule_anon_218d68006_ctx>::make(__jule_anon_218d68006_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d68006_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_218d470b2:;
			{
				jule::Ptr<_208822372_FnIns> _10928_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d69ce9, jule::Ptr<__jule_anon_218d69ce9_ctx>::make(__jule_anon_218d69ce9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d69ce9_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_218d47139:;
			{
				jule::Ptr<_208822372_FnIns> _10998_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d6badc, jule::Ptr<__jule_anon_218d6badc_ctx>::make(__jule_anon_218d6badc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d6badc_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_218d461c1:;
			{
				return nullptr;;
			}
		}
		_match_end_218d463d0:;
	};
}








inline jule::Bool _2088b569b_comptimeValue_eq(_2088b569b_comptimeValue *_self_, _2088b569b_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _2088b5a53_Str(_2088b569b_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _2088b5d94_Equal(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_2089ce661_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088b6405__Unwrap(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _112229_e, jule::Ptr<_2087303a1_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_20899a9a1_Data> _2088b6801__Type(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _113027_e, jule::Ptr<_2087303a1_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b6bec__Lvalue(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _113829_e, jule::Ptr<_2087303a1_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _11437_constant = static__208806213_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b70e8__Mutable(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _115130_e, jule::Ptr<_2087303a1_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _11567_constant = static__208806213_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b74e4__Const(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _116428_e, jule::Ptr<_2087303a1_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _11697_constant = static__208806213_NewBool(_20899b3db_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088b78e0__Field(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _117728_e, jule::Ptr<_2087303a1_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2087490bd_StructIns> _11827_s = _2089d3ce7_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_20899ce48_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_20872b677_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_20899a9a1_Data> _11887_d = _2089bc5d8_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20899b3db_IsConst(_11887_d.ptr())))) {
		_20899ce48_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2089d846c_Prim> _11963_prim = _2089d2774_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_2089db937_IsStr(_11963_prim.ptr()))))) {
		_20899ce48_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _2088078b8_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_208748496_FieldIns> _12027_f = _20874a476_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_20899ce48_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_11827_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_2089b4921_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*(_11877_arg))._field_Token), &(_12027_f));
	return _2088c3b4e_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b7cdb__Method(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Ptr<_20899c970_eval>* _121229_e, jule::Ptr<_2087303a1_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_2087490bd_StructIns> _12187_s = static_cast<jule::Ptr<_2087490bd_StructIns>>(nullptr);;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_data))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_218d8d504:;
			{
				_12187_s=_2089d407d_softStruct((*((*((*((*(_self_))._field_data))._field_Type))._field_Kind.cast_ptr<_2089dbe98_Sptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)))._field_Elem.ptr());
				_12177_ref=true;
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_218d87c5c:;
			{
				_12187_s=(*((*((*(_self_))._field_data))._field_Type))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);
			}
		}
		_match_end_218d8d46b:;
	};
	if ((_12187_s == nullptr)) {
		_20899ce48_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_20872b677_Expr> _12307_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_20899a9a1_Data> _12317_d = _2089bc5d8_evalExpr((*(_121229_e)), _12307_arg);;
	if ((_12317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20899b3db_IsConst(_12317_d.ptr())))) {
		_20899ce48_pushErr((*(_121229_e)).ptr(), (*(_12307_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2089d846c_Prim> _12393_prim = _2089d2774_Prim((*(_12317_d))._field_Type.ptr());;
	if (((_12393_prim == nullptr) || (!(_2089db937_IsStr(_12393_prim.ptr()))))) {
		_20899ce48_pushErr((*(_121229_e)).ptr(), (*(_12307_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_12317_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12443_ident = _2088078b8_ReadStr((*_12317_d.alloc)._field_Constant.ptr());;
	;
	jule::Ptr<_20881e2b4_Fn> _12467_m = _20874a135_FindMethod(_12187_s.ptr(), _12443_ident, false);;
	if ((_12467_m == nullptr)) {
		_20899ce48_pushErr((*(_121229_e)).ptr(), (*(_12307_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_12187_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12443_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12317_d=jule::new_ptr<_20899a9a1_Data>((*((*(_self_))._field_data)));
	if (_12177_ref) {
		_2089cb152_makeImplicitDeref(&(_12317_d), (*((*(_121244_fc))))._field_Token);
	};
	_12317_d=_2089b54e3_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12317_d), &(_12187_s), &((*(_12307_arg))._field_Token), &(_12467_m), _12177_ref);
	return _2088c3b4e_buildComptimeValue(&(_12317_d));;
}



inline jule::Ptr<_20899a9a1_Data> _2088b812c_subIdent(jule::Ptr<_2088b569b_comptimeValue> _self_, jule::Str* _125926_ident) {
	{
		auto &_match_expr{ (*(_125926_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_218d996a8:;
			{
				jule::Ptr<_208822372_FnIns> _12628_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d9ab4e, jule::Ptr<__jule_anon_218d9ab4e_ctx>::make(__jule_anon_218d9ab4e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d9ab4e_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_12628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_218d9971e:;
			{
				jule::Ptr<_208822372_FnIns> _12698_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d9c942, jule::Ptr<__jule_anon_218d9c942_ctx>::make(__jule_anon_218d9c942_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d9c942_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_12698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_218d99785:;
			{
				jule::Ptr<_208822372_FnIns> _12768_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218d9e735, jule::Ptr<__jule_anon_218d9e735_ctx>::make(__jule_anon_218d9e735_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218d9e735_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_12768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_218d997eb:;
			{
				jule::Ptr<_208822372_FnIns> _12838_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218da1528, jule::Ptr<__jule_anon_218da1528_ctx>::make(__jule_anon_218da1528_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218da1528_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_12838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_218d99873:;
			{
				jule::Ptr<_208822372_FnIns> _12908_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218da331b, jule::Ptr<__jule_anon_218da331b_ctx>::make(__jule_anon_218da331b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218da331b_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_12908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_218d99a0a:;
			{
				jule::Ptr<_208822372_FnIns> _12978_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218da510e, jule::Ptr<__jule_anon_218da510e_ctx>::make(__jule_anon_218da510e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218da510e_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_12978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_218d99a82:;
			{
				jule::Ptr<_208822372_FnIns> _13048_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218da6e02, jule::Ptr<__jule_anon_218da6e02_ctx>::make(__jule_anon_218da6e02_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218da6e02_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_13048_method));;
			}
		}
		else {
			_case_begin_218d99400:;
			{
				return nullptr;;
			}
		}
		_match_end_218d99565:;
	};
}







inline jule::Str _2088b87ae_Str(_2088b8407_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _2088b8b00_Equal(jule::Ptr<_2088b8407_comptimeFiles> _self_, jule::Ptr<_2089ce661_Type> _132318_other) {
	return false;;
}



inline void _2088b9084_ready(_2088b8407_comptimeFiles* _self_, jule::Ptr<_20894d7de_Var>* _132726_keyA, jule::Ptr<_20894d7de_Var>* _132743_keyB) {
	if (((*(_132726_keyA)) != nullptr)) {
		(*((*(_132726_keyA))))._field_Constant=true;
		(*((*(_132726_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_132726_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132743_keyB)) != nullptr)) {
		(*((*(_132743_keyB))))._field_Constant=true;
		(*((*(_132743_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_132743_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088b9d76_comptimeFile>(_2088b9d76_comptimeFile{._field_file=jule::Ptr<_2088255b7_SymTab>(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data18)})});
	};
}



inline void _2088b93e7_index(_2088b8407_comptimeFiles* _self_, jule::Ptr<_20899a9a1_Data>* _134826_d, jule::I64 _134836_i) {
	(*((*(_134826_d))))._field_Decl=false;
	(*((*(_134826_d))))._field_untyped=false;
	(*((*(_134826_d))))._field_Constant=nullptr;
	(*((*(_134826_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088b9d76_comptimeFile>(_2088b9d76_comptimeFile{._field_file=(*(_self_))._field_files[_134836_i]}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data18)});
}



inline void _2088b9815_step(_2088b8407_comptimeFiles* _self_, jule::I64 _135920_i, jule::Ptr<_20894d7de_Var>* _135933_keyA, jule::Ptr<_20894d7de_Var>* _135950_keyB) {
	if (((*(_135933_keyA)) != nullptr)) {
		(*((*((*((*(_135933_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_135920_i));
		(*(*((*((*(_135933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135950_keyB)) != nullptr)) {
		(*((*((*((*((*(_135950_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_2088b9d76_comptimeFile>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135920_i];
	};
}



inline jule::I64 _2088b9a9b_len(_2088b8407_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _2088b9d76_comptimeFile_eq(_2088b9d76_comptimeFile *_self_, _2088b9d76_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _2088ba22d_Str(_2088b9d76_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _2088ba56e_Equal(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_2089ce661_Type> _138318_other) {
	return false;;
}



inline jule::Ptr<_20899a9a1_Data> _2088baa8b__Path(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_20899c970_eval>* _138727_e, jule::Ptr<_2087303a1_FnCallExpr>* _138742_fc) {
	if (((*((*(_138742_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_138727_e)).ptr(), (*((*((*(_138742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _13927_constant = static__2088064cc_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53c02_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13927_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13927_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088bae87__Name(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_20899c970_eval>* _140027_e, jule::Ptr<_2087303a1_FnCallExpr>* _140042_fc) {
	if (((*((*(_140042_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_140027_e)).ptr(), (*((*((*(_140042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _14057_constant = static__2088064cc_NewStr(_2087182e0_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53c02_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14057_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14057_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088bb383__Dir(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Ptr<_20899c970_eval>* _141326_e, jule::Ptr<_2087303a1_FnCallExpr>* _141341_fc) {
	if (((*((*(_141341_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_141326_e)).ptr(), (*((*((*(_141341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_208799195_Const> _14187_constant = static__2088064cc_NewStr(_208718059_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53c02_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14187_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14187_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088bb6c4_subIdent(jule::Ptr<_2088b9d76_comptimeFile> _self_, jule::Str* _142626_ident) {
	{
		auto &_match_expr{ (*(_142626_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_218dba07a:;
			{
				jule::Ptr<_208822372_FnIns> _14298_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218dbb389, jule::Ptr<__jule_anon_218dbb389_ctx>::make(__jule_anon_218dbb389_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218dbb389_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_14298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_218dba344:;
			{
				jule::Ptr<_208822372_FnIns> _14368_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218dbd17c, jule::Ptr<__jule_anon_218dbd17c_ctx>::make(__jule_anon_218dbd17c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218dbd17c_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_14368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_218dba113:;
			{
				jule::Ptr<_208822372_FnIns> _14438_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218dbee70, jule::Ptr<__jule_anon_218dbee70_ctx>::make(__jule_anon_218dbee70_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218dbee70_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_14438_method));;
			}
		}
		else {
			_case_begin_218db9dc1:;
			{
				return nullptr;;
			}
		}
		_match_end_218db9e9d:;
	};
}







inline jule::Str _2088bc087_Str(_2088bb99e_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _2088bc3c8_Equal(jule::Ptr<_2088bb99e_comptimeDecls> _self_, jule::Ptr<_2089ce661_Type> _146218_other) {
	return false;;
}



inline void _2088bc74c_ready(_2088bb99e_comptimeDecls* _self_, jule::Ptr<_20894d7de_Var>* _146626_keyA, jule::Ptr<_20894d7de_Var>* _146643_keyB) {
	if (((*(_146626_keyA)) != nullptr)) {
		(*((*(_146626_keyA))))._field_Constant=true;
		(*((*(_146626_keyA))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_146626_keyA))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146643_keyB)) != nullptr)) {
		(*((*(_146643_keyB))))._field_Constant=true;
		(*((*(_146643_keyB))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		(*((*(_146643_keyB))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)})});
	};
}



inline void _2088bcab0_index(_2088bb99e_comptimeDecls* _self_, jule::Ptr<_20899a9a1_Data>* _148726_d, jule::I64 _148736_i) {
	(*((*(_148726_d))))._field_Decl=false;
	(*((*(_148726_d))))._field_untyped=false;
	(*((*(_148726_d))))._field_Constant=nullptr;
	(*((*(_148726_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148736_i], (jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)});
}



inline void _2088bcecd_step(_2088bb99e_comptimeDecls* _self_, jule::I64 _149620_i, jule::Ptr<_20894d7de_Var>* _149633_keyA, jule::Ptr<_20894d7de_Var>* _149650_keyB) {
	if (((*(_149633_keyA)) != nullptr)) {
		(*((*((*((*(_149633_keyA))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_149620_i));
		(*(*((*((*(_149633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149650_keyB)) != nullptr)) {
		(*((*((*((*((*(_149650_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_2088bdc8c_comptimeDecl>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149620_i]))._field_decl;
	};
}



inline jule::I64 _2088bd264_len(_2088bb99e_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _2088bdc8c_comptimeDecl_eq(_2088bdc8c_comptimeDecl *_self_, _2088bdc8c_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _2088be144_Str(_2088bdc8c_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _2088be485_Equal(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_2089ce661_Type> _153518_other) {
	return false;;
}



inline jule::Str _2088be8d6_declAsStr(_2088bdc8c_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218dc97b5:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_218dc9cc1:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_218dc9b7d:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_218dc9be4:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_218dc99e6:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_218dc9a5c:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_218dca024:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218dca08a:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_218dca101:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_218dca167:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_218dc98b4:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1562:4"));;
			}
		}
		_match_end_218dc9650:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2088becd2__Name(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _156627_e, jule::Ptr<_2087303a1_FnCallExpr>* _156642_fc) {
	if (((*((*(_156642_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_156627_e)).ptr(), (*((*((*(_156642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15717_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218dcce7d:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_208746230_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_218dceab7:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881e2b4_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_218dce864:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20882c17e_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_218dce8ca:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20882d889_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_218dce941:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_2088299c8_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_218dce9a7:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_208744e10_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_218dced1a:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_2089cd94b_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218dced81:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20894d7de_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_218dcede7:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20882b623_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_218dcee5d:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881c7e0_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_218dce732:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1594:4"));;
			}
		}
		_match_end_218dce6bb:;
	};
	jule::Ptr<_208799195_Const> _15967_constant = static__2088064cc_NewStr(_15717_name);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53c02_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15967_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15967_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c01cd__Public(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _160429_e, jule::Ptr<_2087303a1_FnCallExpr>* _160444_fc) {
	if (((*((*(_160444_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_160429_e)).ptr(), (*((*((*(_160444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16097_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_218dd78d3:;
			{
				_20899ce48_pushErr((*(_160429_e)).ptr(), (*((*(_160444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218dd8829:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_208746230_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_218dd85b5:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881e2b4_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_218dd862b:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20882c17e_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_218dd8692:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20882d889_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_218dd8708:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_2088299c8_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_218dd8a7c:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_208744e10_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_218dd8ae3:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_2089cd94b_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218dd8b59:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20894d7de_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_218dd8494:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1632:4"));;
			}
		}
		_match_end_218dd842d:;
	};
	jule::Ptr<_208799195_Const> _16347_constant = static__208806213_NewBool(_16097_public);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16347_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16347_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c05c9__Binded(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _164229_e, jule::Ptr<_2087303a1_FnCallExpr>* _164244_fc) {
	if (((*((*(_164244_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_164229_e)).ptr(), (*((*((*(_164244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16477_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_218de2525:;
			{
				_20899ce48_pushErr((*(_164229_e)).ptr(), (*((*(_164244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218de2206:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_208746230_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_218de226c:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881e2b4_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_218de22d3:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_2089cd94b_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218de2349:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20894d7de_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_218de2190:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1666:4"));;
			}
		}
		_match_end_218de2129:;
	};
	jule::Ptr<_208799195_Const> _16687_constant = static__208806213_NewBool(_16477_binded);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16687_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16687_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c09c5__Exceptional(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _167634_e, jule::Ptr<_2087303a1_FnCallExpr>* _167649_fc) {
	if (((*((*(_167649_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_167634_e)).ptr(), (*((*((*(_167649_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_218de821d:;
			{
				goto _match_end_218de88a0;
			}
		}
		else {
			_case_begin_218de8916:;
			{
				_20899ce48_pushErr((*(_167634_e)).ptr(), (*((*(_167649_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_218de88a0:;
	};
	jule::Ptr<_20881e2b4_Fn> _16887_f = (*(_self_))._field_decl.cast_ptr<_20881e2b4_Fn>(&__jule_any_type10);;
	jule::Ptr<_208799195_Const> _16897_constant = static__208806213_NewBool((*(_16887_f))._field_Exceptional);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16897_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16897_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c0dc1__Mutable(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _169730_e, jule::Ptr<_2087303a1_FnCallExpr>* _169745_fc) {
	if (((*((*(_169745_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_169730_e)).ptr(), (*((*((*(_169745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17027_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_218ded751:;
			{
				_20899ce48_pushErr((*(_169730_e)).ptr(), (*((*(_169745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_218ded432:;
			{
				_17027_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881c7e0_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_218ded498:;
			{
				_17027_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_208744e10_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218ded50e:;
			{
				_17027_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20894d7de_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_218ded3bb:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1720:4"));;
			}
		}
		_match_end_218ded355:;
	};
	jule::Ptr<_208799195_Const> _17227_constant = static__208806213_NewBool(_17027_mutable);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17227_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17227_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c12bc__Variadic(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _173031_e, jule::Ptr<_2087303a1_FnCallExpr>* _173046_fc) {
	if (((*((*(_173046_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_173031_e)).ptr(), (*((*((*(_173046_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17357_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_218e04adc:;
			{
				_20899ce48_pushErr((*(_173031_e)).ptr(), (*((*(_173046_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_218e047bd:;
			{
				_17357_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881c7e0_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_218e04757:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1751:4"));;
			}
		}
		_match_end_218e046e1:;
	};
	jule::Ptr<_208799195_Const> _17537_constant = static__208806213_NewBool(_17357_variadic);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17537_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c16b8__Reference(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _176132_e, jule::Ptr<_2087303a1_FnCallExpr>* _176147_fc) {
	if (((*((*(_176147_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_176132_e)).ptr(), (*((*((*(_176147_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17667_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_218e09e22:;
			{
				_20899ce48_pushErr((*(_176132_e)).ptr(), (*((*(_176147_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218e09b03:;
			{
				_17667_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20894d7de_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_218e09b69:;
			{
				_17667_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_20881c7e0_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_218e09a8c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1783:4"));;
			}
		}
		_match_end_218e09a26:;
	};
	jule::Ptr<_208799195_Const> _17857_constant = static__208806213_NewBool(_17667_ref);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17857_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17857_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c1ab4__Params(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _179329_e, jule::Ptr<_2087303a1_FnCallExpr>* _179344_fc) {
	if (((*((*(_179344_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_179329_e)).ptr(), (*((*((*(_179344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_218e0eab4:;
			{
				_20899ce48_pushErr((*(_179329_e)).ptr(), (*((*(_179344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_218e10323:;
			{
				jule::Ptr<_20881e2b4_Fn> _18118_f = (*(_self_))._field_decl.unsafe_cast_ptr<_20881e2b4_Fn>();;
				jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>> _18128_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>::alloc((*(_18118_f))._field_Params.len(), (*(_18118_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088bdc8c_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18118_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e137ee:;
					if (it != expr_end) {
						jule::I64 _18139_i = it - expr->begin();
						jule::Ptr<_20881c7e0_Param> _181316_param = *it;
						{
							_18128_params[_18139_i]=jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(_181316_param, &__jule_any_type17)});
						}
						_iter_next_218e137ee:;
						++it;
						_18139_i++;
						goto _iter_begin_218e137ee;
					}
					_iter_end_218e137ee:;
				};
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bb99e_comptimeDecls>(_2088bb99e_comptimeDecls{._field_decls=_18128_params}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_218e102ac:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1824:4"));;
			}
		}
		_match_end_218e10246:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2088c1eb0__Fields(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _182829_e, jule::Ptr<_2087303a1_FnCallExpr>* _182844_fc) {
	if (((*((*(_182844_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_182829_e)).ptr(), (*((*((*(_182844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>> _18337_fields = static_cast<jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_218e1710a:;
			{
				_20899ce48_pushErr((*(_182829_e)).ptr(), (*((*(_182844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_218e16cdb:;
			{
				jule::Ptr<_20882c17e_Enum> _18468_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_20882c17e_Enum>();;
				_18337_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>::alloc((*(_18468_enm))._field_Items.len(), (*(_18468_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088bdc8c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18468_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e19e87:;
					if (it != expr_end) {
						jule::I64 _18489_i = it - expr->begin();
						jule::Ptr<_20882b623_EnumItem> _184816_item = *it;
						{
							_18337_fields[_18489_i]=jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(_184816_item, &__jule_any_type16)});
						}
						_iter_next_218e19e87:;
						++it;
						_18489_i++;
						goto _iter_begin_218e19e87;
					}
					_iter_end_218e19e87:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218e16d52:;
			{
				jule::Ptr<_208746230_Struct> _18528_s = (*(_self_))._field_decl.unsafe_cast_ptr<_208746230_Struct>();;
				_18337_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>::alloc((*(_18528_s))._field_Fields.len(), (*(_18528_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088bdc8c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18528_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e1bc58:;
					if (it != expr_end) {
						jule::I64 _18549_i = it - expr->begin();
						jule::Ptr<_208744e10_Field> _185416_field = *it;
						{
							_18337_fields[_18549_i]=jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(_185416_field, &__jule_any_type14)});
						}
						_iter_next_218e1bc58:;
						++it;
						_18549_i++;
						goto _iter_begin_218e1bc58;
					}
					_iter_end_218e1bc58:;
				};
			}
		}
		else {
			_case_begin_218e16c75:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1858:4"));;
			}
		}
		_match_end_218e16c0e:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bb99e_comptimeDecls>(_2088bb99e_comptimeDecls{._field_decls=_18337_fields}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c23ab__Statics(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _186930_e, jule::Ptr<_2087303a1_FnCallExpr>* _186945_fc) {
	if (((*((*(_186945_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_186930_e)).ptr(), (*((*((*(_186945_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>> _18747_fields = static_cast<jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_218e205ca:;
			{
				_20899ce48_pushErr((*(_186930_e)).ptr(), (*((*(_186945_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218e202ab:;
			{
				jule::Ptr<_208746230_Struct> _18888_s = (*(_self_))._field_decl.unsafe_cast_ptr<_208746230_Struct>();;
				_18747_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>::alloc((*(_18888_s))._field_Statics.len(), (*(_18888_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088bdc8c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18888_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e23501:;
					if (it != expr_end) {
						jule::I64 _18909_i = it - expr->begin();
						jule::Ptr<_20894d7de_Var> _189016_field = *it;
						{
							_18747_fields[_18909_i]=jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(_189016_field, &__jule_any_type7)});
						}
						_iter_next_218e23501:;
						++it;
						_18909_i++;
						goto _iter_begin_218e23501;
					}
					_iter_end_218e23501:;
				};
			}
		}
		else {
			_case_begin_218e20245:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1894:4"));;
			}
		}
		_match_end_218e201ce:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bb99e_comptimeDecls>(_2088bb99e_comptimeDecls{._field_decls=_18747_fields}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c27a7__Methods(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Ptr<_20899c970_eval>* _190530_e, jule::Ptr<_2087303a1_FnCallExpr>* _190545_fc) {
	if (((*((*(_190545_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_190530_e)).ptr(), (*((*((*(_190545_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>> _19107_methods = static_cast<jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_218e26d73:;
			{
				_20899ce48_pushErr((*(_190530_e)).ptr(), (*((*(_190545_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088be8d6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_218e26a54:;
			{
				jule::Ptr<_2088299c8_Trait> _19238_t = (*(_self_))._field_decl.unsafe_cast_ptr<_2088299c8_Trait>();;
				_19107_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>::alloc((*(_19238_t))._field_Methods.len(), (*(_19238_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088bdc8c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19238_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e29c00:;
					if (it != expr_end) {
						jule::I64 _19259_i = it - expr->begin();
						jule::Ptr<_20881e2b4_Fn> _192516_method = *it;
						{
							_19107_methods[_19259_i]=jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(_192516_method, &__jule_any_type10)});
						}
						_iter_next_218e29c00:;
						++it;
						_19259_i++;
						goto _iter_begin_218e29c00;
					}
					_iter_end_218e29c00:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_218e26aba:;
			{
				jule::Ptr<_208746230_Struct> _19298_s = (*(_self_))._field_decl.unsafe_cast_ptr<_208746230_Struct>();;
				_19107_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088bdc8c_comptimeDecl>>::alloc((*(_19298_s))._field_Methods.len(), (*(_19298_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088bdc8c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19298_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e2b9c1:;
					if (it != expr_end) {
						jule::I64 _19319_i = it - expr->begin();
						jule::Ptr<_20881e2b4_Fn> _193116_method = *it;
						{
							_19107_methods[_19319_i]=jule::new_ptr<_2088bdc8c_comptimeDecl>(_2088bdc8c_comptimeDecl{._field_decl=jule::Any(_193116_method, &__jule_any_type10)});
						}
						_iter_next_218e2b9c1:;
						++it;
						_19319_i++;
						goto _iter_begin_218e2b9c1;
					}
					_iter_end_218e2b9c1:;
				};
			}
		}
		else {
			_case_begin_218e269dd:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1935:4"));;
			}
		}
		_match_end_218e26977:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088bb99e_comptimeDecls>(_2088bb99e_comptimeDecls{._field_decls=_19107_methods}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c2ae8_subIdent(jule::Ptr<_2088bdc8c_comptimeDecl> _self_, jule::Str* _194626_ident) {
	{
		auto &_match_expr{ (*(_194626_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_218e2d154:;
			{
				jule::Ptr<_208822372_FnIns> _19498_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e2e81a, jule::Ptr<__jule_anon_218e2e81a_ctx>::make(__jule_anon_218e2e81a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e2e81a_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19498_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_218e2d1ba:;
			{
				jule::Ptr<_208822372_FnIns> _19568_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e3160d, jule::Ptr<__jule_anon_218e3160d_ctx>::make(__jule_anon_218e3160d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e3160d_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19568_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_218e2d231:;
			{
				jule::Ptr<_208822372_FnIns> _19638_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e33401, jule::Ptr<__jule_anon_218e33401_ctx>::make(__jule_anon_218e33401_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e33401_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19638_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_218e2d2a8:;
			{
				jule::Ptr<_208822372_FnIns> _19708_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e351e4, jule::Ptr<__jule_anon_218e351e4_ctx>::make(__jule_anon_218e351e4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e351e4_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19708_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_218e2d473:;
			{
				jule::Ptr<_208822372_FnIns> _19778_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e36ed7, jule::Ptr<__jule_anon_218e36ed7_ctx>::make(__jule_anon_218e36ed7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e36ed7_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_218e2d4d9:;
			{
				jule::Ptr<_208822372_FnIns> _19848_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e38cca, jule::Ptr<__jule_anon_218e38cca_ctx>::make(__jule_anon_218e38cca_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e38cca_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19848_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_218e2d550:;
			{
				jule::Ptr<_208822372_FnIns> _19918_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e3aabd, jule::Ptr<__jule_anon_218e3aabd_ctx>::make(__jule_anon_218e3aabd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e3aabd_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19918_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_218e2d5c7:;
			{
				jule::Ptr<_208822372_FnIns> _19988_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e3c8b1, jule::Ptr<__jule_anon_218e3c8b1_ctx>::make(__jule_anon_218e3c8b1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e3c8b1_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_19988_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_218e2d64e:;
			{
				jule::Ptr<_208822372_FnIns> _20058_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e3e7e7, jule::Ptr<__jule_anon_218e3e7e7_ctx>::make(__jule_anon_218e3e7e7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e3e7e7_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_20058_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_218e2d73c:;
			{
				jule::Ptr<_208822372_FnIns> _20128_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e415da, jule::Ptr<__jule_anon_218e415da_ctx>::make(__jule_anon_218e415da_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e415da_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_20128_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_218e2d7b4:;
			{
				jule::Ptr<_208822372_FnIns> _20198_method = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>((void*)__jule_anon_218e433cd, jule::Ptr<__jule_anon_218e433cd_ctx>::make(__jule_anon_218e433cd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e433cd_ctx_handler), ._field_reloaded=false});;
				return _2088c327a_buildAsComptimeMethodData(&(_20198_method));;
			}
		}
		else {
			_case_begin_218e2cdbd:;
			{
				return nullptr;;
			}
		}
		_match_end_218e2ce9a:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*> _2088c5aa7_readyFn(jule::Ptr<_2088c5678_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*>((void*)__jule_anon_218e4e395, jule::Ptr<__jule_anon_218e4e395_ctx>::make(__jule_anon_218e4e395_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_218e4e395_ctx_handler);;
}



inline jule::Bool _2088c5d3d_readyFi(jule::Ptr<_2088c5678_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _208938dc3_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _2088c5aa7_readyFn(_self_)));;
}



inline jule::Bool _2088c60c4_readySi(jule::Ptr<_2088c5678_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _2088c5aa7_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _2088c635a_ready(jule::Ptr<_2088c5678_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _2088c5d3d_readyFi(_self_);;
	};
	return _2088c60c4_readySi(_self_);;
}



inline jule::Bool _2088c65e1_check(jule::Ptr<_2088c5678_constraintChecker> _self_) {
	if ((!(_2088c635a_ready(_self_)))) {
		return false;;
	};
	_julec_label_218e5ea7b:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218e60032:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_2089ccc7a_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_218e60032;
				};
				{
					auto expr = &((*(_12015_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e612ca:;
					if (it != expr_end) {
						jule::Ptr<_2089ce661_Type> _12416_c2 = *it;
						{
							jule::Ptr<_2089d846c_Prim> _1259_prim = _2089d2774_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _2089d90c7_IsConstraint(_1259_prim))) {
								if (_2088c6d3e_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*(_12015_g))._field_Type))) {
									goto _iter_next_218e60032;
								};
								goto _iter_next_218e612ca;
							};
							if (_2089ced9d_Equal(_12416_c2, (*(_12015_g))._field_Type)) {
								goto _iter_next_218e60032;
							};
						}
						_iter_next_218e612ca:;
						++it;
						goto _iter_begin_218e612ca;
					}
					_iter_end_218e612ca:;
				};
				_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_2088c6976_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_218e60032:;
			++it;
			_1208_i++;
			goto _iter_begin_218e60032;
		}
		_iter_end_218e60032:;
	};
	return true;;
}







inline jule::Bool _2088c7d73_IsTraitImpl(_2088c7977_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _2088c8109_IsStructImpl(_2088c7977_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}








inline jule::Bool _2088ca1d8_exprPart_eq(_2088ca1d8_exprPart *_self_, _2088ca1d8_exprPart _other_) {
	return 
		(_self_->_field_data == _other_._field_data) &&
		(_self_->_field_expr == _self_->_field_expr);
}










inline jule::Bool _2088cad43_If_eq(_2088cad43_If *_self_, _2088cad43_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _2088cb1b7_Else_eq(_2088cb1b7_Else *_self_, _2088cb1b7_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _2088cb85a_InfIter_eq(_2088cb85a_InfIter *_self_, _2088cb85a_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _2088cbd11_WhileIter_eq(_2088cbd11_WhileIter *_self_, _2088cbd11_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _2088cc2b7_IsWhileNext(_2088cbd11_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _2088cc7e5_RangeIter_eq(_2088cc7e5_RangeIter *_self_, _2088cc7e5_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _2088ccae2_ContSt_eq(_2088ccae2_ContSt *_self_, _2088ccae2_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _2088ccebb_BreakSt_eq(_2088ccebb_BreakSt *_self_, _2088ccebb_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _2088cd472_Label_eq(_2088cd472_Label *_self_, _2088cd472_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _2088cdad2_GotoSt_eq(_2088cdad2_GotoSt *_self_, _2088cdad2_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _2088cdeab_Postfix_eq(_2088cdeab_Postfix *_self_, _2088cdeab_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _2088ce462_Assign_eq(_2088ce462_Assign *_self_, _2088ce462_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _2088d1453_FallSt_eq(_2088d1453_FallSt *_self_, _2088d1453_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _2088d17e9_RetSt_eq(_2088d17e9_RetSt *_self_, _2088d17e9_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _2088d1ca0_scopeLabel_eq(_2088d1ca0_scopeLabel *_self_, _2088d1ca0_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _2088d2179_result_eq(_2088d2179_result *_self_, _2088d2179_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _2088d3169_scopeChecker_eq(_2088d3169_scopeChecker *_self_, _2088d3169_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_20890d040_ImportInfo> _2088d3642_SelectPackage(_2088d3169_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _24029_selector) {
	return _20892ac2d_SelectPackage((*(_self_))._field_s.ptr(), _24029_selector);;
}



inline jule::Ptr<_20894d7de_Var> _2088d3a3d_FindVar(_2088d3169_scopeChecker* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	if ((!(_25135_binded))) {
		jule::Ptr<_20894d7de_Var> _2538_v = _2088d6da4_findVar(_self_, _25123_ident);;
		if ((_2538_v != nullptr)) {
			return _2538_v;;
		};
	};
	return _20892b129_FindVar((*(_self_))._field_s.ptr(), _25123_ident, _25135_binded);;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _2088d3e39_FindTypeAlias(_2088d3169_scopeChecker* _self_, jule::Str _26829_ident, jule::Bool _26841_binded) {
	;
	jule::Ptr<_2089cd94b_TypeAlias> _2717_ta = _2088285ba_findTypeAlias((*(_self_))._field_table.ptr(), &(_26829_ident), _26841_binded, true);;
	if ((_2717_ta != nullptr)) {
		return _2717_ta;;
	};
	jule::Ptr<_2088d3169_scopeChecker> _2767_parent = (*(_self_))._field_parent;;
	while ((_2767_parent != nullptr)) {
		{
			_2717_ta=_2088285ba_findTypeAlias((*(_2767_parent))._field_table, &(_26829_ident), _26841_binded, true);
			if ((_2717_ta != nullptr)) {
				return _2717_ta;;
			};
			_2767_parent=(*(_2767_parent))._field_parent;
		}
	_iter_next_218ea3e22:;
	}
	_iter_end_218ea3e22:;;
	return _20892b525_FindTypeAlias((*(_self_))._field_s.ptr(), _26829_ident, _26841_binded);;
}



inline jule::Ptr<_208746230_Struct> _2088d4335_FindStruct(_2088d3169_scopeChecker* _self_, jule::Str _29326_ident, jule::Bool _29338_binded) {
	return _20892b921_FindStruct((*(_self_))._field_s.ptr(), _29326_ident, _29338_binded);;
}



inline jule::Ptr<_20881e2b4_Fn> _2088d4731_FindFn(_2088d3169_scopeChecker* _self_, jule::Str _30222_ident, jule::Bool _30234_binded) {
	return _20892bd1c_FindFn((*(_self_))._field_s.ptr(), _30222_ident, _30234_binded);;
}



inline jule::Ptr<_2088299c8_Trait> _2088d4a72_FindTrait(_2088d3169_scopeChecker* _self_, jule::Str _31125_ident) {
	return _20892c15d_FindTrait((*(_self_))._field_s.ptr(), _31125_ident);;
}



inline jule::Ptr<_20882c17e_Enum> _2088d4db3_FindEnum(_2088d3169_scopeChecker* _self_, jule::Str _32024_ident) {
	return _20892c49e_FindEnum((*(_self_))._field_s.ptr(), _32024_ident);;
}



inline jule::Ptr<_20882d889_TypeEnum> _2088d5204_FindTypeEnum(_2088d3169_scopeChecker* _self_, jule::Str _32928_ident) {
	return _20892c7e0_FindTypeEnum((*(_self_))._field_s.ptr(), _32928_ident);;
}



inline jule::Bool _2088d5556_isUnsafe(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	jule::Ptr<_2088d3169_scopeChecker> _3377_scope = _self_;;
	_julec_label_218ea9103:;
	if ((*((*(_3377_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_3377_scope))._field_parent != nullptr)) {
		_3377_scope=(*_3377_scope.alloc)._field_parent;
		goto _julec_label_218ea9103;
	};
	return false;;
}



inline jule::Bool _2088d57dc_isRoot(_2088d3169_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _2088d59da_stop(_2088d3169_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _2088d5c71_stopped(_2088d3169_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _2088d6007_isDeferred(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	jule::Ptr<_2088d3169_scopeChecker> _3707_scope = _self_;;
	_julec_label_218eabac8:;
	if ((*((*(_3707_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_3707_scope))._field_parent != nullptr)) {
		_3707_scope=(*_3707_scope.alloc)._field_parent;
		goto _julec_label_218eabac8;
	};
	return false;;
}



inline void _2088d62b0_pushCaptured(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20894d7de_Var>* _39134_v) {
	jule::Ptr<_2088d3169_scopeChecker> _3927_sc = _self_;;
	for (;;) {
		{
			if (((*(_3927_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_3927_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218eae1b3:;
					if (it != expr_end) {
						jule::Ptr<_20894d7de_Var> _39512_cv = *it;
						{
							if ((_39512_cv == (*(_39134_v)))) {
								goto _julec_label_218eb00d7;
							};
						}
						_iter_next_218eae1b3:;
						++it;
						goto _iter_begin_218eae1b3;
					}
					_iter_end_218eae1b3:;
				};
				(*(*(_3927_sc))._field_captured.alloc)=jule::append((*(*(_3927_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_39134_v)); __jule_collection; }));
				_julec_label_218eb00d7:;
			};
			if (((*(_3927_sc))._field_parent == nullptr)) {
				goto _iter_end_218ead459;
			};
			_3927_sc=(*(_3927_sc))._field_parent;
			if ((!(_2089cbc13_isVarCaptured(_3927_sc, _3927_sc, (*(_39134_v)))))) {
				goto _iter_end_218ead459;
			};
		}
	_iter_next_218ead459:;
	}
	_iter_end_218ead459:;;
}



inline jule::Ptr<_2088d3169_scopeChecker> _2088d6546_getRoot(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	jule::Ptr<_2088d3169_scopeChecker> _4167_root = _self_;;
	while ((((*(_4167_root))._field_parent != nullptr) && ((*_4167_root.alloc)._field_owner == nullptr))) {
		{
			_4167_root=(*(_4167_root))._field_parent;
		}
	_iter_next_218eb0c97:;
	}
	_iter_end_218eb0c97:;;
	return _4167_root;;
}



inline jule::Ptr<_2088d3169_scopeChecker> _2088d67cc_getHardRoot(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	jule::Ptr<_2088d3169_scopeChecker> _4267_root = _self_;;
	while (((*(_4267_root))._field_parent != nullptr)) {
		{
			_4267_root=(*(_4267_root))._field_parent;
		}
	_iter_next_218eb233c:;
	}
	_iter_end_218eb233c:;;
	return _4267_root;;
}



inline jule::Ptr<_2088eaeb7_ReferenceStack> _2088d6a63_getOwnerRefers(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	return (*((*(_2088d67cc_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_20894d7de_Var> _2088d6da4_findVar(_2088d3169_scopeChecker* _self_, jule::Str _43823_ident) {
	;
	;
	jule::Ptr<_20894d7de_Var> _4417_v = _208828114_findVar((*(_self_))._field_table.ptr(), &(_43823_ident), false, true);;
	if ((_4417_v != nullptr)) {
		return _4417_v;;
	};
	jule::Ptr<_2088d3169_scopeChecker> _4457_parent = (*(_self_))._field_parent;;
	while ((_4457_parent != nullptr)) {
		{
			_4417_v=_208828114_findVar((*(_4457_parent))._field_table, &(_43823_ident), false, true);
			if ((_4417_v != nullptr)) {
				return _4417_v;;
			};
			_4457_parent=(*(_4457_parent))._field_parent;
		}
	_iter_next_218eb531d:;
	}
	_iter_end_218eb531d:;;
	return nullptr;;
}



inline jule::Ptr<_2088cd472_Label> _2088d71e5_findLabel(_2088d3169_scopeChecker* _self_, jule::Str* _45926_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218eb6e24:;
		if (it != expr_end) {
			jule::Any _46015_st = *it;
			{
				{
					auto &_match_expr{ _46015_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_218eb7793:;
						{
							jule::Ptr<_2088cd472_Label> _4639_label = _46015_st.unsafe_cast_ptr<_2088cd472_Label>();;
							if (((*(_4639_label))._field_Ident == (*(_45926_ident)))) {
								return _4639_label;;
							};
						}
					}
					_match_end_218eb772c:;
				};
			}
			_iter_next_218eb6e24:;
			++it;
			goto _iter_begin_218eb6e24;
		}
		_iter_end_218eb6e24:;
	};
	return nullptr;;
}



inline jule::Ptr<_2088d1ca0_scopeLabel> _2088d7536_findLabelScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Str* _47532_ident) {
	jule::Ptr<_2088d1ca0_scopeLabel> _4767_label = _2088d7877_findLabelAll(_self_.ptr(), _47532_ident);;
	if (((_4767_label != nullptr) && ((*((*_4767_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _4767_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_2088d1ca0_scopeLabel> _2088d7877_findLabelAll(_2088d3169_scopeChecker* _self_, jule::Str* _48629_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218ebb544:;
		if (it != expr_end) {
			jule::Ptr<_2088d1ca0_scopeLabel> _48715_lbl = *it;
			{
				if (((*((*(_48715_lbl))._field_node))._field_Ident == (*(_48629_ident)))) {
					return _48715_lbl;;
				};
			}
			_iter_next_218ebb544:;
			++it;
			goto _iter_begin_218ebb544;
		}
		_iter_end_218ebb544:;
	};
	return nullptr;;
}



inline jule::Bool _2088d7c73_isDuplicatedIdent(_2088d3169_scopeChecker* _self_, jule::Uintptr _49833_itself, jule::Str* _49851_ident) {
	jule::Ptr<_20894d7de_Var> _4993_v = _2088d3a3d_FindVar(_self_, (*(_49851_ident)), false);;
	if (((_4993_v != nullptr) && (static_cast<jule::Uintptr>(_4993_v) != _49833_itself))) {
		if (((*_4993_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_4993_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_20892cbec_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_2089cd94b_TypeAlias> _5073_ta = _2088d3e39_FindTypeAlias(_self_, (*(_49851_ident)), false);;
	if (((_5073_ta != nullptr) && (static_cast<jule::Uintptr>(_5073_ta) != _49833_itself))) {
		if (((*_5073_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_5073_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_20892cbec_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _2088d802b_checkVarDecl(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873a28a_VarDecl> _51833_decl) {
	jule::Ptr<_20894d7de_Var> _5197_v = _208901374_buildVar(_51833_decl);;
	(*(_5197_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5197_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5197_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_2088d7c73_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_5197_v), &((*_5197_v.alloc)._field_Ident))) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_5197_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_5197_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_2088d59da_stop(_self_);
		return;;
	};
	_208941b45_checkVarDecl((*_self_.alloc)._field_s, &(_5197_v), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));
	if (((!(_206596439_IsTypeInferred(_5197_v))) && (((*_5197_v.alloc)._field_TypeSym == nullptr) || ((*((*_5197_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_2089453da_evalVarValue((*(_self_))._field_s, &(_5197_v), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));
	if (((!(_2065961a3_IsInitialized(_5197_v))) || ((*((*_5197_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_2088de296_removeInteriorMutRisk(_self_, &((*((*_5197_v.alloc)._field_Value))._field_Data));
	_208945077_checkVarValue((*(_self_))._field_s, &(_5197_v));
}



inline void _2088d82d4_checkTypeAlias(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _54936_ta) {
	if (_2088d7c73_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_54936_ta))), &((*((*(_54936_ta))))._field_Ident))) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_54936_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_54936_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_2088d59da_stop(_self_);
		return;;
	};
	_20893abc7_checkTypeAliasDecl((*(_self_))._field_s, _54936_ta, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_54936_ta)); __jule_collection; }));
	if (((*((*((*(_54936_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_2088d59da_stop(_self_);
	};
}



inline void _2088d858c_checkTypeAliasDecl(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873e019_TypeAliasDecl> _56539_decl) {
	jule::Ptr<_2089cd94b_TypeAlias> _5667_ta = _2088ece53_buildTypeAlias(_56539_decl);;
	_2088d82d4_checkTypeAlias(_self_, &(_5667_ta));
}



inline jule::Ptr<_2088ca969_Scope> _2088d8823_getChild(_2088d3169_scopeChecker* _self_) {
	return jule::new_ptr<_2088ca969_Scope>(_2088ca969_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _2088d8c41_checkChildSsc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _57635_tree, jule::Ptr<_2088ca969_Scope>* _57663_s, jule::Ptr<_2088d3169_scopeChecker>* _57679_ssc) {
	(*((*(_57663_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_57663_s))))._field_ChildIndex=(*((*(_57679_ssc))))._field_childIndex;
	(*((*(_57679_ssc))))._field_parent=_self_;
	_2088e5236_check((*(_57679_ssc)), _57635_tree, _57663_s);
}



inline jule::Ptr<_2088ca969_Scope> _2088d913c_checkChildSc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _58334_tree, jule::Ptr<_2088d3169_scopeChecker>* _58362_ssc) {
	jule::Ptr<_2088ca969_Scope> _5847_s = _2088d8823_getChild(_self_.ptr());;
	_2088d8c41_checkChildSsc(_self_, _58334_tree, &(_5847_s), _58362_ssc);
	return _5847_s;;
}



inline jule::Ptr<_2088ca969_Scope> _2088d947d_checkChild(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _58932_tree) {
	jule::Ptr<_2088d3169_scopeChecker> _5907_ssc = _2088e54bc_newChildChecker(_self_);;
	return _2088d913c_checkChildSc(_self_, _58932_tree, &(_5907_ssc));;
}



inline void _2088d9736_checkAnonScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree> _59435_tree) {
	jule::Ptr<_2088ca969_Scope> _5957_s = _2088d947d_checkChild(_self_, &(_59435_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5957_s, &__jule_any_type19); __jule_collection; }));
}



inline void _2088d9a99_processErrorCall(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20881a139_BuiltinErrorCallExpr>* _59938_m, jule::Ptr<_208711827_Token> _59964_err) {
	if (_2088d6007_isDeferred(_self_)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), _59964_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2088d3169_scopeChecker> _6047_root = _2088d6546_getRoot(_self_);;
	if ((!((*((*((*(_6047_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), _59964_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_59938_m))))._field_Func=(*(_6047_root))._field_owner;
}



inline void _2088d9d52_checkExpr(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20872b677_Expr> _61230_expr) {
	jule::Ptr<_20899c970_eval> _6137_eval = _20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
	(*(_6137_eval))._field_target._field_ignored=true;
	jule::Ptr<_20899a9a1_Data> _6157_d = _2089bc5d8_evalExpr(_6137_eval, _61230_expr);;
	if (((_6157_d == nullptr) || ((*(_6157_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6157_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_218edd621:;
			{
				jule::Ptr<_20881a139_BuiltinErrorCallExpr> _6248_m = (*(_6157_d))._field_Model.unsafe_cast_ptr<_20881a139_BuiltinErrorCallExpr>();;
				_2088d9a99_processErrorCall(_self_, &(_6248_m), (*(_61230_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6157_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_218eddc3c:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6157_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_218eddbc6:;
			{
				_20892d659_pushErr((*(_self_))._field_s, (*(_61230_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_218eddb60:;
	};
}



inline jule::Ptr<_2088cad43_If> _2088da193_checkIf(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873cd70_If> _64228_i) {
	jule::Ptr<_2088ca969_Scope> _6437_s = _2088d947d_checkChild(_self_, &((*(_64228_i))._field_Scope));;
	jule::Ptr<_20899a9a1_Data> _6457_d = _2089bc5d8_evalExpr(_20893552e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)), (*_64228_i.alloc)._field_Expr);;
	if ((_6457_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2089d846c_Prim> _6507_prim = _2089d2774_Prim((*(_6457_d))._field_Type.ptr());;
	if (((_6507_prim == nullptr) || (!(_2089db6a1_IsBool(_6507_prim.ptr()))))) {
		_20892d659_pushErr((*(_self_))._field_s, (*((*_64228_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2088cad43_If>(_2088cad43_If{._field_Expr=(*_6457_d.alloc)._field_Model, ._field_Scope=_6437_s});;
}



inline jule::Ptr<_2088cb1b7_Else> _2088da4d4_checkElse(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873d249_Else> _66230_e) {
	return jule::new_ptr<_2088cb1b7_Else>(_2088cb1b7_Else{._field_Scope=_2088d947d_checkChild(_self_, &((*(_66230_e))._field_Scope))});;
}



inline void _2088da78c_checkConditional(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873d700_Conditional> _66837_conditional) {
	jule::Ptr<_2088cb55d_Conditional> _6697_c = jule::new_ptr<_2088cb55d_Conditional>(_2088cb55d_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_2088cad43_If>>(nullptr), ._field_Default=jule::Ptr<_2088cb1b7_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6697_c, &__jule_any_type31); __jule_collection; }));
	(*_6697_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cad43_If>>::alloc(0LL, ((*(_66837_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088cad43_If>(nullptr); __jule_collection; });
	(*_6697_c.alloc)._field_Elifs=jule::append((*_6697_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cad43_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2088da193_checkIf(_self_, (*_66837_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_66837_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219015db8:;
		if (it != expr_end) {
			jule::Ptr<_20873cd70_If> _67515_elif = *it;
			{
				(*_6697_c.alloc)._field_Elifs=jule::append((*_6697_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cad43_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2088da193_checkIf(_self_, _67515_elif); __jule_collection; }));
			}
			_iter_next_219015db8:;
			++it;
			goto _iter_begin_219015db8;
		}
		_iter_end_219015db8:;
	};
	if (((*_66837_conditional.alloc)._field_Default != nullptr)) {
		(*_6697_c.alloc)._field_Default=_2088da4d4_checkElse(_self_, (*_66837_conditional.alloc)._field_Default);
	};
}



inline void _2088dac65_checkIterScopeSsc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _68434_it, jule::Ptr<_208737441_ScopeTree> _68451_tree, jule::Ptr<_2088ca969_Scope>* _68479_s, jule::Ptr<_2088d3169_scopeChecker> _68494_ssc) {
	(*(_68494_ssc))._field_it=_68434_it;
	_2088d8c41_checkChildSsc(_self_, &(_68451_tree), _68479_s, &(_68494_ssc));
}



inline jule::Ptr<_2088ca969_Scope> _2088db21b_checkIterScopeSc(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _68933_it, jule::Ptr<_208737441_ScopeTree> _68950_tree, jule::Ptr<_2088d3169_scopeChecker> _68977_ssc) {
	jule::Ptr<_2088ca969_Scope> _6907_scope = _2088d8823_getChild(_self_.ptr());;
	_2088dac65_checkIterScopeSsc(_self_, _68933_it, _68950_tree, &(_6907_scope), _68977_ssc);
	return _6907_scope;;
}



inline jule::Ptr<_2088ca969_Scope> _2088db617_checkIterScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _69531_it, jule::Ptr<_208737441_ScopeTree>* _69549_tree) {
	jule::Ptr<_2088d3169_scopeChecker> _6967_ssc = _2088e54bc_newChildChecker(_self_);;
	return _2088db21b_checkIterScopeSc(_self_, _69531_it, (*(_69549_tree)), _6967_ssc);;
}



inline void _2088db8c0_checkInfIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _70034_it) {
	jule::Ptr<_2088cb85a_InfIter> _7017_kind = jule::new_ptr<_2088cb85a_InfIter>(_2088cb85a_InfIter{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7017_kind, &__jule_any_type32); __jule_collection; }));
	(*_7017_kind.alloc)._field_Scope=_2088db617_checkIterScope(_self_, static_cast<jule::Uintptr>(_7017_kind), &((*((*(_70034_it))))._field_Scope));
}



inline void _2088dbb78_checkWhileIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _70636_it) {
	jule::Ptr<_20873b70e_WhileKind> _7077_wh = (*((*(_70636_it))))._field_Kind.cast_ptr<_20873b70e_WhileKind>(&__jule_any_type33);;
	if ((((*(_7077_wh))._field_Expr == nullptr) && ((*_7077_wh.alloc)._field_Next == nullptr))) {
		_2088db8c0_checkInfIter(_self_, _70636_it);
		return;;
	};
	jule::Ptr<_2088cbd11_WhileIter> _7137_kind = jule::new_ptr<_2088cbd11_WhileIter>(_2088cbd11_WhileIter{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7137_kind, &__jule_any_type34); __jule_collection; }));
	(*_7137_kind.alloc)._field_Scope=_2088db617_checkIterScope(_self_, static_cast<jule::Uintptr>(_7137_kind), &((*((*(_70636_it))))._field_Scope));
	if (((*(_7077_wh))._field_Expr != nullptr)) {
		jule::Ptr<_20899a9a1_Data> _7188_d = _2089bc5d8_evalExpr(_20893552e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)), (*_7077_wh.alloc)._field_Expr);;
		if ((_7188_d == nullptr)) {
			return;;
		};
		jule::Ptr<_2089d846c_Prim> _7234_prim = _2089d2774_Prim((*(_7188_d))._field_Type.ptr());;
		if ((_7234_prim == nullptr)) {
			_20892d659_pushErr((*(_self_))._field_s, (*((*(_70636_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_2089db6a1_IsBool(_7234_prim.ptr())))) {
			_20892d659_pushErr((*(_self_))._field_s, (*((*(_70636_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_7137_kind.alloc)._field_Expr=(*_7188_d.alloc)._field_Model;
	};
	if (_20873baa5_IsWhileNext(_7077_wh.ptr())) {
		if ((!(_2088e78ed_isValidAstStForNextSt(&((*_7077_wh.alloc)._field_Next))))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_7077_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _7434_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_2088e3d6c_checkNode(_self_, &((*_7077_wh.alloc)._field_Next));
		if ((_7434_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _7469_st = (*((*(_self_))._field_scope))._field_Stmts[_7434_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _7434_n);;
			if ((!(_2088e7bb7_isValidStForNextSt(&(_7469_st))))) {
				_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_7077_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_7137_kind.alloc)._field_Next=_7469_st;
		};
	};
}



inline void _2088dc096_checkComptimeRangeIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _75644_it, jule::Ptr<_2088cc7e5_RangeIter>* _75665_kind, jule::Ptr<_20899a9a1_Data>* _75688_d) {
	if (((*((*(_75665_kind))))._field_KeyA != nullptr)) {
		if (((!(_20892cbec_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2088d7c73_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_20892d659_pushErr((*(_self_))._field_s, (*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_75665_kind))))._field_KeyB != nullptr)) {
		if (((!(_20892cbec_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2088d7c73_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_20892d659_pushErr((*(_self_))._field_s, (*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_20873c116_RangeKind> _7707_rang = (*((*(_75644_it))))._field_Kind.cast_ptr<_20873c116_RangeKind>(&__jule_any_type35);;
	_2088e5ab6_makeComptimeRange(_75688_d);
	if ((*((*(_75688_d))))._field_Decl) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_7707_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_75688_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_208994c31_rangeChecker _7777_rc = _208994c31_rangeChecker{._field_sc=_self_, ._field_rang=_7707_rang, ._field_Kind=(*(_75665_kind)), ._field_d=(*(_75688_d))};;
	jule::Bool _7833_ok = _208996c77_check(&_7777_rc);;
	if ((!(_7833_ok))) {
		return;;
	};
	jule::Ptr<_20889e696_comptimeRange> _7887_comptime = _2089d5da4_comptimeRange((*((*(_75688_d))))._field_Type.ptr());;
	((_20889e476_comptimeRangeKindMptrData*)(*(_7887_comptime))._field_kind.safe_type())->_20889db6d_ready((*(_7887_comptime))._field_kind.data, &((*((*(_75665_kind))))._field_KeyA), &((*((*(_75665_kind))))._field_KeyB));
	jule::I64 _7907_i = 0LL;;
	jule::I64 _7913_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_7907_i < ((_20889e476_comptimeRangeKindMptrData*)(*_7887_comptime.alloc)._field_kind.safe_type())->_20889e322_len((*_7887_comptime.alloc)._field_kind.data)); (_7907_i)++) {
		{
			jule::Ptr<_2088d3169_scopeChecker> _7938_ssc = _2088e54bc_newChildChecker(_self_);;
			jule::Ptr<_2088ca969_Scope> _7948_scope = _2088d8823_getChild(_self_);;
			if (((*((*(_75665_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Scope=_7948_scope;
				(*((*(_7938_ssc))._field_table))._field_Vars=jule::append((*(*(_7938_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_75665_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_75665_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Scope=_7948_scope;
				(*((*(_7938_ssc))._field_table))._field_Vars=jule::append((*(*(_7938_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_75665_kind))))._field_KeyB; __jule_collection; }));
			};
			((_20889e476_comptimeRangeKindMptrData*)(*_7887_comptime.alloc)._field_kind.safe_type())->_20889e08b_step((*_7887_comptime.alloc)._field_kind.data, _7907_i, &((*((*(_75665_kind))))._field_KeyA), &((*((*(_75665_kind))))._field_KeyB));
			_2088d8c41_checkChildSsc(_self_, &((*((*(_75644_it))))._field_Scope), &(_7948_scope), &(_7938_ssc));
			if ((_7913_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_219043a61;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7948_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_219043a61:;
	}
	_iter_end_219043a61:;;
}



inline void _2088dc34e_checkRangeIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter>* _81336_it) {
	jule::Ptr<_20873c116_RangeKind> _8147_rang = (*((*(_81336_it))))._field_Kind.cast_ptr<_20873c116_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_20899c970_eval> _8207_eval = _20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
	(*(_8207_eval))._field_target._field_mutable=true;
	jule::Ptr<_20899a9a1_Data> _8237_d = _2089bc297_evalExpr1(_8207_eval, (*(_8147_rang))._field_Expr);;
	if ((_8237_d == nullptr)) {
		return;;
	};
	jule::Ptr<_2088cc7e5_RangeIter> _8287_kind = jule::new_ptr<_2088cc7e5_RangeIter>(_2088cc7e5_RangeIter{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Expr=_8237_d, ._field_KeyA=jule::Ptr<_20894d7de_Var>(nullptr), ._field_KeyB=jule::Ptr<_20894d7de_Var>(nullptr)});;
	if ((*((*(_81336_it))))._field_Comptime) {
		_2088dc096_checkComptimeRangeIter(_self_, _81336_it, &(_8287_kind), &(_8237_d));
		return;;
	};
	if (_2089d4ab7_comptime((*(_8237_d))._field_Type.ptr())) {
		_20892d659_pushErr((*(_self_))._field_s, (*((*_8147_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_208994c31_rangeChecker _8427_rc = _208994c31_rangeChecker{._field_sc=_self_, ._field_rang=_8147_rang, ._field_Kind=_8287_kind, ._field_d=_8237_d};;
	jule::Bool _8483_ok = _208996c77_check(&_8427_rc);;
	if ((!(_8483_ok))) {
		return;;
	};
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8287_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_2088d3169_scopeChecker> _8557_ssc = _2088e54bc_newChildChecker(_self_);;
	jule::Ptr<_2088ca969_Scope> _8567_scope = _2088d8823_getChild(_self_);;
	if (((*(_8287_kind))._field_KeyA != nullptr)) {
		if (((!(_20892cbec_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _2088d7c73_isDuplicatedIdent(_self_, 0LLU, &((*(*(_8287_kind))._field_KeyA.alloc)._field_Ident)))) {
			_20892d659_pushErr((*(_self_))._field_s, (*(*(_8287_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_8287_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_8287_kind))._field_KeyA.alloc)._field_Scope=_8567_scope;
		(*((*(_8557_ssc))._field_table))._field_Vars=jule::append((*(*(_8557_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8287_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*(_8287_kind))._field_KeyB != nullptr)) {
		if (((!(_20892cbec_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _2088d7c73_isDuplicatedIdent(_self_, 0LLU, &((*(*(_8287_kind))._field_KeyB.alloc)._field_Ident)))) {
			_20892d659_pushErr((*(_self_))._field_s, (*(*(_8287_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_8287_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_8287_kind))._field_KeyB.alloc)._field_Scope=_8567_scope;
		(*((*(_8557_ssc))._field_table))._field_Vars=jule::append((*(*(_8557_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8287_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_2088dac65_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_8287_kind), (*((*(_81336_it))))._field_Scope, &(_8567_scope), _8557_ssc);
	(*(_8287_kind))._field_Scope=_8567_scope;
}



inline void _2088dc607_checkIter(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873add4_Iter> _88030_it) {
	if (_20873b27a_IsInf(_88030_it.ptr())) {
		if ((*_88030_it.alloc)._field_Comptime) {
			_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_88030_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_2088db8c0_checkInfIter(_self_, &(_88030_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_88030_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_21905ed24:;
			{
				if ((*(_88030_it))._field_Comptime) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_88030_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_2088dbb78_checkWhileIter(_self_, &(_88030_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_219061001:;
			{
				_2088dc34e_checkRangeIter(_self_, &(_88030_it));
			}
		}
		else {
			_case_begin_219060e68:;
			{
				jule::println(_2175dc518_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_219060e02:;
	};
}



inline jule::Bool _2088dc948_checkValidContLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _90436_it) {
	jule::Ptr<_2088d3169_scopeChecker> _9057_scope = _self_;;
	_julec_label_219064862:;
	if (((*(_9057_scope))._field_it == _90436_it)) {
		return true;;
	};
	if (((*(_9057_scope))._field_parent != nullptr)) {
		_9057_scope=(*_9057_scope.alloc)._field_parent;
		goto _julec_label_219064862;
	};
	return false;;
}



inline jule::Bool _2088dcc89_checkValidBreakLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Uintptr _92037_ptr) {
	jule::Ptr<_2088d3169_scopeChecker> _9217_scope = _self_;;
	_julec_label_2190689cb:;
	if (((*(_9217_scope))._field_it == _92037_ptr)) {
		return true;;
	};
	if (((*(_9217_scope))._field_cse != 0LLU)) {
		jule::Uintptr _9294_mtch = static_cast<jule::Uintptr>((*(((_2088d0c5a_Case*)((*_9217_scope.alloc)._field_cse))))._field_Owner);;
		if ((_9294_mtch == _92037_ptr)) {
			return true;;
		};
	};
	if (((*(_9217_scope))._field_parent != nullptr)) {
		_9217_scope=(*_9217_scope.alloc)._field_parent;
		goto _julec_label_2190689cb;
	};
	return false;;
}



inline jule::Ptr<_2088ccae2_ContSt> _2088dd0ca_checkContValidScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c8b9_ContSt> _94336_c) {
	if (_2088d6007_isDeferred(_self_)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_94336_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_94336_c))._field_Label != nullptr)) {
		return jule::new_ptr<_2088ccae2_ContSt>(_2088ccae2_ContSt{._field_It=0});;
	};
	jule::Ptr<_2088d3169_scopeChecker> _9537_scope = _self_;;
	_julec_label_219068ab9:;
	{
		
		if (((((*(_9537_scope))._field_it == 0LLU) && ((*_9537_scope.alloc)._field_parent != nullptr)) && ((*_9537_scope.alloc)._field_owner == nullptr))) {
			_case_begin_21906e086:;
			{
				_9537_scope=(*_9537_scope.alloc)._field_parent;
				goto _julec_label_219068ab9;
			}
		}
		else if (((*(_9537_scope))._field_it != 0LLU)) {
			_case_begin_21906e11e:;
			{
				return jule::new_ptr<_2088ccae2_ContSt>(_2088ccae2_ContSt{._field_It=(*_9537_scope.alloc)._field_it});;
			}
		}
		_match_end_21906decb:;
	};
	_20892d659_pushErr((*(_self_))._field_s.ptr(), (*(_94336_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _2088dd383_checkCont(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c8b9_ContSt> _96726_c) {
	jule::Ptr<_2088ccae2_ContSt> _9687_cont = _2088dd0ca_checkContValidScope(_self_, _96726_c);;
	if ((_9687_cont == nullptr)) {
		return;;
	};
	if (((*(_96726_c))._field_Label != nullptr)) {
		jule::Ptr<_2088d1ca0_scopeLabel> _9748_label = _2088e691e_findLabelParent(&((*(*(_96726_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_9748_label == nullptr)) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_9748_label))._field_used=true;
		if ((((*((*_9748_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I64 _9874_i = ((*((*_9748_label.alloc)._field_node))._field_Index + 1LL);;
		if ((_9874_i >= (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _9919_st = (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts[_9874_i];;
			{
				auto &_match_expr{ _9919_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_21907aaed:;
					{
						(*(_9687_cont))._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_2088cb85a_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_2190797cd:;
					{
						(*(_9687_cont))._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_2088cc7e5_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_2190799ba:;
					{
						(*_9687_cont.alloc)._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_2088cbd11_WhileIter>());
					}
				}
				else {
					_case_begin_219079954:;
					{
						_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_2190798dd:;
			};
		};
	};
	if (((*(_9687_cont))._field_It != 0LLU)) {
		if ((!(_2088dc948_checkValidContLabel(_self_, (*_9687_cont.alloc)._field_It)))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_96726_c))._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_96726_c.alloc)._field_Label))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9687_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _2088dd63b_checkLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208734927_LabelSt> _101431_l) {
	if ((_2088d71e5_findLabel(_self_.ptr(), &((*(_101431_l))._field_Ident)) != nullptr)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_101431_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_101431_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_2088cd472_Label> _10207_label = jule::new_ptr<_2088cd472_Label>(_2088cd472_Label{._field_Ident=(*(_101431_l))._field_Ident, ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10207_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_2088d1ca0_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2088d1ca0_scopeLabel>(_2088d1ca0_scopeLabel{._field_token=(*_101431_l.alloc)._field_Token, ._field_node=_10207_label, ._field_used=false}); __jule_collection; }));
}



inline void _2088dd8e4_pushGoto(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208734d01_GotoSt> _103329_gt) {
	jule::Ptr<_2088cdad2_GotoSt> _10347_st = jule::new_ptr<_2088cdad2_GotoSt>(_2088cdad2_GotoSt{._field_Ident=(*((*_103329_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_103329_gt))._field_Label, ._field_Label=jule::Ptr<_2088cd472_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10347_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _10347_st; __jule_collection; }));
}



inline void _2088ddb9c_checkPostfix(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt> _104433_a) {
	if (((*(_104433_a))._field_Left.len() > 1LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20899c970_eval> _10507_eval = _20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
	(*(_10507_eval))._field_target._field_mutable=true;
	jule::Ptr<_20872b677_Expr> _10537_expr = (*((*(_104433_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_20899a9a1_Data> _10547_d = _2089bc5d8_evalExpr(_10507_eval, _10537_expr);;
	if ((_10547_d == nullptr)) {
		return;;
	};
	_2088e7634_checkAssign(&((*_self_.alloc)._field_s), &(_10547_d), nullptr, (*_104433_a.alloc)._field_Setter);
	if ((_2089d2c91_Ptr((*(_10547_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_2089e0760_Ptr> _10628_ptr = _2089d2c91_Ptr((*(_10547_d))._field_Type);;
		if (_2089e12cc_IsUnsafe(_10628_ptr.ptr())) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_104433_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_10547_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_2089d2774_Prim((*(_10547_d))._field_Type.ptr()) == nullptr) || (!(_20889d222_IsNum((*(_2089d2774_Prim((*(_10547_d))._field_Type.ptr())))._field_Kind))))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_104433_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_10547_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_2088cdeab_Postfix>(_2088cdeab_Postfix{._field_Expr=(*(_10547_d))._field_Model, ._field_Op=(*((*_104433_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _2088ddedd_isNewAssignIdent(_2088d3169_scopeChecker* _self_, jule::Str _108032_ident) {
	if ((_20871420e_IsIgnoreIdent(_108032_ident) || (_108032_ident).empty())) {
		return false;;
	};
	return (_2088289b6_defByIdent((*(_self_))._field_table.ptr(), &(_108032_ident), false) == nullptr);;
}



inline void _2088de296_removeInteriorMutRisk(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20899a9a1_Data>* _109343_d) {
	jule::Ptr<_2087490bd_StructIns> _10943_s = _2089d3ce7_Struct((*((*(_109343_d))))._field_Type.ptr());;
	if ((_10943_s == nullptr)) {
		return;;
	};
	jule::Ptr<_2088d3169_scopeChecker> _10983_root = _2088d67cc_getHardRoot(_self_);;
	if (((*((*(_10983_root))._field_owner))._field_Owner != _10943_s)) {
		return;;
	};
	(*((*(_109343_d))))._field_Mutable=true;
}



inline void _2088de54e_checkSingleAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt>* _110739_a) {
	jule::Ptr<_20899a9a1_Data> _110811_l = nullptr;;
	if ((!(_20871420e_IsIgnoreIdent((*((*((*(_110739_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_20872b677_Expr> _11118_expr = (*((*((*(_110739_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_20899c970_eval> _11128_eval = _20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
		(*(_11128_eval))._field_target._field_mutable=true;
		_110811_l=_2089bc5d8_evalExpr(_11128_eval, _11118_expr);
		if ((_110811_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_20899c970_eval> _11207_eval = static_cast<jule::Ptr<_20899c970_eval>>(nullptr);;
	if ((_110811_l != nullptr)) {
		_11207_eval=_2089351dd_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1), (*_110811_l.alloc)._field_Type);
	} else {
		_11207_eval=_20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));
	};
	(*(_11207_eval))._field_target._field_mutable=true;
	(*_11207_eval.alloc)._field_unsafety=_2088d5556_isUnsafe(_self_);
	jule::Ptr<_20899a9a1_Data> _11287_r = _2089bc5d8_evalExpr(_11207_eval, (*((*(_110739_a))))._field_Right);;
	if ((_11287_r == nullptr)) {
		return;;
	};
	_2088de296_removeInteriorMutRisk(_self_, &(_11287_r));
	if ((_110811_l == nullptr)) {
		if (_2089d0a6e_Void((*(_11287_r))._field_Type.ptr())) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*((*((*(_110739_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_110739_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_110739_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11287_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_2088e7634_checkAssign(&((*_self_.alloc)._field_s), &(_110811_l), _11287_r, (*((*(_110739_a))))._field_Setter)))) {
		return;;
	};
	if ((_2089d4831_Tup((*(_11287_r))._field_Type.ptr()) != nullptr)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_110739_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_208811a9d_OperandExpr> _11557_lm = jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_110811_l))._field_Type, ._field_Model=(*_110811_l.alloc)._field_Model});;
	jule::Ptr<_208811a9d_OperandExpr> _11597_rm = jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_11287_r))._field_Type, ._field_Model=(*_11287_r.alloc)._field_Model});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_2088ce462_Assign>(_2088ce462_Assign{._field_Left=_11557_lm, ._field_Right=_11597_rm, ._field_Op=(*((*(_110739_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*((*((*(_110739_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_2089887d5_assignTypeChecker _11668_checker = _2089887d5_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_110811_l.alloc)._field_Type, ._field_d=_11287_r, ._field_errorToken=(*((*(_110739_a))))._field_Setter, ._field_refers=_2088d6a63_getOwnerRefers(_self_)};;
		if (_2089897d6_check(&_11668_checker)) {
			(*(_11597_rm))._field_Model=(*(_11287_r))._field_Model;
			(*(_11557_lm))._field_Model=(*_110811_l.alloc)._field_Model;
		};
		return;;
	};
	jule::U64 _11793_id = (*((*((*(_110739_a))))._field_Setter))._field_Id;;
	(*(*((*(_110739_a))))._field_Setter.alloc)._field_Id=_2088e580d_removeEqFromOp((*(*((*(_110739_a))))._field_Setter.alloc)._field_Id);
	_2089bea08_binaryEval _11817_solver = static__2089c0465_new(_11207_eval, (*((*(_110739_a))))._field_Setter);;
	({
		jule::Ptr<_20899a9a1_Data> ___jule_assign_arg = _110811_l;
		jule::Ptr<_20899a9a1_Data> _1___jule_assign_arg = _11287_r;
		_11817_solver._field_l = ___jule_assign_arg;
		_11817_solver._field_r = _1___jule_assign_arg;
	});
	_2089c44d0_evalOp(&_11817_solver);
	(*(*((*(_110739_a))))._field_Setter.alloc)._field_Id=_11793_id;
}



inline void _2088deb8c_processEndPartOfMultiAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _118749_st, jule::Ptr<_208735ce1_AssignSt>* _118772_a, jule::Ptr<_20873575d_AssignLeft>* _11888_lexpr, jule::Ptr<_20899a9a1_Data>* _118838_l, _2088ca1d8_exprPart* _118853_r, jule::Bool _118866_strict) {
	if (((!((*((*(_11888_lexpr))))._field_Reference)) && _20871420e_IsIgnoreIdent((*((*(_11888_lexpr))))._field_Ident))) {
		if (_2089d0a6e_Void((*((*(_118853_r))._field_data))._field_Type.ptr())) {
			_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_118772_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_20899a9a1_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_118772_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_11888_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_2190c06ae:;
				{
					if ((!(_2088ddedd_isNewAssignIdent(_self_.ptr(), (*((*(_11888_lexpr))))._field_Ident)))) {
						goto _julec_label_2190c97b7;
					};
				}
			}
			else {
				_case_begin_2190bedc8:;
				{
					if (((*((*(_11888_lexpr))))._field_Mutable || (*((*(_11888_lexpr))))._field_Reference)) {
						_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_2190c97b7;
				}
			}
			_match_end_2190bed62:;
		};
		if (_2088d7c73_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_11888_lexpr))))._field_Ident))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11888_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_2088d59da_stop(_self_);
			return;;
		};
		if (_20871420e_IsIgnoreIdent((*((*(_11888_lexpr))))._field_Ident)) {
			_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_20894d7de_Var> _12208_v = jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_11888_lexpr))))._field_Token, ._field_Ident=(*((*(_11888_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_11888_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_11888_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_2089d7a65_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=(*(_118853_r))._field_expr, ._field_Data=(*(_118853_r))._field_data}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
		_208945077_checkVarValue((*_self_.alloc)._field_s, &(_12208_v));
		{ jule::Slice<jule::Ptr<_20899a9a1_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=(*((*_12208_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_12208_v.alloc)._field_Mutable, ._field_Reference=(*_12208_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_12208_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_12208_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_20894d7de_Var>> &__jule_push_dest = (*((*(_118749_st))))._field_Decls; __jule_push_dest.push(_12208_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12208_v; __jule_collection; }));
		return;;
	};
	_julec_label_2190c97b7:;
	if (((*((*(_11888_lexpr))))._field_Mutable || (*((*(_11888_lexpr))))._field_Reference)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11888_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_2088e7634_checkAssign(&((*(_self_))._field_s), _118838_l, (*(_118853_r))._field_data, (*((*(_11888_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _12557_reference = false;;
	if (_20893a3d0_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_118838_l))))._field_Mutable, _12557_reference, &((*((*(_118838_l))))._field_Type), &((*(_118853_r))._field_data), &((*((*(_118853_r))._field_expr))._field_Token))) {
		_12557_reference=_118866_strict;
		_208935b4a_checkAssignType((*(_self_))._field_s, _12557_reference, &((*((*(_118838_l))))._field_Type), &((*(_118853_r))._field_data), (*(*(_118853_r))._field_expr.alloc)._field_Token, _2088d6a63_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_20899a9a1_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push((*(_118838_l))); };
}



inline __jule_tuple_s_2088ca1d8_exprPart__jule_tuple_x_20899a9a1_Data__jule_tuple_bool _2088e0088_getRightExprsOfMultiAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt> _126347_a, jule::Ptr<_20899c970_eval> _12647_eval) {
	__jule_tuple_s_2088ca1d8_exprPart__jule_tuple_x_20899a9a1_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	jule::Fn<void,jule::I64> _12653_updateMut = jule::__new_closure<void,jule::I64>((void*)__jule_anon_2190d2a89, jule::Ptr<__jule_anon_2190d2a89_ctx>::make(__jule_anon_2190d2a89_ctx{._126347_a=_126347_a,._12647_eval=_12647_eval,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2190d2a89_ctx_handler);;
	{
		auto &_match_expr{ (*((*(_126347_a))._field_Right))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_2190d9233:;
			{
				jule::Ptr<_20872c26b_TupleExpr> _12918_tup = (*((*(_126347_a))._field_Right))._field_Kind.unsafe_cast_ptr<_20872c26b_TupleExpr>();;
				__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_2088ca1d8_exprPart>::alloc(0LL, (*(_12918_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _2088ca1d8_exprPart{._field_data=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_expr=jule::Ptr<_20872b677_Expr>(nullptr)}; __jule_collection; });
				jule::I64 _12934_i = 0LL;;
				jule::Ptr<jule::I64> _12948__i = ((jule::Ptr<jule::I64>)((&(_12934_i))));;
				jule::Ptr<jule::Slice<_2088ca1d8_exprPart>> _12958__parts = ((jule::Ptr<jule::Slice<_2088ca1d8_exprPart>>)((&(__jule_func_result.__jule_result_arg0))));;
				__jule_func_result.__jule_result_arg1=_2089ba273_evalTupleFunc(_12647_eval, _12918_tup, jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20872b677_Expr>*>((void*)__jule_anon_2190ddd5e, jule::Ptr<__jule_anon_2190ddd5e_ctx>::make(__jule_anon_2190ddd5e_ctx{._12948__i=_12948__i,._126347_a=_126347_a,._12653_updateMut=_12653_updateMut,._12647_eval=_12647_eval,._12958__parts=_12958__parts}).as<jule::Uintptr>(), __jule_anon_2190ddd5e_ctx_handler));
			}
		}
		else {
			_case_begin_2190d67c4:;
			{
				_12653_updateMut(0LL);
				__jule_func_result.__jule_result_arg1=_2089bc5d8_evalExpr(_12647_eval, (*(_126347_a))._field_Right);
				if ((__jule_func_result.__jule_result_arg1 == nullptr)) {
					return __jule_func_result;;
				};
				if ((_2089d4831_Tup((*(__jule_func_result.__jule_result_arg1))._field_Type.ptr()) != nullptr)) {
					jule::Ptr<_2089dd560_Tuple> _13189_t = _2089d4831_Tup((*(__jule_func_result.__jule_result_arg1))._field_Type);;
					__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_2088ca1d8_exprPart>::alloc(0LL, (*(_13189_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _2088ca1d8_exprPart{._field_data=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_expr=jule::Ptr<_20872b677_Expr>(nullptr)}; __jule_collection; });
					{
						auto expr = &((*_13189_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2190d9772:;
						if (it != expr_end) {
							jule::Ptr<_2089ce661_Type> _132017_kind = *it;
							{
								{ jule::Slice<_2088ca1d8_exprPart> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push(_2088ca1d8_exprPart{._field_data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_132017_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)}), ._field_expr=(*_126347_a.alloc)._field_Right}); };
							}
							_iter_next_2190d9772:;
							++it;
							goto _iter_begin_2190d9772;
						}
						_iter_end_2190d9772:;
					};
				} else {
					__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_2088ca1d8_exprPart>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2088ca1d8_exprPart{._field_data=__jule_func_result.__jule_result_arg1, ._field_expr=(*_126347_a.alloc)._field_Right}; __jule_collection; });
				};
			}
		}
		_match_end_2190d675d:;
	};
	__jule_func_result.__jule_result_arg2=true;
	return __jule_func_result;;
}



inline void _2088e0341_checkMultiAssign(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt>* _133738_a) {
	if ((((*((*((*(_133738_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_133738_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20899c970_eval> _13437_eval = _20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
	jule::Slice<_2088ca1d8_exprPart> _13447_right;
	jule::Ptr<_20899a9a1_Data> _134414_rightData;
	jule::Bool _134425_ok;
	({
		__jule_tuple_s_2088ca1d8_exprPart__jule_tuple_x_20899a9a1_Data__jule_tuple_bool __jule_assign_result = _2088e0088_getRightExprsOfMultiAssign(_self_, (*(_133738_a)), _13437_eval);
		_13447_right = __jule_assign_result.__jule_result_arg0;
		_134414_rightData = __jule_assign_result.__jule_result_arg1;
		_134425_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_134425_ok))) {
		return;;
	};
	jule::Bool _13497_strict = false;;
	if ((_13447_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_13447_right[0LL]._field_data))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_2190e51b7:;
				{
					jule::Ptr<_208814908_IndexingExpr> _13539_iem = (*(_13447_right[0LL]._field_data))._field_Model.unsafe_cast_ptr<_208814908_IndexingExpr>();;
					if ((_2089d459a_Map((*((*(_13539_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_13497_strict=true;
						_13447_right=({ auto __jule_collection = jule::Slice<_2088ca1d8_exprPart>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _2088ca1d8_exprPart{._field_data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=(*(_2089d459a_Map((*((*(_13539_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_13447_right[0LL]._field_data))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)}), ._field_expr=_13447_right[0LL]._field_expr}; (*it++) = _2088ca1d8_exprPart{._field_data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)}), ._field_expr=_13447_right[0LL]._field_expr}; __jule_collection; });
					};
				}
			}
			_match_end_2190e5140:;
		};
	};
	{
		
		if (((*((*(_133738_a))))._field_Left.len() > _13447_right.len())) {
			_case_begin_2190e49ad:;
			{
				_20892d659_pushErr((*(_self_))._field_s, (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_133738_a))))._field_Left.len() < _13447_right.len())) {
			_case_begin_2190e4a24:;
			{
				_20892d659_pushErr((*(_self_))._field_s, (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_2190e5261:;
	};
	(*(_13437_eval))._field_target._field_mutable=true;
	jule::Ptr<_2088ce9e5_MultiAssign> _13767_st = jule::new_ptr<_2088ce9e5_MultiAssign>(_2088ce9e5_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_20899a9a1_Data>>(nullptr), ._field_Right=(*(_134414_rightData))._field_Model, ._field_Op=(*((*(_133738_a))))._field_Setter});;
	{
		auto expr = &((*((*(_133738_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2190ee59a:;
		if (it != expr_end) {
			jule::I64 _13807_i = it - expr->begin();
			{
				jule::Ptr<_20873575d_AssignLeft> _13818_lexpr = (*((*(_133738_a))))._field_Left[_13807_i];;
				jule::Ptr<_20899a9a1_Data> _138212_l = nullptr;;
				if ((!(_20871420e_IsIgnoreIdent((*(_13818_lexpr))._field_Ident)))) {
					if ((!((*((*(_133738_a))))._field_Declarative))) {
						goto _julec_label_219100d71;
					};
					if (((*_13818_lexpr.alloc)._field_Mutable && (*_13818_lexpr.alloc)._field_Reference)) {
						goto _julec_label_219103538;
					};
					{
						auto &_match_expr{ (*((*(_13818_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_219102081:;
							{
								if (_2088ddedd_isNewAssignIdent(_self_, (*_13818_lexpr.alloc)._field_Ident)) {
									goto _julec_label_219103538;
								};
							}
						}
						_match_end_219102009:;
					};
					_julec_label_219100d71:;
					_138212_l=_2089bc5d8_evalExpr(_13437_eval, (*_13818_lexpr.alloc)._field_Expr);
					if ((_138212_l == nullptr)) {
						goto _iter_next_2190ee59a;
					};
					_julec_label_219103538:;
				};
				_2088ca1d8_exprPart _14038_r = _13447_right[_13807_i];;
				_2088de296_removeInteriorMutRisk(_self_, &(_14038_r._field_data));
				_2088deb8c_processEndPartOfMultiAssign(_self_, &(_13767_st), _133738_a, &(_13818_lexpr), &(_138212_l), &(_14038_r), _13497_strict);
			}
			_iter_next_2190ee59a:;
			++it;
			_13807_i++;
			goto _iter_begin_2190ee59a;
		}
		_iter_end_2190ee59a:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_13767_st, &__jule_any_type44); __jule_collection; }));
}



inline void _2088e05e9_checkAssignSt(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208735ce1_AssignSt> _141034_a) {
	{
		
		if (_208716673_IsPostfixOp((*((*(_141034_a))._field_Setter))._field_Id)) {
			_case_begin_2191053a3:;
			{
				_2088ddb9c_checkPostfix(_self_, _141034_a);
			}
		}
		else if (((*(_141034_a))._field_Left.len() == 1LL)) {
			_case_begin_219105051:;
			{
				_2088de54e_checkSingleAssign(_self_, &(_141034_a));
			}
		}
		else {
			_case_begin_219104eda:;
			{
				_2088e0341_checkMultiAssign(_self_, &(_141034_a));
			}
		}
		_match_end_219104e30:;
	};
}



inline jule::Ptr<_2088ca969_Scope> _2088e09e5_checkCaseScope(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0c5a_Case>* _142132_c, jule::Ptr<_208737441_ScopeTree>* _142147_tree) {
	jule::Ptr<_2088d3169_scopeChecker> _14227_ssc = _2088e54bc_newChildChecker(_self_);;
	(*(_14227_ssc))._field_cse=static_cast<jule::Uintptr>((*(_142132_c)));
	return _2088d913c_checkChildSc(_self_, _142147_tree, &(_14227_ssc));;
}



inline jule::Ptr<_2088d0c5a_Case> _2088e1056_checkCase(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0463_Match> _142730_m, jule::I64 _142741_i, jule::Ptr<_20873e4c0_Case> _142753_c, jule::Ptr<_20899a9a1_Data> _142772_expr) {
	jule::Ptr<_2088d0c5a_Case> _14287_case = (*(_142730_m))._field_Cases[_142741_i];;
	(*(_14287_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_20899a9a1_Data>>::alloc(0LL, (*(_142753_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20899a9a1_Data>(nullptr); __jule_collection; });
	jule::Bool _14307_constMatched = false;;
	jule::Ptr<_20899c970_eval> _14317_eval = _20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
	{
		auto expr = &((*_142753_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21910aa18:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _143215_e = *it;
			{
				jule::Ptr<_20899a9a1_Data> _14338_d = _2089bb7c4_evalExprKind(_14317_eval, (*(_143215_e))._field_Kind);;
				if ((_14338_d == nullptr)) {
					goto _iter_next_21910aa18;
				};
				if ((*_142730_m.alloc)._field_TypeMatch) {
					(*_14287_case.alloc)._field_Exprs=jule::append((*_14287_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_20899a9a1_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14338_d; __jule_collection; }));
					if ((_2088e648a_countMatchType(&(_142730_m), &((*(_14338_d))._field_Type)) > 1LL)) {
						_20892d659_pushErr((*(_self_))._field_s, (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*_14338_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_142730_m.alloc)._field_Comptime) {
						_14307_constMatched=(_14307_constMatched || _2089ced9d_Equal((*(_142772_expr))._field_Type, (*(_14338_d))._field_Type));
					} else {
						if ((_2089d32ad_TypeEnum((*(_142772_expr))._field_Type.ptr()) != nullptr)) {
							_2089365a7_checkTypeCompatibility((*(_self_))._field_s, &((*_142772_expr.alloc)._field_Type), &((*(_14338_d))._field_Type), &((*_143215_e.alloc)._field_Token));
						} else {
							jule::Ptr<_2088299c8_Trait> _14527_trt = _2089d4314_Trait((*(_142772_expr))._field_Type.ptr());;
							if ((_14527_trt != nullptr)) {
								_2089365a7_checkTypeCompatibility((*(_self_))._field_s, &((*_142772_expr.alloc)._field_Type), &((*(_14338_d))._field_Type), &((*_143215_e.alloc)._field_Token));
							};
						};
					};
					_2089c7ea6_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14338_d))._field_Type), &((*((*_142730_m.alloc)._field_Expr))._field_Type), &((*_143215_e.alloc)._field_Token), _2088d6a63_getOwnerRefers(_self_));
					goto _iter_next_21910aa18;
				};
				if ((*(_14338_d))._field_Decl) {
					_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_21910aa18;
				};
				if ((*_142730_m.alloc)._field_Comptime) {
					if (((!(_20899b3db_IsConst(_14338_d.ptr()))) && (_2089d63c1_comptimeTypeInfo((*_14338_d.alloc)._field_Type.ptr()) == nullptr))) {
						_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_21910aa18;
					};
					if ((!(_14307_constMatched))) {
						if (_20899b3db_IsConst(_14338_d.ptr())) {
							_14307_constMatched=(_20899b3db_IsConst(_142772_expr.ptr()) && _20880b2e5_Eq((*_14338_d.alloc)._field_Constant.ptr(), (*(*(_142772_expr))._field_Constant.alloc)));
						} else {
							jule::Ptr<_2088ae596_comptimeTypeInfo> _14787_exprCti = _2089d63c1_comptimeTypeInfo((*(_142772_expr))._field_Type.ptr());;
							_14307_constMatched=((_14787_exprCti != nullptr) && _2089ced9d_Equal((*(_2089d63c1_comptimeTypeInfo((*(_14338_d))._field_Type)))._field_base, (*(_14787_exprCti))._field_base));
						};
					};
				};
				(*_14287_case.alloc)._field_Exprs=jule::append((*_14287_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_20899a9a1_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14338_d; __jule_collection; }));
				if ((((!((*_142730_m.alloc)._field_Comptime)) || (_2089d63c1_comptimeTypeInfo((*(_142772_expr))._field_Type.ptr()) == nullptr)) || (_2089d63c1_comptimeTypeInfo((*(_14338_d))._field_Type.ptr()) == nullptr))) {
					_2089887d5_assignTypeChecker _14889_checker = _2089887d5_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_142772_expr))._field_Type, ._field_d=_14338_d, ._field_errorToken=(*_143215_e.alloc)._field_Token, ._field_refers=_2088d6a63_getOwnerRefers(_self_)};;
					_2089897d6_check(&_14889_checker);
				};
			}
			_iter_next_21910aa18:;
			++it;
			goto _iter_begin_21910aa18;
		}
		_iter_end_21910aa18:;
	};
	if (((!((*_142730_m.alloc)._field_Comptime)) || _14307_constMatched)) {
		(*_14287_case.alloc)._field_Scope=_2088e09e5_checkCaseScope(_self_, &(_14287_case), &((*_142753_c.alloc)._field_Scope));
	};
	return _14287_case;;
}



inline void _2088e1474_checkCases(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase>* _150432_m, jule::Ptr<_2088d0463_Match> _150456_rm, jule::Ptr<_20899a9a1_Data> _150472_expr) {
	(*(_150456_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_2088d0c5a_Case>>::alloc(0LL, (*((*(_150432_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088d0c5a_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_150432_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21911e642:;
		if (it != expr_end) {
			jule::I64 _15067_i = it - expr->begin();
			{
				jule::Ptr<_2088d0c5a_Case> _15078_case = jule::new_ptr<_2088d0c5a_Case>(_2088d0c5a_Case{._field_Owner=_150456_rm, ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_20899a9a1_Data>>(nullptr), ._field_Next=jule::Ptr<_2088d0c5a_Case>(nullptr)});;
				if ((_15067_i > 0LL)) {
					(*((*_150456_rm.alloc)._field_Cases[(_15067_i - 1LL)]))._field_Next=_15078_case;
				};
				(*_150456_rm.alloc)._field_Cases=jule::append((*_150456_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088d0c5a_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15078_case; __jule_collection; }));
			}
			_iter_next_21911e642:;
			++it;
			_15067_i++;
			goto _iter_begin_21911e642;
		}
		_iter_end_21911e642:;
	};
	if ((((*_150456_rm.alloc)._field_Default != nullptr) && ((*((*(_150432_m))))._field_Cases.len() > 0LL))) {
		(*((*_150456_rm.alloc)._field_Cases[((*_150456_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_150456_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_150432_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219122b0c:;
		if (it != expr_end) {
			jule::I64 _15208_i = it - expr->begin();
			jule::Ptr<_20873e4c0_Case> _152015_c = *it;
			{
				_2088e1056_checkCase(_self_, _150456_rm, _15208_i, _152015_c, _150472_expr);
			}
			_iter_next_219122b0c:;
			++it;
			_15208_i++;
			goto _iter_begin_219122b0c;
		}
		_iter_end_219122b0c:;
	};
}



inline jule::Ptr<_2088d0c5a_Case> _2088e1870_checkDefault(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0463_Match> _152533_m, jule::Ptr<_20873d249_Else> _152548_d) {
	jule::Ptr<_2088d0c5a_Case> _15267_def = jule::new_ptr<_2088d0c5a_Case>(_2088d0c5a_Case{._field_Owner=_152533_m, ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_20899a9a1_Data>>(nullptr), ._field_Next=jule::Ptr<_2088d0c5a_Case>(nullptr)});;
	(*(_15267_def))._field_Scope=_2088e09e5_checkCaseScope(_self_, &(_15267_def), &((*(_152548_d))._field_Scope));
	return _15267_def;;
}



inline void _2088e1bd3_checkComptimePanic(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208711827_Token> _153339_callToken, jule::Ptr<_2088ca969_Scope>* _153366_s) {
	if (((*((*(_153366_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15373_stmt = (*((*(_153366_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15373_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_219126209:;
			{
				jule::Ptr<_20899a9a1_Data> _15404_d = _15373_stmt.unsafe_cast_ptr<_20899a9a1_Data>();;
				{
					auto &_match_expr{ (*(_15404_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_219127150:;
						{
							jule::Ptr<_208818533_BuiltinPanicCallExpr> _15439_m = (*(_15404_d))._field_Model.unsafe_cast_ptr<_208818533_BuiltinPanicCallExpr>();;
							{
								auto &_match_expr{ (*(_15439_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_219128283:;
									{
										jule::Ptr<_208799195_Const> _15466_c = (*(_15439_m))._field_Expr.unsafe_cast_ptr<_208799195_Const>();;
										if ((!(_208809eb4_IsStr(_15466_c.ptr())))) {
											goto _match_end_21912820b;
										};
										if ((_153339_callToken == nullptr)) {
											jule::Ptr<_2088d3169_scopeChecker> _155111_root = _2088d67cc_getHardRoot(_self_);;
											if (((*(_155111_root))._field_calledFrom == nullptr)) {
												_153339_callToken=(*(_15439_m))._field_Token;
											} else {
												_153339_callToken=(*(_155111_root))._field_calledFrom;
											};
										};
										_20892d659_pushErr((*(_self_))._field_s.ptr(), _153339_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2088078b8_ReadStr(_15466_c.ptr()), &__jule_any_type5); __jule_collection; }));
										_2088d59da_stop(_self_);
									}
								}
								_match_end_21912820b:;
							};
						}
					}
					_match_end_2191270c8:;
				};
			}
		}
		_match_end_219125835:;
	};
}



inline void _2088e2046_processConstMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2088d0463_Match>* _156539_tm, jule::Ptr<_20873ecd9_MatchCase>* _156556_m) {
	{
		auto expr = &((*((*(_156539_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2191286e5:;
		if (it != expr_end) {
			jule::I64 _15668_i = it - expr->begin();
			jule::Ptr<_2088d0c5a_Case> _156615_c = *it;
			{
				if (((*(_156615_c))._field_Scope != nullptr)) {
					jule::Ptr<_208711827_Token> _156813_token = nullptr;;
					if (((!((*((*(_156539_tm))))._field_TypeMatch)) && ((*(*(_156615_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_156813_token=(*((*((*((*(_156556_m))))._field_Cases[_15668_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_2088e1bd3_checkComptimePanic(_self_, _156813_token, &((*_156615_c.alloc)._field_Scope));
					(*((*(_156539_tm))))._field_Default=_156615_c;
					(*((*(_156539_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_2191286e5:;
			++it;
			_15668_i++;
			goto _iter_begin_2191286e5;
		}
		_iter_end_2191286e5:;
	};
	if (((*((*(_156556_m))))._field_Default != nullptr)) {
		(*((*(_156539_tm))))._field_Cases=nullptr;
		(*((*(_156539_tm))))._field_Default=_2088e1870_checkDefault(_self_, (*(_156539_tm)), (*((*(_156556_m))))._field_Default);
		if (((*((*(_156539_tm))))._field_Default != nullptr)) {
			jule::Ptr<_208711827_Token> _158213_token = nullptr;;
			if ((!((*((*(_156539_tm))))._field_TypeMatch))) {
				_158213_token=(*((*(*((*(_156556_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_2088e1bd3_checkComptimePanic(_self_, _158213_token, &((*(*((*(_156539_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_156539_tm))))._field_Cases=nullptr;
	};
}



inline void _2088e22ee_checkTypeMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase>* _159436_m) {
	jule::Ptr<_20899a9a1_Data> _15957_d = _2089bbb15_eval1(_20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)), (*((*(_159436_m))))._field_Expr);;
	if ((_15957_d == nullptr)) {
		return;;
	};
	if ((*((*(_159436_m))))._field_Comptime) {
		jule::Ptr<_2088ae596_comptimeTypeInfo> _16018_cti = _2089d63c1_comptimeTypeInfo((*(_15957_d))._field_Type.ptr());;
		if ((_16018_cti == nullptr)) {
			if ((!((*_15957_d.alloc)._field_Decl))) {
				_20892d659_pushErr((*(_self_))._field_s, (*((*((*(_159436_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*_15957_d.alloc)._field_Type=(*(_16018_cti))._field_base;
		};
	} else if (((*(_15957_d))._field_Decl || (!(((((_2089d2774_Prim((*(_15957_d))._field_Type.ptr()) != nullptr) && _2089dbbbd_IsAny(_2089d2774_Prim((*(_15957_d))._field_Type).ptr())) || (_2089d4314_Trait((*(_15957_d))._field_Type.ptr()) != nullptr)) || (_2089d32ad_TypeEnum((*(_15957_d))._field_Type.ptr()) != nullptr)))))) {
		_20892d659_pushErr((*(_self_))._field_s, (*((*((*(_159436_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2088d0463_Match> _16157_tm = jule::new_ptr<_2088d0463_Match>(_2088d0463_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_15957_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_159436_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_2088d0c5a_Case>>(nullptr), ._field_Default=jule::Ptr<_2088d0c5a_Case>(nullptr)});;
	if (((!((*(_16157_tm))._field_Comptime)) && ((*((*(_159436_m))))._field_Default != nullptr))) {
		(*_16157_tm.alloc)._field_Default=_2088e1870_checkDefault(_self_, _16157_tm, (*((*(_159436_m))))._field_Default);
	};
	_2088e1474_checkCases(_self_, _159436_m, _16157_tm, _15957_d);
	if ((*(_16157_tm))._field_Comptime) {
		_2088e2046_processConstMatch(_self_, &(_16157_tm), _159436_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16157_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _2088e25a7_checkCommonMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase>* _163738_m) {
	jule::Ptr<_20899a9a1_Data> _163811_d = nullptr;;
	if (((*((*(_163738_m))))._field_Expr == nullptr)) {
		_163811_d=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__208806213_NewBool(true)});
		(*(_163811_d))._field_Model=jule::Any((*_163811_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_163811_d=_2089bc297_evalExpr1(_20893552e_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)), (*((*(_163738_m))))._field_Expr);
		if ((_163811_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_163738_m))))._field_Comptime) {
		if ((!(_2088e5d4c_canComptimeMatch(&(_163811_d))))) {
			_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_163738_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_2089d4ab7_comptime((*(_163811_d))._field_Type.ptr())) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_163738_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2088d0463_Match> _16647_mc = jule::new_ptr<_2088d0463_Match>(_2088d0463_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_163811_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_163738_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_2088d0c5a_Case>>(nullptr), ._field_Default=jule::Ptr<_2088d0c5a_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16647_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_16647_mc))._field_Comptime)) && ((*((*(_163738_m))))._field_Default != nullptr))) {
		(*_16647_mc.alloc)._field_Default=_2088e1870_checkDefault(_self_, _16647_mc, (*((*(_163738_m))))._field_Default);
	};
	_2088e1474_checkCases(_self_, _163738_m, _16647_mc, _163811_d);
	if ((*(_16647_mc))._field_Comptime) {
		_2088e2046_processConstMatch(_self_, &(_16647_mc), _163738_m);
	};
}



inline void _2088e2860_checkMatch(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873ecd9_MatchCase> _168831_m) {
	if ((*(_168831_m))._field_TypeMatch) {
		_2088e22ee_checkTypeMatch(_self_, &(_168831_m));
		return;;
	};
	_2088e25a7_checkCommonMatch(_self_, &(_168831_m));
}



inline void _2088e2b18_checkFall(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_2087350ed_FallSt> _169626_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _2088d6007_isDeferred(_self_))) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_2088d0c5a_Case* _17047_case = ((_2088d0c5a_Case*)((*(_self_))._field_cse));;
	if ((*((*(_17047_case))._field_Owner))._field_Comptime) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17047_case))._field_Next == nullptr)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_2088d1453_FallSt>(_2088d1453_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17047_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_2088ccebb_BreakSt> _2088e2e59_checkBreakWithLabel(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c4e0_BreakSt> _171936_b) {
	jule::Ptr<_2088ccebb_BreakSt> _17207_brk = _2088e329a_checkPlainBreak(_self_, _171936_b);;
	if ((_17207_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17207_brk))._field_It=0LLU;
	(*_17207_brk.alloc)._field_Mtch=0LLU;
	jule::Ptr<_2088d1ca0_scopeLabel> _17307_label = _2088e691e_findLabelParent(&((*((*(_171936_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17307_label == nullptr)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17307_label))._field_used=true;
	if ((((*((*_17307_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _17433_i = ((*((*_17307_label.alloc)._field_node))._field_Index + 1LL);;
	if ((_17433_i >= (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _17478_st = (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts[_17433_i];;
		{
			auto &_match_expr{ _17478_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_219164533:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_2088cb85a_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_219163213:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_2088cc7e5_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_219163400:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_2088cbd11_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_219163466:;
				{
					(*_17207_brk.alloc)._field_Mtch=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_2088d0463_Match>());
				}
			}
			else {
				_case_begin_219163389:;
				{
					_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_219163323:;
		};
	};
	if (((*_17207_brk.alloc)._field_It != 0LLU)) {
		if ((!(_2088dcc89_checkValidBreakLabel(_self_, (*_17207_brk.alloc)._field_It)))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*_17207_brk.alloc)._field_Mtch != 0LLU)) {
		if ((!(_2088dcc89_checkValidBreakLabel(_self_, (*_17207_brk.alloc)._field_Mtch)))) {
			_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17207_brk;;
}



inline jule::Ptr<_2088ccebb_BreakSt> _2088e329a_checkPlainBreak(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c4e0_BreakSt> _177732_b) {
	if (_2088d6007_isDeferred(_self_)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177732_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2088d3169_scopeChecker> _17837_scope = _self_;;
	_julec_label_21916a5e4:;
	{
		
		if ((((((*(_17837_scope))._field_it == 0LLU) && ((*_17837_scope.alloc)._field_cse == 0LLU)) && ((*_17837_scope.alloc)._field_parent != nullptr)) && ((*_17837_scope.alloc)._field_owner == nullptr))) {
			_case_begin_21916b8d1:;
			{
				_17837_scope=(*_17837_scope.alloc)._field_parent;
				goto _julec_label_21916a5e4;
			}
		}
		else if (((*(_17837_scope))._field_it != 0LLU)) {
			_case_begin_21916b969:;
			{
				return jule::new_ptr<_2088ccebb_BreakSt>(_2088ccebb_BreakSt{._field_It=(*_17837_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_17837_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_21916b9d0:;
			{
				return jule::new_ptr<_2088ccebb_BreakSt>(_2088ccebb_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_2088d0c5a_Case*)((*_17837_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_21916b7d2:;
	};
	_20892d659_pushErr((*(_self_))._field_s.ptr(), (*(_177732_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _2088e3553_checkBreak(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873c4e0_BreakSt> _179927_b) {
	if (((*(_179927_b))._field_Label != nullptr)) {
		jule::Ptr<_2088ccebb_BreakSt> _18018_brk = _2088e2e59_checkBreakWithLabel(_self_, _179927_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18018_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_2088ccebb_BreakSt> _18067_brk = _2088e329a_checkPlainBreak(_self_, _179927_b);;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18067_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _2088e380b_checkRet(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20873a664_RetSt> _181029_r) {
	if (_2088d6007_isDeferred(_self_)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_181029_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2088d17e9_RetSt> _18157_rt = jule::new_ptr<_2088d17e9_RetSt>(_2088d17e9_RetSt{._field_Func=(*(_2088d6546_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18157_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_20899764b_retTypeChecker> _18207_rtc = jule::new_ptr<_20899764b_retTypeChecker>(_20899764b_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18157_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_20899a9a1_Data>>(nullptr), ._field_exprDecls=jule::Slice<jule::Ptr<_20872b677_Expr>>(nullptr), ._field_errorToken=(*(_181029_r))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _18263_ok = _2089987c3_check(_18207_rtc.ptr(), &((*_181029_r.alloc)._field_Expr));;
	if ((!(_18263_ok))) {
		return;;
	};
	if (((*_181029_r.alloc)._field_Expr != nullptr)) {
		(*_18157_rt.alloc)._field_Expr=(*_18207_rtc.alloc)._field_model;
	};
}



inline void _2088e3ab4_checkUseExpr(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_20872c04b_UseExpr> _183629_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_2088d6007_isDeferred(_self_)) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _2088e3d6c_checkNode(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Any* _185231_node) {
	{
		auto &_match_expr{ (*(_185231_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_219183c5b:;
			{
				_2088d9736_checkAnonScope(_self_, (*(_185231_node)).cast_ptr<_208737441_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_2191840be:;
			{
				_2088d802b_checkVarDecl(_self_, (*(_185231_node)).cast_ptr<_20873a28a_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_219184135:;
			{
				_2088d858c_checkTypeAliasDecl(_self_, (*(_185231_node)).cast_ptr<_20873e019_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_21918419b:;
			{
				_2088d9d52_checkExpr(_self_, (*(_185231_node)).cast_ptr<_20872b677_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_2191844ba:;
			{
				_2088da78c_checkConditional(_self_, (*(_185231_node)).cast_ptr<_20873d700_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_219184531:;
			{
				_2088dc607_checkIter(_self_, (*(_185231_node)).cast_ptr<_20873add4_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_219184597:;
			{
				_2088dd383_checkCont(_self_, (*(_185231_node)).cast_ptr<_20873c8b9_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_21918460d:;
			{
				_2088dd63b_checkLabel(_self_, (*(_185231_node)).cast_ptr<_208734927_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_219184674:;
			{
				_2088dd8e4_pushGoto(_self_, (*(_185231_node)).cast_ptr<_208734d01_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_2191846eb:;
			{
				_2088e05e9_checkAssignSt(_self_, (*(_185231_node)).cast_ptr<_208735ce1_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_219184773:;
			{
				_2088e2860_checkMatch(_self_, (*(_185231_node)).cast_ptr<_20873ecd9_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_2191847ea:;
			{
				_2088e2b18_checkFall(_self_, (*(_185231_node)).cast_ptr<_2087350ed_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_219184872:;
			{
				_2088e3553_checkBreak(_self_, (*(_185231_node)).cast_ptr<_20873c4e0_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_2191848e9:;
			{
				_2088e380b_checkRet(_self_, (*(_185231_node)).cast_ptr<_20873a664_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_219184971:;
			{
				_2088e3ab4_checkUseExpr(_self_, (*(_185231_node)).cast_ptr<_20872c04b_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_219183e37:;
			{
				jule::println(_2175dc518_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_219183dc1:;
	};
}



inline void _2088e406a_checkResult(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	_208736cd1_Stmt _18907_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _18907_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_2191ab899:;
			{
				jule::Ptr<_20872c04b_UseExpr> _18938_ue = _18907_stmt._field_Data.unsafe_cast_ptr<_20872c04b_UseExpr>();;
				jule::Ptr<_20899a9a1_Data> _18948_d = _2089bc5d8_evalExpr(_20893552e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)), (*(_18938_ue))._field_Expr);;
				if ((_18948_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18948_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_20899764b_retTypeChecker> _18998_rtc = jule::new_ptr<_20899764b_retTypeChecker>(_20899764b_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_208822372_FnIns>(nullptr), ._field_types=_2088235a4_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_20899a9a1_Data>>(nullptr), ._field_exprDecls=jule::Slice<jule::Ptr<_20872b677_Expr>>(nullptr), ._field_errorToken=(*((*_18938_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_2089987c3_check(_18998_rtc.ptr(), &((*_18938_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2191abb1e:;
			{
				jule::Ptr<_20872b677_Expr> _19078_expr = _18907_stmt._field_Data.unsafe_cast_ptr<_20872b677_Expr>();;
				jule::Ptr<_20899a9a1_Data> _19088_d = _2089bc5d8_evalExpr(_20893552e_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)), _19078_expr);;
				if ((_19088_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19088_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_2191b6035:;
						{
							jule::Ptr<_20881a139_BuiltinErrorCallExpr> _19149_m = (*(_19088_d))._field_Model.unsafe_cast_ptr<_20881a139_BuiltinErrorCallExpr>();;
							_2088d9a99_processErrorCall(_self_, &(_19149_m), (*(_19078_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19088_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_2191b61de:;
						{
							return;;
						}
					}
					_match_end_2191b6178:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_2191abb85:;
			{
				_2088e3d6c_checkNode(_self_, &(_18907_stmt._field_Data));
			}
		}
		else {
			_case_begin_2191abaa8:;
			{
				_2088e3d6c_checkNode(_self_, &(_18907_stmt._field_Data));
				return;;
			}
		}
		_match_end_2191aba42:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _2088e4268_checkTree(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _19367_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19367_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19367_n); ((*_self_.alloc)._field_i)++) {
		{
			_208736cd1_Stmt _19448_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_2088e3d6c_checkNode(_self_, &(_19448_stmt._field_Data));
			if (_2088d5c71_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_2191b9b4e:;
	}
	_iter_end_2191b9b4e:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_2088e406a_checkResult(_self_);
	};
}



inline void _2088e45cb_checkGoto(_2088d3169_scopeChecker* _self_, jule::Ptr<_2088cdad2_GotoSt>* _195530_gt, jule::Ptr<_2088d1ca0_scopeLabel>* _195548_label) {
	jule::I64 _19567_n = 0LL;;
	if (((*((*(_195530_gt))))._field_Scope == (*((*((*(_195548_label))))._field_node))._field_Scope)) {
		if (((*((*(_195530_gt))))._field_Index > (*(*((*(_195548_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_19567_n=(*((*(_195530_gt))))._field_Index;
	} else if (((*((*((*(_195530_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_195548_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_2088ca969_Scope> _19698_gtsc = (*((*(_195530_gt))))._field_Scope;;
		while ((((*_19698_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_195548_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_19698_gtsc=(*(_19698_gtsc))._field_Parent;
			}
		_iter_next_2191c0072:;
		}
		_iter_end_2191c0072:;;
		if (((*_19698_gtsc.alloc)._field_StmtIndex > (*(*((*(_195548_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_19567_n=(*_19698_gtsc.alloc)._field_StmtIndex;
	} else {
		_19567_n=0LL;
	};
	jule::Ptr<_2088ca969_Scope> _19917_s = (*((*((*(_195548_label))))._field_node))._field_Scope;;
	jule::I64 _19927_i = ((*(*((*(_195548_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_19927_i >= _19567_n); (_19927_i)--) {
				{
					jule::Any _19959_stmt = (*(_19917_s))._field_Stmts[_19927_i];;
					if (_2088e6116_stmtIsDef(&(_19959_stmt))) {
						_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_195530_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_195530_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_2191c3a59:;
			}
			_iter_end_2191c3a59:;;
			if (((*(_19917_s))._field_ChildIndex > (*((*((*(_195530_gt))))._field_Scope))._field_ChildIndex)) {
				_19917_s=(*(_19917_s))._field_Parent;
				_19927_i=((*_19917_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_2191c377e;
			};
			goto _iter_end_2191c377e;
		}
	_iter_next_2191c377e:;
	}
	_iter_end_2191c377e:;;
}



inline void _2088e47c9_checkGotos(_2088d3169_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2191c66c7:;
		if (it != expr_end) {
			jule::Ptr<_2088cdad2_GotoSt> _201315_gt = *it;
			{
				jule::Ptr<_2088d1ca0_scopeLabel> _20148_label = _2088d7877_findLabelAll(_self_, &((*(_201315_gt))._field_Ident));;
				if ((_20148_label == nullptr)) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_201315_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_201315_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_2191c66c7;
				};
				(*_201315_gt.alloc)._field_Label=(*(_20148_label))._field_node;
				(*_20148_label.alloc)._field_used=true;
				_2088e45cb_checkGoto(_self_, &(_201315_gt), &(_20148_label));
			}
			_iter_next_2191c66c7:;
			++it;
			goto _iter_begin_2191c66c7;
		}
		_iter_end_2191c66c7:;
	};
}



inline void _2088e49c7_checkLabels(_2088d3169_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2191c6cc1:;
		if (it != expr_end) {
			jule::Ptr<_2088d1ca0_scopeLabel> _202610_l = *it;
			{
				if ((!((*(_202610_l))._field_used))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_202610_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_202610_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_2191c6cc1:;
			++it;
			goto _iter_begin_2191c6cc1;
		}
		_iter_end_2191c6cc1:;
	};
}



inline void _2088e4bc5_checkVars(_2088d3169_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2191cae6d:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _203410_v = *it;
			{
				if (((((!((*(_203410_v))._field_Used)) && (!((*_203410_v.alloc)._field_Constant))) && (!(_20871420e_IsIgnoreIdent((*_203410_v.alloc)._field_Ident)))) && (!(_2087144c8_IsAnonIdent((*_203410_v.alloc)._field_Ident))))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_203410_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_203410_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_2191cae6d:;
			++it;
			goto _iter_begin_2191cae6d;
		}
		_iter_end_2191cae6d:;
	};
}



inline void _2088e4dc3_checkAliases(_2088d3169_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2191cd734:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> _204210_a = *it;
			{
				if ((((!((*(_204210_a))._field_Used)) && (!(_20871420e_IsIgnoreIdent((*_204210_a.alloc)._field_Ident)))) && (!(_2087144c8_IsAnonIdent((*_204210_a.alloc)._field_Ident))))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_204210_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_204210_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_2191cd734:;
			++it;
			goto _iter_begin_2191cd734;
		}
		_iter_end_2191cd734:;
	};
}



inline void _2088e5236_check(jule::Ptr<_2088d3169_scopeChecker> _self_, jule::Ptr<_208737441_ScopeTree>* _205027_tree, jule::Ptr<_2088ca969_Scope>* _205055_s) {
	(*((*(_205055_s))))._field_Deferred=(*((*(_205027_tree))))._field_Deferred;
	(*((*(_205055_s))))._field_Unsafety=(*((*(_205027_tree))))._field_Unsafety;
	jule::I64 _20543_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_205027_tree));
	(*_self_.alloc)._field_scope=(*(_205055_s));
	_2088e4268_checkTree(_self_);
	if ((_20543_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_2088e4bc5_checkVars(_self_);
		_2088e4dc3_checkAliases(_self_);
		if (_2088d57dc_isRoot(_self_)) {
			_2088e47c9_checkGotos(_self_);
			_2088e49c7_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_2088d3169_scopeChecker> _2088e54bc_newChildChecker(jule::Ptr<_2088d3169_scopeChecker> _self_) {
	jule::Ptr<_2088d3169_scopeChecker> _20747_base = _2088c99e0_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_20747_base))._field_parent=_self_;
	(*_20747_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_20747_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_20747_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _20747_base;;
}








inline jule::Bool _2088e86ac_directiveChecker_eq(_2088e86ac_directiveChecker *_self_, _2088e86ac_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _2088e8b0d_checkCdef(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2191da884:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_20881e2b4_Fn>()))._field_Binded) {
					goto _match_end_2191d9751;
				};
				goto _case_begin_2191d97b7;
			}
		}
		else {
			_case_begin_2191d97b7:;
			{
				_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2191d9751:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _2088e8db6_checkTypedef(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2191dd942:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_208746230_Struct>()))._field_Binded) {
					goto _match_end_2191dc80e;
				};
				goto _case_begin_2191dc875;
			}
		}
		else {
			_case_begin_2191dc875:;
			{
				_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2191dc80e:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _2088e916e_checkNamespace(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2191e1a00:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_208746230_Struct>()))._field_Binded))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2191e068b:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_20881e2b4_Fn>()))._field_Binded))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2191e0999:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_20894d7de_Var>()))._field_Binded))) {
					_20892d659_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_2191e0933:;
			{
				_20892d659_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2191e08bc:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_208711827_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_733_arg))._field_Kind[0LL] != '\"')) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*(_733_arg))._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2191ebbd6:;
			{
				if ((_2089c5dd8_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_208726760_Directive> _919_typedef = jule::new_ptr<_208726760_Directive>(_208726760_Directive{._field_Tag=jule::new_ptr<_208711827_Token>((*((*((*(_4835_d))))._field_Tag))), ._field_Args=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr)});;
					(*(*(_919_typedef))._field_Tag.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_208726760_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_2191ebb5e:;
	};
}



inline void _2088e9427_checkDeprecated(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_219200426:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_208746230_Struct>()))._field_Binded) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2191ed16b:;
			{
				jule::Ptr<_20881e2b4_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_20881e2b4_Fn>();;
				if ((((*(_1078_f))._field_Binded || _20881ec87_IsEntryPoint(_1078_f.ptr())) || _20882001d_IsInit(_1078_f.ptr()))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2191ee3c0:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_20894d7de_Var>()))._field_Binded) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_2191ee359:;
			{
				_20892d659_pushErr((*(_self_))._field_s, (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_10036_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2191ee2e3:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_208711827_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1263_arg))._field_Kind[0LL] != '\"')) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*(_1263_arg))._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _2088e96d0_checkTest(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_21920bbe6:;
			{
				jule::Ptr<_20881e2b4_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_20881e2b4_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_20882001d_IsInit(_1444_f)))) && (!(_20881ec87_IsEntryPoint(_1444_f))))) {
					goto _match_end_21920aab3;
				};
				if (_20881ea01_IsMethod(_1444_f.ptr())) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_21920aab3;
				};
				goto _case_begin_21920ab29;
			}
		}
		else {
			_case_begin_21920ab29:;
			{
				_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_21920aab3:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _2088e9988_checkExport(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2192117cd:;
			{
				jule::Ptr<_20881e2b4_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_20881e2b4_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _20882001d_IsInit(_1654_f.ptr())) || _20881ec87_IsEntryPoint(_1654_f.ptr())) || _20881ea01_IsMethod(_1654_f.ptr())) || ((*(_1654_f))._field_Generics.len() > 0LL))) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_219210469:;
			{
				jule::Ptr<_20894d7de_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_20894d7de_Var>();;
				if (((*(_1714_v))._field_Binded || (*(_1714_v))._field_Constant)) {
					_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_219210711:;
			{
				_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_21921069a:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_208711827_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1873_arg))._field_Kind[0LL] != '\"')) {
		_20892d659_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*(_1873_arg))._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _2088e9c41_checkDirective(_2088e86ac_directiveChecker* _self_, jule::Ptr<_208726760_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_21921d576:;
			{
				_2088e8b0d_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_21921c487:;
			{
				_2088e8db6_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_21921c4ed:;
			{
				_2088e916e_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_21921c564:;
			{
				_2088e9427_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_21921c5ca:;
			{
				_2088e96d0_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_21921c641:;
			{
				_2088e9988_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_21921c6a7:;
			{
				_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_219217a6a:;
			{
				_20892d659_pushErr((*(_self_))._field_s, (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_20035_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_21921c3aa:;
	};
}



inline void _2088e9e3e_check(_2088e86ac_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219221216:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _22315_d = *it;
			{
				_2088e9c41_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_219221216:;
			++it;
			goto _iter_begin_219221216;
		}
		_iter_end_219221216:;
	};
}







inline jule::Ptr<_2088eaeb7_ReferenceStack> static__2088eb32a_new(void) {
	return jule::new_ptr<_2088eaeb7_ReferenceStack>(_2088eaeb7_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _2088eb726_Len(_2088eaeb7_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _2088eba67_At(_2088eaeb7_ReferenceStack* _self_, jule::I64 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _2088ebd20_Push(_2088eaeb7_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _2196e1076_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_2087490bd_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2196e231e:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_2196e231e:;
			++it;
			goto _iter_begin_2196e231e;
		}
		_iter_end_2196e231e:;
	};
	return false;;
}

inline jule::Bool _2196ebe1c_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_208822372_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2196ed171:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_2196ed171:;
			++it;
			goto _iter_begin_2196ed171;
		}
		_iter_end_2196ed171:;
	};
	return false;;
}

inline jule::Bool _219713263_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_20894d7de_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21971450b:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_21971450b:;
			++it;
			goto _iter_begin_21971450b;
		}
		_iter_end_21971450b:;
	};
	return false;;
}

inline jule::Bool _219b2a603_Exist(_2088eaeb7_ReferenceStack* _self_, jule::Ptr<_2088299c8_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219b2b802:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_219b2b802:;
			++it;
			goto _iter_begin_219b2b802;
		}
		_iter_end_219b2b802:;
	};
	return false;;
}








inline jule::Bool _2088ec518_Pass_eq(_2088ec518_Pass *_self_, _2088ec518_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _2089029c4_pushErr(_208901ebd_symBuilder* _self_, jule::Ptr<_208711827_Token>* _30824_token, jule::Str _30846_fmt, jule::Slice<jule::Any> _30866_args) {
	{ jule::Slice<_21e65b904_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20892827a_compilerErr(_30824_token, true, _30846_fmt, _30866_args)); };
}



inline void _208903255_pushSuggestion(_208901ebd_symBuilder* _self_, jule::Str _31730_fmt, jule::Slice<jule::Any> _31750_args) {
	{
		_20892939c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31730_fmt, _31750_args);
	};
}



inline jule::Bool _208903651_checkCppUseDeclPath(_208901ebd_symBuilder* _self_, jule::Ptr<_20874036c_UseDecl>* _32136_decl, jule::Str* _32158_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3223_ext = _220c6855e_Ext((*(_32158_path)));;
	if (((!(_21e611ba6_IsValidHeaderExt(_3223_ext))) && (!(_21e611e70_IsValidCppExt(_3223_ext))))) {
		_2089029c4_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3223_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21e88b804_Stat _3293_info = ({
		auto except = static__21e80ce3a_Of((*(_32158_path)));
		(except.ok()) ? (except.result) : ({{
			_2089029c4_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32136_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _21e88b804_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_21e88bc11_IsDir(&_3293_info)) {
		_2089029c4_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32136_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20890d040_ImportInfo> _20890395e_buildCppHeaderImport(_208901ebd_symBuilder* _self_, jule::Ptr<_20874036c_UseDecl>* _34141_decl) {
	jule::Str _3427_path = (*((*((*(_34141_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_21e6118cb_IsStdHeaderPath(_3427_path)))) {
		_3427_path=_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _208718059_Dir((*((*((*(_34141_decl))))._field_Token))._field_File.ptr()); (*it++) = _3427_path; __jule_collection; }));
		jule::Bool _3468_ok = _208903651_checkCppUseDeclPath(_self_, _34141_decl, &(_3427_path));;
		if ((!(_3468_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _220c68828_Abs(_3427_path);
			_3427_path = __jule_assign_result.__jule_result_arg0;
			_3468_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3468_ok))) {
			_2089029c4_pushErr(_self_, &((*((*(_34141_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_20890d040_ImportInfo>(_20890d040_ImportInfo{._field_Decl=(*(_34141_decl)), ._field_Path=_3427_path, ._field_LinkPath=(*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _208903d5a_checkAbsPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Str _37133_filepath, jule::Ptr<_20874036c_UseDecl>* _37153_decl) {
	jule::Str _3723_modPath = ((_20890a03c_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_2089090a2_GetModPath((*(_self_))._field_importer.data);;
	if ((_3723_modPath.len() == 0LL)) {
		_2089029c4_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_208903255_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37133_filepath=_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3723_modPath; (*it++) = _37133_filepath; __jule_collection; }));
	jule::Bool _38013_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _220c68828_Abs(_37133_filepath);
		_37133_filepath = __jule_assign_result.__jule_result_arg0;
		_38013_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38013_ok))) {
		_2089029c4_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_21e88b804_Stat _3873_info = ({
		auto except = static__21e80ce3a_Of(_37133_filepath);
		(except.ok()) ? (except.result) : ({{
			_2089029c4_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _21e88b804_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21e88bc11_IsDir(&_3873_info)))) {
		_2089029c4_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37133_filepath;;
}



inline jule::Str _208904256_checkStdAbsPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Str _40036_filepath, jule::Ptr<_20874036c_UseDecl>* _40056_decl) {
	(_40036_filepath).mut_slice(4LL);;
	_40036_filepath=_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _220c6bce3_PathStdlib; (*it++) = _40036_filepath; __jule_collection; }));
	jule::Bool _40313_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _220c68828_Abs(_40036_filepath);
		_40036_filepath = __jule_assign_result.__jule_result_arg0;
		_40313_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40313_ok))) {
		_2089029c4_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_21e88b804_Stat _4103_info = ({
		auto except = static__21e80ce3a_Of(_40036_filepath);
		(except.ok()) ? (except.result) : ({{
			_2089029c4_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _21e88b804_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21e88bc11_IsDir(&_4103_info)))) {
		_2089029c4_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _40036_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _208904597_checkImpPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20874036c_UseDecl>* _42334_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4243_path = (*((*((*(_42334_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_220c5c4cb_HasSuffix(_4243_path, jule::Str::lit("/", 1))) {
		_2089029c4_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4293_parts = _220c61623_SplitAll(_4243_path, jule::Str::lit("/", 1));;
	if ((_4293_parts.len() == 0LL)) {
		_2089029c4_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4293_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4293_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208569a26:;
		if (it != expr_end) {
			jule::Str *_43510_part = it;
			{
				if ((((*(_43510_part))).empty() || _20871420e_IsIgnoreIdent((*(_43510_part))))) {
					_2089029c4_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43510_part)); __jule_collection; }));
			}
			_iter_next_208569a26:;
			++it;
			goto _iter_begin_208569a26;
		}
		_iter_end_208569a26:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_208904256_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42334_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_208903d5a_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42334_decl);
	};
	return __jule_func_result;;
}



inline void _208904850_assignAlias(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20890d040_ImportInfo>* _45333_imp) {
	jule::I64 _4547_i = _220c5d576_FindLast((*((*(_45333_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4547_i)++;
	jule::Str _4563_path = (*((*(_45333_imp))))._field_LinkPath.slice(_4547_i);;
	(*((*(_45333_imp))))._field_Alias=_4563_path;
}



inline jule::Ptr<_20890d040_ImportInfo> _208904b91_buildImport(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20874036c_UseDecl>* _46033_decl) {
	if ((*((*(_46033_decl))))._field_Binded) {
		return _20890395e_buildCppHeaderImport(_self_.ptr(), _46033_decl);;
	};
	jule::Bool _4643_std;
	jule::Str _4648_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _208904597_checkImpPath(_self_, _46033_decl);
		_4643_std = __jule_assign_result.__jule_result_arg0;
		_4648_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4648_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_20890d040_ImportInfo> _4697_imp = jule::new_ptr<_20890d040_ImportInfo>(_20890d040_ImportInfo{._field_Decl=(*(_46033_decl)), ._field_Path=_4648_filepath, ._field_LinkPath=(*((*((*(_46033_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_46033_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4643_std, ._field_Package=jule::new_ptr<_2089107b2_Package>(_2089107b2_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_46033_decl))))._field_Alias != nullptr)) {
		(*(_4697_imp))._field_Alias=(*(*((*(_46033_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_208908227_isImplicitImport(_4697_imp)))) {
		_208904850_assignAlias(_self_, &(_4697_imp));
	};
	return _4697_imp;;
}



inline jule::Ptr<_20890d040_ImportInfo> _208904ed2_findUseDecl(_208901ebd_symBuilder* _self_, jule::Ptr<_20890d040_ImportInfo>* _48728_pkg) {
	return _208825ad4_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_20890d040_ImportInfo>>((void*)__jule_anon_2085752d4, jule::Ptr<__jule_anon_2085752d4_ctx>::make(__jule_anon_2085752d4_ctx{._48728_pkg=_48728_pkg}).as<jule::Uintptr>(), __jule_anon_2085752d4_ctx_handler));;
}



inline jule::Bool _208905323_checkDuplicateUseDecl(_208901ebd_symBuilder* _self_, jule::Ptr<_20890d040_ImportInfo>* _49542_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20890d040_ImportInfo> _4967_lpkg = _208904ed2_findUseDecl(_self_, _49542_pkg);;
	if ((_4967_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_2089029c4_pushErr(_self_, &((*((*((*(_49542_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49542_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_208903255_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _208905664_getAsLinkPath(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Str _50534_path) {
	_21e64c5b5_Builder _5067_sb = static__21e64ce12_New(_50534_path.len());;
	if (_220c5c157_HasPrefix(_50534_path, _220c6bce3_PathStdlib)) {
		(_50534_path).mut_slice(_220c6bce3_PathStdlib.len());;
		({
			auto except = _21e64d594_WriteStr(&_5067_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&_5067_sb, _220c632a1_ReplaceAll(_50534_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
			(except.result);
		});
		({
			auto except = _21e64d84c_WriteByte(&_5067_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:511:4"));
		});
		return _21e64de24_Str(&_5067_sb);;
	};
	jule::Str _5153_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _220c68828_Abs(((_20890a03c_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_2089090a2_GetModPath((*(_self_))._field_importer.data));
		_5153_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50534_path).mut_slice(_5153_root.len());;
	if ((_50534_path[0LL] == 47LLU)) {
		(_50534_path).mut_slice(1LL);;
	};
	({
		auto except = _21e64d84c_WriteByte(&_5067_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&_5067_sb, _220c632a1_ReplaceAll(_50534_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&_5067_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:522:3"));
	});
	return _21e64de24_Str(&_5067_sb);;
}



inline void _208905a82_pushCycleError(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_208901ebd_symBuilder>* _52632_sb, jule::Str _52649_path, _21e64c5b5_Builder* _52665_message) {
	;
	jule::Str _5283_refersTo = _21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_208905664_getAsLinkPath(_self_, _208718059_Dir((*((*((*(_52632_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_208905664_getAsLinkPath(_self_, _52649_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5323_m = _21e64de24_Str(_52665_message);;
	({
		auto except = _21e64d594_WriteStr(_52665_message, _220c5bc8e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_52665_message, _5283_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_52665_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_52665_message, _5323_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:536:3"));
		(except.result);
	});
}



inline void _208905ea0_pushCrossCycleError(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_208901ebd_symBuilder>* _53937_target, jule::Ptr<_20890d040_ImportInfo>* _53959_imp, jule::Ptr<_208711827_Token>* _53978_errorToken) {
	_21e64c5b5_Builder _5407_message = static__21e64ce12_New(32LL);;
	_208905a82_pushCycleError(_self_, &(_self_), (*((*(_53959_imp))))._field_Path, &(_5407_message));
	jule::Ptr<_208901ebd_symBuilder> _5447_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_208901ebd_symBuilder> _5457_old = _self_;;
	while (((*(_5447_owner))._field_owner != nullptr)) {
		{
			_208905a82_pushCycleError(_self_, &((*_5457_old.alloc)._field_owner), _208718059_Dir((*((*_5457_old.alloc)._field_table))._field_File.ptr()), &(_5407_message));
			if (((*_5447_owner.alloc)._field_owner == (*(_53937_target)))) {
				_208905a82_pushCycleError(_self_, _53937_target, _208718059_Dir((*((*(_5447_owner))._field_table))._field_File), &(_5407_message));
				goto _iter_end_208580e16;
			};
			_5457_old=_5447_owner;
			_5447_owner=(*(_5447_owner))._field_owner;
		}
	_iter_next_208580e16:;
	}
	_iter_end_208580e16:;;
	_2089029c4_pushErr(_self_, _53978_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21e64de24_Str(&_5407_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _20890639b_checkImportCycles(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20890d040_ImportInfo> _56234_imp, jule::Ptr<_20874036c_UseDecl>* _56253_decl) {
	if (((*(_56234_imp))._field_Path == _208718059_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_2089029c4_pushErr(_self_, &((*((*(_56253_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_208905664_getAsLinkPath(_self_, (*_56234_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_208901ebd_symBuilder> _5727_owner = (*(_self_))._field_owner;;
	_julec_label_208585624:;
	if ((_208718059_Dir((*((*(_5727_owner))._field_table))._field_File.ptr()) == (*(_56234_imp))._field_Path)) {
		_208905ea0_pushCrossCycleError(_self_, &(_5727_owner), &(_56234_imp), &((*((*(_56253_decl))))._field_Token));
		return false;;
	};
	if (((*(_5727_owner))._field_owner != nullptr)) {
		_5727_owner=(*_5727_owner.alloc)._field_owner;
		goto _julec_label_208585624;
	};
	return true;;
}



inline void _2089067b9_checkPackageAccessibility(_208901ebd_symBuilder* _self_, jule::Ptr<_20874036c_UseDecl>* _59342_decl, jule::Str* _59364_mod, jule::Str* _59375_path) {
	if ((((_20890a03c_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_2089090a2_GetModPath((*(_self_))._field_importer.data) == (*(_59364_mod)))) {
		return;;
	};
	;
	jule::I64 _5983_i = _220c5ccc3_Find((*(_59375_path)), jule::Str::lit("internal", 8));;
	if ((_5983_i == -1LL)) {
		return;;
	};
	if ((_5983_i == 0LL)) {
		if (((((*(_59375_path)).len() - 8LL) == 0LL) || _220c5c157_HasPrefix((*(_59375_path)), jule::Str::lit("internal/", 9)))) {
			_2089029c4_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59375_path)).slice((_5983_i - 1LL)).equal("/internal", 9)) {
		_2089029c4_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _6163_n = ((_5983_i + 8LL) + 1LL);;
	if (((_6163_n < (*(_59375_path)).len()) && (*(_59375_path)).slice((_5983_i - 1LL), _6163_n).equal("/internal/", 10))) {
		_2089029c4_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _208906bb5_importPackage(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20890d040_ImportInfo>* _62335_imp, jule::Ptr<_20874036c_UseDecl>* _62358_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62335_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20890d040_ImportInfo> _6287_port = ((_20890a03c_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_208909734_GetImport((*(_self_))._field_importer.data, (*((*(_62335_imp))))._field_Path);;
	if ((_6287_port != nullptr)) {
		(*((*(_62335_imp))))._field_Package=(*_6287_port.alloc)._field_Package;
		(*((*(_62335_imp))))._field_Duplicate=true;
		jule::Str _6334_oldMod = ((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_2089090a2_GetModPath((*_self_.alloc)._field_importer.data);;
		((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_208908db5_SetModPath((*_self_.alloc)._field_importer.data, ((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_2089093e3_ModById((*_self_.alloc)._field_importer.data, (*((*(_62335_imp))))._field_ModId));
		_2089067b9_checkPackageAccessibility(_self_, _62358_decl, &(_6334_oldMod), &((*_6287_port.alloc)._field_Path));
		((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_208908db5_SetModPath((*_self_.alloc)._field_importer.data, _6334_oldMod);
	} else {
		if ((!(_20890639b_checkImportCycles(_self_, (*(_62335_imp)), _62358_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6424_oldMod = ((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_2089090a2_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_208908db5_SetModPath((*_self_.alloc)._field_importer.data, _6424_oldMod);
		});;
		if ((*((*(_62335_imp))))._field_Std) {
			((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_208908db5_SetModPath((*_self_.alloc)._field_importer.data, _220c6bce3_PathStdlib);
		};
		jule::Slice<jule::Ptr<_2087253da_AST>> _6478_asts;
		jule::Slice<_21e65b904_Log> _64718_errors;
		({
			__jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log __jule_assign_result = ((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_208909b30_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62335_imp))))._field_Path, (!((*((*(_62335_imp))))._field_Std)));
			_6478_asts = __jule_assign_result.__jule_result_arg0;
			_64718_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64718_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64718_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_2089067b9_checkPackageAccessibility(_self_, _62358_decl, &(_6424_oldMod), &((*((*(_62335_imp))))._field_Path));
		{
			auto expr = &(_6478_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2085972a1:;
			if (it != expr_end) {
				jule::Ptr<_2087253da_AST> _65516_ast = *it;
				{
					jule::Ptr<_2088255b7_SymTab> _6569_table = static_cast<jule::Ptr<_2088255b7_SymTab>>(nullptr);;
					({
						__jule_tuple_x_2088255b7_SymTab__jule_tuple_s_21e65b904_Log __jule_assign_result = _208a01210_buildSymbols(&(_65516_ast), &((*_self_.alloc)._field_importer), _self_);
						_6569_table = __jule_assign_result.__jule_result_arg0;
						_64718_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64718_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64718_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62335_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62335_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088255b7_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6569_table; __jule_collection; }));
				}
				_iter_next_2085972a1:;
				++it;
				goto _iter_begin_2085972a1;
			}
			_iter_end_2085972a1:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20890d040_ImportInfo> _208907006_importUseDecl(jule::Ptr<_208901ebd_symBuilder> _self_, jule::Ptr<_20874036c_UseDecl>* _66935_decl) {
	jule::Ptr<_20890d040_ImportInfo> _6707_imp = _208904b91_buildImport(_self_, _66935_decl);;
	if ((_6707_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6757_ok = _208905323_checkDuplicateUseDecl(_self_, &(_6707_imp));;
	if ((!(_6757_ok))) {
		return nullptr;;
	};
	_6757_ok=_208906bb5_importPackage(_self_, &(_6707_imp), _66935_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_20890d040_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6707_imp; __jule_collection; }));
	if (_6757_ok) {
		((_20890a03c_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_208909dd8_Imported((*_self_.alloc)._field_importer.data, _6707_imp);
		return _6707_imp;;
	};
	return nullptr;;
}



inline void _208907204_importUseDecls(jule::Ptr<_208901ebd_symBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20859cc24:;
		if (it != expr_end) {
			jule::Ptr<_20874036c_UseDecl> _68915_decl = *it;
			{
				_208907006_importUseDecl(_self_, &(_68915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_20859cc24;
				};
			}
			_iter_next_20859cc24:;
			++it;
			goto _iter_begin_20859cc24;
		}
		_iter_end_20859cc24:;
	};
}



inline void _2089074ac_appendNode(_208901ebd_symBuilder* _self_, _208726342_Node* _69831_node) {
	{
		auto &_match_expr{ (*(_69831_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_20859d230:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088c7977_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _208901907_buildImpl((*(_69831_node))._field_Data.unsafe_cast_ptr<_208743dcb_Impl>()); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_20859e275:;
			{
				jule::Ptr<_2089cd94b_TypeAlias> _7038_ta = _2088ece53_buildTypeAlias((*(_69831_node))._field_Data.unsafe_cast_ptr<_20873e019_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7038_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_20859e2db:;
			{
				jule::Ptr<_208746230_Struct> _7068_srct = _2088ed7e4_buildStruct((*(_69831_node))._field_Data.unsafe_cast_ptr<_20874302e_StructDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_208746230_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7068_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_20859e352:;
			{
				jule::Ptr<_20881e2b4_Fn> _7098_f = _2088ee493_buildFunc((*(_69831_node))._field_Data.unsafe_cast_ptr<_2087390d0_FnDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_20881e2b4_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7098_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_20859e3b8:;
			{
				jule::Ptr<_2088299c8_Trait> _7128_t = _2088eece0_buildTrait((*(_69831_node))._field_Data.unsafe_cast_ptr<_20874376b_TraitDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088299c8_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7128_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_20859e42e:;
			{
				jule::Ptr<_20894d7de_Var> _7158_v = _208901374_buildVar((*(_69831_node))._field_Data.unsafe_cast_ptr<_20873a28a_VarDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7158_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_20859eb9e:;
			{
				jule::Ptr<_20882c17e_Enum> _7188_e = _20890086d_buildEnum((*(_69831_node))._field_Data.unsafe_cast_ptr<_2087413d4_EnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_20882c17e_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7188_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20859ec15:;
			{
				jule::Ptr<_20882d889_TypeEnum> _7218_e = _2089010aa_buildTypeEnum((*(_69831_node))._field_Data.unsafe_cast_ptr<_20874236e_TypeEnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_20882d889_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7218_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_20859e165:;
			{
				_2089029c4_pushErr(_self_, &((*(_69831_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_20859e0ee:;
	};
}



inline void _2089076aa_appendNodes(_208901ebd_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085b7733:;
		if (it != expr_end) {
			_208726342_Node _72915_node = *it;
			{
				_2089074ac_appendNode(_self_, &(_72915_node));
			}
			_iter_next_2085b7733:;
			++it;
			goto _iter_begin_2085b7733;
		}
		_iter_end_2085b7733:;
	};
}



inline void _208907963_pushDirectivePass(_208901ebd_symBuilder* _self_, jule::Ptr<_208726760_Directive>* _73438_d) {
	if (((*((*(_73438_d))))._field_Args.len() == 0LL)) {
		_2089029c4_pushErr(_self_, &((*((*(_73438_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73438_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_208711827_Token> _7394_arg = (*((*(_73438_d))))._field_Args[1LL];;
		_2089029c4_pushErr(_self_, &(_7394_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73438_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_208711827_Token> _7433_arg = (*((*(_73438_d))))._field_Args[0LL];;
	if (((*(_7433_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_2089029c4_pushErr(_self_, &(_7433_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7433_arg))._field_Kind[0LL] != '\"')) {
		_2089029c4_pushErr(_self_, &(_7433_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_2088ec518_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2088ec518_Pass{._field_Token=(*((*(_73438_d))))._field_Tag, ._field_Text=(*(_7433_arg))._field_Kind.slice(1LL, ((*_7433_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _208907b61_appendTopDirectives(_208901ebd_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085bddbb:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _76115_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76115_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_2085c0890:;
						{
							_208907963_pushDirectivePass(_self_, &(_76115_d));
						}
					}
					_match_end_2085c07b3:;
				};
			}
			_iter_next_2085bddbb:;
			++it;
			goto _iter_begin_2085bddbb;
		}
		_iter_end_2085bddbb:;
	};
}



inline void _208907d5e_build(jule::Ptr<_208901ebd_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_2088255b7_SymTab>(_2088255b7_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_2088ec518_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_20890d040_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_20881e2b4_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_2088299c8_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_20882c17e_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_20882d889_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_2088c7977_Impl>>(nullptr)});
	_208907b61_appendTopDirectives(_self_);
	_208907204_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_2089076aa_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _20890d040_ImportInfo_eq(_20890d040_ImportInfo *_self_, _20890d040_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_20890d040_ImportInfo> _20890d55c_SelectPackage(_20890d040_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_20894d7de_Var> _20890d958_FindVar(_20890d040_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890a801_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _20890dd54_FindTypeAlias(_20890d040_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890ac30_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_208746230_Struct> _20890e250_FindStruct(_20890d040_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890b1d6_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_20881e2b4_Fn> _20890e64b_FindFn(_20890d040_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890b5d2_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_2088299c8_Trait> _20890e98c_FindTrait(_20890d040_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890b956_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_20882c17e_Enum> _20890eccd_FindEnum(_20890d040_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890bcca_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_20882d889_TypeEnum> _20891011e_FindTypeEnum(_20890d040_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_2089104d7_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _20890c25e_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _2089104d7_isLookupable(_20890d040_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_20890d040_ImportInfo> _208910c8a_SelectPackage(_2089107b2_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_20894d7de_Var> _208911186_FindVar(_2089107b2_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _20890a801_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _208911582_FindTypeAlias(_2089107b2_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _20890ac30_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_208746230_Struct> _20891197d_FindStruct(_2089107b2_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _20890b1d6_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_20881e2b4_Fn> _208911d79_FindFn(_2089107b2_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _20890b5d2_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_2088299c8_Trait> _2089121ba_FindTrait(_2089107b2_Package* _self_, jule::Str _31125_ident) {
	return _20890b956_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_20882c17e_Enum> _20891250b_FindEnum(_2089107b2_Package* _self_, jule::Str _31724_ident) {
	return _20890bcca_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_20882d889_TypeEnum> _20891284c_FindTypeEnum(_2089107b2_Package* _self_, jule::Str _32328_ident) {
	return _20890c25e_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_2088ae596_comptimeTypeInfo> _208929c0a_pushComptimeTypeInfo(_208929765_commonSemaMeta* _self_, jule::Ptr<_2089ce661_Type>* _21141_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2086225a1:;
		if (it != expr_end) {
			jule::Ptr<_2088ae596_comptimeTypeInfo> _21215_t2 = *it;
			{
				if (_2089ced9d_Equal((*(_21215_t2))._field_base, (*(_21141_t)))) {
					return _21215_t2;;
				};
			}
			_iter_next_2086225a1:;
			++it;
			goto _iter_begin_2086225a1;
		}
		_iter_end_2086225a1:;
	};
	jule::Ptr<_2088ae596_comptimeTypeInfo> _2177_t1 = jule::new_ptr<_2088ae596_comptimeTypeInfo>(_2088ae596_comptimeTypeInfo{._field_base=(*(_21141_t))});;
	{ jule::Slice<jule::Ptr<_2088ae596_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2177_t1); };
	return _2177_t1;;
}







inline jule::Ptr<_20890d040_ImportInfo> _20892ac2d_SelectPackage(_20892a755_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_20890d040_ImportInfo>> _24729_selector) {
	return _208825ad4_SelectPackage((*(_self_))._field_file.ptr(), _24729_selector);;
}



inline jule::Ptr<_20894d7de_Var> _20892b129_FindVar(_20892a755_sema* _self_, jule::Str _25723_ident, jule::Bool _25735_binded) {
	jule::Ptr<_20894d7de_Var> _2597_v = _20890a801_findVarInPackage(&((*(_self_))._field_files), &(_25723_ident), _25735_binded);;
	if ((_2597_v != nullptr)) {
		return _2597_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _20892b525_FindTypeAlias(_20892a755_sema* _self_, jule::Str _27229_ident, jule::Bool _27241_binded) {
	jule::Ptr<_2089cd94b_TypeAlias> _2747_ta = _20890ac30_findTypeAliasInPackage(&((*(_self_))._field_files), &(_27229_ident), _27241_binded);;
	if ((_2747_ta != nullptr)) {
		return _2747_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_208746230_Struct> _20892b921_FindStruct(_20892a755_sema* _self_, jule::Str _28726_ident, jule::Bool _28738_binded) {
	jule::Ptr<_208746230_Struct> _2897_s = _20890b1d6_findStructInPackage(&((*(_self_))._field_files), &(_28726_ident), _28738_binded);;
	if ((_2897_s != nullptr)) {
		return _2897_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_20881e2b4_Fn> _20892bd1c_FindFn(_20892a755_sema* _self_, jule::Str _30222_ident, jule::Bool _30234_binded) {
	jule::Ptr<_20881e2b4_Fn> _3047_f = _20890b5d2_findFnInPackage(&((*(_self_))._field_files), &(_30222_ident), _30234_binded);;
	if ((_3047_f != nullptr)) {
		return _3047_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_2088299c8_Trait> _20892c15d_FindTrait(_20892a755_sema* _self_, jule::Str _31725_ident) {
	jule::Ptr<_2088299c8_Trait> _3197_t = _20890b956_findTraitInPackage(&((*(_self_))._field_files), &(_31725_ident));;
	if ((_3197_t != nullptr)) {
		return _3197_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_20882c17e_Enum> _20892c49e_FindEnum(_20892a755_sema* _self_, jule::Str _33224_ident) {
	jule::Ptr<_20882c17e_Enum> _3347_e = _20890bcca_findEnumInPackage(&((*(_self_))._field_files), &(_33224_ident));;
	if ((_3347_e != nullptr)) {
		return _3347_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_20882d889_TypeEnum> _20892c7e0_FindTypeEnum(_20892a755_sema* _self_, jule::Str _34728_ident) {
	jule::Ptr<_20882d889_TypeEnum> _3497_e = _20890c25e_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34728_ident));;
	if ((_3497_e != nullptr)) {
		return _3497_e;;
	};
	return nullptr;;
}



inline jule::Bool _20892cbec_isFlag(_20892a755_sema* _self_, jule::I64 _35918_flags) {
	return (((*(_self_))._field_flags & _35918_flags) == _35918_flags);;
}



inline jule::Ptr<_2088255b7_SymTab> _20892ce83_getCurrentFile(_20892a755_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _20892d23b_setCurrentFile(_20892a755_sema* _self_, jule::Ptr<_2088255b7_SymTab> _36234_f) {
	(*(_self_))._field_file=_36234_f;
}



inline void _20892d659_pushErr(_20892a755_sema* _self_, jule::Ptr<_208711827_Token> _36423_token, jule::Str _36445_fmt, jule::Slice<jule::Any> _36465_args) {
	{ jule::Slice<_21e65b904_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20892827a_compilerErr(&(_36423_token), true, _36445_fmt, _36465_args)); };
}



inline void _20892d9bc_pushSuggestion(_20892a755_sema* _self_, jule::Str _36930_fmt, jule::Slice<jule::Any> _36950_args) {
	{
		_20892939c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36930_fmt, _36950_args);
	};
}



inline jule::Bool _20892ddb8_isAccessibleDefine(_20892a755_sema* _self_, jule::Bool _37530_public, jule::Ptr<_208711827_Token> _37544_token) {
	if ((_37530_public || ((*(_37544_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3803_selfDir = _208718059_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3813_tokenDir = _208718059_Dir((*(_37544_token))._field_File.ptr());;
	if ((_3803_selfDir == _3813_tokenDir)) {
		return true;;
	};
	if ((_208912c8c_isStdPackage(&(_3813_tokenDir), jule::Str::lit("runtime", 7)) && _208912c8c_isStdPackage(&(_3803_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _20892e36e_isDuplicatedIdent(_20892a755_sema* _self_, jule::Uintptr _39829_itself, jule::Str* _39847_ident, jule::Bool _39859_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208633c00:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> *_39910_f = it;
			{
				if (_208828e6c_isDuplicatedIdent((*(_39910_f)).ptr(), _39829_itself, _39847_ident, _39859_binded)) {
					return true;;
				};
			}
			_iter_next_208633c00:;
			++it;
			goto _iter_begin_208633c00;
		}
		_iter_end_208633c00:;
	};
	return false;;
}



inline void _20892e6d2_checkDirectives(jule::Ptr<_20892a755_sema> _self_, jule::Slice<jule::Ptr<_208726760_Directive>>* _40737_d, jule::Any _40763_o) {
	_2088e86ac_directiveChecker _4087_dc = _2088e86ac_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_208726760_Directive>>>)(_40737_d)), ._field_o=_40763_o};;
	_2088e9e3e_check(&_4087_dc);
}



inline jule::Bool _20892eb88_checkGenericQuantity(_20892a755_sema* _self_, jule::I64 _41636_required, jule::I64 _41651_given, jule::Ptr<_208711827_Token> _41663_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41636_required == 0LL) && (_41651_given > 0LL))) {
			_case_begin_2086367b3:;
			{
				_20892d659_pushErr(_self_, _41663_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41636_required > 0LL) && (_41651_given == 0LL))) {
			_case_begin_208636829:;
			{
				_20892d659_pushErr(_self_, _41663_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41636_required < _41651_given)) {
			_case_begin_2086368a1:;
			{
				_20892d659_pushErr(_self_, _41663_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41636_required > _41651_given)) {
			_case_begin_208636928:;
			{
				_20892d659_pushErr(_self_, _41663_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2086366e7:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_20863661a:;
	};
}



inline jule::Bool _208930bbc_isUseAliasDuplication(_20892a755_sema* _self_, jule::Ptr<_20890d040_ImportInfo>* _47438_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20863a83e:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _47515_imp2 = *it;
			{
				if ((_47515_imp2 == (*(_47438_imp)))) {
					goto _iter_end_20863a83e;
				};
				if (((*(_47515_imp2))._field_Alias == (*((*(_47438_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_20863a83e:;
			++it;
			goto _iter_begin_20863a83e;
		}
		_iter_end_20863a83e:;
	};
	return false;;
}



inline jule::Bool _20893100d_checkAutoAlias(_20892a755_sema* _self_, jule::Ptr<_20890d040_ImportInfo>* _48635_imp) {
	if ((*((*(_48635_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4913_valid = _20894c249_isValidImpAlias((*((*(_48635_imp))))._field_Alias);;
	if (_4913_valid) {
		if (_208930bbc_isUseAliasDuplication(_self_, _48635_imp)) {
			_20892d659_pushErr(_self_, (*((*((*(_48635_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48635_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48635_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_20892d659_pushErr(_self_, (*((*((*(_48635_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48635_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48635_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4913_valid;;
}



inline jule::Bool _20893134e_checkImport(_20892a755_sema* _self_, jule::Ptr<_20890d040_ImportInfo>* _50432_imp) {
	if ((*((*(_50432_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_50432_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_20871420e_IsIgnoreIdent((*((*(_50432_imp))))._field_Alias)) {
			_20892d659_pushErr(_self_, (*(*((*(_50432_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_208930bbc_isUseAliasDuplication(_self_, _50432_imp)) {
			_20892d659_pushErr(_self_, (*(*((*(_50432_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50432_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_50432_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_20892d659_pushErr(_self_, (*(*((*(_50432_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_208908227_isImplicitImport((*(_50432_imp))))) && (!(_20893100d_checkAutoAlias(_self_, _50432_imp))))) {
		return false;;
	};
	if (((*((*((*(_50432_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_50432_imp))))._field_Duplicate))) {
		jule::Ptr<_20892a755_sema> _5318_sema = jule::new_ptr<_20892a755_sema>(_20892a755_sema{._field_errors=jule::Slice<_21e65b904_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_2088255b7_SymTab>>(nullptr), ._field_file=jule::Ptr<_2088255b7_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta, ._field_step=0LL});;
		_20894990b_check(_5318_sema, &((*((*((*(_50432_imp))))._field_Package))._field_Files));
		if (((*_5318_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5318_sema.alloc)._field_errors);;
			(*_5318_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _20893154c_checkImports(_20892a755_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20864a8d7:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _54615_file = *it;
			{
				_20892d23b_setCurrentFile(_self_, _54615_file);
				{
					auto expr = &((*(_54615_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20864b652:;
					if (it != expr_end) {
						jule::Ptr<_20890d040_ImportInfo> _54816_imp = *it;
						{
							jule::Bool _5495_ok = _20893134e_checkImport(_self_, &(_54816_imp));;
							if ((!(_5495_ok))) {
								return;;
							};
						}
						_iter_next_20864b652:;
						++it;
						goto _iter_begin_20864b652;
					}
					_iter_end_20864b652:;
				};
			}
			_iter_next_20864a8d7:;
			++it;
			goto _iter_begin_20864a8d7;
		}
		_iter_end_20864a8d7:;
	};
}



inline void _20893174a_implFileImpls(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20864b003:;
		if (it != expr_end) {
			jule::Ptr<_2088c7977_Impl> _55915_imp = *it;
			{
				_2089417d2_implImpl(_self_, &(_55915_imp));
			}
			_iter_next_20864b003:;
			++it;
			goto _iter_begin_20864b003;
		}
		_iter_end_20864b003:;
	};
}



inline void _208931948_implImpls(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20864d38a:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _56515_file = *it;
			{
				_20892d23b_setCurrentFile(_self_.ptr(), _56515_file);
				_20893174a_implFileImpls(_self_);
			}
			_iter_next_20864d38a:;
			++it;
			goto _iter_begin_20864d38a;
		}
		_iter_end_20864d38a:;
	};
}



inline void _208931b46_checkEnums(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20864e413:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _57215_file = *it;
			{
				_20892d23b_setCurrentFile(_self_.ptr(), _57215_file);
				{
					
					if ((!(_20893cc1d_checkEnumDecls(_self_)))) {
						_case_begin_20864ead9:;
					}
					else if ((!(_20893cea4_checkTypeEnumDecls(_self_)))) {
						_case_begin_2086501b1:;
					}
					_match_end_208650106:;
				};
			}
			_iter_next_20864e413:;
			++it;
			goto _iter_begin_20864e413;
		}
		_iter_end_20864e413:;
	};
}



inline void _208931d44_checkFileInherits(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208650e92:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _58215_t = *it;
			{
				jule::Bool _5834_ok = _20893e868__checkTraitDeclInherits(_self_, &(_58215_t));;
				if ((!(_5834_ok))) {
					return;;
				};
			}
			_iter_next_208650e92:;
			++it;
			goto _iter_begin_208650e92;
		}
		_iter_end_208650e92:;
	};
}



inline void _208932042_checkInherits(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20865148c:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _59115_file = *it;
			{
				_20892d23b_setCurrentFile(_self_.ptr(), _59115_file);
				_208931d44_checkFileInherits(_self_);
			}
			_iter_next_20865148c:;
			++it;
			goto _iter_begin_20865148c;
		}
		_iter_end_20865148c:;
	};
}



inline _2089e2751_typeChecker _2089324e8_typeChecker(jule::Ptr<_20892a755_sema> _self_, jule::Trait _59732_l, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _59747_generics, jule::Ptr<_2089e1761_referencer> _5987_referencer) {
	_2089e2751_typeChecker _5997_tc = _2089e2751_typeChecker{._field_s=_self_, ._field_rootLookup=_59732_l, ._field_lookup=_59732_l, ._field_referencer=_5987_referencer, ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59747_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59732_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
			_case_begin_20865412c:;
			{
				jule::Ptr<_2088d3169_scopeChecker> _6088_hard = _2088d67cc_getHardRoot(_59732_l.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
				_5997_tc._field_refers=(*((*(_6088_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_2086540b6:;
	};
	if (((_5987_referencer != nullptr) && ((*_5987_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5987_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_208655936:;
				{
					_5997_tc._field_ownerAlias=(*(_5987_referencer))._field_owner.unsafe_cast_ptr<_2089cd94b_TypeAlias>();
				}
			}
			_match_end_2086558c0:;
		};
	};
	return _5997_tc;;
}



inline jule::Ptr<_2089ce661_Type> _208932a59_buildTypeWithRefers(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _62441_t, jule::Trait _62464_l, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _6257_generics, jule::Ptr<_2089e1761_referencer> _62535_referencer) {
	return ({ auto _wrap_copy = _2089324e8_typeChecker(_self_, _62464_l, _6257_generics, _62535_referencer); _2089ea33b_checkDecl(&_wrap_copy, _62441_t); });;
}



inline jule::Bool _2089330ba_checkTypeSymWithRefers(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d7a65_TypeSym>* _63144_t, jule::Trait _63161_l, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _6327_generics, jule::Ptr<_2089e1761_referencer> _63235_referencer) {
	jule::Bool __jule_func_result = false;
	if (_2089d7e1c_checked((*(_63144_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_63144_t))))._field_Type=_208932a59_buildTypeWithRefers(_self_, &((*((*(_63144_t))))._field_Decl), _63161_l, _6327_generics, _63235_referencer);
	__jule_func_result = _2089d7e1c_checked((*(_63144_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_2088c5678_constraintChecker> _208933351_constraintChecker(jule::Ptr<_20892a755_sema> _self_) {
	return jule::new_ptr<_2088c5678_constraintChecker>(_2088c5678_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_208822372_FnIns>(nullptr), ._field_si=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_et=jule::Ptr<_208711827_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _20893374c_checkTypeSym(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d7a65_TypeSym>* _64634_t, jule::Trait _64651_l) {
	return _2089330ba_checkTypeSymWithRefers(_self_, _64634_t, _64651_l, nullptr, nullptr);;
}



inline jule::Ptr<_2089ce661_Type> _208933c03_checkTypeSymRefers(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _65140_t, jule::Trait _65163_l, jule::Ptr<_2088eaeb7_ReferenceStack> _65178_refers) {
	jule::Ptr<_2089e2751_typeChecker> _6527_tc = jule::new_ptr<_2089e2751_typeChecker>(_2089e2751_typeChecker{._field_s=_self_, ._field_rootLookup=_65163_l, ._field_lookup=_65163_l, ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=_65178_refers, ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _2089ea33b_checkDecl(_6527_tc.ptr(), _65140_t);;
}



inline jule::Ptr<_2089ce661_Type> _2089341a9_buildTypeWithGenerics(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _66343_t, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _6647_generics, jule::Ptr<_2088eaeb7_ReferenceStack> _66435_refers) {
	jule::Ptr<_2089e2751_typeChecker> _6657_tc = jule::new_ptr<_2089e2751_typeChecker>(_2089e2751_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=_66435_refers, ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6647_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _2089ea33b_checkDecl(_6657_tc.ptr(), _66343_t);;
}



inline jule::Ptr<_2089ce661_Type> _20893483b_selectType(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _68132_t) {
	jule::Ptr<_2089e2751_typeChecker> _6827_tc = jule::new_ptr<_2089e2751_typeChecker>(_2089e2751_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _2089ea33b_checkDecl(_6827_tc.ptr(), _68132_t);;
}



inline jule::Ptr<_20899c970_eval> _208934ce2_evalpd(jule::Ptr<_20892a755_sema> _self_, jule::Trait _69327_l, jule::Ptr<_2089ce661_Type> _69342_p, jule::Ptr<_20894d7de_Var> _69356_owner) {
	jule::Ptr<_20899c970_eval> _6947_e = jule::new_ptr<_20899c970_eval>(_20899c970_eval{._field_s=_self_, ._field_lookup=_69327_l, ._field_prefix=jule::Ptr<_2089ce661_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_69356_owner, ._field_field=jule::Ptr<_208748496_FieldIns>(nullptr), ._field_target=_20899c002_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _69327_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
			_case_begin_208660da3:;
			{
				(*(_6947_e))._field_unsafety=_2088d5556_isUnsafe(_69327_l.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));
			}
		}
		_match_end_208660d3c:;
	};
	(*(_6947_e))._field_prefix=_69342_p;
	return _6947_e;;
}



inline jule::Ptr<_20899c970_eval> _2089351dd_evalp(jule::Ptr<_20892a755_sema> _self_, jule::Trait _70826_l, jule::Ptr<_2089ce661_Type> _70841_p) {
	return _208934ce2_evalpd(_self_, _70826_l, _70841_p, nullptr);;
}



inline jule::Ptr<_20899c970_eval> _20893552e_eval(jule::Ptr<_20892a755_sema> _self_, jule::Trait _71325_l) {
	return _2089351dd_evalp(_self_, _71325_l, nullptr);;
}



inline jule::Bool _208935b4a_checkAssignType(jule::Ptr<_20892a755_sema> _self_, jule::Bool _71832_destIsRef, jule::Ptr<_2089ce661_Type>* _71854_dest, jule::Ptr<_20899a9a1_Data>* _7198_d, jule::Ptr<_208711827_Token> _71922_errorToken, jule::Ptr<_2088eaeb7_ReferenceStack> _71953_refers) {
	if ((*((*(_7198_d))))._field_Decl) {
		_20892d659_pushErr(_self_.ptr(), _71922_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71832_destIsRef) {
		if ((!(_2089ced9d_Equal((*(_71854_dest)), (*((*(_7198_d))))._field_Type)))) {
			_20892d659_pushErr(_self_.ptr(), _71922_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_71854_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_7198_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_2089887d5_assignTypeChecker> _7308_atc = jule::new_ptr<_2089887d5_assignTypeChecker>(_2089887d5_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71854_dest)), ._field_d=(*(_7198_d)), ._field_errorToken=_71922_errorToken, ._field_refers=_71953_refers});;
		jule::Bool _7374_ok = _2089897d6_check(_7308_atc.ptr());;
		if ((!(_7374_ok))) {
			return false;;
		};
	};
	if (((!(_20899b3db_IsConst((*(_7198_d)).ptr()))) || (_2089d2774_Prim((*(_71854_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7477_kind = (*(_2089d2774_Prim((*(_71854_dest)).ptr())))._field_Kind;;
	{
		
		if (_20889c573_IsSigInt(_7477_kind)) {
			_case_begin_208668d34:;
			{
				_2088086aa_SetI64((*((*(_7198_d))))._field_Constant.ptr(), _208807dd5_AsI64((*((*(_7198_d))))._field_Constant));
			}
		}
		else if (_20889c881_IsUnsigInt(_7477_kind)) {
			_case_begin_208668dbc:;
			{
				_208808963_SetU64((*((*(_7198_d))))._field_Constant.ptr(), _20880816b_AsU64((*((*(_7198_d))))._field_Constant));
			}
		}
		else if (_20889ce8b_IsFloat(_7477_kind)) {
			_case_begin_208668e33:;
			{
				_20880927c_SetF64((*((*(_7198_d))))._field_Constant, _208808402_AsF64((*((*(_7198_d))))._field_Constant));
			}
		}
		_match_end_208668c79:;
	};
	return true;;
}



inline jule::Bool _208936101__checkTypeCompatibility(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089ce661_Type>* _76145_dest, jule::Ptr<_2089ce661_Type>* _76163_src, jule::Ptr<_208711827_Token> _7627_errorToken) {
	if (((*(_76163_src)) == nullptr)) {
		return false;;
	};
	if ((_2089d4831_Tup((*(_76163_src)).ptr()) != nullptr)) {
		return false;;
	};
	_208986959_typeCompatibilityChecker _7707_tcc = _208986959_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_76145_dest)), ._field_src=(*(_76163_src)), ._field_errorToken=_7627_errorToken};;
	return _208988153_check(&_7707_tcc);;
}



inline jule::Bool _2089365a7_checkTypeCompatibility(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089ce661_Type>* _77944_dest, jule::Ptr<_2089ce661_Type>* _7808_src, jule::Ptr<_208711827_Token>* _78025_errorToken) {
	if (_208936101__checkTypeCompatibility(_self_, _77944_dest, _7808_src, (*(_78025_errorToken)))) {
		return true;;
	};
	_20892d659_pushErr(_self_.ptr(), (*(_78025_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_77944_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_7808_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _2089369c5_pushCompatiblityError(_20892a755_sema* _self_, jule::Ptr<_2089ce661_Type>* _78842_dest, jule::Ptr<_20899a9a1_Data>* _78860_src, jule::Ptr<_208711827_Token>* _7898_errorToken) {
	if (((*((*(_78860_src))))._field_untyped && _20899b3db_IsConst((*(_78860_src)).ptr()))) {
		{
			
			if (_208809711_IsI64((*((*(_78860_src))))._field_Constant.ptr())) {
				_case_begin_208673beb:;
				{
					_20892d659_pushErr(_self_, (*(_7898_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_78842_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_208809997_IsU64((*((*(_78860_src))))._field_Constant.ptr())) {
				_case_begin_208673c95:;
				{
					_20892d659_pushErr(_self_, (*(_7898_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_78842_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_20880a24a_IsF64((*((*(_78860_src))))._field_Constant)) {
				_case_begin_208673d0b:;
				{
					_20892d659_pushErr(_self_, (*(_7898_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_78842_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_208673ab9:;
		};
	};
	_20892d659_pushErr(_self_, (*(_7898_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_78842_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_78860_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _208936e7b_checkTypeCompatibility1(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089ce661_Type>* _80645_dest, jule::Ptr<_20899a9a1_Data>* _80663_src, jule::Ptr<_208711827_Token>* _8078_errorToken) {
	if (_208936101__checkTypeCompatibility(_self_, _80645_dest, &((*((*(_80663_src))))._field_Type), (*(_8078_errorToken)))) {
		return true;;
	};
	_2089369c5_pushCompatiblityError(_self_.ptr(), _80645_dest, _80663_src, _8078_errorToken);
	return false;;
}



inline jule::Ptr<_2089ce661_Type> _208937432_buildNonGenericType(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208727343_TypeDecl>* _82141_ast, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _8228_generics, jule::Slice<jule::Ptr<_2089ce661_Type>>* _82244_ignored) {
	jule::Ptr<_2089e2751_typeChecker> _8237_tc = jule::new_ptr<_2089e2751_typeChecker>(_2089e2751_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=(*(_8228_generics)), ._field_ignoredGenerics=_82244_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _2089ea33b_checkDecl(_8237_tc.ptr(), _82141_ast);;
}



inline jule::Bool _20893782d_buildFnNonGenericTypes(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns> _83343_f, jule::Slice<jule::Ptr<_2089ce661_Type>>* _83359_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _83411_generics = nullptr;;
	if (_20881ea01_IsMethod((*(_83343_f))._field_Decl.ptr())) {
		_83411_generics=jule::append((*(*(_83343_f))._field_Decl.alloc)._field_Generics,(*((*(*(_83343_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_83411_generics=(*((*(_83343_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _2089389c7_basicFnEnvironment(_self_, &(_83343_f), jule::__new_closure<jule::Bool,jule::Ptr<_20892a755_sema>*>((void*)__jule_anon_20867e50e, jule::Ptr<__jule_anon_20867e50e_ctx>::make(__jule_anon_20867e50e_ctx{._83343_f=_83343_f,._83411_generics=_83411_generics,._83359_ignored=_83359_ignored}).as<jule::Uintptr>(), __jule_anon_20867e50e_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_208822372_FnIns> _208937b6e_getTraitCheckFnKind(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _85641_f) {
	if (((*((*(_85641_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85641_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_208822372_FnIns> _8607_ins = _2088207c1_instanceForce((*(_85641_f)));;
	jule::Ptr<_2089e2751_typeChecker> _8627_tc = jule::new_ptr<_2089e2751_typeChecker>(_2089e2751_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8607_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208685823:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> _86715_p = *it;
			{
				if ((!(_20881ce3e_IsSelf((*(_86715_p))._field_Decl.ptr())))) {
					(*_86715_p.alloc)._field_Type=_2089ea33b_checkDecl(_8627_tc.ptr(), &((*((*(*(_86715_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86715_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_208685823:;
			++it;
			goto _iter_begin_208685823;
		}
		_iter_end_208685823:;
	};
	if ((!(_20881e76a_IsVoid((*(_85641_f)).ptr())))) {
		(*_8607_ins.alloc)._field_Result=_2089ea33b_checkDecl(_8627_tc.ptr(), &((*((*((*((*(_85641_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8607_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8607_ins;;
}



inline jule::Bool _208938125_checkConstraintsFn(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _88540_f, jule::Ptr<_208711827_Token>* _88556_et, jule::Ptr<_208822372_FnIns> _88579_exist) {
	jule::Ptr<_2088c5678_constraintChecker> _8867_cc = _208933351_constraintChecker(_self_);;
	(*(_8867_cc))._field_et=(*(_88556_et));
	(*_8867_cc.alloc)._field_fi=(*(_88540_f));
	if ((_88579_exist != nullptr)) {
		{
			auto expr = &((*_88579_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20868a95a:;
			if (it != expr_end) {
				jule::I64 _8909_i = it - expr->begin();
				jule::Ptr<_2089ccc7a_InsGeneric> _89016_g = *it;
				{
					(*((*((*(_88540_f))))._field_Generics[_8909_i]))._field_Constraint=(*(_89016_g))._field_Constraint;
				}
				_iter_next_20868a95a:;
				++it;
				_8909_i++;
				goto _iter_begin_20868a95a;
			}
			_iter_end_20868a95a:;
		};
	} else {
		(*_8867_cc.alloc)._field_uniq=true;
	};
	return _2088c65e1_check(_8867_cc);;
}



inline jule::Bool _2089385cb_checkConstraintsStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _89944_s, jule::Ptr<_208711827_Token>* _89964_et, jule::Ptr<_2087490bd_StructIns> _89987_exist) {
	jule::Ptr<_2088c5678_constraintChecker> _9007_cc = _208933351_constraintChecker(_self_);;
	(*(_9007_cc))._field_et=(*(_89964_et));
	(*_9007_cc.alloc)._field_si=(*(_89944_s));
	if ((_89987_exist != nullptr)) {
		{
			auto expr = &((*_89987_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2192b1707:;
			if (it != expr_end) {
				jule::I64 _9049_i = it - expr->begin();
				jule::Ptr<_2089ccc7a_InsGeneric> _90416_g = *it;
				{
					(*((*((*(_89944_s))))._field_Generics[_9049_i]))._field_Constraint=(*(_90416_g))._field_Constraint;
				}
				_iter_next_2192b1707:;
				++it;
				_9049_i++;
				goto _iter_begin_2192b1707;
			}
			_iter_end_2192b1707:;
		};
	} else {
		(*_9007_cc.alloc)._field_uniq=true;
	};
	return _2088c65e1_check(_9007_cc);;
}



inline jule::Bool _2089389c7_basicFnEnvironment(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _91640_f, jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*> _91651_algo) {
	jule::Ptr<_20892a755_sema> _9177_sema = (*((*((*(_91640_f))))._field_Decl))._field_sema;;
	jule::Ptr<_2088255b7_SymTab> _9187_old = _20892ce83_getCurrentFile(_9177_sema.ptr());;
	jule::Ptr<_2088255b7_SymTab> _9197_file = _208929006_findFile(&((*_9177_sema.alloc)._field_files), &((*((*(*((*(_91640_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9197_file != nullptr)) {
		_20892d23b_setCurrentFile(_9177_sema, _9197_file);
	};
	jule::Bool _9243_ok = _91651_algo(&(_9177_sema));;
	if ((_9177_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_9177_sema))._field_errors);
		(*_9177_sema.alloc)._field_errors=nullptr;
	};
	_20892d23b_setCurrentFile(_9177_sema.ptr(), _9187_old);
	return _9243_ok;;
}



inline jule::Bool _208938dc3_fnEnvironment(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _93635_f, jule::Fn<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*> _93646_algo) {
	jule::I64 _9377_size = (*((*(_93635_f))))._field_Generics.len();;
	if ((((*((*(_93635_f))))._field_Decl != nullptr) && ((*(*((*(_93635_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9377_size+=(*(*((*((*(_93635_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _9417_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>::alloc(0LL, _9377_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089cd94b_TypeAlias>(nullptr); __jule_collection; });;
	_208928b82_appendGenericTypeAliases(&(_9417_generics), _93635_f);
	return _2089389c7_basicFnEnvironment(_self_, _93635_f, jule::__new_closure<jule::Bool,jule::Ptr<_20892a755_sema>*>((void*)__jule_anon_2192b9d4d, jule::Ptr<__jule_anon_2192b9d4d_ctx>::make(__jule_anon_2192b9d4d_ctx{._93646_algo=_93646_algo,._9417_generics=_9417_generics}).as<jule::Uintptr>(), __jule_anon_2192b9d4d_ctx_handler));;
}



inline void _20893917b_checkFnParamKind(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882121c_ParamIns>* _94838_p) {
	(*((*((*(_94838_p))))._field_Type))._field_Variadic=(*((*((*(_94838_p))))._field_Decl))._field_Variadic;
}



inline jule::Bool _2089394bc_reloadFnInsTypes(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns> _95237_f) {
	if ((_20882383a_IsBuiltin(_95237_f.ptr()) || _208823ac1_IsAnon(_95237_f.ptr()))) {
		return true;;
	};
	return _208938dc3_fnEnvironment(_self_, &(_95237_f), jule::__new_closure<jule::Bool,jule::Ptr<_20892a755_sema>*,jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>*>((void*)__jule_anon_2192bc735, jule::Ptr<__jule_anon_2192bc735_ctx>::make(__jule_anon_2192bc735_ctx{._95237_f=_95237_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2192bc735_ctx_handler));;
}



inline jule::Bool _208939973_checkRefValidityForInitExpr(jule::Ptr<_20892a755_sema> _self_, jule::Bool _99244_leftMut, jule::Ptr<_20899a9a1_Data>* _99264_d, jule::Ptr<_208711827_Token>* _99279_errorToken) {
	if ((!(_208927c4c_isValidModelForRef(&((*((*(_99264_d))))._field_Model))))) {
		_20892d659_pushErr(_self_.ptr(), (*(_99279_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_99244_leftMut && (!((*((*(_99264_d))))._field_Mutable)))) {
		_20892d659_pushErr(_self_.ptr(), (*(_99279_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _208939cb4_isMutRiskyStruct(_20892a755_sema* _self_, jule::Ptr<_2087490bd_StructIns>* _100929_s) {
	{
		auto expr = &((*((*(_100929_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192c76da:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> *_101010_f = it;
			{
				if ((((*((*((*(_101010_f))))._field_Decl))._field_Mutable && _2089d19a4_Mutable((*(*(_101010_f)).alloc)._field_Type.ptr())) && _20892ddb8_isAccessibleDefine(_self_, (*(*((*(_101010_f))))._field_Decl.alloc)._field_Public, (*(*((*(_101010_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_2192c76da:;
			++it;
			goto _iter_begin_2192c76da;
		}
		_iter_end_2192c76da:;
	};
	return false;;
}



inline jule::Bool _20893a3d0_checkValidityForInitExpr(jule::Ptr<_20892a755_sema> _self_, jule::Bool _103641_leftMut, jule::Bool _103656_leftRef, jule::Ptr<_2089ce661_Type>* _10374_leftKind, jule::Ptr<_20899a9a1_Data>* _103726_d, jule::Ptr<_208711827_Token>* _103741_errorToken) {
	if ((_103641_leftMut && (!((*((*(_103726_d))))._field_Mutable)))) {
		if ((_2089d19a4_Mutable((*((*(_103726_d))))._field_Type.ptr()) || (*((*((*(_103726_d))))._field_Type))._field_Variadic)) {
			_20892d659_pushErr(_self_.ptr(), (*(_103741_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_103726_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_2087490bd_StructIns> _10454_s = _2089d3ce7_Struct((*((*(_103726_d))))._field_Type.ptr());;
		if (((_10454_s != nullptr) && _208939cb4_isMutRiskyStruct(_self_.ptr(), &(_10454_s)))) {
			_20892d659_pushErr(_self_, (*(_103741_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_103726_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103656_leftRef) {
		if ((!(_208939973_checkRefValidityForInitExpr(_self_, _103641_leftMut, _103726_d, _103741_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_2089887d5_assignTypeChecker> _10567_atc = jule::new_ptr<_2089887d5_assignTypeChecker>(_2089887d5_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_2089ce661_Type>(nullptr), ._field_d=(*(_103726_d)), ._field_errorToken=(*(_103741_errorToken)), ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr)});;
	return _208989033_checkValidity(_10567_atc.ptr());;
}



inline jule::Bool _20893a7cb_checkTypeAliasDeclKind(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _106444_ta, jule::Trait _106464_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2088255b7_SymTab> _10657_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_20892d23b_setCurrentFile(_self_, _10657_old);
	});;
	if (((*((*(_106444_ta))))._field_Token != nullptr)) {
		jule::Ptr<_2088255b7_SymTab> _10708_file = _208929006_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106444_ta))))._field_Token.alloc)._field_File));;
		if ((_10708_file != nullptr)) {
			_20892d23b_setCurrentFile(_self_, _10708_file);
		};
	};
	__jule_func_result=_2089330ba_checkTypeSymWithRefers(_self_, &((*((*(_106444_ta))))._field_TypeSym), _106464_l, nullptr, jule::new_ptr<_2089e1761_referencer>(_2089e1761_referencer{._field_ident=(*((*(_106444_ta))))._field_Ident, ._field_owner=jule::Any((*(_106444_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106444_ta))))._field_Refers))}));
	if (((__jule_func_result && (_2089d3544_Arr((*((*((*(_106444_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_2089d3544_Arr((*((*((*(_106444_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_20892d659_pushErr(_self_, (*((*(*((*(_106444_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline jule::Bool _20893abc7_checkTypeAliasDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _108740_ta, jule::Trait _108760_l) {
	jule::Bool __jule_func_result = false;
	if (_20871420e_IsIgnoreIdent((*((*(_108740_ta))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_108740_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_108740_ta))))._field_TypeSym))._field_Type != nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result=_20893a7cb_checkTypeAliasDeclKind(_self_, _108740_ta, _108760_l);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((!((*((*(_108740_ta))))._field_Strict))) {
		if ((*((*(_108740_ta))))._field_Binded) {
			_20892d659_pushErr(_self_, (*((*(_108740_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded type aliases cannot be soft type alias", 45)), jule::Slice<jule::Any>());
			_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("define as strict type alias with colon sign, like: type @: <type>", 65)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_108740_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		};
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2087490bd_StructIns> _11087_s = _2089ed20c_initNewStructType((*((*(_108740_ta))))._field_Ident, (*((*((*(_108740_ta))))._field_TypeSym))._field_Type);;
	(*((*(_11087_s))._field_Decl))._field_sema=_self_;
	(*(*(_11087_s))._field_Decl.alloc)._field_Binded=(*((*(_108740_ta))))._field_Binded;
	(*(*(_11087_s))._field_Decl.alloc)._field_Token=(*((*(_108740_ta))))._field_Token;
	(*(*(_11087_s))._field_Decl.alloc)._field_Public=(*((*(_108740_ta))))._field_Public;
	(*(*((*(_108740_ta))))._field_TypeSym.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_11087_s, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)});
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20893ae80_checkTypeAliasDeclDup(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089cd94b_TypeAlias>* _111843_ta) {
	if (_20892e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_111843_ta))), &((*((*(_111843_ta))))._field_Ident), (*((*(_111843_ta))))._field_Binded)) {
		_20892d659_pushErr(_self_, (*((*(_111843_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111843_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_20893abc7_checkTypeAliasDecl(_self_, _111843_ta, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));
}



inline jule::Bool _20893b216_checkTypeAliasDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192e0802:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> _112815_ta = *it;
			{
				_20893ae80_checkTypeAliasDeclDup(_self_, &(_112815_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2192e0802:;
			++it;
			goto _iter_begin_2192e0802;
		}
		_iter_end_2192e0802:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _21931d80d_checkEnumItemsDup(_20892a755_sema* _self_, jule::Slice<jule::Ptr<_20882b623_EnumItem>> _113936_items) {
	{
		auto expr = &(_113936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21931e017:;
		if (it != expr_end) {
			jule::Ptr<_20882b623_EnumItem> *_114010_item = it;
			{
				if (((*((*(_114010_item))))._field_Ident).empty()) {
					goto _iter_next_21931e017;
				} else if (_20871420e_IsIgnoreIdent((*((*(_114010_item))))._field_Ident)) {
					_20892d659_pushErr(_self_, (*(*(_114010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_113936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_219321844:;
						if (it != expr_end) {
							jule::Ptr<_20882b623_EnumItem> *_114612_citem = it;
							{
								if (((*(_114010_item)) == (*(_114612_citem)))) {
									goto _iter_end_219321844;
								} else if (((*(*(_114010_item)).alloc)._field_Ident == (*((*(_114612_citem))))._field_Ident)) {
									_20892d659_pushErr(_self_, (*(*(_114010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_114010_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_219321844;
								};
							}
							_iter_next_219321844:;
							++it;
							goto _iter_begin_219321844;
						}
						_iter_end_219321844:;
					};
				};
			}
			_iter_next_21931e017:;
			++it;
			goto _iter_begin_21931e017;
		}
		_iter_end_21931e017:;
	};
}

inline void _21932b640_checkEnumItemsDup(_20892a755_sema* _self_, jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> _113936_items) {
	{
		auto expr = &(_113936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21932bd6b:;
		if (it != expr_end) {
			jule::Ptr<_20882d2b2_TypeEnumItem> *_114010_item = it;
			{
				if (((*((*(_114010_item))))._field_Ident).empty()) {
					goto _iter_next_21932bd6b;
				} else if (_20871420e_IsIgnoreIdent((*((*(_114010_item))))._field_Ident)) {
					_20892d659_pushErr(_self_, (*(*(_114010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_113936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21932e654:;
						if (it != expr_end) {
							jule::Ptr<_20882d2b2_TypeEnumItem> *_114612_citem = it;
							{
								if (((*(_114010_item)) == (*(_114612_citem)))) {
									goto _iter_end_21932e654;
								} else if (((*(*(_114010_item)).alloc)._field_Ident == (*((*(_114612_citem))))._field_Ident)) {
									_20892d659_pushErr(_self_, (*(*(_114010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_114010_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_21932e654;
								};
							}
							_iter_next_21932e654:;
							++it;
							goto _iter_begin_21932e654;
						}
						_iter_end_21932e654:;
					};
				};
			}
			_iter_next_21932bd6b:;
			++it;
			goto _iter_begin_21932bd6b;
		}
		_iter_end_21932bd6b:;
	};
}



inline void _20893b777_checkEnumItemsStr(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882c17e_Enum>* _115939_e) {
	jule::Ptr<_20899c970_eval> _11607_eval = _20893552e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_115939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192e2529:;
		if (it != expr_end) {
			jule::Ptr<_20882b623_EnumItem> _116115_item = *it;
			{
				if (_20882b9ec_AutoExpr(_116115_item.ptr())) {
					(*_116115_item.alloc)._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__2088064cc_NewStr((*_116115_item.alloc)._field_Ident)})});
					(*((*((*_116115_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_116115_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_20899a9a1_Data> _11709_d = _2089bc5d8_evalExpr(_11607_eval, (*((*(_116115_item))._field_Value))._field_Expr);;
					if ((_11709_d == nullptr)) {
						goto _iter_next_2192e2529;
					};
					if ((!(_20899b3db_IsConst(_11709_d.ptr())))) {
						_20892d659_pushErr(_self_, (*((*(*(_116115_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_2088eaeb7_ReferenceStack> _11799_refers = static_cast<jule::Ptr<_2088eaeb7_ReferenceStack>>(nullptr);;
					_208935b4a_checkAssignType(_self_, false, &((*((*((*(_115939_e))))._field_TypeSym))._field_Type), &(_11709_d), (*_116115_item.alloc)._field_Token, _11799_refers);
					(*(*(_116115_item))._field_Value.alloc)._field_Data=_11709_d;
				};
			}
			_iter_next_2192e2529:;
			++it;
			goto _iter_begin_2192e2529;
		}
		_iter_end_2192e2529:;
	};
}



inline void _2192ed4ad_checkEnumItemInt(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20899c970_eval>* _118643_eval, jule::Ptr<_20882c17e_Enum>* _118661_e, jule::Ptr<_2089d846c_Prim>* _118672_prim, jule::Ptr<_20882b623_EnumItem>* _118690_item, jule::U64* _1186112_n) {
	if (_20882b9ec_AutoExpr((*(_118690_item)).ptr())) {
		(*((*(_118690_item))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		{
			
{
				_case_begin_21930069c:;
				{
					(*((*((*((*(_118690_item))))._field_Value))._field_Data))._field_Constant=static__208805e49_NewU64((*(_1186112_n)));
				}
			}
			_match_end_219300e72:;
		};
		(*((*((*((*(_118690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_118690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_20899a9a1_Data> _12018_d = _2089bc5d8_evalExpr((*(_118643_eval)), (*((*((*(_118690_item))))._field_Value))._field_Expr);;
		if ((_12018_d == nullptr)) {
			return;;
		};
		if ((!(_20899b3db_IsConst(_12018_d.ptr())))) {
			_20892d659_pushErr(_self_.ptr(), (*((*(*((*(_118690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_2088eaeb7_ReferenceStack> _12088_refers = static_cast<jule::Ptr<_2088eaeb7_ReferenceStack>>(nullptr);;
		_208935b4a_checkAssignType(_self_, false, &((*((*((*(_118661_e))))._field_TypeSym))._field_Type), &(_12018_d), (*((*(_118690_item))))._field_Token, _12088_refers);
		(*(*((*(_118690_item))))._field_Value.alloc)._field_Data=_12018_d;
		{
			
{
				_case_begin_21930511e:;
				{
					(*(_1186112_n))=_20880739b_ReadU64((*((*(*((*(_118690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_2193063ea:;
		};
	};
}

inline void _21930d91e_checkEnumItemInt(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20899c970_eval>* _118643_eval, jule::Ptr<_20882c17e_Enum>* _118661_e, jule::Ptr<_2089d846c_Prim>* _118672_prim, jule::Ptr<_20882b623_EnumItem>* _118690_item, jule::I64* _1186112_n) {
	if (_20882b9ec_AutoExpr((*(_118690_item)).ptr())) {
		(*((*(_118690_item))))._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})});
		{
			
{
				_case_begin_2193113d3:;
				{
					(*((*((*((*(_118690_item))))._field_Value))._field_Data))._field_Constant=static__208805bc4_NewI64((*(_1186112_n)));
				}
			}
			_match_end_21931136c:;
		};
		(*((*((*((*(_118690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_118690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_20899a9a1_Data> _12018_d = _2089bc5d8_evalExpr((*(_118643_eval)), (*((*((*(_118690_item))))._field_Value))._field_Expr);;
		if ((_12018_d == nullptr)) {
			return;;
		};
		if ((!(_20899b3db_IsConst(_12018_d.ptr())))) {
			_20892d659_pushErr(_self_.ptr(), (*((*(*((*(_118690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_2088eaeb7_ReferenceStack> _12088_refers = static_cast<jule::Ptr<_2088eaeb7_ReferenceStack>>(nullptr);;
		_208935b4a_checkAssignType(_self_, false, &((*((*((*(_118661_e))))._field_TypeSym))._field_Type), &(_12018_d), (*((*(_118690_item))))._field_Token, _12088_refers);
		(*(*((*(_118690_item))))._field_Value.alloc)._field_Data=_12018_d;
		{
			
{
				_case_begin_2193169c1:;
				{
					(*(_1186112_n))=_208807115_ReadI64((*((*(*((*(_118690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_21931695a:;
		};
	};
}



inline void _2192e97ea_checkEnumItemsInt1(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d846c_Prim>* _122241_prim, jule::Ptr<_20882c17e_Enum>* _122259_e) {
	jule::U64 _12237_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_2192eb3ac:;
			{
				_12237_max=_20889ad79_MaxU(_2089d87e1_Str((*(_122241_prim)).ptr()));
			}
		}
		_match_end_2192eb489:;
	};
	jule::Ptr<_20899c970_eval> _12337_eval = _20893552e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));;
	jule::U64 _12347_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_20882b623_EnumItem> _12357_first = (*((*(_122259_e))))._field_Items[0LL];;
	_2192ed4ad_checkEnumItemInt(_self_, &(_12337_eval), _122259_e, _122241_prim, &(_12357_first), &(_12347_n));
	if (((*((*(_12357_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_2192eabd6:;
				{
					_12347_n=_20880816b_AsU64((*(*((*(_12357_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_2192edda4:;
		};
	};
	{
		auto expr = (*((*(_122259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_219307e79:;
		if (it != expr_end) {
			jule::Ptr<_20882b623_EnumItem> _124715_item = *it;
			{
				if (((_20882b9ec_AutoExpr(_124715_item.ptr()) && (_12347_n > 0LLU)) && ((jule::U64)(_12237_max - _12347_n) <= 0LLU))) {
					_20892d659_pushErr(_self_, (*_124715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_219307e79;
				};
				(_12347_n)++;
				_2192ed4ad_checkEnumItemInt(_self_, &(_12337_eval), _122259_e, _122241_prim, &(_124715_item), &(_12347_n));
			}
			_iter_next_219307e79:;
			++it;
			goto _iter_begin_219307e79;
		}
		_iter_end_219307e79:;
	};
}

inline void _2192e9ac5_checkEnumItemsInt1(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2089d846c_Prim>* _122241_prim, jule::Ptr<_20882c17e_Enum>* _122259_e) {
	jule::I64 _12237_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_21930b7eb:;
			{
				_12237_max=_20889aab0_MaxI(_2089d87e1_Str((*(_122241_prim)).ptr()));
			}
		}
		_match_end_21930b785:;
	};
	jule::Ptr<_20899c970_eval> _12337_eval = _20893552e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));;
	jule::I64 _12347_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_20882b623_EnumItem> _12357_first = (*((*(_122259_e))))._field_Items[0LL];;
	_21930d91e_checkEnumItemInt(_self_, &(_12337_eval), _122259_e, _122241_prim, &(_12357_first), &(_12347_n));
	if (((*((*(_12357_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_21931410b:;
				{
					_12347_n=_208807dd5_AsI64((*(*((*(_12357_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_21930e2c1:;
		};
	};
	{
		auto expr = (*((*(_122259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_219318781:;
		if (it != expr_end) {
			jule::Ptr<_20882b623_EnumItem> _124715_item = *it;
			{
				if (((_20882b9ec_AutoExpr(_124715_item.ptr()) && (_12347_n > 0LL)) && ((_12237_max - _12347_n) <= 0LL))) {
					_20892d659_pushErr(_self_, (*_124715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_219318781;
				};
				(_12347_n)++;
				_21930d91e_checkEnumItemInt(_self_, &(_12337_eval), _122259_e, _122241_prim, &(_124715_item), &(_12347_n));
			}
			_iter_next_219318781:;
			++it;
			goto _iter_begin_219318781;
		}
		_iter_end_219318781:;
	};
}



inline void _20893c426_checkEnumItemsInt(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882c17e_Enum>* _125739_e) {
	jule::Ptr<_2089d846c_Prim> _12583_prim = _2089d2774_Prim((*((*((*(_125739_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_20889c573_IsSigInt((*(_12583_prim))._field_Kind)) {
			_case_begin_219303a9b:;
			{
				_2192e9ac5_checkEnumItemsInt1(_self_, &(_12583_prim), _125739_e);
			}
		}
		else {
			_case_begin_2192e9047:;
			{
				_2192e97ea_checkEnumItemsInt1(_self_, &(_12583_prim), _125739_e);
			}
		}
		_match_end_2192e8ec0:;
	};
}



inline void _20893c6ce_checkEnumDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882c17e_Enum>* _126735_e) {
	if (_20871420e_IsIgnoreIdent((*((*(_126735_e))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_126735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_20892e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_126735_e))), &((*((*(_126735_e))))._field_Ident), false)) {
		_20892d659_pushErr(_self_, (*((*(_126735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_126735_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_126735_e))))._field_Items.len() == 0LL)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_126735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_126735_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_21931d80d_checkEnumItemsDup(_self_.ptr(), (*((*(_126735_e))))._field_Items);
	if (((*((*(_126735_e))))._field_TypeSym != nullptr)) {
		if ((!(_20893374c_checkTypeSym(_self_, &((*((*(_126735_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_126735_e))))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_2089d846c_Prim> _12917_t = _2089d2774_Prim((*((*((*(_126735_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12917_t == nullptr)) {
		_20892d659_pushErr(_self_, (*((*(_126735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_2089db937_IsStr(_12917_t.ptr())) {
			_case_begin_219325e42:;
			{
				_20893b777_checkEnumItemsStr(_self_, _126735_e);
			}
		}
		else if (_20889cb4a_IsInt(_2089d87e1_Str(_12917_t.ptr()))) {
			_case_begin_219325b78:;
			{
				_20893c426_checkEnumItemsInt(_self_, _126735_e);
			}
		}
		else {
			_case_begin_219325b12:;
			{
				_20892d659_pushErr(_self_, (*((*(_126735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_2193250ea:;
	};
}



inline void _20893c987_checkTypeEnumDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20882d889_TypeEnum>* _130839_e) {
	if (_20871420e_IsIgnoreIdent((*((*(_130839_e))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_130839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_20892e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_130839_e))), &((*((*(_130839_e))))._field_Ident), false)) {
		_20892d659_pushErr(_self_, (*((*(_130839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_130839_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_130839_e))))._field_Items.len() == 0LL)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_130839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_130839_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_21932b640_checkEnumItemsDup(_self_.ptr(), (*((*(_130839_e))))._field_Items);
	{
		auto expr = &((*((*(_130839_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193279e3:;
		if (it != expr_end) {
			jule::Ptr<_20882d2b2_TypeEnumItem> _132215_item = *it;
			{
				if (((*(_132215_item))._field_TypeSym == nullptr)) {
					_20892d659_pushErr(_self_, (*_132215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_2193279e3;
				};
				jule::Bool _13274_ok = _20893374c_checkTypeSym(_self_, &((*(_132215_item))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));;
				if ((!(_13274_ok))) {
					goto _iter_next_2193279e3;
				};
				jule::Ptr<_2089d846c_Prim> _13314_p = _2089d2774_Prim((*((*_132215_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13314_p != nullptr) && _2089dbbbd_IsAny(_13314_p))) {
					_20892d659_pushErr(_self_, (*_132215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_2193279e3:;
			++it;
			goto _iter_begin_2193279e3;
		}
		_iter_end_2193279e3:;
	};
	if (((*((*(_130839_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_20882d2b2_TypeEnumItem> _13378_item = (*((*(_130839_e))))._field_Items[0LL];;
		_2089ce661_Type _13384_tk = _2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_130839_e)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data4)};;
		if ((((*((*(_13378_item))._field_TypeSym))._field_Type != nullptr) && _2089ced9d_Equal((*((*(_13378_item))._field_TypeSym))._field_Type, ((jule::Ptr<_2089ce661_Type>)((&(_13384_tk))))))) {
			_20892d659_pushErr(_self_, (*_13378_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20882dc0d_Str((*(_130839_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _20893cc1d_checkEnumDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219337e21:;
		if (it != expr_end) {
			jule::Ptr<_20882c17e_Enum> _134915_e = *it;
			{
				_20893c6ce_checkEnumDecl(_self_, &(_134915_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_219337e21:;
			++it;
			goto _iter_begin_219337e21;
		}
		_iter_end_219337e21:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20893cea4_checkTypeEnumDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219339582:;
		if (it != expr_end) {
			jule::Ptr<_20882d889_TypeEnum> _136115_e = *it;
			{
				_20893c987_checkTypeEnumDecl(_self_, &(_136115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_219339582:;
			++it;
			goto _iter_begin_219339582;
		}
		_iter_end_219339582:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20893d2e5_checkDeclGenerics(_20892a755_sema* _self_, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _137134_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _137134_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219339bae:;
		if (it != expr_end) {
			jule::I64 _13737_i = it - expr->begin();
			jule::Ptr<_20873454d_GenericDecl> *_137310_g = it;
			{
				if (_20871420e_IsIgnoreIdent((*((*(_137310_g))))._field_Ident)) {
					_20892d659_pushErr(_self_, (*(*(_137310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_219339bae;
				};
				_julec_label_21933c057:;
				{
					auto expr = _137134_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21933c5a7:;
					if (it != expr_end) {
						jule::I64 _13828_j = it - expr->begin();
						jule::Ptr<_20873454d_GenericDecl> *_138211_ct = it;
						{
							{
								
								if ((_13828_j >= _13737_i)) {
									_case_begin_21933d212:;
									{
										goto _iter_end_21933c5a7;
									}
								}
								else if (((*((*(_137310_g))))._field_Ident == (*((*(_138211_ct))))._field_Ident)) {
									_case_begin_21933d29a:;
									{
										_20892d659_pushErr(_self_, (*(*(_137310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137310_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_21933c5a7;
									}
								}
								_match_end_21933d102:;
							};
						}
						_iter_next_21933c5a7:;
						++it;
						_13828_j++;
						goto _iter_begin_21933c5a7;
					}
					_iter_end_21933c5a7:;
				};
			}
			_iter_next_219339bae:;
			++it;
			_13737_i++;
			goto _iter_begin_219339bae;
		}
		_iter_end_219339bae:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20893d636_checkFnDeclParamsDup(_20892a755_sema* _self_, jule::Ptr<_20881e2b4_Fn>* _139837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_21933b3ca:;
	{
		auto expr = &((*((*(_139837_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21933de38:;
		if (it != expr_end) {
			jule::I64 _14017_i = it - expr->begin();
			jule::Ptr<_20881c7e0_Param> *_140110_p = it;
			{
				{
					auto expr = &((*((*(_139837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219340da2:;
					if (it != expr_end) {
						jule::Ptr<_20873454d_GenericDecl> *_140311_g = it;
						{
							if (((*((*(_140110_p))))._field_Ident == (*((*(_140311_g))))._field_Ident)) {
								__jule_func_result=false;
								_20892d659_pushErr(_self_, (*(*(_140110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_140110_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_21933de38;
							};
						}
						_iter_next_219340da2:;
						++it;
						goto _iter_begin_219340da2;
					}
					_iter_end_219340da2:;
				};
				_julec_label_219342d82:;
				{
					auto expr = &((*((*(_139837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21934137a:;
					if (it != expr_end) {
						jule::I64 _14138_j = it - expr->begin();
						jule::Ptr<_20881c7e0_Param> *_141311_jp = it;
						{
							{
								
								if ((_14138_j >= _14017_i)) {
									_case_begin_219343987:;
									{
										goto _iter_end_21934137a;
									}
								}
								else if (_20871420e_IsIgnoreIdent((*((*(_140110_p))))._field_Ident) || _20871420e_IsIgnoreIdent((*((*(_141311_jp))))._field_Ident) || _2087144c8_IsAnonIdent((*(*(_140110_p)).alloc)._field_Ident) || _2087144c8_IsAnonIdent((*(*(_141311_jp)).alloc)._field_Ident)) {
									_case_begin_219343a20:;
									{
										goto _iter_end_21934137a;
									}
								}
								else if (((*(*(_140110_p)).alloc)._field_Ident == (*(*(_141311_jp)).alloc)._field_Ident)) {
									_case_begin_219343a86:;
									{
										__jule_func_result=false;
										_20892d659_pushErr(_self_, (*(*(_140110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_140110_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_21933de38;
									}
								}
								_match_end_219343833:;
							};
						}
						_iter_next_21934137a:;
						++it;
						_14138_j++;
						goto _iter_begin_21934137a;
					}
					_iter_end_21934137a:;
				};
			}
			_iter_next_21933de38:;
			++it;
			_14017_i++;
			goto _iter_begin_21933de38;
		}
		_iter_end_21933de38:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20893d977_checkFnDeclResultDup(_20892a755_sema* _self_, jule::Ptr<_20881e2b4_Fn>* _143541_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_20881e76a_IsVoid((*(_143541_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_143541_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219346d64:;
		if (it != expr_end) {
			jule::I64 _14427_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _144210_v = *it;
			{
				if ((_20871420e_IsIgnoreIdent((*(_144210_v))._field_Kind) || _2087144c8_IsAnonIdent((*(_144210_v))._field_Kind))) {
					goto _iter_next_219346d64;
				};
				{
					auto expr = &((*((*(_143541_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2193484d6:;
					if (it != expr_end) {
						jule::Ptr<_20873454d_GenericDecl> _144711_g = *it;
						{
							if (((*(_144210_v))._field_Kind == (*(_144711_g))._field_Ident)) {
								goto _julec_label_219347903;
							};
						}
						_iter_next_2193484d6:;
						++it;
						goto _iter_begin_2193484d6;
					}
					_iter_end_2193484d6:;
				};
				{
					auto expr = &((*((*(_143541_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21934889e:;
					if (it != expr_end) {
						jule::Ptr<_20881c7e0_Param> _145311_p = *it;
						{
							if (((*(_144210_v))._field_Kind == (*(_145311_p))._field_Ident)) {
								goto _julec_label_219347903;
							};
						}
						_iter_next_21934889e:;
						++it;
						goto _iter_begin_21934889e;
					}
					_iter_end_21934889e:;
				};
				_julec_label_21934a0cb:;
				{
					auto expr = &((*((*((*(_143541_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21934a450:;
					if (it != expr_end) {
						jule::I64 _14618_j = it - expr->begin();
						jule::Ptr<_208711827_Token> _146111_jv = *it;
						{
							{
								
								if ((_14618_j >= _14427_i)) {
									_case_begin_21934b066:;
									{
										goto _iter_end_21934a450;
									}
								}
								else if (((*(_146111_jv))._field_Kind == (*(_144210_v))._field_Kind)) {
									_case_begin_21934b0ee:;
									{
										goto _julec_label_219347903;
									}
								}
								_match_end_21934ae56:;
							};
						}
						_iter_next_21934a450:;
						++it;
						_14618_j++;
						goto _iter_begin_21934a450;
					}
					_iter_end_21934a450:;
				};
				goto _iter_next_219346d64;
				_julec_label_219347903:;
				_20892d659_pushErr(_self_, _144210_v, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_144210_v))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_219346d64:;
			++it;
			_14427_i++;
			goto _iter_begin_219346d64;
		}
		_iter_end_219346d64:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20893dcb8_checkFnVariadicParam(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _148042_f) {
	if (((*((*(_148042_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_20881c7e0_Param> _14847_param = (*((*(_148042_f))))._field_Params[((*((*(_148042_f))))._field_Params.len() - 1LL)];;
	if (((*(_14847_param))._field_Variadic && (*_14847_param.alloc)._field_Reference)) {
		_20892d659_pushErr(_self_.ptr(), (*_14847_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _20893e071_checkFnDeclPrototype(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _149342_f) {
	if (((*((*(_149342_f))))._field_Exceptional && (*((*(_149342_f))))._field_Binded)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_149342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_149342_f))))._field_Exceptional) {
		if (_20881ec87_IsEntryPoint((*(_149342_f)).ptr())) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_149342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_20882001d_IsInit((*(_149342_f)).ptr())) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_149342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_20893d2e5_checkDeclGenerics(_self_.ptr(), &((*((*(_149342_f))))._field_Generics))))) {
			_case_begin_219352b0b:;
		}
		else if ((!(_20893d636_checkFnDeclParamsDup(_self_.ptr(), _149342_f)))) {
			_case_begin_219352b72:;
		}
		else if ((!(_20893d977_checkFnDeclResultDup(_self_, _149342_f)))) {
			_case_begin_219352bd8:;
		}
		else if ((!(_20893dcb8_checkFnVariadicParam(_self_, _149342_f)))) {
			_case_begin_219352c4e:;
		}
		_match_end_219350e39:;
	};
}



inline jule::Bool _20893e527_catchTraitInheritCycle(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait> _151539_t1, jule::Ptr<_2088299c8_Trait> _151555_t2, _21e64c5b5_Builder* _151572_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_151555_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21935527e:;
		if (it != expr_end) {
			jule::Ptr<_2089d7a65_TypeSym> _151715_i = *it;
			{
				if (((*(_151715_i))._field_Type == nullptr)) {
					goto _iter_next_21935527e;
				};
				jule::Ptr<_2088299c8_Trait> _15218_t3 = _2089d4314_Trait((*(_151715_i))._field_Type.ptr());;
				if ((_151539_t1 == _15218_t3)) {
					_2089442a7_pushCycleError(_self_.ptr(), &((*(_151555_t2))._field_Ident), &((*(_15218_t3))._field_Ident), _151572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_20893e527_catchTraitInheritCycle(_self_, _151539_t1, _15218_t3, _151572_message)))) {
					_2089442a7_pushCycleError(_self_, &((*(_151555_t2))._field_Ident), &((*(_15218_t3))._field_Ident), _151572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_21935527e:;
			++it;
			goto _iter_begin_21935527e;
		}
		_iter_end_21935527e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20893e868__checkTraitDeclInherits(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _153445_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_153445_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219358a02:;
		if (it != expr_end) {
			jule::I64 _15368_i = it - expr->begin();
			jule::Ptr<_2089d7a65_TypeSym> _153615_it = *it;
			{
				if ((!(_20893374c_checkTypeSym(_self_, &(_153615_it), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_219358a02;
				};
				jule::Ptr<_2088299c8_Trait> _15418_t2 = _2089d4314_Trait((*(_153615_it))._field_Type.ptr());;
				if ((_15418_t2 == nullptr)) {
					_20892d659_pushErr(_self_.ptr(), (*((*_153615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_153445_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_153615_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_219358a02;
				};
				{
					auto expr = &((*((*(_153445_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21935c132:;
					if (it != expr_end) {
						jule::I64 _15478_j = it - expr->begin();
						jule::Ptr<_2089d7a65_TypeSym> _154711_it2 = *it;
						{
							if ((_15478_j >= _15368_i)) {
								goto _iter_end_21935c132;
							};
							if ((((*(_154711_it2))._field_Type != nullptr) && _2089ced9d_Equal((*(_153615_it))._field_Type, (*_154711_it2.alloc)._field_Type))) {
								_20892d659_pushErr(_self_.ptr(), (*((*_153615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15418_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_21935c132;
							};
						}
						_iter_next_21935c132:;
						++it;
						_15478_j++;
						goto _iter_begin_21935c132;
					}
					_iter_end_21935c132:;
				};
				if (((*(_153445_t)) == _15418_t2)) {
					_20892d659_pushErr(_self_.ptr(), (*((*_153615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_153445_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_21e64c5b5_Builder _15619_message = static__21e64ce12_New(64LL);;
					__jule_func_result=(__jule_func_result && _20893e527_catchTraitInheritCycle(_self_, (*(_153445_t)), _15418_t2, &(_15619_message)));
					if ((_21e64e3a8_Len(&_15619_message) > 0LL)) {
						jule::Str _156410_errMsg = _21e64de24_Str(&_15619_message);;
						_21e64e122_Clear(&_15619_message);
						_2089442a7_pushCycleError(_self_, &((*((*(_153445_t))))._field_Ident), &((*(_15418_t2))._field_Ident), &(_15619_message));
						_156410_errMsg+=_21e64de24_Str(&_15619_message);
						_20892d659_pushErr(_self_, (*((*_153615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_156410_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_219358a02:;
			++it;
			_15368_i++;
			goto _iter_begin_219358a02;
		}
		_iter_end_219358a02:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _20893eb21_checkTraitDeclInherits(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _157544_t) {
	{
		auto expr = &((*((*(_157544_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219359272:;
		if (it != expr_end) {
			jule::I64 _15768_i = it - expr->begin();
			jule::Ptr<_2089d7a65_TypeSym> _157615_it = *it;
			{
				jule::Ptr<_2088299c8_Trait> _15778_t1 = _2089d4314_Trait((*(_157615_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_157544_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219365404:;
					if (it != expr_end) {
						jule::I64 _15789_j = it - expr->begin();
						jule::Ptr<_2089d7a65_TypeSym> _157816_it2 = *it;
						{
							if ((_15789_j == _15768_i)) {
								goto _iter_next_219365404;
							};
							jule::Ptr<_2088299c8_Trait> _15829_t2 = _2089d4314_Trait((*(_157816_it2))._field_Type);;
							{
								auto expr = &((*(_15778_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_219366c30:;
								if (it != expr_end) {
									jule::Ptr<_20881e2b4_Fn> _158317_t1m = *it;
									{
										jule::Ptr<_20881e2b4_Fn> _158410_t2m = _20882a6aa_FindMethod(_15829_t2.ptr(), (*(_158317_t1m))._field_Ident);;
										if ((_158410_t2m == nullptr)) {
											goto _iter_next_219366c30;
										};
										jule::Ptr<_208822372_FnIns> _15886_t1f = _208937b6e_getTraitCheckFnKind(_self_, &(_158317_t1m));;
										jule::Ptr<_208822372_FnIns> _15896_t2f = _208937b6e_getTraitCheckFnKind(_self_, &(_158410_t2m));;
										if ((!(_20882331d_equalTrait(_15886_t1f, &(_15896_t2f))))) {
											_20892d659_pushErr(_self_, (*((*_157615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_157544_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15829_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_208824253_GetKindStr(_15886_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_208824253_GetKindStr(_15896_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_219366c30:;
									++it;
									goto _iter_begin_219366c30;
								}
								_iter_end_219366c30:;
							};
						}
						_iter_next_219365404:;
						++it;
						_15789_j++;
						goto _iter_begin_219365404;
					}
					_iter_end_219365404:;
				};
			}
			_iter_next_219359272:;
			++it;
			_15768_i++;
			goto _iter_begin_219359272;
		}
		_iter_end_219359272:;
	};
}



inline void _20893edc9_checkTraitDeclMethod(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _160042_f) {
	if (_20871420e_IsIgnoreIdent((*((*(_160042_f))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_160042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_2087144c8_IsAnonIdent((*((*(_160042_f))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_160042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_160042_f))))._field_sema=_self_;
	_20893e071_checkFnDeclPrototype(_self_, _160042_f);
	jule::Ptr<_208822372_FnIns> _16087_ins = _208820a57_instance((*(_160042_f)));;
	_2089394bc_reloadFnInsTypes(_self_, _16087_ins);
	(*(_16087_ins))._field_reloaded=true;
	_208820d65_appendInstance((*(_160042_f)).ptr(), &(_16087_ins));
}



inline void _208940182_checkTraitDeclMethods(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _161443_t) {
	{
		auto expr = &((*((*(_161443_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21936e287:;
		if (it != expr_end) {
			jule::I64 _16158_i = it - expr->begin();
			jule::Ptr<_20881e2b4_Fn> _161515_f = *it;
			{
				_20893edc9_checkTraitDeclMethod(_self_, &(_161515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_20882ad3c_findMethodInherit((*(_161443_t)).ptr(), &((*(_161515_f))._field_Ident)) != nullptr)) {
					_20892d659_pushErr(_self_, (*_161515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_161515_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_21936e287;
				};
				_julec_label_2193720d1:;
				{
					auto expr = &((*((*(_161443_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219372543:;
					if (it != expr_end) {
						jule::I64 _16318_j = it - expr->begin();
						jule::Ptr<_20881e2b4_Fn> _163111_jf = *it;
						{
							{
								
								if ((_16318_j >= _16158_i)) {
									_case_begin_219373159:;
									{
										goto _iter_end_219372543;
									}
								}
								else if (((*(_161515_f))._field_Ident == (*(_163111_jf))._field_Ident)) {
									_case_begin_2193731e2:;
									{
										_20892d659_pushErr(_self_, (*_161515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_161515_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_219372543;
									}
								}
								_match_end_219373049:;
							};
						}
						_iter_next_219372543:;
						++it;
						_16318_j++;
						goto _iter_begin_219372543;
					}
					_iter_end_219372543:;
				};
			}
			_iter_next_21936e287:;
			++it;
			_16158_i++;
			goto _iter_begin_21936e287;
		}
		_iter_end_21936e287:;
	};
}



inline void _20894043a_checkTraitDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088299c8_Trait>* _165036_t) {
	if (_20871420e_IsIgnoreIdent((*((*(_165036_t))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_165036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_20892e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_165036_t))), &((*((*(_165036_t))))._field_Ident), false)) {
		_20892d659_pushErr(_self_, (*((*(_165036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165036_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_20893eb21_checkTraitDeclInherits(_self_, _165036_t);
	_208940182_checkTraitDeclMethods(_self_, _165036_t);
}



inline jule::Bool _2089406c1_checkTraitDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21937814d:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _166415_t = *it;
			{
				_20894043a_checkTraitDecl(_self_, &(_166415_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_21937814d:;
			++it;
			goto _iter_begin_21937814d;
		}
		_iter_end_21937814d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _208940abc_checkTraitImplMethods(_20892a755_sema* _self_, jule::Ptr<_2088299c8_Trait>* _167442_base, jule::Ptr<_2088c7977_Impl>* _167457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_167457_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219379ade:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> *_167610_f = it;
			{
				if ((_20882a6aa_FindMethod((*(_167442_base)).ptr(), (*((*(_167610_f))))._field_Ident) == nullptr)) {
					_20892d659_pushErr(_self_, (*(*(_167610_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_167442_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_167610_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_219379ade:;
			++it;
			goto _iter_begin_219379ade;
		}
		_iter_end_219379ade:;
	};
	return __jule_func_result;;
}



inline jule::Bool _208940eb8_implToStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _168534_dest, jule::Ptr<_2088c7977_Impl>* _168554_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_168554_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21937c3c7:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _168915_f = *it;
			{
				if (((_208746d8a_FindMethod((*(_168534_dest)).ptr(), (*(_168915_f))._field_Ident, (*_168915_f.alloc)._field_Statically) != nullptr) || (_20874751c_FindField((*(_168534_dest)).ptr(), (*(_168915_f))._field_Ident) != nullptr))) {
					_20892d659_pushErr(_self_.ptr(), (*(_168915_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_168534_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_168915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_21937c3c7;
				};
				if ((((*((*(_168534_dest))))._field_Generics.len() > 0LL) && ((*(_168915_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_168915_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2193804a7:;
						if (it != expr_end) {
							jule::Ptr<_20873454d_GenericDecl> _169712_fg = *it;
							{
								{
									auto expr = &((*((*(_168534_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_219380e9c:;
									if (it != expr_end) {
										jule::Ptr<_20873454d_GenericDecl> _169813_dg = *it;
										{
											if (((*(_169712_fg))._field_Ident == (*(_169813_dg))._field_Ident)) {
												_20892d659_pushErr(_self_.ptr(), (*_169712_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_219380e9c:;
										++it;
										goto _iter_begin_219380e9c;
									}
									_iter_end_219380e9c:;
								};
							}
							_iter_next_2193804a7:;
							++it;
							goto _iter_begin_2193804a7;
						}
						_iter_end_2193804a7:;
					};
				};
				_20892e6d2_checkDirectives(_self_, &((*(_168915_f))._field_Directives), jule::Any(_168915_f, &__jule_any_type10));
				(*_168915_f.alloc)._field_sema=_self_;
				(*_168915_f.alloc)._field_Owner=(*(_168534_dest));
				{ jule::Slice<jule::Ptr<_20881e2b4_Fn>> &__jule_push_dest = (*((*(_168534_dest))))._field_Methods; __jule_push_dest.push(_168915_f); };
			}
			_iter_next_21937c3c7:;
			++it;
			goto _iter_begin_21937c3c7;
		}
		_iter_end_21937c3c7:;
	};
	{
		auto expr = &((*((*(_168554_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21937c75c:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _171415_v = *it;
			{
				;
				if (((_208746d8a_FindMethod((*(_168534_dest)).ptr(), (*(_171415_v))._field_Ident, true) != nullptr) || (_2087471cb_FindStatic((*(_168534_dest)).ptr(), (*(_171415_v))._field_Ident) != nullptr))) {
					_20892d659_pushErr(_self_.ptr(), (*(_171415_v))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_168534_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_171415_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_21937c75c;
				};
				{ jule::Slice<jule::Ptr<_20894d7de_Var>> &__jule_push_dest = (*((*(_168534_dest))))._field_Statics; __jule_push_dest.push(_171415_v); };
			}
			_iter_next_21937c75c:;
			++it;
			goto _iter_begin_21937c75c;
		}
		_iter_end_21937c75c:;
	};
	if (((*((*(_168534_dest))))._field_Instances.len() == 1LL)) {
		jule::Ptr<_2087490bd_StructIns> _17278_s = (*((*(_168534_dest))))._field_Instances[0LL];;
		if (((*(_17278_s))._field_Source != nullptr)) {
			(*_17278_s.alloc)._field_Methods=(*((*(_168534_dest))))._field_Methods;
			(*_17278_s.alloc)._field_Statics=(*((*(_168534_dest))))._field_Statics;
		};
	};
	return __jule_func_result;;
}



inline void _208941271_implTrait(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088c7977_Impl>* _173831_decl) {
	jule::Ptr<_2089ce661_Type> _17397_baseT = _20893483b_selectType(_self_, &((*((*(_173831_decl))))._field_Base));;
	if ((_17397_baseT == nullptr)) {
		return;;
	};
	jule::Ptr<_2088299c8_Trait> _17437_base = _2089d4314_Trait(_17397_baseT.ptr());;
	if ((_17437_base == nullptr)) {
		_20892d659_pushErr(_self_, (*((*((*(_173831_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_17397_baseT), &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2089ce661_Type> _17507_destT = _20893483b_selectType(_self_, &((*((*(_173831_decl))))._field_Dest));;
	if ((_17507_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_2087490bd_StructIns> _17547_destS = _2089d407d_softStruct(_17507_destT.ptr());;
	if ((_17547_destS == nullptr)) {
		_20892d659_pushErr(_self_, (*((*((*(_173831_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_17507_destT), &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_208746230_Struct> _17617_dest = (*(_17547_destS))._field_Decl;;
	if ((_208718059_Dir((*((*(_17617_dest))._field_Token))._field_File.ptr()) != _208718059_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_20892d659_pushErr(_self_, (*((*((*(_173831_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_20894b743_pushImplemented(_17437_base, &(_17617_dest));
	_20894ba2e_pushImplements(&(_17617_dest), _17437_base);
	if (((*((*(_173831_decl))))._field_Statics.len() > 0LL)) {
		_20892d659_pushErr(_self_, (*((*((*(_173831_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_208940abc_checkTraitImplMethods(_self_, &(_17437_base), _173831_decl)))) {
			_case_begin_2193929e7:;
		}
		else if ((!(_208940eb8_implToStruct(_self_, &(_17617_dest), _173831_decl)))) {
			_case_begin_219392a5d:;
		}
		_match_end_219391aa1:;
	};
}



inline void _208941529_implStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088c7977_Impl>* _178132_decl) {
	jule::Ptr<_2089ce661_Type> _17827_destT = _20893483b_selectType(_self_, &((*((*(_178132_decl))))._field_Dest));;
	if ((_17827_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_2087490bd_StructIns> _17867_destS = _2089d407d_softStruct(_17827_destT.ptr());;
	if ((_17867_destS == nullptr)) {
		_20892d659_pushErr(_self_, (*((*((*(_178132_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_17827_destT), &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_208746230_Struct> _17937_dest = (*(_17867_destS))._field_Decl;;
	if ((_208718059_Dir((*((*(_17937_dest))._field_Token))._field_File.ptr()) != _208718059_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_20892d659_pushErr(_self_, (*((*((*(_178132_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_208940eb8_implToStruct(_self_, &(_17937_dest), _178132_decl)))) {
			_case_begin_219398789:;
		}
		_match_end_219396d70:;
	};
}



inline void _2089417d2_implImpl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2088c7977_Impl>* _180530_decl) {
	{
		
		if (_2088c7d73_IsTraitImpl((*(_180530_decl)).ptr())) {
			_case_begin_2193992d4:;
			{
				_208941271_implTrait(_self_, _180530_decl);
			}
		}
		else if (_2088c8109_IsStructImpl((*(_180530_decl)).ptr())) {
			_case_begin_21939937d:;
			{
				_208941529_implStruct(_self_, _180530_decl);
			}
		}
		_match_end_2193991b3:;
	};
}



inline void _208941b45_checkVarDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _181634_decl, jule::Trait _181650_l) {
	if (_20871420e_IsIgnoreIdent((*((*(_181634_decl))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_206596439_IsTypeInferred((*(_181634_decl)).ptr())) {
		if ((!(_2065961a3_IsInitialized((*(_181634_decl)).ptr())))) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_2088eaeb7_ReferenceStack> _18268_refers = static_cast<jule::Ptr<_2088eaeb7_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _181650_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4)) {
				_case_begin_21939d3c6:;
				{
					_18268_refers=(*((*(_181634_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
				_case_begin_21939d52a:;
				{
					_18268_refers=_2088d6a63_getOwnerRefers(_181650_l.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_21939d4b4:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1833:5"));;
				}
			}
			_match_end_21939d44d:;
		};
		(*((*((*(_181634_decl))))._field_TypeSym))._field_Type=_208933c03_checkTypeSymRefers(_self_, &((*(*((*(_181634_decl))))._field_TypeSym.alloc)._field_Decl), _181650_l, _18268_refers);
	};
	if ((*((*(_181634_decl))))._field_Reference) {
		if ((*((*(_181634_decl))))._field_Constant) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181634_decl))))._field_Statically) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_2065961a3_IsInitialized((*(_181634_decl)).ptr())))) {
		if ((*((*(_181634_decl))))._field_Constant) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181634_decl))))._field_Statically) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181634_decl))))._field_Reference) {
			_20892d659_pushErr(_self_.ptr(), (*((*(_181634_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _208941ded_checkGlobalVarDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _186240_decl) {
	if (_20892e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_186240_decl))), &((*((*(_186240_decl))))._field_Ident), (*((*(_186240_decl))))._field_Binded)) {
		_20892d659_pushErr(_self_, (*((*(_186240_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186240_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_186240_decl))))._field_Binded && (*((*(_186240_decl))))._field_Constant)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_186240_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_186240_decl))))._field_Binded)) && (!((*((*(_186240_decl))))._field_Constant))) && (!((*((*(_186240_decl))))._field_Statically)))) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_186240_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_20892e6d2_checkDirectives(_self_, &((*((*(_186240_decl))))._field_Directives), jule::Any((*(_186240_decl)), &__jule_any_type7));
	_208941b45_checkVarDecl(_self_, _186240_decl, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));
}



inline jule::Bool _208942184_checkGlobalDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193aa3a0:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _188015_decl = *it;
			{
				_208941ded_checkGlobalVarDecl(_self_, &(_188015_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2193aa3a0:;
			++it;
			goto _iter_begin_2193aa3a0;
		}
		_iter_end_2193aa3a0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _208942580_checkStructTraitImpl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _189042_strct, jule::Ptr<_2088299c8_Trait>* _189063_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_189063_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193abc20:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _189115_tf = *it;
			{
				jule::Bool _18928_exist = false;;
				jule::Ptr<_20881e2b4_Fn> _18938_sf = _208746d8a_FindMethod((*(_189042_strct)).ptr(), (*(_189115_tf))._field_Ident, (*_189115_tf.alloc)._field_Statically);;
				jule::Ptr<_208822372_FnIns> _18944_tfK = _208937b6e_getTraitCheckFnKind(_self_, &(_189115_tf));;
				if ((_18938_sf != nullptr)) {
					jule::Ptr<_208822372_FnIns> _18969_sfK = _208937b6e_getTraitCheckFnKind(_self_, &(_18938_sf));;
					if ((_18969_sfK != nullptr)) {
						_18928_exist=_20882331d_equalTrait(_18944_tfK, &(_18969_sfK));
					};
				};
				if (_18928_exist) {
					jule::Ptr<_208726760_Directive> _19025_d = _2089c5dd8_findDirective(&((*(_18938_sf))._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_19025_d != nullptr)) {
						_20892d659_pushErr(_self_, (*_19025_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_20892d659_pushErr(_self_, (*((*(_189042_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_189063_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_208824253_GetKindStr(_18944_tfK.ptr(), true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_2193abc20:;
			++it;
			goto _iter_begin_2193abc20;
		}
		_iter_end_2193abc20:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2089428c1_checkStructImpls(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _191638_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_191638_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193b3056:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _191815_trt = *it;
			{
				__jule_func_result=(_208942580_checkStructTraitImpl(_self_, _191638_s, &(_191815_trt)) && __jule_func_result);
			}
			_iter_next_2193b3056:;
			++it;
			goto _iter_begin_2193b3056;
		}
		_iter_end_2193b3056:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _208942c12_checkStructFields(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _192439_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_192439_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193b44a8:;
		if (it != expr_end) {
			jule::Ptr<_208744e10_Field> _192615_f = *it;
			{
				(*(_192615_f))._field_Owner=(*(_192439_st));
				{
					auto expr = &((*((*(_192439_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2193b5267:;
					if (it != expr_end) {
						jule::Ptr<_208744e10_Field> _192811_cf = *it;
						{
							if ((_192615_f == _192811_cf)) {
								goto _iter_end_2193b5267;
							} else if (((*_192615_f.alloc)._field_Ident == (*(_192811_cf))._field_Ident)) {
								_20892d659_pushErr(_self_.ptr(), (*_192615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_192615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_2193b5267:;
						++it;
						goto _iter_begin_2193b5267;
					}
					_iter_end_2193b5267:;
				};
			}
			_iter_next_2193b44a8:;
			++it;
			goto _iter_begin_2193b44a8;
		}
		_iter_end_2193b44a8:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _208942eba_checkStructDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _194137_s) {
	if (_20871420e_IsIgnoreIdent((*((*(_194137_s))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_194137_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_20892e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_194137_s))), &((*((*(_194137_s))))._field_Ident), (*((*(_194137_s))))._field_Binded)) {
		_20892d659_pushErr(_self_, (*((*(_194137_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194137_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_20892e6d2_checkDirectives(_self_, &((*((*(_194137_s))))._field_Directives), jule::Any((*(_194137_s)), &__jule_any_type9));
	{
		
		if ((!(_20893d2e5_checkDeclGenerics(_self_, &((*((*(_194137_s))))._field_Generics))))) {
			_case_begin_2193ba437:;
		}
		else if ((!(_208942c12_checkStructFields(_self_, _194137_s)))) {
			_case_begin_2193ba49d:;
		}
		else if ((!(_2089428c1_checkStructImpls(_self_, _194137_s)))) {
			_case_begin_2193ba514:;
		}
		else if ((!(_208943b03_checkFuncDeclsBy(_self_, &((*((*(_194137_s))))._field_Methods))))) {
			_case_begin_2193ba57a:;
		}
		_match_end_2193ba2d3:;
	};
}



inline jule::Bool _208943251_checkStructDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193bc9cd:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _196115_s = *it;
			{
				_208942eba_checkStructDecl(_self_, &(_196115_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2193bc9cd:;
			++it;
			goto _iter_begin_2193bc9cd;
		}
		_iter_end_2193bc9cd:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193bd0d8:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> _196815_ta = *it;
			{
				if ((!((*(_196815_ta))._field_Strict))) {
					goto _iter_next_2193bd0d8;
				};
				jule::Ptr<_208746230_Struct> _19728_s = (*((*((*((*(_196815_ta))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)))._field_Decl;;
				{
					
					if ((!(_2089428c1_checkStructImpls(_self_, &(_19728_s))))) {
						_case_begin_2193c0948:;
					}
					else if ((!(_208943b03_checkFuncDeclsBy(_self_, &((*(_19728_s))._field_Methods))))) {
						_case_begin_2193c09e2:;
					}
					_match_end_2193c0816:;
				};
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2193bd0d8:;
			++it;
			goto _iter_begin_2193bd0d8;
		}
		_iter_end_2193bd0d8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _208943509_checkAnonFuncDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _198539_f) {
	(*((*(_198539_f))))._field_sema=_self_;
	_20893e071_checkFnDeclPrototype(_self_, _198539_f);
}



inline void _2089437b2_checkFuncDecl(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _199035_f) {
	if (_20871420e_IsIgnoreIdent((*((*(_199035_f))))._field_Ident)) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_199035_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_2088202a4_IsAnon((*(_199035_f)).ptr())) {
		_20892d659_pushErr(_self_.ptr(), (*((*(_199035_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_20892e6d2_checkDirectives(_self_, &((*((*(_199035_f))))._field_Directives), jule::Any((*(_199035_f)), &__jule_any_type10));
	_208943509_checkAnonFuncDecl(_self_, _199035_f);
	if ((((*((*(_199035_f))))._field_Owner == nullptr) && _20892e36e_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_199035_f))), &((*((*(_199035_f))))._field_Ident), (*((*(_199035_f))))._field_Binded))) {
		if ((*((*(_199035_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_20881e2b4_Fn> _20025_init = _20892bd1c_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20025_init != nullptr)) {
				return;;
			};
		};
		_20892d659_pushErr(_self_, (*((*(_199035_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_199035_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _208943b03_checkFuncDeclsBy(jule::Ptr<_20892a755_sema> _self_, jule::Slice<jule::Ptr<_20881e2b4_Fn>>* _201238_funcs) {
	{
		auto expr = _201238_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193c8511:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _201315_f = *it;
			{
				_2089437b2_checkFuncDecl(_self_, &(_201315_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_2193c8511:;
			++it;
			goto _iter_begin_2193c8511;
		}
		_iter_end_2193c8511:;
	};
	return true;;
}



inline jule::Bool _208943d89_checkFuncDecls(jule::Ptr<_20892a755_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _208943b03_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _2089442a7_pushCycleError(_20892a755_sema* _self_, jule::Str* _202827_st1, jule::Str* _202838_st2, _21e64c5b5_Builder* _202853_message) {
	;
	jule::Str _20303_refersTo = _21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_202827_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_202838_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _20313_m = _21e64de24_Str(_202853_message);;
	({
		auto except = _21e64d594_WriteStr(_202853_message, _220c5bc8e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2032:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_202853_message, _20303_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2033:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_202853_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2034:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_202853_message, _20313_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2035:3"));
		(except.result);
	});
}



inline void _20894495b_checkPackageDecls(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193cd66a:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _205515_f = *it;
			{
				_20892d23b_setCurrentFile(_self_.ptr(), _205515_f);
				if ((!(_20893b216_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2193cd66a:;
			++it;
			goto _iter_begin_2193cd66a;
		}
		_iter_end_2193cd66a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193d05d4:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _206215_f = *it;
			{
				_20892d23b_setCurrentFile(_self_, _206215_f);
				if ((!(_2089406c1_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2193d05d4:;
			++it;
			goto _iter_begin_2193d05d4;
		}
		_iter_end_2193d05d4:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193d156e:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _206915_f = *it;
			{
				_20892d23b_setCurrentFile(_self_, _206915_f);
				if ((!(_208942184_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2193d156e:;
			++it;
			goto _iter_begin_2193d156e;
		}
		_iter_end_2193d156e:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193d25e7:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _207615_f = *it;
			{
				_20892d23b_setCurrentFile(_self_, _207615_f);
				{
					
					if ((!(_208943d89_checkFuncDecls(_self_)))) {
						_case_begin_2193d3d13:;
					}
					else if ((!(_208943251_checkStructDecls(_self_)))) {
						_case_begin_2193d3dac:;
					}
					else {
						_case_begin_2193d375d:;
						{
							goto _iter_next_2193d25e7;
						}
					}
					_match_end_2193d3c8b:;
				};
				return;;
			}
			_iter_next_2193d25e7:;
			++it;
			goto _iter_begin_2193d25e7;
		}
		_iter_end_2193d25e7:;
	};
}



inline void _208944cbe_checkDataForTypeInference(_20892a755_sema* _self_, jule::Ptr<_20899a9a1_Data>* _208842_d, jule::Ptr<_208711827_Token>* _208853_errToken) {
	{
		
		if (_20899adbe_IsNil((*(_208842_d)).ptr())) {
			_case_begin_2193d4e02:;
			{
				_20892d659_pushErr(_self_, (*(_208853_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_20899b155_IsVoid((*(_208842_d)).ptr())) {
			_case_begin_2193d4e9b:;
			{
				_20892d659_pushErr(_self_, (*(_208853_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_208842_d))))._field_Type))._field_Variadic) {
			_case_begin_2193d5012:;
			{
				_20892d659_pushErr(_self_, (*(_208853_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_2193d4cd1:;
	};
}



inline void _208945077_checkVarValue(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _210035_v) {
	if (_206596439_IsTypeInferred((*(_210035_v)).ptr())) {
		(*((*(_210035_v))))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_210035_v))))._field_Value))._field_Data))._field_Type});
		_208944cbe_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_210035_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_210035_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_20893a3d0_checkValidityForInitExpr(_self_, (*((*(_210035_v))))._field_Mutable, (*((*(_210035_v))))._field_Reference, &((*((*((*(_210035_v))))._field_TypeSym))._field_Type), &((*(*((*(_210035_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_210035_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_2089dec8c_Arr> _21138_arr = _2089d3544_Arr((*((*((*(_210035_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_21138_arr != nullptr)) {
			if ((*_21138_arr.alloc)._field_Auto) {
				jule::Ptr<_2089dec8c_Arr> _21166_dataArr = _2089d3544_Arr((*((*((*((*(_210035_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_21166_dataArr != nullptr)) {
					(*_21138_arr.alloc)._field_N=(*_21166_dataArr.alloc)._field_N;
				};
			};
		};
		if (_208935b4a_checkAssignType(_self_, (*((*(_210035_v))))._field_Reference, &((*(*((*(_210035_v))))._field_TypeSym.alloc)._field_Type), &((*((*((*(_210035_v))))._field_Value))._field_Data), (*((*(*((*(_210035_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_210035_v))))._field_Refers)) {
			_20893a3d0_checkValidityForInitExpr(_self_, (*((*(_210035_v))))._field_Mutable, (*((*(_210035_v))))._field_Reference, &((*(*((*(_210035_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_210035_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_210035_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if ((*((*(_210035_v))))._field_Constant) {
		if (((!(_20899b3db_IsConst((*((*((*(_210035_v))))._field_Value))._field_Data.ptr()))) && (!(_2089d4ab7_comptime((*(*((*((*(_210035_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_20892d659_pushErr(_self_.ptr(), (*((*(*((*(_210035_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_210035_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_210035_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_2089d4831_Tup((*((*((*(_210035_v))))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
		(*(*((*(_210035_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _2089453da_evalVarValue(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _214934_decl, jule::Trait _214950_l) {
	if ((!(_2065961a3_IsInitialized((*(_214934_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_20899c970_eval> _21547_eval = static_cast<jule::Ptr<_20899c970_eval>>(nullptr);;
	if (((*((*(_214934_decl))))._field_TypeSym != nullptr)) {
		_21547_eval=_208934ce2_evalpd(_self_, _214950_l, (*(*((*(_214934_decl))))._field_TypeSym.alloc)._field_Type, (*(_214934_decl)));
	} else {
		_21547_eval=_208934ce2_evalpd(_self_, _214950_l, nullptr, (*(_214934_decl)));
	};
	(*(_21547_eval))._field_target._field_mutable=(*((*(_214934_decl))))._field_Mutable;
	(*((*((*(_214934_decl))))._field_Value))._field_Data=_2089bc5d8_evalExpr(_21547_eval, (*(*((*(_214934_decl))))._field_Value.alloc)._field_Expr);
}



inline void _20894574d_checkVar(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20894d7de_Var>* _216630_decl, jule::Trait _216646_l) {
	_2089453da_evalVarValue(_self_, _216630_decl, _216646_l);
	if (((*((*((*(_216630_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_208945077_checkVarValue(_self_, _216630_decl);
}



inline void _20894594b_checkGlobals(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2193ea720:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _217615_decl = *it;
			{
				if (((*(_217615_decl))._field_Binded || (*(_217615_decl))._field_Used)) {
					goto _iter_next_2193ea720;
				};
				_20894574d_checkVar(_self_, &(_217615_decl), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));
			}
			_iter_next_2193ea720:;
			++it;
			goto _iter_begin_2193ea720;
		}
		_iter_end_2193ea720:;
	};
}



inline jule::Ptr<_208822372_FnIns> _208945d47_readyToCheckFn(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _218936_s, jule::Ptr<_20881e2b4_Fn>* _218956_f) {
	jule::Ptr<_208822372_FnIns> _21907_ins = _208820a57_instance((*(_218956_f)));;
	if (((*((*(_218956_f))))._field_Instances.len() != 0LL)) {
		return _21907_ins;;
	};
	(*(_21907_ins))._field_Owner=(*(_218936_s));
	_208820d65_appendInstance((*(_218956_f)).ptr(), &(_21907_ins));
	(*_21907_ins.alloc)._field_reloaded=true;
	if (_2089394bc_reloadFnInsTypes(_self_, _21907_ins)) {
		return _21907_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _208946243_checkGenericFn(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _220536_f, jule::Ptr<_208711827_Token>* _220552_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_2089394bc_reloadFnInsTypes(_self_, (*(_220536_f)));
	(*((*(_220536_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_208822372_FnIns> _22117_existInstance = _208820d65_appendInstance((*((*(_220536_f))))._field_Decl.ptr(), _220536_f);;
	if ((!(_208938125_checkConstraintsFn(_self_, _220536_f, _220552_et, _22117_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_22117_existInstance != nullptr)) {
		(*(_220536_f))=_22117_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_20894808b_checkFnInsCaller(_self_, _220536_f, (*(_220552_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _2089465a6_checkTypeMethod(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _222837_s, jule::Ptr<_20881e2b4_Fn>* _222857_f) {
	if (((*((*(_222857_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_208822372_FnIns> _22337_ins = (*((*(_222857_f))))._field_Instances[0LL];;
	if (((*((*(_22337_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_208948344_checkFnIns(_self_, &(_22337_ins));
}



inline jule::Bool _2089469a2_checkStructEnv(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _224436_s, jule::Ptr<_208711827_Token> _224455_errorToken) {
	jule::Bool __jule_func_result = false;
	_2089e2751_typeChecker _22457_tc = _2089e2751_typeChecker{._field_s=(*((*((*(_224436_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_224436_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_224436_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_2089e1761_referencer>(_2089e1761_referencer{._field_ident=(*(*((*(_224436_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_224436_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_224436_s))))._field_Refers, ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_224436_s))))._field_Generics.len() > 0LL)) {
		_22457_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>::alloc(0LL, (*((*(_224436_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089cd94b_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_224436_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_218aba198:;
			if (it != expr_end) {
				jule::I64 _22589_i = it - expr->begin();
				jule::Ptr<_2089ccc7a_InsGeneric> _225816_g = *it;
				{
					jule::Ptr<_20873454d_GenericDecl> _22599_decl = (*(*((*(_224436_s))))._field_Decl.alloc)._field_Generics[_22589_i];;
					{ jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> &__jule_push_dest = _22457_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22599_decl.alloc)._field_Token, ._field_Ident=(*(_22599_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_225816_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)})); };
				}
				_iter_next_218aba198:;
				++it;
				_22589_i++;
				goto _iter_begin_218aba198;
			}
			_iter_end_218aba198:;
		};
	};
	jule::Ptr<_2088255b7_SymTab> _22687_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_20892d23b_setCurrentFile(_self_, _22687_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_224436_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_2088255b7_SymTab> _22728_file = _208929006_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_224436_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22728_file != nullptr)) {
			_20892d23b_setCurrentFile(_self_, _22728_file);
		};
	};
	if (((*((*(_224436_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_2088c5678_constraintChecker> _22798_cc = _208933351_constraintChecker(_self_);;
		(*(_22798_cc))._field_et=_224455_errorToken;
		(*_22798_cc.alloc)._field_si=(*(_224436_s));
		(*_22798_cc.alloc)._field_genericsA=_22457_tc._field_useGenerics;
		(*_22798_cc.alloc)._field_uniq=true;
		if ((!(_2088c65e1_check(_22798_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_224436_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _22928_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22457_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_224436_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_219258eeb:;
			if (it != expr_end) {
				jule::Ptr<_20894d7de_Var> _229416_v = *it;
				{
					_208941b45_checkVarDecl(_self_, &(_229416_v), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));
					_20894574d_checkVar(_self_, &(_229416_v), jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22928_n) == 0LL) && __jule_func_result);
				}
				_iter_next_219258eeb:;
				++it;
				goto _iter_begin_219258eeb;
			}
			_iter_end_219258eeb:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22457_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_20899c970_eval> _23057_eval = _20893552e_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));;
	(*((*(_224436_s))))._field_Comparable=(!((*(*((*(_224436_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_224436_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21925ca05:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> _230715_f = *it;
			{
				jule::Ptr<_2089ce661_Type> _23088_kind = _2089ea33b_checkDecl(&_22457_tc, &((*((*((*(_230715_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_23088_kind != nullptr) && __jule_func_result);
				if ((_23088_kind == nullptr)) {
					if (((_self_ != (*(*((*(_224436_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_224436_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_224436_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_224436_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_21925ca05;
				};
				(*_230715_f.alloc)._field_Type=_23088_kind;
				(*((*(_224436_s))))._field_Mutable=((*((*(_224436_s))))._field_Mutable || ((!((*(*(_230715_f))._field_Decl.alloc)._field_Mutable)) && _2089d19a4_Mutable((*_230715_f.alloc)._field_Type.ptr())));
				(*((*(_224436_s))))._field_Comparable=((*((*(_224436_s))))._field_Comparable && _2089d171d_Comparable((*_230715_f.alloc)._field_Type.ptr()));
				if (((*(*(_230715_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_21925ca05;
				};
				(*(_23057_eval))._field_prefix=(*_230715_f.alloc)._field_Type;
				(*_23057_eval.alloc)._field_field=_230715_f;
				(*_23057_eval.alloc)._field_target._field_mutable=true;
				(*_230715_f.alloc)._field_Default=_2089bc5d8_evalExpr(_23057_eval, (*(*(_230715_f))._field_Decl.alloc)._field_Default);
				if (((*_230715_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_21925ca05;
				};
				;
				_208935b4a_checkAssignType(_self_, false, &((*_230715_f.alloc)._field_Type), &((*_230715_f.alloc)._field_Default), (*((*(*(_230715_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_224436_s))))._field_Refers);
			}
			_iter_next_21925ca05:;
			++it;
			goto _iter_begin_21925ca05;
		}
		_iter_end_21925ca05:;
	};
	return __jule_func_result;;
}



inline jule::Bool _208946d9d_precheckStructIns(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _234239_s, jule::Ptr<_208711827_Token> _234258_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_2089469a2_checkStructEnv(_self_, _234239_s, _234258_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_234239_s))))._field_Comparable && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_20881e2b4_Fn> _23538_decl = _2083e3152_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_234239_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_219269083:;
			if (it != expr_end) {
				jule::Ptr<_208748496_FieldIns> _235416_field = *it;
				{
					jule::Ptr<_2089dec8c_Arr> _23559_arr = _2089d3544_Arr((*(_235416_field))._field_Type.ptr());;
					if ((_23559_arr == nullptr)) {
						goto _iter_next_219269083;
					};
					jule::Ptr<_208822372_FnIns> _23599_f = _2088207c1_instanceForce(_23538_decl);;
					(*(_23599_f))._field_Generics=jule::append((*_23599_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=(*(_23559_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208946243_checkGenericFn(_self_, &(_23599_f), &((*((*_235416_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2363:6"));;
					};
					_2088ebd20_Push((*((*(_234239_s))))._field_Refers.ptr(), jule::Any(_23599_f, &__jule_any_type65));
				}
				_iter_next_219269083:;
				++it;
				goto _iter_begin_219269083;
			}
			_iter_end_219269083:;
		};
	};
	{
		auto expr = &((*((*(_234239_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21926cb58:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _236915_f = *it;
			{
				if (((*(_236915_f))._field_Generics.len() == 0LL)) {
					if ((_208945d47_readyToCheckFn(_self_, _234239_s, &(_236915_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_21926cb58:;
			++it;
			goto _iter_begin_21926cb58;
		}
		_iter_end_21926cb58:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _208947156_checkStructIns(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_2087490bd_StructIns>* _237936_s) {
	{
		auto expr = &((*((*(_237936_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21926e5a5:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _238015_f = *it;
			{
				_2089465a6_checkTypeMethod(_self_, _237936_s, &(_238015_f));
			}
			_iter_next_21926e5a5:;
			++it;
			goto _iter_begin_21926e5a5;
		}
		_iter_end_21926e5a5:;
	};
}



inline void _20894740e_checkTypeStruct(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208746230_Struct>* _238537_s) {
	if ((*((*(_238537_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_238537_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_238537_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_2087490bd_StructIns> _23968_ins = _20874664d_instance((*(_238537_s)));;
		(*(_23968_ins))._field_Checked=true;
		_20874698e_appendInstance((*(_238537_s)).ptr(), &(_23968_ins));
		jule::Bool _23994_ok = _208946d9d_precheckStructIns(_self_, &(_23968_ins), nullptr);;
		if ((!(_23994_ok))) {
			return;;
		};
	};
	{
		auto expr = &((*((*(_238537_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219271200:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _240515_ins = *it;
			{
				_208947156_checkStructIns(_self_, &(_240515_ins));
			}
			_iter_next_219271200:;
			++it;
			goto _iter_begin_219271200;
		}
		_iter_end_219271200:;
	};
}



inline void _20894760c_checkStructTypes(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219273c5d:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _241115_s = *it;
			{
				_20894740e_checkTypeStruct(_self_, &(_241115_s));
			}
			_iter_next_219273c5d:;
			++it;
			goto _iter_begin_219273c5d;
		}
		_iter_end_219273c5d:;
	};
}



inline void _2089478b5_checkRets(_20892a755_sema* _self_, jule::Ptr<_208822372_FnIns>* _241630_f) {
	if (_20881e76a_IsVoid((*((*(_241630_f))))._field_Decl.ptr())) {
		return;;
	};
	_208949d07_missingRetChecker _24203_mrc = static__20894a203_new();;
	jule::Bool _24213_ok = _20894b3d0_check(&_24203_mrc, (*((*(_241630_f))))._field_Scope);;
	if ((!(_24213_ok))) {
		_20892d659_pushErr(_self_, (*((*((*(_241630_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _208947c28_checkFnInsSc(_20892a755_sema* _self_, jule::Ptr<_208822372_FnIns>* _242733_f, jule::Ptr<_2088d3169_scopeChecker>* _242749_sc) {
	_208928566_appendRetVars(&((*((*((*(_242749_sc))))._field_table))._field_Vars), _242733_f);
	_208928896_appendParamVars(&((*(*((*(_242749_sc))))._field_table.alloc)._field_Vars), _242733_f);
	_208928b82_appendGenericTypeAliases(&((*(*((*(_242749_sc))))._field_table.alloc)._field_TypeAliases), _242733_f);
	_2088e5236_check((*(_242749_sc)), &((*((*((*(_242733_f))))._field_Decl))._field_Scope), &((*((*(_242733_f))))._field_Scope));
	if ((!(_2088d5c71_stopped((*(_242749_sc)).ptr())))) {
		_2089478b5_checkRets(_self_, _242733_f);
	};
}



inline void _20894808b_checkFnInsCaller(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _244038_f, jule::Ptr<_208711827_Token> _244053_caller) {
	if ((*((*((*(_244038_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_2088255b7_SymTab> _24457_old = (*((*((*((*(_244038_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_20892d23b_setCurrentFile((*((*((*(_244038_f))))._field_Decl))._field_sema, _24457_old);
	});;
	jule::Ptr<_2088255b7_SymTab> _24477_file = _208929006_findFile(&((*(*((*((*(_244038_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_244038_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24477_file != nullptr)) {
		_20892d23b_setCurrentFile((*((*((*(_244038_f))))._field_Decl))._field_sema, _24477_file);
	};
	jule::Ptr<_2088d3169_scopeChecker> _24527_sc = _2088c9da8_newScopeChecker(&((*(*((*(_244038_f))))._field_Decl.alloc)._field_sema), (*(_244038_f)));;
	(*(_24527_sc))._field_calledFrom=_244053_caller;
	_208947c28_checkFnInsSc(_self_.ptr(), _244038_f, &(_24527_sc));
	if (((*(*((*(_244038_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*((*(*((*(_244038_f))))._field_Decl.alloc)._field_sema))._field_errors);
		(*(*((*((*(_244038_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _208948344_checkFnIns(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_208822372_FnIns>* _246232_f) {
	_20894808b_checkFnInsCaller(_self_, _246232_f, nullptr);
}



inline void _2089485ec_checkFunc(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _246631_f) {
	if ((*((*(_246631_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_246631_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_246631_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219284763:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _247615_ins = *it;
			{
				_208948344_checkFnIns(_self_, &(_247615_ins));
			}
			_iter_next_219284763:;
			++it;
			goto _iter_begin_219284763;
		}
		_iter_end_219284763:;
	};
}



inline void _2089488a5_checkTestFn(_20892a755_sema* _self_, jule::Ptr<_208822372_FnIns>* _248132_f) {
	if ((*((*((*(_248132_f))))._field_Decl))._field_Public) {
		_20892d659_pushErr(_self_, (*(*((*(_248132_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_248132_f))))._field_Decl))._field_Unsafety || (!(_20881e76a_IsVoid((*((*(_248132_f))))._field_Decl.ptr())))) || ((*((*((*(_248132_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_248132_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_248132_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_248132_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_20892d659_pushErr(_self_, (*((*((*(_248132_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2089dbe98_Sptr> _24997_sptr = _2089d2a0a_Sptr((*((*((*(_248132_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_24997_sptr == nullptr)) {
		_20892d659_pushErr(_self_, (*((*((*(_248132_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	{
		auto &_match_expr{ (*((*(_24997_sptr))._field_Elem))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_21928c381:;
			{
				jule::Ptr<_2087490bd_StructIns> _25084_s = (*((*(_24997_sptr))._field_Elem))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				if ((((*(_25084_s))._field_Source == nullptr) && _208912c8c_isStdPackage(&((*((*((*((*_25084_s.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))) {
					return;;
				};
			}
		}
		_match_end_21928c309:;
	};
	_20892d659_pushErr(_self_, (*((*((*(_248132_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
	_20892d9bc_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
}



inline void _208948b5d_precheckFunc(jule::Ptr<_20892a755_sema> _self_, jule::Ptr<_20881e2b4_Fn>* _251734_f) {
	if ((*((*(_251734_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251734_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_251734_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_208822372_FnIns> _25288_ins = _2088207c1_instanceForce((*(_251734_f)));;
		{ jule::Slice<jule::Ptr<_208822372_FnIns>> &__jule_push_dest = (*((*(_251734_f))))._field_Instances; __jule_push_dest.push(_25288_ins); };
		jule::Bool _25304_ok = _2089394bc_reloadFnInsTypes(_self_, _25288_ins);;
		(*(_25288_ins))._field_reloaded=true;
		if ((_25304_ok && _2089eb8c0_hasDirective(&((*((*(_251734_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_2089488a5_checkTestFn(_self_, &(_25288_ins));
		};
	};
}



inline void _208948d5b_precheckFuncs(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219293c7d:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _254115_decl = *it;
			{
				{
					auto expr = &((*(_254115_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219294773:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _254216_m = *it;
						{
							_208948b5d_precheckFunc(_self_, &(_254216_m));
						}
						_iter_next_219294773:;
						++it;
						goto _iter_begin_219294773;
					}
					_iter_end_219294773:;
				};
			}
			_iter_next_219293c7d:;
			++it;
			goto _iter_begin_219293c7d;
		}
		_iter_end_219293c7d:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219294311:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _254615_decl = *it;
			{
				_208948b5d_precheckFunc(_self_, &(_254615_decl));
			}
			_iter_next_219294311:;
			++it;
			goto _iter_begin_219294311;
		}
		_iter_end_219294311:;
	};
}



inline void _208949059_checkFuncs(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219295e7d:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _255315_decl = *it;
			{
				_2089485ec_checkFunc(_self_, &(_255315_decl));
			}
			_iter_next_219295e7d:;
			++it;
			goto _iter_begin_219295e7d;
		}
		_iter_end_219295e7d:;
	};
}



inline void _208949257_checkPackageTypes(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219296c1a:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _256115_f = *it;
			{
				_20892d23b_setCurrentFile(_self_.ptr(), _256115_f);
				_20894594b_checkGlobals(_self_);
				_208948d5b_precheckFuncs(_self_);
			}
			_iter_next_219296c1a:;
			++it;
			goto _iter_begin_219296c1a;
		}
		_iter_end_219296c1a:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219298634:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> _257115_ta = *it;
			{
				if ((*(_257115_ta))._field_Strict) {
					jule::Ptr<_2087490bd_StructIns> _25739_s = (*((*((*_257115_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
					(*(_25739_s))._field_Checked=true;
					jule::Bool _25755_ok = _208946d9d_precheckStructIns(_self_, &(_25739_s), nullptr);;
					if (_25755_ok) {
						_208947156_checkStructIns(_self_, &(_25739_s));
					};
				};
			}
			_iter_next_219298634:;
			++it;
			goto _iter_begin_219298634;
		}
		_iter_end_219298634:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219298a74:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _258215_f = *it;
			{
				_20892d23b_setCurrentFile(_self_, _258215_f);
				_208949059_checkFuncs(_self_);
				_20894760c_checkStructTypes(_self_);
			}
			_iter_next_219298a74:;
			++it;
			goto _iter_begin_219298a74;
		}
		_iter_end_219298a74:;
	};
}



inline void _208949455_setFileSemaFields(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21929c281:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _259015_f = *it;
			{
				(*(_259015_f))._field_sema=_self_;
			}
			_iter_next_21929c281:;
			++it;
			goto _iter_begin_21929c281;
		}
		_iter_end_21929c281:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21929c8ad:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _259315_st = *it;
			{
				(*(_259315_st))._field_sema=_self_;
			}
			_iter_next_21929c8ad:;
			++it;
			goto _iter_begin_21929c8ad;
		}
		_iter_end_21929c8ad:;
	};
}



inline void _208949653_setSemaFields(jule::Ptr<_20892a755_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21929da57:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _259915_file = *it;
			{
				_20892d23b_setCurrentFile(_self_.ptr(), _259915_file);
				_208949455_setFileSemaFields(_self_);
			}
			_iter_next_21929da57:;
			++it;
			goto _iter_begin_21929da57;
		}
		_iter_end_21929da57:;
	};
}



inline void _20894990b_check(jule::Ptr<_20892a755_sema> _self_, jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _260527_files) {
	(*(_self_))._field_files=(*(_260527_files));
	_208949653_setSemaFields(_self_);
	_20893154c_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_208932042_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_208931948_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_208931b46_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_20894495b_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	(*_self_.alloc)._field_step|=static_cast<jule::I64>(1LL);
	_208949257_checkPackageTypes(_self_);
	(*_self_.alloc)._field_step|=static_cast<jule::I64>(2LL);
}







inline _208949d07_missingRetChecker static__20894a203_new(void) {
	return _208949d07_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _20894a511_checkConditional(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088cb55d_Conditional> _265532_c) {
	{
		auto expr = &((*(_265532_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192a4ab3:;
		if (it != expr_end) {
			jule::Ptr<_2088cad43_If> _265615_elif = *it;
			{
				if ((_265615_elif == nullptr)) {
					return false;;
				};
				if ((!(_20894b08e_checkScope(_self_, (*(_265615_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_2192a4ab3:;
			++it;
			goto _iter_begin_2192a4ab3;
		}
		_iter_end_2192a4ab3:;
	};
	return (((*_265532_c.alloc)._field_Default != nullptr) && _20894b08e_checkScope(_self_, (*((*_265532_c.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _20894a852_checkMatch(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088d0463_Match> _266726_m) {
	{
		auto expr = &((*(_266726_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192a6b5e:;
		if (it != expr_end) {
			jule::Ptr<_2088d0c5a_Case> _266815_c = *it;
			{
				if ((_266815_c == nullptr)) {
					return false;;
				};
				jule::I64 _26724_n = (*(_self_))._field_breaked.len();;
				jule::Bool _26734_ok = _20894b08e_checkScope(_self_, (*(_266815_c))._field_Scope);;
				{
					
					if ((_26724_n != (*(_self_))._field_breaked.len())) {
						_case_begin_2192a8699:;
						{
							return false;;
						}
					}
					else if ((!(_26734_ok))) {
						_case_begin_2192a8743:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_2192a87a9;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_2192a87a9:;
						{
							(*(_self_))._field_falled=false;
							if (((*_266815_c.alloc)._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_2192a6b5e;
						}
					}
					_match_end_2192a8622:;
				};
			}
			_iter_next_2192a6b5e:;
			++it;
			goto _iter_begin_2192a6b5e;
		}
		_iter_end_2192a6b5e:;
	};
	return (((*_266726_m.alloc)._field_Default != nullptr) && _20894b08e_checkScope(_self_, (*((*_266726_m.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _20894ac4d_checkInfIter(_208949d07_missingRetChecker* _self_, jule::Uintptr _269324_it, jule::Ptr<_2088ca969_Scope>* _269342_s) {
	jule::I64 _26943_n = (*(_self_))._field_breaked.len();;
	if (_20894b08e_checkScope(_self_, (*(_269342_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _26943_n);;
		return true;;
	};
	if ((_26943_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_26943_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_21941b9d8:;
			if (it != expr_end) {
				jule::Uintptr _270011_addr = *it;
				{
					if ((_269324_it == _270011_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _26943_n);;
						return false;;
					};
				}
				_iter_next_21941b9d8:;
				++it;
				goto _iter_begin_21941b9d8;
			}
			_iter_end_21941b9d8:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _26943_n);;
	};
	return true;;
}



inline jule::Bool _20894b08e_checkScope(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088ca969_Scope> _271126_s) {
	if ((_271126_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_271126_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21941dea2:;
		if (it != expr_end) {
			jule::Any _271515_st = *it;
			{
				{
					auto &_match_expr{ _271515_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_21941ec72:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_21941ea30:;
						{
							jule::Uintptr _27215_addr = (*(_271515_st.unsafe_cast_ptr<_2088ccebb_BreakSt>()))._field_It;;
							if ((_27215_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27215_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_21941ece9:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_21941ed71:;
						{
							jule::Ptr<_2088cb85a_InfIter> _27299_ii = _271515_st.unsafe_cast_ptr<_2088cb85a_InfIter>();;
							if (_20894ac4d_checkInfIter(_self_, static_cast<jule::Uintptr>(_27299_ii), &((*(_27299_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_21941ede8:;
						{
							jule::Ptr<_2088cbd11_WhileIter> _27349_wn = _271515_st.unsafe_cast_ptr<_2088cbd11_WhileIter>();;
							if ((_2088cc2b7_IsWhileNext(_27349_wn.ptr()) && ((*_27349_wn.alloc)._field_Expr == nullptr))) {
								if (_20894ac4d_checkInfIter(_self_, static_cast<jule::Uintptr>(_27349_wn), &((*_27349_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_21941ee70:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_21941eee7:;
						{
							if (_20894b08e_checkScope(_self_, _271515_st.unsafe_cast_ptr<_2088ca969_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_21942006e:;
						{
							{
								auto &_match_expr{ (*(_271515_st.cast_ptr<_20899a9a1_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_2194259ae:;
									{
										return true;;
									}
								}
								_match_end_219425915:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_2194200e6:;
						{
							if (_20894a511_checkConditional(_self_, _271515_st.unsafe_cast_ptr<_2088cb55d_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_21942016d:;
						{
							if (_20894a852_checkMatch(_self_, _271515_st.unsafe_cast_ptr<_2088d0463_Match>())) {
								return true;;
							};
						}
					}
					_match_end_21941eb40:;
				};
			}
			_iter_next_21941dea2:;
			++it;
			goto _iter_begin_21941dea2;
		}
		_iter_end_21941dea2:;
	};
	return false;;
}



inline jule::Bool _20894b3d0_check(_208949d07_missingRetChecker* _self_, jule::Ptr<_2088ca969_Scope> _276621_s) {
	return _20894b08e_checkScope(_self_, _276621_s);;
}







inline jule::Bool _2065961a3_IsInitialized(_20894d7de_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _206596439_IsTypeInferred(_20894d7de_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _2065966c0_untypedConstant(_20894d7de_Var* _self_) {
	return (_206596439_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}








inline jule::Bool _206596bba_FuncPattern_eq(_206596bba_FuncPattern *_self_, _206596bba_FuncPattern _other_) { return true; }

inline jule::Bool static__2065970b6_Str(jule::Ptr<_20881e2b4_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _20881e76a_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _20881d1c5_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_208822372_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_2089d846c_Prim> _253_prim = _2089d2774_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _2089db937_IsStr(_253_prim.ptr());;
}








inline jule::Bool _208986959_typeCompatibilityChecker_eq(_208986959_typeCompatibilityChecker *_self_, _208986959_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _208986e87_pushErr(_208986959_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_20892d659_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _20898721d_checkTrait(_208986959_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2089d07d8_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2088299c8_Trait> _1157_trt = _2089d4314_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_2089d407d_softStruct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_219444acc:;
			{
				_julec_label_21944567c:;
				jule::Ptr<_2087490bd_StructIns> _1204_s = _2089d407d_softStruct((*(_self_))._field_src);;
				if ((!(_20874785d_IsImplements((*(_1204_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _2089854e6_traitHasReferenceReceiver(&(_1157_trt)))) {
					_208986e87_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d2a0a_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_219444b76:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_2089d2a0a_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_2089d407d_softStruct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _julec_label_21944567c;
			}
		}
		else if ((_2089d4314_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_219444bdc:;
			{
				jule::Ptr<_2088299c8_Trait> _1378_base = _2089d4314_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1378_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_219449e78:;
				{
					auto expr = &((*(_1378_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219449ad2:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> _14211_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_21944a95c:;
								if (it != expr_end) {
									jule::Ptr<_208746230_Struct> _14312_s2 = *it;
									{
										if ((_14211_s1 == _14312_s2)) {
											goto _iter_next_219449ad2;
										};
									}
									_iter_next_21944a95c:;
									++it;
									goto _iter_begin_21944a95c;
								}
								_iter_end_21944a95c:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_219449ad2:;
						++it;
						goto _iter_begin_219449ad2;
					}
					_iter_end_219449ad2:;
				};
				{
					auto expr = &((*(_1157_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21944b3b9:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _15016_m1 = *it;
						{
							jule::Ptr<_20881e2b4_Fn> _1519_m2 = _20882a6aa_FindMethod(_1378_base, (*(_15016_m1))._field_Ident);;
							if ((_1519_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_208822372_FnIns> _1555_m1k = _208937b6e_getTraitCheckFnKind((*(_self_))._field_s, &(_15016_m1));;
							jule::Ptr<_208822372_FnIns> _1565_m2k = _208937b6e_getTraitCheckFnKind((*(_self_))._field_s, &(_1519_m2));;
							if ((!(_20882331d_equalTrait(_1555_m1k, &(_1565_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_21944b3b9:;
						++it;
						goto _iter_begin_21944b3b9;
					}
					_iter_end_21944b3b9:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_219444a00:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2089874a4_checkPtr(_208986959_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2089d07d8_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2089e0760_Ptr> _1707_dest = _2089d2c91_Ptr((*(_self_))._field_dest.ptr());;
	if (_2089e12cc_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _2089ced9d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _20898773a_checkPrim(_208986959_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_2089d846c_Prim> _1794_prim = _2089d2774_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _2089dbbbd_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _2089ced9d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _208987b36_typeEnum(_208986959_typeCompatibilityChecker* _self_, jule::Ptr<_20882d889_TypeEnum>* _18725_e, jule::Ptr<_2089ce661_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219452227:;
		if (it != expr_end) {
			jule::Ptr<_20882d2b2_TypeEnumItem> _18815_item = *it;
			{
				if (_2089ced9d_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_20882d889_TypeEnum> _1928_ke = _2089d32ad_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type.ptr());;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_219452227;
				};
				if (_208987b36_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_219452227:;
			++it;
			goto _iter_begin_219452227;
		}
		_iter_end_219452227:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _208987dbc_checkTypeEnum(_208986959_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2089ced9d_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20882d889_TypeEnum> _2077_e = _2089d32ad_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _208987b36_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _208988153_check(_208986959_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((_2089d1ec1_NilCompatible((*(_self_))._field_dest.ptr()) && _2089d07d8_IsNil((*(_self_))._field_src.ptr()))) {
			_case_begin_219455b43:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d32ad_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_219455bdc:;
			{
				__jule_func_result = _208987dbc_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_2089d4314_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_219455c53:;
			{
				__jule_func_result = _20898721d_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		_match_end_219455615:;
	};
	jule::Ptr<_2089d846c_Prim> _2213_prim = _2089d2774_Prim((*(_self_))._field_dest.ptr());;
	if ((((_2213_prim != nullptr) && (!((*(*(_self_))._field_dest.alloc)._field_Variadic))) && _2089dbbbd_IsAny(_2213_prim))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_2213_prim != nullptr)) {
		__jule_func_result = _20898773a_checkPrim(_self_);
		return __jule_func_result;;
	};
	if (((_2089d0d05_ActualKind((*(_self_))._field_dest) != (*(*(_self_))._field_dest.alloc)._field_Kind) || (_2089d0d05_ActualKind((*(_self_))._field_src.ptr()) != (*(*(_self_))._field_src.alloc)._field_Kind))) {
		__jule_func_result = _2089ced9d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
		return __jule_func_result;;
	};
	{
		
		if ((_2089d2c91_Ptr((*(_self_))._field_dest) != nullptr)) {
			_case_begin_21945b6d7:;
			{
				__jule_func_result = _2089874a4_checkPtr(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_21945ac14:;
			{
				__jule_func_result = _2089ced9d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_219459bbe:;
	};
}








inline jule::Bool _2089887d5_assignTypeChecker_eq(_2089887d5_assignTypeChecker *_self_, _2089887d5_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _208988c9c_pushErr(_2089887d5_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25543_args) {
	_20892d659_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25543_args);
}



inline jule::Bool _208989033_checkValidity(_2089887d5_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_2089d3a61_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_21945ce69:;
			{
				jule::Ptr<_208822372_FnIns> _2634_f = _2089d3a61_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_20882383a_IsBuiltin(_2634_f.ptr())) {
						_case_begin_21945e7d9:;
						{
							_208988c9c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_21945e883:;
						{
							_208988c9c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*(*(_2634_f))._field_Decl.alloc)._field_Statically)) && _20881ea01_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_21945e8e9:;
						{
							_208988c9c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*(*(_2634_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_21945e960:;
						{
							_208988c9c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_20892d9bc_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_21945e6eb:;
				};
			}
		}
		else if ((_2089d4831_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_21945d013:;
			{
				_208988c9c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_21945cdd1:;
	};
	return _2607_valid;;
}



inline jule::Bool _2089892b9_checkConst(_2089887d5_assignTypeChecker* _self_) {
	if ((!((*((*(_self_))._field_d))._field_untyped))) {
		return false;;
	};
	jule::Ptr<_2089d846c_Prim> _2907_prim = _2089d2774_Prim((*(_self_))._field_dest.ptr());;
	if ((_2907_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_2089db937_IsStr(_2907_prim.ptr())) {
			_case_begin_219465a87:;
			{
				_2907_prim=_2089d2774_Prim((*((*(_self_))._field_d))._field_Type.ptr());
				return ((_2907_prim != nullptr) && _2089db937_IsStr(_2907_prim.ptr()));;
			}
		}
		else if (_2089db6a1_IsBool(_2907_prim.ptr())) {
			_case_begin_219465aed:;
			{
				_2907_prim=_2089d2774_Prim((*((*(_self_))._field_d))._field_Type.ptr());
				return ((_2907_prim != nullptr) && _2089db6a1_IsBool(_2907_prim.ptr()));;
			}
		}
		_match_end_219465713:;
	};
	if ((!(_20899b3db_IsConst((*(_self_))._field_d.ptr())))) {
		return _2089d1146_ActualEqual((*(_self_))._field_dest, (*(*(_self_))._field_d.alloc)._field_Type);;
	};
	jule::Str _3063_kind = (*(_2907_prim))._field_Kind;;
	{
		
		if (_20889ce8b_IsFloat(_3063_kind)) {
			_case_begin_219465603:;
			{
				if ((!(_2089858ae_floatAssignable(&(_3063_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3063_kind;
			}
		}
		else if (_20889cb4a_IsInt(_3063_kind)) {
			_case_begin_2194697a0:;
			{
				if ((!(_208986470_intAssignable(_3063_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3063_kind;
			}
		}
		else {
			_case_begin_21946933d:;
			{
				return false;;
			}
		}
		_match_end_21946911d:;
	};
	return true;;
}



inline jule::Bool _208989550_checkCompatibility(_2089887d5_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_21946b609:;
			{
				return false;;
			}
		}
		else if ((!(_208989033_checkValidity(_self_)))) {
			_case_begin_21946b670:;
			{
				return false;;
			}
		}
		else if (_2089892b9_checkConst(_self_)) {
			_case_begin_21946b6d6:;
			{
				return true;;
			}
		}
		else if ((_2089d3027_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_21946b74c:;
			{
				jule::Ptr<_2089ce661_Type> _3358_dkind = (*(_self_))._field_dest;;
				if ((_2089d3027_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3358_dkind=(*((*(_2089d3027_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_2089d846c_Prim> _3394_prim = _2089d2774_Prim((*(_self_))._field_dest.ptr());;
				if (((_3394_prim == nullptr) || _2089dbbbd_IsAny(_3394_prim.ptr()))) {
					goto _match_end_219469a03;
				};
				jule::Ptr<_2089ce661_Type> _3448_dest = (*((*(_2089d3027_Enum((*((*(_self_))._field_d))._field_Type)))._field_TypeSym))._field_Type;;
				return _2089365a7_checkTypeCompatibility((*(_self_))._field_s, &(_3448_dest), &(_3358_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_219469a03:;
	};
	return _208936e7b_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _2089897d6_check(_2089887d5_assignTypeChecker* _self_) {
	jule::Bool _3513_ok = _208989550_checkCompatibility(_self_);;
	if ((_3513_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_2089eca36_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3513_ok;;
}







inline jule::Bool _219492c6d_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_219494324:;
			{
				jule::Ptr<_2089ce661_Type> _3748_elem = static_cast<jule::Ptr<_2089ce661_Type>>(nullptr);;
				{
					
{
						_case_begin_21949618e:;
						{
							_3748_elem=(*(_2089d3544_Arr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_219499912:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_20872960e_ArrTypeDecl>()))._field_Elem;
				return _20898b8e8_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_21949429c:;
	};
	return false;;
}

inline jule::Bool _219493026_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_2194990c6:;
			{
				jule::Ptr<_2089ce661_Type> _3748_elem = static_cast<jule::Ptr<_2089ce661_Type>>(nullptr);;
				{
					
{
						_case_begin_2194a0a5b:;
						{
							_3748_elem=(*(_2089d37ca_Slc((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_2194a0880:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_208728773_SlcTypeDecl>()))._field_Elem;
				return _20898b8e8_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_21949904e:;
	};
	return false;;
}

inline jule::Bool _219498614_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2194a0088:;
			{
				jule::Ptr<_2089ce661_Type> _3748_elem = static_cast<jule::Ptr<_2089ce661_Type>>(nullptr);;
				{
					
{
						_case_begin_2194a6798:;
						{
							_3748_elem=(*(_2089d2c91_Ptr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_2194a2d16:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_208728d6c_PtrTypeDecl>()))._field_Elem;
				return _20898b8e8_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_2194a0011:;
	};
	return false;;
}

inline jule::Bool _21949e582_annotateConstraintElem(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_2194a5c4d:;
			{
				jule::Ptr<_2089ce661_Type> _3748_elem = static_cast<jule::Ptr<_2089ce661_Type>>(nullptr);;
				{
					
{
						_case_begin_2194a8d94:;
						{
							_3748_elem=(*(_2089d2a0a_Sptr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_2194ac529:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_2087283dd_SptrTypeDecl>()))._field_Elem;
				return _20898b8e8_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_2194a5bc6:;
	};
	return false;;
}



inline jule::Bool _20898aad4_annotateConstraintMap(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _39142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_21947b0b9:;
			{
				jule::Ptr<_2089de110_Map> _3948_m = _2089d459a_Map((*(_39142_k)).ptr());;
				jule::Ptr<_208729d5c_MapTypeDecl> _3958_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_208729d5c_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3958_m2))._field_Key;
				if ((!(_20898b8e8_annotateConstraint(_self_, &((*(_3948_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3958_m2.alloc)._field_Val;
				__jule_func_result = _20898b8e8_annotateConstraint(_self_, &((*(_3948_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_21947b042:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20898ae25_annotateConstraintTup(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _40642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_219480398:;
			{
				jule::Ptr<_208728a70_TupleTypeDecl> _4098_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_208728a70_TupleTypeDecl>();;
				jule::Ptr<_2089dd560_Tuple> _4108_tup2 = _2089d4831_Tup((*(_40642_k)).ptr());;
				{
					auto expr = &((*(_4108_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21948426a:;
					if (it != expr_end) {
						jule::Ptr<_2089ce661_Type> _41116_t2 = *it;
						{
							{
								auto expr = &((*(_4098_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_219484c82:;
								if (it != expr_end) {
									jule::Ptr<_208727343_TypeDecl> _41217_t = *it;
									{
										(*(_self_))._field_c=_41217_t;
										if (_20898b8e8_annotateConstraint(_self_, &(_41116_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_219484c82:;
									++it;
									goto _iter_begin_219484c82;
								}
								_iter_end_219484c82:;
							};
						}
						_iter_next_21948426a:;
						++it;
						goto _iter_begin_21948426a;
					}
					_iter_end_21948426a:;
				};
			}
		}
		_match_end_219480321:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20898b266_annotateConstraintFn(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _42341_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_219485238:;
			{
				jule::Ptr<_2087390d0_FnDecl> _4268_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_2087390d0_FnDecl>();;
				jule::Ptr<_208822372_FnIns> _4278_f = _2089d3a61_Fn((*(_42341_k)).ptr());;
				{
					auto expr = &((*(_4278_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21948833a:;
					if (it != expr_end) {
						jule::I64 _4289_i = it - expr->begin();
						jule::Ptr<_20882121c_ParamIns> _42816_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4268_pf))._field_Params[_4289_i]))._field_Kind;
							if (_20898b8e8_annotateConstraint(_self_, &((*(_42816_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_21948833a:;
						++it;
						_4289_i++;
						goto _iter_begin_21948833a;
					}
					_iter_end_21948833a:;
				};
				if (((*(_4268_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4268_pf))._field_Result.alloc)._field_Kind;
					if (_20898b8e8_annotateConstraint(_self_, &((*_4278_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_2194851b1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20898b5a7_annotateConstraintIdent(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _44444_k) {
	jule::Ptr<_20872794d_IdentTypeDecl> _4457_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_20872794d_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_2087490bd_StructIns> _4467_s = _2089d3ce7_Struct((*(_44444_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21948bc67:;
		if (it != expr_end) {
			jule::I64 _4477_i = it - expr->begin();
			jule::Ptr<_20873454d_GenericDecl> _44710_g = *it;
			{
				if (((*(_44710_g))._field_Ident == (*(_4457_ident))._field_Ident)) {
					jule::Ptr<_2089ccc7a_InsGeneric> _4499_fg = (*((*(_self_))._field_f))._field_Generics[_4477_i];;
					if ((_4499_fg != nullptr)) {
						return false;;
					};
					_20898bc5b_pushGeneric(_self_, _44444_k, _4477_i);
					return true;;
				};
				if ((_4467_s == nullptr)) {
					goto _iter_next_21948bc67;
				};
				jule::Ptr<_208727343_TypeDecl> _4598_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_4457_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21948e891:;
					if (it != expr_end) {
						jule::Ptr<_208727343_TypeDecl> _46016_ig = *it;
						{
							(*(_self_))._field_c=_46016_ig;
							{
								auto expr = &((*(_4467_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_219490540:;
								if (it != expr_end) {
									jule::Ptr<_2089ccc7a_InsGeneric> _46217_sg = *it;
									{
										if (_20898b8e8_annotateConstraint(_self_, &((*(_46217_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_219490540:;
									++it;
									goto _iter_begin_219490540;
								}
								_iter_end_219490540:;
							};
						}
						_iter_next_21948e891:;
						++it;
						goto _iter_begin_21948e891;
					}
					_iter_end_21948e891:;
				};
				(*(_self_))._field_c=_4598_c;
			}
			_iter_next_21948bc67:;
			++it;
			_4477_i++;
			goto _iter_begin_21948bc67;
		}
		_iter_end_21948bc67:;
	};
	return false;;
}



inline jule::Bool _20898b8e8_annotateConstraint(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _47339_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_2194908d6:;
			{
				return _20898b5a7_annotateConstraintIdent(_self_, _47339_k);;
			}
		}
		_match_end_219490870:;
	};
	{
		
		if ((_2089d3544_Arr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_21949173e:;
			{
				return _219492c6d_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_2089d37ca_Slc((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_2194917a5:;
			{
				return _219493026_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_2089d2c91_Ptr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_21949181b:;
			{
				return _219498614_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_2089d2a0a_Sptr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_219491882:;
			{
				return _21949e582_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_2089d459a_Map((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_219491909:;
			{
				return _20898aad4_annotateConstraintMap(_self_, _47339_k);;
			}
		}
		else if ((_2089d3a61_Fn((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_219491cc2:;
			{
				return _20898b266_annotateConstraintFn(_self_, _47339_k);;
			}
		}
		else if ((_2089d4831_Tup((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_219491d49:;
			{
				return _20898ae25_annotateConstraintTup(_self_, _47339_k);;
			}
		}
		else {
			_case_begin_219491640:;
			{
				return false;;
			}
		}
		_match_end_2194915c9:;
	};
}



inline void _20898bc5b_pushGeneric(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _49832_k, jule::I64 _49842_i) {
	(*((*(_self_))._field_f))._field_Generics[_49842_i]=jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=(*(_49832_k)), ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)});
	jule::Ptr<_20873454d_GenericDecl> _5007_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_49842_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2194ad78e:;
		if (it != expr_end) {
			jule::Ptr<_2089ce661_Type> _50115_ignored = *it;
			{
				if (((*(_5007_gd))._field_Ident == _2089cea5c_Str(_50115_ignored.ptr()))) {
					(*_50115_ignored.alloc)._field_Kind=(*((*(_49832_k))))._field_Kind;
				};
			}
			_iter_next_2194ad78e:;
			++it;
			goto _iter_begin_2194ad78e;
		}
		_iter_end_2194ad78e:;
	};
	if ((((*(_5007_gd))._field_Constraint == nullptr) || ((*((*(_5007_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_5007_gd))._field_Constraint))._field_Mask[0LL];
	_20898b8e8_annotateConstraint(_self_, _49832_k);
}



inline jule::Bool _20898c09c_annotatePrim(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _51340_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _20898e0c1_annotateAny(_self_, _51340_k);
	return __jule_func_result;;
}



inline jule::Bool _20898c3dd_annotateArr(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _51739_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089dec8c_Arr> _5187_parr = _2089d3544_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5187_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2089dec8c_Arr> _5227_arr = _2089d3544_Arr((*(_51739_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5187_parr))._field_Elem));
	__jule_func_result = _20898e412_annotateKind(_self_, &((*(_5227_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20898c72e_annotateSlc(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _52739_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089dc96b_Slc> _5287_pslc = _2089d37ca_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5287_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2089dc96b_Slc> _5327_slc = _2089d37ca_Slc((*(_52739_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5287_pslc))._field_Elem));
	__jule_func_result = _20898e412_annotateKind(_self_, &((*(_5327_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20898cb2a_checkMapKey(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _53738_k, jule::Ptr<_2089ce661_Type>* _53754_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089ce661_Type>* _5387_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_53738_k;
	__jule_func_result=_20898e412_annotateKind(_self_, _53754_ck);
	(*(_self_))._field_k=_5387_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20898ce6b_annotateMap(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _54539_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089de110_Map> _5467_pmap = _2089d459a_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5467_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2089de110_Map> _5507_m = _2089d459a_Map((*(_54539_k)).ptr());;
	__jule_func_result = (_20898cb2a_checkMapKey(_self_, (&((*(_5467_pmap))._field_Key)), &((*(_5507_m))._field_Key)) && _20898cb2a_checkMapKey(_self_, (&((*_5467_pmap.alloc)._field_Val)), &((*_5507_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _20898d2ac_annotateFn(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _55538_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_208822372_FnIns> _5567_pf = _2089d3a61_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5567_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_208822372_FnIns> _5607_f = _2089d3a61_Fn((*(_55538_k)).ptr());;
	{
		
		if (((*(_5567_pf))._field_Params.len() != (*(_5607_f))._field_Params.len())) {
			_case_begin_2194bab75:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_20881e76a_IsVoid((*(_5567_pf))._field_Decl.ptr()) != _20881e76a_IsVoid((*(_5607_f))._field_Decl))) {
			_case_begin_2194bac0d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2194baacb:;
	};
	__jule_func_result=true;
	jule::Ptr<_2089ce661_Type>* _5697_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5607_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2194bcaab:;
		if (it != expr_end) {
			jule::I64 _5708_i = it - expr->begin();
			jule::Ptr<_20882121c_ParamIns> _57015_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5567_pf))._field_Params[_5708_i]))._field_Type));
				__jule_func_result=(_20898e412_annotateKind(_self_, &((*(_57015_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_2194bcaab:;
			++it;
			_5708_i++;
			goto _iter_begin_2194bcaab;
		}
		_iter_end_2194bcaab:;
	};
	if ((!(_20881e76a_IsVoid((*(_5567_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*_5567_pf.alloc)._field_Result));
		__jule_func_result=(_20898e412_annotateKind(_self_, &((*_5607_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5697_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20898d5ed_annotatePtr(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _58439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089e0760_Ptr> _5857_pptr = _2089d2c91_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5857_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2089e0760_Ptr> _5897_ptr = _2089d2c91_Ptr((*(_58439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5857_pptr))._field_Elem));
	__jule_func_result = _20898e412_annotateKind(_self_, &((*(_5897_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20898d93e_annotateSptr(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _59440_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089dbe98_Sptr> _5957_ssptr = _2089d2a0a_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5957_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2089dbe98_Sptr> _5997_sptr = _2089d2a0a_Sptr((*(_59440_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5957_ssptr))._field_Elem));
	__jule_func_result = _20898e412_annotateKind(_self_, &((*(_5997_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20898dc80_annotateStruct(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _60442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2087490bd_StructIns> _6057_s = _2089d3ce7_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_6057_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2087490bd_StructIns> _6097_s2 = _2089d3ce7_Struct((*(_60442_k)).ptr());;
	if (((*(_6057_s))._field_Generics.len() != (*(_6097_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_6057_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2194c6972:;
		if (it != expr_end) {
			jule::I64 _6138_i = it - expr->begin();
			jule::Ptr<_2089ccc7a_InsGeneric> _61315_g = *it;
			{
				jule::Ptr<_2089ccc7a_InsGeneric> _6148_g2 = (*(_6097_s2))._field_Generics[_6138_i];;
				if (_2089ced9d_Equal((*(_61315_g))._field_Type, (*(_6148_g2))._field_Type)) {
					goto _iter_next_2194c6972;
				};
				(*(_self_))._field_k=(&((*(_61315_g))._field_Type));
				if ((!(_20898e412_annotateKind(_self_, &((*(_6148_g2))._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2194c6972:;
			++it;
			_6138_i++;
			goto _iter_begin_2194c6972;
		}
		_iter_end_2194c6972:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20898e0c1_annotateAny(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _62639_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6273_kind = _2089cea5c_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2194ca008:;
		if (it != expr_end) {
			jule::I64 _6287_i = it - expr->begin();
			jule::Ptr<_20873454d_GenericDecl> _62810_g = *it;
			{
				if ((_6273_kind != (*(_62810_g))._field_Ident)) {
					goto _iter_next_2194ca008;
				};
				jule::Ptr<_2089ccc7a_InsGeneric> _6324_t = (*((*(_self_))._field_f))._field_Generics[_6287_i];;
				{
					
					if ((_6324_t == nullptr) || ((*(_6324_t))._field_Type == nullptr)) {
						_case_begin_2194cb8cd:;
						{
							_20898bc5b_pushGeneric(_self_, _62639_k, _6287_i);
						}
					}
					else if ((!(_2089ced9d_Equal((*(_6324_t))._field_Type, (*(_62639_k)))))) {
						_case_begin_2194cb977:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_2194cb78a:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_62639_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_2194ca008:;
			++it;
			_6287_i++;
			goto _iter_begin_2194ca008;
		}
		_iter_end_2194ca008:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20898e412_annotateKind(_20898a1aa_dynamicTypeAnnotation* _self_, jule::Ptr<_2089ce661_Type>* _64740_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_20898e0c1_annotateAny(_self_, _64740_k)) {
			_case_begin_2194cde63:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d2774_Prim((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194cdec9:;
			{
				__jule_func_result = _20898c09c_annotatePrim(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d3544_Arr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce040:;
			{
				__jule_func_result = _20898c3dd_annotateArr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d37ca_Slc((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce0a6:;
			{
				__jule_func_result = _20898c72e_annotateSlc(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d459a_Map((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce271:;
			{
				__jule_func_result = _20898ce6b_annotateMap(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d3a61_Fn((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce2d7:;
			{
				__jule_func_result = _20898d2ac_annotateFn(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d2c91_Ptr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce34d:;
			{
				__jule_func_result = _20898d5ed_annotatePtr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d2a0a_Sptr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce3b4:;
			{
				__jule_func_result = _20898d93e_annotateSptr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_2089d3ce7_Struct((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_2194ce42a:;
			{
				__jule_func_result = _20898dc80_annotateStruct(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2194cdd42:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2194cd8be:;
	};
}



inline jule::Bool _20898e698_annotate(_20898a1aa_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _20898e412_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _2089905ab_pushErrToken(_208990017_fnCallArgChecker* _self_, jule::Ptr<_208711827_Token> _69228_token, jule::Str _69250_fmt, jule::Slice<jule::Any> _69270_args) {
	_20892d659_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _69228_token, _69250_fmt, _69270_args);
}



inline void _20899091e_pushErr(_208990017_fnCallArgChecker* _self_, jule::Str _69623_fmt, jule::Slice<jule::Any> _69643_args) {
	_2089905ab_pushErrToken(_self_, (*(_self_))._field_errorToken, _69623_fmt, _69643_args);
}



inline jule::Slice<jule::Ptr<_20882121c_ParamIns>> _208990ba5_getParams(_208990017_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _20881ce3e_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _208990ee6_checkCounts(_208990017_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20882121c_ParamIns>>* _70928_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _7107_n = (*(_70928_params)).len();;
	if (((_7107_n > 0LL) && _20881ce3e_IsSelf((*((*(_70928_params))[0LL]))._field_Decl.ptr()))) {
		(_7107_n)--;
	};
	jule::I64 _7157_diff = (_7107_n - (*(_self_))._field_args.len());;
	jule::Str _7167_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7157_diff == 0LL)) {
			_case_begin_2194e03c5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7107_n > 0LL) && (*((*((*(_70928_params))[(_7107_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_2194e04b3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7157_diff < 0LL) || (_7157_diff > (*(_70928_params)).len()))) {
			_case_begin_2194e0073:;
			{
				_7167_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_2194e000c:;
			{
				_7167_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_2194dee85:;
	};
	_21e64c5b5_Builder _7277_err = static__21e64ce12_New(32LL);;
	({
		auto except = _21e64d594_WriteStr(&_7277_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:728:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_7277_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:729:3"));
		(except.result);
	});
	{
		auto expr = _70928_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2194e2e55:;
		if (it != expr_end) {
			jule::I64 _7307_i = it - expr->begin();
			jule::Ptr<_20882121c_ParamIns> *_73010_p = it;
			{
				({
					auto except = _21e64d594_WriteStr(&_7277_err, _2089cea5c_Str((*((*(_73010_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:731:4"));
					(except.result);
				});
				if ((((*(_70928_params)).len() - _7307_i) > 1LL)) {
					({
						auto except = _21e64d594_WriteStr(&_7277_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:733:5"));
						(except.result);
					});
				};
			}
			_iter_next_2194e2e55:;
			++it;
			_7307_i++;
			goto _iter_begin_2194e2e55;
		}
		_iter_end_2194e2e55:;
	};
	({
		auto except = _21e64d84c_WriteByte(&_7277_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:736:3"));
	});
	_20899091e_pushErr(_self_, _7167_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21e64de24_Str(&_7277_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20899149c_checkArg(_208990017_fnCallArgChecker* _self_, jule::Ptr<_20882121c_ParamIns>* _74129_p, jule::Ptr<_20899a9a1_Data>* _74148_arg, jule::Ptr<_208711827_Token>* _74165_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _20882464e_parameterUsesGenerics(_74129_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_74129_p))))._field_Decl))._field_Variadic)) && _208998ebb_isGoodValueToInfer(_74148_arg));
		if (__jule_func_result) {
			_20898a1aa_dynamicTypeAnnotation _7469_dta = _20898a1aa_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_74129_p)), ._field_a=(*(_74148_arg)), ._field_errorToken=(*(_74165_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_20898e698_annotate(&_7469_dta);
		};
		if ((!(__jule_func_result))) {
			_2089905ab_pushErrToken(_self_, (*(_74165_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_20893a3d0_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_74129_p))))._field_Decl))._field_Mutable, (*(*((*(_74129_p))))._field_Decl.alloc)._field_Reference, &((*((*(_74129_p))))._field_Type), _74148_arg, _74165_errorToken)) {
		__jule_func_result = _208935b4a_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_74129_p))))._field_Decl.alloc)._field_Reference, &((*((*(_74129_p))))._field_Type), _74148_arg, (*(_74165_errorToken)), _2089a0e7e_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _208991898_push(_208990017_fnCallArgChecker* _self_, jule::Ptr<_20882121c_ParamIns>* _77025_p, jule::Ptr<_20872b677_Expr> _77043_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089ce661_Type> _7717_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7723_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_77025_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_77025_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_77025_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_20899a9a1_Data> _7807_d = _2089bc5d8_evalExpr((*(_self_))._field_e, _77043_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7717_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7723_oldMut;
	if ((_7807_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_20899149c_checkArg(_self_, _77025_p, &(_7807_d), &((*(_77043_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7807_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _208991c94_pushVariadic(_208990017_fnCallArgChecker* _self_, jule::Ptr<_20882121c_ParamIns>* _79433_p, jule::I64 _79451_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7967_variadiced = false;;
	jule::Bool _7973_more = ((_79451_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_208814452_SliceExpr> _7987_model = jule::new_ptr<_208814452_SliceExpr>(_208814452_SliceExpr{._field_ElemType=(*((*(_79433_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_2089ce661_Type> _8027_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8043_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_79433_p))))._field_Decl))._field_Mutable;
	jule::Ptr<_2089ce661_Type> _8127_oldKind = (*((*(_79433_p))))._field_Type;;
	(*((*(_79433_p))))._field_Type=jule::new_ptr<_2089ce661_Type>((*(*((*(_79433_p))))._field_Type.alloc));
	(*(*((*(_79433_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_79433_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_79433_p))))._field_Type=_8127_oldKind;
	});;
	for (; (_79451_i < (*(_self_))._field_args.len()); (_79451_i)++) {
		{
			jule::Ptr<_20872b677_Expr> _8218_arg = (*(_self_))._field_args[_79451_i];;
			{
				auto &_match_expr{ (*(_8218_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_21950660b:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dc96b_Slc>(_2089dc96b_Slc{._field_Elem=(*((*(_79433_p))))._field_Type}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_219506908:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_79433_p))))._field_Type;
					}
				}
				_match_end_219506892:;
			};
			jule::Ptr<_20899a9a1_Data> _8348_d = _2089bbe56_eval((*(_self_))._field_e, _8218_arg);;
			if ((_8348_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_219505a8e;
			};
			if ((*((*(_8348_d))._field_Type))._field_Variadic) {
				_7967_variadiced=true;
				(*((*((*(_79433_p))))._field_Type))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _20899149c_checkArg(_self_, _79433_p, &(_8348_d), &((*(_8218_arg))._field_Token)));
				(*(*((*(_79433_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8348_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_21950c49c:;
						{
							_7987_model=(*(_8348_d))._field_Model.unsafe_cast_ptr<_208814452_SliceExpr>();
							(*(_7987_model))._field_ElemType=(*((*(_79433_p))))._field_Type;
						}
					}
					else {
						_case_begin_21950baa6:;
						{
							_7987_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8348_d))._field_Model); };
						}
					}
					_match_end_21950ba40:;
				};
				(_79451_i)++;
				goto _iter_end_219505a8e;
			};
			__jule_func_result=(__jule_func_result && _20899149c_checkArg(_self_, _79433_p, &(_8348_d), &((*(_8218_arg))._field_Token)));
			(*(_7987_model))._field_Elems=jule::append((*_7987_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8348_d))._field_Model; __jule_collection; }));
		}
	_iter_next_219505a8e:;
	}
	_iter_end_219505a8e:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_8027_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_8043_oldMut;
	if ((_7967_variadiced && _7973_more)) {
		_2089905ab_pushErrToken(_self_, (*((*(_self_))._field_args[_79451_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7987_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7987_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2089920d5_checkArgs(_208990017_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20882121c_ParamIns>>* _87930_params) {
	jule::Bool __jule_func_result = false;
	_20899c002_target _8803_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I64 _8847_i = 0LL;;
	if ((((*(_87930_params)).len() > 0LL) && _20881ce3e_IsSelf((*((*(_87930_params))[0LL]))._field_Decl.ptr()))) {
		(_8847_i)++;
	};
	_julec_label_2195162ec:;
	while ((_8847_i < (*(_87930_params)).len())) {
		{
			jule::Ptr<_20882121c_ParamIns> _8918_p = (*(_87930_params))[_8847_i];;
			{
				
				if ((*((*(_8918_p))._field_Decl))._field_Variadic) {
					_case_begin_219517c9e:;
					{
						__jule_func_result=(_208991c94_pushVariadic(_self_, &(_8918_p), _8847_i) && __jule_func_result);
						goto _iter_end_2195164ea;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8847_i)) {
					_case_begin_219517d8c:;
					{
						__jule_func_result=false;
						goto _iter_end_2195164ea;
					}
				}
				else {
					_case_begin_2195178d6:;
					{
						__jule_func_result=(_208991898_push(_self_, &(_8918_p), (*(_self_))._field_args[_8847_i]) && __jule_func_result);
					}
				}
				_match_end_21951785e:;
			};
			(_8847_i)++;
		}
	_iter_next_2195164ea:;
	}
	_iter_end_2195164ea:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8803_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20899236b_checkDynamicTypeAnnotation(_208990017_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219519ac5:;
		if (it != expr_end) {
			jule::Ptr<_2089ccc7a_InsGeneric> _91110_g = *it;
			{
				if ((_91110_g == nullptr)) {
					_20899091e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_219519ac5:;
			++it;
			goto _iter_begin_219519ac5;
		}
		_iter_end_219519ac5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _208992602_check(_208990017_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_20882121c_ParamIns>> _9217_params = _208990ba5_getParams(_self_);;
	__jule_func_result=_208990ee6_checkCounts(_self_, &(_9217_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_2089920d5_checkArgs(_self_, &(_9217_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_20899236b_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _2089934d2_pushErr(_208992e4e_structLitChecker* _self_, jule::Ptr<_208711827_Token> _95923_token, jule::Str _95945_fmt, jule::Slice<jule::Any> _95965_args) {
	_20899ce48_pushErr((*(_self_))._field_e.ptr(), _95923_token, _95945_fmt, _95965_args);
}



inline void _208993845_pushSuggestion(_208992e4e_structLitChecker* _self_, jule::Str _96430_fmt, jule::Slice<jule::Any> _96450_args) {
	_20899d2ab_pushSuggestion((*(_self_))._field_e.ptr(), _96430_fmt, _96450_args);
}



inline void _208993c63_pushMatch(_208992e4e_structLitChecker* _self_, jule::Ptr<_208748496_FieldIns>* _96830_f, jule::Ptr<_20899a9a1_Data>* _96849_d, jule::Ptr<_208711827_Token>* _96864_errorToken) {
	;
	jule::Bool _9743_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_96830_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_20893a3d0_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9743_mutable, false, &((*((*(_96830_f))))._field_Type), _96849_d, _96864_errorToken)) {
		_208935b4a_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_96830_f))))._field_Type), _96849_d, (*(_96864_errorToken)), _2089a0e7e_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_2088129a0_StructArgExpr>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_2088129a0_StructArgExpr>(_2088129a0_StructArgExpr{._field_Token=(*(_96864_errorToken)), ._field_Field=(*(_96830_f)), ._field_Expr=(*(_96849_d))})); };
}



inline void _2089940c6_checkPair(_208992e4e_structLitChecker* _self_, jule::Ptr<_208730d96_FieldExprPair>* _98730_pair, jule::Slice<jule::Ptr<_20872b677_Expr>>* _98762_exprs) {
	jule::Ptr<_208748496_FieldIns> _9897_f = _20874a476_FindField((*(_self_))._field_s.ptr(), (*((*((*(_98730_pair))))._field_Field))._field_Kind);;
	if ((_9897_f == nullptr)) {
		_2089934d2_pushErr(_self_, (*((*(_98730_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_20892ddb8_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9897_f))._field_Decl))._field_Public, (*(*(_9897_f))._field_Decl.alloc)._field_Token)))) {
		_2089934d2_pushErr(_self_, (*((*(_98730_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_208993845_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_21952908a:;
	{
		auto expr = _98762_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219529d05:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _100115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_21952a795:;
						{
							jule::Ptr<_208730d96_FieldExprPair> _10049_dpair = (*(_100115_expr))._field_Kind.unsafe_cast_ptr<_208730d96_FieldExprPair>();;
							{
								
								if (((*(_98730_pair)) == _10049_dpair)) {
									_case_begin_21952c720:;
									{
										goto _iter_end_219529d05;
									}
								}
								else if (((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind == (*(*(_10049_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_21952c797:;
									{
										_2089934d2_pushErr(_self_, (*((*(_98730_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_219529d05;
									}
								}
								_match_end_21952c6a9:;
							};
						}
					}
					_match_end_21952a71d:;
				};
			}
			_iter_next_219529d05:;
			++it;
			goto _iter_begin_219529d05;
		}
		_iter_end_219529d05:;
	};
	jule::Ptr<_2089ce661_Type> _10157_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_10157_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9897_f))._field_Type;
	jule::Ptr<_20899a9a1_Data> _10197_d = _2089bc5d8_evalExpr((*(_self_))._field_e, (*((*(_98730_pair))))._field_Expr);;
	if ((_10197_d == nullptr)) {
		return;;
	};
	_208993c63_pushMatch(_self_, &(_9897_f), &(_10197_d), &((*((*(_98730_pair))))._field_Field));
}



inline jule::Bool _208994417_readyExprs(_208992e4e_structLitChecker* _self_, jule::Slice<jule::Ptr<_20872b677_Expr>>* _102631_exprs) {
	jule::Bool _10277_ok = true;;
	{
		auto expr = _102631_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219532eea:;
		if (it != expr_end) {
			jule::I64 _10288_i = it - expr->begin();
			jule::Ptr<_20872b677_Expr> _102815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_219533c76:;
						{
							jule::Ptr<_2087324a2_KeyValPair> _10319_pair = (*(_102815_expr))._field_Kind.unsafe_cast_ptr<_2087324a2_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10319_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_219535ae1:;
									{
										goto _match_end_2195364a4;
									}
								}
								else {
									_case_begin_21953651a:;
									{
										_2089934d2_pushErr(_self_, (*(_10319_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10277_ok=false;
										goto _iter_next_219532eea;
									}
								}
								_match_end_2195364a4:;
							};
							(*((*(_102631_exprs))[_10288_i]))._field_Kind=jule::Any(jule::new_ptr<_208730d96_FieldExprPair>(_208730d96_FieldExprPair{._field_Field=(*((*(_10319_pair))._field_Key))._field_Token, ._field_Expr=(*_10319_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_219533bee:;
				};
			}
			_iter_next_219532eea:;
			++it;
			_10288_i++;
			goto _iter_begin_219532eea;
		}
		_iter_end_219532eea:;
	};
	return _10277_ok;;
}



inline void _2089946c0_check(_208992e4e_structLitChecker* _self_, jule::Slice<jule::Ptr<_20872b677_Expr>>* _105026_exprs) {
	if (((*(_105026_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_208994417_readyExprs(_self_, _105026_exprs)))) {
		return;;
	};
	jule::Bool _10577_paired = false;;
	{
		auto expr = _105026_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219538cae:;
		if (it != expr_end) {
			jule::I64 _10588_i = it - expr->begin();
			jule::Ptr<_20872b677_Expr> _105815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_105815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_219540821:;
						{
							jule::Ptr<_208730d96_FieldExprPair> _10619_pair = (*(_105815_expr))._field_Kind.unsafe_cast_ptr<_208730d96_FieldExprPair>();;
							if (((_10588_i > 0LL) && (!(_10577_paired)))) {
								_2089934d2_pushErr(_self_, (*(_10619_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10577_paired=true;
							_2089940c6_checkPair(_self_, &(_10619_pair), _105026_exprs);
						}
					}
					else {
						_case_begin_21953aba1:;
						{
							if (_10577_paired) {
								_2089934d2_pushErr(_self_, (*(_105815_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10588_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_2089934d2_pushErr(_self_, (*(_105815_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_219538cae;
							};
							jule::Ptr<_208748496_FieldIns> _10769_field = (*((*(_self_))._field_s))._field_Fields[_10588_i];;
							if ((!(_20892ddb8_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10769_field))._field_Decl))._field_Public, (*(*(_10769_field))._field_Decl.alloc)._field_Token)))) {
								_2089934d2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_208993845_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_2089ce661_Type> _10849_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10849_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*(_10769_field))._field_Type;
							jule::Ptr<_20899a9a1_Data> _10889_d = _2089bc5d8_evalExpr((*(_self_))._field_e, _105815_expr);;
							if ((_10889_d == nullptr)) {
								goto _iter_next_219538cae;
							};
							_208993c63_pushMatch(_self_, &(_10769_field), &(_10889_d), &((*(_105815_expr))._field_Token));
						}
					}
					_match_end_21953ab3a:;
				};
			}
			_iter_next_219538cae:;
			++it;
			_10588_i++;
			goto _iter_begin_219538cae;
		}
		_iter_end_219538cae:;
	};
	if ((!(_10577_paired))) {
		jule::I64 _10994_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _11008_diff = (_10994_n - (*(_105026_exprs)).len());;
		{
			
			if ((_11008_diff <= 0LL)) {
				_case_begin_2195442c5:;
				{
					return;;
				}
			}
			_match_end_2195441a4:;
		};
		_21e64c5b5_Builder _11068_idents = static__21e64ce12_New(32LL);;
		for (; (_11008_diff > 0LL); (_11008_diff)--) {
			{
				({
					auto except = _21e64d594_WriteStr(&_11068_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1108:5"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&_11068_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10994_n - _11008_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1109:5"));
					(except.result);
				});
			}
		_iter_next_219544ddb:;
		}
		_iter_end_219544ddb:;;
		_2089934d2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_21e64e8c5_Buf(&_11068_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _208994c31_rangeChecker_eq(_208994c31_rangeChecker *_self_, _208994c31_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_20894d7de_Var> _20899524d_buildVar(_208994c31_rangeChecker* _self_, jule::Ptr<_20873a28a_VarDecl>* _112625_decl) {
	jule::Ptr<_20894d7de_Var> _11277_v = _208901374_buildVar((*(_112625_decl)));;
	return _11277_v;;
}



inline void _20899544b_setSizeKey(_208994c31_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _208995869_checkRangeExprValidity(_208994c31_rangeChecker* _self_, jule::Ptr<_20899a9a1_Data>* _114543_d, jule::Ptr<_20894d7de_Var>* _114554_key, jule::Ptr<_2089ce661_Type>* _114570_k) {
	jule::Bool _11467__mut = (*((*(_114554_key))))._field_Mutable;;
	if ((_11467__mut && (!(_2089d19a4_Mutable((*(_114570_k)).ptr()))))) {
		_11467__mut=false;
	};
	_20893a3d0_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11467__mut, (*((*(_114554_key))))._field_Reference, &((*((*((*(_114554_key))))._field_TypeSym))._field_Type), _114543_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _208995a67_checkSlice(_208994c31_rangeChecker* _self_) {
	_20899544b_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2089dc96b_Slc> _11647_slc = _2089d37ca_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_11647_slc))._field_Elem});
	_208995869_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11647_slc.alloc)._field_Elem));
}



inline void _208995c65_checkArray(_208994c31_rangeChecker* _self_) {
	_20899544b_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2089dec8c_Arr> _11777_arr = _2089d3544_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_11777_arr))._field_Elem});
	_208995869_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11777_arr.alloc)._field_Elem));
}



inline void _208995e63_checkMapKeyA(_208994c31_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2089de110_Map> _11897_m = _2089d459a_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_11897_m))._field_Key});
	jule::Ptr<_20899a9a1_Data> _11937_d = jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc));;
	(*_11937_d.alloc)._field_Type=(*_11897_m.alloc)._field_Key;
	_208995869_checkRangeExprValidity(_self_, &(_11937_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11897_m.alloc)._field_Key));
}



inline void _208996161_checkMapKeyB(_208994c31_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2089de110_Map> _12047_m = _2089d459a_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_12047_m))._field_Val});
	jule::Ptr<_20899a9a1_Data> _12087_d = jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc));;
	(*_12087_d.alloc)._field_Type=(*_12047_m.alloc)._field_Val;
	_208995869_checkRangeExprValidity(_self_, &(_12087_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_12047_m.alloc)._field_Val));
}



inline void _20899635e_checkMap(_208994c31_rangeChecker* _self_) {
	_208995e63_checkMapKeyA(_self_);
	_208996161_checkMapKeyB(_self_);
}



inline void _20899655c_checkStr(_208994c31_rangeChecker* _self_) {
	_20899544b_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym;
}



inline void _20899675a_checkComptime(_208994c31_rangeChecker* _self_) {
	_20899544b_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20871420e_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_20899524d_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _2089969e1_checkComptimeRange(_208994c31_rangeChecker* _self_) {
	jule::Ptr<_20889e696_comptimeRange> _12437_range = _2089d5da4_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12437_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data6)) {
			_case_begin_219565c86:;
			{
				_20899675a_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_219566094:;
			{
				_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_21956602d:;
	};
}



inline jule::Bool _208996c77_check(_208994c31_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_219569718:;
		}
		else if ((_2089d37ca_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2195691c9:;
			{
				_208995a67_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_2089d3544_Arr((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_219567a57:;
			{
				_208995c65_checkArray(_self_);
				return true;;
			}
		}
		else if ((_2089d459a_Map((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_219567abd:;
			{
				_20899635e_checkMap(_self_);
				return true;;
			}
		}
		else if ((_2089d5da4_comptimeRange((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_219568184:;
			{
				return _2089969e1_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_2195679d0:;
			{
				jule::Ptr<_2089d846c_Prim> _12764_prim = _2089d2774_Prim((*((*(_self_))._field_d))._field_Type);;
				if (((_12764_prim != nullptr) && _2089db937_IsStr(_12764_prim))) {
					_20899655c_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_2195678c0:;
	};
	_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _208997a47_prepareTypes(_20899764b_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_2088235a4_Types((*(_self_))._field_f);
	};
}



inline jule::Bool _208997d88_prepareExprs(_20899764b_retTypeChecker* _self_, jule::Ptr<_20872b677_Expr>* _130633_e) {
	jule::Bool __jule_func_result = false;
	if (((*(_130633_e)) == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_130633_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_21956ee8d:;
			{
				(*(_self_))._field_exprDecls=(*((*((*(_130633_e))))._field_Kind.unsafe_cast_ptr<_20872c26b_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_21956ec6d:;
			{
				(*(_self_))._field_exprDecls=({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_130633_e)); __jule_collection; });
			}
		}
		_match_end_21956ec07:;
	};
	__jule_func_result=true;
	jule::Ptr<_20899c970_eval> _13177_eval = _20893552e_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
	(*(_13177_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2195771d7:;
		if (it != expr_end) {
			jule::I64 _13198_i = it - expr->begin();
			jule::Ptr<_20872b677_Expr> _131915_expr = *it;
			{
				if ((_13198_i < (*(_self_))._field_types.len())) {
					(*_13177_eval.alloc)._field_prefix=(*(_self_))._field_types[_13198_i];
				};
				jule::Ptr<_20899a9a1_Data> _13238_d = _2089bc5d8_evalExpr(_13177_eval, _131915_expr);;
				__jule_func_result=(__jule_func_result && (_13238_d != nullptr));
				if (__jule_func_result) {
					{ jule::Slice<jule::Ptr<_20899a9a1_Data>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push(_13238_d); };
				};
			}
			_iter_next_2195771d7:;
			++it;
			_13198_i++;
			goto _iter_begin_2195771d7;
		}
		_iter_end_2195771d7:;
	};
	return __jule_func_result;;
}



inline void _208998086_checkExprs(_20899764b_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219579bbd:;
		if (it != expr_end) {
			jule::I64 _13368_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _133615_d = *it;
			{
				jule::Ptr<_20872b677_Expr> _13378_expr = (*(_self_))._field_exprDecls[_13368_i];;
				if ((((*(_self_))._field_mutable && (!((*(_133615_d))._field_Mutable))) && _2089d19a4_Mutable((*_133615_d.alloc)._field_Type.ptr()))) {
					_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_13378_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_2089887d5_assignTypeChecker _13428_ac = _2089887d5_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=(*(_self_))._field_types[_13368_i], ._field_d=_133615_d, ._field_errorToken=(*(_13378_expr))._field_Token, ._field_refers=(*((*(_2088d67cc_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_2089897d6_check(&_13428_ac);
			}
			_iter_next_219579bbd:;
			++it;
			_13368_i++;
			goto _iter_begin_219579bbd;
		}
		_iter_end_219579bbd:;
	};
	if (((*(_self_))._field_exprs.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_208817686_TupleExpr>(_208817686_TupleExpr{._field_Datas=(*(_self_))._field_exprs}), &__jule_any_type83);
	} else if (((*(_self_))._field_exprs.len() == 1LL)) {
		(*(_self_))._field_model=(*((*(_self_))._field_exprs[0LL]))._field_Model;
	};
}



inline void _208998284_tryFuncMultiRetForward(_20899764b_retTypeChecker* _self_) {
	jule::Ptr<_2089dd560_Tuple> _13627_tup = _2089d4831_Tup((*((*(_self_))._field_exprs[0LL]))._field_Type.ptr());;
	if (((*(_13627_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_2195826dc;
	};
	(*(_self_))._field_model=(*((*(_self_))._field_exprs[0LL]))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2195830e4:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			{
				jule::Ptr<_2089ce661_Type> _13688_t1 = (*(_self_))._field_types[_13677_i];;
				jule::Ptr<_2089ce661_Type> _13698_t2 = (*(_13627_tup))._field_Types[_13677_i];;
				if ((!(_208936101__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13688_t1), &(_13698_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_2195826dc;
				};
			}
			_iter_next_2195830e4:;
			++it;
			_13677_i++;
			goto _iter_begin_2195830e4;
		}
		_iter_end_2195830e4:;
	};
	return;;
	_julec_label_2195826dc:;
	_208998482_notFitVariables(_self_);
}



inline void _208998482_notFitVariables(_20899764b_retTypeChecker* _self_) {
	_21e64c5b5_Builder _13807_wanted = static__21e64ce12_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219586c0d:;
		if (it != expr_end) {
			jule::I64 _13817_i = it - expr->begin();
			jule::Ptr<_2089ce661_Type> _138110_t = *it;
			{
				({
					auto except = _21e64d594_WriteStr(&_13807_wanted, _2089cea5c_Str(_138110_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1382:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13817_i) > 1LL)) {
					({
						auto except = _21e64d594_WriteStr(&_13807_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1384:5"));
						(except.result);
					});
				};
			}
			_iter_next_219586c0d:;
			++it;
			_13817_i++;
			goto _iter_begin_219586c0d;
		}
		_iter_end_219586c0d:;
	};
	_21e64c5b5_Builder _13877_given = static__21e64ce12_New(32LL);;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219586aba:;
		if (it != expr_end) {
			jule::I64 _13887_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _138810_d = *it;
			{
				({
					auto except = _21e64d594_WriteStr(&_13877_given, _2089cea5c_Str((*(_138810_d))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1389:4"));
					(except.result);
				});
				if ((((*(_self_))._field_exprs.len() - _13887_i) > 1LL)) {
					({
						auto except = _21e64d594_WriteStr(&_13877_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1391:5"));
						(except.result);
					});
				};
			}
			_iter_next_219586aba:;
			++it;
			_13887_i++;
			goto _iter_begin_219586aba;
		}
		_iter_end_219586aba:;
	};
	if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
		_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("not enough variables for return\n       want (@)\n       have (@)", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21e64de24_Str(&_13807_wanted), &__jule_any_type5); (*it++) = jule::Any(_21e64de24_Str(&_13877_given), &__jule_any_type5); __jule_collection; }));
	} else {
		_20892d659_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("too many variables for return\n       want (@)\n       have (@)", 61)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21e64de24_Str(&_13807_wanted), &__jule_any_type5); (*it++) = jule::Any(_21e64de24_Str(&_13877_given), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _2089987c3_check(_20899764b_retTypeChecker* _self_, jule::Ptr<_20872b677_Expr>* _140126_e) {
	_208997a47_prepareTypes(_self_);
	jule::Bool _14037_ok = _208997d88_prepareExprs(_self_, _140126_e);;
	if ((!(_14037_ok))) {
		return false;;
	};
	{
		
		if (((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL)) && _20882053a_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr()))) {
			_case_begin_21958d4a6:;
			{
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL)) && (_2089d4831_Tup((*((*(_self_))._field_exprs[0LL]))._field_Type.ptr()) != nullptr))) {
			_case_begin_21958d64e:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_219591432:;
						{
							_208998284_tryFuncMultiRetForward(_self_);
							return true;;
						}
					}
					_match_end_219591377:;
				};
				goto _case_begin_21958d6b5;
			}
		}
		else if (((*(_self_))._field_exprs.len() != (*(_self_))._field_types.len())) {
			_case_begin_21958d6b5:;
			{
				_208998482_notFitVariables(_self_);
				return false;;
			}
		}
		_match_end_21958d3b8:;
	};
	_208998086_checkExprs(_self_);
	return true;;
}








inline jule::Bool _20899a9a1_Data_eq(_20899a9a1_Data *_self_, _20899a9a1_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _20899adbe_IsNil(_20899a9a1_Data* _self_) {
	return _2089d07d8_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _20899b155_IsVoid(_20899a9a1_Data* _self_) {
	return _2089d0a6e_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _20899b3db_IsConst(_20899a9a1_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _20899b72c_GoodOperand(_20899a9a1_Data* _self_, jule::Ptr<_20899a9a1_Data>* _6228_other) {
	if ((_2089d32ad_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_2089d2774_Prim((*((*(_6228_other))))._field_Type.ptr()) == nullptr) || (!(_2089dbbbd_IsAny(_2089d2774_Prim((*((*(_6228_other))))._field_Type.ptr()).ptr())))) && (_2089d4314_Trait((*((*(_6228_other))))._field_Type.ptr()) == nullptr)) && (!(_2089d07d8_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _20899bb28_Value_eq(_20899bb28_Value *_self_, _20899bb28_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _20899c002_target_eq(_20899c002_target *_self_, _20899c002_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _20899c970_eval_eq(_20899c970_eval *_self_, _20899c970_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_20899c002_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _20899ce48_pushErr(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_20892d659_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _20899d2ab_pushSuggestion(_20899c970_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_20892d9bc_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _20899d4a9_allowBuiltin(_20899c970_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _20899d6a7_disallowBuiltin(_20899c970_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _20899d93d_isUnsafe(_20899c970_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _20899dbc4_isGlobal(_20899c970_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4)) {
			_case_begin_2195e9be9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2195ea0a1:;
			{
				return false;;
			}
		}
		_match_end_2195e9e08:;
	};
}



inline jule::Bool _20899e015_applyNumericPrefix(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_20899b3db_IsConst((*(_12939_d)).ptr())))) || (_2089d2774_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_2089d846c_Prim> _1363_prim = _2089d2774_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_20889ce8b_IsFloat(_2089d87e1_Str(_1363_prim.ptr()))) {
			_case_begin_2195eca21:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_2089ce661_Type>((*(*(_self_))._field_prefix.alloc));
				_20880927c_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _208808402_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_20889c573_IsSigInt(_2089d87e1_Str(_1363_prim.ptr()))) {
			_case_begin_2195eca87:;
			{
				if ((!(_208985c33_sigAssignable(_2089d87e1_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_2089ce661_Type>((*(*(_self_))._field_prefix.alloc));
				_2088086aa_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _208807dd5_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_20889c881_IsUnsigInt(_2089d87e1_Str(_1363_prim))) {
			_case_begin_2195ecaed:;
			{
				if ((!(_2089860eb_unsigAssignable(_2089d87e1_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_2089ce661_Type>((*(*(_self_))._field_prefix.alloc));
				_208808963_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _20880816b_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		_match_end_2195ec68b:;
	};
	return true;;
}



inline jule::Ptr<_20899a9a1_Data> _20899e356_litStr(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_208712c13_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_2089840a5_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_2089843e6_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_208799195_Const> _1717_constant = static__2088064cc_NewStr(_1657_s);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a53c02_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _20899e697_litRune(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _18220_l) {
	jule::I32 _1833_r = _208968b17_ToRune((*((*(_18220_l))))._field_Value);;
	jule::Ptr<_20899a9a1_Data> _1847_data = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_1833_r))});;
	if ((_1833_r <= 255LL)) {
		(*(_1847_data))._field_Type=(*((*(_208a56c38_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym))._field_Type;
	} else {
		(*(_1847_data))._field_Type=(*((*(_208a56c38_findBuiltinTypeAlias(jule::Str::lit("rune", 4))))._field_TypeSym))._field_Type;
	};
	(*(_1847_data))._field_Model=jule::Any(jule::new_ptr<_20881acc7_RuneExpr>(_20881acc7_RuneExpr{._field_Code=_1833_r}), &__jule_any_type84);
	(*_1847_data.alloc)._field_Mutable=true;
	(*_1847_data.alloc)._field_IsRune=true;
	(*_1847_data.alloc)._field_untyped=true;
	return _1847_data;;
}



inline jule::Ptr<_20899a9a1_Data> _20899e9d8_litFloat(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _20121_l) {
	jule::F64 _2023_f = ({
		auto except = _21ec946bd_ParseFloat((*((*(_20121_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_208799195_Const> _2037_constant = static__208806796_NewF64(_2023_f);;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56683_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2037_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2037_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _20899ed29_litInt(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _21323_l) {
	;
	jule::Str _2167_lit = (*((*(_21323_l))))._field_Value;;
	jule::I64 _2177_base = 0LL;;
	{
		
		if (_220c5c157_HasPrefix(_2167_lit, jule::Str::lit("0x", 2))) {
			_case_begin_21960e23b:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=16LLU;
			}
		}
		else if (_220c5c157_HasPrefix(_2167_lit, jule::Str::lit("0b", 2))) {
			_case_begin_21960e2a2:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=2LLU;
			}
		}
		else if (_220c5c157_HasPrefix(_2167_lit, jule::Str::lit("0o", 2))) {
			_case_begin_21960e14d:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=8LLU;
			}
		}
		else if (((_2167_lit[0LL] == '0') && (_2167_lit.len() > 1LL))) {
			_case_begin_21960e1b4:;
			{
				(_2167_lit).mut_slice(1LL);;
				_2177_base=8LLU;
			}
		}
		else {
			_case_begin_21960dcda:;
			{
				_2177_base=10LLU;
			}
		}
		_match_end_21960dc41:;
	};
	jule::Ptr<_20899a9a1_Data> _2377_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	jule::Bool _2397_ok = true;;
	jule::I64 _2403_sig = ({
		auto except = _21ec8d013_ParseInt(_2167_lit, _2177_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2397_ok=false;

			0LL;
		});
	});;
	if (_2397_ok) {
		(*_2377_d.alloc)._field_Constant=static__208805bc4_NewI64(_2403_sig);
		(*_2377_d.alloc)._field_Type=_208a548d4_primInt;
	} else {
		jule::U64 _2484_unsig = ({
			auto except = _21ec8ca5c_ParseUint(_2167_lit, _2177_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_20899ce48_pushErr(_self_, (*((*(_21323_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2377_d.alloc)._field_Constant=static__208805e49_NewU64(_2484_unsig);
		(*_2377_d.alloc)._field_Type=_208a5451b_primUint;
	};
	(*_2377_d.alloc)._field_Model=jule::Any((*_2377_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2377_d.alloc)._field_untyped=true;
	if ((!(_20899e015_applyNumericPrefix(_self_, &(_2377_d))))) {
		_2089c64d2_fitBitsize(&(_2377_d));
	};
	return _2377_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a016a_litNum(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr>* _26823_l) {
	{
		
		if (_2087138b2_IsFloat((*((*(_26823_l))))._field_Value)) {
			_case_begin_21940685d:;
			{
				return _20899e9d8_litFloat(_self_, _26823_l);;
			}
		}
		else {
			_case_begin_219406451:;
			{
				return _20899ed29_litInt(_self_, _26823_l);;
			}
		}
		_match_end_219406363:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089a04ab_evalLit(_20899c970_eval* _self_, jule::Ptr<_20872c612_LitExpr> _27723_lit) {
	{
		
		if (_20871297c_IsStr((*(_27723_lit))._field_Value)) {
			_case_begin_219407584:;
			{
				return _20899e356_litStr(_self_, &(_27723_lit));;
			}
		}
		else if (_208712ecc_IsRune((*(_27723_lit))._field_Value)) {
			_case_begin_21940762d:;
			{
				return _20899e697_litRune(_self_, &(_27723_lit));;
			}
		}
		else if (_208713b7b_IsNum((*_27723_lit.alloc)._field_Value)) {
			_case_begin_2194076a5:;
			{
				return _2089a016a_litNum(_self_, &(_27723_lit));;
			}
		}
		else {
			_case_begin_21940709a:;
			{
				return nullptr;;
			}
		}
		_match_end_219406e8a:;
	};
}



inline jule::Any _2089a07ec_findBuiltins(_20899c970_eval* _self_, jule::Str* _29029_ident) {
	if (_208927587_IsPub((*(_29029_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data2)) {
				_case_begin_219409960:;
				{
					jule::Any _2949_def = _2089c62a1_findBuiltinsImport(_29029_ident, (*(_self_))._field_lookup.cast_ptr<_20890d040_ImportInfo>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data2));;
					if ((_2949_def != nullptr)) {
						return _2949_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4)) {
				_case_begin_2194096a7:;
				{
					jule::Any _2999_def = _2089c700a_findBuiltinsSema(_29029_ident, (*(_self_))._field_lookup.cast_ptr<_20892a755_sema>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));;
					if ((_2999_def != nullptr)) {
						return _2999_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
				_case_begin_2194099c6:;
				{
					jule::Any _3049_def = _2089c700a_findBuiltinsSema(_29029_ident, (*((*(_self_))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)))._field_s);;
					if ((_3049_def != nullptr)) {
						return _3049_def;;
					};
				}
			}
			_match_end_2194098a5:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _208a56ebe_findBuiltinDef(_29029_ident);;
}



inline jule::Any _2089a0be8_getDef(_20899c970_eval* _self_, jule::Str* _31723_ident, jule::Bool _31735_binded) {
	jule::Ptr<_20894d7de_Var> _3227_v = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089edc13_FindVar((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3227_v != nullptr)) {
		return jule::Any(_3227_v, &__jule_any_type7);;
	};
	jule::Ptr<_2089cd94b_TypeAlias> _3277_ta = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089ee10e_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3277_ta != nullptr)) {
		return jule::Any(_3277_ta, &__jule_any_type8);;
	};
	if ((!(_31735_binded))) {
		jule::Ptr<_20882c17e_Enum> _3338_enm = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_208a00088_FindEnum((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3338_enm != nullptr)) {
			return jule::Any(_3338_enm, &__jule_any_type12);;
		};
		jule::Ptr<_20882d889_TypeEnum> _3388_tenm = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_208a003c9_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3388_tenm != nullptr)) {
			return jule::Any(_3388_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_20881e2b4_Fn> _3447_f = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089ee906_FindFn((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3447_f != nullptr)) {
		return jule::Any(_3447_f, &__jule_any_type10);;
	};
	jule::Ptr<_208746230_Struct> _3497_s = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089ee50a_FindStruct((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3497_s != nullptr)) {
		return jule::Any(_3497_s, &__jule_any_type9);;
	};
	return _2089a07ec_findBuiltins(_self_, _31723_ident);;
}



inline jule::Ptr<_2088eaeb7_ReferenceStack> _2089a0e7e_getOwnerRefers(_20899c970_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
			_case_begin_219413cbb:;
			{
				return _2088d6a63_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_21941266b:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_219412605:;
	};
	return nullptr;;
}



inline void _2196ddda9_pushReference(_20899c970_eval* _self_, jule::Ptr<_2087490bd_StructIns>* _37537_ref) {
	jule::Ptr<_2088eaeb7_ReferenceStack> _3767_refers = _2089a0e7e_getOwnerRefers(_self_);;
	if (((_3767_refers != nullptr) && (!(_2196e1076_Exist(_3767_refers, (*(_37537_ref))))))) {
		_2088ebd20_Push(_3767_refers, jule::Any((*(_37537_ref)), &__jule_any_type64));
	};
}

inline void _2196e9975_pushReference(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns>* _37537_ref) {
	jule::Ptr<_2088eaeb7_ReferenceStack> _3767_refers = _2089a0e7e_getOwnerRefers(_self_);;
	if (((_3767_refers != nullptr) && (!(_2196ebe1c_Exist(_3767_refers, (*(_37537_ref))))))) {
		_2088ebd20_Push(_3767_refers, jule::Any((*(_37537_ref)), &__jule_any_type65));
	};
}

inline void _219710e97_pushReference(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _37537_ref) {
	jule::Ptr<_2088eaeb7_ReferenceStack> _3767_refers = _2089a0e7e_getOwnerRefers(_self_);;
	if (((_3767_refers != nullptr) && (!(_219713263_Exist(_3767_refers, (*(_37537_ref))))))) {
		_2088ebd20_Push(_3767_refers, jule::Any((*(_37537_ref)), &__jule_any_type7));
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089a1578__evalEnum(_20899c970_eval* _self_, jule::Ptr<_20882c17e_Enum> _38225_enm) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38225_enm, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089a1974_evalEnum(_20899c970_eval* _self_, jule::Ptr<_20882c17e_Enum> _39128_enm, jule::Ptr<_208711827_Token> _39140_errorToken) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39128_enm))._field_Public, (*_39128_enm.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, _39140_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39128_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _2089a1578__evalEnum(_self_, _39128_enm);;
}



inline jule::Ptr<_20899a9a1_Data> _2089a1cb5__evalTypeEnum(_20899c970_eval* _self_, jule::Ptr<_20882d889_TypeEnum> _40029_enm) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_40029_enm, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089a21b1_evalTypeEnum(_20899c970_eval* _self_, jule::Ptr<_20882d889_TypeEnum> _40932_enm, jule::Ptr<_208711827_Token> _40948_errorToken) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40932_enm))._field_Public, (*_40932_enm.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, _40948_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40932_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _2089a1cb5__evalTypeEnum(_self_, _40932_enm);;
}



inline jule::Ptr<_20899a9a1_Data> _2089a2502__evalStruct(_20899c970_eval* _self_, jule::Ptr<_2087490bd_StructIns> _41827_s) {
	jule::Ptr<_20899a9a1_Data> _4197_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41827_s, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41827_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	return _4197_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a28ed_evalStruct(_20899c970_eval* _self_, jule::Ptr<_208746230_Struct> _42930_s, jule::Ptr<_208711827_Token> _42946_errorToken) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42930_s))._field_Public, (*_42930_s.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, _42946_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42930_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_2089a30a2_checkDeprecated(_self_, &((*(_42930_s))._field_Directives), _42946_errorToken);
	jule::Ptr<_2087490bd_StructIns> _4387_ins = _20874664d_instance(_42930_s);;
	if (((*_42930_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_2087490bd_StructIns> _4458_exist = _20874698e_appendInstance(_42930_s, &(_4387_ins));;
		if ((_4458_exist != nullptr)) {
			_4387_ins=_4458_exist;
		} else {
			if ((!(_208946d9d_precheckStructIns((*(_self_))._field_s, &(_4387_ins), _42946_errorToken)))) {
				return nullptr;;
			};
		};
	};
	_2196ddda9_pushReference(_self_, &(_4387_ins));
	return _2089a2502__evalStruct(_self_, _4387_ins);;
}



inline jule::Ptr<_20899a9a1_Data> _2089a2c3e_evalFnIns(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns> _45925_f) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45925_f, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45925_f, &__jule_any_type65), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline void _2089a30a2_checkDeprecated(_20899c970_eval* _self_, jule::Slice<jule::Ptr<_208726760_Directive>>* _46836_directives, jule::Ptr<_208711827_Token> _46867_tok) {
	if (_20899d93d_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_208726760_Directive> _4733_d = _2089c5dd8_findDirective(_46836_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4733_d != nullptr)) {
		if (((*_4733_d.alloc)._field_Args.len() == 0LL)) {
			_20899ce48_pushErr(_self_, _46867_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_20899ce48_pushErr(_self_, _46867_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4733_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089a349d_evalFn(_20899c970_eval* _self_, jule::Ptr<_20881e2b4_Fn> _48426_f, jule::Ptr<_208711827_Token> _48434_errorToken) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48426_f))._field_Public, (*_48426_f.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, _48434_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48426_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_2089a30a2_checkDeprecated(_self_, &((*(_48426_f))._field_Directives), _48434_errorToken);
	jule::Ptr<_208822372_FnIns> _4937_ins = _208820a57_instance(_48426_f);;
	if (((*_48426_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_208822372_FnIns> _5008_exist = _208820d65_appendInstance(_48426_f, &(_4937_ins));;
		if ((_5008_exist != nullptr)) {
			_4937_ins=_5008_exist;
		};
	};
	_2196e9975_pushReference(_self_, &(_4937_ins));
	return _2089a2c3e_evalFnIns(_self_, _4937_ins);;
}



inline void _2089a38bb_pushIllegalCycleError(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _50938_v1, jule::Ptr<_20894d7de_Var>* _50949_v2, _21e64c5b5_Builder* _50964_message) {
	;
	jule::Str _5113_refersTo = _21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50938_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_50949_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5123_buf = _21e64e8c5_Buf(_50964_message);;
	({
		auto except = _21e64d594_WriteStr(_50964_message, _220c5bc8e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:513:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_50964_message, _5113_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:514:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_50964_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:515:3"));
	});
	({
		auto except = _21e64d253_Write(_50964_message, _5123_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:516:3"));
		(except.result);
	});
}



inline jule::Bool _2089a3cb7_checkCrossCycle(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _51932_v, _21e64c5b5_Builder* _51946_message) {
	{
		auto expr = &((*((*(_51932_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2197011b8:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> *_52010_d = it;
			{
				if (((*(_52010_d)) == (*(_self_))._field_owner)) {
					_2089a38bb_pushIllegalCycleError(_self_, _51932_v, _52010_d, _51946_message);
					return false;;
				};
				if ((!(_2089a3cb7_checkCrossCycle(_self_, _52010_d, _51946_message)))) {
					_2089a38bb_pushIllegalCycleError(_self_, _51932_v, _52010_d, _51946_message);
					return false;;
				};
			}
			_iter_next_2197011b8:;
			++it;
			goto _iter_begin_2197011b8;
		}
		_iter_end_2197011b8:;
	};
	return true;;
}



inline jule::Bool _2089a41b3_checkIllegalCycles(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var>* _53639_v, jule::Ptr<_208711827_Token> _53648_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53639_v)))) {
		_20899ce48_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_owner.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21e64c5b5_Builder _5497_message = static__21e64ce12_New(32LL);;
	if ((!(_2089a3cb7_checkCrossCycle(_self_, _53639_v, &(_5497_message))))) {
		jule::Str _5528_errMsg = _21e64de24_Str(&_5497_message);;
		_21e64e122_Clear(&_5497_message);
		_2089a38bb_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53639_v, &(_5497_message));
		_5528_errMsg+=_21e64de24_Str(&_5497_message);
		_20899ce48_pushErr(_self_, _53648_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5528_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*((*(_self_))._field_owner))._field_Depends=jule::append((*(*(_self_))._field_owner.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_53639_v)); __jule_collection; }));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a45ae_evalVar(_20899c970_eval* _self_, jule::Ptr<_20894d7de_Var> _56427_v, jule::Ptr<_208711827_Token> _56436_errorToken) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56427_v))._field_Public, (*_56427_v.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, _56436_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56427_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_2089a30a2_checkDeprecated(_self_, &((*(_56427_v))._field_Directives), _56436_errorToken);
	if (((*_56427_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_219718026;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4)) {
			_case_begin_2197099c9:;
			{
				jule::Bool _5814_ok = _2089a41b3_checkIllegalCycles(_self_, &(_56427_v), _56436_errorToken);;
				if ((!(_5814_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
			_case_begin_219709413:;
			{
				jule::Ptr<_2088d3169_scopeChecker> _5868_s = (*(_self_))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1);;
				jule::Ptr<_2088d3169_scopeChecker> _5878_root = _2088d6546_getRoot(_5868_s);;
				if ((((((*_56427_v.alloc)._field_Scope != nullptr) && (!((*_56427_v.alloc)._field_Constant))) && ((*(_5878_root))._field_captured != nullptr)) && _2089cbc13_isVarCaptured(_5878_root, _5868_s, _56427_v))) {
					_2088d62b0_pushCaptured(_5878_root, &(_56427_v));
				};
				if (((!((*_56427_v.alloc)._field_Reference)) || _20899d93d_isUnsafe(_self_))) {
					goto _match_end_2197097dc;
				};
				while ((((*_5868_s.alloc)._field_owner == nullptr) && ((*_5868_s.alloc)._field_parent != nullptr))) {
					{
						_5868_s=(*(_5868_s))._field_parent;
					}
				_iter_next_21970d637:;
				}
				_iter_end_21970d637:;;
				if (((((*_5868_s.alloc)._field_owner != nullptr) && (*(*(_5868_s))._field_owner.alloc)._field_Anon) && ((*_56427_v.alloc)._field_Scope != (*(*(_5868_s))._field_owner.alloc)._field_Scope))) {
					_20899ce48_pushErr(_self_, _56436_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56427_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_2197097dc:;
	};
	if (((*_56427_v.alloc)._field_Scope == nullptr)) {
		_219710e97_pushReference(_self_, &(_56427_v));
	};
	if (((((!((*_56427_v.alloc)._field_Used)) && (!((*_56427_v.alloc)._field_Binded))) && ((*_56427_v.alloc)._field_Scope == nullptr)) && (((*_56427_v.alloc)._field_Value == nullptr) || ((*((*_56427_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_2088255b7_SymTab> _6208_varfile = _20890a37d_findVarFileInPackage(&((*((*(_self_))._field_s))._field_files), &(_56427_v));;
		jule::Ptr<_2088255b7_SymTab> _6218_file = _20892ce83_getCurrentFile((*(_self_))._field_s);;
		_20892d23b_setCurrentFile((*(_self_))._field_s, _6208_varfile);
		_20894574d_checkVar((*(_self_))._field_s, &(_56427_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4));
		_20892d23b_setCurrentFile((*(_self_))._field_s, _6218_file);
	};
	(*_56427_v.alloc)._field_Used=true;
	if ((((*_56427_v.alloc)._field_TypeSym == nullptr) || ((*((*_56427_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_219718026:;
	jule::Ptr<_20899a9a1_Data> _6407_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=(*((*_56427_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56427_v.alloc)._field_Mutable, ._field_Reference=(*_56427_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56427_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56427_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	if ((((*_56427_v.alloc)._field_Value != nullptr) && ((*(*(_56427_v))._field_Value.alloc)._field_Data != nullptr))) {
		if (((!((*_56427_v.alloc)._field_Binded)) && _2065961a3_IsInitialized(_56427_v))) {
			(*(_6407_d))._field_IsRune=(*(*((*(_56427_v))._field_Value))._field_Data.alloc)._field_IsRune;
		};
		if (((*_56427_v.alloc)._field_Constant && ((*(*((*(_56427_v))._field_Value))._field_Data.alloc)._field_Constant != nullptr))) {
			(*(_6407_d))._field_Constant=jule::new_ptr<_208799195_Const>((*(*((*((*(_56427_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6407_d.alloc)._field_Model=jule::Any((*_6407_d.alloc)._field_Constant, &__jule_any_type15);
			if (_2065966c0_untypedConstant(_56427_v)) {
				_20899e015_applyNumericPrefix(_self_, &(_6407_d));
				(*_6407_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6407_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a49aa_evalTypeAlias(_20899c970_eval* _self_, jule::Ptr<_2089cd94b_TypeAlias> _66433_ta, jule::Ptr<_208711827_Token> _66449_errorToken) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66433_ta))._field_Public, (*_66433_ta.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, _66449_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66433_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66433_ta))._field_Used=true;
	jule::Trait _6737_kind = (*((*((*_66433_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_20899a9a1_Data> _67411_d = nullptr;;
	{
		auto &_match_expr{ _6737_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_219721ccc:;
			{
				_67411_d=_2089a2502__evalStruct(_self_, _6737_kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data3)) {
			_case_begin_2197245e8:;
			{
				_67411_d=_2089a1578__evalEnum(_self_, _6737_kind.cast_ptr<_20882c17e_Enum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data4)) {
			_case_begin_219723e77:;
			{
				_67411_d=_2089a1cb5__evalTypeEnum(_self_, _6737_kind.cast_ptr<_20882d889_TypeEnum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_21972201e:;
			{
				_67411_d=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66433_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});
				(*(_67411_d))._field_Model=jule::Any((*_67411_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		_match_end_219721d98:;
	};
	(*((*(_67411_d))._field_Type))._field_Generic=(*_66433_ta.alloc)._field_Generic;
	return _67411_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a4da6_evalDef(_20899c970_eval* _self_, jule::Any* _71728_def, jule::Ptr<_208711827_Token> _71742_ident) {
	{
		auto &_match_expr{ (*(_71728_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21972719a:;
			{
				return _2089a45ae_evalVar(_self_, (*(_71728_def)).cast_ptr<_20894d7de_Var>(&__jule_any_type7), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_219726ead:;
			{
				return _2089a1974_evalEnum(_self_, (*(_71728_def)).cast_ptr<_20882c17e_Enum>(&__jule_any_type12), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_219727233:;
			{
				return _2089a21b1_evalTypeEnum(_self_, (*(_71728_def)).cast_ptr<_20882d889_TypeEnum>(&__jule_any_type13), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2197272aa:;
			{
				return _2089a28ed_evalStruct(_self_, (*(_71728_def)).cast_ptr<_208746230_Struct>(&__jule_any_type9), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_219727332:;
			{
				jule::Ptr<_20881e2b4_Fn> _7288_f = (*(_71728_def)).cast_ptr<_20881e2b4_Fn>(&__jule_any_type10);;
				if ((!(*(_7288_f))._field_Ident.equal("init", 4))) {
					return _2089a349d_evalFn(_self_, _7288_f, _71742_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2197273a9:;
			{
				return _2089a2c3e_evalFnIns(_self_, (*(_71728_def)).cast_ptr<_208822372_FnIns>(&__jule_any_type65));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_219727431:;
			{
				return _2089a49aa_evalTypeAlias(_self_, (*(_71728_def)).cast_ptr<_2089cd94b_TypeAlias>(&__jule_any_type8), _71742_ident);;
			}
		}
		_match_end_21972709b:;
	};
	_20899ce48_pushErr(_self_, _71742_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_71742_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a51e7_evalIdent(_20899c970_eval* _self_, jule::Ptr<_20872ce92_IdentExpr> _74129_ident) {
	jule::Any _7427_def = _2089a0be8_getDef(_self_, &((*(_74129_ident))._field_Ident), (*_74129_ident.alloc)._field_Binded);;
	return _2089a4da6_evalDef(_self_, &(_7427_def), (*_74129_ident.alloc)._field_Token);;
}



inline jule::Ptr<_20899a9a1_Data> _2089a5538_evalUnary(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872d734_UnaryExpr> _74630_u) {
	_2089bca6c_unaryEval _7477_unary = static__2089bcee0_new(_self_);;
	return _2089be420_eval(&_7477_unary, _74630_u);;
}



inline jule::Ptr<_20899a9a1_Data> _2089a5879_evalVariadic(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872db0d_VariadicExpr> _75133_v) {
	if (((*(_75133_v))._field_Expr == nullptr)) {
		_20899ce48_pushErr(_self_.ptr(), (*_75133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2089ce661_Type> _7577_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7577_prefix;
	});;
	jule::Ptr<_20899a9a1_Data> _7617_d = _2089bc5d8_evalExpr(_self_, (*(_75133_v))._field_Expr);;
	if ((_7617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2089d24dd_Variadicable((*(_7617_d))._field_Type.ptr())))) {
		_20899ce48_pushErr(_self_, (*_75133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_7617_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_2089cb7d4_makeVariadic(&(_7617_d), (*(_2089d37ca_Slc((*(_7617_d))._field_Type.ptr())))._field_Elem);
	return _7617_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a5bba_evalUnsafe(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872c9db_UnsafeExpr> _77331_u) {
	jule::Bool _7743_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_20899a9a1_Data> _7767_d = _2089bc5d8_evalExpr(_self_, (*(_77331_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7743_unsafety;
	return _7767_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089a600b_evalArr(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208732bcd_SliceExpr> _78128_s) {
	jule::Ptr<_2089dec8c_Arr> _7837_pt = _2089d3544_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_2089dec8c_Arr> _7857_arr = jule::new_ptr<_2089dec8c_Arr>(_2089dec8c_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7837_pt))._field_Elem});;
	jule::Bool _7917_filled = false;;
	if (((*(_78128_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_78128_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_21973b753:;
				{
					if (((*((*((*(_78128_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_20872db0d_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_21973b698;
					};
					if ((*_7837_pt.alloc)._field_Auto) {
						_20899ce48_pushErr(_self_, (*_78128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7917_filled=true;
					((*(_78128_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_21973b698:;
		};
	};
	(*(_7857_arr))._field_N=(*(_78128_s))._field_Exprs.len();
	if ((!((*_7837_pt.alloc)._field_Auto))) {
		if (((*_7857_arr.alloc)._field_N > (*_7837_pt.alloc)._field_N)) {
			_20899ce48_pushErr(_self_, (*_78128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7857_arr.alloc)._field_N < (*_7837_pt.alloc)._field_N)) {
			(*_7857_arr.alloc)._field_N=(*_7837_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_208817389_ArrayExpr> _8207_model = jule::new_ptr<_208817389_ArrayExpr>(_208817389_ArrayExpr{._field_Kind=_7857_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7917_filled) {
		(*(_8207_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8207_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_78128_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_2089ce661_Type> _8297_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7857_arr.alloc)._field_Elem;
	{
		auto expr = &((*_78128_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2197435c3:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _83115_elem = *it;
			{
				jule::Ptr<_20899a9a1_Data> _8328_d = _2089bc5d8_evalExpr(_self_, _83115_elem);;
				if ((_8328_d == nullptr)) {
					goto _iter_next_2197435c3;
				};
				;
				if (_20893a3d0_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_7857_arr.alloc)._field_Elem), &(_8328_d), &((*(_83115_elem))._field_Token))) {
					_208935b4a_checkAssignType((*(_self_))._field_s, false, &((*_7857_arr.alloc)._field_Elem), &(_8328_d), (*_83115_elem.alloc)._field_Token, _2089a0e7e_getOwnerRefers(_self_));
				};
				(*(_8207_model))._field_Elems=jule::append((*_8207_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8328_d))._field_Model; __jule_collection; }));
			}
			_iter_next_2197435c3:;
			++it;
			goto _iter_begin_2197435c3;
		}
		_iter_end_2197435c3:;
	};
	(*_self_.alloc)._field_prefix=_8297_prefix;
	if (_7917_filled) {
		(*(_8207_model))._field_Elems=jule::append((*_8207_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7857_arr, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8207_model, &__jule_any_type86), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089a64b2_evalExpSlc(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208732bcd_SliceExpr> _85831_s, jule::Ptr<_2089ce661_Type> _85855_t, jule::Any _85869_first) {
	jule::Ptr<_2089dc96b_Slc> _8597_slc = jule::new_ptr<_2089dc96b_Slc>(_2089dc96b_Slc{._field_Elem=_85855_t});;
	jule::I64 _8637_i = 0LL;;
	jule::Ptr<_208814452_SliceExpr> _8647_model = jule::new_ptr<_208814452_SliceExpr>(_208814452_SliceExpr{._field_ElemType=_85855_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_85831_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_85869_first != nullptr)) {
		(*(_8647_model))._field_Elems=jule::append((*_8647_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _85869_first; __jule_collection; }));
		_8637_i=1LL;
	};
	jule::Ptr<_2089ce661_Type> _8737_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8597_slc))._field_Elem;
	{
		auto expr = (*_85831_s.alloc)._field_Exprs.slice(_8637_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_21974cdd5:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _87515_elem = *it;
			{
				jule::Ptr<_20899a9a1_Data> _8768_d = _2089bc5d8_evalExpr(_self_, _87515_elem);;
				if ((_8768_d != nullptr)) {
					;
					if (_20893a3d0_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8597_slc.alloc)._field_Elem), &(_8768_d), &((*(_87515_elem))._field_Token))) {
						_208935b4a_checkAssignType((*(_self_))._field_s, false, &((*_8597_slc.alloc)._field_Elem), &(_8768_d), (*_87515_elem.alloc)._field_Token, _2089a0e7e_getOwnerRefers(_self_));
					};
					(*(_8647_model))._field_Elems=jule::append((*_8647_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8768_d))._field_Model; __jule_collection; }));
				};
			}
			_iter_next_21974cdd5:;
			++it;
			goto _iter_begin_21974cdd5;
		}
		_iter_end_21974cdd5:;
	};
	(*_self_.alloc)._field_prefix=_8737_prefix;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8597_slc, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8647_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089a6803_evalSliceExpr(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208732bcd_SliceExpr> _89634_s) {
	jule::Ptr<_20899a9a1_Data> __jule_func_result;
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_2089d3544_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_219753e96:;
				{
					__jule_func_result=_2089a600b_evalArr(_self_, _89634_s);
				}
			}
			else if ((_2089d37ca_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_21975402e:;
				{
					jule::Ptr<_2089dc96b_Slc> _9029_pt = _2089d37ca_Slc((*(_self_))._field_prefix);;
					__jule_func_result=_2089a64b2_evalExpSlc(_self_, _89634_s, (*(_9029_pt))._field_Elem, nullptr);
				}
			}
			else {
				_case_begin_219753dec:;
				{
					goto _julec_label_219753a9a;
				}
			}
			_match_end_219753d20:;
		};
		if ((__jule_func_result != nullptr)) {
			jule::Ptr<_2087490bd_StructIns> _9089_strct = _2089d407d_softStruct((*(_self_))._field_prefix);;
			if (((_9089_strct != nullptr) && ((*_9089_strct.alloc)._field_Source != nullptr))) {
				(*__jule_func_result.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9089_strct, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)});
			};
		};
		return __jule_func_result;;
	};
	_julec_label_219753a9a:;
	jule::Ptr<_2089ce661_Type> _9167_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_89634_s))._field_Exprs.len() == 0LL)) {
		_20899ce48_pushErr(_self_, (*_89634_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		__jule_func_result = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20872b677_Expr> _9247_firstExpr = (*(_89634_s))._field_Exprs[0LL];;
	jule::Ptr<_20899a9a1_Data> _9257_firstElem = _2089bc5d8_evalExpr(_self_, _9247_firstExpr);;
	if ((_9257_firstElem == nullptr)) {
		__jule_func_result = nullptr;
		return __jule_func_result;;
	};
	;
	_20893a3d0_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9257_firstElem))._field_Type), &(_9257_firstElem), &((*(_9247_firstExpr))._field_Token));
	__jule_func_result=_2089a64b2_evalExpSlc(_self_, _89634_s, (*_9257_firstElem.alloc)._field_Type, (*_9257_firstElem.alloc)._field_Model);
	(*_self_.alloc)._field_prefix=_9167_prefix;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2089a6bee_checkIntegerIndexingByData(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _94147_d, jule::Ptr<_208711827_Token> _94161_token) {
	jule::Str _9423_errKey = _2089c91b6_checkDataForIntegerIndexing(&((*(_self_))._field_s), _94147_d, &(_94161_token), _2089a0e7e_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9423_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_21975dcd6:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_21975dc09:;
			{
				_20899ce48_pushErr(_self_, _94161_token, _9423_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_94147_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_21975d258:;
			{
				_20899ce48_pushErr(_self_, _94161_token, _9423_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_21975d874:;
	};
	return false;;
}



inline void _2089a711c_indexingPtr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _95432_d, jule::Ptr<_20899a9a1_Data>* _95447_index, jule::Ptr<_20873363a_IndexingExpr>* _95466_i) {
	_2089a6bee_checkIntegerIndexingByData(_self_, _95447_index, (*((*(_95466_i))))._field_Token);
	(*((*(_95432_d))))._field_Lvalue=true;
	jule::Ptr<_2089e0760_Ptr> _9587_ptr = _2089d2c91_Ptr((*((*(_95432_d))))._field_Type.ptr());;
	{
		
		if (_2089e12cc_IsUnsafe(_9587_ptr.ptr())) {
			_case_begin_219761a64:;
			{
				_20899ce48_pushErr(_self_, (*((*(_95466_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_20899d93d_isUnsafe(_self_)))) {
			_case_begin_219761aec:;
			{
				_20899ce48_pushErr(_self_, (*((*(_95466_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_2197619ba:;
	};
	(*((*(_95432_d))))._field_Type=(*(_9587_ptr))._field_Elem;
}



inline void _2089a753a_indexingArr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _97032_d, jule::Ptr<_20899a9a1_Data>* _97047_index, jule::Ptr<_20873363a_IndexingExpr>* _97066_i) {
	jule::Ptr<_2089dec8c_Arr> _9717_arr = _2089d3544_Arr((*((*(_97032_d))))._field_Type.ptr());;
	(*((*(_97032_d))))._field_Type=(*(_9717_arr))._field_Elem;
	_2089a6bee_checkIntegerIndexingByData(_self_, _97047_index, (*((*(_97066_i))))._field_Token);
	(*((*(_97032_d))))._field_Lvalue=true;
	if ((_20899b3db_IsConst((*(_97047_index)).ptr()) && (_208808402_AsF64((*((*(_97047_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9717_arr.alloc)._field_N)))) {
		_20899ce48_pushErr(_self_, (*((*(_97066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _2089a7958_indexingSlc(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _98032_d, jule::Ptr<_20899a9a1_Data>* _98047_index, jule::Ptr<_20873363a_IndexingExpr>* _98066_i) {
	jule::Ptr<_2089dc96b_Slc> _9817_slc = _2089d37ca_Slc((*((*(_98032_d))))._field_Type.ptr());;
	(*((*(_98032_d))))._field_Type=(*(_9817_slc))._field_Elem;
	_2089a6bee_checkIntegerIndexingByData(_self_, _98047_index, (*((*(_98066_i))))._field_Token);
	(*((*(_98032_d))))._field_Lvalue=true;
	if ((!(_20899b3db_IsConst((*(_98047_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_98032_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_2197691a9:;
			{
				jule::Ptr<_208814452_SliceExpr> _9928_m = (*((*(_98032_d))))._field_Model.unsafe_cast_ptr<_208814452_SliceExpr>();;
				jule::F64 _9934_indx = _208808402_AsF64((*((*(_98047_index))))._field_Constant.ptr());;
				if ((_9934_indx >= static_cast<jule::F64>((*(_9928_m))._field_Elems.len()))) {
					_20899ce48_pushErr(_self_, (*((*(_98066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_98032_d))))._field_Model=(*(_9928_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9934_indx))];
					(*((*(_98032_d))))._field_Decl=true;
				};
			}
		}
		_match_end_219769143:;
	};
}



inline void _2089a7d76_indexingMap(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _100332_d, jule::Ptr<_20899a9a1_Data>* _100347_index, jule::Ptr<_20873363a_IndexingExpr>* _100366_i) {
	(*((*(_100332_d))))._field_Lvalue=true;
	if (((*(_100347_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_2089de110_Map> _10087_m = _2089d459a_Map((*((*(_100332_d))))._field_Type.ptr());;
	_2089887d5_assignTypeChecker _10097_atc = _2089887d5_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10087_m))._field_Key, ._field_d=(*(_100347_index)), ._field_errorToken=(*((*(_100366_i))))._field_Token, ._field_refers=_2089a0e7e_getOwnerRefers(_self_)};;
	_2089897d6_check(&_10097_atc);
	(*((*(_100332_d))))._field_Type=(*_10087_m.alloc)._field_Val;
}



inline void _2089a8294_indexingStr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _102032_d, jule::Ptr<_20899a9a1_Data>* _102047_index, jule::Ptr<_20873363a_IndexingExpr>* _102066_i) {
	(*((*(_102032_d))))._field_Type=(*((*(_208a56c38_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym))._field_Type;
	(*((*(_102032_d))))._field_Mutable=false;
	(*((*(_102032_d))))._field_Lvalue=true;
	if (((*(_102047_index)) == nullptr)) {
		return;;
	};
	_2089a6bee_checkIntegerIndexingByData(_self_, _102047_index, (*((*(_102066_i))))._field_Token);
	(*((*(_102032_d))))._field_untyped=_20899b3db_IsConst((*(_102032_d)).ptr());
	if ((!(_20899b3db_IsConst((*(_102047_index)).ptr())))) {
		(*((*(_102032_d))))._field_Constant=nullptr;
		return;;
	};
	if ((*((*(_102032_d))))._field_untyped) {
		jule::I64 _10384_j = _208807dd5_AsI64((*((*(_102047_index))))._field_Constant.ptr());;
		jule::Str _10394_s = _2088078b8_ReadStr((*((*(_102032_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10384_j) >= _10394_s.len())) {
			_20899ce48_pushErr(_self_, (*((*(_102066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_208808963_SetU64((*((*(_102032_d))))._field_Constant, static_cast<jule::U64>(_10394_s[_10384_j]));
		};
	};
}



inline void _2089a86b2_comptimeRange(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _104834_d, jule::Ptr<_20899a9a1_Data>* _104849_index, jule::Ptr<_20873363a_IndexingExpr>* _104868_i) {
	if (((*(_104849_index)) == nullptr)) {
		(*(_104834_d))=nullptr;
		return;;
	};
	if ((!(_2089a6bee_checkIntegerIndexingByData(_self_, _104849_index, (*((*((*(_104868_i))))._field_Index))._field_Token)))) {
		(*(_104834_d))=nullptr;
		return;;
	};
	if ((!(_20899b3db_IsConst((*(_104849_index)).ptr())))) {
		(*(_104834_d))=nullptr;
		_20899ce48_pushErr(_self_, (*((*((*(_104868_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _10633_j = static_cast<jule::I64>(_208807dd5_AsI64((*((*(_104849_index))))._field_Constant.ptr()));;
	jule::Ptr<_20889e696_comptimeRange> _10647_ci = _2089d5da4_comptimeRange((*((*(_104834_d))))._field_Type.ptr());;
	if ((_10633_j >= ((_20889e476_comptimeRangeKindMptrData*)(*(_10647_ci))._field_kind.safe_type())->_20889e322_len((*(_10647_ci))._field_kind.data))) {
		(*(_104834_d))=nullptr;
		_20899ce48_pushErr(_self_, (*((*((*(_104868_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_20889e476_comptimeRangeKindMptrData*)(*(_10647_ci))._field_kind.safe_type())->_20889d80a_index((*(_10647_ci))._field_kind.data, _104834_d, _10633_j);
}



inline void _2089a8ad0_toIndexing(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _107331_d, jule::Ptr<_20899a9a1_Data>* _107346_index, jule::Ptr<_20873363a_IndexingExpr>* _107365_i) {
	{
		
		if ((_2089d2c91_Ptr((*((*(_107331_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_21977ae68:;
			{
				_2089a711c_indexingPtr(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_2089d3544_Arr((*((*(_107331_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_21977b012:;
			{
				_2089a753a_indexingArr(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_2089d37ca_Slc((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_21977b078:;
			{
				_2089a7958_indexingSlc(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_2089d459a_Map((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_21977b0de:;
			{
				_2089a7d76_indexingMap(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_2089d2774_Prim((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_21977b155:;
			{
				jule::Ptr<_2089d846c_Prim> _10884_prim = _2089d2774_Prim((*((*(_107331_d))))._field_Type);;
				{
					
					if (_2089db937_IsStr(_10884_prim.ptr())) {
						_case_begin_219780599:;
						{
							_2089a8294_indexingStr(_self_, _107331_d, _107346_index, _107365_i);
							return;;
						}
					}
					_match_end_2197804de:;
				};
			}
		}
		else if ((_2089d5da4_comptimeRange((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_21977b1cc:;
			{
				_2089a86b2_comptimeRange(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		_match_end_21977ad03:;
	};
	_20899ce48_pushErr(_self_, (*((*(_107365_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_107331_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _2089a9086_pushGenericsFromExprSubIdent(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872e78a_SubIdentExpr>* _110150_sexpr, jule::Slice<jule::Ptr<_208727343_TypeDecl>>* _11028_generics, jule::Ptr<_20872b677_Expr>* _110241_expr) {
	jule::Ptr<_208727c17_SubIdentTypeDecl> _11037_t = jule::new_ptr<_208727c17_SubIdentTypeDecl>(_208727c17_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>>(nullptr)});;
	if ((!(_2089ca23e_pushSubIdentFromExpr(jule::Any((*(_110150_sexpr)), &__jule_any_type87), &(_11037_t))))) {
		_20899ce48_pushErr(_self_.ptr(), (*((*(_110241_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*(_11028_generics)); __jule_push_dest.push(jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Kind=jule::Any(_11037_t, &__jule_any_type88)})); };
	return true;;
}



inline jule::Bool _2089a9482_pushGenericsFromData(jule::Ptr<_20899c970_eval> _self_, jule::Slice<jule::Ptr<_208727343_TypeDecl>>* _111242_generics, jule::Ptr<_20872b677_Expr>* _111275_expr) {
	{
		auto &_match_expr{ (*((*(_111275_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_219786d64:;
			{
				jule::Ptr<_20872d734_UnaryExpr> _11158_u = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_20872d734_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11158_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_21978b51c:;
						{
							jule::Ptr<_208728d6c_PtrTypeDecl> _11189_kind = jule::new_ptr<_208728d6c_PtrTypeDecl>(_208728d6c_PtrTypeDecl{._field_Elem=jule::Ptr<_208727343_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_208727343_TypeDecl>> _11199__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208727343_TypeDecl>(nullptr); __jule_collection; });;
							_2089a9482_pushGenericsFromData(_self_, &(_11199__generics), &((*(_11158_u))._field_Expr));
							(*_11189_kind.alloc)._field_Elem=_11199__generics[0LL];
							{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*((*(_111275_expr))))._field_Token, ._field_Kind=jule::Any(_11189_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_21978b5d8:;
						{
							jule::Ptr<_2087283dd_SptrTypeDecl> _11279_kind = jule::new_ptr<_2087283dd_SptrTypeDecl>(_2087283dd_SptrTypeDecl{._field_Elem=jule::Ptr<_208727343_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_208727343_TypeDecl>> _11289__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208727343_TypeDecl>(nullptr); __jule_collection; });;
							_2089a9482_pushGenericsFromData(_self_, &(_11289__generics), &((*(_11158_u))._field_Expr));
							(*_11279_kind.alloc)._field_Elem=_11289__generics[0LL];
							{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*((*(_111275_expr))))._field_Token, ._field_Kind=jule::Any(_11279_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_2197874e6:;
						{
							_20899ce48_pushErr(_self_, (*_11158_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_219788e10:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_219786dca:;
			{
				{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push((*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_208727343_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_219786e41:;
			{
				jule::Ptr<_20872e78a_SubIdentExpr> _11428_sexpr = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_20872e78a_SubIdentExpr>();;
				return _2089a9086_pushGenericsFromExprSubIdent(_self_, &(_11428_sexpr), _111242_generics, _111275_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_219785c31:;
			{
				jule::Ptr<_20872ce92_IdentExpr> _11458_ident = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_20872ce92_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*_11458_ident.alloc)._field_Token, ._field_Ident=(*_11458_ident.alloc)._field_Ident, ._field_Binded=(*(_11458_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_219785c97:;
			{
				{
					auto expr = &((*((*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_20872c26b_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219794e82:;
					if (it != expr_end) {
						jule::Ptr<_20872b677_Expr> _115416_texpr = *it;
						{
							if ((!(_2089a9482_pushGenericsFromData(_self_, _111242_generics, &(_115416_texpr))))) {
								return false;;
							};
						}
						_iter_next_219794e82:;
						++it;
						goto _iter_begin_219794e82;
					}
					_iter_end_219794e82:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_21978449e:;
			{
				jule::Ptr<_20872e3b1_NamespaceExpr> _11608_ns = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_20872e3b1_NamespaceExpr>();;
				jule::Ptr<_20872794d_IdentTypeDecl> _11618_decl = jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*(_11608_ns))._field_Ident, ._field_Ident=(*((*_11608_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*(_11618_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_2087280e1_NamespaceTypeDecl>(_2087280e1_NamespaceTypeDecl{._field_Namespace=(*_11608_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*_11618_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11618_decl, &__jule_any_type78)})}), &__jule_any_type92)})); };
			}
		}
		else {
			_case_begin_219785bba:;
			{
				_20899ce48_pushErr(_self_, (*((*(_111275_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_219785b54:;
	};
	return true;;
}



inline void _2089a97e5_evalIdentDeclFromIndexing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20899a9a1_Data>* _118247_d, jule::Ptr<_20873363a_IndexingExpr>* _118262_i) {
	jule::Ptr<_2087490bd_StructIns> _11837_s = _2089d3ce7_Struct((*((*(_118247_d))))._field_Type.ptr());;
	if ((_11837_s == nullptr)) {
		_20899ce48_pushErr(_self_.ptr(), (*((*((*(_118262_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_118247_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_118247_d))=nullptr;
		return;;
	};
	jule::Ptr<_20872794d_IdentTypeDecl> _119011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_118262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2197a18ea:;
			{
				jule::Ptr<_20872ce92_IdentExpr> _11938_expr = (*((*((*(_118262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_20872ce92_IdentExpr>();;
				_119011_decl=jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*_11938_expr.alloc)._field_Token, ._field_Ident=(*_11938_expr.alloc)._field_Ident, ._field_Binded=(*(_11938_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_2197a21e2:;
			{
				jule::Ptr<_20872e3b1_NamespaceExpr> _12008_expr = (*((*((*(_118262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_20872e3b1_NamespaceExpr>();;
				_119011_decl=jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*(_12008_expr))._field_Ident, ._field_Ident=(*((*_12008_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_2197a1d4b:;
			{
				_20899ce48_pushErr(_self_.ptr(), (*((*(_118262_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_118247_d))=nullptr;
				return;;
			}
		}
		_match_end_2197a1cd5:;
	};
	if ((!(_2089a9482_pushGenericsFromData(_self_, &((*(_119011_decl))._field_Generics), &((*((*(_118262_i))))._field_Index))))) {
		(*(_118247_d))=nullptr;
		return;;
	};
	_11837_s=({ auto _wrap_copy = _2089b17b9_typeChecker(_self_.ptr()); _2089e6ada_fromStruct(&_wrap_copy, &(_119011_decl), &((*(_11837_s))._field_Decl)); });
	if ((_11837_s == nullptr)) {
		(*(_118247_d))=nullptr;
		return;;
	};
	(*(*((*(_118247_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11837_s, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _2089a9c9b_checkGenericFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208822372_FnIns>* _122536_f, jule::Ptr<_208711827_Token>* _122552_et, jule::Any* _122576_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_208822372_FnIns> _12267_old = (*(_122536_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208946243_checkGenericFn((*(_self_))._field_s, _122536_f, _122552_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_2089c9dba_updateModelToGenericIns(_122576_model, _122536_f);
		_2197aaa8b_updateRefer(_2089a0e7e_getOwnerRefers(_self_.ptr()), &(_12267_old), _122536_f);
	};
	return __jule_func_result;;
}



inline void _2089aa10e_evalFnGenericFromIndexing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20899a9a1_Data>* _124147_d, jule::Ptr<_20873363a_IndexingExpr>* _124162_i) {
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _12427_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208727343_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_2089a9482_pushGenericsFromData(_self_, &(_12427_generics), &((*((*(_124162_i))))._field_Index))))) {
		(*(_124147_d))=nullptr;
		return;;
	};
	jule::Ptr<_208822372_FnIns> _12487_f = _2089d3a61_Fn((*((*(_124147_d))))._field_Type.ptr());;
	jule::I64 _12497_genericsLen = 0LL;;
	if (((*(_12487_f))._field_Decl != nullptr)) {
		_12497_genericsLen=(*(*(_12487_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_20892eb88_checkGenericQuantity((*(_self_))._field_s.ptr(), _12497_genericsLen, _12427_generics.len(), (*((*((*(_124162_i))))._field_Expr))._field_Token)))) {
		(*(_124147_d))=nullptr;
		return;;
	};
	(*(_12487_f))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(0LL, (*((*_12487_f.alloc)._field_Decl))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089ccc7a_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12427_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2197b0c6c:;
		if (it != expr_end) {
			jule::Ptr<_208727343_TypeDecl> _126015_g = *it;
			{
				jule::Ptr<_20899a9a1_Data> _12618_k = _2089b1b0a_evalType(_self_.ptr(), _126015_g);;
				if ((_12618_k == nullptr)) {
					(*(_124147_d))=nullptr;
					return;;
				};
				(*_12487_f.alloc)._field_Generics=jule::append((*_12487_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=(*(_12618_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_2197b0c6c:;
			++it;
			goto _iter_begin_2197b0c6c;
		}
		_iter_end_2197b0c6c:;
	};
	if (_20882383a_IsBuiltin(_12487_f)) {
		return;;
	};
	jule::Bool _12733_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2089a9c9b_checkGenericFn(_self_, &(_12487_f), &((*((*((*(_124162_i))))._field_Expr))._field_Token), &((*((*(_124147_d))))._field_Model));
		_12733_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12733_ok) {
		(*(*((*(_124147_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12487_f, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1);
	} else {
		(*(_124147_d))=nullptr;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089aa450_evalIndexing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20873363a_IndexingExpr> _128133_i) {
	jule::Ptr<_2089ce661_Type> _12827_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12827_prefix;
	});;
	jule::Ptr<_20899a9a1_Data> _12867_d = _2089bb7c4_evalExprKind(_self_, (*((*(_128133_i))._field_Expr))._field_Kind);;
	if ((_12867_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12867_d))._field_Decl) {
		_2089a97e5_evalIdentDeclFromIndexing(_self_, &(_12867_d), &(_128133_i));
		return _12867_d;;
	};
	if ((_2089d3a61_Fn((*(_12867_d))._field_Type.ptr()) != nullptr)) {
		_2089aa10e_evalFnGenericFromIndexing(_self_, &(_12867_d), &(_128133_i));
		return _12867_d;;
	};
	_20899a9a1_Data _13027_oldData = (*(_12867_d));;
	jule::Ptr<_20899a9a1_Data> _13047_index = _2089bc5d8_evalExpr(_self_, (*(_128133_i))._field_Index);;
	if ((_13047_index == nullptr)) {
		return nullptr;;
	};
	_2088e5ab6_makeComptimeRange(&(_12867_d));
	(*(_12867_d))._field_Decl=false;
	_2089a8ad0_toIndexing(_self_, &(_12867_d), &(_13047_index), &(_128133_i));
	if ((_12867_d == nullptr)) {
		return nullptr;;
	};
	if (_20899b3db_IsConst(_12867_d)) {
		(*_12867_d.alloc)._field_Decl=false;
		(*_12867_d.alloc)._field_Model=jule::Any((*_12867_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_12867_d.alloc)._field_Decl) {
		(*_12867_d.alloc)._field_Decl=false;
	} else {
		(*_12867_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208814908_IndexingExpr>(_208814908_IndexingExpr{._field_Token=(*(_128133_i))._field_Token, ._field_Expr=jule::new_ptr<_20899a9a1_Data>(_13027_oldData), ._field_Index=_13047_index}), &__jule_any_type43);
	};
	return _12867_d;;
}



inline __jule_tuple_x_20899a9a1_Data__jule_tuple_x_20899a9a1_Data _2089aa791_evalSlicingExprs(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208733c9a_SlicingExpr>* _134138_s) {
	__jule_tuple_x_20899a9a1_Data__jule_tuple_x_20899a9a1_Data __jule_func_result;
	jule::Ptr<_2089ce661_Type> _13427_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13427_prefix;
	});;
	jule::Ptr<_20899a9a1_Data> _134611_l = nullptr;;
	jule::Ptr<_20899a9a1_Data> _134711_r = nullptr;;
	if (((*((*(_134138_s))))._field_Start != nullptr)) {
		_134611_l=_2089bc5d8_evalExpr(_self_, (*((*(_134138_s))))._field_Start);
		if ((_134611_l != nullptr)) {
			_2089a6bee_checkIntegerIndexingByData(_self_, &(_134611_l), (*((*(_134138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_134611_l=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a548d4_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__208805bc4_NewI64(0LL)});
		(*((*(_134611_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_134611_l.alloc)._field_Model=jule::Any((*_134611_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_134138_s))))._field_To != nullptr)) {
		_134711_r=_2089bc5d8_evalExpr(_self_, (*((*(_134138_s))))._field_To);
		if ((_134711_r != nullptr)) {
			_2089a6bee_checkIntegerIndexingByData(_self_, &(_134711_r), (*((*(_134138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _134611_l;
	__jule_func_result.__jule_result_arg1 = _134711_r;
	return __jule_func_result;;
}



inline void _2089aaa49_slicingArr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _137727_d) {
	jule::Ptr<_2089ce661_Type> _13787_elemType = (*(_2089d3544_Arr((*((*(_137727_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_137727_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dc96b_Slc>(_2089dc96b_Slc{._field_Elem=_13787_elemType}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)});
	(*((*(_137727_d))))._field_Lvalue=false;
	(*((*(_137727_d))))._field_Mutable=((*((*(_137727_d))))._field_Mutable || (!(_2089d19a4_Mutable(_13787_elemType.ptr()))));
}



inline void _2089aae67_slicingStr(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _139227_d, jule::Ptr<_20899a9a1_Data>* _139238_l, jule::Ptr<_20899a9a1_Data>* _139249_r) {
	(*((*(_139227_d))))._field_Lvalue=false;
	(*((*(_139227_d))))._field_Mutable=true;
	if ((!(_20899b3db_IsConst((*(_139227_d)).ptr())))) {
		return;;
	};
	if ((((*(_139238_l)) == nullptr) || ((*(_139249_r)) == nullptr))) {
		(*((*(_139227_d))))._field_Constant=nullptr;
		(*((*(_139227_d))))._field_untyped=false;
		return;;
	};
	if ((_20899b3db_IsConst((*(_139238_l)).ptr()) && _20899b3db_IsConst((*(_139249_r)).ptr()))) {
		jule::I64 _14064_left = _208807dd5_AsI64((*((*(_139238_l))))._field_Constant.ptr());;
		if ((_14064_left < 0LL)) {
			return;;
		};
		jule::Str _14114_s = _2088078b8_ReadStr((*((*(_139227_d))))._field_Constant);;
		jule::I64 _14128_right = static_cast<jule::I64>(0LL);;
		if (((*(_139249_r)) == nullptr)) {
			_14128_right=static_cast<jule::I64>(_14114_s.len());
		} else {
			_14128_right=_208807dd5_AsI64((*((*(_139249_r))))._field_Constant);
		};
		if ((_14064_left > _14128_right)) {
			return;;
		};
		_208808ec4_SetStr((*((*(_139227_d))))._field_Constant, _14114_s.slice(_14064_left, _14128_right));
		(*((*(_139227_d))))._field_Decl=true;
	} else {
		(*((*(_139227_d))))._field_Constant=nullptr;
		(*((*(_139227_d))))._field_untyped=false;
	};
}



inline void _2089ab440_checkSlicing(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _143033_d, jule::Ptr<_20899a9a1_Data>* _143044_l, jule::Ptr<_20899a9a1_Data>* _143055_r, jule::Ptr<_208733c9a_SlicingExpr>* _143066_s) {
	{
		
		if ((_2089d3544_Arr((*((*(_143033_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2197cd11e:;
			{
				_2089aaa49_slicingArr(_self_, _143033_d);
				return;;
			}
		}
		else if ((_2089d37ca_Slc((*((*(_143033_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2197cd1b8:;
			{
				return;;
			}
		}
		else if ((_2089d2774_Prim((*((*(_143033_d))))._field_Type) != nullptr)) {
			_case_begin_2197cd22e:;
			{
				jule::Ptr<_2089d846c_Prim> _14384_prim = _2089d2774_Prim((*((*(_143033_d))))._field_Type);;
				{
					
					if (_2089db937_IsStr(_14384_prim.ptr())) {
						_case_begin_2197d0a06:;
						{
							_2089aae67_slicingStr(_self_, _143033_d, _143044_l, _143055_r);
							return;;
						}
					}
					_match_end_2197d094b:;
				};
			}
		}
		_match_end_2197ccedc:;
	};
	_20899ce48_pushErr(_self_, (*((*(_143066_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_143033_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_20899a9a1_Data> _2089ab781_evalSlicing(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208733c9a_SlicingExpr> _144932_s) {
	jule::Ptr<_20899a9a1_Data> _14507_d = _2089bc5d8_evalExpr(_self_, (*(_144932_s))._field_Expr);;
	if ((_14507_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20899a9a1_Data> _14557_l;
	jule::Ptr<_20899a9a1_Data> _145514_r;
	({
		__jule_tuple_x_20899a9a1_Data__jule_tuple_x_20899a9a1_Data __jule_assign_result = _2089aa791_evalSlicingExprs(_self_, &(_144932_s));
		_14557_l = __jule_assign_result.__jule_result_arg0;
		_145514_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14557_l == nullptr)) {
		return _14507_d;;
	};
	(*(_14507_d))._field_Decl=false;
	_2089ab440_checkSlicing(_self_, &(_14507_d), &(_14557_l), &(_145514_r), &(_144932_s));
	if (_20899b3db_IsConst(_14507_d)) {
		(*_14507_d.alloc)._field_Decl=false;
		(*_14507_d.alloc)._field_Model=jule::Any((*_14507_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_14507_d.alloc)._field_Decl) {
		(*_14507_d.alloc)._field_Decl=false;
	} else {
		jule::Ptr<_208815be5_SlicingExpr> _14738_model = jule::new_ptr<_208815be5_SlicingExpr>(_208815be5_SlicingExpr{._field_Token=(*_144932_s.alloc)._field_Token, ._field_Expr=(*_14507_d.alloc)._field_Model, ._field_Left=(*(_14557_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_145514_r != nullptr)) {
			(*(_14738_model))._field_Right=(*_145514_r.alloc)._field_Model;
		};
		(*_14507_d.alloc)._field_Model=jule::Any(_14738_model, &__jule_any_type93);
	};
	return _14507_d;;
}



inline void _2089abb9e_castPtr(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _148627_t, jule::Ptr<_20899a9a1_Data> _148641_d, jule::Ptr<_208711827_Token> _148651_errorToken) {
	(*(_148641_d))._field_Constant=nullptr;
	(*_148641_d.alloc)._field_untyped=false;
	jule::Ptr<_2089dbe98_Sptr> _14893_sptr = _2089d2a0a_Sptr((*_148641_d.alloc)._field_Type.ptr());;
	if ((_14893_sptr != nullptr)) {
		if ((!(_2089ced9d_Equal((*(_2089d2c91_Ptr(_148627_t.ptr())))._field_Elem, (*_14893_sptr.alloc)._field_Elem)))) {
			_20899ce48_pushErr(_self_, _148651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_148641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_148627_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_20899d93d_isUnsafe(_self_)))) {
		_20899ce48_pushErr(_self_, _148651_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2089d846c_Prim> _15023_prim = _2089d2774_Prim((*(_148641_d))._field_Type);;
	if (((_2089d2c91_Ptr((*(_148641_d))._field_Type) == nullptr) && ((_15023_prim == nullptr) || (!(_20889cb4a_IsInt(_2089d87e1_Str(_15023_prim.ptr()))))))) {
		_20899ce48_pushErr(_self_, _148651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_148641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_148627_t.ptr()), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _2089ac0bc_castStruct(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _150830_t, jule::Ptr<_20899a9a1_Data> _150844_d, jule::Ptr<_208711827_Token> _150854_errorToken) {
	(*(_150844_d))._field_Constant=nullptr;
	(*_150844_d.alloc)._field_untyped=false;
	jule::Ptr<_2088299c8_Trait> _15117_tr = _2089d4314_Trait((*_150844_d.alloc)._field_Type.ptr());;
	if ((_15117_tr == nullptr)) {
		_20899ce48_pushErr(_self_, _150854_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_150844_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_150830_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_2087490bd_StructIns> _15177_s = _2089d3ce7_Struct(_150830_t.ptr());;
	_2196ddda9_pushReference(_self_, &(_15177_s));
	if ((!(_20874785d_IsImplements((*(_15177_s))._field_Decl.ptr(), _15117_tr)))) {
		_20899ce48_pushErr(_self_, _150854_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_150844_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_150830_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _2089ac4da_castRef(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _152527_t, jule::Ptr<_20899a9a1_Data> _152541_d, jule::Ptr<_208711827_Token> _152551_errorToken) {
	(*(_152541_d))._field_Constant=nullptr;
	(*_152541_d.alloc)._field_untyped=false;
	jule::Ptr<_2089dbe98_Sptr> _15287_sptr = _2089d2a0a_Sptr(_152527_t.ptr());;
	jule::Ptr<_2089e0760_Ptr> _15307_ptr = _2089d2c91_Ptr((*_152541_d.alloc)._field_Type.ptr());;
	if (((_15307_ptr != nullptr) && _2089ced9d_Equal((*(_15287_sptr))._field_Elem, (*_15307_ptr.alloc)._field_Elem))) {
		if ((!(_20899d93d_isUnsafe(_self_)))) {
			_20899ce48_pushErr(_self_, _152551_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_2089d3ce7_Struct((*(_15287_sptr))._field_Elem.ptr()) != nullptr)) {
		_2089ac0bc_castStruct(_self_, (*_15287_sptr.alloc)._field_Elem, _152541_d, _152551_errorToken);
		return;;
	};
	_20899ce48_pushErr(_self_, _152551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_152541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_152527_t), &__jule_any_type5); __jule_collection; }));
}



inline void _2089ac908_castSlc(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _154827_t, jule::Ptr<_20899a9a1_Data> _154841_d, jule::Ptr<_208711827_Token> _154851_errorToken) {
	jule::Ptr<_208799195_Const> _15493_c = (*(_154841_d))._field_Constant;;
	(*_154841_d.alloc)._field_Constant=nullptr;
	(*_154841_d.alloc)._field_untyped=false;
	if ((_2089d3027_Enum((*_154841_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_2089d2774_Prim((*((*(_2089d3027_Enum((*(_154841_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_2089db937_IsStr(_2089d2774_Prim((*((*(_2089d3027_Enum((*(_154841_d))._field_Type)))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
			_20899ce48_pushErr(_self_, _154851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_154841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_154827_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_2089d2774_Prim((*_154841_d.alloc)._field_Type.ptr()) == nullptr) || (!(_2089db937_IsStr(_2089d2774_Prim((*_154841_d.alloc)._field_Type.ptr()).ptr()))))) {
		_20899ce48_pushErr(_self_, _154851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*_154841_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_154827_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_154827_t=(*(_2089d37ca_Slc(_154827_t.ptr())))._field_Elem;
	jule::Ptr<_2089d846c_Prim> _15643_prim = _2089d2774_Prim(_154827_t);;
	if (((_15643_prim == nullptr) || ((!(_2089d9d97_IsU8(_15643_prim.ptr()))) && (!(_2089d987a_IsI32(_15643_prim)))))) {
		_20899ce48_pushErr(_self_, _154851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*_154841_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_154827_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15493_c != nullptr)) {
		{
			
			if (_2089d9d97_IsU8(_15643_prim.ptr())) {
				_case_begin_219805d4a:;
				{
					jule::Str _15745_s = _2088078b8_ReadStr(_15493_c);;
					jule::Ptr<_208814452_SliceExpr> _15759_model = jule::new_ptr<_208814452_SliceExpr>(_208814452_SliceExpr{._field_ElemType=_154827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15745_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15745_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2198070d2:;
						if (it != expr_end) {
							jule::U8 *_157912_b = it;
							{
								jule::Ptr<_208799195_Const> _158010_bc = static__208805e49_NewU64(static_cast<jule::U64>((*(_157912_b))));;
								(*(_158010_bc))._field_Kind=(*_15643_prim.alloc)._field_Kind;
								(*(_15759_model))._field_Elems=jule::append((*_15759_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_158010_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_2198070d2:;
							++it;
							goto _iter_begin_2198070d2;
						}
						_iter_end_2198070d2:;
					};
					(*_154841_d.alloc)._field_Model=jule::Any(_15759_model, &__jule_any_type80);
					(*_154841_d.alloc)._field_Decl=true;
				}
			}
			else if (_2089d987a_IsI32(_15643_prim.ptr())) {
				_case_begin_219805de4:;
				{
					jule::Slice<jule::I32> _15875_runes = __jule_strToRunes(_2088078b8_ReadStr(_15493_c));;
					jule::Ptr<_208814452_SliceExpr> _15889_model = jule::new_ptr<_208814452_SliceExpr>(_208814452_SliceExpr{._field_ElemType=_154827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15875_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15875_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21980a1a1:;
						if (it != expr_end) {
							jule::I32 *_159212_r = it;
							{
								jule::Ptr<_208799195_Const> _159310_rc = static__208805bc4_NewI64(static_cast<jule::I64>((*(_159212_r))));;
								(*(_159310_rc))._field_Kind=(*_15643_prim.alloc)._field_Kind;
								(*(_15889_model))._field_Elems=jule::append((*_15889_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_159310_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_21980a1a1:;
							++it;
							goto _iter_begin_21980a1a1;
						}
						_iter_end_21980a1a1:;
					};
					(*_154841_d.alloc)._field_Model=jule::Any(_15889_model, &__jule_any_type80);
					(*_154841_d.alloc)._field_Decl=true;
				}
			}
			_match_end_219805c5c:;
		};
	};
}



inline void _2089acd26_castBool(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _160328_t, jule::Ptr<_20899a9a1_Data> _160342_d, jule::Ptr<_208711827_Token> _160352_errorToken) {
	jule::Ptr<_2089d846c_Prim> _16043_prim = _2089d2774_Prim((*(_160342_d))._field_Type.ptr());;
	if (((_16043_prim == nullptr) || (!(_2089db6a1_IsBool(_16043_prim.ptr()))))) {
		_20899ce48_pushErr(_self_, _160352_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_160328_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_160342_d))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _2089ad244_castStr(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _161027_t, jule::Ptr<_20899a9a1_Data> _161041_d, jule::Ptr<_208711827_Token> _161051_errorToken) {
	if ((_2089d3027_Enum((*(_161041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_20882c17e_Enum> _16128_e = _2089d3027_Enum((*(_161041_d))._field_Type);;
		if (((_2089d2774_Prim((*((*(_16128_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _2089db937_IsStr(_2089d2774_Prim((*((*(_16128_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_208799195_Const> _16183_c = (*(_161041_d))._field_Constant;;
	(*_161041_d.alloc)._field_Constant=nullptr;
	(*_161041_d.alloc)._field_untyped=false;
	jule::Ptr<_2089d846c_Prim> _16217_prim = _2089d2774_Prim((*_161041_d.alloc)._field_Type.ptr());;
	if ((_16217_prim != nullptr)) {
		if (_2089db937_IsStr(_16217_prim)) {
			return;;
		};
		if (((!(_2089d9d97_IsU8(_16217_prim))) && (!(_2089d987a_IsI32(_16217_prim))))) {
			_20899ce48_pushErr(_self_, _161051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_161027_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_161041_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_16183_c != nullptr)) {
			{
				
				if (_2089d9d97_IsU8(_16217_prim)) {
					_case_begin_219816520:;
					{
						(*_161041_d.alloc)._field_Constant=static__2088064cc_NewStr(__jule_strFromByte(static_cast<jule::U8>(_20880816b_AsU64(_16183_c))));
						(*_161041_d.alloc)._field_Model=jule::Any((*_161041_d.alloc)._field_Constant, &__jule_any_type15);
						(*_161041_d.alloc)._field_Decl=true;
					}
				}
				else if (_2089d987a_IsI32(_16217_prim)) {
					_case_begin_2198165b9:;
					{
						(*_161041_d.alloc)._field_Constant=static__2088064cc_NewStr(__jule_strFromRune(static_cast<jule::I32>(_208807dd5_AsI64(_16183_c))));
						(*_161041_d.alloc)._field_Model=jule::Any((*_161041_d.alloc)._field_Constant, &__jule_any_type15);
						(*_161041_d.alloc)._field_Decl=true;
					}
				}
				_match_end_2198163ee:;
			};
		};
		return;;
	};
	jule::Ptr<_2089dc96b_Slc> _16467_s = _2089d37ca_Slc((*(_161041_d))._field_Type);;
	if ((_16467_s == nullptr)) {
		_20899ce48_pushErr(_self_, _161051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_161027_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_161041_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_161027_t=(*(_16467_s))._field_Elem;
	_16217_prim=_2089d2774_Prim(_161027_t.ptr());
	if (((_16217_prim == nullptr) || ((!(_2089d9d97_IsU8(_16217_prim.ptr()))) && (!(_2089d987a_IsI32(_16217_prim)))))) {
		_20899ce48_pushErr(_self_, _161051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_161027_t), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_161041_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _2089ad662_castInt(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _166027_t, jule::Ptr<_20899a9a1_Data> _166041_d, jule::Ptr<_208711827_Token> _166051_errorToken) {
	if (_20899b3db_IsConst(_166041_d.ptr())) {
		jule::Ptr<_2089d846c_Prim> _16624_prim = _2089d2774_Prim(_166027_t.ptr());;
		{
			
			if (_20889c573_IsSigInt((*(_16624_prim))._field_Kind)) {
				_case_begin_21981e171:;
				{
					_2088086aa_SetI64((*_166041_d.alloc)._field_Constant.ptr(), _208807dd5_AsI64((*(_166041_d))._field_Constant));
				}
			}
			else if (_20889c881_IsUnsigInt((*(_16624_prim))._field_Kind)) {
				_case_begin_21981e21a:;
				{
					_208808963_SetU64((*_166041_d.alloc)._field_Constant.ptr(), _20880816b_AsU64((*(_166041_d))._field_Constant));
				}
			}
			_match_end_21981e0d8:;
		};
	} else {
		(*(_166041_d))._field_Constant=nullptr;
		(*_166041_d.alloc)._field_untyped=false;
	};
	if ((_2089d3027_Enum((*(_166041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_20882c17e_Enum> _16758_e = _2089d3027_Enum((*(_166041_d))._field_Type);;
		if (_20889d222_IsNum(_2089d87e1_Str(_2089d2774_Prim((*((*(_16758_e))._field_TypeSym))._field_Type.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_2089d2a0a_Sptr((*(_166041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_2089d846c_Prim> _16824_prim = _2089d2774_Prim(_166027_t.ptr());;
		if ((!(_2089db41a_IsUintptr(_16824_prim.ptr())))) {
			_20899ce48_pushErr(_self_, _166051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_166041_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_166027_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_2089d2c91_Ptr((*(_166041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_2089d846c_Prim> _16894_prim = _2089d2774_Prim(_166027_t.ptr());;
		if (_2089db41a_IsUintptr(_16894_prim.ptr())) {
		} else if ((!(_20899d93d_isUnsafe(_self_)))) {
			_20899ce48_pushErr(_self_, _166051_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_2089d846c_Prim> _16983_prim = _2089d2774_Prim((*(_166041_d))._field_Type.ptr());;
	if (((_16983_prim != nullptr) && _20889d222_IsNum(_2089d87e1_Str(_16983_prim)))) {
		return;;
	};
	_20899ce48_pushErr(_self_, _166051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_166041_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_166027_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _2089ada80_castNum(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _170627_t, jule::Ptr<_20899a9a1_Data> _170641_d, jule::Ptr<_208711827_Token> _170651_errorToken) {
	if (_20899b3db_IsConst(_170641_d.ptr())) {
		jule::Ptr<_2089d846c_Prim> _17084_prim = _2089d2774_Prim(_170627_t.ptr());;
		{
			
			if (_20889ce8b_IsFloat((*(_17084_prim))._field_Kind)) {
				_case_begin_21982a864:;
				{
					_20880927c_SetF64((*_170641_d.alloc)._field_Constant.ptr(), _208808402_AsF64((*(_170641_d))._field_Constant));
				}
			}
			else if (_20889c573_IsSigInt((*(_17084_prim))._field_Kind)) {
				_case_begin_21982a90d:;
				{
					_2088086aa_SetI64((*_170641_d.alloc)._field_Constant.ptr(), _208807dd5_AsI64((*(_170641_d))._field_Constant));
				}
			}
			else if (_20889c881_IsUnsigInt((*_17084_prim.alloc)._field_Kind)) {
				_case_begin_21982a974:;
				{
					_208808963_SetU64((*(_170641_d))._field_Constant, _20880816b_AsU64((*(_170641_d))._field_Constant));
				}
			}
			_match_end_21982a787:;
		};
	} else {
		(*(_170641_d))._field_Constant=nullptr;
		(*_170641_d.alloc)._field_untyped=false;
	};
	if ((_2089d3027_Enum((*(_170641_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_20882c17e_Enum> _17238_e = _2089d3027_Enum((*(_170641_d))._field_Type);;
		if (_20889d222_IsNum(_2089d87e1_Str(_2089d2774_Prim((*((*(_17238_e))._field_TypeSym))._field_Type.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2089d846c_Prim> _17293_prim = _2089d2774_Prim((*(_170641_d))._field_Type.ptr());;
	if (((_17293_prim != nullptr) && _20889d222_IsNum(_2089d87e1_Str(_17293_prim)))) {
		return;;
	};
	_20899ce48_pushErr(_self_, _170651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_170641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_170627_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _2089ade9d_castPrim(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _173728_t, jule::Ptr<_20899a9a1_Data> _173742_d, jule::Ptr<_208711827_Token> _173752_errorToken) {
	jule::Ptr<_2089d846c_Prim> _17383_prim = _2089d2774_Prim(_173728_t.ptr());;
	{
		
		if (_2089dbbbd_IsAny(_17383_prim.ptr())) {
			_case_begin_2198341db:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1741:4"));;
			}
		}
		else if (_2089db937_IsStr(_17383_prim.ptr())) {
			_case_begin_219833d89:;
			{
				_2089ad244_castStr(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else if (_2089db6a1_IsBool(_17383_prim)) {
			_case_begin_219833e00:;
			{
				_2089acd26_castBool(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else if (_20889cb4a_IsInt(_2089d87e1_Str(_17383_prim))) {
			_case_begin_219833e66:;
			{
				_2089ad662_castInt(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else if (_20889d222_IsNum(_2089d87e1_Str(_17383_prim))) {
			_case_begin_219833ecc:;
			{
				_2089ada80_castNum(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else {
			_case_begin_219833d23:;
			{
				_20899ce48_pushErr(_self_, _173752_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_173728_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_219833c9b:;
	};
}



inline void _2089ae311_castConstant(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type>* _175533_t, jule::Ptr<_20899a9a1_Data>* _175548_d) {
	if ((((*(_175548_d)) == nullptr) || (!(_20899b3db_IsConst((*(_175548_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_2089d846c_Prim> _17593_prim = _2089d2774_Prim((*(_175533_t)).ptr());;
	_2089c9bde_castConstByType(&((*(_17593_prim))._field_Kind), _175548_d);
	(*((*(_175548_d))))._field_Model=jule::Any((*((*(_175548_d))))._field_Constant, &__jule_any_type15);
}



inline void _2089ae72e_castTypeEnum(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type>* _176433_t, jule::Ptr<_20899a9a1_Data>* _176448_d, jule::Ptr<_208711827_Token>* _176463_errorToken) {
	jule::I64 _17653_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_2089365a7_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_176448_d))))._field_Type), _176433_t, _176463_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17653_n);;
		_20899ce48_pushErr(_self_, (*(_176463_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_176448_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_176433_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_176448_d))))._field_Constant=nullptr;
	(*((*(_176448_d))))._field_untyped=false;
}



inline void _2089aeb4c_castTypeEnumT(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type>* _177434_t, jule::Ptr<_20899a9a1_Data>* _177449_d, jule::Ptr<_208711827_Token>* _177464_errorToken) {
	jule::I64 _17753_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_2089365a7_checkTypeCompatibility((*(_self_))._field_s, _177434_t, &((*((*(_177449_d))))._field_Type), _177464_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17753_n);;
		_20899ce48_pushErr(_self_, (*(_177464_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_177449_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_177434_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_177449_d))))._field_Constant=nullptr;
	(*((*(_177449_d))))._field_untyped=false;
}



inline jule::Ptr<_20899a9a1_Data> _2089b0103_evalCastByTypeNData(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _178439_t, jule::Ptr<_20899a9a1_Data> _178453_d, jule::Ptr<_208711827_Token> _178467_errorToken) {
	if (((_178453_d != nullptr) && (*_178453_d.alloc)._field_Decl)) {
		_20899ce48_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_2089d1487_deepActualEqual((*(_178453_d))._field_Type, _178439_t)))) {
		{
			
			if (_20899adbe_IsNil(_178453_d)) {
				_case_begin_219847760:;
				{
					if ((!(_2089d1ec1_NilCompatible(_178439_t.ptr())))) {
						_20899ce48_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_178439_t), &__jule_any_type5); __jule_collection; }));
					};
					(*_178453_d.alloc)._field_Constant=nullptr;
					(*_178453_d.alloc)._field_untyped=false;
				}
			}
			else if (((_2089d2774_Prim((*(_178453_d))._field_Type) != nullptr) && _2089dbbbd_IsAny(_2089d2774_Prim((*(_178453_d))._field_Type).ptr()))) {
				_case_begin_2198474c9:;
				{
					if ((_2089d32ad_TypeEnum(_178439_t.ptr()) != nullptr)) {
						_20899ce48_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
					};
					(*_178453_d.alloc)._field_Constant=nullptr;
					(*_178453_d.alloc)._field_untyped=false;
				}
			}
			else if (((_2089d2774_Prim(_178439_t) != nullptr) && _2089dbbbd_IsAny(_2089d2774_Prim(_178439_t).ptr()))) {
				_case_begin_219847540:;
				{
					(*_178453_d.alloc)._field_Constant=nullptr;
					(*_178453_d.alloc)._field_untyped=false;
				}
			}
			else if ((_2089d32ad_TypeEnum((*(_178453_d))._field_Type) != nullptr)) {
				_case_begin_2198475a6:;
				{
					_2089ae72e_castTypeEnum(_self_, &(_178439_t), &(_178453_d), &(_178467_errorToken));
				}
			}
			else if ((_2089d32ad_TypeEnum(_178439_t) != nullptr)) {
				_case_begin_21984761c:;
				{
					_2089aeb4c_castTypeEnumT(_self_, &(_178439_t), &(_178453_d), &(_178467_errorToken));
				}
			}
			else if ((_2089d2c91_Ptr(_178439_t) != nullptr)) {
				_case_begin_219847683:;
				{
					_2089abb9e_castPtr(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_2089d2a0a_Sptr(_178439_t) != nullptr)) {
				_case_begin_2198483dc:;
				{
					_2089ac4da_castRef(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_2089d37ca_Slc(_178439_t) != nullptr)) {
				_case_begin_219848453:;
				{
					_2089ac908_castSlc(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_2089d3ce7_Struct(_178439_t) != nullptr)) {
				_case_begin_2198484b9:;
				{
					_2089ac0bc_castStruct(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_2089d2774_Prim(_178439_t) != nullptr)) {
				_case_begin_219848530:;
				{
					_2089ade9d_castPrim(_self_, _178439_t, _178453_d, _178467_errorToken);
					_2089ae311_castConstant(_self_, &(_178439_t), &(_178453_d));
				}
			}
			else {
				_case_begin_219847397:;
				{
					_20899ce48_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str(_178439_t), &__jule_any_type5); __jule_collection; }));
					_178453_d=nullptr;
				}
			}
			_match_end_2198472ba:;
		};
	};
	if ((_178453_d == nullptr)) {
		return nullptr;;
	};
	if ((_2089d0552_Binded(_178439_t.ptr()) || _2089d0552_Binded((*(_178453_d))._field_Type.ptr()))) {
		if ((!(_20899d93d_isUnsafe(_self_)))) {
			_20899ce48_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*(_178453_d))._field_Mutable=((*_178453_d.alloc)._field_Mutable || (!(_2089d19a4_Mutable((*_178453_d.alloc)._field_Type.ptr()))));
	if (((!((*_178453_d.alloc)._field_Decl)) && ((_2089d3027_Enum((*_178453_d.alloc)._field_Type.ptr()) == nullptr) || (!(_2089ced9d_Equal((*((*(_2089d3027_Enum((*_178453_d.alloc)._field_Type.ptr())))._field_TypeSym))._field_Type, _178439_t)))))) {
		_2089c89bd_applyCastKind(&((*(_self_))._field_s), &(_178453_d), &(_178439_t), &(_178467_errorToken), _2089a0e7e_getOwnerRefers(_self_));
		(*((*(_178453_d))._field_Model.cast_ptr<_2088136c6_CastingExpr>(&__jule_any_type94)))._field_Token=_178467_errorToken;
	} else {
		(*_178453_d.alloc)._field_Type=_178439_t;
	};
	(*_178453_d.alloc)._field_Decl=false;
	(*_178453_d.alloc)._field_Lvalue=false;
	(*_178453_d.alloc)._field_untyped=false;
	if (_20899b3db_IsConst(_178453_d)) {
		(*((*_178453_d.alloc)._field_Constant))._field_Kind=(*(_2089d2774_Prim(_178439_t.ptr())))._field_Kind;
	};
	return _178453_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b05a9_evalCastT(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2089ce661_Type>* _187331_t, jule::Ptr<_20872b677_Expr>* _187346_e, jule::Ptr<_208711827_Token>* _187366_et) {
	jule::Ptr<_2089ce661_Type> _18747_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18747_prefix;
	});;
	if ((_2089d37ca_Slc((*(_187331_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_187346_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_21985ad28:;
				{
					(*_self_.alloc)._field_prefix=(*(_187331_t));
				}
			}
			_match_end_21985aca1:;
		};
	};
	jule::Ptr<_20899a9a1_Data> _18837_d = _2089bc5d8_evalExpr(_self_, (*(_187346_e)));;
	if (((_18837_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18837_d;;
	};
	return _2089b0103_evalCastByTypeNData(_self_, (*(_187331_t)), _18837_d, (*(_187366_et)));;
}



inline jule::Ptr<_20899a9a1_Data> _2089b08ea_evalCast(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872ded7_CastExpr> _189029_c) {
	jule::Ptr<_2089d7a65_TypeSym> _18917_t = _2088ec87b_buildType((*(_189029_c))._field_Kind);;
	jule::Bool _18923_ok = _20893374c_checkTypeSym((*(_self_))._field_s, &(_18917_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18923_ok))) {
		return nullptr;;
	};
	return _2089b05a9_evalCastT(_self_, &((*(_18917_t))._field_Type), &((*_189029_c.alloc)._field_Expr), &((*((*_189029_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_20899a9a1_Data> _2089b0c3b_evalNamespace(_20899c970_eval* _self_, jule::Ptr<_20872e3b1_NamespaceExpr> _189933_s) {
	jule::Ptr<_20890d040_ImportInfo> _19007_imp = _2089cc087_findNamespace((*(_self_))._field_lookup, (*((*(_189933_s))._field_Namespace))._field_Kind);;
	if ((_19007_imp == nullptr)) {
		_20899ce48_pushErr(_self_, (*_189933_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_189933_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19067_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19007_imp, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data2);
	;
	_20899d6a7_disallowBuiltin(_self_);
	jule::Any _19117_def = _2089a0be8_getDef(_self_, &((*((*_189933_s.alloc)._field_Ident))._field_Kind), false);;
	_20899d4a9_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19067_lookup;
	jule::Ptr<_20899a9a1_Data> _19147_d = _2089a4da6_evalDef(_self_, &(_19117_def), (*_189933_s.alloc)._field_Ident);;
	return _19147_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b11e2_evalStructLitExplicit(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087490bd_StructIns> _191842_s, jule::Slice<jule::Ptr<_20872b677_Expr>> _19197_exprs, jule::Ptr<_208711827_Token> _191932_errorToken) {
	jule::Bool _19203_ok = _20892eb88_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_191842_s))._field_Decl))._field_Generics.len(), (*_191842_s.alloc)._field_Generics.len(), _191932_errorToken);;
	if ((!(_19203_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_191842_s.alloc)._field_Decl))) {
		_20899ce48_pushErr(_self_, _191932_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_191842_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_2196ddda9_pushReference(_self_, &(_191842_s));
	_2089a30a2_checkDeprecated(_self_, &((*(*(_191842_s))._field_Decl.alloc)._field_Directives), _191932_errorToken);
	_208992e4e_structLitChecker _19337_slc = _208992e4e_structLitChecker{._field_e=_self_, ._field_errorToken=_191932_errorToken, ._field_s=_191842_s, ._field_args=jule::Slice<jule::Ptr<_2088129a0_StructArgExpr>>(nullptr)};;
	_2089946c0_check(&_19337_slc, &(_19197_exprs));
	jule::Ptr<_20899a9a1_Data> _19407_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_191842_s, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)}), ._field_Mutable=(*(_self_))._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_208812d46_StructLitExpr>(_208812d46_StructLitExpr{._field_Strct=_191842_s, ._field_Args=_19337_slc._field_args}), &__jule_any_type96), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	return _19407_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b1533_evalStructLit(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087316c1_StructLit> _195334_lit) {
	jule::Ptr<_2089d7a65_TypeSym> _19547_t = _2088ec87b_buildType((*(_195334_lit))._field_Kind);;
	jule::Bool _19553_ok = _20893374c_checkTypeSym((*(_self_))._field_s, &(_19547_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19553_ok))) {
		return nullptr;;
	};
	jule::Ptr<_2087490bd_StructIns> _19607_s = _2089d3ce7_Struct((*(_19547_t))._field_Type.ptr());;
	if ((_19607_s == nullptr)) {
		if ((_2089d2a0a_Sptr((*(_19547_t))._field_Type) != nullptr)) {
			_19607_s=_2089d3ce7_Struct((*(_2089d2a0a_Sptr((*(_19547_t))._field_Type)))._field_Elem.ptr());
			if ((_19607_s != nullptr)) {
				goto _julec_label_219872559;
			};
		};
		_20899ce48_pushErr(_self_, (*((*_195334_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_219872559:;
	jule::Ptr<_20899a9a1_Data> _19737_d = _2089b11e2_evalStructLitExplicit(_self_, _19607_s, (*_195334_lit.alloc)._field_Exprs, (*((*_195334_lit.alloc)._field_Kind))._field_Token);;
	{
		auto &_match_expr{ (*((*(_19547_t))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_219873637:;
			{
				jule::Ptr<_208812d46_StructLitExpr> _19768_model = (*(_19737_d))._field_Model.cast_ptr<_208812d46_StructLitExpr>(&__jule_any_type96);;
				_2089c6812_makeStructLitAlloc(&(_19737_d), &(_19768_model));
			}
		}
		_match_end_2198735b0:;
	};
	if ((_19737_d != nullptr)) {
		jule::Ptr<_2087490bd_StructIns> _19818_strct = _2089d407d_softStruct((*(_19547_t))._field_Type);;
		if (((_19818_strct != nullptr) && ((*_19818_strct.alloc)._field_Source != nullptr))) {
			(*((*_19737_d.alloc)._field_Model.cast_ptr<_208812d46_StructLitExpr>(&__jule_any_type96)))._field_Strct=_19818_strct;
			(*_19737_d.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_19818_strct, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)});
		};
	};
	return _19737_d;;
}



inline _2089e2751_typeChecker _2089b17b9_typeChecker(_20899c970_eval* _self_) {
	return _2089324e8_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_20899a9a1_Data> _2089b1b0a_evalType(_20899c970_eval* _self_, jule::Ptr<_208727343_TypeDecl> _199528_t) {
	jule::Ptr<_2089d7a65_TypeSym> _19967_tk = _2088ec87b_buildType(_199528_t);;
	jule::Bool _19973_ok = _20893374c_checkTypeSym((*(_self_))._field_s, &(_19967_tk), (*(_self_))._field_lookup);;
	if ((!(_19973_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=(*(_19967_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19967_tk.alloc)._field_Type, &__jule_any_type85), ._field_Decl=true, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline void _2089b1e6d_callTypeFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr>* _200832_fc, jule::Ptr<_20899a9a1_Data>* _200859_d) {
	if (((*((*(_200832_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr(_self_.ptr(), (*((*(_200832_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_200832_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr(_self_.ptr(), (*((*((*(_200832_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_200859_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_200832_fc))))._field_IsCo) {
		_20899ce48_pushErr(_self_, (*((*(_200832_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_200859_d))=nullptr;
		return;;
	} else if (((*((*(_200832_fc))))._field_Exception != nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_200832_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_200859_d))=nullptr;
		return;;
	};
	if (((*((*(_200832_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_20872b677_Expr> _20248_arg = (*((*(_200832_fc))))._field_Args[0LL];;
		(*(_200859_d))=_2089b05a9_evalCastT(_self_, &((*((*(_200859_d))))._field_Type), &(_20248_arg), &((*(_20248_arg))._field_Token));
		return;;
	};
	if (((*(_200859_d)) != nullptr)) {
		(*((*(_200859_d))))._field_Decl=false;
	};
}



inline void _2089b22d1_callBuiltinFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr>* _203435_fc, jule::Ptr<_20899a9a1_Data>* _203462_d) {
	if ((!(_208730758_Unhandled((*(_203435_fc)).ptr())))) {
		_20899ce48_pushErr(_self_.ptr(), (*((*(_203435_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_203462_d))=(*(_2089d3a61_Fn((*((*(_203462_d))))._field_Type.ptr())))._field_caller(&(_self_), _203435_fc, _203462_d);
	if (((*(_203462_d)) == nullptr)) {
		return;;
	};
	(*((*(_203462_d))))._field_Mutable=true;
}



inline void _2089b2644_checkFnOfConcurrentCall(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns>* _204640_f, jule::Ptr<_208711827_Token> _204651_errorToken) {
	if (_20899d93d_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_204640_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219883548:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> *_205010_p = it;
			{
				if (_20881ce3e_IsSelf((*((*(_205010_p))))._field_Decl.ptr())) {
					if ((!(_20881d1c5_IsRef((*((*(_205010_p))))._field_Decl)))) {
						_20899ce48_pushErr(_self_, _204651_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_205010_p))))._field_Decl))._field_Reference) {
					_20899ce48_pushErr(_self_, _204651_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_219883548:;
			++it;
			goto _iter_begin_219883548;
		}
		_iter_end_219883548:;
	};
}



inline void _2089b2a62_processExceptionalHandler(_20899c970_eval* _self_, jule::Ptr<_208822372_FnIns>* _206546_f, jule::Ptr<_2087303a1_FnCallExpr>* _206562_fc, jule::Ptr<_20899a9a1_Data>* _206589_d) {
	jule::Bool _20663_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_20881e76a_IsVoid((*((*(_206546_f))))._field_Decl.ptr()))));;
	jule::Ptr<_2088d3169_scopeChecker> _206711_csc = nullptr;;
	jule::Ptr<_2088ca969_Scope> _206811_ch = nullptr;;
	jule::Ptr<_208814078_FnCallExpr> _20707_model = (*((*(_206589_d))))._field_Model.cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30);;
	jule::Ptr<_2088d3169_scopeChecker> _20747_sc = (*(_self_))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1);;
	_206711_csc=_2088e54bc_newChildChecker(_20747_sc);
	if (_20663_resultNeeded) {
		(*(_206711_csc))._field_result=jule::new_ptr<_2088d2179_result>(_2088d2179_result{._field_func=(*(_206546_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_206811_ch=_2088d8823_getChild(_20747_sc);
	(*((*((*(_206562_fc))))._field_Exception))._field_Parent=(*_20747_sc.alloc)._field_tree;
	(*((*(_206711_csc))._field_table))._field_Vars=jule::append((*(*(_206711_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2089c6b86_buildErrorVar(&(_206811_ch), _206562_fc); __jule_collection; }));
	_2088d8c41_checkChildSsc(_20747_sc, &((*((*(_206562_fc))))._field_Exception), &(_206811_ch), &(_206711_csc));
	(*(_20707_model))._field_Assigned=_20663_resultNeeded;
	(*_20707_model.alloc)._field_Except=_206811_ch;
	if ((_20663_resultNeeded && ((*(_206711_csc))._field_result != nullptr))) {
		_20899ce48_pushErr(_self_, (*((*(_206562_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _2089b2dc5_callFn(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr>* _209228_fc, jule::Ptr<_20899a9a1_Data>* _209255_d) {
	jule::Ptr<_208822372_FnIns> _20937_f = _2089d3a61_Fn((*((*(_209255_d))))._field_Type.ptr());;
	if (_20882383a_IsBuiltin(_20937_f.ptr())) {
		_2089b22d1_callBuiltinFn(_self_, _209228_fc, _209255_d);
		return;;
	};
	if (((!(_20881ea01_IsMethod((*(_20937_f))._field_Decl.ptr()))) && _2089eb8c0_hasDirective(&((*(*(_20937_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_20899ce48_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_209255_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_209255_d))))._field_Mutable)) && _20881ea01_IsMethod((*(_20937_f))._field_Decl.ptr())) && (!((*(*(_20937_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20937_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*(_self_))._field_target._field_mutable) {
			_20899ce48_pushErr(_self_, (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_208812d46_StructLitExpr> _21135_lit = _2089cad66_isLitBased(&((*((*(_209255_d))))._field_Model));;
			if ((_21135_lit == nullptr)) {
				_20899ce48_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_208992965_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_21135_lit));
			};
		};
	} else if (((!(_20899d93d_isUnsafe(_self_.ptr()))) && (*((*(_20937_f))._field_Decl))._field_Unsafety)) {
		_20899ce48_pushErr(_self_, (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21257_dynamicAnnotation = ((((*((*(_20937_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_20937_f.alloc)._field_Generics.len() == 0LL)) && ((*_20937_f.alloc)._field_Params.len() > 0LL));;
	if (_21257_dynamicAnnotation) {
		(*_20937_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc((*(*(_20937_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20937_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089ccc7a_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20937_f.alloc)._field_Generics.len() != (*(*(_20937_f))._field_Decl.alloc)._field_Generics.len())) {
		_20892eb88_checkGenericQuantity((*(_self_))._field_s.ptr(), (*(*(_20937_f))._field_Decl.alloc)._field_Generics.len(), (*_20937_f.alloc)._field_Generics.len(), (*((*(_209228_fc))))._field_Token);
		(*(_209255_d))=nullptr;
		return;;
	};
	jule::Ptr<_20892a755_sema> _21347_old = (*(_self_))._field_s;;
	if (((*(*(_20937_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20937_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21347_old != (*_self_.alloc)._field_s)) {
			(*(_21347_old))._field_errors=jule::append((*_21347_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21347_old;
	});;
	_208990017_fnCallArgChecker _21477_fcac = _208990017_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_209228_fc))))._field_Args, ._field_errorToken=(*((*(_209228_fc))))._field_Token, ._field_f=jule::Ptr<_208822372_FnIns>(nullptr), ._field_dynamicAnnotation=_21257_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)};;
	if ((!(_21257_dynamicAnnotation))) {
		if ((!((*_20937_f.alloc)._field_reloaded))) {
			jule::Bool _21565_ok = _2089394bc_reloadFnInsTypes((*(_self_))._field_s, _20937_f);;
			(*_20937_f.alloc)._field_reloaded=true;
			if ((!(_21565_ok))) {
				(*(_209255_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_208822372_FnIns> _21638_existInstance = _208820d65_appendInstance((*(_20937_f))._field_Decl, &(_20937_f));;
		if ((_21638_existInstance != nullptr)) {
			_20937_f=_21638_existInstance;
		};
	} else if ((!(_20893782d_buildFnNonGenericTypes((*(_self_))._field_s, _20937_f, &(_21477_fcac._field_ignored))))) {
		(*(_209255_d))=nullptr;
		return;;
	};
	_21477_fcac._field_f=_20937_f;
	jule::Bool _21747_ok = false;;
	if (((*(*(_20937_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21347_old, (*(_self_))._field_s);
		_21747_ok=_208992602_check(&_21477_fcac);
		std::swap(_21347_old, (*(_self_))._field_s);
	} else {
		_21747_ok=_208992602_check(&_21477_fcac);
	};
	if (_21257_dynamicAnnotation) {
		if ((!(_21747_ok))) {
			(*(_209255_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2089a9c9b_checkGenericFn(_self_, &(_20937_f), &((*((*(_209228_fc))))._field_Token), &((*((*(_209255_d))))._field_Model));
			_21747_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21747_ok))) {
			(*(_209255_d))=nullptr;
			return;;
		};
	};
	jule::Any _21957_callModel = (*((*(_209255_d))))._field_Model;;
	if (_20881e76a_IsVoid((*(_20937_f))._field_Decl)) {
		(*(_209255_d))=_2089c8bcc_buildVoidData();
	} else {
		(*((*(_209255_d))))._field_Type=(*_20937_f.alloc)._field_Result;
		(*((*(_209255_d))))._field_Lvalue=false;
	};
	jule::Ptr<_208814078_FnCallExpr> _22047_model = jule::new_ptr<_208814078_FnCallExpr>(_208814078_FnCallExpr{._field_Token=(*((*(_209228_fc))))._field_Token, ._field_Func=_20937_f, ._field_IsCo=(*((*(_209228_fc))))._field_IsCo, ._field_Expr=_21957_callModel, ._field_Args=_21477_fcac._field_argModels, ._field_Except=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_209255_d))))._field_Model=jule::Any(_22047_model, &__jule_any_type30);
	(*((*(_209255_d))))._field_Mutable=true;
	if ((*(*(_20937_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_209228_fc))))._field_IsCo) {
			_20892d659_pushErr((*(_self_))._field_s.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_20892d9bc_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_208730758_Unhandled((*(_209228_fc)).ptr())) {
				_case_begin_2198a921c:;
				{
					_20899ce48_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_2087309de_Ignored((*(_209228_fc)).ptr())) {
				_case_begin_2198a9519:;
				{
					goto _match_end_2198a7836;
				}
			}
			else {
				_case_begin_2198a78d0:;
				{
					_2089b2a62_processExceptionalHandler(_self_.ptr(), &(_20937_f), _209228_fc, _209255_d);
				}
			}
			_match_end_2198a7836:;
		};
	} else if ((!(_208730758_Unhandled((*(_209228_fc)).ptr())))) {
		_20899ce48_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_209228_fc))))._field_IsCo) {
		(*((*(_22047_model))._field_Func))._field_AsAnon=true;
		(*(*(_22047_model))._field_Func.alloc)._field_CalledCo=true;
		_2089b2644_checkFnOfConcurrentCall(_self_.ptr(), &((*_22047_model.alloc)._field_Func), (*((*(_209228_fc))))._field_Token);
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b3216_evalFnCall(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087303a1_FnCallExpr> _224131_fc) {
	jule::Ptr<_2089ce661_Type> _22427_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22427_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_224131_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2198ae60c:;
			{
				if (((*((*((*(_224131_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _208a5809c_builtinCallerError(&(_self_), &(_224131_fc));;
				};
			}
		}
		_match_end_2198ae585:;
	};
	jule::Ptr<_20899a9a1_Data> _22557_d = _2089bb7c4_evalExprKind(_self_, (*((*(_224131_fc))._field_Expr))._field_Kind);;
	if ((_22557_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22557_d))._field_Decl) {
		_2089b1e6d_callTypeFn(_self_, &(_224131_fc), &(_22557_d));
		return _22557_d;;
	};
	if ((_2089d3a61_Fn((*(_22557_d))._field_Type.ptr()) == nullptr)) {
		_20899ce48_pushErr(_self_, (*_224131_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_2089b2dc5_callFn(_self_, &(_224131_fc), &(_22557_d));
	return _22557_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b3612_evalEnumStatic(_20899c970_eval* _self_, jule::Ptr<_20882c17e_Enum> _227434_enm, jule::Ptr<_208711827_Token> _227450_ident) {
	jule::Ptr<_20882b623_EnumItem> _22757_item = _20882cca6_FindItem(_227434_enm.ptr(), (*(_227450_ident))._field_Kind);;
	if ((_22757_item == nullptr)) {
		_20899ce48_pushErr(_self_, _227450_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_227434_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_227450_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _2089caa9c_evalEnumStatic(&((*(_self_))._field_s), &(_227434_enm), &(_22757_item), &(_227450_ident), _2089a0e7e_getOwnerRefers(_self_));;
}



inline jule::Ptr<_20899a9a1_Data> _2089b3a0d_evalTypeEnumStatic(_20899c970_eval* _self_, jule::Ptr<_20882d889_TypeEnum> _228238_enm, jule::Ptr<_208711827_Token> _228254_ident) {
	jule::Ptr<_20882d2b2_TypeEnumItem> _22837_item = _20882e47d_FindItem(_228238_enm.ptr(), (*(_228254_ident))._field_Kind);;
	if ((_22837_item == nullptr)) {
		_20899ce48_pushErr(_self_, _228254_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_228238_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_228254_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_2089d3027_Enum((*((*(_22837_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_2198b823c:;
			{
				return _2089a1578__evalEnum(_self_, _2089d3027_Enum((*((*(_22837_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_2089d32ad_TypeEnum((*((*(_22837_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_2198b82a3:;
			{
				return _2089a1cb5__evalTypeEnum(_self_, _2089d32ad_TypeEnum((*((*(_22837_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_2089d3ce7_Struct((*((*(_22837_item))._field_TypeSym))._field_Type) != nullptr)) {
			_case_begin_2198b6427:;
			{
				return _2089a2502__evalStruct(_self_, _2089d3ce7_Struct((*((*(_22837_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_2198b63b1:;
			{
				jule::Ptr<_20899a9a1_Data> _22968_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=(*(*(_22837_item))._field_TypeSym.alloc)._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
				(*(_22968_d))._field_Model=jule::Any((*_22968_d.alloc)._field_Type, &__jule_any_type85);
				return _22968_d;;
			}
		}
		_match_end_2198b65ae:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b3e09_evalStructStatic(_20899c970_eval* _self_, jule::Ptr<_2087490bd_StructIns> _230536_s, jule::Ptr<_208711827_Token> _230551_ident) {
	jule::Ptr<_20899a9a1_Data> _23067_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	;
	jule::Ptr<_20881e2b4_Fn> _23107_method = _20874a135_FindMethod(_230536_s.ptr(), (*(_230551_ident))._field_Kind, true);;
	if ((_23107_method != nullptr)) {
		if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23107_method.alloc)._field_Public, (*_23107_method.alloc)._field_Token)))) {
			_20899ce48_pushErr(_self_, _230551_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230551_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_208822372_FnIns> _23178_ins = _208820a57_instance(_23107_method);;
		(*(_23178_ins))._field_Owner=_230536_s;
		_2196e9975_pushReference(_self_, &(_23178_ins));
		(*_23067_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208816eb0_StructStaticIdentExpr>(_208816eb0_StructStaticIdentExpr{._field_Structure=_230536_s, ._field_Expr=(*_23067_d.alloc)._field_Model, ._field_Method=_23178_ins}), &__jule_any_type97);
		(*_23067_d.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23178_ins, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)});
		return _23067_d;;
	};
	jule::Ptr<_20894d7de_Var> _23317_sttc = _20874a7b7_FindStatic(_230536_s, (*_230551_ident.alloc)._field_Kind);;
	if ((_23317_sttc != nullptr)) {
		return _2089a45ae_evalVar(_self_, _23317_sttc, _230551_ident);;
	};
	_20899ce48_pushErr(_self_, _230551_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_230536_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_230551_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b43b0_evalTraitSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _234037_d, jule::Ptr<_2088299c8_Trait> _234051_trt, jule::Ptr<_208711827_Token> _234068_ident) {
	jule::Ptr<_20881e2b4_Fn> _23417_f = _20882a6aa_FindMethod(_234051_trt.ptr(), (*(_234068_ident))._field_Kind);;
	if ((_23417_f == nullptr)) {
		_20899ce48_pushErr(_self_, _234068_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_234051_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_234068_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_208820a57_instance(_23417_f), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)}), ._field_Mutable=(*(_234037_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_208816278_TraitSubIdentExpr>(_208816278_TraitSubIdentExpr{._field_Token=_234068_ident, ._field_Expr=(*_234037_d.alloc)._field_Model, ._field_Method=_23417_f, ._field_Trt=_234051_trt}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089b4921_evalStructSubIdentField(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _236244_d, jule::Ptr<_2087490bd_StructIns>* _236259_s, jule::Ptr<_208711827_Token>* _236279_tok, jule::Ptr<_208748496_FieldIns>* _2362104_f) {
	jule::Ptr<_208816b19_StructSubIdentExpr> _23637_model = jule::new_ptr<_208816b19_StructSubIdentExpr>(_208816b19_StructSubIdentExpr{._field_Token=(*(_236279_tok)), ._field_Expr=jule::new_ptr<_20899a9a1_Data>((*((*(_236244_d))))), ._field_Method=jule::Ptr<_208822372_FnIns>(nullptr), ._field_Field=(*(_2362104_f)), ._field_Owner=(*(_236259_s))});;
	(*((*(_236244_d))))._field_Model=jule::Any(_23637_model, &__jule_any_type99);
	(*((*(_236244_d))))._field_Type=(*((*(_2362104_f))))._field_Type;
	(*((*(_236244_d))))._field_Lvalue=true;
	if (((*((*((*(_2362104_f))))._field_Decl))._field_Mutable && (!((*((*(_236244_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
				_case_begin_2198cb65c:;
				{
					jule::Ptr<_2088d3169_scopeChecker> _23785_scope = _2088d67cc_getHardRoot((*(_self_))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1));;
					(*((*(_236244_d))))._field_Mutable=(((*(_23785_scope))._field_owner != nullptr) && ((*((*_23785_scope.alloc)._field_owner))._field_Owner == (*(_236259_s))));
				}
			}
			_match_end_2198cb5d5:;
		};
	};
	return (*(_236244_d));;
}



inline __jule_tuple_x_20899a9a1_Data__jule_tuple_bool _2089b4dc7_evalStructSubIdentFieldOnly(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _238647_d, jule::Ptr<_2087490bd_StructIns> _238661_s, jule::Ptr<_20872e78a_SubIdentExpr> _238680_si) {
	__jule_tuple_x_20899a9a1_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_208748496_FieldIns> _23877_f = _20874a476_FindField(_238661_s.ptr(), (*((*(_238680_si))._field_Ident))._field_Kind);;
	if ((_23877_f != nullptr)) {
		if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23877_f.alloc)._field_Decl))._field_Public, (*(*(_23877_f))._field_Decl.alloc)._field_Token)))) {
			_20899ce48_pushErr(_self_, (*_238680_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23877_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		__jule_func_result.__jule_result_arg0 = _2089b4921_evalStructSubIdentField(_self_, &(_238647_d), &(_238661_s), &((*_238680_si.alloc)._field_Ident), &(_23877_f));
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b54e3_evalStructSubIdentMethod(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _240045_d, jule::Ptr<_2087490bd_StructIns>* _240060_s, jule::Ptr<_208711827_Token>* _240080_tok, jule::Ptr<_20881e2b4_Fn>* _2400105_m, jule::Bool _2400113_ref) {
	if ((_20881d1c5_IsRef((*((*(_2400105_m))))._field_Params[0LL].ptr()) && (!(_2400113_ref)))) {
		_20899ce48_pushErr(_self_, (*(_240080_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_2089a30a2_checkDeprecated(_self_, &((*((*(_2400105_m))))._field_Directives), (*(_240080_tok)));
	jule::Ptr<_208822372_FnIns> _24077_ins = _208820a57_instance((*(_2400105_m)));;
	(*(_24077_ins))._field_Owner=(*(_240060_s));
	_2196e9975_pushReference(_self_, &(_24077_ins));
	jule::Ptr<_20899a9a1_Data> _24107_model = jule::new_ptr<_20899a9a1_Data>((*((*(_240045_d)))));;
	(*((*(_240045_d))))._field_Model=jule::Any(jule::new_ptr<_208816b19_StructSubIdentExpr>(_208816b19_StructSubIdentExpr{._field_Token=(*(_240080_tok)), ._field_Expr=_24107_model, ._field_Method=_24077_ins, ._field_Field=jule::Ptr<_208748496_FieldIns>(nullptr), ._field_Owner=(*(_240060_s))}), &__jule_any_type99);
	(*((*(_240045_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24077_ins, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)});
	return (*(_240045_d));;
}



inline jule::Ptr<_20899a9a1_Data> _2089b5a54_evalStructSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _242138_d, jule::Ptr<_2087490bd_StructIns> _242152_s, jule::Ptr<_20872e78a_SubIdentExpr> _242171_si, jule::Bool _242195_ref) {
	{
		jule::Ptr<_2087490bd_StructIns> _24238_tempS = _242152_s;;
		if (((*(_242152_s))._field_Source != nullptr)) {
			_24238_tempS=_2089d3ce7_Struct((*(_242152_s))._field_Source);
		};
		if ((_24238_tempS != nullptr)) {
			jule::Ptr<_20899a9a1_Data> _24289_r;
			jule::Bool _242812_found;
			({
				__jule_tuple_x_20899a9a1_Data__jule_tuple_bool __jule_assign_result = _2089b4dc7_evalStructSubIdentFieldOnly(_self_, _242138_d, _24238_tempS, _242171_si);
				_24289_r = __jule_assign_result.__jule_result_arg0;
				_242812_found = __jule_assign_result.__jule_result_arg1;
			});
			if (_242812_found) {
				return _24289_r;;
			};
		};
	};
	;
	jule::Ptr<_20881e2b4_Fn> _24367_m = _20874a135_FindMethod(_242152_s.ptr(), (*((*(_242171_si))._field_Ident))._field_Kind, false);;
	if ((_24367_m == nullptr)) {
		_20899ce48_pushErr(_self_, (*_242171_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_242152_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_242171_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_24367_m))._field_Public, (*_24367_m.alloc)._field_Token)))) {
		_20899ce48_pushErr(_self_, (*_242171_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_24367_m.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_20899d2ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _2089b54e3_evalStructSubIdentMethod(_self_, &(_242138_d), &(_242152_s), &((*_242171_si.alloc)._field_Ident), &(_24367_m), _242195_ref);;
}



inline jule::Ptr<_20899a9a1_Data> _2089b5d95_evalIntTypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _244933_ident) {
	;
	{
		auto &_match_expr{ (*(_244933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2198e1034:;
			{
				jule::Ptr<_208799195_Const> _24538_c = static__208805bc4_NewI64(_20889aab0_MaxI(jule::Str::lit("int", 3)));;
				(*(_24538_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a548d4_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_2198e0709:;
			{
				jule::Ptr<_208799195_Const> _24628_c = static__208805bc4_NewI64(static_cast<jule::I64>(_20889b1ba_Min(jule::Str::lit("int", 3))));;
				(*(_24628_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a548d4_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24628_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24628_c});;
			}
		}
		else {
			_case_begin_2198e00aa:;
			{
				_20899ce48_pushErr(_self_, _244933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_244933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2198e030d:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b61d6_evalUintTypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _247634_ident) {
	;
	{
		auto &_match_expr{ (*(_247634_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2198e5203:;
			{
				jule::Ptr<_208799195_Const> _24808_c = static__208805e49_NewU64(_20889ad79_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24808_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a5451b_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24808_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24808_c});;
			}
		}
		else {
			_case_begin_2198e4279:;
			{
				_20899ce48_pushErr(_self_, _247634_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_247634_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2198e44cc:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b6527_evalI8TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _249432_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249432_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2198e858b:;
			{
				jule::Ptr<_208799195_Const> _25008_c = static__208805bc4_NewI64(127LL);;
				(*(_25008_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a54b26_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25008_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25008_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_2198e7c61:;
			{
				jule::Ptr<_208799195_Const> _25098_c = static__208805bc4_NewI64(-128LL);;
				(*(_25098_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a54b26_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25098_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25098_c});;
			}
		}
		else {
			_case_begin_2198e7678:;
			{
				_20899ce48_pushErr(_self_, _249432_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_249432_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2198e7865:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b6868_evalI16TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _252333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2198ecc66:;
			{
				jule::Ptr<_208799195_Const> _25298_c = static__208805bc4_NewI64(32767LL);;
				(*(_25298_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a54dbd_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25298_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25298_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_2198ec43b:;
			{
				jule::Ptr<_208799195_Const> _25388_c = static__208805bc4_NewI64(-32768LL);;
				(*(_25388_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a54dbd_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25388_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25388_c});;
			}
		}
		else {
			_case_begin_2198ebd53:;
			{
				_20899ce48_pushErr(_self_, _252333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_252333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2198ec040:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b6ba9_evalI32TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _255233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_255233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_219902441:;
			{
				jule::Ptr<_208799195_Const> _25588_c = static__208805bc4_NewI64(2147483647LL);;
				(*(_25588_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a55176_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25588_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25588_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_219901b16:;
			{
				jule::Ptr<_208799195_Const> _25678_c = static__208805bc4_NewI64(-2147483648LL);;
				(*(_25678_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a55176_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25678_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25678_c});;
			}
		}
		else {
			_case_begin_21990152d:;
			{
				_20899ce48_pushErr(_self_, _255233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_255233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_21990171a:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b6eea_evalI64TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _258133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_258133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_219906b1b:;
			{
				jule::Ptr<_208799195_Const> _25878_c = static__208805bc4_NewI64(jule::MAX_I64);;
				(*(_25878_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a5542e_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25878_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25878_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_2199062e1:;
			{
				jule::Ptr<_208799195_Const> _25968_c = static__208805bc4_NewI64(jule::MIN_I64);;
				(*(_25968_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a5542e_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25968_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25968_c});;
			}
		}
		else {
			_case_begin_219905c08:;
			{
				_20899ce48_pushErr(_self_, _258133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219905de5:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b733b_evalU8TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _261032_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261032_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_21990ae3e:;
			{
				jule::Ptr<_208799195_Const> _26158_c = static__208805e49_NewU64(255LLU);;
				(*(_26158_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a556d7_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26158_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26158_c});;
			}
		}
		else {
			_case_begin_219909e71:;
			{
				_20899ce48_pushErr(_self_, _261032_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_261032_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_21990a1a2:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b767c_evalU16TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _262933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_262933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_21990dd43:;
			{
				jule::Ptr<_208799195_Const> _26348_c = static__208805e49_NewU64(65535LLU);;
				(*(_26348_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a55990_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26348_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26348_c});;
			}
		}
		else {
			_case_begin_21990cd75:;
			{
				_20899ce48_pushErr(_self_, _262933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_262933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_21990d0a6:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b79bd_evalU32TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _264833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_264833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_219911c47:;
			{
				jule::Ptr<_208799195_Const> _26538_c = static__208805e49_NewU64(4294967295LLU);;
				(*(_26538_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a55c48_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26538_c});;
			}
		}
		else {
			_case_begin_219910c79:;
			{
				_20899ce48_pushErr(_self_, _264833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_264833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219910eaa:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b7d0e_evalU64TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _266733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_266733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_219914b4b:;
			{
				jule::Ptr<_208799195_Const> _26728_c = static__208805e49_NewU64(jule::MAX_U64);;
				(*(_26728_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56232_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26728_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26728_c});;
			}
		}
		else {
			_case_begin_219913b7d:;
			{
				_20899ce48_pushErr(_self_, _266733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_266733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219913dae:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b8150_evalF32TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _268633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2199182ae:;
			{
				jule::Ptr<_208799195_Const> _26938_c = static__208806796_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26938_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56474_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26938_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26938_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_219918512:;
			{
				jule::Ptr<_208799195_Const> _27028_c = static__208806796_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27028_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56474_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27028_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27028_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_219918578:;
			{
				jule::Ptr<_208799195_Const> _27118_c = static__208806796_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27118_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56474_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27118_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27118_c});;
			}
		}
		else {
			_case_begin_219917203:;
			{
				_20899ce48_pushErr(_self_, _268633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_268633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219917588:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b8491_evalF64TypeStatic(_20899c970_eval* _self_, jule::Ptr<_208711827_Token> _272533_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_272533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_21991deda:;
			{
				jule::Ptr<_208799195_Const> _27328_c = static__208806796_NewF64(jule::MAX_F64);;
				(*(_27328_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56683_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27328_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27328_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_21991e23d:;
			{
				jule::Ptr<_208799195_Const> _27418_c = static__208806796_NewF64(jule::MIN_F64);;
				(*(_27418_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56683_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27418_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27418_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_21991e2a4:;
			{
				jule::Ptr<_208799195_Const> _27508_c = static__208806796_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27508_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=_208a56683_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27508_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27508_c});;
			}
		}
		else {
			_case_begin_21991ce2e:;
			{
				_20899ce48_pushErr(_self_, _272533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_272533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_21991d2b4:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b888c_evalPrimStatic(_20899c970_eval* _self_, jule::Ptr<_2089ce661_Type> _276434_t, jule::Ptr<_208711827_Token> _276444_ident) {
	jule::Ptr<_20899a9a1_Data> __jule_func_result;
	jule::Str _27653_kind = (*(_2089d2774_Prim(_276434_t.ptr())))._field_Kind;;
	{
		auto &_match_expr{ _27653_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_2199244b8:;
			{
				__jule_func_result=_2089b5d95_evalIntTypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_219923be3:;
			{
				__jule_func_result=_2089b61d6_evalUintTypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_21992471b:;
			{
				__jule_func_result=_2089b6527_evalI8TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_219924782:;
			{
				__jule_func_result=_2089b6868_evalI16TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_2199247e8:;
			{
				__jule_func_result=_2089b6ba9_evalI32TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_2199238c4:;
			{
				__jule_func_result=_2089b6eea_evalI64TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_21992394b:;
			{
				__jule_func_result=_2089b733b_evalU8TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_2199239c3:;
			{
				__jule_func_result=_2089b767c_evalU16TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_2199248b4:;
			{
				__jule_func_result=_2089b79bd_evalU32TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_21992492a:;
			{
				__jule_func_result=_2089b7d0e_evalU64TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_219924991:;
			{
				__jule_func_result=_2089b8150_evalF32TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_219924a07:;
			{
				__jule_func_result=_2089b8491_evalF64TypeStatic(_self_, _276444_ident);
			}
		}
		else {
			_case_begin_2199236e8:;
			{
				_20899ce48_pushErr(_self_, _276444_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_27653_kind, &__jule_any_type5); (*it++) = jule::Any((*(_276444_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		_match_end_21992385d:;
	};
	if (((__jule_func_result != nullptr) && (_2089d0d05_ActualKind(_276434_t) != (*_276434_t.alloc)._field_Kind))) {
		(*__jule_func_result.alloc)._field_Type=_276434_t;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b8c88_evalTypeStatic(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _280234_d, jule::Ptr<_20872e78a_SubIdentExpr> _280248_si) {
	{
		
		if ((_2089d2774_Prim((*(_280234_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_21992ad71:;
			{
				return _2089b888c_evalPrimStatic(_self_, (*_280234_d.alloc)._field_Type, (*(_280248_si))._field_Ident);;
			}
		}
		else if ((_2089d3027_Enum((*(_280234_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_21992bc95:;
			{
				return _2089b3612_evalEnumStatic(_self_, _2089d3027_Enum((*(_280234_d))._field_Type), (*(_280248_si))._field_Ident);;
			}
		}
		else if ((_2089d32ad_TypeEnum((*(_280234_d))._field_Type) != nullptr)) {
			_case_begin_21992bd0b:;
			{
				return _2089b3a0d_evalTypeEnumStatic(_self_, _2089d32ad_TypeEnum((*(_280234_d))._field_Type), (*_280248_si.alloc)._field_Ident);;
			}
		}
		else if ((_2089d407d_softStruct((*(_280234_d))._field_Type) != nullptr)) {
			_case_begin_21992bd72:;
			{
				return _2089b3e09_evalStructStatic(_self_, _2089d407d_softStruct((*(_280234_d))._field_Type), (*_280248_si.alloc)._field_Ident);;
			}
		}
		else {
			_case_begin_21992a997:;
			{
				_20899ce48_pushErr(_self_, (*_280248_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_280234_d))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_21992a8ba:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _219933780_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088ae596_comptimeTypeInfo>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088b53c1_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _219937d8e_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a0202_comptimeStructField>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088a1643_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _219617420_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a6648_comptimeEnumField>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088a767c_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _21961ba73_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a945e_comptimeParam>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088aacac_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _219621281_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088a3425_comptimeStatic>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088a4866_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _21962584b_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088b569b_comptimeValue>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088b812c_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _219629e16_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088b9d76_comptimeFile>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088bb6c4_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_20899a9a1_Data> _21962e569_comptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_2088bdc8c_comptimeDecl>* _281854_ct, jule::Ptr<_20899a9a1_Data>* _281874_d, jule::Ptr<_20872e78a_SubIdentExpr>* _281885_si) {
	jule::Ptr<_20899a9a1_Data> _28197_cd = _2088c2ae8_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_20899ce48_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}



inline __jule_tuple_x_20899a9a1_Data__jule_tuple_bool _2089b963a_tryComptimeObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data>* _282643_d, jule::Ptr<_20872e78a_SubIdentExpr> _282657_si) {
	__jule_tuple_x_20899a9a1_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_2089d63c1_comptimeTypeInfo((*((*(_282643_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_219931bce:;
			{
				jule::Ptr<_2088ae596_comptimeTypeInfo> _28298_ct = _2089d63c1_comptimeTypeInfo((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _219933780_comptimeObjSubIdent(_self_, &(_28298_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d50d4_comptimeStructField((*((*(_282643_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2199316c3:;
			{
				jule::Ptr<_2088a0202_comptimeStructField> _28328_ct = _2089d50d4_comptimeStructField((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _219937d8e_comptimeObjSubIdent(_self_, &(_28328_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d5601_comptimeEnumField((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_219931739:;
			{
				jule::Ptr<_2088a6648_comptimeEnumField> _28358_ct = _2089d5601_comptimeEnumField((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _219617420_comptimeObjSubIdent(_self_, &(_28358_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d5b1d_comptimeParam((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_2199317b1:;
			{
				jule::Ptr<_2088a945e_comptimeParam> _28388_ct = _2089d5b1d_comptimeParam((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _21961ba73_comptimeObjSubIdent(_self_, &(_28388_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d68dd_comptimeStatic((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_219931838:;
			{
				jule::Ptr<_2088a3425_comptimeStatic> _28418_ct = _2089d68dd_comptimeStatic((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _219621281_comptimeObjSubIdent(_self_, &(_28418_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d6b74_comptimeValue((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_2199318b0:;
			{
				jule::Ptr<_2088b569b_comptimeValue> _28448_ct = _2089d6b74_comptimeValue((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _21962584b_comptimeObjSubIdent(_self_, &(_28448_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d7427_comptimeFile((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_219931937:;
			{
				jule::Ptr<_2088b9d76_comptimeFile> _28478_ct = _2089d7427_comptimeFile((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _219629e16_comptimeObjSubIdent(_self_, &(_28478_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2089d6e0a_comptimeDecl((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_219931e32:;
			{
				jule::Ptr<_2088bdc8c_comptimeDecl> _28508_ct = _2089d6e0a_comptimeDecl((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _21962e569_comptimeObjSubIdent(_self_, &(_28508_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_21993165c:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_2199315a2:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089b9a36_evalObjSubIdent(_20899c970_eval* _self_, jule::Ptr<_20899a9a1_Data> _285735_d, jule::Ptr<_20872e78a_SubIdentExpr> _285749_si) {
	if (_20871420e_IsIgnoreIdent((*((*(_285749_si))._field_Ident))._field_Kind)) {
		_20899ce48_pushErr(_self_, (*_285749_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_20899a9a1_Data> _28638_compData;
		jule::Bool _286318_ok;
		({
			__jule_tuple_x_20899a9a1_Data__jule_tuple_bool __jule_assign_result = _2089b963a_tryComptimeObjSubIdent(_self_, &(_285735_d), _285749_si);
			_28638_compData = __jule_assign_result.__jule_result_arg0;
			_286318_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_286318_ok) {
			return _28638_compData;;
		};
	};
	jule::Ptr<_2089ce661_Type> _28687_kind = (*(_285735_d))._field_Type;;
	{
		auto &_match_expr{ (*((*(_285735_d))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data28)) {
			_case_begin_219635383:;
			{
				jule::Ptr<_2089e0760_Ptr> _28718_ptr = (*((*_285735_d.alloc)._field_Type))._field_Kind.cast_ptr<_2089e0760_Ptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data28);;
				if (_2089e12cc_IsUnsafe(_28718_ptr.ptr())) {
					goto _match_end_2196352ea;
				};
				if ((!(_20899d93d_isUnsafe(_self_)))) {
					_20899ce48_pushErr(_self_, (*(_285749_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28687_kind=(*(_28718_ptr))._field_Elem;
				_2089cb152_makeImplicitDeref(&(_285735_d), (*(_285749_si))._field_Ident);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_219633eb9:;
			{
				jule::Ptr<_2089dbe98_Sptr> _28818_sptr = (*((*_285735_d.alloc)._field_Type))._field_Kind.cast_ptr<_2089dbe98_Sptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data23);;
				_28687_kind=(*(_28818_sptr))._field_Elem;
				_2089cb152_makeImplicitDeref(&(_285735_d), (*(_285749_si))._field_Ident);
			}
		}
		_match_end_2196352ea:;
	};
	{
		auto &_match_expr{ (*(_28687_kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_2196357b2:;
			{
				jule::Ptr<_2087490bd_StructIns> _28888_s = (*(_28687_kind))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				if ((((*(_28888_s))._field_Source != nullptr) || _2089c769d_isInstancedStruct(_28888_s))) {
					jule::Bool _28909_usedReferenceElem = false;;
					{
						auto &_match_expr{ (*((*(_285735_d))._field_Type))._field_Kind };
						
						if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
							_case_begin_21963a9e8:;
							{
								_28909_usedReferenceElem=true;
							}
						}
						_match_end_21963a971:;
					};
					return _2089b5a54_evalStructSubIdent(_self_, _285735_d, _28888_s, _285749_si, _28909_usedReferenceElem);;
				};
			}
		}
		_match_end_21963574b:;
	};
	if ((_2089d4314_Trait((*(_285735_d))._field_Type.ptr()) != nullptr)) {
		return _2089b43b0_evalTraitSubIdent(_self_, _285735_d, _2089d4314_Trait((*(_285735_d))._field_Type), (*(_285749_si))._field_Ident);;
	};
	_20899ce48_pushErr(_self_, (*(_285749_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_285735_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_20899a9a1_Data> _2089b9d77_evalSubIdent(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872e78a_SubIdentExpr> _290533_si) {
	jule::Ptr<_2089ce661_Type> _29067_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_29067_prefix;
	});;
	jule::Ptr<_20899a9a1_Data> _29097_d = _2089bb7c4_evalExprKind(_self_, (*((*(_290533_si))._field_Expr))._field_Kind);;
	if ((_29097_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_29097_d))._field_Decl) {
		return _2089b8c88_evalTypeStatic(_self_, _29097_d, _290533_si);;
	};
	return _2089b9a36_evalObjSubIdent(_self_, _29097_d, _290533_si);;
}



inline jule::Ptr<_20899a9a1_Data> _2089ba273_evalTupleFunc(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872c26b_TupleExpr> _291934_tup, jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20872b677_Expr>*> _291956_part) {
	jule::Ptr<_2089dd560_Tuple> _29207_tupT = jule::new_ptr<_2089dd560_Tuple>(_2089dd560_Tuple{._field_Types=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)});;
	(*_29207_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(0LL, (*(_291934_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089ce661_Type>(nullptr); __jule_collection; });
	jule::Ptr<_208817686_TupleExpr> _29237_model = jule::new_ptr<_208817686_TupleExpr>(_208817686_TupleExpr{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_20899a9a1_Data>>::alloc(0LL, (*_291934_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20899a9a1_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29277_ok = true;;
	{
		auto expr = &((*_291934_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219643193:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _292815_expr = *it;
			{
				jule::Ptr<_20899a9a1_Data> _29298_d = _291956_part(&(_292815_expr));;
				if ((_29298_d == nullptr)) {
					_29277_ok=false;
					goto _iter_next_219643193;
				};
				(*_29207_tupT.alloc)._field_Types=jule::append((*_29207_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29298_d))._field_Type; __jule_collection; }));
				(*(_29237_model))._field_Datas=jule::append((*_29237_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_20899a9a1_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29298_d; __jule_collection; }));
			}
			_iter_next_219643193:;
			++it;
			goto _iter_begin_219643193;
		}
		_iter_end_219643193:;
	};
	if ((!(_29277_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29207_tupT, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29237_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089ba5b4_evalTuple(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872c26b_TupleExpr> _294830_tup) {
	return _2089ba273_evalTupleFunc(_self_, _294830_tup, jule::__new_closure<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20872b677_Expr>*>((void*)__jule_anon_2196463e9, jule::Ptr<__jule_anon_2196463e9_ctx>::make(__jule_anon_2196463e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2196463e9_ctx_handler));;
}



inline jule::Ptr<_20899a9a1_Data> _2089ba9b0_evalMap(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2089de110_Map> _295428_m, jule::Ptr<_208731b77_BraceLit> _295441_lit) {
	jule::Ptr<_208815662_MapExpr> _29557_model = jule::new_ptr<_208815662_MapExpr>(_208815662_MapExpr{._field_Kind=_295428_m, ._field_Entries=jule::Slice<jule::Ptr<_208815288_KeyValPairExpr>>(nullptr)});;
	{
		auto expr = &((*(_295441_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219647b59:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _295915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_295915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_2196482ec:;
						{
							goto _match_end_2196485d8;
						}
					}
					else {
						_case_begin_21964864e:;
						{
							_20899ce48_pushErr(_self_.ptr(), (*(_295441_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_2196485d8:;
				};
				jule::Ptr<_2087324a2_KeyValPair> _29698_pair = (*(_295915_expr))._field_Kind.cast_ptr<_2087324a2_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_20899a9a1_Data> _29718_key = _2089bc5d8_evalExpr(_self_, (*(_29698_pair))._field_Key);;
				if ((_29718_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_20899a9a1_Data> _29768_val = _2089bc5d8_evalExpr(_self_, (*_29698_pair.alloc)._field_Val);;
				if ((_29768_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_20893a3d0_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_295428_m))._field_Key), &(_29718_key), &((*((*_29698_pair.alloc)._field_Key))._field_Token))) {
					_208935b4a_checkAssignType((*(_self_))._field_s, false, &((*_295428_m.alloc)._field_Key), &(_29718_key), (*(*(_29698_pair))._field_Key.alloc)._field_Token, _2089a0e7e_getOwnerRefers(_self_));
				};
				if (_20893a3d0_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_295428_m))._field_Val), &(_29768_val), &((*((*_29698_pair.alloc)._field_Val))._field_Token))) {
					_208935b4a_checkAssignType((*(_self_))._field_s, false, &((*_295428_m.alloc)._field_Val), &(_29768_val), (*(*(_29698_pair))._field_Val.alloc)._field_Token, _2089a0e7e_getOwnerRefers(_self_));
				};
				(*(_29557_model))._field_Entries=jule::append((*_29557_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_208815288_KeyValPairExpr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_208815288_KeyValPairExpr>(_208815288_KeyValPairExpr{._field_Key=(*(_29718_key))._field_Model, ._field_Val=(*(_29768_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_219647b59:;
			++it;
			goto _iter_begin_219647b59;
		}
		_iter_end_219647b59:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_295428_m, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29557_model, &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089bad01_evalBraceLit(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_208731b77_BraceLit> _300233_lit) {
	jule::Ptr<_20899a9a1_Data> __jule_func_result;
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_219657185:;
			{
				_20899ce48_pushErr(_self_, (*(_300233_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		else if ((_2089d459a_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_219657042:;
			{
				__jule_func_result=_2089ba9b0_evalMap(_self_, _2089d459a_Map((*(_self_))._field_prefix), _300233_lit);
			}
		}
		else if ((_2089d3ce7_Struct((*(_self_))._field_prefix) != nullptr)) {
			_case_begin_2196570a8:;
			{
				__jule_func_result=_2089b11e2_evalStructLitExplicit(_self_, _2089d3ce7_Struct((*(_self_))._field_prefix), (*(_300233_lit))._field_Exprs, (*_300233_lit.alloc)._field_Token);
			}
		}
		else {
			_case_begin_219657361:;
			{
				_20899ce48_pushErr(_self_, (*_300233_lit.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		_match_end_219657284:;
	};
	if ((__jule_func_result != nullptr)) {
		jule::Ptr<_2087490bd_StructIns> _30168_strct = _2089d407d_softStruct((*(_self_))._field_prefix.ptr());;
		if (((_30168_strct != nullptr) && ((*_30168_strct.alloc)._field_Source != nullptr))) {
			(*__jule_func_result.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30168_strct, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)});
			{
				auto &_match_expr{ (*(__jule_func_result))._field_Model };
				
				if (_match_expr.type == &__jule_any_type96) {
					_case_begin_21965a595:;
					{
						(*((*(__jule_func_result))._field_Model.unsafe_cast_ptr<_208812d46_StructLitExpr>()))._field_Strct=_30168_strct;
					}
				}
				_match_end_21965a51d:;
			};
		};
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20899a9a1_Data> _2089bb142_evalAnonFunc(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_2087390d0_FnDecl> _302833_decl) {
	_2089e2751_typeChecker _30297_tc = _2089e2751_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_208822372_FnIns> _30347_ins = _2089e9868_buildFunc(&_30297_tc, _302833_decl);;
	if ((_30347_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30347_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_20894d7de_Var>> _30397_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20894d7de_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
			_case_begin_21965cae7:;
			{
				jule::Ptr<_2088d3169_scopeChecker> _30428_sc = (*_self_.alloc)._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1);;
				jule::Ptr<_2088d3169_scopeChecker> _30438_scc = _2088e54bc_newChildChecker(_30428_sc);;
				(*(_30438_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2088d1ca0_scopeLabel>>>(nullptr);
				(*_30438_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>>(nullptr);
				(*_30438_scc.alloc)._field_owner=_30347_ins;
				(*_30438_scc.alloc)._field_childIndex=0LL;
				(*_30438_scc.alloc)._field_it=0LLU;
				(*_30438_scc.alloc)._field_cse=0LLU;
				(*_30438_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_20894d7de_Var>>>)((&(_30397_captured))));
				_208947c28_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30347_ins), &(_30438_scc));
			}
		}
		else {
			_case_begin_21965da3d:;
			{
				_208948344_checkFnIns((*_self_.alloc)._field_s, &(_30347_ins));
			}
		}
		_match_end_21965d9c7:;
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30347_ins, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_208814dae_AnonFnExpr>(_208814dae_AnonFnExpr{._field_Captured=_30397_captured, ._field_Func=_30347_ins, ._field_Global=_20899dbc4_isGlobal(_self_)}), &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2089bb483_evalBinary(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872ec41_BinaryExpr> _306631_op) {
	_2089bea08_binaryEval _30677_bs = static__2089c00e1_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_2089d846c_Prim> _30704_prim = _2089d2774_Prim((*(_self_))._field_prefix);;
		if (((_30704_prim == nullptr) || (!(_20889d222_IsNum(_2089d87e1_Str(_30704_prim.ptr())))))) {
			jule::Ptr<_2089ce661_Type> _30729_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30729_prefix;
			});;
			return _2089c59dc_eval(&_30677_bs, &(_306631_op));;
		};
	};
	return _2089c59dc_eval(&_30677_bs, &(_306631_op));;
}



inline jule::Ptr<_20899a9a1_Data> _2089bb7c4_evalExprKind(jule::Ptr<_20899c970_eval> _self_, jule::Any _308133_kind) {
	{
		auto &_match_expr{ _308133_kind };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_21966877e:;
			{
				jule::Ptr<_20872b941_RangeExpr> _30848_e = _308133_kind.unsafe_cast_ptr<_20872b941_RangeExpr>();;
				return _2089bb7c4_evalExprKind(_self_, (*((*(_30848_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_21966831c:;
			{
				return _2089a04ab_evalLit(_self_.ptr(), _308133_kind.unsafe_cast_ptr<_20872c612_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2196687e5:;
			{
				return _2089a51e7_evalIdent(_self_, _308133_kind.unsafe_cast_ptr<_20872ce92_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_21966885b:;
			{
				return _2089a5538_evalUnary(_self_, _308133_kind.unsafe_cast_ptr<_20872d734_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_21966896b:;
			{
				return _2089a5879_evalVariadic(_self_, _308133_kind.unsafe_cast_ptr<_20872db0d_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_2196689d2:;
			{
				return _2089a5bba_evalUnsafe(_self_, _308133_kind.unsafe_cast_ptr<_20872c9db_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_219668a48:;
			{
				return _2089a6803_evalSliceExpr(_self_, _308133_kind.unsafe_cast_ptr<_208732bcd_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_219668aae:;
			{
				return _2089aa450_evalIndexing(_self_, _308133_kind.unsafe_cast_ptr<_20873363a_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_219669d9b:;
			{
				return _2089ab781_evalSlicing(_self_, _308133_kind.unsafe_cast_ptr<_208733c9a_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_219669e12:;
			{
				return _2089b08ea_evalCast(_self_, _308133_kind.unsafe_cast_ptr<_20872ded7_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_219669e78:;
			{
				return _2089b0c3b_evalNamespace(_self_, _308133_kind.unsafe_cast_ptr<_20872e3b1_NamespaceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_21966a000:;
			{
				return _2089b1533_evalStructLit(_self_, _308133_kind.unsafe_cast_ptr<_2087316c1_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_21966a077:;
			{
				return _2089b1b0a_evalType(_self_, _308133_kind.unsafe_cast_ptr<_208727343_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_21966a0ee:;
			{
				return _2089b3216_evalFnCall(_self_, _308133_kind.unsafe_cast_ptr<_2087303a1_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_21966a176:;
			{
				return _2089b9d77_evalSubIdent(_self_, _308133_kind.unsafe_cast_ptr<_20872e78a_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_21966a1ed:;
			{
				return _2089ba5b4_evalTuple(_self_, _308133_kind.unsafe_cast_ptr<_20872c26b_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_21966a275:;
			{
				return _2089bad01_evalBraceLit(_self_, _308133_kind.unsafe_cast_ptr<_208731b77_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_21966a2ec:;
			{
				return _2089bb142_evalAnonFunc(_self_, _308133_kind.unsafe_cast_ptr<_2087390d0_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_21966a374:;
			{
				return _2089bb483_evalBinary(_self_, _308133_kind.unsafe_cast_ptr<_20872ec41_BinaryExpr>());;
			}
		}
		else {
			_case_begin_2196684a4:;
			{
				return nullptr;;
			}
		}
		_match_end_21966843d:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089bbb15_eval1(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _312926_expr) {
	jule::Ptr<_20899a9a1_Data> _31307_d = _2089bb7c4_evalExprKind(_self_, (*(_312926_expr))._field_Kind);;
	if (((_31307_d == nullptr) || ((*(_31307_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_2089d3a61_Fn((*(_31307_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_21968c9d4:;
			{
				jule::Ptr<_208822372_FnIns> _31388_f = _2089d3a61_Fn((*(_31307_d))._field_Type);;
				if (_20882383a_IsBuiltin(_31388_f.ptr())) {
					_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_312926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_21968dc6b;
				};
				jule::I64 _31434_required = (*((*(_31388_f))._field_Decl))._field_Generics.len();;
				jule::I64 _31444_given = (*_31388_f.alloc)._field_Generics.len();;
				if ((!(_20892eb88_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31434_required, _31444_given, (*_312926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31388_f))._field_Decl.alloc)._field_Statically)) && _20881ea01_IsMethod((*(_31388_f))._field_Decl))) {
					_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_312926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_2089c5dd8_findDirective(&((*(*(_31388_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*_312926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31388_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_31388_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31307_d))._field_Decl) {
			_case_begin_21968ca4a:;
			{
				jule::Ptr<_2087490bd_StructIns> _31578_s = _2089d3ce7_Struct((*_31307_d.alloc)._field_Type.ptr());;
				if ((_31578_s == nullptr)) {
					goto _match_end_21968dc6b;
				};
				jule::I64 _31614_required = (*((*(_31578_s))._field_Decl))._field_Generics.len();;
				jule::I64 _31624_given = (*_31578_s.alloc)._field_Generics.len();;
				if ((!(_20892eb88_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31614_required, _31624_given, (*_312926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_21968dc6b:;
	};
	return _31307_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089bbe56_eval(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _317425_expr) {
	jule::Ptr<_20899a9a1_Data> _31757_d = _2089bbb15_eval1(_self_, _317425_expr);;
	if ((_31757_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _2089d4ab7_comptime((*(_31757_d))._field_Type.ptr()))) {
		_20892d659_pushErr((*_self_.alloc)._field_s.ptr(), (*(_317425_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31757_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089bc297_evalExpr1(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _318930_expr) {
	jule::Ptr<_20899a9a1_Data> _31907_d = _2089bbb15_eval1(_self_, _318930_expr);;
	{
		
		if ((_31907_d == nullptr)) {
			_case_begin_21969d2a8:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31907_d))._field_Decl) {
			_case_begin_21969d352:;
			{
				_20899ce48_pushErr(_self_, (*(_318930_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_21969d231:;
			{
				return _31907_d;;
			}
		}
		_match_end_21969d1ba:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089bc5d8_evalExpr(jule::Ptr<_20899c970_eval> _self_, jule::Ptr<_20872b677_Expr> _320529_expr) {
	jule::Ptr<_20899a9a1_Data> _32067_d = _2089bbe56_eval(_self_, _320529_expr);;
	{
		
		if ((_32067_d == nullptr)) {
			_case_begin_2196a02aa:;
			{
				return nullptr;;
			}
		}
		else if ((*(_32067_d))._field_Decl) {
			_case_begin_2196a0354:;
			{
				_20899ce48_pushErr(_self_, (*(_320529_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_2196a0233:;
			{
				return _32067_d;;
			}
		}
		_match_end_2196a01bc:;
	};
}








inline jule::Bool _2089bca6c_unaryEval_eq(_2089bca6c_unaryEval *_self_, _2089bca6c_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _2089bca6c_unaryEval static__2089bcee0_new(jule::Ptr<_20899c970_eval> _322620_e) {
	return _2089bca6c_unaryEval{._field_e=_322620_e, ._field_d=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_u=jule::Ptr<_20872d734_UnaryExpr>(nullptr)};;
}



inline void _2089bd1dd_minus(_2089bca6c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_2196a2125:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_2089d2774_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2196a2510:;
			{
				if ((!(_20889d222_IsNum(_2089d87e1_Str(_2089d2774_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2196a1c5c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2196a1b4c:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_20899b3db_IsConst((*(_self_))._field_d)) {
		{
			
			if (_20880a24a_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196a548b:;
				{
					_20880927c_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_208807b4e_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_208809711_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196a5139:;
				{
					_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_208807115_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_208809997_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_2196a51a0:;
				{
					_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_208807dd5_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_2196a50c3:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3259:5"));;
				}
			}
			_match_end_2196a4ee6:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _2089bd3db_plus(_2089bca6c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_2196aaa57:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_2089d2774_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2196aaae0:;
			{
				if ((!(_20889d222_IsNum(_2089d87e1_Str(_2089d2774_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2196aa68e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2196aa57e:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_20899b3db_IsConst((*(_self_))._field_d)) {
		{
			
			if (_20880a24a_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196addbd:;
				{
					_20880927c_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_208807b4e_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_208809711_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196ada6b:;
				{
					_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_208807115_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_208809997_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_2196adad2:;
				{
					_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_208807dd5_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_2196ada05:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3299:5"));;
				}
			}
			_match_end_2196ad928:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _2089bd5d9_caret(_2089bca6c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_2196b4489:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_2089d2774_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2196b4522:;
			{
				if ((!(_20889cb4a_IsInt(_2089d87e1_Str(_2089d2774_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2196b40c1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2196b3eb1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_20899b3db_IsConst((*(_self_))._field_d)) {
		jule::I64 _33354_sz = _208894acb_BitSizeOf((*(_2089d2774_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_208809711_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196b84d2:;
				{
					{
						auto &_match_expr{ _33354_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_2196b94d3:;
							{
								_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_208807115_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_2196b9192:;
							{
								_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_208807115_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_2196b9208:;
							{
								_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_208807115_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_2196b926e:;
							{
								_2088086aa_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_208807115_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_2196b8eb6:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3348:6"));;
							}
						}
						_match_end_2196b90c6:;
					};
				}
			}
			else if (_208809997_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196b8180:;
				{
					{
						auto &_match_expr{ _33354_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_2196be4e9:;
							{
								_208808963_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_20880739b_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_2196be1b9:;
							{
								_208808963_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_20880739b_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_2196be230:;
							{
								_208808963_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_20880739b_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_2196be296:;
							{
								_208808963_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_20880739b_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_2196bdeee:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3361:6"));;
							}
						}
						_match_end_2196be076:;
					};
				}
			}
			else {
				_case_begin_2196b8119:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3364:5"));;
				}
			}
			_match_end_2196b80a3:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _2089bd7d7_excl(_2089bca6c_unaryEval* _self_) {
	jule::Ptr<_2089d846c_Prim> _33783_t = _2089d2774_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_33783_t == nullptr) || (!(_2089db6a1_IsBool(_33783_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_20899b3db_IsConst((*(_self_))._field_d)) {
		{
			
			if (_208809c2d_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_2196c6ea2:;
				{
					_208808c1b_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_208807632_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_2196c6ad9:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3392:5"));;
				}
			}
			_match_end_2196c6a0c:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _2089bd9d5_star(_2089bca6c_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_2089d2c91_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_2196ca6ae:;
			{
				if ((!(_20899d93d_isUnsafe((*(_self_))._field_e.ptr())))) {
					_20899ce48_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_2089e0760_Ptr> _34178_t = _2089d2c91_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_2089e12cc_IsUnsafe(_34178_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Type=(*(_34178_t))._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_2089d2a0a_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_2196ca736:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_2089d2a0a_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_2196ca307:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2196c93a0:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _2089bdbd3_amper(_2089bca6c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_21999d542:;
			{
				jule::Ptr<_208812d46_StructLitExpr> _34398_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_208812d46_StructLitExpr>();;
				_2089c6812_makeStructLitAlloc(&((*(_self_))._field_d), &(_34398_lit));
			}
		}
		else {
			_case_begin_21999c761:;
			{
				{
					
					if (_2089ebb89_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_21999d157:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089e0760_Ptr>(_2089e0760_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_21999c376:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_21999cc06:;
				};
			}
		}
		_match_end_21999c6ea:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _2089bddd1_typeDecl(_2089bca6c_unaryEval* _self_) {
	_2089e2751_typeChecker _34647_tc = _2089e2751_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_2089e1761_referencer>(nullptr), ._field_refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_2089cd94b_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_2199a3b41:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089e8081_buildPtrFromType(&_34647_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_2199a3800:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089e78ee_buildSptrFromType(&_34647_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		else {
			_case_begin_2199a326c:;
			{
				_20899ce48_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(*(_self_))._field_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2199a3778:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _2089be0ce_evalData(_2089bca6c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_2199a930b:;
			{
				jule::Ptr<_2089ce661_Type> _34898_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_2089bbe56_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34898_prefix;
			}
		}
		else {
			_case_begin_2199a3866:;
			{
				(*(_self_))._field_d=_2089bbe56_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_2199a8e21:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089be420_eval(_2089bca6c_unaryEval* _self_, jule::Ptr<_20872d734_UnaryExpr> _349824_u) {
	(*(_self_))._field_u=_349824_u;
	_2089be0ce_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_2089bddd1_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_2089ce661_Type> _35093_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_2199ad95e:;
			{
				_2089bd1dd_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_2199ad9c5:;
			{
				_2089bd3db_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_2199ada3b:;
			{
				_2089bd5d9_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_2199adaa2:;
			{
				_2089bd7d7_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_2199adb18:;
			{
				_2089bd9d5_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_2199adb7e:;
			{
				_2089bdbd3_amper(_self_);
			}
		}
		else {
			_case_begin_2199ad420:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_2199ad8d7:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_2199ae18a:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str(_35093_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_20899b3db_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_2199ac089:;
			{
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_2199b0ac6:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _2089bea08_binaryEval_eq(_2089bea08_binaryEval *_self_, _2089bea08_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _2089bea08_binaryEval static__2089c00e1_newPlain(jule::Ptr<_20899c970_eval> _354625_e) {
	return _2089bea08_binaryEval{._field_e=_354625_e, ._field_l=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_r=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_op=jule::Ptr<_208711827_Token>(nullptr)};;
}



inline _2089bea08_binaryEval static__2089c0465_new(jule::Ptr<_20899c970_eval> _355220_e, jule::Ptr<_208711827_Token> _355234_op) {
	return _2089bea08_binaryEval{._field_e=_355220_e, ._field_l=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_r=jule::Ptr<_20899a9a1_Data>(nullptr), ._field_op=_355234_op};;
}



inline jule::Bool _2089c06eb_checkTypeCompatibility(_2089bea08_binaryEval* _self_) {
	return _208936e7b_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _2089c0982_checkTypeCompatibility1(_2089bea08_binaryEval* _self_) {
	if ((_20899b3db_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		std::swap((*(_self_))._field_l, (*(_self_))._field_r);
	};
	;
	return _208935b4a_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, nullptr);;
}



inline jule::Ptr<_20899a9a1_Data> _2089c0c18_evalComptimeTypeInfo(_2089bea08_binaryEval* _self_) {
	jule::Ptr<_2088ae596_comptimeTypeInfo> _35767_r = _2089d63c1_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35767_r == nullptr)) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2088ae596_comptimeTypeInfo> _35817_l = _2089d63c1_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_2199bbc03:;
			{
				jule::Ptr<_208799195_Const> _35848_constant = static__208806213_NewBool(_2089ced9d_Equal((*(_35817_l))._field_base, (*(_35767_r))._field_base));;
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35848_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35848_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199baa37:;
			{
				jule::Ptr<_208799195_Const> _35918_constant = static__208806213_NewBool((!(_2089ced9d_Equal((*(_35817_l))._field_base, (*(_35767_r))._field_base))));;
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35918_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35918_constant});;
			}
		}
		else {
			_case_begin_2199ba3a5:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199ba64c:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c0e9e_evalNil(_2089bea08_binaryEval* _self_) {
	if ((!(_2089d1ec1_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199c1961:;
			{
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2199bc341:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199c1587:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c1235_evalEnum(_2089bea08_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199c3446:;
			{
				jule::Ptr<_2089ce661_Type> _36258_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_2089d3027_Enum((*(*(_self_))._field_r.alloc)._field_Type.ptr()) != nullptr)) {
					_36258_rkind=(*((*(_2089d3027_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_20882c17e_Enum> _36298_enm = _2089d3027_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
				if ((!(_2089365a7_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_36298_enm))._field_TypeSym))._field_Type), &(_36258_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		_match_end_2199c2d08:;
	};
	if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_2199c8c65:;
			{
				if ((!(_20889d222_IsNum(_2089d87e1_Str(_2089d2774_Prim((*((*(_2089d3027_Enum((*((*(_self_))._field_l))._field_Type.ptr())))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
					_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_2199c8eb8:;
			{
				jule::Ptr<_20882b623_EnumItem> _36554_first = (*(_2089d3027_Enum((*((*(_self_))._field_l))._field_Type.ptr())))._field_Items[0LL];;
				{
					
					if (_208809711_IsI64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_2199cd96d:;
						{
							if ((_208807115_ReadI64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_2199d0c6c;
							};
							goto _julec_label_2199d1d17;
						}
					}
					else if (_208809997_IsU64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_2199cd61b:;
						{
							if ((_20880739b_ReadU64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_2199d0c6c;
							};
							goto _julec_label_2199d1d17;
						}
					}
					else {
						_case_begin_2199cd5a5:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3668:5"));;
						}
					}
					_match_end_2199cd52d:;
				};
				_julec_label_2199d1d17:;
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_20899d2ab_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_2199d0c6c:;
				goto _case_begin_2199c902e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_2199c902e:;
			{
				jule::Ptr<_20882c17e_Enum> _36778_enm = _2089d3027_Enum((*((*(_self_))._field_l))._field_Type);;
				if (((_2089d2774_Prim((*((*(_36778_enm))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_20889cb4a_IsInt(_2089d87e1_Str(_2089d2774_Prim((*((*(_36778_enm))._field_TypeSym))._field_Type.ptr()).ptr())))))) {
					_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2199c624b:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199c7637:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c14bb_evalTypeEnum(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199d8846:;
			{
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2199d6ed7:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199d72a1:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c1752_evalSptr(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199db096:;
			{
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2199d8cdb:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199d9a01:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c19d8_evalPtr(_2089bea08_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_2199dd384:;
			{
				if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_2199dc1a7:;
			{
				if ((_2089d2c91_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_2089e12cc_IsUnsafe(_2089d2c91_Ptr((*((*(_self_))._field_l))._field_Type.ptr()).ptr())) {
					_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_2089c799a_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2199db2e9:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199db717:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c1c6e_evalArr(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199e629e:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_208822372_FnIns> _37659_f = _2088207c1_instanceForce(_2083e3152_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37659_f))._field_Generics=jule::append((*_37659_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=(*(_2089d3544_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37675_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208946243_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37659_f), &((*(_self_))._field_op));
						_37675_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37675_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3769:6"));;
					};
					_2196e9975_pushReference((*(_self_))._field_e, &(_37659_f));
				};
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2199e4885:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199e4c09:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c2005_evalStruct(_2089bea08_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2199ec41a:;
			{
				if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2199e6502:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199e6898:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c228b_evalTrait(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c06eb_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_219a000cc:;
			{
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2199ec8b0:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2199eda37:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c2522_evalAny(_2089bea08_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_219a023ba:;
			{
				_2089eca36_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _2089a0e7e_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_219a00330:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219a0074d:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c27a8_evalBool(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c0982_checkTypeCompatibility1(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_219a05896:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_219a02860:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219a04301:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c2a3e_evalStr(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c0982_checkTypeCompatibility1(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_219a08426:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_219a07249:;
			{
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_219a06204:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219a06d81:;
	};
}



inline void _2089c2c3c_setTypeToGreater(_2089bea08_binaryEval* _self_) {
	jule::Ptr<_2089d846c_Prim> _38703_lp = _2089d2774_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_2089d846c_Prim> _38713_rp = _2089d2774_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		if (_20899b3db_IsConst((*(_self_))._field_l)) {
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38713_rp))._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		if (_20899b3db_IsConst((*(_self_))._field_r)) {
			(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38703_lp))._field_Kind;
		};
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		if (_20899b3db_IsConst((*(_self_))._field_r)) {
			(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*_38703_lp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _2089c2ee5_checkModData(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _389333_d) {
	if ((!(_20899b3db_IsConst((*(_389333_d)).ptr())))) {
		if (((_2089d2774_Prim((*((*(_389333_d))))._field_Type.ptr()) == nullptr) || (!(_20889cb4a_IsInt((*(_2089d2774_Prim((*((*(_389333_d))))._field_Type.ptr())))._field_Kind))))) {
			_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_208985c33_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _389333_d)) {
			_case_begin_219a14e6b:;
			{
				_2088086aa_SetI64((*((*(_389333_d))))._field_Constant.ptr(), _208807dd5_AsI64((*((*(_389333_d))))._field_Constant));
			}
		}
		else if (_2089860eb_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _389333_d)) {
			_case_begin_219a14a2b:;
			{
				_208808963_SetU64((*((*(_389333_d))))._field_Constant.ptr(), _20880816b_AsU64((*((*(_389333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_219a14696:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_219a1292a:;
	};
}



inline void _2089c31e3_mod(_2089bea08_binaryEval* _self_) {
	_2089c2ee5_checkModData(_self_, &((*(_self_))._field_l));
	_2089c2ee5_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _2089c3479_numbersAreCompatibile(_2089bea08_binaryEval* _self_) {
	jule::Str _39163_lk = (*(_2089d2774_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39173_rk = (*(_2089d2774_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_20889d222_IsNum(_39173_rk)))) {
		_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return false;;
	};
	if ((_20899b3db_IsConst((*(_self_))._field_l) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((_39163_lk == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_20899b3db_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			if ((!(_2089858ae_floatAssignable(&(_39163_lk), &((*(_self_))._field_r))))) {
				_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
				return false;;
			};
			return true;;
		};
		if ((_39173_rk != static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
			_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	if ((_39163_lk == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_20899b3db_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			if ((!(_2089858ae_floatAssignable(&(_39163_lk), &((*(_self_))._field_r))))) {
				_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
				return false;;
			};
			return true;;
		};
		if ((_39173_rk != static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
			_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	if ((_20899b3db_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		if ((!(_208986470_intAssignable(_39163_lk, &((*(_self_))._field_r))))) {
			_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	return _2089c06eb_checkTypeCompatibility(_self_);;
}



inline jule::Ptr<_20899a9a1_Data> _2089c3710_shift(_2089bea08_binaryEval* _self_) {
	jule::Ptr<_2089d846c_Prim> _39663_lk = _2089d2774_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39663_lk == nullptr)) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2089d846c_Prim> _39713_rk = _2089d2774_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39713_rk == nullptr)) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_20889d222_IsNum((*(_39663_lk))._field_Kind))) || (!(_20889d222_IsNum((*(_39713_rk))._field_Kind))))) {
		_2089369c5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_20889cb4a_IsInt((*(_39663_lk))._field_Kind)))) {
		if (((!(_20899b3db_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_208986470_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_2088086aa_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _208807dd5_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_208a5542e_primI64;
		} else if (_208986470_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_208808963_SetU64((*((*(_self_))._field_l))._field_Constant, _20880816b_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_208a56232_primU64;
		};
	};
	if ((!(_20889cb4a_IsInt((*(_39713_rk))._field_Kind)))) {
		if (((!(_20899b3db_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(*(_self_))._field_l.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_208986470_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_2088086aa_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _208807dd5_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_208a5542e_primI64;
		} else if (_208986470_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_208808963_SetU64((*((*(_self_))._field_r))._field_Constant, _20880816b_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_208a56232_primU64;
		};
	};
	if ((!(_2089c72c4_isOkForShifting(&((*(_self_))._field_r))))) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_20899a9a1_Data> _2089c3996_evalFloat(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c3479_numbersAreCompatibile(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_219a35d27:;
			{
				_2089c2c3c_setTypeToGreater(_self_);
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		_match_end_219a35cb1:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_219a36dd3:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4043:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_219a36c90:;
			{
				_2089c2c3c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_219a36d06:;
			{
				_2089c2c3c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_219a385aa:;
			{
				if ((!(_20889cb4a_IsInt((*(_2089d2774_Prim((*((*(_self_))._field_r))._field_Type.ptr())))._field_Kind)))) {
					_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_2089c31e3_mod(_self_);
				_2089c2c3c_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_219a35e15:;
			{
				_20899ce48_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219a36b6e:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c3c2c_evalInt(_2089bea08_binaryEval* _self_) {
	if ((!(_2089c3479_numbersAreCompatibile(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_219a3d307:;
			{
				return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a53eaa_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
			}
		}
		_match_end_219a3d291:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_219a4089d:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4088:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_219a40914:;
			{
				_2089c2c3c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_219a4097a:;
			{
				_2089c2c3c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_219a3e21a:;
			{
				_2089c31e3_mod(_self_);
				_2089c2c3c_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_219a3d3e5:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219a3e0e9:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089c3eb3_evalPrim(_2089bea08_binaryEval* _self_) {
	jule::Ptr<_2089d846c_Prim> _41113_prim = _2089d2774_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_2089db6a1_IsBool(_41113_prim.ptr())) {
			_case_begin_219a43a9e:;
			{
				return _2089c27a8_evalBool(_self_);;
			}
		}
		else if (_2089db937_IsStr(_41113_prim.ptr())) {
			_case_begin_219a43b48:;
			{
				return _2089c2a3e_evalStr(_self_);;
			}
		}
		_match_end_219a43a16:;
	};
	if ((_2089d2774_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089d87e1_Str(_41113_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_20889ce8b_IsFloat((*(_41113_prim))._field_Kind)) {
			_case_begin_219a46882:;
			{
				return _2089c3996_evalFloat(_self_);;
			}
		}
		else if (_20889cb4a_IsInt((*(_41113_prim))._field_Kind)) {
			_case_begin_219a46909:;
			{
				return _2089c3c2c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_219a4681b:;
			{
				return nullptr;;
			}
		}
		_match_end_2190b7156:;
	};
}



inline jule::Bool _2089c4249_checkSpecialCases(_2089bea08_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41363_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_41363_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_2089d171d_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_2089d07d8_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_2089d171d_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_2089d07d8_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_20899a9a1_Data> _2089c44d0_evalOp(_2089bea08_binaryEval* _self_) {
	jule::Bool _41513_ok = _2089c4249_checkSpecialCases(_self_);;
	if ((!(_41513_ok))) {
		return nullptr;;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _2089c3710_shift(_self_);;
	};
	{
		
		if (_2089d0a6e_Void((*((*(_self_))._field_l))._field_Type.ptr())) {
			_case_begin_219a5123d:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_2089d63c1_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr()) != nullptr)) {
			_case_begin_219a50050:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a4edc9;
			}
		}
		else if ((_2089d63c1_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a4edc9:;
			{
				return _2089c0c18_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_2089d2774_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _2089dbbbd_IsAny(_2089d2774_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_219a4ee40:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a51491;
			}
		}
		else if (_2089d07d8_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_219a51491:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a51507;
			}
		}
		else if (_2089d07d8_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_219a51507:;
			{
				return _2089c0e9e_evalNil(_self_);;
			}
		}
		else if (((_2089d2774_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _2089dbbbd_IsAny(_2089d2774_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_219a5156d:;
			{
				return _2089c2522_evalAny(_self_);;
			}
		}
		else if ((_2089d32ad_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_219a51639:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a516a0;
			}
		}
		else if ((_2089d32ad_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a516a0:;
			{
				return _2089c14bb_evalTypeEnum(_self_);;
			}
		}
		else if ((_2089d3027_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_219a51716:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a5177c;
			}
		}
		else if ((_2089d3027_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a5177c:;
			{
				return _2089c1235_evalEnum(_self_);;
			}
		}
		else if ((_2089d2a0a_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_219a517e3:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a5186a;
			}
		}
		else if ((_2089d2a0a_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a5186a:;
			{
				return _2089c1752_evalSptr(_self_);;
			}
		}
		else if ((_2089d2c91_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_219a518e2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a51969;
			}
		}
		else if ((_2089d2c91_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a51969:;
			{
				return _2089c19d8_evalPtr(_self_);;
			}
		}
		else if ((_2089d3544_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a51a46:;
			{
				return _2089c1c6e_evalArr(_self_);;
			}
		}
		else if ((_2089d4314_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_219a51aac:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_219a51b23;
			}
		}
		else if ((_2089d4314_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a51b23:;
			{
				return _2089c228b_evalTrait(_self_);;
			}
		}
		else if ((_2089d2774_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a51b89:;
			{
				return _2089c3eb3_evalPrim(_self_);;
			}
		}
		else if ((_2089d3ce7_Struct((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_219a51c00:;
			{
				return _2089c2005_evalStruct(_self_);;
			}
		}
		else {
			_case_begin_219a4ebba:;
			{
				_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219a4e291:;
	};
}



inline void _2089c4788_evalConst(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _421730_d) {
	{
		
		if (((*(_421730_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_219a6477e:;
			{
				return;;
			}
		}
		else if ((!(_20899b3db_IsConst((*(_self_))._field_l.ptr()))) || (!(_20899b3db_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_219a64806:;
			{
				(*((*(_421730_d))))._field_Constant=nullptr;
				(*((*(_421730_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_219a641a7:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_219a648d3:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880b2e5_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_219a66d47:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool((!(_20880b2e5_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_219a66dad:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880aea4_Or((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_219a66e24:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880ab63_And((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_219a66e8a:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880bcb8_Gt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_219a67001:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880b636_Lt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_219a67078:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880c109_GtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_219a67100:;
			{
				(*((*(_421730_d))))._field_Constant=static__208806213_NewBool(_20880b977_LtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_219a67177:;
			{
				_20880c44a_Add((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_219a671ee:;
			{
				_20880c78b_Sub((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_219a67276:;
			{
				_20880cacc_Mul((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_219a672ed:;
			{
				jule::Bool _42574_ok = _20880ce1d_Div((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42574_ok)) && (_208808402_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_2089d846c_Prim> _42628_prim = _2089d2774_Prim((*((*(_421730_d))))._field_Type.ptr());;
				{
					
					if (_20889c573_IsSigInt((*(_42628_prim))._field_Kind)) {
						_case_begin_219a78232:;
						{
							_2088086aa_SetI64((*((*(_421730_d))))._field_Constant, _208807dd5_AsI64((*((*(_421730_d))))._field_Constant));
						}
					}
					else if (_20889c881_IsUnsigInt((*(_42628_prim))._field_Kind)) {
						_case_begin_219a782cb:;
						{
							_208808963_SetU64((*((*(_421730_d))))._field_Constant, _20880816b_AsU64((*((*(_421730_d))))._field_Constant));
						}
					}
					_match_end_219a781aa:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_219a67375:;
			{
				jule::Bool _42704_ok = _20880d25e_Mod((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42704_ok)) && (_208808402_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_20899ce48_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_219a673ec:;
			{
				_20880d8e1_BitwiseOr((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_219a67474:;
			{
				_20880d5a0_BitwiseAnd((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_219a674eb:;
			{
				_20880dc32_Xor((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_219a67573:;
			{
				_20880e073_Lshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_219a675ea:;
			{
				_20880e3b4_Rshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_219a66110:;
	};
	(*((*(_421730_d))))._field_Model=jule::Any((*((*(_421730_d))))._field_Constant, &__jule_any_type15);
	_2089c96c2_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _421730_d, _2089d3027_Enum((*((*(_421730_d))))._field_Type.ptr()), &((*(_self_))._field_op), _2089a0e7e_getOwnerRefers((*(_self_))._field_e));
}



inline void _2089c4a41_checkData(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _429530_d) {
	jule::Ptr<_208822372_FnIns> _42963_f = _2089d3a61_Fn((*((*(_429530_d))))._field_Type.ptr());;
	if ((((_42963_f != nullptr) && ((*_42963_f.alloc)._field_Decl != nullptr)) && _20881ea01_IsMethod((*(_42963_f))._field_Decl))) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _2089c4c3e_checkDatas(_2089bea08_binaryEval* _self_) {
	_2089c4a41_checkData(_self_, &((*(_self_))._field_l));
	_2089c4a41_checkData(_self_, &((*(_self_))._field_r));
}



inline void _2089c4ee7_setModel(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _430729_d) {
	if (_20899b3db_IsConst((*(_430729_d)).ptr())) {
		if (((_20899b3db_IsConst((*(_self_))._field_l.ptr()) && _20899b3db_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_20899a9a1_Data> _43187_l;
	jule::Ptr<_20899a9a1_Data> _431814_r;
	({
		jule::Ptr<_20899a9a1_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_20899a9a1_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43187_l = ___jule_assign_arg;
		_431814_r = _1___jule_assign_arg;
	});
	if ((!(_20899b72c_GoodOperand(_43187_l.ptr(), &(_431814_r))))) {
		std::swap(_43187_l, _431814_r);
	};
	(*((*(_430729_d))))._field_Model=jule::Any(jule::new_ptr<_208812098_BinaryExpr>(_208812098_BinaryExpr{._field_Left=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_43187_l))._field_Type, ._field_Model=(*_43187_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_431814_r))._field_Type, ._field_Model=(*_431814_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _2089c52a0_postEval(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _433629_d) {
	(*((*(_433629_d))))._field_Lvalue=false;
	_2089c4ee7_setModel(_self_, _433629_d);
}



inline jule::Ptr<_20899a9a1_Data> _2089c569b_solveExplicit(_2089bea08_binaryEval* _self_, jule::Ptr<_20899a9a1_Data>* _434134_l, jule::Ptr<_20899a9a1_Data>* _434149_r) {
	({
		jule::Ptr<_20899a9a1_Data> ___jule_assign_arg = (*(_434134_l));
		jule::Ptr<_20899a9a1_Data> _1___jule_assign_arg = (*(_434149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_2089c4c3e_checkDatas(_self_);
	jule::Ptr<_20899a9a1_Data> _43467_d = _2089c44d0_evalOp(_self_);;
	({
		jule::Ptr<_20899a9a1_Data> ___jule_assign_arg = (*(_434134_l));
		jule::Ptr<_20899a9a1_Data> _1___jule_assign_arg = (*(_434149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_2089c4788_evalConst(_self_, &(_43467_d));
	if ((_43467_d != nullptr)) {
		(*_43467_d.alloc)._field_Mutable=true;
		_2089c52a0_postEval(_self_, &(_43467_d));
	};
	return _43467_d;;
}



inline jule::Ptr<_20899a9a1_Data> _2089c59dc_eval(_2089bea08_binaryEval* _self_, jule::Ptr<_20872ec41_BinaryExpr>* _436125_op) {
	if (((*((*((*(_436125_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_20899ce48_pushErr((*(_self_))._field_e.ptr(), (*((*(_436125_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_20899d2ab_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20899a9a1_Data> _43687_l = _2089bc297_evalExpr1((*(_self_))._field_e, (*((*(_436125_op))))._field_Left);;
	if (((_43687_l == nullptr) || ((*(_43687_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_2089ce661_Type> _43737_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43687_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43737_prefix;
	});;
	jule::Ptr<_20899a9a1_Data> _43767_r = _2089bc297_evalExpr1((*(_self_))._field_e, (*((*(_436125_op))))._field_Right);;
	if (((_43767_r == nullptr) || ((*(_43767_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_436125_op))))._field_Op;
	jule::Ptr<_20899a9a1_Data> _43837_d = _2089c569b_solveExplicit(_self_, &(_43687_l), &(_43767_r));;
	if ((((_43837_d != nullptr) && (*_43687_l.alloc)._field_IsRune) && (*(_43767_r))._field_IsRune)) {
		(*_43837_d.alloc)._field_IsRune=true;
	};
	return _43837_d;;
}
















inline jule::Bool _2089ce661_Type_eq(_2089ce661_Type *_self_, _2089ce661_Type _other_) {
	return 
		(_self_->_field_Generic == _other_._field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _2089cea5c_Str(_2089ce661_Type* _self_) {
	if (_2089d07d8_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_21e64c5b5_Builder _567_kind = static__21e64ce12_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _21e64d594_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	({
		auto except = _21e64d594_WriteStr(&_567_kind, ((_2089ce287_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_2089cdce2_Str((*(_self_))._field_Kind.data));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:61:3"));
		(except.result);
	});
	return _21e64de24_Str(&_567_kind);;
}



inline jule::Bool _2089ced9d_Equal(jule::Ptr<_2089ce661_Type> _self_, jule::Ptr<_2089ce661_Type> _6618_other) {
	if (_2089d07d8_IsNil(_self_.ptr())) {
		return _2089d07d8_IsNil(_6618_other.ptr());;
	};
	return ((_2089ce287_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_2089ce133_Equal((*(_self_))._field_Kind.data, _6618_other);;
}



inline jule::Bool _2089d0552_Binded(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_219aae851:;
			{
				jule::Ptr<_2087490bd_StructIns> _794_s = (*(_self_))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				if ((*((*(_794_s))._field_Decl))._field_Binded) {
					return true;;
				};
				if (((*(_794_s))._field_Source != nullptr)) {
					return _2089d0552_Binded((*(_794_s))._field_Source);;
				};
			}
		}
		_match_end_219aae7da:;
	};
	return false;;
}



inline jule::Bool _2089d07d8_IsNil(_2089ce661_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _2089d0a6e_Void(_2089ce661_Type* _self_) {
	jule::Ptr<_2089d846c_Prim> _953_prim = _2089d2774_Prim(_self_);;
	return ((_953_prim != nullptr) && (*(_953_prim))._field_Kind.equal("void", 4));;
}



inline jule::Trait _2089d0d05_ActualKind(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_219ab2c72:;
			{
				jule::Ptr<_2087490bd_StructIns> _1068_s = (*(_self_))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				if (((*(_1068_s))._field_Source != nullptr)) {
					return _2089d0d05_ActualKind((*(_1068_s))._field_Source);;
				};
			}
		}
		_match_end_219ab2c0b:;
	};
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _2089d1146_ActualEqual(jule::Ptr<_2089ce661_Type> _self_, jule::Ptr<_2089ce661_Type> _11524_other) {
	if (_2089d07d8_IsNil(_self_.ptr())) {
		return _2089d07d8_IsNil(_11524_other.ptr());;
	};
	if ((_2089d0552_Binded(_self_.ptr()) || _2089d0552_Binded(_11524_other.ptr()))) {
		return _2089ced9d_Equal(_self_, _11524_other);;
	};
	jule::Trait _1223_l = _2089d0d05_ActualKind(_self_.ptr());;
	jule::Trait _1233_r = _2089d0d05_ActualKind(_11524_other.ptr());;
	_2089ce661_Type _1243_lt = _2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1223_l};;
	_2089ce661_Type _1253_rt = _2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1233_r};;
	return _2089ced9d_Equal(((jule::Ptr<_2089ce661_Type>)((&(_1243_lt)))), ((jule::Ptr<_2089ce661_Type>)((&(_1253_rt)))));;
}



inline jule::Bool _2089d1487_deepActualEqual(jule::Ptr<_2089ce661_Type> _self_, jule::Ptr<_2089ce661_Type> _13028_other) {
	if (_2089d07d8_IsNil(_self_.ptr())) {
		return _2089d07d8_IsNil(_13028_other.ptr());;
	};
	jule::Trait _1343_l = _2089d0d05_ActualKind(_self_.ptr());;
	jule::Trait _1353_r = _2089d0d05_ActualKind(_13028_other.ptr());;
	_2089ce661_Type _1363_lt = _2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1343_l};;
	_2089ce661_Type _1373_rt = _2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1353_r};;
	return _2089ced9d_Equal(((jule::Ptr<_2089ce661_Type>)((&(_1363_lt)))), ((jule::Ptr<_2089ce661_Type>)((&(_1373_rt)))));;
}



inline jule::Bool _2089d171d_Comparable(_2089ce661_Type* _self_) {
	{
		_2089ce661_Type* _1448__self = _self_;;
		if ((_2089d3ce7_Struct(_1448__self) != nullptr)) {
			return (*(_2089d3ce7_Struct(_1448__self)))._field_Comparable;;
		};
		if ((_2089d3544_Arr(_1448__self) != nullptr)) {
			return _2089d171d_Comparable((*(_2089d3544_Arr(_1448__self)))._field_Elem.ptr());;
		};
		return (((_2089d459a_Map(_1448__self) == nullptr) && (_2089d37ca_Slc(_1448__self) == nullptr)) && (_2089d3a61_Fn(_1448__self) == nullptr));;
	};
}



inline jule::Bool _2089d19a4_Mutable(_2089ce661_Type* _self_) {
	{
		_2089ce661_Type* _1588__self = _self_;;
		if ((_2089d3ce7_Struct(_1588__self) != nullptr)) {
			return (*(_2089d3ce7_Struct(_1588__self)))._field_Mutable;;
		};
		if ((_2089d4314_Trait(_1588__self) != nullptr)) {
			return true;;
		};
		if ((_2089d2774_Prim(_1588__self) != nullptr)) {
			jule::Ptr<_2089d846c_Prim> _1665_p = _2089d2774_Prim(_1588__self);;
			return _2089dbbbd_IsAny(_1665_p.ptr());;
		};
		if ((_2089d3544_Arr(_1588__self) != nullptr)) {
			return _2089d19a4_Mutable((*(_2089d3544_Arr(_1588__self)))._field_Elem.ptr());;
		};
		return (((_2089d37ca_Slc(_1588__self) != nullptr) || (_2089d2c91_Ptr(_1588__self) != nullptr)) || (_2089d2a0a_Sptr(_1588__self) != nullptr));;
	};
}



inline jule::Bool _2089d1c3a_Ordered(_2089ce661_Type* _self_) {
	{
		_2089ce661_Type* _1818__self = _self_;;
		jule::Ptr<_2089d846c_Prim> _1824_prim = _2089d2774_Prim(_1818__self);;
		if ((_1824_prim != nullptr)) {
			return (_20889d222_IsNum((*_1824_prim.alloc)._field_Kind) || _2089db937_IsStr(_1824_prim));;
		};
		if ((_2089d2c91_Ptr(_1818__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_20882c17e_Enum> _1898_enm = _2089d3027_Enum(_1818__self);;
		if ((_1898_enm != nullptr)) {
			return _20889d222_IsNum(_2089d87e1_Str(_2089d2774_Prim((*((*_1898_enm.alloc)._field_TypeSym))._field_Type.ptr()).ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _2089d1ec1_NilCompatible(_2089ce661_Type* _self_) {
	{
		_2089ce661_Type* _2008__self = _self_;;
		jule::Ptr<_2089d846c_Prim> _2024_prim = _2089d2774_Prim(_2008__self);;
		if (((_2024_prim != nullptr) && _2089dbbbd_IsAny(_2024_prim))) {
			return true;;
		};
		return (((((((_2089d07d8_IsNil(_2008__self) || (_2089d3a61_Fn(_2008__self) != nullptr)) || (_2089d2a0a_Sptr(_2008__self) != nullptr)) || (_2089d2c91_Ptr(_2008__self) != nullptr)) || (_2089d4314_Trait(_2008__self) != nullptr)) || (_2089d37ca_Slc(_2008__self) != nullptr)) || (_2089d459a_Map(_2008__self) != nullptr)) || (_2089d32ad_TypeEnum(_2008__self) != nullptr));;
	};
}



inline jule::Bool _2089d2257_GC(_2089ce661_Type* _self_) {
	{
		_2089ce661_Type* _2218__self = _self_;;
		jule::Ptr<_2089d846c_Prim> _2224_prim = _2089d2774_Prim(_2218__self);;
		if ((_2224_prim != nullptr)) {
			return (_2089dbbbd_IsAny(_2224_prim) || _2089db937_IsStr(_2224_prim));;
		};
		return ((((_2089d2a0a_Sptr(_2218__self) != nullptr) || (_2089d37ca_Slc(_2218__self) != nullptr)) || (_2089d4314_Trait(_2218__self) != nullptr)) || (_2089d32ad_TypeEnum(_2218__self) != nullptr));;
	};
}



inline jule::Bool _2089d24dd_Variadicable(_2089ce661_Type* _self_) {
	_2089ce661_Type* _2337__self = _self_;;
	return (_2089d37ca_Slc(_2337__self) != nullptr);;
}



inline jule::Ptr<_2089d846c_Prim> _2089d2774_Prim(_2089ce661_Type* _self_) {
	jule::Trait _2397_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _2397_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)) {
			_case_begin_219ace431:;
			{
				return _2397_kind.cast_ptr<_2089d846c_Prim>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_219ace574:;
			{
				return nullptr;;
			}
		}
		_match_end_219ace50d:;
	};
}



inline jule::Ptr<_2089dbe98_Sptr> _2089d2a0a_Sptr(_2089ce661_Type* _self_) {
	jule::Trait _2507_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _2507_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_219ad03cc:;
			{
				return _2507_kind.cast_ptr<_2089dbe98_Sptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_219ad0553:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad04dc:;
	};
}



inline jule::Ptr<_2089e0760_Ptr> _2089d2c91_Ptr(_2089ce661_Type* _self_) {
	jule::Trait _2617_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _2617_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data28)) {
			_case_begin_219ad139a:;
			{
				return _2617_kind.cast_ptr<_2089e0760_Ptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_219ad1521:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad14aa:;
	};
}



inline jule::Ptr<_20882c17e_Enum> _2089d3027_Enum(_2089ce661_Type* _self_) {
	jule::Trait _2727_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _2727_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data3)) {
			_case_begin_219ad2368:;
			{
				return _2727_kind.cast_ptr<_20882c17e_Enum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_219ad24de:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad2478:;
	};
}



inline jule::Ptr<_20882d889_TypeEnum> _2089d32ad_TypeEnum(_2089ce661_Type* _self_) {
	jule::Trait _2837_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _2837_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data4)) {
			_case_begin_219ad3358:;
			{
				return _2837_kind.cast_ptr<_20882d889_TypeEnum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_219ad34ce:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad3468:;
	};
}



inline jule::Ptr<_2089dec8c_Arr> _2089d3544_Arr(_2089ce661_Type* _self_) {
	jule::Trait _2947_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _2947_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data27)) {
			_case_begin_219ad4348:;
			{
				return _2947_kind.cast_ptr<_2089dec8c_Arr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_219ad44be:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad4458:;
	};
}



inline jule::Ptr<_2089dc96b_Slc> _2089d37ca_Slc(_2089ce661_Type* _self_) {
	jule::Trait _3057_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _3057_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)) {
			_case_begin_219ad5338:;
			{
				return _3057_kind.cast_ptr<_2089dc96b_Slc>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_219ad54ae:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad5448:;
	};
}



inline jule::Ptr<_208822372_FnIns> _2089d3a61_Fn(_2089ce661_Type* _self_) {
	jule::Trait _3167_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _3167_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)) {
			_case_begin_219ad6328:;
			{
				return _3167_kind.cast_ptr<_208822372_FnIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_219ad649e:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad6438:;
	};
}



inline jule::Ptr<_2087490bd_StructIns> _2089d3ce7_Struct(_2089ce661_Type* _self_) {
	jule::Trait _3277_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _3277_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_219ad72e6:;
			{
				return _3277_kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_219ad746c:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad7406:;
	};
}



inline jule::Ptr<_2087490bd_StructIns> _2089d407d_softStruct(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_219ad78bd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_219ad7c42:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad7736:;
	};
}



inline jule::Ptr<_2088299c8_Trait> _2089d4314_Trait(_2089ce661_Type* _self_) {
	jule::Trait _3477_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _3477_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data2)) {
			_case_begin_219ad8e63:;
			{
				return _3477_kind.cast_ptr<_2088299c8_Trait>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_219ad90d9:;
			{
				return nullptr;;
			}
		}
		_match_end_219ad9073:;
	};
}



inline jule::Ptr<_2089de110_Map> _2089d459a_Map(_2089ce661_Type* _self_) {
	jule::Trait _3587_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _3587_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data26)) {
			_case_begin_219ad9e31:;
			{
				return _3587_kind.cast_ptr<_2089de110_Map>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_219ada0a7:;
			{
				return nullptr;;
			}
		}
		_match_end_219ada041:;
	};
}



inline jule::Ptr<_2089dd560_Tuple> _2089d4831_Tup(_2089ce661_Type* _self_) {
	jule::Trait _3697_kind = _2089d0d05_ActualKind(_self_);;
	{
		auto &_match_expr{ _3697_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data25)) {
			_case_begin_219adadee:;
			{
				return _3697_kind.cast_ptr<_2089dd560_Tuple>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_219adb075:;
			{
				return nullptr;;
			}
		}
		_match_end_219adb00e:;
	};
}



inline jule::Bool _2089d4ab7_comptime(_2089ce661_Type* _self_) {
	return (((((((((((((((_2089d613a_comptimeTypeInfos(_self_) != nullptr) || (_2089d63c1_comptimeTypeInfo(_self_) != nullptr)) || (_2089d4d4d_comptimeStructFields(_self_) != nullptr)) || (_2089d50d4_comptimeStructField(_self_) != nullptr)) || (_2089d536a_comptimeEnumFields(_self_) != nullptr)) || (_2089d5601_comptimeEnumField(_self_) != nullptr)) || (_2089d6657_comptimeStatics(_self_) != nullptr)) || (_2089d68dd_comptimeStatic(_self_) != nullptr)) || (_2089d5887_comptimeParams(_self_) != nullptr)) || (_2089d5b1d_comptimeParam(_self_) != nullptr)) || (_2089d6b74_comptimeValue(_self_) != nullptr)) || (_2089d76ad_comptimeFiles(_self_) != nullptr)) || (_2089d7427_comptimeFile(_self_) != nullptr)) || (_2089d6e0a_comptimeDecl(_self_) != nullptr)) || (_2089d7191_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_2088a1995_comptimeStructFields> _2089d4d4d_comptimeStructFields(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data7)) {
			_case_begin_219adb30b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a1995_comptimeStructFields>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_219ae06ea:;
			{
				return nullptr;;
			}
		}
		_match_end_219adb84a:;
	};
}



inline jule::Ptr<_2088a0202_comptimeStructField> _2089d50d4_comptimeStructField(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data6)) {
			_case_begin_219ae0bd4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a0202_comptimeStructField>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_219ae10be:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae1058:;
	};
}



inline jule::Ptr<_2088a7957_comptimeEnumFields> _2089d536a_comptimeEnumFields(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data11)) {
			_case_begin_219ae183e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a7957_comptimeEnumFields>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_219ae1cb2:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae1c4b:;
	};
}



inline jule::Ptr<_2088a6648_comptimeEnumField> _2089d5601_comptimeEnumField(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data10)) {
			_case_begin_219ae21d0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a6648_comptimeEnumField>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_219ae2961:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae28ea:;
	};
}



inline jule::Ptr<_2088ab2b8_comptimeParams> _2089d5887_comptimeParams(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data13)) {
			_case_begin_219ae2d7e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088ab2b8_comptimeParams>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_219ae3610:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae3599:;
	};
}



inline jule::Ptr<_2088a945e_comptimeParam> _2089d5b1d_comptimeParam(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data12)) {
			_case_begin_219ae3a2d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a945e_comptimeParam>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_219ae42ae:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae4248:;
	};
}



inline jule::Ptr<_20889e696_comptimeRange> _2089d5da4_comptimeRange(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)) {
			_case_begin_219ae46cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20889e696_comptimeRange>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_219ae4e5d:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae4de7:;
	};
}



inline jule::Ptr<_2088acb27_comptimeTypeInfos> _2089d613a_comptimeTypeInfos(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data14)) {
			_case_begin_219ae537b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088acb27_comptimeTypeInfos>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_219ae5b0c:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae5a96:;
	};
}



inline jule::Ptr<_2088ae596_comptimeTypeInfo> _2089d63c1_comptimeTypeInfo(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data15)) {
			_case_begin_219ae602a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088ae596_comptimeTypeInfo>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_219ae67ab:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae6745:;
	};
}



inline jule::Ptr<_2088a4bc9_comptimeStatics> _2089d6657_comptimeStatics(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data9)) {
			_case_begin_219ae7229:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a4bc9_comptimeStatics>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_219ae7438:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae73c2:;
	};
}



inline jule::Ptr<_2088a3425_comptimeStatic> _2089d68dd_comptimeStatic(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data8)) {
			_case_begin_219ae7ba8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088a3425_comptimeStatic>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_219ae812b:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae80b5:;
	};
}



inline jule::Ptr<_2088b569b_comptimeValue> _2089d6b74_comptimeValue(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data16)) {
			_case_begin_219ae8549:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088b569b_comptimeValue>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_219ae8cca:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae8c64:;
	};
}



inline jule::Ptr<_2088bdc8c_comptimeDecl> _2089d6e0a_comptimeDecl(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data20)) {
			_case_begin_219ae91e8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088bdc8c_comptimeDecl>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_219ae9979:;
			{
				return nullptr;;
			}
		}
		_match_end_219ae9913:;
	};
}



inline jule::Ptr<_2088bb99e_comptimeDecls> _2089d7191_comptimeDecls(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data19)) {
			_case_begin_219ae9d97:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088bb99e_comptimeDecls>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_219aea628:;
			{
				return nullptr;;
			}
		}
		_match_end_219aea5b2:;
	};
}



inline jule::Ptr<_2088b9d76_comptimeFile> _2089d7427_comptimeFile(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data18)) {
			_case_begin_219aeaa46:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088b9d76_comptimeFile>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_219aeb2c7:;
			{
				return nullptr;;
			}
		}
		_match_end_219aeb261:;
	};
}



inline jule::Ptr<_2088b8407_comptimeFiles> _2089d76ad_comptimeFiles(_2089ce661_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data17)) {
			_case_begin_219aeb6e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2088b8407_comptimeFiles>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_219aebe76:;
			{
				return nullptr;;
			}
		}
		_match_end_219aebe10:;
	};
}








inline jule::Bool _2089d7a65_TypeSym_eq(_2089d7a65_TypeSym *_self_, _2089d7a65_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _2089d7e1c_checked(_2089d7a65_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _2089d846c_Prim_eq(_2089d846c_Prim *_self_, _2089d846c_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _2089d87e1_Str(_2089d846c_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _2089d8b32_Equal(jule::Ptr<_2089d846c_Prim> _self_, jule::Ptr<_2089ce661_Type> _57118_other) {
	{
		auto &_match_expr{ (*(_57118_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)) {
			_case_begin_219aee033:;
			{
				return ((*(_self_))._field_Kind == (*((*(_57118_other))._field_Kind.cast_ptr<_2089d846c_Prim>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)))._field_Kind);;
			}
		}
		_match_end_219aedeab:;
	};
	return false;;
}



inline jule::Bool _2089d90c7_IsConstraint(_2089d846c_Prim* _self_) {
	return ((((!(_2089db937_IsStr(_self_))) && (!(_2089dbbbd_IsAny(_self_)))) && (!(_2089db6a1_IsBool(_self_)))) && (!(_20889d222_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _2089d935d_IsI8(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _2089d95e4_IsI16(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _2089d987a_IsI32(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _2089d9b11_IsI64(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _2089d9d97_IsU8(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _2089da12d_IsU16(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _2089da3b4_IsU32(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _2089da64a_IsU64(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _2089da8d1_IsF32(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _2089dab67_IsF64(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _2089daded_IsInt(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _2089db184_IsUint(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _2089db41a_IsUintptr(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _2089db6a1_IsBool(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _2089db937_IsStr(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _2089dbbbd_IsAny(_2089d846c_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _2089dbe98_Sptr_eq(_2089dbe98_Sptr *_self_, _2089dbe98_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _2089dc350_Str(_2089dbe98_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _2089cea5c_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2089dc691_Equal(jule::Ptr<_2089dbe98_Sptr> _self_, jule::Ptr<_2089ce661_Type> _64818_other) {
	{
		auto &_match_expr{ (*(_64818_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_219b0ce54:;
			{
				return _2089ced9d_Equal((*(_self_))._field_Elem, (*((*(_64818_other))._field_Kind.cast_ptr<_2089dbe98_Sptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)))._field_Elem);;
			}
		}
		_match_end_219b0cdcc:;
	};
	return false;;
}








inline jule::Bool _2089dc96b_Slc_eq(_2089dc96b_Slc *_self_, _2089dc96b_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _2089dce33_Str(_2089dc96b_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _2089cea5c_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2089dd274_Equal(jule::Ptr<_2089dc96b_Slc> _self_, jule::Ptr<_2089ce661_Type> _66718_other) {
	{
		auto &_match_expr{ (*(_66718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)) {
			_case_begin_219b0ed79:;
			{
				return _2089ced9d_Equal((*(_self_))._field_Elem, (*((*(_66718_other))._field_Kind.cast_ptr<_2089dc96b_Slc>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)))._field_Elem);;
			}
		}
		_match_end_219b0ed02:;
	};
	return false;;
}







inline jule::Str _2089dd917_Str(_2089dd560_Tuple* _self_) {
	_21e64c5b5_Builder _6847_s = static__21e64ce12_New(16LL);;
	({
		auto except = _21e64d84c_WriteByte(&_6847_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:685:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&_6847_s, _2089cea5c_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:686:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_219b12354:;
		if (it != expr_end) {
			jule::Ptr<_2089ce661_Type> *_68710_t = it;
			{
				({
					auto except = _21e64d84c_WriteByte(&_6847_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:688:4"));
				});
				({
					auto except = _21e64d594_WriteStr(&_6847_s, _2089cea5c_Str((*(_68710_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:689:4"));
					(except.result);
				});
			}
			_iter_next_219b12354:;
			++it;
			goto _iter_begin_219b12354;
		}
		_iter_end_219b12354:;
	};
	({
		auto except = _21e64d84c_WriteByte(&_6847_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:691:3"));
	});
	return _21e64de24_Str(&_6847_s);;
}



inline jule::Bool _2089ddc58_Equal(jule::Ptr<_2089dd560_Tuple> _self_, jule::Ptr<_2089ce661_Type> _69618_other) {
	{
		auto &_match_expr{ (*(_69618_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data25)) {
			_case_begin_219b13a70:;
			{
				jule::Ptr<_2089dd560_Tuple> _6994_tup = (*(_69618_other))._field_Kind.cast_ptr<_2089dd560_Tuple>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data25);;
				if (((*(_self_))._field_Types.len() != (*(_6994_tup))._field_Types.len())) {
					return false;;
				};
				jule::I64 _7038_i = 0LL;;
				for (; (_7038_i < (*(_self_))._field_Types.len()); (_7038_i)++) {
					{
						if ((!(_2089ced9d_Equal((*_self_.alloc)._field_Types[_7038_i], (*(_6994_tup))._field_Types[_7038_i])))) {
							return false;;
						};
					}
				_iter_next_219b1482e:;
				}
				_iter_end_219b1482e:;;
				return true;;
			}
		}
		_match_end_219b139e8:;
	};
	return false;;
}








inline jule::Bool _2089de110_Map_eq(_2089de110_Map *_self_, _2089de110_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _2089de4b7_Str(_2089de110_Map* _self_) {
	_21e64c5b5_Builder _7247_s = static__21e64ce12_New(16LL);;
	({
		auto except = _21e64d594_WriteStr(&_7247_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:725:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_7247_s, _2089cea5c_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:726:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&_7247_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:727:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&_7247_s, _2089cea5c_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:728:3"));
		(except.result);
	});
	return _21e64de24_Str(&_7247_s);;
}



inline jule::Bool _2089de808_Equal(jule::Ptr<_2089de110_Map> _self_, jule::Ptr<_2089ce661_Type> _73318_other) {
	{
		auto &_match_expr{ (*(_73318_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data26)) {
			_case_begin_219b18998:;
			{
				jule::Ptr<_2089de110_Map> _7364_m = (*(_73318_other))._field_Kind.cast_ptr<_2089de110_Map>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data26);;
				return (_2089ced9d_Equal((*(_self_))._field_Key, (*(_7364_m))._field_Key) && _2089ced9d_Equal((*_self_.alloc)._field_Val, (*_7364_m.alloc)._field_Val));;
			}
		}
		_match_end_219b18921:;
	};
	return false;;
}








inline jule::Bool _2089dec8c_Arr_eq(_2089dec8c_Arr *_self_, _2089dec8c_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _2089e0144_Str(_2089dec8c_Arr* _self_) {
	_21e64c5b5_Builder _7537_s = static__21e64ce12_New(16LL);;
	({
		auto except = _21e64d84c_WriteByte(&_7537_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:754:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&_7537_s, _21ec9e60c_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:755:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&_7537_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:756:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&_7537_s, _2089cea5c_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:757:3"));
		(except.result);
	});
	return _21e64de24_Str(&_7537_s);;
}



inline jule::Bool _2089e0485_Equal(jule::Ptr<_2089dec8c_Arr> _self_, jule::Ptr<_2089ce661_Type> _76218_other) {
	{
		auto &_match_expr{ (*(_76218_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data27)) {
			_case_begin_219b1c6a0:;
			{
				jule::Ptr<_2089dec8c_Arr> _7654_arr = (*(_76218_other))._field_Kind.cast_ptr<_2089dec8c_Arr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data27);;
				return (((*(_self_))._field_N == (*(_7654_arr))._field_N) && _2089ced9d_Equal((*_self_.alloc)._field_Elem, (*_7654_arr.alloc)._field_Elem));;
			}
		}
		_match_end_219b1c628:;
	};
	return false;;
}








inline jule::Bool _2089e0760_Ptr_eq(_2089e0760_Ptr *_self_, _2089e0760_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _2089e0b17_Str(_2089e0760_Ptr* _self_) {
	if (_2089e12cc_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _2089cea5c_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2089e0e58_Equal(jule::Ptr<_2089e0760_Ptr> _self_, jule::Ptr<_2089ce661_Type> _78718_other) {
	{
		auto &_match_expr{ (*(_78718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data28)) {
			_case_begin_219b203a6:;
			{
				jule::Ptr<_2089e0760_Ptr> _7904_ptr = (*(_78718_other))._field_Kind.cast_ptr<_2089e0760_Ptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data28);;
				{
					
					if (_2089e12cc_IsUnsafe(_self_.ptr())) {
						_case_begin_219b21363:;
						{
							return _2089e12cc_IsUnsafe(_7904_ptr.ptr());;
						}
					}
					else if (_2089e12cc_IsUnsafe(_7904_ptr.ptr())) {
						_case_begin_219b21770:;
						{
							return _2089e12cc_IsUnsafe(_self_.ptr());;
						}
					}
					else {
						_case_begin_219b212ec:;
						{
							return _2089ced9d_Equal((*_self_.alloc)._field_Elem, (*_7904_ptr.alloc)._field_Elem);;
						}
					}
					_match_end_219b21275:;
				};
			}
		}
		_match_end_219b2032e:;
	};
	return false;;
}



inline jule::Bool _2089e12cc_IsUnsafe(_2089e0760_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _2089e1761_referencer_eq(_2089e1761_referencer *_self_, _2089e1761_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _2089e2ed2_pushErr(_2089e2751_typeChecker* _self_, jule::Ptr<_208711827_Token> _88123_token, jule::Str _88145_fmt, jule::Slice<jule::Any> _88165_args) {
	_20892d659_pushErr((*(_self_))._field_s.ptr(), _88123_token, _88145_fmt, _88165_args);
}



inline void _2089e31d0_allowBuiltin(_2089e2751_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _2089e33cd_disallowBuiltin(_2089e2751_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _219b2607c_pushReference(_2089e2751_typeChecker* _self_, jule::Ptr<_2087490bd_StructIns>* _89337_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_2196e1076_Exist((*(_self_))._field_refers.ptr(), (*(_89337_t)))) {
		return;;
	};
	_2088ebd20_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_89337_t)), &__jule_any_type64));
}

inline void _219b28920_pushReference(_2089e2751_typeChecker* _self_, jule::Ptr<_2088299c8_Trait>* _89337_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_219b2a603_Exist((*(_self_))._field_refers.ptr(), (*(_89337_t)))) {
		return;;
	};
	_2088ebd20_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_89337_t)), &__jule_any_type11));
}



inline void _2089e393e_pushReferenceByKind(_2089e2751_typeChecker* _self_, jule::Ptr<_2089ce661_Type>* _90340_k) {
	{
		
		if ((_2089d3ce7_Struct((*(_90340_k)).ptr()) != nullptr)) {
			_case_begin_219b24b91:;
			{
				jule::Ptr<_2087490bd_StructIns> _9068_t = _2089d3ce7_Struct((*(_90340_k)).ptr());;
				_219b2607c_pushReference(_self_, &(_9068_t));
			}
		}
		else if ((_2089d4314_Trait((*(_90340_k)).ptr()) != nullptr)) {
			_case_begin_219b24c3a:;
			{
				jule::Ptr<_2088299c8_Trait> _9098_t = _2089d4314_Trait((*(_90340_k)).ptr());;
				_219b28920_pushReference(_self_, &(_9098_t));
			}
		}
		_match_end_219b24a70:;
	};
}



inline void _2089e3d5c_pushCycleError(_2089e2751_typeChecker* _self_, jule::Any _91426_def1, jule::Any _91437_def2, _21e64c5b5_Builder* _91453_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _9163_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon219b2c8d0, nullptr, nullptr);;
	jule::Str _9263_m = _21e64de24_Str(_91453_message);;
	jule::Str _9273_def1Ident = _9163_getIdent(&(_91426_def1));;
	jule::Str _9283_def2Ident = _9163_getIdent(&(_91437_def2));;
	jule::Str _9293_refersTo = _21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9273_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_9283_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _21e64d594_WriteStr(_91453_message, _220c5bc8e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:930:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_91453_message, _9293_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:931:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_91453_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:932:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_91453_message, _9263_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:933:3"));
		(except.result);
	});
}



inline jule::Bool _2089e4258_checkCrossCycle(_2089e2751_typeChecker* _self_, jule::Any _93627_decl, _21e64c5b5_Builder* _93643_message) {
	{
		auto &_match_expr{ _93627_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_219b31bae:;
			{
				jule::Ptr<_2089cd94b_TypeAlias> _9394_ta = _93627_decl.unsafe_cast_ptr<_2089cd94b_TypeAlias>();;
				{
					auto expr = &((*(_9394_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219b32ae4:;
					if (it != expr_end) {
						jule::Any *_94011_d = it;
						{
							{
								
								if (((*(_94011_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_219b33485:;
									{
										_2089e3d5c_pushCycleError(_self_, jule::Any(_9394_ta, &__jule_any_type8), (*(_94011_d)), _93643_message);
										return false;;
									}
								}
								else if ((!(_2089e4258_checkCrossCycle(_self_, (*(_94011_d)), _93643_message)))) {
									_case_begin_219b3351d:;
									{
										_2089e3d5c_pushCycleError(_self_, jule::Any(_9394_ta, &__jule_any_type8), (*(_94011_d)), _93643_message);
										return false;;
									}
								}
								_match_end_219b33375:;
							};
						}
						_iter_next_219b32ae4:;
						++it;
						goto _iter_begin_219b32ae4;
					}
					_iter_end_219b32ae4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_219b31a16:;
			{
				jule::Ptr<_208746230_Struct> _9514_s = _93627_decl.unsafe_cast_ptr<_208746230_Struct>();;
				{
					auto expr = &((*(_9514_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219b34e37:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> *_95211_d = it;
						{
							{
								
								if ((jule::Any((*(_95211_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_219b35795:;
									{
										_2089e3d5c_pushCycleError(_self_, jule::Any(_9514_s, &__jule_any_type9), jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message);
										return false;;
									}
								}
								else if ((!(_2089e4258_checkCrossCycle(_self_, jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message)))) {
									_case_begin_219b3582d:;
									{
										_2089e3d5c_pushCycleError(_self_, jule::Any(_9514_s, &__jule_any_type9), jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message);
										return false;;
									}
								}
								_match_end_219b35685:;
							};
						}
						_iter_next_219b34e37:;
						++it;
						goto _iter_begin_219b34e37;
					}
					_iter_end_219b34e37:;
				};
			}
		}
		_match_end_219b31b48:;
	};
	return true;;
}



inline jule::Bool _2089e4654_checkIllegalCycles(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _97035_ident, jule::Any _97067_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _97067_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_219b37a61:;
			{
				if ((*(_97067_decl.unsafe_cast_ptr<_208746230_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_219b37951:;
			{
				if ((*(_97067_decl.unsafe_cast_ptr<_2089cd94b_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_219b35487:;
	};
	if ((_97067_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_2089e2ed2_pushErr(_self_, (*((*(_97035_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_referencer.alloc)._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21e64c5b5_Builder _9937_message = static__21e64ce12_New(32LL);;
	if ((!(_2089e4258_checkCrossCycle(_self_, _97067_decl, &(_9937_message))))) {
		jule::Str _9968_errMsg = _21e64de24_Str(&_9937_message);;
		_21e64e122_Clear(&_9937_message);
		_2089e3d5c_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _97067_decl, &(_9937_message));
		_9968_errMsg+=_21e64de24_Str(&_9937_message);
		_2089e2ed2_pushErr(_self_, (*((*(_97035_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9968_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_219b3c69d:;
			{
				{
					(*((*((*(_self_))._field_referencer))._field_refs))=jule::append((*((*(*(_self_))._field_referencer.alloc)._field_refs)),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _97067_decl; __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_219b3ad83:;
			{
				{
					auto &_match_expr{ _97067_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_219b3d0b6:;
						{
							jule::Ptr<_208746230_Struct> _10129_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_208746230_Struct>();;
							(*(_10129_s))._field_Depends=jule::append((*_10129_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_208746230_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _97067_decl.unsafe_cast_ptr<_208746230_Struct>(); __jule_collection; }));
						}
					}
					_match_end_219b3d050:;
				};
			}
		}
		_match_end_219b3c626:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _2089e4a50_fromTypeAlias(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _102034_decl, jule::Ptr<_2089cd94b_TypeAlias>* _102066_ta) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102066_ta))))._field_Public, (*((*(_102066_ta))))._field_Token)))) {
		_2089e2ed2_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_102066_ta))))._field_Used=true;
	if (((*((*(_102034_decl))))._field_Generics.len() > 0LL)) {
		_2089e2ed2_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_219b433a7:;
			if (it != expr_end) {
				jule::Ptr<_2089cd94b_TypeAlias> _103711_bg = *it;
				{
					if (((_103711_bg == (*(_102066_ta))) || (((*((*((*(_102066_ta))))._field_TypeSym))._field_Type != nullptr) && _2089ced9d_Equal((*(*((*(_102066_ta))))._field_TypeSym.alloc)._field_Type, (*(*(_103711_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_219b433a7;
					};
				}
				_iter_next_219b433a7:;
				++it;
				goto _iter_begin_219b433a7;
			}
			_iter_end_219b433a7:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_219b456a6:;
			if (it != expr_end) {
				jule::Ptr<_2089cd94b_TypeAlias> _104811_bg = *it;
				{
					if ((_104811_bg == (*(_102066_ta)))) {
						_2089e2ed2_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_102066_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_219b46113:;
						if (it != expr_end) {
							jule::Ptr<_2089cd94b_TypeAlias> _105312_dg = *it;
							{
								if ((_104811_bg == _105312_dg)) {
									_2089e2ed2_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_219b46113:;
							++it;
							goto _iter_begin_219b46113;
						}
						_iter_end_219b46113:;
					};
				}
				_iter_next_219b456a6:;
				++it;
				goto _iter_begin_219b456a6;
			}
			_iter_end_219b456a6:;
		};
	};
	if (((*((*((*(_102066_ta))))._field_TypeSym))._field_Type == nullptr)) {
		jule::Bool _10644_ok = _20893abc7_checkTypeAliasDecl((*(_self_))._field_s, _102066_ta, (*(_self_))._field_lookup);;
		if ((!(_10644_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_102066_ta))))._field_Strict && (((*((*(_self_))._field_s))._field_step & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)))) {
		jule::Ptr<_2087490bd_StructIns> _10728_s = _2089d407d_softStruct((*((*((*(_102066_ta))))._field_TypeSym))._field_Type.ptr());;
		if ((!((*(_10728_s))._field_Checked))) {
			jule::Bool _10745_ok = _2089e5b3e_checkStructIns(_self_, &(_10728_s), &((*((*(_102034_decl))))._field_Token));;
			if ((!(_10745_ok))) {
				return nullptr;;
			};
		};
	};
	{
		jule::Ptr<_2087490bd_StructIns> _10828_s = _2089d3ce7_Struct((*((*((*(_102066_ta))))._field_TypeSym))._field_Type.ptr());;
		if ((_10828_s != nullptr)) {
			jule::Bool _10845_ok = _2089e4654_checkIllegalCycles(_self_, _102034_decl, jule::Any((*_10828_s.alloc)._field_Decl, &__jule_any_type9));;
			if ((!(_10845_ok))) {
				return nullptr;;
			};
		};
	};
	if (((*((*(_102066_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_102066_ta)); __jule_collection; }));
	};
	jule::Ptr<_2089ce661_Type> _10977_tk = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=(*((*(_102066_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*((*((*((*(_102066_ta))))._field_TypeSym))._field_Type))._field_Kind});;
	_2089e393e_pushReferenceByKind(_self_, &(_10977_tk));
	return jule::Trait(_10977_tk, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data21);;
}



inline jule::Ptr<_20882c17e_Enum> _2089e4e4b_fromEnum(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _110525_decl, jule::Ptr<_20882c17e_Enum>* _110557_e) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_110557_e))))._field_Public, (*((*(_110557_e))))._field_Token)))) {
		_2089e2ed2_pushErr(_self_, (*((*(_110525_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_110525_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_110525_decl))))._field_Generics.len() > 0LL)) {
		_2089e2ed2_pushErr(_self_, (*((*(_110525_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_110525_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_110557_e));;
}



inline jule::Ptr<_20882d889_TypeEnum> _2089e5347_fromTypeEnum(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _111729_decl, jule::Ptr<_20882d889_TypeEnum>* _111761_e) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_111761_e))))._field_Public, (*((*(_111761_e))))._field_Token)))) {
		_2089e2ed2_pushErr(_self_, (*((*(_111729_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111729_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_111729_decl))))._field_Generics.len() > 0LL)) {
		_2089e2ed2_pushErr(_self_, (*((*(_111729_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111729_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_111761_e));;
}



inline jule::Ptr<_2088299c8_Trait> _2089e5743_fromTrait(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _112926_decl, jule::Ptr<_2088299c8_Trait>* _112958_t) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_112958_t))))._field_Public, (*((*(_112958_t))))._field_Token)))) {
		_2089e2ed2_pushErr(_self_, (*((*(_112926_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_112926_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_112926_decl))))._field_Generics.len() > 0LL)) {
		_2089e2ed2_pushErr(_self_, (*((*(_112926_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_112926_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_219b28920_pushReference(_self_, _112958_t);
	return (*(_112958_t));;
}



inline jule::Bool _2089e5b3e_checkStructIns(_2089e2751_typeChecker* _self_, jule::Ptr<_2087490bd_StructIns>* _114235_ins, jule::Ptr<_208711827_Token>* _114257_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_114235_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_114235_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_114235_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_208946d9d_precheckStructIns((*(_self_))._field_s, _114235_ins, (*(_114257_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_114235_ins))))._field_Generics.len() > 0LL)) {
		_208947156_checkStructIns((*(_self_))._field_s, _114235_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _2089e5de7_appendUsedStructReference(_2089e2751_typeChecker* _self_, jule::Ptr<_208746230_Struct>* _116246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_219b5c811:;
			{
				jule::Ptr<_208746230_Struct> _11688_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_208746230_Struct>();;
				if ((!(_208747b9e_IsUses(_11688_refS.ptr(), (*(_116246_s)))))) {
					(*_11688_refS.alloc)._field_Uses=jule::append((*_11688_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_208746230_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_116246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_219b5c79a:;
	};
}



inline jule::Ptr<_2087490bd_StructIns> _2089e62e3_buildStructInstance(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _117540_decl, jule::Ptr<_208746230_Struct>* _117572_s) {
	jule::Ptr<_2089e1761_referencer> _11777_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> _11797_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
				_case_begin_219b6078c:;
				{
					jule::Ptr<_2088d3169_scopeChecker> _11869_sc = (*(_self_))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1);;
					jule::Ptr<_2088d3169_scopeChecker> _11879_hard = _2088d67cc_getHardRoot(_11869_sc);;
					if ((((*((*(_11879_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_11879_hard))._field_owner))._field_Owner))._field_Decl != (*(_117572_s))))) {
						goto _match_end_219b60726;
					};
					jule::I64 _11915_n = ((*((*(_11879_hard))._field_owner))._field_Generics.len() + (*((*(*(_11879_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11879_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11915_n);
				}
			}
			_match_end_219b60726:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _12017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_2087490bd_StructIns> _12057_ins = _20874664d_instance((*(_117572_s)));;
	(*(_12057_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(0LL, (*((*(_117540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089ccc7a_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_117540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219b6595c:;
		if (it != expr_end) {
			jule::Ptr<_208727343_TypeDecl> _120715_g = *it;
			{
				jule::Ptr<_2089ce661_Type> _12088_kind = _2089e9eea_build(_self_, &((*(_120715_g))._field_Kind));;
				if ((_12088_kind == nullptr)) {
					return nullptr;;
				};
				(*_12057_ins.alloc)._field_Generics=jule::append((*_12057_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=_12088_kind, ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_219b6595c:;
			++it;
			goto _iter_begin_219b6595c;
		}
		_iter_end_219b6595c:;
	};
	(*(_self_))._field_lookup=_12017_lookup;
	(*(_self_))._field_bannedGenerics=_11797_bannedGenerics;
	(*(_self_))._field_referencer=_11777_referencer;
	return _12057_ins;;
}



inline jule::Ptr<_2087490bd_StructIns> _2089e66de_fromStructIns(_2089e2751_typeChecker* _self_, jule::Ptr<_2087490bd_StructIns>* _122334_ins, jule::Ptr<_208711827_Token> _122355_token) {
	jule::Ptr<_2087490bd_StructIns> _12247_existInstance = _20874698e_appendInstance((*((*(_122334_ins))))._field_Decl.ptr(), _122334_ins);;
	if ((_12247_existInstance != nullptr)) {
		if ((!(_2089385cb_checkConstraintsStruct((*(_self_))._field_s, _122334_ins, &(_122355_token), _12247_existInstance)))) {
			return nullptr;;
		};
		_219b2607c_pushReference(_self_, &(_12247_existInstance));
		return _12247_existInstance;;
	};
	if ((!(_2089e5b3e_checkStructIns(_self_, _122334_ins, &(_122355_token))))) {
		return nullptr;;
	};
	_219b2607c_pushReference(_self_, _122334_ins);
	return (*(_122334_ins));;
}



inline jule::Ptr<_2087490bd_StructIns> _2089e6ada_fromStruct(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _124131_decl, jule::Ptr<_208746230_Struct>* _124163_s) {
	if ((!(_20892ddb8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_124163_s))))._field_Public, (*((*(_124163_s))))._field_Token)))) {
		_2089e2ed2_pushErr(_self_, (*((*(_124131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124131_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_124131_decl))))._field_Generics.len() > 0LL)) {
			_2089e2ed2_pushErr(_self_, (*((*(_124131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_2087490bd_StructIns>(_2087490bd_StructIns{._field_Source=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Checked=false, ._field_Decl=(*(_124163_s)), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_208748496_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_20881e2b4_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr)});;
	};
	jule::Bool _12597_ok = _2089e4654_checkIllegalCycles(_self_, _124131_decl, jule::Any((*(_124163_s)), &__jule_any_type9));;
	if ((!(_12597_ok))) {
		return nullptr;;
	};
	_2089e5de7_appendUsedStructReference(_self_, _124163_s);
	jule::Ptr<_2087490bd_StructIns> _12657_ins = _2089e62e3_buildStructInstance(_self_, _124131_decl, _124163_s);;
	if ((_12657_ins == nullptr)) {
		return nullptr;;
	};
	_12597_ok=_20892eb88_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_12657_ins))._field_Decl))._field_Generics.len(), (*_12657_ins.alloc)._field_Generics.len(), (*((*(_124131_decl))))._field_Token);
	if ((!(_12597_ok))) {
		return nullptr;;
	};
	return _2089e66de_fromStructIns(_self_, &(_12657_ins), (*((*(_124131_decl))))._field_Token);;
}



inline jule::Trait _2089e6e2b_getDef(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl>* _128527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219b70d1e:;
		if (it != expr_end) {
			jule::Ptr<_20873454d_GenericDecl> _128610_g = *it;
			{
				if (((*(_128610_g))._field_Ident == (*((*(_128527_decl))))._field_Ident)) {
					return jule::Trait(_2089ec261_buildPrimType((*_128610_g.alloc)._field_Ident), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22);;
				};
			}
			_iter_next_219b70d1e:;
			++it;
			goto _iter_begin_219b70d1e;
		}
		_iter_end_219b70d1e:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219b711b5:;
		if (it != expr_end) {
			jule::Ptr<_2089cd94b_TypeAlias> _129215_g = *it;
			{
				if (((*(_129215_g))._field_Ident == (*((*(_128527_decl))))._field_Ident)) {
					if (((*((*(_128527_decl))))._field_Generics.len() > 0LL)) {
						_2089e2ed2_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128527_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_2087490bd_StructIns> _12989_st = _2089d3ce7_Struct((*((*_129215_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12989_st != nullptr)) {
						jule::Bool _13006_ok = _2089e4654_checkIllegalCycles(_self_, _128527_decl, jule::Any((*_12989_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_13006_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_129215_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_219b711b5:;
			++it;
			goto _iter_begin_219b711b5;
		}
		_iter_end_219b711b5:;
	};
	if ((!((*((*(_128527_decl))))._field_Binded))) {
		jule::Ptr<_20882c17e_Enum> _13108_e = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_208a00088_FindEnum((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13108_e != nullptr)) {
			return jule::Trait(_2089e4e4b_fromEnum(_self_, _128527_decl, &(_13108_e)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data3);;
		};
		jule::Ptr<_20882d889_TypeEnum> _13158_te = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_208a003c9_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13158_te != nullptr)) {
			return jule::Trait(_2089e5347_fromTypeEnum(_self_, _128527_decl, &(_13158_te)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data4);;
		};
		jule::Ptr<_2088299c8_Trait> _13208_t = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089eec47_FindTrait((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13208_t != nullptr)) {
			return jule::Trait(_2089e5743_fromTrait(_self_, _128527_decl, &(_13208_t)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_2089e2ed2_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_208746230_Struct> _13297_s = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089ee50a_FindStruct((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident, (*((*(_128527_decl))))._field_Binded);;
	if ((_13297_s != nullptr)) {
		return jule::Trait(_2089e6ada_fromStruct(_self_, _128527_decl, &(_13297_s)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
	};
	jule::Ptr<_2089cd94b_TypeAlias> _13347_ta = ((_208a0052d_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_2089ee10e_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident, (*((*(_128527_decl))))._field_Binded);;
	if (((_13347_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_13347_ta=_208a56c38_findBuiltinTypeAlias((*((*(_128527_decl))))._field_Ident);
	};
	if ((_13347_ta != nullptr)) {
		return _2089e4a50_fromTypeAlias(_self_, _128527_decl, &(_13347_ta));;
	};
	_2089e2ed2_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128527_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _2089e726c_buildIdent(_2089e2751_typeChecker* _self_, jule::Ptr<_20872794d_IdentTypeDecl> _134630_decl) {
	return _2089e6e2b_getDef(_self_, &(_134630_decl));;
}



inline jule::Trait _2089e75ad_buildSubIdent(_2089e2751_typeChecker* _self_, jule::Ptr<_208727c17_SubIdentTypeDecl> _135033_decl) {
	jule::Trait _13517_ident = _2089e726c_buildIdent(_self_, (*(_135033_decl))._field_Idents[0LL]);;
	if ((_13517_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13517_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data4)) {
			_case_begin_219b7e9dc:;
			{
				goto _match_end_219b7e536;
			}
		}
		else {
			_case_begin_219b7e03b:;
			{
				_2089e2ed2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219b7e536:;
	};
	jule::Ptr<_20882d889_TypeEnum> _13627_t = _13517_ident.cast_ptr<_20882d889_TypeEnum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>> _13637_idents = (*_135033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13637_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219b80ba8:;
		if (it != expr_end) {
			jule::I64 _13647_i = it - expr->begin();
			jule::Ptr<_20872794d_IdentTypeDecl> _136410_id = *it;
			{
				jule::Ptr<_20882d2b2_TypeEnumItem> _13658_item = _20882e47d_FindItem(_13627_t.ptr(), (*(_136410_id))._field_Ident);;
				if ((_13658_item == nullptr)) {
					_2089e2ed2_pushErr(_self_, (*_136410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13627_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_136410_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_13637_idents.len() - _13647_i) == 1LL)) {
					_2089e393e_pushReferenceByKind(_self_, &((*((*(_13658_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_13658_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data21);;
				};
				_13627_t=_2089d32ad_TypeEnum((*((*(_13658_item))._field_TypeSym))._field_Type.ptr());
				if ((_13627_t == nullptr)) {
					_2089e2ed2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_219b80ba8:;
			++it;
			_13647_i++;
			goto _iter_begin_219b80ba8;
		}
		_iter_end_219b80ba8:;
	};
	return nullptr;;
}



inline jule::Ptr<_2089dbe98_Sptr> _2089e78ee_buildSptrFromType(_2089e2751_typeChecker* _self_, jule::Ptr<_2089ce661_Type>* _138438_elem) {
	{
		
		if (((*(_138438_elem)) == nullptr)) {
			_case_begin_219b84c67:;
			{
				return nullptr;;
			}
		}
		else if (((_2089d3544_Arr((*(_138438_elem)).ptr()) != nullptr) && (*(_2089d3544_Arr((*(_138438_elem)).ptr())))._field_Auto)) {
			_case_begin_219b84d11:;
			{
				_2089e2ed2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219b84b57:;
	};
	return jule::new_ptr<_2089dbe98_Sptr>(_2089dbe98_Sptr{._field_Elem=(*(_138438_elem))});;
}



inline jule::Ptr<_2089dbe98_Sptr> _2089e7c40_buildSptr(_2089e2751_typeChecker* _self_, jule::Ptr<_2087283dd_SptrTypeDecl> _139829_decl) {
	jule::Bool _13993_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13993_cycleRisk;
	});;
	jule::Ptr<_2089ce661_Type> _14037_elem = _2089ea33b_checkDecl(_self_, &((*(_139829_decl))._field_Elem));;
	return _2089e78ee_buildSptrFromType(_self_, &(_14037_elem));;
}



inline jule::Ptr<_2089e0760_Ptr> _2089e8081_buildPtrFromType(_2089e2751_typeChecker* _self_, jule::Ptr<_2089ce661_Type>* _140737_elem) {
	{
		
		if (((*(_140737_elem)) == nullptr)) {
			_case_begin_219b88be4:;
			{
				return nullptr;;
			}
		}
		else if (((_2089d3544_Arr((*(_140737_elem)).ptr()) != nullptr) && (*(_2089d3544_Arr((*(_140737_elem)).ptr())))._field_Auto)) {
			_case_begin_219b88c8d:;
			{
				_2089e2ed2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_2089e0760_Ptr>(_2089e0760_Ptr{._field_Elem=jule::Ptr<_2089ce661_Type>(nullptr)});;
			}
		}
		_match_end_219b88ae5:;
	};
	return jule::new_ptr<_2089e0760_Ptr>(_2089e0760_Ptr{._field_Elem=(*(_140737_elem))});;
}



inline jule::Ptr<_2089e0760_Ptr> _2089e83c2_buildPtr(_2089e2751_typeChecker* _self_, jule::Ptr<_208728d6c_PtrTypeDecl> _142228_decl) {
	jule::Bool _14233_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14233_cycleRisk;
	});;
	jule::Ptr<_2089ce661_Type> _14277_elem = static_cast<jule::Ptr<_2089ce661_Type>>(nullptr);;
	if ((!(_208729213_IsUnsafe(_142228_decl.ptr())))) {
		_14277_elem=_2089ea33b_checkDecl(_self_, &((*_142228_decl.alloc)._field_Elem));
		return _2089e8081_buildPtrFromType(_self_, &(_14277_elem));;
	};
	return jule::new_ptr<_2089e0760_Ptr>(_2089e0760_Ptr{._field_Elem=_14277_elem});;
}



inline jule::Ptr<_2089dc96b_Slc> _2089e8713_buildSlc(_2089e2751_typeChecker* _self_, jule::Ptr<_208728773_SlcTypeDecl> _143928_decl) {
	jule::Bool _14403_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14403_cycleRisk;
	});;
	jule::Ptr<_2089ce661_Type> _14447_elem = _2089ea33b_checkDecl(_self_, &((*(_143928_decl))._field_Elem));;
	{
		
		if ((_14447_elem == nullptr)) {
			_case_begin_219b8de91:;
			{
				return nullptr;;
			}
		}
		else if (((_2089d3544_Arr(_14447_elem.ptr()) != nullptr) && (*(_2089d3544_Arr(_14447_elem)))._field_Auto)) {
			_case_begin_219b8e007:;
			{
				_2089e2ed2_pushErr(_self_, (*((*_143928_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219b8de2a:;
	};
	return jule::new_ptr<_2089dc96b_Slc>(_2089dc96b_Slc{._field_Elem=_14447_elem});;
}



inline jule::Ptr<_2089dec8c_Arr> _2089e8a54_buildArr(_2089e2751_typeChecker* _self_, jule::Ptr<_20872960e_ArrTypeDecl> _146028_decl) {
	jule::I64 _14617_n = 0LL;;
	if ((!(_2087299a5_AutoSized(_146028_decl.ptr())))) {
		jule::Ptr<_20899a9a1_Data> _14648_size = _2089bc5d8_evalExpr(_20893552e_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_146028_decl.alloc)._field_Size);;
		if ((_14648_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_20899b3db_IsConst(_14648_size.ptr())))) {
			_2089e2ed2_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_2089d2774_Prim((*(_14648_size))._field_Type.ptr()) == nullptr) || (!(_20889cb4a_IsInt((*(_2089d2774_Prim((*(_14648_size))._field_Type.ptr())))._field_Kind))))) {
			_2089e2ed2_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14617_n=static_cast<jule::I64>(_208807dd5_AsI64((*(_14648_size))._field_Constant.ptr()));
		if ((_14617_n < 0LL)) {
			_2089e2ed2_pushErr(_self_, (*((*_146028_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14825_max = _20889aab0_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_208893ab9_BitSize != 64LL) && (static_cast<jule::I64>(_14617_n) > _14825_max))) {
				_2089e2ed2_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089ca508_constoa(&((*_14648_size.alloc)._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_21ec9e343_FmtInt(_14825_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_2089ce661_Type> _14917_elem = _2089ea33b_checkDecl(_self_, &((*(_146028_decl))._field_Elem));;
	{
		
		if ((_14917_elem == nullptr)) {
			_case_begin_219b9909a:;
			{
				return nullptr;;
			}
		}
		else if (((_2089d3544_Arr(_14917_elem.ptr()) != nullptr) && (*(_2089d3544_Arr(_14917_elem)))._field_Auto)) {
			_case_begin_219b99133:;
			{
				_2089e2ed2_pushErr(_self_, (*((*_146028_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219b975b5:;
	};
	return jule::new_ptr<_2089dec8c_Arr>(_2089dec8c_Arr{._field_Auto=_2087299a5_AutoSized(_146028_decl), ._field_N=_14617_n, ._field_Elem=_14917_elem});;
}



inline jule::Ptr<_2089de110_Map> _2089e8d95_buildMap(_2089e2751_typeChecker* _self_, jule::Ptr<_208729d5c_MapTypeDecl> _150928_decl) {
	jule::Bool _15103_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15103_cycleRisk;
	});;
	jule::Ptr<_2089ce661_Type> _15147_key = _2089ea33b_checkDecl(_self_, &((*(_150928_decl))._field_Key));;
	if ((_15147_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2089ce661_Type> _15197_val = _2089ea33b_checkDecl(_self_, &((*_150928_decl.alloc)._field_Val));;
	if ((_15197_val == nullptr)) {
		return nullptr;;
	};
	if ((_2089d3027_Enum(_15197_val.ptr()) != nullptr)) {
		_2089e2ed2_pushErr(_self_, (*((*_150928_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_208746230_Struct> _15288_s = _2083e35d6_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_2089e5de7_appendUsedStructReference(_self_, &(_15288_s));
		jule::Ptr<_2087490bd_StructIns> _15308_ins = _20874664d_instance(_15288_s);;
		(*(_15308_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=_15147_key, ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=_15197_val, ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); __jule_collection; });
		_2089e66de_fromStructIns(_self_, &(_15308_ins), (*((*_150928_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_2089de110_Map>(_2089de110_Map{._field_Key=_15147_key, ._field_Val=_15197_val});;
}



inline jule::Ptr<_2089dd560_Tuple> _2089e91d6_buildTuple(_2089e2751_typeChecker* _self_, jule::Ptr<_208728a70_TupleTypeDecl> _154130_decl) {
	jule::Slice<jule::Ptr<_2089ce661_Type>> _15427_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(0LL, (*(_154130_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089ce661_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_154130_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219ba3208:;
		if (it != expr_end) {
			jule::Ptr<_208727343_TypeDecl> _154315_t = *it;
			{
				jule::Ptr<_2089ce661_Type> _15448_kind = _2089ea33b_checkDecl(_self_, &(_154315_t));;
				if ((_15448_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_2089ce661_Type>> &__jule_push_dest = _15427_types; __jule_push_dest.push(_15448_kind); };
			}
			_iter_next_219ba3208:;
			++it;
			goto _iter_begin_219ba3208;
		}
		_iter_end_219ba3208:;
	};
	return jule::new_ptr<_2089dd560_Tuple>(_2089dd560_Tuple{._field_Types=_15427_types});;
}



inline jule::Bool _2089e9527_checkFuncTypes(_2089e2751_typeChecker* _self_, jule::Ptr<_208822372_FnIns>* _155435_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_155435_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219ba4c21:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> _155515_p = *it;
			{
				(*(_155515_p))._field_Type=_2089e9eea_build(_self_, &((*((*((*((*_155515_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_155515_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_20893917b_checkFnParamKind((*(_self_))._field_s, &(_155515_p));
			}
			_iter_next_219ba4c21:;
			++it;
			goto _iter_begin_219ba4c21;
		}
		_iter_end_219ba4c21:;
	};
	if ((!(_20881e76a_IsVoid((*((*(_155435_f))))._field_Decl.ptr())))) {
		(*((*(_155435_f))))._field_Result=_2089e9eea_build(_self_, &((*((*((*((*(*((*(_155435_f))))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_155435_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_208822372_FnIns> _2089e9868_buildFunc(_2089e2751_typeChecker* _self_, jule::Ptr<_2087390d0_FnDecl> _157229_decl) {
	jule::Bool _15733_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15733_cycleRisk;
	});;
	if (((*(_157229_decl))._field_Generics.len() > 0LL)) {
		_2089e2ed2_pushErr(_self_, (*_157229_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20881e2b4_Fn> _15827_f = _2088ee493_buildFunc(_157229_decl);;
	jule::I64 _15843_n = (*((*(_self_))._field_s))._field_errors.len();;
	_208943509_checkAnonFuncDecl((*(_self_))._field_s, &(_15827_f));
	if ((_15843_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_208822372_FnIns> _15907_ins = _2088207c1_instanceForce(_15827_f);;
	(*(_15907_ins))._field_Anon=true;
	(*_15907_ins.alloc)._field_AsAnon=true;
	jule::Bool _15943_ok = _2089e9527_checkFuncTypes(_self_, &(_15907_ins));;
	if ((!(_15943_ok))) {
		return nullptr;;
	};
	return _15907_ins;;
}



inline jule::Trait _2089e9ba9_buildNamespace(_2089e2751_typeChecker* _self_, jule::Ptr<_2087280e1_NamespaceTypeDecl> _160234_ns) {
	jule::Ptr<_20890d040_ImportInfo> _16037_imp = _2089cc087_findNamespace((*(_self_))._field_lookup, (*((*(_160234_ns))._field_Namespace))._field_Kind);;
	if (((_16037_imp == nullptr) || (!(_2089104d7_isLookupable(_16037_imp.ptr()))))) {
		_2089e2ed2_pushErr(_self_, (*_160234_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_160234_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_2089e33cd_disallowBuiltin(_self_);
	jule::Trait _16107_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_16037_imp, (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data2);
	jule::Ptr<_2089ce661_Type> _16127_kind = _2089ea33b_checkDecl(_self_, &((*_160234_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_16107_lookup;
	_2089e31d0_allowBuiltin(_self_);
	return jule::Trait(_16127_kind, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data21);;
}



inline jule::Ptr<_2089ce661_Type> _2089e9eea_build(_2089e2751_typeChecker* _self_, jule::Any* _161826_declKind) {
	jule::Trait _161911_kind = nullptr;;
	{
		auto &_match_expr{ (*(_161826_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_219bb2921:;
			{
				jule::Trait _16228_t = _2089e726c_buildIdent(_self_, (*(_161826_declKind)).cast_ptr<_20872794d_IdentTypeDecl>(&__jule_any_type78));;
				if ((_16228_t != nullptr)) {
					_161911_kind=_16228_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_219bb2e93:;
			{
				jule::Trait _16278_t = _2089e75ad_buildSubIdent(_self_, (*(_161826_declKind)).cast_ptr<_208727c17_SubIdentTypeDecl>(&__jule_any_type88));;
				if ((_16278_t != nullptr)) {
					_161911_kind=_16278_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_219bb227d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2089dbe98_Sptr> _16338_t = _2089e7c40_buildSptr(_self_, (*(_161826_declKind)).cast_ptr<_2087283dd_SptrTypeDecl>(&__jule_any_type75));;
				if ((_16338_t != nullptr)) {
					_161911_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_219bb23d2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2089e0760_Ptr> _16398_t = _2089e83c2_buildPtr(_self_, (*(_161826_declKind)).cast_ptr<_208728d6c_PtrTypeDecl>(&__jule_any_type74));;
				if ((_16398_t != nullptr)) {
					_161911_kind=jule::Trait(_16398_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_219bb2448:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2089dc96b_Slc> _16458_t = _2089e8713_buildSlc(_self_, (*(_161826_declKind)).cast_ptr<_208728773_SlcTypeDecl>(&__jule_any_type73));;
				if ((_16458_t != nullptr)) {
					_161911_kind=jule::Trait(_16458_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_219bb24ae:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2089dec8c_Arr> _16518_t = _2089e8a54_buildArr(_self_, (*(_161826_declKind)).cast_ptr<_20872960e_ArrTypeDecl>(&__jule_any_type72));;
				if ((_16518_t != nullptr)) {
					_161911_kind=jule::Trait(_16518_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_219bb2525:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2089de110_Map> _16578_t = _2089e8d95_buildMap(_self_, (*(_161826_declKind)).cast_ptr<_208729d5c_MapTypeDecl>(&__jule_any_type76));;
				if ((_16578_t != nullptr)) {
					_161911_kind=jule::Trait(_16578_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_219bb258b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2089dd560_Tuple> _16638_t = _2089e91d6_buildTuple(_self_, (*(_161826_declKind)).cast_ptr<_208728a70_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16638_t != nullptr)) {
					_161911_kind=jule::Trait(_16638_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_219bb2613:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_208822372_FnIns> _16698_t = _2089e9868_buildFunc(_self_, (*(_161826_declKind)).cast_ptr<_2087390d0_FnDecl>(&__jule_any_type68));;
				if ((_16698_t != nullptr)) {
					_161911_kind=jule::Trait(_16698_t, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_219bb3081:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16758_t = _2089e9ba9_buildNamespace(_self_, (*(_161826_declKind)).cast_ptr<_2087280e1_NamespaceTypeDecl>(&__jule_any_type92));;
				if ((_16758_t != nullptr)) {
					_161911_kind=_16758_t;
				};
			}
		}
		else {
			_case_begin_219bb236b:;
			{
				_2089e2ed2_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219bb2305:;
	};
	if ((_161911_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _161911_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data21)) {
			_case_begin_219bbe983:;
			{
				return _161911_kind.cast_ptr<_2089ce661_Type>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_219bbd3aa:;
			{
				jule::Ptr<_2089ce661_Type> _16908_tk = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_161911_kind});;
				{
					auto &_match_expr{ _161911_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)) {
						_case_begin_219bbe246:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_2089ce661_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16908_tk); };
								};
							};
						}
					}
					_match_end_219bbe1d0:;
				};
				return _16908_tk;;
			}
		}
		_match_end_219bbc8b5:;
	};
}



inline jule::Ptr<_2089ce661_Type> _2089ea33b_checkDecl(_2089e2751_typeChecker* _self_, jule::Ptr<_208727343_TypeDecl>* _170130_decl) {
	jule::Ptr<_208711827_Token> _17037_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_170130_decl))))._field_Token;
	jule::Ptr<_2089ce661_Type> _17067_kind = _2089e9eea_build(_self_, &((*((*(_170130_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_17037_errorToken;
	return _17067_kind;;
}








inline jule::Bool _2089ea814_identTypeLookup_eq(_2089ea814_identTypeLookup *_self_, _2089ea814_identTypeLookup _other_) { return true; }

inline jule::Bool static__2089eac87_prim(jule::Str* _172818_ident, jule::Ptr<_2089d846c_Prim> _172830_t) {
	return ((*(_172830_t))._field_Kind == (*(_172818_ident)));;
}



inline jule::Bool static__2089eb10b_exist(jule::Str* _173219_ident, jule::Ptr<_2089ce661_Type>* _173236_k) {
	{
		
		if ((_2089d2774_Prim((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc41a2:;
			{
				return static__2089eac87_prim(_173219_ident, _2089d2774_Prim((*(_173236_k)).ptr()));;
			}
		}
		else if ((_2089d2a0a_Sptr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc4218:;
			{
				jule::Ptr<_2089dbe98_Sptr> _17378_sptr = _2089d2a0a_Sptr((*(_173236_k)).ptr());;
				return static__2089eb10b_exist(_173219_ident, &((*(_17378_sptr))._field_Elem));;
			}
		}
		else if ((_2089d2c91_Ptr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc4290:;
			{
				jule::Ptr<_2089e0760_Ptr> _17408_ptr = _2089d2c91_Ptr((*(_173236_k)).ptr());;
				return static__2089eb10b_exist(_173219_ident, &((*(_17408_ptr))._field_Elem));;
			}
		}
		else if ((_2089d37ca_Slc((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc4317:;
			{
				jule::Ptr<_2089dc96b_Slc> _17438_slc = _2089d37ca_Slc((*(_173236_k)).ptr());;
				return static__2089eb10b_exist(_173219_ident, &((*(_17438_slc))._field_Elem));;
			}
		}
		else if ((_2089d3544_Arr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc4504:;
			{
				jule::Ptr<_2089dec8c_Arr> _17468_arr = _2089d3544_Arr((*(_173236_k)).ptr());;
				return static__2089eb10b_exist(_173219_ident, &((*(_17468_arr))._field_Elem));;
			}
		}
		else if ((_2089d459a_Map((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc456a:;
			{
				jule::Ptr<_2089de110_Map> _17498_m = _2089d459a_Map((*(_173236_k)).ptr());;
				return (static__2089eb10b_exist(_173219_ident, &((*(_17498_m))._field_Key)) || static__2089eb10b_exist(_173219_ident, &((*(_17498_m))._field_Val)));;
			}
		}
		else if ((_2089d3ce7_Struct((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc45d1:;
			{
				jule::Ptr<_2087490bd_StructIns> _17538_s = _2089d3ce7_Struct((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17538_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219bcb880:;
					if (it != expr_end) {
						jule::Ptr<_2089ccc7a_InsGeneric> _175416_g = *it;
						{
							if (static__2089eb10b_exist(_173219_ident, &((*(_175416_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_219bcb880:;
						++it;
						goto _iter_begin_219bcb880;
					}
					_iter_end_219bcb880:;
				};
				return false;;
			}
		}
		else if ((_2089d3a61_Fn((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc4647:;
			{
				jule::Ptr<_208822372_FnIns> _17618_f = _2089d3a61_Fn((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17618_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219bcd266:;
					if (it != expr_end) {
						jule::Ptr<_20882121c_ParamIns> _176216_p = *it;
						{
							if (_20881ce3e_IsSelf((*(_176216_p))._field_Decl.ptr())) {
								goto _iter_next_219bcd266;
							};
							if (static__2089eb10b_exist(_173219_ident, &((*(_176216_p))._field_Type))) {
								return true;;
							};
						}
						_iter_next_219bcd266:;
						++it;
						goto _iter_begin_219bcd266;
					}
					_iter_end_219bcd266:;
				};
				if (((*_17618_f.alloc)._field_Result != nullptr)) {
					return static__2089eb10b_exist(_173219_ident, &((*_17618_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_2089d4831_Tup((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_219bc46ad:;
			{
				jule::Ptr<_2089dd560_Tuple> _17758_tup = _2089d4831_Tup((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17758_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_219bd0ad7:;
					if (it != expr_end) {
						jule::Ptr<_2089ce661_Type> _177616_t = *it;
						{
							if (static__2089eb10b_exist(_173219_ident, &(_177616_t))) {
								return true;;
							};
						}
						_iter_next_219bd0ad7:;
						++it;
						goto _iter_begin_219bd0ad7;
					}
					_iter_end_219bd0ad7:;
				};
				return false;;
			}
		}
		else {
			_case_begin_219bc4081:;
			{
				return false;;
			}
		}
		_match_end_219bc3e71:;
	};
}















inline void _209363b2c_stop(_209363478_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _209363db3_stopped(_209363478_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _209364149_finished(_209363478_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _2093643d0_isLastSt(_209363478_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _209364743_pushErr(_209363478_scopeParser* _self_, jule::Ptr<_208711827_Token> _15423_token, jule::Str _15445_fmt) {
	_209382167_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _209364aa6_pushSuggestion(_209363478_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_2093824ca_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _209364d5e_insertAsNext(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_209362ad7_stmt>(_209362ad7_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_209362ad7_stmt> _2093650e5_next(_209363478_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_208737441_ScopeTree> _2093654e1_buildScope(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _17331_tokens, jule::Ptr<_208711827_Token> _17360_end) {
	jule::Ptr<_208737441_ScopeTree> _1747_s = _209361861_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_209363478_scopeParser _1777_ssp = _209363478_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_209362ad7_stmt>>(nullptr), ._field_pos=0};;
	_209370364_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_20873a28a_VarDecl> _209365832_buildVarSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _18431_tokens) {
	jule::Ptr<_20873a28a_VarDecl> _1857_v = _209384e39_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_20873a664_RetSt> _209365b73_buildRetSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _19230_tokens) {
	jule::Ptr<_20873a664_RetSt> _1937_st = jule::new_ptr<_20873a664_RetSt>(_20873a664_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_20873add4_Iter> _209365eb4_buildWhileNextIter(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _20339_s) {
	jule::Ptr<_20873add4_Iter> _2047_it = jule::new_ptr<_20873add4_Iter>(_20873add4_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_208711827_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_20873b70e_WhileKind> _2087_kind = jule::new_ptr<_20873b70e_WhileKind>(_20873b70e_WhileKind{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_208711827_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_2093643d0_isLastSt(_self_)) {
		_209364743_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_2093650e5_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_208711827_Token>> _2207_stTokens = _20937baac_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_209362ad7_stmt> _2228_stmt = jule::new_ptr<_209362ad7_stmt>(_209362ad7_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_209370001_buildSt(_self_, &(_2228_stmt));
	};
	jule::I64 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_208711827_Token>> _2317_blockTokens = _20937ed35_range(&(_2307_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_209363b2c_stop(_self_);
		_209364743_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_209364743_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_2047_it))._field_Scope=_2093654e1_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type33);
	return _2047_it;;
}



inline jule::Ptr<_20873b70e_WhileKind> _209366305_buildWhileIterKind(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _24839_tokens) {
	return jule::new_ptr<_20873b70e_WhileKind>(_20873b70e_WhileKind{._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_208711827_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _209366646_getRangeKindKeysTokens(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _2557_vars;
	jule::Slice<_21e65b904_Log> _25513_errs;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(_25443_toks, static_cast<jule::U64>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_20873a28a_VarDecl> _209366987_buildRangeKindKey(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_20873a28a_VarDecl> _2647_key = jule::new_ptr<_20873a28a_VarDecl>(_20873a28a_VarDecl{._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_209364743_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_209364743_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209364743_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_2647_key))._field_Ident=(*((*_2647_key.alloc)._field_Token))._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _209366cc8_buildRangeKindKeys(_209363478_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219d9709a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_20873a28a_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_209366987_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_219d9709a:;
			++it;
			goto _iter_begin_219d9709a;
		}
		_iter_end_219d9709a:;
	};
	return _28711_keys;;
}



inline void _20936713b_setupRangeKindKeysPlain(_209363478_scopeParser* _self_, jule::Ptr<_20873c116_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_208711827_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _2957_keyTokens = _209366646_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_209364743_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _3027_keys = _209366cc8_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _20936749e_setupRangeKindKeysExplicit(_209363478_scopeParser* _self_, jule::Ptr<_20873c116_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_208711827_Token>>* _30974_tokens) {
	jule::I64 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_208711827_Token>> _3117_rang = _20937ed35_range(&(_3107_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_209364743_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_20936713b_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _209367812_setupRangeKindKeys(_209363478_scopeParser* _self_, jule::Ptr<_20873c116_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_208711827_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_20936749e_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_20936713b_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_20873c116_RangeKind> _209367cb8_buildRangeIterKind(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_208711827_Token>>* _3278_exprTokens, jule::Ptr<_208711827_Token>* _32742_inToken) {
	jule::Ptr<_20873c116_RangeKind> _3287_rng = jule::new_ptr<_20873c116_RangeKind>(_20873c116_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_KeyA=jule::Ptr<_20873a28a_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_20873a28a_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_209364743_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*(_3287_rng))._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_209367812_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _2093681b4_buildCommonIterKind(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _34240_tokens, jule::Ptr<_208711827_Token>* _34266_errTok) {
	jule::I64 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219da1e51:;
		if (it != expr_end) {
			jule::I64 _3448_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_219da28ad:;
						{
							(_3437_braceN)++;
							goto _iter_next_219da1e51;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_219da2c98:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_219da2b99:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_219da1e51;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_219da3c66:;
						{
							jule::Slice<jule::Ptr<_208711827_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_208711827_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_209367cb8_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type35);;
						}
					}
					_match_end_219da43c6:;
				};
			}
			_iter_next_219da1e51:;
			++it;
			_3448_i++;
			goto _iter_begin_219da1e51;
		}
		_iter_end_219da1e51:;
	};
	return jule::Any(_209366305_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_20873add4_Iter> _209368505_buildCommonIter(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _36935_tokens) {
	jule::Ptr<_20873add4_Iter> _3707_it = jule::new_ptr<_20873add4_Iter>(_20873add4_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_209363b2c_stop(_self_);
		_209364743_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _3807_exprTokens = _20937baac_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*(_3707_it))._field_Kind=_2093681b4_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I64 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_208711827_Token>> _3857_scopeTokens = _20937ed35_range(&(_3847_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_209363b2c_stop(_self_);
		_209364743_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_209364743_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_3707_it))._field_Scope=_2093654e1_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_20873add4_Iter> _209368846_buildIterSt(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _209365eb4_buildWhileNextIter(_self_, _39932_st);;
	};
	return _209368505_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_20873c4e0_BreakSt> _209368b87_buildBreakSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _40633_tokens) {
	jule::Ptr<_20873c4e0_BreakSt> _4077_brk = jule::new_ptr<_20873c4e0_BreakSt>(_20873c4e0_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_208711827_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_209364743_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_209364743_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_20873c8b9_ContSt> _209368ec8_buildContSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _42432_tokens) {
	jule::Ptr<_20873c8b9_ContSt> _4257_cont = jule::new_ptr<_20873c8b9_ContSt>(_20873c8b9_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_208711827_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_209364743_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_209364743_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_20873cd70_If> _209369319_buildIf(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _44228_tokens) {
	jule::Ptr<_20873cd70_If> _4437_model = jule::new_ptr<_20873cd70_If>(_20873cd70_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_208711827_Token>> _4477_exprTokens = _20937baac_getBlockExpr(_44228_tokens);;
	jule::I64 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_209364743_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _4547_scopeTokens = _20937ed35_range(&(_4487_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_209363b2c_stop(_self_);
		_209364743_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_208711827_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_209364743_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*(_4437_model))._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_2093654e1_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_20873d249_Else> _20936965a_buildElse(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _47530_tokens) {
	jule::Ptr<_20873d249_Else> _4767_els = jule::new_ptr<_20873d249_Else>(_20873d249_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I64 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_208711827_Token>> _4817_scopeTokens = _20937ed35_range(&(_4807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_209364743_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_209363b2c_stop(_self_);
			_209364743_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_209364743_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_2093654e1_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_20873d700_Conditional> _20936999b_buildIfElseChain(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _49936_tokens) {
	jule::Ptr<_20873d700_Conditional> _5007_chain = jule::new_ptr<_20873d700_Conditional>(_20873d700_Conditional{._field_Head=_209369319_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_20873cd70_If>>(nullptr), ._field_Default=jule::Ptr<_20873d249_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_219dc4c76;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_20873cd70_If> _5129_elif = _209369319_buildIf(_self_, &(_49936_tokens));;
				(*(_5007_chain))._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_20873cd70_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_219dc4c76;
			};
			(*(_5007_chain))._field_Default=_20936965a_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_219dc4c76;
		}
	_iter_next_219dc4c76:;
	}
	_iter_end_219dc4c76:;;
	return _5007_chain;;
}



inline jule::Ptr<_20872b677_Expr> _209369cdc_buildCoCallSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _52233_tokens) {
	jule::Ptr<_208711827_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_20872b677_Expr> _5257_e = _20938281b_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_219dc91cb:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_2087303a1_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_219dc971a:;
			{
				_209364743_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_219dc96a4:;
	};
	return _5257_e;;
}



inline jule::Ptr<_208734d01_GotoSt> _20936a12d_buildGotoSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _53832_tokens) {
	jule::Ptr<_208734d01_GotoSt> _5397_gt = jule::new_ptr<_208734d01_GotoSt>(_208734d01_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_208711827_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_209364743_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_209364743_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_208711827_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209364743_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_2087350ed_FallSt> _20936a46e_buildFallSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _55832_tokens) {
	jule::Ptr<_2087350ed_FallSt> _5597_fll = jule::new_ptr<_2087350ed_FallSt>(_2087350ed_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_209364743_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_20873e019_TypeAliasDecl> _20936a7b0_buildTypeAliasSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _56837_tokens) {
	jule::Ptr<_20873e019_TypeAliasDecl> _5697_tad = _2093840ae_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _20936ac88_pushCaseExpr(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _57432_tokens, jule::Ptr<_208711827_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_20872b677_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I64 _5808_i = 0LL;;
		jule::Ptr<_208727343_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_20872b677_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_20872b677_Expr>(_20872b677_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type90)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_209364743_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_20872b677_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_20938281b_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_20872b677_Expr__jule_tuple_bool _20936b23e_buildCaseExprs(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _59735_tokens, jule::Ptr<_208711827_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_20872b677_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_20872b677_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20872b677_Expr>(nullptr); __jule_collection; });;
	jule::I64 _5997_braceN = 0LL;;
	jule::I64 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219dd61a5:;
		if (it != expr_end) {
			jule::I64 _6018_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_219dd74b4:;
						{
							(_5997_braceN)++;
							goto _iter_next_219dd61a5;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_219dd789e:;
						{
							(_5997_braceN)--;
							goto _iter_next_219dd61a5;
						}
					}
					_match_end_219dd77a0:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_219dd61a5;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_219dd8e66:;
						{
							jule::Slice<jule::Ptr<_208711827_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_209364743_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_20936ac88_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_219dd8ecc:;
						{
							(*(_59765_colon))=_60115_tok;
							_20936ac88_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_219dd896b:;
				};
			}
			_iter_next_219dd61a5:;
			++it;
			_6018_i++;
			goto _iter_begin_219dd61a5;
		}
		_iter_end_219dd61a5:;
	};
	_209364743_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_208737441_ScopeTree> _20936b580_buildCaseScope(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _63935_tokens) {
	jule::I64 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_208711827_Token>> _6438_next;
			({
				__jule_tuple_sx_208711827_Token__jule_tuple_bool __jule_assign_result = _2093627a7_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_219ddcaa2;
			};
			jule::Ptr<_208711827_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_219ddcaa2;
			};
			jule::Slice<jule::Ptr<_208711827_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_208737441_ScopeTree> _6538_scope = _2093654e1_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_219ddcaa2:;
	}
	_iter_end_219ddcaa2:;;
	jule::Ptr<_208711827_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_208737441_ScopeTree> _6617_scope = _2093654e1_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_20873e4c0_Case__jule_tuple_bool _20936b97b_buildCase(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_20873e4c0_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20873e4c0_Case> _6677_c = jule::new_ptr<_20873e4c0_Case>(_20873e4c0_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_20872b677_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_208711827_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_209364743_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_20872b677_Expr__jule_tuple_bool __jule_assign_result = _20936b23e_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*(_6677_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_6677_c))._field_Scope=_20936b580_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_20873e4c0_Case__jule_tuple_x_20873d249_Else _20936bd77_buildCases(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_20873e4c0_Case__jule_tuple_x_20873d249_Else __jule_func_result;
	jule::Slice<jule::Ptr<_20873e4c0_Case>> _68611_cases = nullptr;;
	jule::Ptr<_20873d249_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_208711827_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_209364743_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_219de6d0e;
			};
			jule::Ptr<_20873e4c0_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_20873e4c0_Case__jule_tuple_bool __jule_assign_result = _20936b97b_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_20873d249_Else>(_20873d249_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_209364743_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_20873e4c0_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_219de6d0e:;
	}
	_iter_end_219de6d0e:;;
	if (_6887_defNotLast) {
		_209364743_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_20873ecd9_MatchCase> _20936c1b8_buildMatchCase(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _71934_tokens) {
	jule::Ptr<_20873ecd9_MatchCase> _7207_m = jule::new_ptr<_20873ecd9_MatchCase>(_20873ecd9_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_208711827_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_20873e4c0_Case>>(nullptr), ._field_Default=jule::Ptr<_20873d249_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _7307_exprTokens = _20937baac_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*(_7207_m))._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*(_7207_m))._field_TypeMatch) {
		_209364743_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_208711827_Token>> _7387_blockToks = _20937ed35_range(&(_7377_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_209363b2c_stop(_self_);
		_209364743_pushErr(_self_, (*(_7207_m))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_209364aa6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_209364743_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_7207_m))._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_20873e4c0_Case__jule_tuple_x_20873d249_Else __jule_assign_result = _20936bd77_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_208737441_ScopeTree> _20936c509_buildScopeSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_208711827_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_209364743_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*(_7557_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_209364743_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_209364743_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_208711827_Token>> _7827_scopeTokens = _20937ed35_range(&(_7817_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_209364743_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_209364743_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_208737441_ScopeTree> _7897_scope = _2093654e1_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_208734927_LabelSt> _20936c84a_buildLabelSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _79533_tokens) {
	jule::Ptr<_208734927_LabelSt> _7967_lbl = jule::new_ptr<_208734927_LabelSt>(_208734927_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_209364d5e_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__2087369a1_StmtData__jule_tuple_bool _20936cb8b_buildIdSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _81030_tokens) {
	__jule_tuple__2087369a1_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_208711827_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_219e0d7a4:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_20936c84a_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_219e0d9e6:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20937d493_assignInfo> _20936cecc_buildAssignInfo(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _82436_tokens) {
	jule::Ptr<_20937d493_assignInfo> _8257_info = jule::new_ptr<_20937d493_assignInfo>(_20937d493_assignInfo{._field_l=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr), ._field_setter=jule::Ptr<_208711827_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e10146:;
		if (it != expr_end) {
			jule::I64 _8298_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_219e10be6:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_219e1108c:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_219e10e8d:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_219e11169:;
						{
							goto _iter_next_219e10146;
						}
					}
					else if (((!(_20871693c_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_219e12126:;
						{
							goto _iter_next_219e10146;
						}
					}
					_match_end_219e1208d:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_208716673_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_219e10146;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_208716673_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_209364743_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_219e10146;
			}
			_iter_next_219e10146:;
			++it;
			_8298_i++;
			goto _iter_begin_219e10146;
		}
		_iter_end_219e10146:;
	};
	return _8257_info;;
}



inline jule::Ptr<_20873575d_AssignLeft> _20936d31d_buildAssignL(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _86933_tokens) {
	jule::Ptr<_20873575d_AssignLeft> _8707_l = jule::new_ptr<_20873575d_AssignLeft>(_20873575d_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*(_8707_l))._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_20873575d_AssignLeft>> _20936d65e_buildAssignLs(_209363478_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_20873575d_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e197c1:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _88215_part = *it;
			{
				jule::Ptr<_20873575d_AssignLeft> _8838_l = _20936d31d_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_20873575d_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_219e197c1:;
			++it;
			goto _iter_begin_219e197c1;
		}
		_iter_end_219e197c1:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__2087369a1_StmtData__jule_tuple_bool _20936d9a0_buildPlainAssign(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _88937_tokens) {
	__jule_tuple__2087369a1_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20937d493_assignInfo> _8907_info = _20936cecc_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_208735ce1_AssignSt> _8957_assign = jule::new_ptr<_208735ce1_AssignSt>(_208735ce1_AssignSt{._field_Declarative=false, ._field_Setter=(*(_8907_info))._field_setter, ._field_Left=jule::Slice<jule::Ptr<_20873575d_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_20872b677_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_20938281b_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _20936dd9b_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*(_8957_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_20873575d_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_219e204ec:;
				{
					jule::Ptr<_20873a28a_VarDecl> _9159_decl = jule::new_ptr<_20873a28a_VarDecl>(_20873a28a_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_219e20486:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _9297_parts;
	jule::Slice<_21e65b904_Log> _92914_errs;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_8957_assign))._field_Left=_20936d65e_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_20938281b_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _20936dd9b_buildDeclAssign1(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _94337_lefts, jule::Ptr<_208735ce1_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _9457_parts;
	jule::Slice<_21e65b904_Log> _94514_errs;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(_94337_lefts, static_cast<jule::U64>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e26d50:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_208711827_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_209364743_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_209364743_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_209364743_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_20873575d_AssignLeft> _9798_l = _20936d31d_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*(_9798_l))._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_20873575d_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_219e26d50:;
			++it;
			goto _iter_begin_219e26d50;
		}
		_iter_end_219e26d50:;
	};
	return true;;
}



inline __jule_tuple_x_208735ce1_AssignSt__jule_tuple_bool _20936e1dc_buildDeclAssign(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _99135_tokens) {
	__jule_tuple_x_208735ce1_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_208711827_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_208735ce1_AssignSt> _10027_assign = jule::new_ptr<_208735ce1_AssignSt>(_208735ce1_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_208711827_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_20873575d_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_20872b677_Expr>(nullptr)});;
	jule::I64 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_208711827_Token>> _10077_rang = _20937ed35_range(&(_10067_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_209364743_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_209364743_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_208711827_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_20938281b_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _20936dd9b_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__2087369a1_StmtData__jule_tuple_bool _20936e52d_buildAssignSt(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _102534_tokens) {
	__jule_tuple__2087369a1_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_20937d84a_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_219e36aa7:;
			{
				({
					__jule_tuple_x_208735ce1_AssignSt__jule_tuple_bool __jule_assign_result = _20936e1dc_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_219e36007:;
			{
				({
					__jule_tuple__2087369a1_StmtData__jule_tuple_bool __jule_assign_result = _20936d9a0_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_219e36436:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20872c04b_UseExpr> _20936e86e_buildUseExpr(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_209364743_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_20872c04b_UseExpr> _10437_ue = jule::new_ptr<_20872c04b_UseExpr>(_20872c04b_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_20938281b_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _20936ebb0_buildConstSt(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_209364743_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_219e3b13e:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_20873add4_Iter> _10598_iter = _209368846_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_219e3b1a5:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_20873ecd9_MatchCase> _10668_mt = _20936c1b8_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_219e39acc:;
			{
				return jule::Any(_209365832_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_219e3ab88:;
	};
}



inline jule::Any _209370001_buildSt(_209363478_scopeParser* _self_, jule::Ptr<_209362ad7_stmt>* _107628_st) {
	jule::Ptr<_208711827_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__2087369a1_StmtData__jule_tuple_bool __jule_assign_result = _20936cb8b_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__2087369a1_StmtData__jule_tuple_bool __jule_assign_result = _20936e52d_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_219e41e25:;
			{
				return jule::Any(_20936e86e_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_219e423ed:;
			{
				return _20936ebb0_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_219e42464:;
			{
				return jule::Any(_209365832_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_219e424ca:;
			{
				return jule::Any(_209365b73_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_219e42541:;
			{
				return jule::Any(_209368846_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_219e425a7:;
			{
				return jule::Any(_209368b87_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_219e4262e:;
			{
				return jule::Any(_209368ec8_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_219e426a6:;
			{
				return jule::Any(_20936999b_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_219e4272d:;
			{
				return jule::Any(_209369cdc_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_219e427a5:;
			{
				return jule::Any(_20936a12d_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_219e4282c:;
			{
				return jule::Any(_20936a46e_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_219e428a4:;
			{
				return jule::Any(_20936a7b0_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_219e4292b:;
			{
				return jule::Any(_20936c1b8_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_219e429a3:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_219e42255;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_20936c509_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_219e42a2a:;
			{
				return jule::Any(_20936c509_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_219e42aa2:;
			{
				return jule::Any(_20936c509_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_219e42255:;
	};
	jule::Ptr<_20872b677_Expr> _11327_expr = _20938281b_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_209364743_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _209370364_build(_209363478_scopeParser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _114026_tokens, jule::Ptr<_208737441_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_209362e8e_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_2093643d0_isLastSt(_self_))) && (!(_209364149_finished(_self_))))) {
		{
			jule::Ptr<_209362ad7_stmt> _11488_st = _2093650e5_next(_self_);;
			jule::Any _11498_data = _209370001_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_208736cd1_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _208736cd1_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_209363db3_stopped(_self_)) {
				goto _iter_end_219e4e98d;
			};
		}
	_iter_next_219e4e98d:;
	}
	_iter_end_219e4e98d:;;
}








inline jule::Bool _209370d9d_exprBuilder_eq(_209370d9d_exprBuilder *_self_, _209370d9d_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _2093715a7_pushErr(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_209382167_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _20937191a_pushSuggestion(_209370d9d_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_2093824ca_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_20872c26b_TupleExpr> _209371c5b_buildTuple(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _2331_parts) {
	jule::Ptr<_20872c26b_TupleExpr> _247_tuple = jule::new_ptr<_20872c26b_TupleExpr>(_20872c26b_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20872b677_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e74661:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20937b150_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_219e74661:;
			++it;
			goto _iter_begin_219e74661;
		}
		_iter_end_219e74661:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_20872c612_LitExpr> _20937209c_buildLit(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token> _3324_token) {
	return jule::new_ptr<_20872c612_LitExpr>(_20872c612_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _20937272e_buildSingle(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_219e76575:;
			{
				return jule::Any(_20937209c_buildLit(_self_, _4431_token), &__jule_any_type103);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_219e765ec:;
			{
				return jule::Any(jule::new_ptr<_20872db0d_VariadicExpr>(_20872db0d_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_219e76663:;
			{
				return jule::Any(_20937c508_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_219e764a9:;
	};
	_2093715a7_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20872ce92_IdentExpr> _209372a70_buildBindIdent(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_2093715a7_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_208711827_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_2093715a7_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20872ce92_IdentExpr> _757_expr = _20937c508_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_20872d734_UnaryExpr> _209372db1_buildUnary(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _8030_tokens) {
	jule::Ptr<_208711827_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_2093715a7_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_208712064_IsUnaryOp((*(_817_op))._field_Id)))) {
		_2093715a7_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_20872d734_UnaryExpr>(_20872d734_UnaryExpr{._field_Op=_817_op, ._field_Expr=_20937b150_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_20872e78a_SubIdentExpr> _209373202_buildObjSubIdent(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _10136_tokens) {
	jule::I64 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_208711827_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_2093715a7_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20872e78a_SubIdentExpr>(_20872e78a_SubIdentExpr{._field_Expr=_20937b150_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_20872e3b1_NamespaceExpr> _209373543_buildNamespace(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _11635_tokens) {
	jule::Ptr<_20872e3b1_NamespaceExpr> _1177_ns = jule::new_ptr<_20872e3b1_NamespaceExpr>(_20872e3b1_NamespaceExpr{._field_Namespace=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Ptr<_208711827_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_2093715a7_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_2093715a7_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_2093715a7_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_2093715a7_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_2093715a7_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U64>(1LLU))) {
		_2093715a7_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_208727343_TypeDecl> _209373884_buildType(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _15030_tokens) {
	jule::I64 _1517_i = 0LL;;
	jule::Ptr<_208727343_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_2093715a7_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_2093715a7_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _209373bc5_buildSubIdent(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _16434_tokens) {
	jule::I64 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_208711827_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_219e8d4d2:;
			{
				return jule::Any(_209373202_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type87);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_219e8db0e:;
			{
				return jule::Any(_209373543_buildNamespace(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_219e8db75:;
			{
				return jule::Any(_209373884_buildType(_self_, _16434_tokens), &__jule_any_type90);;
			}
		}
		_match_end_219e8d9dd:;
	};
	if (_20937cb9b_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_209373884_buildType(_self_, _16434_tokens), &__jule_any_type90);;
	};
	_2093715a7_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20872db0d_VariadicExpr> _209374016_buildVariadic(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _18633_tokens) {
	jule::Ptr<_208711827_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_20872db0d_VariadicExpr>(_20872db0d_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_20937b150_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_20872b941_RangeExpr> _209374357_buildBetweenParentheses(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_2093715a7_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_20872b941_RangeExpr>(_20872b941_RangeExpr{._field_Expr=_20937b150_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_20872ded7_CastExpr> _209374698_tryBuildCast(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _20733_tokens) {
	jule::I64 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e9443e:;
		if (it != expr_end) {
			jule::I64 _2097_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_219e94ebc:;
						{
							(_2087_rangeN)++;
							goto _iter_next_219e9443e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_219e953a7:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_219e952a8:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_219e9443e;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_208711827_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_208711827_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_208711827_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_20872ded7_CastExpr> _2418_cast = jule::new_ptr<_20872ded7_CastExpr>(_20872ded7_CastExpr{._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_2093715a7_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_2093715a7_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I64 _2559_typeIndex = 0LL;;
					jule::Ptr<_208727343_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_2093715a7_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I64 _26610_j = 0LL;;
						jule::Slice<jule::Ptr<_208711827_Token>> _26710_exprTokens2 = _20937ed35_range(&(_26610_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2298_exprTokens));;
						if (((_26710_exprTokens2.len() == 0LL) || (_26610_j < _2298_exprTokens.len()))) {
							return nullptr;;
						};
						(*_2418_cast.alloc)._field_Expr=_20937b150_buildFromTokens(_self_, _26710_exprTokens2);
					};
				};
				return _2418_cast;;
			}
			_iter_next_219e9443e:;
			++it;
			_2097_i++;
			goto _iter_begin_219e9443e;
		}
		_iter_end_219e9443e:;
	};
	return nullptr;;
}



inline void _209374ab6_pushArg(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_20872b677_Expr>>* _28028_args, jule::Slice<jule::Ptr<_208711827_Token>> _28052_tokens, jule::Ptr<_208711827_Token> _28077_errToken) {
	if ((_28052_tokens.len() == 0LL)) {
		_2093715a7_pushErr(_self_, _28077_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_20872b677_Expr>> &__jule_push_dest = (*(_28028_args)); __jule_push_dest.push(_20937b150_buildFromTokens(_self_, _28052_tokens)); };
}



inline jule::Slice<jule::Ptr<_20872b677_Expr>> _209374e07_buildArgs(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _28929_tokens) {
	if ((_28929_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20872b677_Expr>> _29511_args = nullptr;;
	jule::I64 _2967_last = 0LL;;
	jule::I64 _2977_rangeN = 0LL;;
	(_28929_tokens).mut_slice(1LL, (_28929_tokens.len() - 1LL));;
	{
		auto expr = &(_28929_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219ea2e75:;
		if (it != expr_end) {
			jule::I64 _2997_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _29910_token = *it;
			{
				{
					auto &_match_expr{ (*(_29910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_219ea3be0:;
						{
							(_2977_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_219ea40ca:;
						{
							(_2977_rangeN)--;
						}
					}
					_match_end_219ea3ecb:;
				};
				if (((_2977_rangeN > 0LL) || ((*(_29910_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_219ea2e75;
				};
				_209374ab6_pushArg(_self_, &(_29511_args), _28929_tokens.slice(_2967_last, _2997_i), _29910_token);
				_2967_last=(_2997_i + 1LL);
			}
			_iter_next_219ea2e75:;
			++it;
			_2997_i++;
			goto _iter_begin_219ea2e75;
		}
		_iter_end_219ea2e75:;
	};
	if ((_2967_last < _28929_tokens.len())) {
		if ((_2967_last == 0LL)) {
			if ((_28929_tokens.len() > 0LL)) {
				_209374ab6_pushArg(_self_, &(_29511_args), _28929_tokens.slice(_2967_last), _28929_tokens[_2967_last]);
			};
		} else {
			_209374ab6_pushArg(_self_, &(_29511_args), _28929_tokens.slice(_2967_last), _28929_tokens[(_2967_last - 1LL)]);
		};
	};
	return _29511_args;;
}



inline jule::Ptr<_2087303a1_FnCallExpr> _2093756ee_buildFnCall(_209370d9d_exprBuilder* _self_, jule::Ptr<_208711827_Token>* _35532_token, jule::Slice<jule::Ptr<_208711827_Token>>* _35559_expr, jule::Slice<jule::Ptr<_208711827_Token>>* _35587_args) {
	return jule::new_ptr<_2087303a1_FnCallExpr>(_2087303a1_FnCallExpr{._field_Token=(*(_35532_token)), ._field_Expr=_20937b150_buildFromTokens(_self_, (*(_35559_expr))), ._field_Args=_209374e07_buildArgs(_self_, (*(_35587_args))), ._field_Exception=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _209375a40_buildParenthesesRange(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _36342_tokens) {
	jule::Ptr<_208711827_Token> _3647_token = (*(_36342_tokens))[0LL];;
	if (((*(_3647_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_20872ded7_CastExpr> _3668_expr = _209374698_tryBuildCast(_self_, _36342_tokens);;
		if ((_3668_expr != nullptr)) {
			return jule::Any(_3668_expr, &__jule_any_type107);;
		};
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _3717_exprTokens;
	jule::Slice<jule::Ptr<_208711827_Token>> _37123_argsTokens;
	({
		__jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token __jule_assign_result = _2093800ee_rangeLast(_36342_tokens);
		_3717_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37123_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3717_exprTokens.len() == 0LL)) {
		return jule::Any(_209374357_buildBetweenParentheses(_self_, _37123_argsTokens), &__jule_any_type102);;
	};
	if (_20937cb9b_isAnonFnHead(&(_3717_exprTokens))) {
		return jule::Any(_209373884_buildType(_self_, _36342_tokens), &__jule_any_type90);;
	};
	return jule::Any(_2093756ee_buildFnCall(_self_, &(_3647_token), &(_3717_exprTokens), &(_37123_argsTokens)), &__jule_any_type109);;
}



inline jule::Ptr<_20872c9db_UnsafeExpr> _209375d81_buildUnsafeExpr(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _38535_tokens) {
	jule::Ptr<_208711827_Token> _3867_token = _38535_tokens[0LL];;
	(_38535_tokens).mut_slice(1LL);;
	jule::I64 _3887_i = 0LL;;
	jule::Slice<jule::Ptr<_208711827_Token>> _3897_rangeTokens = _20937ed35_range(&(_3887_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_38535_tokens));;
	if ((_3897_rangeTokens.len() == 0LL)) {
		_2093715a7_pushErr(_self_, _38535_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20872c9db_UnsafeExpr>(_20872c9db_UnsafeExpr{._field_Token=_3867_token, ._field_Expr=_20937b150_buildFromTokens(_self_, _3897_rangeTokens)});;
}



inline jule::Ptr<_2087390d0_FnDecl> _2093761c2_buildAnonFn(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _40032_tokens) {
	jule::Ptr<_2087390d0_FnDecl> _4017_f = _209388305_buildFn((*(_self_))._field_p, _40032_tokens, false, false);;
	if ((!(_208739476_IsAnon(_4017_f.ptr())))) {
		_2093715a7_pushErr(_self_, (*_4017_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4017_f;;
}



inline jule::Any _209376513_buildUnsafe(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _40932_tokens) {
	{
		auto &_match_expr{ (*((*(_40932_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_219eb642d:;
			{
				return jule::Any(_2093761c2_buildAnonFn(_self_, _40932_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_219eb59e3:;
			{
				return jule::Any(_209375d81_buildUnsafeExpr(_self_, (*(_40932_tokens))), &__jule_any_type104);;
			}
		}
		_match_end_219eb5e22:;
	};
}



inline void _209376931_pushRangeLitPart(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _41936_part, jule::Ptr<_208711827_Token> _4203_errorToken, jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>* _42035_parts) {
	if ((_41936_part.len() == 0LL)) {
		_2093715a7_pushErr(_self_, _4203_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> &__jule_push_dest = (*(_42035_parts)); __jule_push_dest.push(_41936_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _209376c72_getBraceRangeLitExprParts(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _43045_tokens) {
	if ((_43045_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _43611_parts = nullptr;;
	jule::I64 _4387_last = 0LL;;
	jule::I64 _4397_rangeN = 0LL;;
	(_43045_tokens).mut_slice(1LL, (_43045_tokens.len() - 1LL));;
	{
		auto expr = &(_43045_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219eb9c39:;
		if (it != expr_end) {
			jule::I64 _4417_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _44110_token = *it;
			{
				{
					auto &_match_expr{ (*(_44110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_219eba9a4:;
						{
							(_4397_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_219ebad8e:;
						{
							(_4397_rangeN)--;
						}
					}
					_match_end_219ebac90:;
				};
				if (((_4397_rangeN > 0LL) || ((*(_44110_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_219eb9c39;
				};
				_209376931_pushRangeLitPart(_self_, _43045_tokens.slice(_4387_last, _4417_i), _44110_token, &(_43611_parts));
				_4387_last=(_4417_i + 1LL);
			}
			_iter_next_219eb9c39:;
			++it;
			_4417_i++;
			goto _iter_begin_219eb9c39;
		}
		_iter_end_219eb9c39:;
	};
	if ((_4387_last < _43045_tokens.len())) {
		if ((_4387_last == 0LL)) {
			if ((_43045_tokens.len() > 0LL)) {
				_209376931_pushRangeLitPart(_self_, _43045_tokens.slice(_4387_last), _43045_tokens[_4387_last], &(_43611_parts));
			};
		} else {
			_209376931_pushRangeLitPart(_self_, _43045_tokens.slice(_4387_last), _43045_tokens[(_4387_last - 1LL)], &(_43611_parts));
		};
	};
	return _43611_parts;;
}



inline jule::Ptr<_208730d96_FieldExprPair> _2093770b3_buildFieldExprPair(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _47238_tokens) {
	if (((_47238_tokens.len() - 2LL) == 0LL)) {
		_2093715a7_pushErr(_self_, _47238_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_208730d96_FieldExprPair> _4777_pair = jule::new_ptr<_208730d96_FieldExprPair>(_208730d96_FieldExprPair{._field_Field=_47238_tokens[0LL], ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
	(_47238_tokens).mut_slice(2LL);;
	(*(_4777_pair))._field_Expr=_20937b150_buildFromTokens(_self_, _47238_tokens);
	return _4777_pair;;
}



inline jule::Ptr<_20872b677_Expr> _209377404_buildStructLitExpr(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _48539_tokens) {
	jule::Ptr<_208711827_Token> _4867_token = (*(_48539_tokens))[0LL];;
	if ((((*(_4867_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_48539_tokens)).len() > 1LL))) {
		_4867_token=(*(_48539_tokens))[1LL];
		if (((*(_4867_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_20872b677_Expr>(_20872b677_Expr{._field_Token=_4867_token, ._field_End=(*(_48539_tokens))[((*(_48539_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_2093770b3_buildFieldExprPair(_self_, (*(_48539_tokens))), &__jule_any_type81)});;
		};
	};
	return _20937b150_buildFromTokens(_self_, (*(_48539_tokens)));;
}



inline jule::Slice<jule::Ptr<_20872b677_Expr>> _209377745_buildStructLitExprs(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _50040_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _5017_parts = _209376c72_getBraceRangeLitExprParts(_self_, (*(_50040_tokens)));;
	if ((_5017_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20872b677_Expr>> _5067_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(0LL, _5017_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20872b677_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5017_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219ec433c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _50715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_20872b677_Expr>> &__jule_push_dest = _5067_pairs; __jule_push_dest.push(_209377404_buildStructLitExpr(_self_, &(_50715_part))); };
			}
			_iter_next_219ec433c:;
			++it;
			goto _iter_begin_219ec433c;
		}
		_iter_end_219ec433c:;
	};
	return _5067_pairs;;
}



inline jule::Ptr<_2087316c1_StructLit> _209377a86_buildTypedStructLiteral(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _51343_tokens) {
	jule::I64 _5147_i = 0LL;;
	jule::Ptr<_208727343_TypeDecl> _5157_t;
	jule::Bool _51510_ok;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, &(_51343_tokens), (&(_5147_i)), true);
		_5157_t = __jule_assign_result.__jule_result_arg0;
		_51510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51510_ok))) {
		return nullptr;;
	} else if ((_5147_i >= _51343_tokens.len())) {
		_2093715a7_pushErr(_self_, _51343_tokens[_5147_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51343_tokens).mut_slice(_5147_i);;
	jule::Ptr<_208711827_Token> _5243_token = _51343_tokens[0LL];;
	if (((*(_5243_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_2093715a7_pushErr(_self_, _5243_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2087316c1_StructLit>(_2087316c1_StructLit{._field_End=_51343_tokens[(_51343_tokens.len() - 1LL)], ._field_Kind=_5157_t, ._field_Exprs=_209377745_buildStructLitExprs(_self_, &(_51343_tokens))});;
}



inline jule::Ptr<_20872b677_Expr> _209377dc7_buildBraceLitPart(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _53738_tokens) {
	jule::Slice<jule::Ptr<_208711827_Token>> _5387_l;
	jule::Slice<jule::Ptr<_208711827_Token>> _53814_r;
	({
		__jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token __jule_assign_result = _20937be75_splitDelim(_53738_tokens, static_cast<jule::U64>(8LLU));
		_5387_l = __jule_assign_result.__jule_result_arg0;
		_53814_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5387_l != nullptr)) {
		return jule::new_ptr<_20872b677_Expr>(_20872b677_Expr{._field_Token=(*(_53738_tokens))[0LL], ._field_End=(*(_53738_tokens))[((*(_53738_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_2087324a2_KeyValPair>(_2087324a2_KeyValPair{._field_Key=_20937b150_buildFromTokens(_self_, _5387_l), ._field_Val=_20937b150_buildFromTokens(_self_, _53814_r), ._field_Colon=(*(_53738_tokens))[_5387_l.len()]}), &__jule_any_type82)});;
	};
	return _20937b150_buildFromTokens(_self_, (*(_53738_tokens)));;
}



inline jule::Ptr<_208731b77_BraceLit> _209378218_buildBraceLit(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _55434_tokens) {
	jule::Ptr<_208731b77_BraceLit> _5557_lit = jule::new_ptr<_208731b77_BraceLit>(_208731b77_BraceLit{._field_Token=(*(_55434_tokens))[0LL], ._field_End=(*(_55434_tokens))[((*(_55434_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_20872b677_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _5607_parts = _209376c72_getBraceRangeLitExprParts(_self_, (*(_55434_tokens)));;
	if ((_5607_parts == nullptr)) {
		return _5557_lit;;
	};
	(*(_5557_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(0LL, _5607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20872b677_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219ecd9ea:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _56615_part = *it;
			{
				(*_5557_lit.alloc)._field_Exprs=jule::append((*_5557_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _209377dc7_buildBraceLitPart(_self_, &(_56615_part)); __jule_collection; }));
			}
			_iter_next_219ecd9ea:;
			++it;
			goto _iter_begin_219ecd9ea;
		}
		_iter_end_219ecd9ea:;
	};
	return _5557_lit;;
}



inline jule::Any _209378559_buildBraceRange(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _57336_tokens) {
	jule::Slice<jule::Ptr<_208711827_Token>> _5747_exprTokens;
	jule::I64 _57419_rangeN;
	({
		__jule_tuple_sx_208711827_Token__jule_tuple_int __jule_assign_result = _20937c7c2_getRangeExprTokens(_57336_tokens);
		_5747_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57419_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5747_exprTokens.len() == 0LL)) {
			_case_begin_219ece4ce:;
			{
				return jule::Any(_209378218_buildBraceLit(_self_, _57336_tokens), &__jule_any_type110);;
			}
		}
		else if ((_57419_rangeN > 0LL)) {
			_case_begin_219ed0777:;
			{
				_2093715a7_pushErr(_self_, (*(_57336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219ed06de:;
	};
	jule::Ptr<_208711827_Token> _5853_elseToken = _5747_exprTokens[(_5747_exprTokens.len() - 1LL)];;
	if (((*(_5747_exprTokens[(_5747_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5747_exprTokens).mut_slice(0LL, (_5747_exprTokens.len() - 1LL));;
		jule::Any _5888_d = _20937a9bd_build(_self_, &(_5747_exprTokens));;
		if ((_5888_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5888_d };
			
			if (_match_expr.type == &__jule_any_type109) {
				_case_begin_219ed3d0d:;
				{
					((*(_57336_tokens))).mut_slice((_5747_exprTokens.len() + 1LL));;
					jule::I64 _5959_i = 0LL;;
					jule::Slice<jule::Ptr<_208711827_Token>> _5969_rangeTokens = _20937ed35_range(&(_5959_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57336_tokens);;
					jule::Ptr<_2087303a1_FnCallExpr> _5979_model = _5888_d.unsafe_cast_ptr<_2087303a1_FnCallExpr>();;
					if (_2087309de_Ignored(_5979_model.ptr())) {
						_2093715a7_pushErr(_self_, _5853_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*(_5979_model))._field_Exception=_209383311_buildScope((*(_self_))._field_p, &(_5969_rangeTokens), (*(_57336_tokens))[(_5959_i - 1LL)]);
					return _5888_d;;
				}
			}
			else {
				_case_begin_219ed3527:;
				{
					_2093715a7_pushErr(_self_, _5747_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_219ed32b3:;
		};
	};
	{
		auto &_match_expr{ (*(_5747_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_219ed81a8:;
			{
				return _209376513_buildUnsafe(_self_, _57336_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_219ed851b:;
			{
				return jule::Any(_2093761c2_buildAnonFn(_self_, _57336_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_219ed8582:;
			{
				return jule::Any(_209377a86_buildTypedStructLiteral(_self_, (*(_57336_tokens))), &__jule_any_type108);;
			}
		}
		else {
			_case_begin_219ed3170:;
			{
				_2093715a7_pushErr(_self_, _5747_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219ed7839:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _20937889a_getEnumerableParts(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _62538_tokens) {
	(_62538_tokens).mut_slice(1LL, (_62538_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _6277_parts;
	jule::Slice<_21e65b904_Log> _62714_errors;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(&(_62538_tokens), static_cast<jule::U64>(5LLU), true);
		_6277_parts = __jule_assign_result.__jule_result_arg0;
		_62714_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62714_errors);
	return _6277_parts;;
}



inline jule::Ptr<_208732bcd_SliceExpr> _209378bdb_buildSlice(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _63230_tokens) {
	jule::Ptr<_208732bcd_SliceExpr> _6337_slc = jule::new_ptr<_208732bcd_SliceExpr>(_208732bcd_SliceExpr{._field_Token=_63230_tokens[0LL], ._field_End=_63230_tokens[(_63230_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_20872b677_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _6387_parts = _20937889a_getEnumerableParts(_self_, _63230_tokens);;
	if ((_6387_parts.len() == 0LL)) {
		return _6337_slc;;
	};
	(*(_6337_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(0LL, _6387_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20872b677_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6387_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219edd312:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _64415_p = *it;
			{
				if ((_64415_p.len() == 0LL)) {
					goto _iter_next_219edd312;
				};
				(*_6337_slc.alloc)._field_Exprs=jule::append((*_6337_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_20872b677_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20937b150_buildFromTokens(_self_, _64415_p); __jule_collection; }));
			}
			_iter_next_219edd312:;
			++it;
			goto _iter_begin_219edd312;
		}
		_iter_end_219edd312:;
	};
	return _6337_slc;;
}



inline jule::Ptr<_20873363a_IndexingExpr> _209379192_buildIndexing(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _65433_exprTokens, jule::Slice<jule::Ptr<_208711827_Token>> _6557_tokens, jule::Ptr<_208711827_Token> _65536_errorToken) {
	jule::Ptr<_208711827_Token> _6567_end = _6557_tokens[(_6557_tokens.len() - 1LL)];;
	(_6557_tokens).mut_slice(1LL, (_6557_tokens.len() - 1LL));;
	if ((_6557_tokens.len() == 0LL)) {
		_2093715a7_pushErr(_self_, _65536_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20872b677_Expr> _6627_expr = _20937b150_buildFromTokens(_self_, _65433_exprTokens);;
	if ((_6627_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20872b677_Expr> _6667_index = _20937b150_buildFromTokens(_self_, _6557_tokens);;
	if ((_6667_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20873363a_IndexingExpr>(_20873363a_IndexingExpr{._field_Token=_65536_errorToken, ._field_End=_6567_end, ._field_Expr=_6627_expr, ._field_Index=_6667_index});;
}



inline jule::Ptr<_208733c9a_SlicingExpr> _2093797ad_buildSlicing(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _67833_exprTokens, jule::Slice<jule::Ptr<_208711827_Token>>* _67867_start, jule::Slice<jule::Ptr<_208711827_Token>>* _6798_to, jule::Ptr<_208711827_Token>* _67934_errorToken, jule::Ptr<_208711827_Token> _67965_end) {
	jule::Ptr<_208733c9a_SlicingExpr> _6807_slc = jule::new_ptr<_208733c9a_SlicingExpr>(_208733c9a_SlicingExpr{._field_Token=(*(_67934_errorToken)), ._field_End=_67965_end, ._field_Expr=_20937b150_buildFromTokens(_self_, (*(_67833_exprTokens))), ._field_Start=jule::Ptr<_20872b677_Expr>(nullptr), ._field_To=jule::Ptr<_20872b677_Expr>(nullptr)});;
	if (((*(_67867_start)).len() > 0LL)) {
		(*(_6807_slc))._field_Start=_20937b150_buildFromTokens(_self_, (*(_67867_start)));
	};
	if (((*(_6798_to)).len() > 0LL)) {
		(*(_6807_slc))._field_To=_20937b150_buildFromTokens(_self_, (*(_6798_to)));
	};
	return _6807_slc;;
}



inline jule::Any _209379aee_buildBracketRange(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _69437_tokens) {
	jule::Ptr<_208711827_Token> _6957_errorToken = _69437_tokens[0LL];;
	jule::Slice<jule::Ptr<_208711827_Token>> _6967_exprTokens;
	jule::I64 _69619_rangeN;
	({
		__jule_tuple_sx_208711827_Token__jule_tuple_int __jule_assign_result = _20937c7c2_getRangeExprTokens(&(_69437_tokens));
		_6967_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69619_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6967_exprTokens.len() == 0LL)) {
		return jule::Any(_209378bdb_buildSlice(_self_, _69437_tokens), &__jule_any_type95);;
	} else if ((_69619_rangeN > 0LL)) {
		_2093715a7_pushErr(_self_, _6957_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69437_tokens).mut_slice(_6967_exprTokens.len());;
	jule::Slice<jule::Ptr<_208711827_Token>> _7117_splitTokens = _69437_tokens.slice(1LL, (_69437_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_208711827_Token>> _7127_start;
	jule::Slice<jule::Ptr<_208711827_Token>> _71218_to;
	({
		__jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token __jule_assign_result = _20937be75_splitDelim(&(_7117_splitTokens), static_cast<jule::U64>(8LLU));
		_7127_start = __jule_assign_result.__jule_result_arg0;
		_71218_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7127_start != nullptr) || (_71218_to != nullptr))) {
		return jule::Any(_2093797ad_buildSlicing(_self_, &(_6967_exprTokens), &(_7127_start), &(_71218_to), &(_6957_errorToken), _69437_tokens[(_69437_tokens.len() - 1LL)]), &__jule_any_type106);;
	};
	return jule::Any(_209379192_buildIndexing(_self_, _6967_exprTokens, _69437_tokens, _6957_errorToken), &__jule_any_type105);;
}



inline jule::Any _209379e40_buildExclRight(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _71935_tokens) {
	jule::Ptr<_208711827_Token> _7203_token = (*(_71935_tokens))[((*(_71935_tokens)).len() - 1LL)];;
	((*(_71935_tokens))).mut_slice(0LL, ((*(_71935_tokens)).len() - 1LL));;
	jule::Any _7227_d = _20937a9bd_build(_self_, _71935_tokens);;
	if ((_7227_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7227_d };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_219eeae57:;
			{
				(*(_7227_d.unsafe_cast_ptr<_2087303a1_FnCallExpr>()))._field_Exception=jule::new_ptr<_208737441_ScopeTree>(_208737441_ScopeTree{._field_Parent=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_208736cd1_Stmt>(nullptr), ._field_End=jule::Ptr<_208711827_Token>(nullptr)});
				return _7227_d;;
			}
		}
		_match_end_219eeade1:;
	};
	_2093715a7_pushErr(_self_, _7203_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _20937a281_buildData(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _73730_tokens) {
	{
		auto _match_expr{ (*(_73730_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_219eec596:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_219eec60c:;
			{
				return _20937272e_buildSingle(_self_, (*(_73730_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_219eec673:;
			{
				if (((*((*(_73730_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_209372a70_buildBindIdent(_self_, _73730_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_219eec4db:;
	};
	jule::Ptr<_208711827_Token> _7497_token = (*(_73730_tokens))[((*(_73730_tokens)).len() - 1LL)];;
	if (((*(_7497_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_209374016_buildVariadic(_self_, (*(_73730_tokens))), &__jule_any_type79);;
	};
	_7497_token=(*(_73730_tokens))[0LL];
	if (_208712064_IsUnaryOp((*(_7497_token))._field_Id)) {
		if (((*(_73730_tokens)).len() > 1LL)) {
			_7497_token=(*(_73730_tokens))[1LL];
			if (((*(_7497_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_209373884_buildType(_self_, _73730_tokens), &__jule_any_type90);;
			};
		};
		return jule::Any(_209372db1_buildUnary(_self_, (*(_73730_tokens))), &__jule_any_type89);;
	};
	if (((*(_73730_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7497_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_21a00226b:;
				{
					if (((*(_73730_tokens)).len() > 3LL)) {
						jule::Ptr<_208711827_Token> _7756_t = (*(_73730_tokens))[((*(_73730_tokens)).len() - 1LL)];;
						if (((*(_7756_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_21a0021a0;
						};
					};
					jule::Ptr<_208711827_Token> _7815_next = (*(_73730_tokens))[1LL];;
					if (((*(_7815_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_21a0021a0;
					};
					return jule::Any(_209373884_buildType(_self_, _73730_tokens), &__jule_any_type90);;
				}
			}
			_match_end_21a0021a0:;
		};
	};
	_7497_token=(*(_73730_tokens))[((*(_73730_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7497_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_21a005280:;
			{
				return _209373bc5_buildSubIdent(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_21a0052e6:;
			{
				return _209379e40_buildExclRight(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_21a00535c:;
			{
				return _209375a40_buildParenthesesRange(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_21a0053c3:;
			{
				return _209378559_buildBraceRange(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_21a005439:;
			{
				return _209379aee_buildBracketRange(_self_, (*(_73730_tokens)));;
			}
		}
		_match_end_21a002bc8:;
	};
	_2093715a7_pushErr(_self_, _7497_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _20937a67c_buildBinary(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _80632_tokens, jule::I64 _80657_i) {
	jule::Ptr<_208711827_Token> _8077_op = (*(_80632_tokens))[_80657_i];;
	jule::Slice<jule::Ptr<_208711827_Token>> _8087_leftTokens = (*(_80632_tokens)).slice(0LL, _80657_i);;
	if ((_20937b4d5_isTypeOp(&((*(_8077_op))._field_Id)) && _20937b7e3_isTypeRange(&(_8087_leftTokens)))) {
		return jule::Any(_209373884_buildType(_self_, _80632_tokens), &__jule_any_type90);;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _8137_rightTokens = (*(_80632_tokens)).slice((_80657_i + 1LL));;
	if ((_8087_leftTokens.len() == 0LL)) {
		_2093715a7_pushErr(_self_, (*(_80632_tokens))[_80657_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8137_rightTokens.len() == 0LL)) {
		_2093715a7_pushErr(_self_, (*(_80632_tokens))[_80657_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20937191a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_20872ec41_BinaryExpr>(_20872ec41_BinaryExpr{._field_Left=_20937b150_buildFromTokens(_self_, _8087_leftTokens), ._field_Right=_20937b150_buildFromTokens(_self_, _8137_rightTokens), ._field_Op=_8077_op}), &__jule_any_type111);;
}



inline jule::Any _20937a9bd_build(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _83126_tokens) {
	if (((*((*(_83126_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_209373884_buildType(_self_, _83126_tokens), &__jule_any_type90);;
	};
	jule::I64 _8353_i = _20937c23e_findLowestPrecOp(_83126_tokens);;
	if ((_8353_i == -1LL)) {
		return _20937a281_buildData(_self_, _83126_tokens);;
	};
	return _20937a67c_buildBinary(_self_, _83126_tokens, _8353_i);;
}



inline jule::Any _20937ad0e_buildKind(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _84230_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _8437_parts;
	jule::Slice<_21e65b904_Log> _84314_errors;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(_84230_tokens, static_cast<jule::U64>(5LLU), true);
		_8437_parts = __jule_assign_result.__jule_result_arg0;
		_84314_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84314_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84314_errors);
		return nullptr;;
	} else if ((_8437_parts.len() > 1LL)) {
		return jule::Any(_209371c5b_buildTuple(_self_, &(_8437_parts)), &__jule_any_type42);;
	};
	return _20937a9bd_build(_self_, _84230_tokens);;
}



inline jule::Ptr<_20872b677_Expr> _20937b150_buildFromTokens(_209370d9d_exprBuilder* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _85335_tokens) {
	if ((_85335_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8577_kind = _20937ad0e_buildKind(_self_, &(_85335_tokens));;
	if ((_8577_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20872b677_Expr>(_20872b677_Expr{._field_Token=_85335_tokens[0LL], ._field_End=_85335_tokens[(_85335_tokens.len() - 1LL)], ._field_Kind=_8577_kind});;
}











inline void _2093819b3_stop(_209381683_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _209381c49_stopped(_209381683_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _209382167_pushErr(_209381683_parser* _self_, jule::Ptr<_208711827_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_21e65b904_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_209380c6a_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _2093824ca_pushSuggestion(_209381683_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_209381111_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_20872b677_Expr> _20938281b_buildExpr(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _17831_tokens) {
	return _20937b150_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_208726760_Directive> _209382b5c_buildDirective(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_209382167_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_209382167_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_208726760_Directive>(_208726760_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _209382e15_pushDirective(_209381683_parser* _self_, jule::Ptr<_208726760_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a0369dc:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_21a0369dc:;
			++it;
			goto _iter_begin_21a0369dc;
		}
		_iter_end_21a0369dc:;
	};
	{ jule::Slice<jule::Ptr<_208726760_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_208737441_ScopeTree> _209383311_buildScope(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _21032_tokens, jule::Ptr<_208711827_Token> _21061_end) {
	jule::Ptr<_208737441_ScopeTree> _2117_s = _209361861_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_209363478_scopeParser _2137_sp = _209363478_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_209362ad7_stmt>>(nullptr), ._field_pos=0};;
	_209370364_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool _2093837b7__buildType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_20939283c_typeBuilder _2227_tb = _20939283c_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_209395851_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool _209383c6d_buildType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_208711827_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_208727343_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _2093837b7__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_209382167_pushErr(_self_.ptr(), _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_20873e019_TypeAliasDecl> _2093840ae_buildTypeAliasDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _24240_tokens) {
	jule::I64 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20873e019_TypeAliasDecl> _2487_tad = jule::new_ptr<_20873e019_TypeAliasDecl>(_20873e019_TypeAliasDecl{._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Strict=false, ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr)});;
	jule::Ptr<_208711827_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	{
		auto &_match_expr{ (*(_2527_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_21a0490c6:;
			{
				(*(_2487_tad))._field_Strict=true;
				goto _match_end_21a0485c0;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_21a048988:;
			{
				goto _match_end_21a0485c0;
			}
		}
		else {
			_case_begin_21a0476bd:;
			{
				_209382167_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
				return _2487_tad;;
			}
		}
		_match_end_21a0485c0:;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_208727343_TypeDecl> _2797_t;
	jule::Bool _27910_ok;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2797_t = __jule_assign_result.__jule_result_arg0;
		_27910_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2797_t;
	if ((_27910_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_209382167_pushErr(_self_.ptr(), (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_208927587_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _209384422_buildVarTypeAndExpr(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20873a28a_VarDecl>* _28841_v, jule::Slice<jule::Ptr<_208711827_Token>>* _28864_tokens) {
	jule::I64 _2897_i = 0LL;;
	jule::Ptr<_208711827_Token> _2907_tok = (*(_28864_tokens))[_2897_i];;
	if (((*(_2907_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_2897_i)++;
		if (((_2897_i >= (*(_28864_tokens)).len()) || ((*((*(_28864_tokens))[_2897_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_209382167_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_208727343_TypeDecl> _2978_t;
		jule::Bool _29711_ok;
		({
			__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, _28864_tokens, (&(_2897_i)), true);
			_2978_t = __jule_assign_result.__jule_result_arg0;
			_29711_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29711_ok) {
			(*((*(_28841_v))))._field_Kind=_2978_t;
			if ((_2897_i >= (*(_28864_tokens)).len())) {
				return;;
			};
			_2907_tok=(*(_28864_tokens))[_2897_i];
		};
	};
	if (((*(_2907_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_209382167_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28841_v))))._field_Setter=_2907_tok;
	jule::Slice<jule::Ptr<_208711827_Token>> _3137_exprTokens = (*(_28864_tokens)).slice((_2897_i + 1LL));;
	if ((_3137_exprTokens.len() == 0LL)) {
		_209382167_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28841_v))))._field_Expr=_20938281b_buildExpr(_self_, &(_3137_exprTokens));
}



inline void _209384785_buildVarCommon(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20873a28a_VarDecl>* _32136_v, jule::Slice<jule::Ptr<_208711827_Token>> _32158_tokens) {
	(*((*(_32136_v))))._field_Token=_32158_tokens[0LL];
	if (((*((*((*(_32136_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*((*(_32136_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32136_v))))._field_Ident=(*((*((*(_32136_v))))._field_Token))._field_Kind;
	(*((*(_32136_v))))._field_Public=_208927587_IsPub((*((*(_32136_v))))._field_Ident);
	(*((*(_32136_v))))._field_Kind=nullptr;
	if ((_32158_tokens.len() > 1LL)) {
		(_32158_tokens).mut_slice(1LL);;
		_209384422_buildVarTypeAndExpr(_self_, _32136_v, &(_32158_tokens));
	};
}



inline void _209384ae8_buildVarBegin(_209381683_parser* _self_, jule::Ptr<_20873a28a_VarDecl>* _33734_v, jule::Slice<jule::Ptr<_208711827_Token>>* _33757_tokens) {
	jule::Ptr<_208711827_Token> _3383_tok = (*(_33757_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3383_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_21a0592d4:;
			{
				(*((*(_33734_v))))._field_Statically=true;
				goto _case_begin_21a058e93;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_21a058e93:;
			{
				if (((*(_33757_tokens)).len() == 1LL)) {
					(*(_33757_tokens))=nullptr;
					_209382167_pushErr(_self_, _3383_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33757_tokens))).mut_slice(1LL);;
				if (((*((*(_33757_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_33734_v))))._field_Mutable=true;
					((*(_33757_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_21a059009:;
			{
				(*((*(_33734_v))))._field_Constant=true;
				((*(_33757_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_21a058b85:;
			{
				(*(_33757_tokens))=nullptr;
				_209382167_pushErr(_self_, _3383_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_21a058e2c:;
	};
}



inline jule::Ptr<_20873a28a_VarDecl> _209384e39_buildVar(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _36529_tokens) {
	jule::Ptr<_20873a28a_VarDecl> _3667_v = jule::new_ptr<_20873a28a_VarDecl>(_20873a28a_VarDecl{._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Token=_36529_tokens[0LL], ._field_Setter=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
	_209384ae8_buildVarBegin(_self_.ptr(), &(_3667_v), &(_36529_tokens));
	if ((_36529_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_36529_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3667_v))._field_Reference=true;
		if ((_36529_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_36529_tokens).mut_slice(1LL);;
	};
	_209384785_buildVarCommon(_self_, &(_3667_v), _36529_tokens);
	return _3667_v;;
}



inline jule::Ptr<_20873454d_GenericDecl> _20938527a_buildGeneric(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _38434_tokens) {
	jule::Ptr<_20873454d_GenericDecl> _3857_g = jule::new_ptr<_20873454d_GenericDecl>(_20873454d_GenericDecl{._field_Token=(*(_38434_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_208734097_Constraint>(nullptr)});;
	if (((*((*(_3857_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*_3857_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_3857_g))._field_Ident=(*((*_3857_g.alloc)._field_Token))._field_Kind;
	if (((*(_38434_tokens)).len() > 1LL)) {
		if (((*((*(_38434_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_209382167_pushErr(_self_.ptr(), (*(_38434_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_38434_tokens)).len() == 2LL)) {
			_209382167_pushErr(_self_.ptr(), (*(_38434_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_208711827_Token>> _4028_constraintTokens = (*(_38434_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _4038_parts;
		jule::Slice<_21e65b904_Log> _40315_errors;
		({
			__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(&(_4028_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4038_parts = __jule_assign_result.__jule_result_arg0;
			_40315_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_40315_errors.len() > 0LL)) {
			(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_40315_errors);
			return nullptr;;
		};
		(*_3857_g.alloc)._field_Constraint=jule::new_ptr<_208734097_Constraint>(_208734097_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(0LL, _4038_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208727343_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4038_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a066b82:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_208711827_Token>> _40916_part = *it;
				{
					jule::I64 _4109_i = 0LL;;
					jule::Ptr<_208727343_TypeDecl> _4119_kind;
					({
						__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_40916_part), (&(_4109_i)), true);
						_4119_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3857_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3857_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4119_kind; __jule_collection; }));
					if ((_4109_i < _40916_part.len())) {
						_209382167_pushErr(_self_.ptr(), _40916_part[_4109_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_21a066b82:;
				++it;
				goto _iter_begin_21a066b82;
			}
			_iter_end_21a066b82:;
		};
	};
	return _3857_g;;
}



inline jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _209385676_buildGenerics(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _42135_tokens, jule::Ptr<_208711827_Token>* _42161_errorToken) {
	if (((*(_42135_tokens)).len() == 0LL)) {
		_209382167_pushErr(_self_.ptr(), (*(_42161_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _4277_parts;
	jule::Slice<_21e65b904_Log> _42714_errors;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(_42135_tokens, static_cast<jule::U64>(5LLU), true);
		_4277_parts = __jule_assign_result.__jule_result_arg0;
		_42714_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42714_errors.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_42714_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20873454d_GenericDecl>> _4337_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20873454d_GenericDecl>>::alloc(0LL, _4277_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20873454d_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4277_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a06c13d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _43415_part = *it;
			{
				{ jule::Slice<jule::Ptr<_20873454d_GenericDecl>> &__jule_push_dest = _4337_generics; __jule_push_dest.push(_20938527a_buildGeneric(_self_, &(_43415_part))); };
			}
			_iter_next_21a06c13d:;
			++it;
			goto _iter_begin_21a06c13d;
		}
		_iter_end_21a06c13d:;
	};
	return _4337_generics;;
}



inline jule::Ptr<_208737b7d_ParamDecl> _2093859b7_buildSelfParam(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _44134_tokens) {
	if ((_44134_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_208737b7d_ParamDecl> _4467_param = jule::new_ptr<_208737b7d_ParamDecl>(_208737b7d_ParamDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4467_param.alloc)._field_Mutable=true;
		if ((_44134_tokens.len() == 1LL)) {
			_209382167_pushErr(_self_, _44134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_44134_tokens).mut_slice(1LL);;
	};
	_21e64c5b5_Builder _4587_ident = static__21e64ce12_New(5LL);;
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		({
			auto except = _21e64d594_WriteStr(&_4587_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:461:4"));
			(except.result);
		});
		if ((_44134_tokens.len() == 1LL)) {
			_209382167_pushErr(_self_, _44134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_44134_tokens).mut_slice(1LL);;
	};
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		({
			auto except = _21e64d594_WriteStr(&_4587_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:470:4"));
			(except.result);
		});
		(*_4467_param.alloc)._field_Token=_44134_tokens[0LL];
		if ((_44134_tokens.len() != 1LL)) {
			_209382167_pushErr(_self_, _44134_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4467_param.alloc)._field_Ident=_21e64de24_Str(&_4587_ident);
	return _4467_param;;
}



inline void _209385dd5_paramTypeBegin(_209381683_parser* _self_, jule::Ptr<_208737b7d_ParamDecl>* _48135_param, jule::I64* _48164_i, jule::Slice<jule::Ptr<_208711827_Token>>* _48173_tokens) {
	for (; ((*(_48164_i)) < (*(_48173_tokens)).len()); ((*(_48164_i)))++) {
		{
			jule::Ptr<_208711827_Token> _4834_token = (*(_48173_tokens))[(*(_48164_i))];;
			if (((*(_4834_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_48135_param))))._field_Variadic) {
				_209382167_pushErr(_self_, _4834_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_21a0749b4;
			};
			(*((*(_48135_param))))._field_Variadic=true;
		}
	_iter_next_21a0749b4:;
	}
	_iter_end_21a0749b4:;;
}



inline void _209386248_buildParamType(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_208737b7d_ParamDecl>* _49636_param, jule::Slice<jule::Ptr<_208711827_Token>>* _49665_tokens) {
	jule::I64 _4977_i = 0LL;;
	_209385dd5_paramTypeBegin(_self_.ptr(), _49636_param, &(_4977_i), _49665_tokens);
	if ((_4977_i >= (*(_49665_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, _49665_tokens, (&(_4977_i)), true);
		(*((*(_49636_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4977_i < (*(_49665_tokens)).len())) {
		_209382167_pushErr(_self_, (*(_49665_tokens))[_4977_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _2093865ab_buildParamBody(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_208737b7d_ParamDecl>* _50936_param, jule::Slice<jule::Ptr<_208711827_Token>> _50964_tokens) {
	jule::Ptr<_208711827_Token> _5107_tok = _50964_tokens[0LL];;
	if ((_50964_tokens.len() == 1LL)) {
		(*((*(_50936_param))))._field_Ident=(*(_5107_tok))._field_Kind;
		return;;
	} else if ((_50964_tokens.len() < 3LL)) {
		_209382167_pushErr(_self_.ptr(), _5107_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50964_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_50936_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_209386248_buildParamType(_self_, _50936_param, &(_50964_tokens));
		return;;
	};
	(*((*(_50936_param))))._field_Ident=(*(_5107_tok))._field_Kind;
	(_50964_tokens).mut_slice(2LL);;
	_209386248_buildParamType(_self_, _50936_param, &(_50964_tokens));
}



inline jule::Ptr<_208737b7d_ParamDecl> _2093868ec_buildParam(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _52931_tokens) {
	jule::Ptr<_208737b7d_ParamDecl> _5307_param = jule::new_ptr<_208737b7d_ParamDecl>(_208737b7d_ParamDecl{._field_Token=_52931_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5307_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5307_param.alloc)._field_Mutable=true;
		if ((_52931_tokens.len() == 1LL)) {
			_209382167_pushErr(_self_.ptr(), _52931_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52931_tokens).mut_slice(1LL);;
		(*_5307_param.alloc)._field_Token=_52931_tokens[0LL];
	};
	if ((_52931_tokens.len() >= 3LL)) {
		if (((*((*(_5307_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_52931_tokens.len() == 1LL)) {
				_209382167_pushErr(_self_.ptr(), _52931_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52931_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_52931_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5307_param.alloc)._field_Reference=true;
				(_52931_tokens).mut_slice(1LL);;
				(*_5307_param.alloc)._field_Token=_52931_tokens[0LL];
			};
		};
	};
	if (((*((*(_5307_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5307_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_209386248_buildParamType(_self_, &(_5307_param), &(_52931_tokens));
	} else {
		_2093865ab_buildParamBody(_self_, &(_5307_param), _52931_tokens);
	};
	return _5307_param;;
}



inline void _209386ba5_checkParams(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208737b7d_ParamDecl>>* _57232_params) {
	{
		auto expr = _57232_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a084e69:;
		if (it != expr_end) {
			jule::Ptr<_208737b7d_ParamDecl> _57315_param = *it;
			{
				if ((_208738035_IsSelf(_57315_param.ptr()) || ((*(_57315_param))._field_Kind != nullptr))) {
					goto _iter_next_21a084e69;
				};
				if (((*(_57315_param))._field_Token == nullptr)) {
					_209382167_pushErr(_self_, (*_57315_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*(_57315_param))._field_Kind=jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*_57315_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*_57315_param.alloc)._field_Token, ._field_Ident=(*((*_57315_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_57315_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_21a084e69:;
			++it;
			goto _iter_begin_21a084e69;
		}
		_iter_end_21a084e69:;
	};
}



inline jule::Slice<jule::Ptr<_208737b7d_ParamDecl>> _2093870a1_buildParams(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _59233_tokens, jule::Bool _59258_method) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _5937_parts;
	jule::Slice<_21e65b904_Log> _59314_errs;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(_59233_tokens, static_cast<jule::U64>(5LLU), true);
		_5937_parts = __jule_assign_result.__jule_result_arg0;
		_59314_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_59314_errs);
	if ((_5937_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_208737b7d_ParamDecl>> _59911_params = nullptr;;
	if ((_59258_method && (_5937_parts.len() > 0LL))) {
		jule::Ptr<_208737b7d_ParamDecl> _6018_param = _2093859b7_buildSelfParam(_self_, _5937_parts[0LL]);;
		if (((_6018_param != nullptr) && _208738035_IsSelf(_6018_param))) {
			{ jule::Slice<jule::Ptr<_208737b7d_ParamDecl>> &__jule_push_dest = _59911_params; __jule_push_dest.push(_6018_param); };
			(_5937_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a08ae4d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _60815_part = *it;
			{
				if ((_60815_part.len() == 0LL)) {
					goto _iter_next_21a08ae4d;
				};
				jule::Ptr<_208737b7d_ParamDecl> _6128_param = _2093868ec_buildParam(_self_, _60815_part);;
				if ((_6128_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_208737b7d_ParamDecl>> &__jule_push_dest = _59911_params; __jule_push_dest.push(_6128_param); };
				};
			}
			_iter_next_21a08ae4d:;
			++it;
			goto _iter_begin_21a08ae4d;
		}
		_iter_end_21a08ae4d:;
	};
	_209386ba5_checkParams(_self_, &(_59911_params));
	return _59911_params;;
}



inline __jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool _20938749c_buildMultiRetType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _62239_tokens, jule::I64* _62269_i) {
	__jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_20872a236_RetTypeDecl>(_20872a236_RetTypeDecl{._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr)});
	((*(_62269_i)))++;
	if (((*(_62269_i)) >= (*(_62239_tokens)).len())) {
		((*(_62269_i)))--;
		({
			__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, _62239_tokens, _62269_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_62269_i)))--;
	jule::Slice<jule::Ptr<_208711827_Token>> _6327_rangeTokens = _20937ed35_range(_62269_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _62239_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _6347_parts;
	jule::Slice<_21e65b904_Log> _63414_errs;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(&(_6327_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6347_parts = __jule_assign_result.__jule_result_arg0;
		_63414_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_63414_errs);
	if ((_6347_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _6407_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(0LL, _6347_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208727343_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_208711827_Token>>::alloc(0LL, _6347_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208711827_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6347_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a092460:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _64215_part = *it;
			{
				if ((_64215_part.len() == 0LL)) {
					goto _iter_next_21a092460;
				};
				jule::Ptr<_208711827_Token> _6468_token = _64215_part[0LL];;
				jule::I64 _6478_offset = 0LL;;
				if ((_64215_part.len() > 1LL)) {
					_6468_token=_64215_part[1LL];
					if (((*(_6468_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6478_offset=2LL;
						if ((_64215_part.len() < 3LL)) {
							_209382167_pushErr(_self_, _6468_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_21a092460;
						};
					};
				};
				_6468_token=_64215_part[0LL];
				if ((_6478_offset != 2LL)) {
					jule::Ptr<_208711827_Token> _6639_newToken = jule::new_ptr<_208711827_Token>((*(_6468_token)));;
					(*_6639_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_208711827_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6639_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_208711827_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6468_token; __jule_collection; }));
				};
				jule::Ptr<_208727343_TypeDecl> _6708_tk;
				({
					__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_64215_part), (&(_6478_offset)), true);
					_6708_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6478_offset < _64215_part.len())) {
					_209382167_pushErr(_self_, _64215_part[_6478_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = _6407_types; __jule_push_dest.push(_6708_tk); };
			}
			_iter_next_21a092460:;
			++it;
			goto _iter_begin_21a092460;
		}
		_iter_end_21a092460:;
	};
	if ((_6407_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*(_62239_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_208728a70_TupleTypeDecl>(_208728a70_TupleTypeDecl{._field_Types=_6407_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6407_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool _209387898_buildRetType(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _69334_tokens, jule::I64* _69364_i) {
	__jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_20872a236_RetTypeDecl>(_20872a236_RetTypeDecl{._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr)});
	if (((*(_69364_i)) >= (*(_69334_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_208711827_Token> _6997_token = (*(_69334_tokens))[(*(_69364_i))];;
	{
		auto &_match_expr{ (*(_6997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_21a09b502:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_21a09b568:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_21a09b5ce:;
			{
				if ((((*(_69364_i)) + 1LL) >= (*(_69334_tokens)).len())) {
					_209382167_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_69364_i)))++;
				_6997_token=(*(_69334_tokens))[(*(_69364_i))];
				{
					auto &_match_expr{ (*(_6997_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21a09d02b:;
						{
							({
								__jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool __jule_assign_result = _20938749c_buildMultiRetType(_self_, _69334_tokens, _69364_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_21a09d548:;
						{
							_209382167_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_21a09d49e:;
				};
				({
					__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, _69334_tokens, _69364_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_21a09b48b:;
	};
	((*(_69364_i)))++;
	_209382167_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_2087390d0_FnDecl> _209387d4e_buildFnPrototype(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _73238_tokens, jule::I64* _73268_i, jule::Bool _73276_method) {
	jule::Ptr<_2087390d0_FnDecl> _7337_f = jule::new_ptr<_2087390d0_FnDecl>(_2087390d0_FnDecl{._field_Token=(*(_73238_tokens))[(*(_73268_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_20872a236_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_208737b7d_ParamDecl>>(nullptr)});;
	if (((*((*(_7337_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7337_f.alloc)._field_Statically=true;
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_209382167_pushErr(_self_.ptr(), (*_7337_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7337_f.alloc)._field_Token=(*(_73238_tokens))[(*(_73268_i))];
	};
	if (((*((*(_7337_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7337_f.alloc)._field_Unsafety=true;
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_209382167_pushErr(_self_.ptr(), (*_7337_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7337_f.alloc)._field_Token=(*(_73238_tokens))[(*(_73268_i))];
	};
	((*(_73268_i)))++;
	if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_7337_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_208711827_Token> _7663_tok = (*(_73238_tokens))[(*(_73268_i))];;
	if (((*(_7663_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_209382167_pushErr(_self_.ptr(), (*(_7337_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_7337_f))._field_Ident=(*_7663_tok.alloc)._field_Kind;
	} else {
		(*(_7337_f))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_208711827_Token> _7783_errorToken = (*(_73238_tokens))[(*(_73268_i))];;
	jule::Slice<jule::Ptr<_208711827_Token>> _7797_genericsTokens = _20937ed35_range(_73268_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _73238_tokens);;
	if ((_7797_genericsTokens != nullptr)) {
		(*(_7337_f))._field_Generics=_209385676_buildGenerics(_self_, &(_7797_genericsTokens), &(_7783_errorToken));
	};
	if (((*((*(_73238_tokens))[(*(_73268_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_209382167_pushErr(_self_.ptr(), (*(_73238_tokens))[(*(_73268_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _7897_paramsToks = _20937ed35_range(_73268_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _73238_tokens);;
	if ((_7897_paramsToks.len() > 0LL)) {
		(*(_7337_f))._field_Params=_2093870a1_buildParams(_self_, &(_7897_paramsToks), _73276_method);
	};
	if (((*(_73268_i)) < (*(_73238_tokens)).len())) {
		jule::Ptr<_208711827_Token> _7954_token = (*(_73238_tokens))[(*(_73268_i))];;
		if (((*(_7954_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_7337_f))._field_Exceptional=true;
			((*(_73268_i)))++;
		};
	};
	(*(_7337_f))._field_Public=_208927587_IsPub((*_7337_f.alloc)._field_Ident);
	({
		__jule_tuple_x_20872a236_RetTypeDecl__jule_tuple_bool __jule_assign_result = _209387898_buildRetType(_self_, _73238_tokens, _73268_i);
		(*_7337_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7337_f;;
}



inline jule::Ptr<_2087390d0_FnDecl> _209388305_buildFn(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _80929_tokens, jule::Bool _80954_method, jule::Bool _80968_prototype) {
	jule::I64 _8107_i = 0LL;;
	jule::Ptr<_2087390d0_FnDecl> _8117_f = _209387d4e_buildFnPrototype(_self_, _80929_tokens, &(_8107_i), _80954_method);;
	if (_80968_prototype) {
		if ((_8107_i < (*(_80929_tokens)).len())) {
			_209382167_pushErr(_self_, (*(_80929_tokens))[(_8107_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8117_f;;
	} else if ((_8117_f == nullptr)) {
		return _8117_f;;
	};
	if ((_8107_i >= (*(_80929_tokens)).len())) {
		_2093819b3_stop(_self_);
		_209382167_pushErr(_self_, (*(_8117_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _8277_blockTokens = _20937ed35_range(&(_8107_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _80929_tokens);;
	if ((_8277_blockTokens != nullptr)) {
		(*(_8117_f))._field_Scope=_209383311_buildScope(_self_, &(_8277_blockTokens), (*(_80929_tokens))[(_8107_i - 1LL)]);
		(*((*_8117_f.alloc)._field_Scope))._field_Unsafety=(*_8117_f.alloc)._field_Unsafety;
		if ((_8107_i < (*(_80929_tokens)).len())) {
			_209382167_pushErr(_self_, (*(_80929_tokens))[_8107_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_2093819b3_stop(_self_);
		_209382167_pushErr(_self_, (*(_8117_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8117_f;;
}



inline void _209388668_buildBindUseDecl(_209381683_parser* _self_, jule::Ptr<_20874036c_UseDecl>* _84337_decl, jule::Slice<jule::Ptr<_208711827_Token>>* _84363_tokens) {
	if (((*(_84363_tokens)).len() > 1LL)) {
		_209382167_pushErr(_self_, (*(_84363_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_208711827_Token> _8477_token = (*(_84363_tokens))[0LL];;
	if (((((*(_8477_token))._field_Id != static_cast<jule::U64>(4LLU)) || (!(_20871297c_IsStr((*(_8477_token))._field_Kind)))) || _208712c13_IsRawStr((*(_8477_token))._field_Kind))) {
		_209382167_pushErr(_self_, _8477_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_84337_decl))))._field_Binded=true;
	(*((*(_84337_decl))))._field_Path=_8477_token;
}



inline void _2093889cb_parseUseDecl(_209381683_parser* _self_, jule::Ptr<_20874036c_UseDecl>* _85633_decl, jule::Slice<jule::Ptr<_208711827_Token>> _85658_tokens) {
	if ((*((*(_85633_decl))))._field_Binded) {
		_209388668_buildBindUseDecl(_self_, _85633_decl, &(_85658_tokens));
		return;;
	};
	jule::Ptr<_208711827_Token> _8627_token = _85658_tokens[0LL];;
	if ((((((*(_8627_token))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8627_token.alloc)._field_Id != static_cast<jule::U64>(4LLU))) && (!(_20871297c_IsStr((*_8627_token.alloc)._field_Kind)))) || _208712c13_IsRawStr((*(_8627_token))._field_Kind))) {
		_209382167_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_8627_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*((*(_85633_decl))))._field_Alias=_8627_token;
		(_85658_tokens).mut_slice(1LL);;
		if ((_85658_tokens.len() == 0LL)) {
			_209382167_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8627_token=_85658_tokens[0LL];
		if ((((*(_8627_token))._field_Id != static_cast<jule::U64>(4LLU)) || (!(_20871297c_IsStr((*(_8627_token))._field_Kind))))) {
			_209382167_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85633_decl))))._field_Path=_8627_token;
}



inline jule::Ptr<_20874036c_UseDecl> _209388dc7_buildUseDecl(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _88632_tokens, jule::Bool _88657_binded) {
	jule::Ptr<_20874036c_UseDecl> _8877_decl = jule::new_ptr<_20874036c_UseDecl>(_20874036c_UseDecl{._field_Token=_88632_tokens[0LL], ._field_Path=jule::Ptr<_208711827_Token>(nullptr), ._field_Alias=jule::Ptr<_208711827_Token>(nullptr), ._field_Binded=_88657_binded});;
	if ((_88632_tokens.len() < 2LL)) {
		_209382167_pushErr(_self_, (*(_8877_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88632_tokens).mut_slice(1LL);;
	_2093889cb_parseUseDecl(_self_, &(_8877_decl), _88632_tokens);
	return _8877_decl;;
}



inline jule::Ptr<_208727343_TypeDecl> _2093892c3_buildTypeEnumItemKind(jule::Ptr<_209381683_parser> _self_, jule::I64* _90043_i, jule::Slice<jule::Ptr<_208711827_Token>>* _90056_tokens) {
	jule::I64 _9017_braceN = 0LL;;
	jule::I64 _9023_exprStart = (*(_90043_i));;
	for (; ((*(_90043_i)) < (*(_90056_tokens)).len()); ((*(_90043_i)))++) {
		{
			jule::Ptr<_208711827_Token> _9044_t = (*(_90056_tokens))[(*(_90043_i))];;
			{
				auto &_match_expr{ (*(_9044_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_21a0c2a78:;
					{
						(_9017_braceN)++;
						goto _iter_next_21a0c200b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21a0c2da8:;
					{
						(_9017_braceN)--;
					}
				}
				_match_end_21a0c2b00:;
			};
			if ((_9017_braceN > 0LL)) {
				goto _iter_next_21a0c200b;
			};
			if ((((*(_9044_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_90043_i)) + 1LL) >= (*(_90056_tokens)).len()))) {
				jule::Slice<jule::Ptr<_208711827_Token>> _92013_kindTokens = nullptr;;
				if (((*(_9044_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_92013_kindTokens=(*(_90056_tokens)).slice(_9023_exprStart, (*(_90043_i)));
				} else {
					_92013_kindTokens=(*(_90056_tokens)).slice(_9023_exprStart);
				};
				jule::I64 _9269_j = 0LL;;
				jule::Ptr<_208727343_TypeDecl> _9279_kind;
				({
					__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_92013_kindTokens), (&(_9269_j)), true);
					_9279_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9269_j < _92013_kindTokens.len())) {
					_209382167_pushErr(_self_.ptr(), _92013_kindTokens[_9269_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9279_kind;;
			};
		}
	_iter_next_21a0c200b:;
	}
	_iter_end_21a0c200b:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>> _209389614_buildTypeEnumItems(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _93740_tokens) {
	jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>> _9387_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208741c0e_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _9397_i = 0LL;;
	for (; (_9397_i < (*(_93740_tokens)).len()); (_9397_i)++) {
		{
			jule::Ptr<_208711827_Token> _9418_t = (*(_93740_tokens))[_9397_i];;
			jule::Ptr<_208741c0e_TypeEnumItemDecl> _9428_item = jule::new_ptr<_208741c0e_TypeEnumItemDecl>(_208741c0e_TypeEnumItemDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr)});;
			(*_9428_item.alloc)._field_Token=_9418_t;
			if ((((*((*_9428_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_93740_tokens)).len() - _9397_i) > 2LL))) {
				_9418_t=(*(_93740_tokens))[(_9397_i + 1LL)];
				if (((*(_9418_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_9428_item.alloc)._field_Ident=(*(*(_9428_item))._field_Token.alloc)._field_Kind;
					_9397_i+=2LL;
					if (((_9397_i >= (*(_93740_tokens)).len()) || ((*((*(_93740_tokens))[_9397_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_209382167_pushErr(_self_.ptr(), _9418_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_21a0c7b27;
					};
				};
			};
			(*_9428_item.alloc)._field_Kind=_2093892c3_buildTypeEnumItemKind(_self_, &(_9397_i), _93740_tokens);
			{ jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>> &__jule_push_dest = _9387_items; __jule_push_dest.push(_9428_item); };
		}
	_iter_next_21a0c7b27:;
	}
	_iter_end_21a0c7b27:;;
	return _9387_items;;
}



inline jule::Ptr<_20874236e_TypeEnumDecl> _209389955_buildTypeEnumDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _96139_tokens) {
	jule::I64 _9627_i = 1LL;;
	jule::Ptr<_20874236e_TypeEnumDecl> _9637_e = jule::new_ptr<_20874236e_TypeEnumDecl>(_20874236e_TypeEnumDecl{._field_Token=(*(_96139_tokens))[_9627_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_208711827_Token>(nullptr)});;
	if (((*((*(_9637_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*_9637_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_9637_e))._field_Ident=(*((*_9637_e.alloc)._field_Token))._field_Kind;
	_9627_i+=3LL;
	jule::Slice<jule::Ptr<_208711827_Token>> _9737_itemTokens = _20937ed35_range(&(_9627_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _96139_tokens);;
	if ((_9737_itemTokens == nullptr)) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, (*_9637_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9637_e;;
	} else if ((_9627_i < (*(_96139_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_96139_tokens))[_9627_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9637_e.alloc)._field_Public=_208927587_IsPub((*_9637_e.alloc)._field_Ident);
	(*_9637_e.alloc)._field_End=(*(_96139_tokens))[(_9627_i - 1LL)];
	(*_9637_e.alloc)._field_Items=_209389614_buildTypeEnumItems(_self_, &(_9737_itemTokens));
	return _9637_e;;
}



inline jule::Ptr<_20872b677_Expr> _209389d51_buildEnumItemExpr(jule::Ptr<_209381683_parser> _self_, jule::I64* _98839_i, jule::Slice<jule::Ptr<_208711827_Token>>* _98852_tokens) {
	jule::I64 _9897_braceN = 0LL;;
	jule::I64 _9903_exprStart = (*(_98839_i));;
	for (; ((*(_98839_i)) < (*(_98852_tokens)).len()); ((*(_98839_i)))++) {
		{
			jule::Ptr<_208711827_Token> _9924_t = (*(_98852_tokens))[(*(_98839_i))];;
			{
				auto &_match_expr{ (*(_9924_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_21a0d5b46:;
					{
						(_9897_braceN)++;
						goto _iter_next_21a0d50c9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21a0d5e76:;
					{
						(_9897_braceN)--;
					}
				}
				_match_end_21a0d5bbd:;
			};
			if ((_9897_braceN > 0LL)) {
				goto _iter_next_21a0d50c9;
			};
			if ((((*(_9924_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_98839_i)) + 1LL) >= (*(_98852_tokens)).len()))) {
				jule::Slice<jule::Ptr<_208711827_Token>> _100813_exprTokens = nullptr;;
				if (((*(_9924_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_100813_exprTokens=(*(_98852_tokens)).slice(_9903_exprStart, (*(_98839_i)));
				} else {
					_100813_exprTokens=(*(_98852_tokens)).slice(_9903_exprStart);
				};
				return _20938281b_buildExpr(_self_, &(_100813_exprTokens));;
			};
		}
	_iter_next_21a0d50c9:;
	}
	_iter_end_21a0d50c9:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_208740823_EnumItemDecl>> _20938a192_buildEnumItems(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _102036_tokens) {
	jule::Slice<jule::Ptr<_208740823_EnumItemDecl>> _10217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208740823_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208740823_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _10227_i = 0LL;;
	for (; (_10227_i < (*(_102036_tokens)).len()); (_10227_i)++) {
		{
			jule::Ptr<_208711827_Token> _10248_t = (*(_102036_tokens))[_10227_i];;
			jule::Ptr<_208740823_EnumItemDecl> _10258_item = jule::new_ptr<_208740823_EnumItemDecl>(_208740823_EnumItemDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr)});;
			(*_10258_item.alloc)._field_Token=_10248_t;
			if (((*((*_10258_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_209382167_pushErr(_self_.ptr(), (*_10258_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10258_item.alloc)._field_Ident=(*((*_10258_item.alloc)._field_Token))._field_Kind;
			if ((((_10227_i + 1LL) >= (*(_102036_tokens)).len()) || ((*((*(_102036_tokens))[(_10227_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_10227_i + 1LL) < (*(_102036_tokens)).len())) {
					(_10227_i)++;
				};
				{ jule::Slice<jule::Ptr<_208740823_EnumItemDecl>> &__jule_push_dest = _10217_items; __jule_push_dest.push(_10258_item); };
				goto _iter_next_21a0d9809;
			};
			(_10227_i)++;
			_10248_t=(*(_102036_tokens))[_10227_i];
			(_10227_i)++;
			if (((*(_10248_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_209382167_pushErr(_self_.ptr(), _10248_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_21a0d9809;
			};
			if (((_10227_i >= (*(_102036_tokens)).len()) || ((*((*(_102036_tokens))[_10227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_209382167_pushErr(_self_.ptr(), _10248_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_21a0d9809;
			};
			(*_10258_item.alloc)._field_Expr=_209389d51_buildEnumItemExpr(_self_, &(_10227_i), _102036_tokens);
			{ jule::Slice<jule::Ptr<_208740823_EnumItemDecl>> &__jule_push_dest = _10217_items; __jule_push_dest.push(_10258_item); };
		}
	_iter_next_21a0d9809:;
	}
	_iter_end_21a0d9809:;;
	return _10217_items;;
}



inline jule::Ptr<_2087413d4_EnumDecl> _20938a4d3_buildEnumDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _105735_tokens) {
	if (((*(_105735_tokens)).len() < 3LL)) {
		_209382167_pushErr(_self_.ptr(), (*(_105735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2087413d4_EnumDecl> _10627_e = jule::new_ptr<_2087413d4_EnumDecl>(_2087413d4_EnumDecl{._field_Token=(*(_105735_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_208740823_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_208711827_Token>(nullptr)});;
	if (((*((*(_10627_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_10627_e))._field_Ident=(*((*_10627_e.alloc)._field_Token))._field_Kind;
	jule::I64 _10707_i = 2LL;;
	if (((*((*(_105735_tokens))[_10707_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_10707_i)++;
		if ((_10707_i >= (*(_105735_tokens)).len())) {
			_209382167_pushErr(_self_.ptr(), (*(_105735_tokens))[(_10707_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10627_e;;
		};
		({
			__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, _105735_tokens, (&(_10707_i)), true);
			(*_10627_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10707_i >= (*(_105735_tokens)).len())) {
			_2093819b3_stop(_self_.ptr());
			_209382167_pushErr(_self_, (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10627_e;;
		};
	} else {
		(*_10627_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _10877_itemTokens = _20937ed35_range(&(_10707_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _105735_tokens);;
	if ((_10877_itemTokens == nullptr)) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10627_e;;
	} else if ((_10707_i < (*(_105735_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_105735_tokens))[_10707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10627_e.alloc)._field_Public=_208927587_IsPub((*_10627_e.alloc)._field_Ident);
	(*_10627_e.alloc)._field_End=(*(_105735_tokens))[(_10707_i - 1LL)];
	(*_10627_e.alloc)._field_Items=_20938a192_buildEnumItems(_self_, &(_10877_itemTokens));
	return _10627_e;;
}



inline jule::Any _20938a824_buildNodeEnumDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _110239_tokens) {
	if ((((*(_110239_tokens)).len() > 3LL) && ((*((*(_110239_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_110239_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_209389955_buildTypeEnumDecl(_self_, _110239_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_20938a4d3_buildEnumDecl(_self_, _110239_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_208742638_FieldDecl> _20938ab65_buildField(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _111131_tokens) {
	jule::Ptr<_208742638_FieldDecl> _11127_f = jule::new_ptr<_208742638_FieldDecl>(_208742638_FieldDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_20872b677_Expr>(nullptr)});;
	(*_11127_f.alloc)._field_Mutable=((*(_111131_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_11127_f.alloc)._field_Mutable) {
		if ((_111131_tokens.len() == 1LL)) {
			_209382167_pushErr(_self_.ptr(), _111131_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_111131_tokens).mut_slice(1LL);;
	};
	(*_11127_f.alloc)._field_Token=_111131_tokens[0LL];
	if (((*((*_11127_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*_11127_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11127_f.alloc)._field_Ident=(*((*_11127_f.alloc)._field_Token))._field_Kind;
	if ((_111131_tokens.len() == 1LL)) {
		_209382167_pushErr(_self_.ptr(), _111131_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_111131_tokens.len() < 3LL) || ((*(_111131_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_209382167_pushErr(_self_.ptr(), _111131_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_111131_tokens).mut_slice(2LL);;
	jule::I64 _11407_i = 0LL;;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_111131_tokens), (&(_11407_i)), true);
		(*_11127_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11407_i < _111131_tokens.len())) {
		jule::Ptr<_208711827_Token> _11434_token = _111131_tokens[_11407_i];;
		if (((*(_11434_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_209382167_pushErr(_self_.ptr(), _111131_tokens[_11407_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11407_i)++;
		if ((_11407_i >= _111131_tokens.len())) {
			_209382167_pushErr(_self_.ptr(), _11434_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_111131_tokens).mut_slice(_11407_i);;
		(*_11127_f.alloc)._field_Default=_20938281b_buildExpr(_self_, &(_111131_tokens));
	};
	(*_11127_f.alloc)._field_Public=_208927587_IsPub((*_11127_f.alloc)._field_Ident);
	return _11127_f;;
}



inline jule::Slice<jule::Ptr<_208742638_FieldDecl>> _20938aea6_buildStructDeclFields(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _116042_tokens) {
	jule::Slice<jule::Ptr<_208742638_FieldDecl>> _116111_fields = nullptr;;
	jule::Slice<jule::Ptr<_209362ad7_stmt>> _11627_stmts = _209362e8e_splitStmts(&(_116042_tokens));;
	{
		auto expr = &(_11627_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a10acc0:;
		if (it != expr_end) {
			jule::Ptr<_209362ad7_stmt> _116315_stmt = *it;
			{
				_116042_tokens=(*(_116315_stmt))._field_tokens;
				jule::Ptr<_208742638_FieldDecl> _11658_f = _20938ab65_buildField(_self_, _116042_tokens);;
				{ jule::Slice<jule::Ptr<_208742638_FieldDecl>> &__jule_push_dest = _116111_fields; __jule_push_dest.push(_11658_f); };
			}
			_iter_next_21a10acc0:;
			++it;
			goto _iter_begin_21a10acc0;
		}
		_iter_end_21a10acc0:;
	};
	return _116111_fields;;
}



inline jule::Ptr<_20874302e_StructDecl> _20938b2e7_buildStructDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _117137_tokens) {
	if (((*(_117137_tokens)).len() < 3LL)) {
		_209382167_pushErr(_self_.ptr(), (*(_117137_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _11777_i = 1LL;;
	jule::Ptr<_20874302e_StructDecl> _11787_s = jule::new_ptr<_20874302e_StructDecl>(_20874302e_StructDecl{._field_Token=(*(_117137_tokens))[_11777_i], ._field_End=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_208742638_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr)});;
	if (((*((*(_11787_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*_11787_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11777_i)++;
	if ((_11777_i >= (*(_117137_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_117137_tokens))[_11777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	(*(_11787_s))._field_Ident=(*((*_11787_s.alloc)._field_Token))._field_Kind;
	jule::Ptr<_208711827_Token> _11923_errorToken = (*(_117137_tokens))[_11777_i];;
	jule::Slice<jule::Ptr<_208711827_Token>> _11937_genericsTokens = _20937ed35_range(&(_11777_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _117137_tokens);;
	if ((_11937_genericsTokens != nullptr)) {
		(*_11787_s.alloc)._field_Generics=_209385676_buildGenerics(_self_, &(_11937_genericsTokens), &(_11923_errorToken));
	};
	if ((_11777_i >= (*(_117137_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_117137_tokens))[(_11777_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _12037_bodyTokens = _20937ed35_range(&(_11777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _117137_tokens);;
	if ((_12037_bodyTokens == nullptr)) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, (*_11787_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	if ((_11777_i < (*(_117137_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_117137_tokens))[_11777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11787_s.alloc)._field_Public=_208927587_IsPub((*_11787_s.alloc)._field_Ident);
	(*_11787_s.alloc)._field_Fields=_20938aea6_buildStructDeclFields(_self_, _12037_bodyTokens);
	(*_11787_s.alloc)._field_End=(*(_117137_tokens))[(_11777_i - 1LL)];
	return _11787_s;;
}



inline void _20938b5a0_checkMethodReceiver(_209381683_parser* _self_, jule::Ptr<_2087390d0_FnDecl>* _121936_f) {
	if ((*((*(_121936_f))))._field_Statically) {
		if ((((*((*(_121936_f))))._field_Params.len() > 0LL) && _208738035_IsSelf((*((*(_121936_f))))._field_Params[0LL].ptr()))) {
			_209382167_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121936_f))))._field_Params.len() == 0LL)) {
		_209382167_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_208737b7d_ParamDecl> _12313_param = (*((*(_121936_f))))._field_Params[0LL];;
	if ((!(_208738035_IsSelf(_12313_param.ptr())))) {
		_209382167_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _20938b913_buildTraitBody(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20874376b_TraitDecl>* _123836_t, jule::Slice<jule::Ptr<_208711827_Token>> _123860_tokens) {
	jule::Slice<jule::Ptr<_209362ad7_stmt>> _12397_stmts = _209362e8e_splitStmts(&(_123860_tokens));;
	{
		auto expr = &(_12397_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a11c2ba:;
		if (it != expr_end) {
			jule::Ptr<_209362ad7_stmt> _124015_stmt = *it;
			{
				_123860_tokens=(*(_124015_stmt))._field_tokens;
				if ((_123860_tokens.len() == 0LL)) {
					goto _iter_next_21a11c2ba;
				};
				{
					auto &_match_expr{ (*(_123860_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_21a120e6c:;
						{
							jule::Ptr<_2087390d0_FnDecl> _12479_f = _209388305_buildFn(_self_, &(_123860_tokens), true, true);;
							if ((_12479_f == nullptr)) {
								goto _match_end_21a11d61d;
							};
							_20938b5a0_checkMethodReceiver(_self_, &(_12479_f));
							if (((*(_12479_f))._field_Generics.len() > 0LL)) {
								_209382167_pushErr(_self_, (*_12479_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_2087390d0_FnDecl>> &__jule_push_dest = (*((*(_123836_t))))._field_Methods; __jule_push_dest.push(_12479_f); };
						}
					}
					else {
						_case_begin_21a11ce36:;
						{
							jule::I64 _12579_i = 0LL;;
							jule::Ptr<_208727343_TypeDecl> _12589_ti;
							jule::Bool _125813_ok;
							({
								__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_123860_tokens), (&(_12579_i)), true);
								_12589_ti = __jule_assign_result.__jule_result_arg0;
								_125813_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125813_ok))) {
								goto _match_end_21a11d61d;
							};
							if ((_12579_i < _123860_tokens.len())) {
								_209382167_pushErr(_self_.ptr(), _123860_tokens[_12579_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = (*((*(_123836_t))))._field_Inherits; __jule_push_dest.push(_12589_ti); };
						}
					}
					_match_end_21a11d61d:;
				};
			}
			_iter_next_21a11c2ba:;
			++it;
			goto _iter_begin_21a11c2ba;
		}
		_iter_end_21a11c2ba:;
	};
}



inline jule::Ptr<_20874376b_TraitDecl> _20938bc54_buildTraitDecl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _127036_tokens) {
	if (((*(_127036_tokens)).len() < 3LL)) {
		_209382167_pushErr(_self_.ptr(), (*(_127036_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20874376b_TraitDecl> _12757_t = jule::new_ptr<_20874376b_TraitDecl>(_20874376b_TraitDecl{._field_Token=(*(_127036_tokens))[1LL], ._field_End=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_2087390d0_FnDecl>>(nullptr)});;
	if (((*((*(_12757_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209382167_pushErr(_self_.ptr(), (*_12757_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_12757_t))._field_Ident=(*((*_12757_t.alloc)._field_Token))._field_Kind;
	jule::I64 _12837_i = 2LL;;
	jule::Slice<jule::Ptr<_208711827_Token>> _12847_bodyTokens = _20937ed35_range(&(_12837_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _127036_tokens);;
	if ((_12847_bodyTokens == nullptr)) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, (*_12757_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12837_i < (*(_127036_tokens)).len())) {
		_209382167_pushErr(_self_.ptr(), (*(_127036_tokens))[_12837_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12757_t.alloc)._field_Public=_208927587_IsPub((*_12757_t.alloc)._field_Ident);
	_20938b913_buildTraitBody(_self_, &(_12757_t), _12847_bodyTokens);
	(*_12757_t.alloc)._field_End=(*(_127036_tokens))[(_12837_i - 1LL)];
	return _12757_t;;
}



inline jule::Ptr<_2087390d0_FnDecl> _20938c095_buildBindFn(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _130032_tokens) {
	(_130032_tokens).mut_slice(1LL);;
	jule::Ptr<_2087390d0_FnDecl> _13027_f = _209388305_buildFn(_self_, &(_130032_tokens), false, true);;
	if ((_13027_f != nullptr)) {
		(*_13027_f.alloc)._field_Public=false;
		(*_13027_f.alloc)._field_Binded=true;
	};
	return _13027_f;;
}



inline jule::Ptr<_20873a28a_VarDecl> _20938c3d6_buildBindVar(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _131033_tokens) {
	(_131033_tokens).mut_slice(1LL);;
	jule::Ptr<_20873a28a_VarDecl> _13127_v = _209384e39_buildVar(_self_, _131033_tokens);;
	if ((_13127_v != nullptr)) {
		(*_13127_v.alloc)._field_Public=false;
		(*_13127_v.alloc)._field_Binded=true;
		if (((*_13127_v.alloc)._field_Expr != nullptr)) {
			_209382167_pushErr(_self_, (*_13127_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13127_v;;
}



inline jule::Ptr<_20874302e_StructDecl> _20938c727_buildBindStruct(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _132336_tokens) {
	(_132336_tokens).mut_slice(1LL);;
	jule::Ptr<_20874302e_StructDecl> _13257_s = _20938b2e7_buildStructDecl(_self_, &(_132336_tokens));;
	if ((_13257_s != nullptr)) {
		(*_13257_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13257_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a13060d:;
			if (it != expr_end) {
				jule::Ptr<_208742638_FieldDecl> _132816_f = *it;
				{
					(*(_132816_f))._field_Public=true;
				}
				_iter_next_21a13060d:;
				++it;
				goto _iter_begin_21a13060d;
			}
			_iter_end_21a13060d:;
		};
		(*_13257_s.alloc)._field_Binded=true;
	};
	return _13257_s;;
}



inline jule::Ptr<_20873e019_TypeAliasDecl> _20938ca68_buildBindTypeAlias(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _133739_tokens) {
	(_133739_tokens).mut_slice(1LL);;
	jule::Ptr<_20873e019_TypeAliasDecl> _13397_t = _2093840ae_buildTypeAliasDecl(_self_, &(_133739_tokens));;
	if ((_13397_t != nullptr)) {
		(*_13397_t.alloc)._field_Public=false;
		(*_13397_t.alloc)._field_Binded=true;
	};
	return _13397_t;;
}



inline jule::Ptr<_20874036c_UseDecl> _20938cda9_buildBindUse(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _134733_tokens) {
	if ((_134733_tokens.len() == 1LL)) {
		_209382167_pushErr(_self_.ptr(), _134733_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134733_tokens).mut_slice(1LL);;
	;
	return _209388dc7_buildUseDecl(_self_.ptr(), _134733_tokens, true);;
}



inline jule::Any _20938d1ea_buildBind(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _135831_tokens) {
	jule::Ptr<_208711827_Token> _13597_token = (*(_135831_tokens))[0LL];;
	if (((*(_135831_tokens)).len() == 1LL)) {
		_209382167_pushErr(_self_.ptr(), _13597_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13597_token=(*(_135831_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13597_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_21a136559:;
			{
				return jule::Any(_20938c095_buildBindFn(_self_, (*(_135831_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_21a1365c0:;
			{
				return jule::Any(_20938c3d6_buildBindVar(_self_, (*(_135831_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_21a1361b3:;
			{
				return jule::Any(_20938c727_buildBindStruct(_self_, (*(_135831_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_21a136229:;
			{
				return jule::Any(_20938ca68_buildBindTypeAlias(_self_, (*(_135831_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_21a13548c:;
			{
				_209382167_pushErr(_self_, _13597_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_21a13614c:;
	};
	return nullptr;;
}



inline jule::Ptr<_2087390d0_FnDecl> _20938d53b_getMethod(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _138231_tokens) {
	jule::I64 _13837_i = 0LL;;
	jule::Ptr<_208711827_Token> _13847_token = (*(_138231_tokens))[_13837_i];;
	if (((*(_13847_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_13837_i + 1LL) >= (*(_138231_tokens)).len())) {
			_209382167_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13837_i)++;
		_13847_token=(*(_138231_tokens))[_13837_i];
	};
	if (((*(_13847_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_13837_i + 1LL) >= (*(_138231_tokens)).len())) {
			_209382167_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13837_i)++;
		_13847_token=(*(_138231_tokens))[_13837_i];
	};
	if (((*(_13847_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_209382167_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _209388305_buildFn(_self_, _138231_tokens, true, false);;
}



inline void _20938d89e_parseImplBody(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_208743dcb_Impl>* _141135_ipl, jule::Slice<jule::Ptr<_208711827_Token>>* _141157_tokens) {
	jule::Slice<jule::Ptr<_209362ad7_stmt>> _14127_stmts = _209362e8e_splitStmts(_141157_tokens);;
	{
		auto expr = &(_14127_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a13e232:;
		if (it != expr_end) {
			jule::Ptr<_209362ad7_stmt> _141315_stmt = *it;
			{
				(*(_141157_tokens))=(*(_141315_stmt))._field_tokens;
				jule::Ptr<_208711827_Token> _14158_token = (*(_141157_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14158_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_21a1402dd:;
						{
							_209382e15_pushDirective(_self_.ptr(), _209382b5c_buildDirective(_self_, (*(_141157_tokens))));
							goto _iter_next_21a13e232;
						}
					}
					_match_end_21a140530:;
				};
				{
					auto &_match_expr{ (*(_14158_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_21a140c4a:;
						{
							jule::Ptr<_20873a28a_VarDecl> _14249_v = _209384e39_buildVar(_self_, (*(_141157_tokens)));;
							if ((_14249_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_20873a28a_VarDecl>> &__jule_push_dest = (*((*(_141135_ipl))))._field_Statics; __jule_push_dest.push(_14249_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_21a1417b7:;
						{
							jule::Ptr<_2087390d0_FnDecl> _14319_f = _20938d53b_getMethod(_self_, _141157_tokens);;
							if ((_14319_f != nullptr)) {
								_20938b5a0_checkMethodReceiver(_self_, &(_14319_f));
								_20938e2d9_applyFnMeta(_self_, &(_14319_f));
								{ jule::Slice<jule::Ptr<_2087390d0_FnDecl>> &__jule_push_dest = (*((*(_141135_ipl))))._field_Methods; __jule_push_dest.push(_14319_f); };
							};
						}
					}
					else {
						_case_begin_21a140684:;
						{
							_209382167_pushErr(_self_, _14158_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_21a13e232;
						}
					}
					_match_end_21a140b5c:;
				};
			}
			_iter_next_21a13e232:;
			++it;
			goto _iter_begin_21a13e232;
		}
		_iter_end_21a13e232:;
	};
}



inline jule::Ptr<_208743dcb_Impl> _20938dbe0_buildImpl(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>> _144430_tokens) {
	jule::Ptr<_208711827_Token> _14457_token = _144430_tokens[0LL];;
	if ((_144430_tokens.len() < 2LL)) {
		_209382167_pushErr(_self_.ptr(), _14457_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _14517_i = 1LL;;
	jule::Ptr<_208727343_TypeDecl> _14537_base;
	jule::Bool _145317_ok;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_144430_tokens), (&(_14517_i)), true);
		_14537_base = __jule_assign_result.__jule_result_arg0;
		_145317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_145317_ok))) {
		return nullptr;;
	};
	if ((_14517_i >= _144430_tokens.len())) {
		_209382167_pushErr(_self_.ptr(), _14457_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_208743dcb_Impl> _14627_ipl = jule::new_ptr<_208743dcb_Impl>(_208743dcb_Impl{._field_End=jule::Ptr<_208711827_Token>(nullptr), ._field_Base=_14537_base, ._field_Dest=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_2087390d0_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_20873a28a_VarDecl>>(nullptr)});;
	_14457_token=_144430_tokens[_14517_i];
	if (((*(_14457_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_14457_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_14627_ipl))._field_Base, (*_14627_ipl.alloc)._field_Dest);
			goto _julec_label_21a14e31e;
		};
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14517_i)++;
	if ((_14517_i >= _144430_tokens.len())) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType(_self_, &(_144430_tokens), (&(_14517_i)), true);
		(*(_14627_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_145317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_145317_ok))) {
		return nullptr;;
	};
	if ((_14517_i >= _144430_tokens.len())) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_21a14e31e:;
	jule::Slice<jule::Ptr<_208711827_Token>> _15007_bodyTokens = _20937ed35_range(&(_14517_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_144430_tokens));;
	if ((_15007_bodyTokens == nullptr)) {
		_2093819b3_stop(_self_.ptr());
		_209382167_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14517_i < _144430_tokens.len())) {
		_209382167_pushErr(_self_.ptr(), _144430_tokens[_14517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*(_14627_ipl))._field_End=_144430_tokens[(_14517_i - 1LL)];
	_20938d89e_parseImplBody(_self_, &(_14627_ipl), &(_15007_bodyTokens));
	return _14627_ipl;;
}



inline jule::Any _20938e031_buildNodeData(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _151535_tokens) {
	jule::Ptr<_208711827_Token> _15167_token = (*(_151535_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15167_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_21a153202:;
			{
				jule::Ptr<_2087390d0_FnDecl> _15208_f = _209388305_buildFn(_self_, _151535_tokens, false, false);;
				if ((_15208_f != nullptr)) {
					(*_15208_f.alloc)._field_Global=true;
				};
				return jule::Any(_15208_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_21a153895:;
			{
				return jule::Any(_209384e39_buildVar(_self_, (*(_151535_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_21a15390b:;
			{
				return jule::Any(_2093840ae_buildTypeAliasDecl(_self_, _151535_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_21a153972:;
			{
				return _20938a824_buildNodeEnumDecl(_self_, _151535_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_21a152d39:;
			{
				return jule::Any(_20938b2e7_buildStructDecl(_self_, _151535_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_21a152db1:;
			{
				return jule::Any(_20938bc54_buildTraitDecl(_self_, _151535_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_21a152e38:;
			{
				return jule::Any(_20938dbe0_buildImpl(_self_, (*(_151535_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_21a152eb0:;
			{
				return _20938d1ea_buildBind(_self_, _151535_tokens);;
			}
		}
		else {
			_case_begin_21a152a2b:;
			{
				_209382167_pushErr(_self_, _15167_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21a152cb2:;
	};
}



inline void _20938e2d9_applyFnMeta(_209381683_parser* _self_, jule::Ptr<_2087390d0_FnDecl>* _154832_f) {
	(*((*(_154832_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _20938e592_applyMeta(_209381683_parser* _self_, _208726342_Node* _155330_node) {
	{
		auto &_match_expr{ (*(_155330_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_21a1598ac:;
			{
				jule::Ptr<_20873a28a_VarDecl> _15568_v = (*(_155330_node))._field_Data.unsafe_cast_ptr<_20873a28a_VarDecl>();;
				if ((_15568_v == nullptr)) {
					return;;
				};
				(*(_15568_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_21a159615:;
			{
				jule::Ptr<_2087390d0_FnDecl> _15638_f = (*(_155330_node))._field_Data.unsafe_cast_ptr<_2087390d0_FnDecl>();;
				if ((_15638_f == nullptr)) {
					return;;
				};
				_20938e2d9_applyFnMeta(_self_, &(_15638_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_21a159956:;
			{
				jule::Ptr<_20874302e_StructDecl> _15698_sd = (*(_155330_node))._field_Data.unsafe_cast_ptr<_20874302e_StructDecl>();;
				if ((_15698_sd == nullptr)) {
					return;;
				};
				(*(_15698_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_21a159824:;
	};
}



inline void _20938e84a_pushUseDecl(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_20874036c_UseDecl>* _157833_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_20874036c_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157833_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_209382167_pushErr(_self_, (*((*(_157833_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_2093824ca_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20938eb8b_pushMetaNodes(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _158635_tokens) {
	{
		auto &_match_expr{ (*((*(_158635_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_21a160c48:;
			{
				;
				jule::Ptr<_20874036c_UseDecl> _15908_decl = _209388dc7_buildUseDecl(_self_.ptr(), (*(_158635_tokens)), false);;
				_20938e84a_pushUseDecl(_self_, &(_15908_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_21a160cc0:;
			{
				if ((((*(_158635_tokens)).len() > 1LL) && ((*((*(_158635_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_20874036c_UseDecl> _15959_decl = _20938cda9_buildBindUse(_self_, (*(_158635_tokens)));;
					_20938e84a_pushUseDecl(_self_, &(_15959_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_21a160d36:;
			{
				_209382e15_pushDirective(_self_, _209382b5c_buildDirective(_self_, (*(_158635_tokens))));
				return true;;
			}
		}
		_match_end_21a160b38:;
	};
	return false;;
}



inline _208726342_Node _20938eecc_parseNode(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _160631_st) {
	_208726342_Node _16077_node = _208726342_Node{._field_Token=(*(_160631_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_20938eb8b_pushMetaNodes(_self_, _160631_st)) {
		return _16077_node;;
	};
	jule::Any _16157_data = _20938e031_buildNodeData(_self_, _160631_st);;
	if ((_16157_data == nullptr)) {
		return _16077_node;;
	};
	_16077_node._field_Data=_16157_data;
	_20938e592_applyMeta(_self_, &(_16077_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_209382167_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16077_node;;
}



inline void _209390285_appendNode(jule::Ptr<_209381683_parser> _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _163032_st) {
	if (((*(_163032_st)).len() == 0LL)) {
		return;;
	};
	_208726342_Node _16347_node = _20938eecc_parseNode(_self_, _163032_st);;
	if (((_16347_node._field_Data != nullptr) && (!(_209381c49_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_208726342_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16347_node; __jule_collection; }));
	};
}



inline void _20939075d_removeRange(_209381683_parser* _self_, jule::I64 _164027_i, jule::U64 _164035_id, jule::Slice<jule::Ptr<_208711827_Token>>* _164051_tokens, jule::Slice<jule::I64>* _164081_ranges) {
	jule::U64 _16413_close = _20938083b_getCloseOfBrace(_164035_id);;
	for (; (_164027_i >= 0LL); (_164027_i)--) {
		{
			jule::Ptr<_208711827_Token> _16434_tok = (*(_164051_tokens))[(*(_164081_ranges))[_164027_i]];;
			if (((*(_16434_tok))._field_Id != _16413_close)) {
				goto _iter_next_21a16acca;
			};
			(*(_164081_ranges))=jule::append((*(_164081_ranges)).slice(0LL, _164027_i),(*(_164081_ranges)).slice((_164027_i + 1LL)));
			goto _iter_end_21a16acca;
		}
	_iter_next_21a16acca:;
	}
	_iter_end_21a16acca:;;
}



inline void _209390b7b_pushWrongOrderCloseErr(_209381683_parser* _self_, jule::Ptr<_208711827_Token>* _165239_t, jule::Slice<jule::Ptr<_208711827_Token>>* _165258_tokens, jule::Slice<jule::I64>* _165284_ranges) {
	{
		auto &_match_expr{ (*((*(_165258_tokens))[(*(_165284_ranges))[((*(_165284_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_21a16d1b7:;
			{
				_209382167_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_21a16d23e:;
			{
				_209382167_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_21a16d2a5:;
			{
				_209382167_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_21a16d0a7:;
	};
}



inline void _209391154_pushRangeClose(_209381683_parser* _self_, jule::Ptr<_208711827_Token> _166330_t, jule::U64 _166348_left, jule::Slice<jule::Ptr<_208711827_Token>>* _166366_tokens, jule::Slice<jule::I64>* _166396_ranges) {
	jule::I64 _16643_n = (*(_166396_ranges)).len();;
	if ((_16643_n == 0LL)) {
		{
			auto &_match_expr{ (*(_166330_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_21a1711ba:;
				{
					_209382167_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_21a171242:;
				{
					_209382167_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_21a1712a8:;
				{
					_209382167_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_21a1710ee:;
		};
		return;;
	} else if (((*((*(_166366_tokens))[(*(_166396_ranges))[(_16643_n - 1LL)]]))._field_Id != _166348_left)) {
		_209390b7b_pushWrongOrderCloseErr(_self_, &(_166330_t), _166366_tokens, _166396_ranges);
	};
	_20939075d_removeRange(_self_, (_16643_n - 1LL), (*(_166330_t))._field_Id, _166366_tokens, _166396_ranges);
}



inline void _20939140c_checkRanges(_209381683_parser* _self_, jule::Slice<jule::Ptr<_208711827_Token>>* _168128_tokens) {
	jule::Slice<jule::I64> _168211_ranges = nullptr;;
	{
		auto expr = _168128_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a174421:;
		if (it != expr_end) {
			jule::I64 _16847_i = it - expr->begin();
			jule::Ptr<_208711827_Token> *_168410_token = it;
			{
				{
					auto &_match_expr{ (*((*(_168410_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_21a175356:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _168211_ranges; __jule_push_dest.push(_16847_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_21a1753de:;
						{
							_209391154_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U64>(74LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_21a175455:;
						{
							_209391154_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U64>(72LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_21a1754bb:;
						{
							_209391154_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U64>(76LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					_match_end_21a17528a:;
				};
			}
			_iter_next_21a174421:;
			++it;
			_16847_i++;
			goto _iter_begin_21a174421;
		}
		_iter_end_21a174421:;
	};
	{
		auto expr = &(_168211_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a175587:;
		if (it != expr_end) {
			jule::I64 _169910_i = *it;
			{
				jule::Ptr<_208711827_Token> _17004_token = (*(_168128_tokens))[_169910_i];;
				{
					auto &_match_expr{ (*(_17004_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21a178238:;
						{
							_209382167_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_21a17829e:;
						{
							_209382167_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_21a178315:;
						{
							_209382167_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_21a177ea2:;
				};
			}
			_iter_next_21a175587:;
			++it;
			goto _iter_begin_21a175587;
		}
		_iter_end_21a175587:;
	};
}



inline void _2093916b5_parse(jule::Ptr<_209381683_parser> _self_, jule::Ptr<_2087173cc_Fileset>* _171227_f) {
	(*(_self_))._field_ast=jule::new_ptr<_2087253da_AST>(_2087253da_AST{._field_File=(*(_171227_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_20874036c_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_208726342_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_209370d9d_exprBuilder>(_209370d9d_exprBuilder{._field_p=_self_});
	_20939140c_checkRanges(_self_, &((*((*(_171227_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_209362ad7_stmt>> _17257_stmts = _209362e8e_splitStmts(&((*((*(_171227_f))))._field_Tokens));;
	jule::I64 _17287_i = 0LL;;
	for (; (_17287_i < _17257_stmts.len()); (_17287_i)++) {
		{
			jule::Ptr<_209362ad7_stmt> _17308_stmt = _17257_stmts[_17287_i];;
			if (((*(_17308_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_17308_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_21a17bc42;
			};
			if ((!(_21e65d708_IsTopDirective((*((*(_17308_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_21a17bc42;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_208726760_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _209382b5c_buildDirective(_self_, (*(_17308_stmt))._field_tokens); __jule_collection; }));
		}
	_iter_next_21a17bc42:;
	}
	_iter_end_21a17bc42:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17287_i < _17257_stmts.len()) && (!(_209381c49_stopped(_self_)))); (_17287_i)++) {
		{
			jule::Ptr<_209362ad7_stmt> _17478_stmt = _17257_stmts[_17287_i];;
			_209390285_appendNode(_self_, &((*(_17478_stmt))._field_tokens));
		}
	_iter_next_21a185014:;
	}
	_iter_end_21a185014:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_209382167_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _209392e14_pushErr(_20939283c_typeBuilder* _self_, jule::Ptr<_208711827_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_209382167_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _209393277_pushSuggestion(_20939283c_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_2093824ca_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_208727343_TypeDecl> _20939350d_buildNamespace(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208727343_TypeDecl> _457_t = jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_2087280e1_NamespaceTypeDecl> _487_ns = jule::new_ptr<_2087280e1_NamespaceTypeDecl>(_2087280e1_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_208711827_Token>(nullptr), ._field_Kind=jule::Ptr<_208727343_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_209392e14_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_209393277_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_209392e14_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_209393277_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_209392e14_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_209393277_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_209392e14_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_209393277_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_209393cb1_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type92);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_208727343_TypeDecl>> _209393794_buildGenerics(_20939283c_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_208711827_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _857_parts = _209393a2a_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_209392e14_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_208727343_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208727343_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208727343_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a19570b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _9215_part = *it;
			{
				jule::I64 _938_j = 0LL;;
				jule::Ptr<_208727343_TypeDecl> _948_t;
				({
					__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_209392e14_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_208727343_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_21a19570b:;
			++it;
			goto _iter_begin_21a19570b;
		}
		_iter_end_21a19570b:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _209393a2a_identGenerics(_20939283c_typeBuilder* _self_) {
	jule::I64 _1043_first = (*((*(_self_))._field_i));;
	jule::I64 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_208711827_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_21a198d91:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_21a1991c1:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_21a198e18:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_21a198038;
			};
		}
	_iter_next_21a198038:;
	}
	_iter_end_21a198038:;;
	jule::Slice<jule::Ptr<_208711827_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _1207_parts;
	jule::Slice<_21e65b904_Log> _12014_errors;
	({
		__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_assign_result = _2093805a5_parts(&(_1197_tokens), static_cast<jule::U64>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_208727343_TypeDecl> _209393cb1_buildIdent(_20939283c_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _20939350d_buildNamespace(_self_);;
	};
	jule::Ptr<_208711827_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_20872794d_IdentTypeDecl> _1337_it = jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_208727343_TypeDecl> _1397_itd = jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1337_it))._field_Generics=_209393794_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_209392e14_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_209392e14_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_208727c17_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_208727c17_SubIdentTypeDecl>(_208727c17_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_208727343_TypeDecl> _1587_ident = _209393cb1_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_21a1a4b16:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.unsafe_cast_ptr<_20872794d_IdentTypeDecl>(); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_21a19e182:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_208727c17_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_21a1a4aa0:;
	};
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type88)});;
}



inline jule::Ptr<_208727343_TypeDecl> _209394047_buildCppLink(_20939283c_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_209392e14_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_208727343_TypeDecl> _1777_t = _209393cb1_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_20872794d_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_208727343_TypeDecl> _2093942cd_buildFn(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_2087390d0_FnDecl> _1847_f = _209387d4e_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_208739476_IsAnon(_1847_f.ptr())))) {
		_209392e14_pushErr(_self_, (*_1847_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_208727343_TypeDecl> _209394564_buildPtr(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_209392e14_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_208728d6c_PtrTypeDecl>(_208728d6c_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_208727343_TypeDecl> _2157_elem = _2093955ba_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_208728d6c_PtrTypeDecl>(_208728d6c_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_208727343_TypeDecl> _2093947ea_buildSptr(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_209392e14_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_208727343_TypeDecl> _2367_elem = _2093955ba_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_2087283dd_SptrTypeDecl>(_2087283dd_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_208727343_TypeDecl> _209394a81_buildSlc(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_208727343_TypeDecl> _2527_elem = _2093955ba_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_208728773_SlcTypeDecl>(_208728773_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_208727343_TypeDecl> _209394d17_buildArr(_20939283c_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_208711827_Token>> _2657_exprTokens = _20937ed35_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_209392e14_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_208727343_TypeDecl> _2717_elem = _2093955ba_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20872960e_ArrTypeDecl> _2767_arrt = jule::new_ptr<_20872960e_ArrTypeDecl>(_20872960e_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_20872b677_Expr>(nullptr)});;
	jule::Ptr<_208711827_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_20938281b_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_208727343_TypeDecl> _20939509d_buildMap(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_209392e14_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_208711827_Token>> _3027_keyTokens = _20937ed35_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_209392e14_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_209392e14_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_208729d5c_MapTypeDecl> _3117_mapt = jule::new_ptr<_208729d5c_MapTypeDecl>(_208729d5c_MapTypeDecl{._field_Key=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_208727343_TypeDecl>(nullptr)});;
	jule::I64 _3127_j = 0LL;;
	jule::Ptr<_208727343_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_209392e14_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_208727343_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_assign_result = _209383c6d_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_208727343_TypeDecl> _209395334_buildEnumerable(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_209392e14_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _209394a81_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _209394d17_buildArr(_self_);;
}



inline jule::Ptr<_208727343_TypeDecl> _2093955ba_step(_20939283c_typeBuilder* _self_) {
	jule::Ptr<_208711827_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_21a1c488e:;
			{
				return _209393cb1_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_21a1c4c79:;
			{
				return _209394047_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_21a1c4ce0:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_208727343_TypeDecl> _3589_f = _2093942cd_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_2087390d0_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_21a1c4d56:;
			{
				return _2093942cd_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21a1c4dbc:;
			{
				return _209394564_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_21a1c4e44:;
			{
				return _2093947ea_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_21a1c4ebb:;
			{
				return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_2087283dd_SptrTypeDecl>(_2087283dd_SptrTypeDecl{._field_Elem=_2093947ea_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_21a1c5043:;
			{
				return _209395334_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_21a1c50ba:;
			{
				return _20939509d_buildMap(_self_);;
			}
		}
		_match_end_21a1c4916:;
	};
	((*((*(_self_))._field_i)))++;
	_209392e14_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_208727343_TypeDecl__jule_tuple_bool _209395851_build(_20939283c_typeBuilder* _self_) {
	__jule_tuple_x_208727343_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_208727343_TypeDecl> _3897_root = _2093955ba_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _209392078_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _208b0e098_CompileInfo_eq(_208b0e098_CompileInfo *_self_, _208b0e098_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _208b10d69_pushErr(_208b107d6_directiveEval* _self_, jule::Ptr<_208711827_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_21e65b904_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_21e65b904_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_21e65bd66_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _208b11265_splitOperans(_208b107d6_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_208711827_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_208711827_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_208711827_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_21a1e2c97:;
					{
						(_367_rangeN)++;
						goto _iter_next_21a1e2318;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21a1e30c7:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_21a1e2d1e:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_21a1e2318;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_21a1e2318:;
	}
	_iter_end_21a1e2318:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_208b10d69_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _208b115a6_evalDirectiveIdent(_208b107d6_directiveEval* _self_, jule::Str _6430_ident) {
	return (_208b0ece1_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _208b118e7_evalDirectivePart(_208b107d6_directiveEval* _self_, jule::Slice<jule::Ptr<_208711827_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_208b10d69_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _208b115a6_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _208b11b7d_eval(_208b107d6_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_208b10d69_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _967_logicalOrParts = _208b11265_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a1eaa3b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_208711827_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> _1038_logicalAndParts = _208b11265_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a1ec323:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_208711827_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_208711827_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_208711827_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_208b10d69_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _208b118e7_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_21a1ec323:;
						++it;
						goto _iter_begin_21a1ec323;
					}
					_iter_end_21a1ec323:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_21a1eaa3b:;
			++it;
			goto _iter_begin_21a1eaa3b;
		}
		_iter_end_21a1eaa3b:;
	};
	return _947_result;;
}







inline jule::Bool _208b0d11e_isPassFileAnnotation(_209396940_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_220c68ae2_Base(_5136_p);
	jule::I64 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _220c6855e_Ext(_5136_p).len()));;
	if (_220c5c4cb_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_208b0ece1_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I64 _747_i = _220c5ed5d_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae7adc_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae2e4a_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_220c5ed5d_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae7adc_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae2e4a_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae2e4a_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae7adc_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208ae7adc_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_209396940_Importer> static__209396d6e_New(_208b0e098_CompileInfo _4516_info) {
	jule::Ptr<_209396940_Importer> _467_imp = jule::new_ptr<_209396940_Importer>(_209396940_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _220c6bce3_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_20890d040_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_208b0e928_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _209397105_AllPackages(_209396940_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _209397545_SetModPath(_209396940_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _2093977cb_GetModPath(_209396940_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _209397b1c_ModById(_209396940_Importer* _self_, jule::I64 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_20890d040_ImportInfo> _209397e5d_GetImport(_209396940_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a210358:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _7515_p = *it;
			{
				if (_220c664b3_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_21a210358:;
			++it;
			goto _iter_begin_21a210358;
		}
		_iter_end_21a210358:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log _209398359_ImportPackage(_209396940_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log __jule_func_result;
	jule::Slice<_21e80ade4_Dir> _857_dirents = ({
		auto except = static__220c6b1cc_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_21e65b904_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _209396456_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_21e80ade4_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _208926a2b_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_21e65b904_Log> _939_errs = _208926ce5_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_2087253da_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2087253da_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2087253da_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2125ad:;
		if (it != expr_end) {
			_21e80ade4_Dir _10110_dirent = *it;
			{
				if ((_21e88bc11_IsDir(&_10110_dirent._field_Stat) || (!(_220c5c4cb_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_21a2125ad;
				};
				jule::Str _1074__path = _220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_2087173cc_Fileset> _1088_file = static__208717762_New(_1074__path);;
				{
					_208717cc3_FillMut(_1088_file.ptr(), _209396148_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_21e65b904_Log> _1108_errors = _208724e12_Lex(_1088_file, static_cast<jule::I64>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_20931304e_FileInfo> _1158_finfo = _209315d65_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_208b0d11e_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_21a2125ad;
				};
				jule::Bool _1254_r;
				jule::Slice<_21e65b904_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_21e65b904_Log __jule_assign_result = _209398a41_isPassBuildDirectives(_self_, &((*(_1158_finfo))._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_21a2125ad;
				};
				{ jule::Slice<jule::Ptr<_2087253da_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*(_1158_finfo))._field_Ast); };
			}
			_iter_next_21a2125ad:;
			++it;
			goto _iter_begin_21a2125ad;
		}
		_iter_end_21a2125ad:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _209398612_Imported(_209396940_Importer* _self_, jule::Ptr<_20890d040_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2145b0:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _220c664b3_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_21a2145b0:;
			++it;
			goto _iter_begin_21a2145b0;
		}
		_iter_end_21a2145b0:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a21aa8e:;
			if (it != expr_end) {
				jule::I64 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*(_14128_imp))._field_ModId=_1518_i;
						goto _julec_label_21a21d0e1;
					};
				}
				_iter_next_21a21aa8e:;
				++it;
				_1518_i++;
				goto _iter_begin_21a21aa8e;
			}
			_iter_end_21a21aa8e:;
		};
		(*(_14128_imp))._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_21a21d0e1:;
	};
	{ jule::Slice<jule::Ptr<_20890d040_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_21e65b904_Log _209398a41_isPassBuildDirectives(_209396940_Importer* _self_, jule::Ptr<_2087253da_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_21e65b904_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a21d5db:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_21a21d5db;
				};
				_208b107d6_directiveEval _1738_de = _208b107d6_directiveEval{._field_logs=jule::Slice<_21e65b904_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _208b11b7d_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_21a21d5db:;
			++it;
			goto _iter_begin_21a21d5db;
		}
		_iter_end_21a21d5db:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _208a620c8_anyData_eq(_208a620c8_anyData *_self_, _208a620c8_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}





inline jule::Ptr<_20939ca56_ExprInspector> static__20939cd97_New(void) {
	return jule::new_ptr<_20939ca56_ExprInspector>(_20939ca56_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _20939d150_args(_20939ca56_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a27d151:;
		if (it != expr_end) {
			jule::I64 _237_i = it - expr->begin();
			{
				_20939d6b1_inspect(_self_, &(_2224_args[_237_i]));
			}
			_iter_next_21a27d151:;
			++it;
			_237_i++;
			goto _iter_begin_21a27d151;
		}
		_iter_end_21a27d151:;
	};
}



inline void _20939d408_InspectStep(_20939ca56_ExprInspector* _self_, jule::Any* _3339_m) {
	_20939d6b1_inspect(_self_, _3339_m);
}



inline void _20939d6b1_inspect(_20939ca56_ExprInspector* _self_, jule::Any* _3728_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_3728_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_3728_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a27ed89:;
			{
				jule::Ptr<_208812098_BinaryExpr> _458_b = (*(_3728_m)).cast_ptr<_208812098_BinaryExpr>(&__jule_any_type113);;
				_20939d6b1_inspect(_self_, &((*((*(_458_b))._field_Left))._field_Model));
				_20939d6b1_inspect(_self_, &((*((*_458_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a280065:;
			{
				jule::Ptr<_208812472_UnaryExpr> _498_u = (*(_3728_m)).cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112);;
				_20939d6b1_inspect(_self_, &((*((*(_498_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_21a27ee00:;
			{
				jule::Ptr<_208812d46_StructLitExpr> _528_lit = (*(_3728_m)).cast_ptr<_208812d46_StructLitExpr>(&__jule_any_type96);;
				{
					auto expr = &((*(_528_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2841bd:;
					if (it != expr_end) {
						jule::Ptr<_2088129a0_StructArgExpr> _5316_arg = *it;
						{
							_20939d6b1_inspect(_self_, &((*((*(_5316_arg))._field_Expr))._field_Model));
						}
						_iter_next_21a2841bd:;
						++it;
						goto _iter_begin_21a2841bd;
					}
					_iter_end_21a2841bd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_21a27ee66:;
			{
				jule::Ptr<_208812d46_StructLitExpr> _578_lit = (*((*(_3728_m)).cast_ptr<_208813143_AllocStructLitExpr>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_578_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2857eb:;
					if (it != expr_end) {
						jule::Ptr<_2088129a0_StructArgExpr> _5816_arg = *it;
						{
							_20939d6b1_inspect(_self_, &((*(*(_5816_arg))._field_Expr.alloc)._field_Model));
						}
						_iter_next_21a2857eb:;
						++it;
						goto _iter_begin_21a2857eb;
					}
					_iter_end_21a2857eb:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21a280362:;
			{
				jule::Ptr<_2088136c6_CastingExpr> _628_c = (*(_3728_m)).cast_ptr<_2088136c6_CastingExpr>(&__jule_any_type94);;
				_20939d6b1_inspect(_self_, &((*((*(_628_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a2803d9:;
			{
				jule::Ptr<_208814078_FnCallExpr> _658_fc = (*(_3728_m)).cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30);;
				_20939d6b1_inspect(_self_, &((*(_658_fc))._field_Expr));
				_20939d150_args(_self_, (*_658_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_21a280461:;
			{
				jule::Ptr<_208814452_SliceExpr> _698_s = (*(_3728_m)).cast_ptr<_208814452_SliceExpr>(&__jule_any_type80);;
				_20939d150_args(_self_, (*(_698_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_21a2804d8:;
			{
				jule::Ptr<_208817389_ArrayExpr> _728_a = (*(_3728_m)).cast_ptr<_208817389_ArrayExpr>(&__jule_any_type86);;
				_20939d150_args(_self_, (*(_728_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21a280560:;
			{
				jule::Ptr<_208814908_IndexingExpr> _758_i = (*(_3728_m)).cast_ptr<_208814908_IndexingExpr>(&__jule_any_type43);;
				_20939d6b1_inspect(_self_, &((*((*(_758_i))._field_Expr))._field_Model));
				_20939d6b1_inspect(_self_, &((*((*_758_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_21a2805d7:;
			{
				jule::Ptr<_208815662_MapExpr> _798_mp = (*(_3728_m)).cast_ptr<_208815662_MapExpr>(&__jule_any_type100);;
				{
					auto expr = &((*(_798_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a28b99a:;
					if (it != expr_end) {
						jule::Ptr<_208815288_KeyValPairExpr> _8016_entry = *it;
						{
							_20939d6b1_inspect(_self_, &((*(_8016_entry))._field_Key));
							_20939d6b1_inspect(_self_, &((*_8016_entry.alloc)._field_Val));
						}
						_iter_next_21a28b99a:;
						++it;
						goto _iter_begin_21a28b99a;
					}
					_iter_end_21a28b99a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_21a28065e:;
			{
				jule::Ptr<_208815be5_SlicingExpr> _858_s = (*(_3728_m)).cast_ptr<_208815be5_SlicingExpr>(&__jule_any_type93);;
				_20939d6b1_inspect(_self_, &((*(_858_s))._field_Expr));
				_20939d6b1_inspect(_self_, &((*_858_s.alloc)._field_Left));
				if (((*_858_s.alloc)._field_Right != nullptr)) {
					_20939d6b1_inspect(_self_, &((*_858_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_21a2806d6:;
			{
				jule::Ptr<_208816278_TraitSubIdentExpr> _928_t = (*(_3728_m)).cast_ptr<_208816278_TraitSubIdentExpr>(&__jule_any_type98);;
				_20939d6b1_inspect(_self_, &((*(_928_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a28075d:;
			{
				jule::Ptr<_208816b19_StructSubIdentExpr> _958_s = (*(_3728_m)).cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				_20939d6b1_inspect(_self_, &((*((*(_958_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_21a2807d5:;
			{
				jule::Ptr<_208817686_TupleExpr> _988_t = (*(_3728_m)).cast_ptr<_208817686_TupleExpr>(&__jule_any_type83);;
				{
					auto expr = &((*(_988_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a29130c:;
					if (it != expr_end) {
						jule::Ptr<_20899a9a1_Data> _9916_d = *it;
						{
							_20939d6b1_inspect(_self_, &((*(_9916_d))._field_Model));
						}
						_iter_next_21a29130c:;
						++it;
						goto _iter_begin_21a29130c;
					}
					_iter_end_21a29130c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_21a28085c:;
			{
				jule::Ptr<_208818159_BuiltinNewCallExpr> _1038_b = (*(_3728_m)).cast_ptr<_208818159_BuiltinNewCallExpr>(&__jule_any_type115);;
				if (((*(_1038_b))._field_Init != nullptr)) {
					_20939d6b1_inspect(_self_, &((*_1038_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_21a2808d4:;
			{
				jule::Ptr<_208817983_BuiltinPrintCallExpr> _1088_c = (*(_3728_m)).cast_ptr<_208817983_BuiltinPrintCallExpr>(&__jule_any_type24);;
				_20939d6b1_inspect(_self_, &((*((*(_1088_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_21a28095b:;
			{
				jule::Ptr<_208817c80_BuiltinPrintlnCallExpr> _1118_c = (*(_3728_m)).cast_ptr<_208817c80_BuiltinPrintlnCallExpr>(&__jule_any_type25);;
				_20939d6b1_inspect(_self_, &((*((*(_1118_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_21a2809d3:;
			{
				jule::Ptr<_208818533_BuiltinPanicCallExpr> _1148_c = (*(_3728_m)).cast_ptr<_208818533_BuiltinPanicCallExpr>(&__jule_any_type26);;
				_20939d6b1_inspect(_self_, &((*(_1148_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_21a280a5a:;
			{
				jule::Ptr<_20881a139_BuiltinErrorCallExpr> _1178_c = (*(_3728_m)).cast_ptr<_20881a139_BuiltinErrorCallExpr>(&__jule_any_type20);;
				_20939d6b1_inspect(_self_, &((*((*(_1178_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_21a280ad2:;
			{
				jule::Ptr<_2088189d9_BuiltinMakeCallExpr> _1208_b = (*(_3728_m)).cast_ptr<_2088189d9_BuiltinMakeCallExpr>(&__jule_any_type116);;
				if (((*(_1208_b))._field_Len != nullptr)) {
					_20939d6b1_inspect(_self_, &((*_1208_b.alloc)._field_Len));
				};
				if (((*(_1208_b))._field_Cap != nullptr)) {
					_20939d6b1_inspect(_self_, &((*_1208_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_21a280b59:;
			{
				jule::Ptr<_208818db3_BuiltinAppendCallExpr> _1288_b = (*(_3728_m)).cast_ptr<_208818db3_BuiltinAppendCallExpr>(&__jule_any_type23);;
				_20939d6b1_inspect(_self_, &((*(_1288_b))._field_Dest));
				_20939d6b1_inspect(_self_, &((*_1288_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_21a280bd1:;
			{
				jule::Ptr<_2088191b0_BuiltinLenCallExpr> _1328_l = (*(_3728_m)).cast_ptr<_2088191b0_BuiltinLenCallExpr>(&__jule_any_type117);;
				_20939d6b1_inspect(_self_, &((*((*(_1328_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_21a280c58:;
			{
				jule::Ptr<_2088194ac_BuiltinCapCallExpr> _1358_c = (*(_3728_m)).cast_ptr<_2088194ac_BuiltinCapCallExpr>(&__jule_any_type118);;
				_20939d6b1_inspect(_self_, &((*((*(_1358_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_21a280cd0:;
			{
				jule::Ptr<_208819886_BuiltinDeleteCallExpr> _1388_b = (*(_3728_m)).cast_ptr<_208819886_BuiltinDeleteCallExpr>(&__jule_any_type28);;
				_20939d6b1_inspect(_self_, &((*((*(_1388_b))._field_Dest))._field_Model));
				if (((*_1388_b.alloc)._field_Key != nullptr)) {
					_20939d6b1_inspect(_self_, &((*(*(_1388_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_21a280d57:;
			{
				jule::Ptr<_20881a436_SizeofExpr> _1448_s = (*(_3728_m)).cast_ptr<_20881a436_SizeofExpr>(&__jule_any_type119);;
				_20939d6b1_inspect(_self_, &((*(_1448_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_21a280dce:;
			{
				jule::Ptr<_20881aada_AlignofExpr> _1478_a = (*(_3728_m)).cast_ptr<_20881aada_AlignofExpr>(&__jule_any_type120);;
				_20939d6b1_inspect(_self_, &((*(_1478_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_21a280e56:;
			{
				jule::Ptr<_20881b448_FreeExpr> _1508_f = (*(_3728_m)).cast_ptr<_20881b448_FreeExpr>(&__jule_any_type29);;
				_20939d6b1_inspect(_self_, &((*(_1508_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_21a280ecd:;
			{
				jule::Ptr<_20881b14b_BackendEmitExpr> _1538_e = (*(_3728_m)).cast_ptr<_20881b14b_BackendEmitExpr>(&__jule_any_type22);;
				_20939d150_args(_self_, (*(_1538_e))._field_Exprs);
			}
		}
		_match_end_21a27ed23:;
	};
}



inline void _20939da24_Inspect(_20939ca56_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16143_f) {
	(*(_self_))._field_handler=_16143_f;
	_20939d6b1_inspect(_self_, _16128_m);
}








inline jule::Bool _2093a5124_MetaStrBuilder_eq(_2093a5124_MetaStrBuilder *_self_, _2093a5124_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _2093a5ce5_MetaRuntime_eq(_2093a5ce5_MetaRuntime *_self_, _2093a5ce5_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _2093a67b8_MetaMathCmplx_eq(_2093a67b8_MetaMathCmplx *_self_, _2093a67b8_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _2093a6dc3_Meta_eq(_2093a6dc3_Meta *_self_, _2093a6dc3_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_2093a6dc3_Meta> static__2093a729c_Collect(jule::Ptr<_20939938d_IR> _7124_ir) {
	jule::Ptr<_2093a6dc3_Meta> _727_meta = jule::new_ptr<_2093a6dc3_Meta>(_2093a6dc3_Meta{._field_Runtime=jule::Ptr<_2093a5ce5_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_2093a5124_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_2093a67b8_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_20881e2b4_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__2093a7566_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__2093a7830_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__2093a7ae9_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_2093a5ce5_MetaRuntime> static__2093a7566_CollectRuntime(jule::Ptr<_20939938d_IR>* _8032_ir) {
	jule::Ptr<_20890d040_ImportInfo> _817_p = _2093a3430_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2093a5ce5_MetaRuntime> _857_meta = jule::new_ptr<_2093a5ce5_MetaRuntime>(_2093a5ce5_MetaRuntime{._field_ToStr=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_208822372_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_208822372_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_208822372_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_208822372_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_208822372_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_208822372_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_208822372_FnIns>(nullptr), ._field_Map=jule::Ptr<_208746230_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_208746230_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_208a611c6_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_208a6158e_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_208a6158e_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_2093a5124_MetaStrBuilder> static__2093a7830_CollectStrBuilder(jule::Ptr<_20939938d_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_20890d040_ImportInfo> _1097_p = _2093a3430_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2087490bd_StructIns> _1137_b = _2089d3ce7_Struct((*((*(_20890dd54_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_2093a5124_MetaStrBuilder> _1147_meta = jule::new_ptr<_2093a5124_MetaStrBuilder>(_2093a5124_MetaStrBuilder{._field_Write=jule::Ptr<_208822372_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_208822372_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_208822372_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_208822372_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_20874a135_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_20874a135_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_20874a135_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_20874a135_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_2093a67b8_MetaMathCmplx> static__2093a7ae9_CollectMathCmplx(jule::Ptr<_20939938d_IR>* _12334_ir) {
	jule::Ptr<_20890d040_ImportInfo> _1247_p = _2093a3430_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2093a67b8_MetaMathCmplx> _1287_meta = jule::new_ptr<_2093a67b8_MetaMathCmplx>(_2093a67b8_MetaMathCmplx{._field_Cmplx=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_208822372_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_208822372_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_208a6158e_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_20874a135_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_20874a135_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}



















inline jule::Ptr<_2171c8368_ObjectDeadCode> static__2171c8852_new(jule::Ptr<_20939938d_IR>* _2521_ir) {
	return jule::new_ptr<_2171c8368_ObjectDeadCode>(_2171c8368_ObjectDeadCode{._field_live=_2171c7ea0_liveTable{._field_vars=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_208822372_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_2087490bd_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_2088299c8_Trait>>(nullptr)}, ._field_ir=(*(_2521_ir))});;
}



inline jule::Bool _21a2e784c_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2087490bd_StructIns>* _3127_t) {
	jule::Slice<jule::Ptr<_2087490bd_StructIns>> _3211_live = nullptr;;
	{
		
{
			_case_begin_21a2e93a9:;
			{
				_3211_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_21a2e9277:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2e981b:;
		if (it != expr_end) {
			jule::I64 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_21a2e981b:;
			++it;
			_437_i++;
			goto _iter_begin_21a2e981b;
		}
		_iter_end_21a2e981b:;
	};
	return false;;
}

inline jule::Bool _21a2ee1c2_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_208822372_FnIns>* _3127_t) {
	jule::Slice<jule::Ptr<_208822372_FnIns>> _3211_live = nullptr;;
	{
		
{
			_case_begin_21a300b74:;
			{
				_3211_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_21a300aa8:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a300cea:;
		if (it != expr_end) {
			jule::I64 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_21a300cea:;
			++it;
			_437_i++;
			goto _iter_begin_21a300cea;
		}
		_iter_end_21a300cea:;
	};
	return false;;
}

inline jule::Bool _21a3094a7_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088299c8_Trait>* _3127_t) {
	jule::Slice<jule::Ptr<_2088299c8_Trait>> _3211_live = nullptr;;
	{
		
{
			_case_begin_21a30b07a:;
			{
				_3211_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_21a30add2:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a30c004:;
		if (it != expr_end) {
			jule::I64 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_21a30c004:;
			++it;
			_437_i++;
			goto _iter_begin_21a30c004;
		}
		_iter_end_21a30c004:;
	};
	return false;;
}

inline jule::Bool _21a314270_isLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_20894d7de_Var>* _3127_t) {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _3211_live = nullptr;;
	{
		
{
			_case_begin_21a3159d0:;
			{
				_3211_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_21a315b56:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a315bbc:;
		if (it != expr_end) {
			jule::I64 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_21a315bbc:;
			++it;
			_437_i++;
			goto _iter_begin_21a315bbc;
		}
		_iter_end_21a315bbc:;
	};
	return false;;
}



inline void _21a2e9c5b_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2087490bd_StructIns> _5132_t) {
	{
		
{
			_case_begin_21a2eb587:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_2087490bd_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_21a2ea465:;
	};
}

inline void _21a30026c_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_208822372_FnIns> _5132_t) {
	{
		
{
			_case_begin_21a30344b:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_208822372_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_21a302923:;
	};
}

inline void _21a30b267_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088299c8_Trait> _5132_t) {
	{
		
{
			_case_begin_21a30d07c:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_2088299c8_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_21a30b8b6:;
	};
}

inline void _21a3174c6_pushLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_20894d7de_Var> _5132_t) {
	{
		
{
			_case_begin_21a318087:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_21a316d44:;
	};
}



inline void _2171c9204_pushStructAsLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2087490bd_StructIns>* _6438_s) {
	if (_21a2e784c_isLive(_self_, _6438_s)) {
		return;;
	};
	_21a2e9c5b_pushLive(_self_, (*(_6438_s)));
	_2171c94ac_setReferencesAsLive(_self_, &((*((*(_6438_s))))._field_Refers));
	jule::Bool _703_allLive = _2171cb855_isAllMethodsLive((*((*(_6438_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6438_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2eb8b7:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _7115_m = *it;
			{
				{
					auto expr = &((*(_7115_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2ed127:;
					if (it != expr_end) {
						jule::Ptr<_208822372_FnIns> _7216_ins = *it;
						{
							if (_21a2ee1c2_isLive(_self_, &(_7216_ins))) {
								goto _iter_next_21a2ed127;
							};
							if (_703_allLive) {
								_21a30026c_pushLive(_self_, _7216_ins);
								_2171c94ac_setReferencesAsLive(_self_, &((*(_7216_ins))._field_Refers));
								goto _iter_next_21a2ed127;
							};
							if (_2093a02b7_IsTraitMethod(_6438_s, &(_7216_ins))) {
								_21a30026c_pushLive(_self_, _7216_ins);
								_2171c94ac_setReferencesAsLive(_self_, &((*(_7216_ins))._field_Refers));
							};
							;
							jule::Ptr<_20881e2b4_Fn> _989__str = _20874a135_FindMethod((*(_6438_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_989__str != nullptr) && static__2065970b6_Str(_989__str))) {
								jule::Ptr<_208822372_FnIns> _10010_fins = (*_989__str.alloc)._field_Instances[0LL];;
								_21a30026c_pushLive(_self_, _10010_fins);
								_2171c94ac_setReferencesAsLive(_self_, &((*(_10010_fins))._field_Refers));
							};
						}
						_iter_next_21a2ed127:;
						++it;
						goto _iter_begin_21a2ed127;
					}
					_iter_end_21a2ed127:;
				};
			}
			_iter_next_21a2eb8b7:;
			++it;
			goto _iter_begin_21a2eb8b7;
		}
		_iter_end_21a2eb8b7:;
	};
}



inline void _2171c94ac_setReferencesAsLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088eaeb7_ReferenceStack>* _10841_rs) {
	if (((*(_10841_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1127_i = 0LL;;
	for (; (_1127_i < _2088eb726_Len((*(_10841_rs)).ptr())); (_1127_i)++) {
		{
			jule::Any _1148_ref = _2088eba67_At((*(_10841_rs)).ptr(), _1127_i);;
			{
				auto &_match_expr{ _1148_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_21a30820e:;
					{
						jule::Ptr<_2088299c8_Trait> _1179_t = _1148_ref.unsafe_cast_ptr<_2088299c8_Trait>();;
						if (_21a3094a7_isLive(_self_, &(_1179_t))) {
							goto _iter_next_21a2ecc5e;
						};
						_21a30b267_pushLive(_self_, _1179_t);
						{
							auto expr = &((*(_1179_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_21a308dd0:;
							if (it != expr_end) {
								jule::Ptr<_20881e2b4_Fn> _12217_ins = *it;
								{
									{
										auto expr = &((*(_12217_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_21a30ceb1:;
										if (it != expr_end) {
											jule::Ptr<_208822372_FnIns> _12318_mins = *it;
											{
												if (_21a2ee1c2_isLive(_self_, &(_12318_mins))) {
													goto _iter_next_21a30ceb1;
												};
												_21a30026c_pushLive(_self_, _12318_mins);
												_2171c94ac_setReferencesAsLive(_self_, &((*(_12318_mins))._field_Refers));
											}
											_iter_next_21a30ceb1:;
											++it;
											goto _iter_begin_21a30ceb1;
										}
										_iter_end_21a30ceb1:;
									};
								}
								_iter_next_21a308dd0:;
								++it;
								goto _iter_begin_21a308dd0;
							}
							_iter_end_21a308dd0:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_21a308044:;
					{
						jule::Ptr<_208822372_FnIns> _1329_f = _1148_ref.unsafe_cast_ptr<_208822372_FnIns>();;
						if (_21a2ee1c2_isLive(_self_, &(_1329_f))) {
							goto _match_end_21a3080bb;
						};
						if ((((*(_1329_f))._field_Owner != nullptr) && (!((*((*_1329_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_21a2e784c_isLive(_self_, &((*_1329_f.alloc)._field_Owner))))) {
								_21a2e9c5b_pushLive(_self_, (*_1329_f.alloc)._field_Owner);
								_2171c94ac_setReferencesAsLive(_self_, &((*(*(_1329_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_21a30026c_pushLive(_self_, _1329_f);
						_2171c94ac_setReferencesAsLive(_self_, &((*(_1329_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_21a308275:;
					{
						jule::Ptr<_20894d7de_Var> _1459_v = _1148_ref.unsafe_cast_ptr<_20894d7de_Var>();;
						if (_21a314270_isLive(_self_, &(_1459_v))) {
							goto _match_end_21a3080bb;
						};
						_21a3174c6_pushLive(_self_, _1459_v);
						_2171c94ac_setReferencesAsLive(_self_, &((*(_1459_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_21a3082db:;
					{
						jule::Ptr<_2087490bd_StructIns> _1529_s = _1148_ref.unsafe_cast_ptr<_2087490bd_StructIns>();;
						_2171c9204_pushStructAsLive(_self_, &(_1529_s));
					}
				}
				_match_end_21a3080bb:;
			};
		}
	_iter_next_21a2ecc5e:;
	}
	_iter_end_21a2ecc5e:;;
}



inline void _2171c9765_inits(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2089107b2_Package>* _15827_pkg) {
	{
		auto expr = &((*((*(_15827_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a30764d:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _15915_file = *it;
			{
				{
					auto expr = &((*(_15915_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a31a2dc:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _16016_f = *it;
						{
							if ((*(_16016_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_208822372_FnIns> _16210_ins = (*(_16016_f))._field_Instances[0LL];;
								if ((!(_21a2ee1c2_isLive(_self_, &(_16210_ins))))) {
									_21a30026c_pushLive(_self_, _16210_ins);
								};
								_2171c94ac_setReferencesAsLive(_self_, &((*(_16210_ins))._field_Refers));
							};
						}
						_iter_next_21a31a2dc:;
						++it;
						goto _iter_begin_21a31a2dc;
					}
					_iter_end_21a31a2dc:;
				};
			}
			_iter_next_21a30764d:;
			++it;
			goto _iter_begin_21a30764d;
		}
		_iter_end_21a30764d:;
	};
}



inline void _2171c9a1d_collectLivePackage(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2089107b2_Package>* _17240_pkg) {
	_2171c9765_inits(_self_, _17240_pkg);
	_20939c03e_IterFiles(_17240_pkg, jule::__new_closure<void,jule::Ptr<_2088255b7_SymTab>*>((void*)__jule_anon_21a31cec1, jule::Ptr<__jule_anon_21a31cec1_ctx>::make(__jule_anon_21a31cec1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a31cec1_ctx_handler));
	if (_220c73635_Test) {
		if ((((*((*(_17240_pkg))))._field_Files.len() > 0LL) && _2093a063b_IsStdPackage((*((*((*((*(_17240_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_208746230_Struct> _2029_s = _20891197d_FindStruct((*(_17240_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_2087490bd_StructIns> _2039_ins = (*(_2029_s))._field_Instances[0LL];;
			_2171c9204_pushStructAsLive(_self_, &(_2039_ins));
			{
				auto expr = &((*(_2039_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_21a324538:;
				if (it != expr_end) {
					jule::Ptr<_20881e2b4_Fn> _20517_m = *it;
					{
						{
							auto expr = &((*(_20517_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_21a3250a5:;
							if (it != expr_end) {
								jule::Ptr<_208822372_FnIns> _20618_mins = *it;
								{
									if (_21a2ee1c2_isLive(_self_, &(_20618_mins))) {
										goto _iter_next_21a3250a5;
									};
									_21a30026c_pushLive(_self_, _20618_mins);
									_2171c94ac_setReferencesAsLive(_self_, &((*(_20618_mins))._field_Refers));
								}
								_iter_next_21a3250a5:;
								++it;
								goto _iter_begin_21a3250a5;
							}
							_iter_end_21a3250a5:;
						};
					}
					_iter_next_21a324538:;
					++it;
					goto _iter_begin_21a324538;
				}
				_iter_end_21a324538:;
			};
		};
		{
			auto expr = &((*((*(_17240_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a32325c:;
			if (it != expr_end) {
				jule::Ptr<_2088255b7_SymTab> _21516_file = *it;
				{
					{
						auto expr = &((*(_21516_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21a32774a:;
						if (it != expr_end) {
							jule::Ptr<_20881e2b4_Fn> _21617_f = *it;
							{
								if (_2093a18e5_HasDirective(&((*(_21617_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_208822372_FnIns> _21811_ins = (*_21617_f.alloc)._field_Instances[0LL];;
									if ((!(_21a2ee1c2_isLive(_self_, &(_21811_ins))))) {
										_21a30026c_pushLive(_self_, _21811_ins);
									};
									_2171c94ac_setReferencesAsLive(_self_, &((*(_21811_ins))._field_Refers));
								};
							}
							_iter_next_21a32774a:;
							++it;
							goto _iter_begin_21a32774a;
						}
						_iter_end_21a32774a:;
					};
				}
				_iter_next_21a32325c:;
				++it;
				goto _iter_begin_21a32325c;
			}
			_iter_end_21a32325c:;
		};
	};
}



inline void _2171c9c1b_collectLive(jule::Ptr<_2171c8368_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a32855e:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _23015_used = *it;
			{
				if ((!((*(_23015_used))._field_Binded))) {
					_2171c9a1d_collectLivePackage(_self_, &((*_23015_used.alloc)._field_Package));
				};
			}
			_iter_next_21a32855e:;
			++it;
			goto _iter_begin_21a32855e;
		}
		_iter_end_21a32855e:;
	};
	_2171c9a1d_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_20881e2b4_Fn> _2387_main = _208911d79_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2387_main != nullptr)) {
		jule::Ptr<_208822372_FnIns> _2408_ins = (*_2387_main.alloc)._field_Instances[0LL];;
		if ((!(_21a2ee1c2_isLive(_self_, &(_2408_ins))))) {
			_21a30026c_pushLive(_self_, _2408_ins);
		};
		_2171c94ac_setReferencesAsLive(_self_, &((*(_2408_ins))._field_Refers));
	};
}



inline void _2171c9ec4_removeDeadGlobals(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20894d7de_Var>>* _24839_vars) {
	jule::I64 _2497_i = 0LL;;
	while ((_2497_i < (*(_24839_vars)).len())) {
		{
			jule::Ptr<_20894d7de_Var> _2514_v = (*(_24839_vars))[_2497_i];;
			if (_21a314270_isLive(_self_, &(_2514_v))) {
				(_2497_i)++;
				goto _iter_next_21a32e037;
			};
			(*(_24839_vars))=jule::append((*(_24839_vars)).slice(0LL, _2497_i),(*(_24839_vars)).slice((_2497_i + 1LL)));
		}
	_iter_next_21a32e037:;
	}
	_iter_end_21a32e037:;;
}



inline void _2171ca27c_removeDeadFns(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20881e2b4_Fn>>* _26035_funcs) {
	jule::I64 _2617_i = 0LL;;
	while ((_2617_i < (*(_26035_funcs)).len())) {
		{
			jule::Ptr<_20881e2b4_Fn> _2638_f = (*(_26035_funcs))[_2617_i];;
			jule::I64 _2648_j = 0LL;;
			while ((_2648_j < (*(_2638_f))._field_Instances.len())) {
				{
					jule::Ptr<_208822372_FnIns> _2665_ins = (*_2638_f.alloc)._field_Instances[_2648_j];;
					if (_21a2ee1c2_isLive(_self_, &(_2665_ins))) {
						(_2648_j)++;
						goto _iter_next_21a331897;
					};
					(*_2638_f.alloc)._field_Instances=jule::append((*_2638_f.alloc)._field_Instances.slice(0LL, _2648_j),(*_2638_f.alloc)._field_Instances.slice((_2648_j + 1LL)));
				}
			_iter_next_21a331897:;
			}
			_iter_end_21a331897:;;
			if (((*_2638_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_26035_funcs))=jule::append((*(_26035_funcs)).slice(0LL, _2617_i),(*(_26035_funcs)).slice((_2617_i + 1LL)));
				goto _iter_next_21a3308eb;
			};
			(_2617_i)++;
		}
	_iter_next_21a3308eb:;
	}
	_iter_end_21a3308eb:;;
}



inline void _2171ca535_removeDeadStructs(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_208746230_Struct>>* _28139_structs) {
	jule::I64 _2827_i = 0LL;;
	while ((_2827_i < (*(_28139_structs)).len())) {
		{
			jule::Ptr<_208746230_Struct> _2848_s = (*(_28139_structs))[_2827_i];;
			jule::I64 _2858_j = 0LL;;
			while ((_2858_j < (*(_2848_s))._field_Instances.len())) {
				{
					jule::Ptr<_2087490bd_StructIns> _2879_ins = (*_2848_s.alloc)._field_Instances[_2858_j];;
					_2171ca27c_removeDeadFns(_self_, &((*(_2879_ins))._field_Methods));
					if ((((*_2879_ins.alloc)._field_Methods.len() != 0LL) || _21a2e784c_isLive(_self_, &(_2879_ins)))) {
						(_2858_j)++;
						goto _iter_next_21a3354d3;
					};
					(*_2848_s.alloc)._field_Instances=jule::append((*_2848_s.alloc)._field_Instances.slice(0LL, _2858_j),(*_2848_s.alloc)._field_Instances.slice((_2858_j + 1LL)));
				}
			_iter_next_21a3354d3:;
			}
			_iter_end_21a3354d3:;;
			if (((*_2848_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_28139_structs))=jule::append((*(_28139_structs)).slice(0LL, _2827_i),(*(_28139_structs)).slice((_2827_i + 1LL)));
				goto _iter_next_21a33468b;
			};
			(_2827_i)++;
		}
	_iter_next_21a33468b:;
	}
	_iter_end_21a33468b:;;
}



inline void _2171ca7dd_removeDeadTraits(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2088299c8_Trait>>* _30338_traits) {
	jule::I64 _3047_i = 0LL;;
	while ((_3047_i < (*(_30338_traits)).len())) {
		{
			jule::Ptr<_2088299c8_Trait> _3068_t = (*(_30338_traits))[_3047_i];;
			if ((!(_21a3094a7_isLive(_self_, &(_3068_t))))) {
				(*(_30338_traits))=jule::append((*(_30338_traits)).slice(0LL, _3047_i),(*(_30338_traits)).slice((_3047_i + 1LL)));
				goto _iter_next_21a338d11;
			};
			jule::I64 _3118_j = 0LL;;
			while ((_3118_j < (*(_3068_t))._field_Implemented.len())) {
				{
					jule::Ptr<_208746230_Struct> _3135_s = (*_3068_t.alloc)._field_Implemented[_3118_j];;
					if (((*(_3135_s))._field_Instances.len() > 0LL)) {
						(_3118_j)++;
						goto _iter_next_21a33975c;
					};
					(*_3068_t.alloc)._field_Implemented=jule::append((*_3068_t.alloc)._field_Implemented.slice(0LL, _3118_j),(*_3068_t.alloc)._field_Implemented.slice((_3118_j + 1LL)));
				}
			_iter_next_21a33975c:;
			}
			_iter_end_21a33975c:;;
			(_3047_i)++;
		}
	_iter_next_21a338d11:;
	}
	_iter_end_21a338d11:;;
}



inline void _2171caa96_removeDeadsFile(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2088255b7_SymTab>* _32437_file) {
	_2171ca27c_removeDeadFns(_self_, &((*((*(_32437_file))))._field_Funcs));
	_2171ca535_removeDeadStructs(_self_, &((*((*(_32437_file))))._field_Structs));
	_2171ca7dd_removeDeadTraits(_self_, &((*((*(_32437_file))))._field_Traits));
	_2171c9ec4_removeDeadGlobals(_self_, &((*((*(_32437_file))))._field_Vars));
}



inline void _2171cad4e_removeDeadsPackage(jule::Ptr<_2171c8368_ObjectDeadCode> _self_, jule::Ptr<_2089107b2_Package>* _33140_pkg) {
	{
		auto expr = &((*((*(_33140_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a33e267:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _33215_file = *it;
			{
				_2171caa96_removeDeadsFile(_self_, &(_33215_file));
			}
			_iter_next_21a33e267:;
			++it;
			goto _iter_begin_21a33e267;
		}
		_iter_end_21a33e267:;
	};
}



inline void _2171cb04c_removeDeads(jule::Ptr<_2171c8368_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a33e9b5:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _33815_used = *it;
			{
				if ((!((*(_33815_used))._field_Binded))) {
					_2171cad4e_removeDeadsPackage(_self_, &((*_33815_used.alloc)._field_Package));
				};
			}
			_iter_next_21a33e9b5:;
			++it;
			goto _iter_begin_21a33e9b5;
		}
		_iter_end_21a33e9b5:;
	};
	_2171cad4e_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _2171cb24a_elimanate(jule::Ptr<_2171c8368_ObjectDeadCode> _self_) {
	_2171c9c1b_collectLive(_self_);
	_2171cb04c_removeDeads(_self_);
}








inline jule::Bool _2171cc48d_scopeDeadCode_eq(_2171cc48d_scopeDeadCode *_self_, _2171cc48d_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _2171cc9aa_optimizeChild(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ca969_Scope>* _1935_s) {
	jule::Ptr<_2171cc48d_scopeDeadCode> _207_sdc = jule::new_ptr<_2171cc48d_scopeDeadCode>(_2171cc48d_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_2171d03c5_optimizeStmts(_207_sdc);
	};
}



inline void _2171ccc63_optimizeBodyChildExceptional(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ca969_Scope>* _2950_s) {
	jule::Ptr<_2171cc48d_scopeDeadCode> _307_sdc = jule::new_ptr<_2171cc48d_scopeDeadCode>(_2171cc48d_scopeDeadCode{._field_parent=jule::Ptr<_2171cc48d_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_2171d03c5_optimizeStmts(_307_sdc);
	};
}



inline void _2171cd01b_optimizeBodyChild(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ca969_Scope>* _3939_s) {
	jule::Ptr<_2171cc48d_scopeDeadCode> _407_sdc = jule::new_ptr<_2171cc48d_scopeDeadCode>(_2171cc48d_scopeDeadCode{._field_parent=jule::Ptr<_2171cc48d_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_2171d03c5_optimizeStmts(_407_sdc);
	};
}



inline void _2171cd2c4_optimizeExpr(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Any* _4834_model) {
	_2171d1a25_exprDeadCode _493_edc = static__2171d1e43_new(&(_self_));;
	_2171d21eb_optimize(&_493_edc, _4834_model);
}



inline void _2171cd4c2_eliminateFollowed(_2171cc48d_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_2171cc48d_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*(_607_parent))._field_parent;
		}
	_iter_next_21a356aa9:;
	}
	_iter_end_21a356aa9:;;
}



inline void _2171cd77a_pushGoto(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cdad2_GotoSt> _6929_gt) {
	jule::I64 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*(*(_self_))._field_labels.alloc)[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_21a35a1a6:;
	}
	_iter_end_21a35a1a6:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _2171cda33_pushLabel(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cd472_Label> _7930_l) {
	jule::I64 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*(*(_self_))._field_gotos.alloc)[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_21a35c362;
			};
			(_807_i)++;
		}
	_iter_next_21a35c362:;
	}
	_iter_end_21a35c362:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cd472_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _2171cdcdb_optimizeRangeIter(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cc7e5_RangeIter> _9238_it) {
	_2171cd2c4_optimizeExpr(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_2171cd01b_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _2171ce094_optimizeWhileIter(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cbd11_WhileIter> _9738_it) {
	_2171cd2c4_optimizeExpr(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_2171d01c7_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_2171cd01b_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _2171ce34c_optimizeInfIter(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cb85a_InfIter> _10536_it) {
	_2171cd01b_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _2171ce605_optimizeConditional(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088cb55d_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a364006:;
		if (it != expr_end) {
			jule::Ptr<_2088cad43_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_2171cd2c4_optimizeExpr(_self_, &((*_11015_case.alloc)._field_Expr));
					_2171cd01b_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_21a364006:;
			++it;
			goto _iter_begin_21a364006;
		}
		_iter_end_21a364006:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_2171cc9aa_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_2171cd01b_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _2171ce8ad_optimizeMatch(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088d0463_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a367548:;
		if (it != expr_end) {
			jule::Ptr<_2088d0c5a_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a36803d:;
					if (it != expr_end) {
						jule::Ptr<_20899a9a1_Data> _12916_expr = *it;
						{
							_2171cd2c4_optimizeExpr(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_21a36803d:;
						++it;
						goto _iter_begin_21a36803d;
					}
					_iter_end_21a36803d:;
				};
				_2171cd01b_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_21a367548:;
			++it;
			goto _iter_begin_21a367548;
		}
		_iter_end_21a367548:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_2171cc9aa_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_2171cd01b_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _2171ceb66_optimizeAssign(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ce462_Assign> _14535_assign) {
	_2171cd2c4_optimizeExpr(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_2171cd2c4_optimizeExpr(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _2171cee1e_optimizeMultiAssign(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Ptr<_2088ce9e5_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a36c2b7:;
		if (it != expr_end) {
			jule::Ptr<_20899a9a1_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_2171cd2c4_optimizeExpr(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_21a36c2b7:;
			++it;
			goto _iter_begin_21a36c2b7;
		}
		_iter_end_21a36c2b7:;
	};
	_2171cd2c4_optimizeExpr(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _2171d01c7_optimizeStmt(jule::Ptr<_2171cc48d_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_21a36de23:;
			{
				jule::Ptr<_2088ca969_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_2088ca969_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_2171d06c2_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_2171cc9aa_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_21a36db8c:;
			{
				_2171cdcdb_optimizeRangeIter(_self_, _15933_st.unsafe_cast_ptr<_2088cc7e5_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_21a36de9a:;
			{
				_2171ce094_optimizeWhileIter(_self_, _15933_st.unsafe_cast_ptr<_2088cbd11_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_21a36e022:;
			{
				_2171ce34c_optimizeInfIter(_self_, _15933_st.unsafe_cast_ptr<_2088cb85a_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_21a36e099:;
			{
				_2171ce605_optimizeConditional(_self_, _15933_st.unsafe_cast_ptr<_2088cb55d_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_21a36e121:;
			{
				_2171ce8ad_optimizeMatch(_self_, _15933_st.unsafe_cast_ptr<_2088d0463_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_21a36e198:;
			{
				_2171ceb66_optimizeAssign(_self_, _15933_st.unsafe_cast_ptr<_2088ce462_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_21a36e220:;
			{
				_2171cee1e_optimizeMultiAssign(_self_, _15933_st.unsafe_cast_ptr<_2088ce9e5_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_21a36e297:;
			{
				jule::Ptr<_20899a9a1_Data> _1838_d = _15933_st.unsafe_cast_ptr<_20899a9a1_Data>();;
				if ((*_self_.alloc)._field_except) {
					goto _match_end_21a36dcbe;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_21a374500:;
						{
							_2171cd4c2_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_21a374b60:;
						{
							_2171cd2c4_optimizeExpr(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_21a374ae9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_21a36e31e:;
			{
				_2171cd4c2_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_21a36e396:;
			{
				_2171cd77a_pushGoto(_self_, _15933_st.unsafe_cast_ptr<_2088cdad2_GotoSt>());
				_2171cd4c2_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_21a36e41d:;
			{
				_2171cda33_pushLabel(_self_, _15933_st.unsafe_cast_ptr<_2088cd472_Label>());
			}
		}
		_match_end_21a36dcbe:;
	};
}



inline void _2171d03c5_optimizeStmts(jule::Ptr<_2171cc48d_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_2171d01c7_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_21a377569:;
	}
	_iter_end_21a377569:;;
}








inline jule::Bool _2171d1a25_exprDeadCode_eq(_2171d1a25_exprDeadCode *_self_, _2171d1a25_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _2171d1a25_exprDeadCode static__2171d1e43_new(jule::Ptr<_2171cc48d_scopeDeadCode>* _1421_s) {
	return _2171d1a25_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _2171d21eb_optimize(_2171d1a25_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_20939ca56_ExprInspector> _217_inspector = static__20939cd97_New();;
	_20939da24_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_21a37a171, jule::Ptr<__jule_anon_21a37a171_ctx>::make(__jule_anon_21a37a171_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a37a171_ctx_handler));
}








inline jule::Bool _216d93a39_StrFromBytes_eq(_216d93a39_StrFromBytes *_self_, _216d93a39_StrFromBytes _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _216da6057_ExceptionalForwardingExpr_eq(_216da6057_ExceptionalForwardingExpr *_self_, _216da6057_ExceptionalForwardingExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _216da6244_FnCallIgnoreExceptionalExpr_eq(_216da6244_FnCallIgnoreExceptionalExpr *_self_, _216da6244_FnCallIgnoreExceptionalExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}










inline jule::Bool _216da680a_SwapExpr_eq(_216da680a_SwapExpr *_self_, _216da680a_SwapExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _216da6bd4_EmptyCompareExpr_eq(_216da6bd4_EmptyCompareExpr *_self_, _216da6bd4_EmptyCompareExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _216da6ed1_RefExpr_eq(_216da6ed1_RefExpr *_self_, _216da6ed1_RefExpr _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _216da7520_StrCompExpr_eq(_216da7520_StrCompExpr *_self_, _216da7520_StrCompExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _216da7aa3_MutSlicingExpr_eq(_216da7aa3_MutSlicingExpr *_self_, _216da7aa3_MutSlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _216da7da0_UnsafeBinaryExpr_eq(_216da7da0_UnsafeBinaryExpr *_self_, _216da7da0_UnsafeBinaryExpr _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _216da819c_UnsafeIndexingExpr_eq(_216da819c_UnsafeIndexingExpr *_self_, _216da819c_UnsafeIndexingExpr _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _216da8576_PushToSliceExpr_eq(_216da8576_PushToSliceExpr *_self_, _216da8576_PushToSliceExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _216da8950_AppendToSliceExpr_eq(_216da8950_AppendToSliceExpr *_self_, _216da8950_AppendToSliceExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _216da8d29_StrRuneIter_eq(_216da8d29_StrRuneIter *_self_, _216da8d29_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _216da9126_UnsafeDerefExpr_eq(_216da9126_UnsafeDerefExpr *_self_, _216da9126_UnsafeDerefExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _216da9654_UnsafeCastingExpr_eq(_216da9654_UnsafeCastingExpr *_self_, _216da9654_UnsafeCastingExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _216daa1b0_nilVar_eq(_216daa1b0_nilVar *_self_, _216daa1b0_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _216daa996_pushVar(_216daa501_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_2170bbe60_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a39aa21:;
		if (it != expr_end) {
			jule::I64 _287_i = it - expr->begin();
			{
				_216daa1b0_nilVar *_299_v = &((*(_self_))._field_vars[_287_i]);;
				if (((*(_299_v))._field_var == _2323_var)) {
					(*(_299_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_21a39aa21:;
			++it;
			_287_i++;
			goto _iter_begin_21a39aa21;
		}
		_iter_end_21a39aa21:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a39ba55:;
		if (it != expr_end) {
			jule::I64 _367_i = it - expr->begin();
			{
				_216daa1b0_nilVar *_379_v = &((*(_self_))._field_vars[_367_i]);;
				if (((*(_379_v))._field_var == 0LLU)) {
					(*(_379_v))._field_var=_2323_var;
					(*(_379_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_21a39ba55:;
			++it;
			_367_i++;
			goto _iter_begin_21a39ba55;
		}
		_iter_end_21a39ba55:;
	};
	{ jule::Slice<_216daa1b0_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_216daa1b0_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _216daacd7_removeVar(_216daa501_nils* _self_, jule::Uintptr _4825_var) {
	if ((_4825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a39e0da:;
			if (it != expr_end) {
				jule::I64 _508_i = it - expr->begin();
				{
					_216daa1b0_nilVar *_5110_v = &((*(_self_))._field_vars[_508_i]);;
					if (((*(_5110_v))._field_var == _4825_var)) {
						(*(_5110_v))._field_var=0LLU;
						(*(_5110_v))._field_safe=false;
						return true;;
					};
				}
				_iter_next_21a39e0da:;
				++it;
				_508_i++;
				goto _iter_begin_21a39e0da;
			}
			_iter_end_21a39e0da:;
		};
	};
	return false;;
}



inline jule::Bool _216dab128_isSafe(_216daa501_nils* _self_, jule::Uintptr _6322_var) {
	if ((_6322_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a3a0e33:;
			if (it != expr_end) {
				_216daa1b0_nilVar _6511_v = *it;
				{
					if ((_6511_v._field_var == _6322_var)) {
						return _6511_v._field_safe;;
					};
				}
				_iter_next_21a3a0e33:;
				++it;
				goto _iter_begin_21a3a0e33;
			}
			_iter_end_21a3a0e33:;
		};
	};
	return false;;
}








inline jule::Bool _2170a3188_scopeOptimizer_eq(_2170a3188_scopeOptimizer *_self_, _2170a3188_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_2170a3188_scopeOptimizer> static__2170a3771_new(jule::Ptr<_2088ca969_Scope> _2420_scope) {
	jule::Ptr<_2170a3188_scopeOptimizer> _257_sc = jule::new_ptr<_2170a3188_scopeOptimizer>(_2170a3188_scopeOptimizer{._field_parent=jule::Ptr<_2170a3188_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2420_scope, ._field_data=jule::new_ptr<_2170b62ab_data>(_2170b62ab_data{._field_boundary=jule::new_ptr<_2170b8566_boundary>(_2170b8566_boundary{._field_vars=jule::Slice<_2170b8225_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_216daa501_nils>(_216daa501_nils{._field_vars=jule::Slice<_216daa1b0_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_2170b3682_dynamic>(_2170b3682_dynamic{._field_vars=jule::Slice<_2170b3341_dynamicVar>(nullptr)})})});;
	return _257_sc;;
}



inline void _2170a3a29_setCurrentStmt(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Any _3635_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3635_stmt))))));
}



inline void _2170a3c27_removeCurrent(jule::Ptr<_2170a3188_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _2170a3ead_isLastStmt(jule::Ptr<_2170a3188_scopeOptimizer> _self_) {
	jule::Ptr<_2170a3188_scopeOptimizer> _467_r = _self_;;
	for (; (_467_r != nullptr); _467_r=(*(_467_r))._field_parent) {
		{
			if ((((*((*_467_r.alloc)._field_scope))._field_Stmts.len() - (*_467_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_21a3b7ec2:;
	}
	_iter_end_21a3b7ec2:;;
	return true;;
}



inline jule::Bool _2170a4244_isIter(jule::Ptr<_2170a3188_scopeOptimizer> _self_) {
	jule::Ptr<_2170a3188_scopeOptimizer> _567_r = (*(_self_))._field_parent;;
	for (; (_567_r != nullptr); _567_r=(*(_567_r))._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_567_r))._field_scope))._field_Stmts[(*(_567_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_21a3ba7aa:;
					{
						return true;;
					}
				}
				_match_end_21a3ba711:;
			};
		}
	_iter_next_21a3b9b2d:;
	}
	_iter_end_21a3b9b2d:;;
	return false;;
}



inline void _2170a44ec_optimizeData(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_20899a9a1_Data> _6833_d) {
	{
		auto &_match_expr{ (*(_6833_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a3bb855:;
			{
				jule::Ptr<_208814078_FnCallExpr> _718_m = (*(_6833_d))._field_Model.unsafe_cast_ptr<_208814078_FnCallExpr>();;
				static__2170ab7bd_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
				if (((((((_2170bd3d4_Exceptional && (*((*((*(_718_m))._field_Func))._field_Decl))._field_Exceptional) && ((*_718_m.alloc)._field_Except != nullptr)) && ((*(*(_718_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _20939e55d_IsForwarded(&((*_718_m.alloc)._field_Except))) && _2170a3ead_isLastStmt(_self_)) && (!(_2170a4244_isIter(_self_))))) {
					_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216da6057_ExceptionalForwardingExpr>(_216da6057_ExceptionalForwardingExpr{._field_Expr=_718_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_21a3bb7cd:;
	};
	static__2170ab7bd_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
}



inline void _2170a47a5_optimizeVar(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_20894d7de_Var> _8732_v) {
	if (((*(_8732_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _216dabb62_isNilValidType((*((*_8732_v.alloc)._field_TypeSym))._field_Type)) && _216dab898_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_216daa996_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _216dabea3_getNilVar(jule::Any(_8732_v, &__jule_any_type7)), true);
		};
		if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
			jule::Ptr<_2089ce661_Type> _969_kind = _2170b4e58_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_8732_v.alloc)._field_TypeSym))._field_Type, (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model);;
			if ((_969_kind != nullptr)) {
				if (_2170b4a29_isDynamicValidType((*(*(_8732_v))._field_TypeSym.alloc)._field_Type)) {
					_2170b3b27_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2170b5299_getDynamicVar(jule::Any(_8732_v, &__jule_any_type7)), _969_kind);
				};
			};
		};
		static__2170ab7bd_optimizeData(&((*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model), &((*(_self_))._field_data), _self_);
	};
}



inline void _2170a4a5d_optimizeConditional(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cb55d_Conditional> _10840_c) {
	_2170b62ab_data _1127_alive = _2170b62ab_data{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)};;
	_2170b7367_loadCheckpoint(&_1127_alive, _2170b6d28_getCheckpoint((*(_self_))._field_data.ptr()));
	_2170b5cb1_dataCheckpoint _1167_checkpoint = _2170b6d28_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_10840_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a3d7640:;
		if (it != expr_end) {
			jule::Ptr<_2088cad43_If> _11815_elif = *it;
			{
				static__2170abb64_optimizeConditionalData(&((*(_11815_elif))._field_Expr), &((*_self_.alloc)._field_data), _self_);
				_2170a82ae_optimizeChild(_self_, (*_11815_elif.alloc)._field_Scope);
				_2170b6a92_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
				_2170b7367_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _1167_checkpoint);
			}
			_iter_next_21a3d7640:;
			++it;
			goto _iter_begin_21a3d7640;
		}
		_iter_end_21a3d7640:;
	};
	if (((*_10840_c.alloc)._field_Default != nullptr)) {
		_2170a82ae_optimizeChild(_self_, (*(*(_10840_c))._field_Default.alloc)._field_Scope);
		_2170b6a92_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
	};
	_2170b7367_loadCheckpoint((*(_self_))._field_data, _2170b70ae_getMutCheckpoint(&_1127_alive));
	if ((!(_2170bc889_Cond))) {
		return;;
	};
	jule::Bool _1357_constCase = false;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a3db39c:;
		if (it != expr_end) {
			jule::I64 _1388_i = it - expr->begin();
			jule::Ptr<_2088cad43_If> _13815_elif = *it;
			{
				if ((!(_2170a8aea_isConstantValidConditionalCase(&(_13815_elif))))) {
					goto _iter_next_21a3db39c;
				};
				_1357_constCase=true;
				((*(_10840_c))._field_Elifs).mut_slice(0LL, _1388_i);;
				(*_10840_c.alloc)._field_Default=jule::new_ptr<_2088cb1b7_Else>(_2088cb1b7_Else{._field_Scope=(*(_13815_elif))._field_Scope});
				goto _iter_end_21a3db39c;
			}
			_iter_next_21a3db39c:;
			++it;
			_1388_i++;
			goto _iter_begin_21a3db39c;
		}
		_iter_end_21a3db39c:;
	};
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_2088cad43_If>* _1557_i = (&((*_10840_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_2088cad43_If>* _1563_end = (&((*_10840_c.alloc)._field_Elifs[((*_10840_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1557_i <= _1563_end); (_1557_i)++) {
		{
			{
				if (_2170a9513_isUnreachableConditionalCase(&((*(_1557_i))))) {
					(*(_1557_i))=nullptr;
				};
			};
		}
	_iter_next_21a3de900:;
	}
	_iter_end_21a3de900:;;
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1357_constCase))) {
		return;;
	};
	jule::I64 _1747_only = -1LL;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a3e14a1:;
		if (it != expr_end) {
			jule::I64 _1757_j = it - expr->begin();
			jule::Ptr<_2088cad43_If> _17510_elif = *it;
			{
				if ((_17510_elif != nullptr)) {
					if ((_1747_only != -1LL)) {
						return;;
					};
					_1747_only=_1757_j;
				};
			}
			_iter_next_21a3e14a1:;
			++it;
			_1757_j++;
			goto _iter_begin_21a3e14a1;
		}
		_iter_end_21a3e14a1:;
	};
	if ((_1747_only != -1LL)) {
		_2170a3a29_setCurrentStmt(_self_, jule::Any((*((*_10840_c.alloc)._field_Elifs[_1747_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _2170a4e7b_buildDefaultConstantTrueCase(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088d0c5a_Case> _19149_case, jule::I64* _19173_i, jule::Ptr<_2088d0463_Match>* _19186_m) {
	(*(_19149_case))._field_Exprs=nullptr;
	jule::I64 _1933_start = (*(_19173_i));;
	_julec_label_21a3e400e:;
	for (;;) {
		{
			if (((*((*_19149_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_21a3e3ea9;
			};
			jule::Any *_1999_stmt = &((*((*_19149_case.alloc)._field_Scope))._field_Stmts[((*(*(_19149_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_1999_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_21a3e5dce:;
					{
						((*(_19173_i)))++;
						if (((*(_19173_i)) >= (*((*(_19186_m))))._field_Cases.len())) {
							(*(_1999_stmt))=jule::Any((*((*((*(_19186_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_21a3e3ea9;
						};
						_19149_case=(*((*(_19186_m))))._field_Cases[(*(_19173_i))];
						(*(_1999_stmt))=jule::Any((*(_19149_case))._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_21a3e5eab:;
					{
						goto _iter_end_21a3e3ea9;
					}
				}
				_match_end_21a3e5d68:;
			};
		}
	_iter_next_21a3e3ea9:;
	}
	_iter_end_21a3e3ea9:;;
	(*((*(_19186_m))))._field_Default=(*((*(_19186_m))))._field_Cases[_1933_start];
	((*((*(_19186_m))))._field_Cases).mut_slice(0LL, _1933_start);;
}



inline void _2170a5234_optimizeMatch(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088d0463_Match> _21734_m) {
	jule::Uintptr _2187_var = 0LLU;;
	if ((_2170bd945_Dynamic && (*(_21734_m))._field_TypeMatch)) {
		_2187_var=_2170b5299_getDynamicVar((*((*_21734_m.alloc)._field_Expr))._field_Model);
	};
	_2170b62ab_data _2267_alive = _2170b62ab_data{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)};;
	_2170b7367_loadCheckpoint(&_2267_alive, _2170b6d28_getCheckpoint((*(_self_))._field_data.ptr()));
	_2170b5cb1_dataCheckpoint _2307_checkpoint = _2170b6d28_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a3ea895:;
		if (it != expr_end) {
			jule::Ptr<_2088d0c5a_Case> _23215_case = *it;
			{
				{
					auto expr = &((*(_23215_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a3eb335:;
					if (it != expr_end) {
						jule::Ptr<_20899a9a1_Data> _23316_expr = *it;
						{
							static__2170abb64_optimizeConditionalData(&((*(_23316_expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
						}
						_iter_next_21a3eb335:;
						++it;
						goto _iter_begin_21a3eb335;
					}
					_iter_end_21a3eb335:;
				};
				if ((((*_23215_case.alloc)._field_Exprs.len() == 1LL) && ((*((*_self_.alloc)._field_data))._field_dynamic != nullptr))) {
					jule::Ptr<_2089ce661_Type> _2389_kind = _2170b4e58_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_23215_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2389_kind != nullptr)) {
						_2170b3b27_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2187_var, _2389_kind);
					} else {
						_2170b3e68_removeVar((*(*(_self_))._field_data.alloc)._field_dynamic.ptr(), _2187_var);
					};
				};
				_2170a82ae_optimizeChild(_self_, (*_23215_case.alloc)._field_Scope);
				_2170b6a92_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
				_2170b7367_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _2307_checkpoint);
			}
			_iter_next_21a3ea895:;
			++it;
			goto _iter_begin_21a3ea895;
		}
		_iter_end_21a3ea895:;
	};
	if (((*_21734_m.alloc)._field_Default != nullptr)) {
		_2170a82ae_optimizeChild(_self_, (*(*(_21734_m))._field_Default.alloc)._field_Scope);
		_2170b6a92_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
	};
	_2170b7367_loadCheckpoint((*(_self_))._field_data, _2170b70ae_getMutCheckpoint(&_2267_alive));
	if ((!(_2170bc889_Cond))) {
		return;;
	};
	jule::Bool _2607_constCase = false;;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a402ca9:;
		if (it != expr_end) {
			jule::I64 _26312_i = it - expr->begin();
			jule::Ptr<_2088d0c5a_Case> _26319_case = *it;
			{
				if ((!(_2170a91c2_isConstantValidMatchCase(&(_26319_case))))) {
					goto _iter_next_21a402ca9;
				};
				_2607_constCase=true;
				_2170a4e7b_buildDefaultConstantTrueCase(_self_, _26319_case, &(_26312_i), &(_21734_m));
				goto _iter_end_21a402ca9;
			}
			_iter_next_21a402ca9:;
			++it;
			_26312_i++;
			goto _iter_begin_21a402ca9;
		}
		_iter_end_21a402ca9:;
	};
	if (((*_21734_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_2088d0c5a_Case>* _2777_i = (&((*_21734_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_2088d0c5a_Case>* _2783_end = (&((*_21734_m.alloc)._field_Cases[((*_21734_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2777_i <= _2783_end); (_2777_i)++) {
		{
			{
				if (_2170a9799_isUnreachableMatchCase(&((*(_2777_i))))) {
					(*(_2777_i))=nullptr;
				};
			};
		}
	_iter_next_21a40587d:;
	}
	_iter_end_21a40587d:;;
	if ((!(_2607_constCase))) {
		return;;
	};
	jule::I64 _2927_only = -1LL;;
	{
		auto expr = &((*_21734_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a406c8b:;
		if (it != expr_end) {
			jule::I64 _2937_j = it - expr->begin();
			jule::Ptr<_2088d0c5a_Case> _29310_case = *it;
			{
				if ((_29310_case != nullptr)) {
					if ((_2927_only != -1LL)) {
						return;;
					};
					_2927_only=_2937_j;
				};
			}
			_iter_next_21a406c8b:;
			++it;
			_2937_j++;
			goto _iter_begin_21a406c8b;
		}
		_iter_end_21a406c8b:;
	};
	if ((_2927_only != -1LL)) {
		_2170a3a29_setCurrentStmt(_self_, jule::Any((*((*_21734_m.alloc)._field_Cases[_2927_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _2170a54dc_optimizeRangeIter(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cc7e5_RangeIter> _30938_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30938_it))._field_KeyA != nullptr))) {
		_2170b8a0b_pushVar((*((*(_self_))._field_data))._field_boundary, _2170ba997_getBoundaryVar((*((*_30938_it.alloc)._field_Expr))._field_Model), jule::Any((*_30938_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_2170a8567_optimizeChildHard(_self_, (*(_30938_it))._field_Scope);
	if (_2170bd68c_Iter) {
		{
			auto &_match_expr{ (*((*(_30938_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_21a40b763:;
				{
					jule::Ptr<_2088136c6_CastingExpr> _3219_cem = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_2088136c6_CastingExpr>();;
					jule::Ptr<_2089d846c_Prim> _3225_eprim = _2089d2774_Prim((*(_3219_cem))._field_ExprType.ptr());;
					if (((_3225_eprim == nullptr) || (!(_2089db937_IsStr(_3225_eprim.ptr()))))) {
						goto _match_end_21a40b6ca;
					};
					jule::Ptr<_2089dc96b_Slc> _3269_s = _2089d37ca_Slc((*_3219_cem.alloc)._field_Type.ptr());;
					if ((_3269_s == nullptr)) {
						goto _match_end_21a40b6ca;
					};
					jule::Ptr<_2089d846c_Prim> _3305_prim = _2089d2774_Prim((*(_3269_s))._field_Elem.ptr());;
					if ((_3305_prim == nullptr)) {
						goto _match_end_21a40b6ca;
					};
					{
						
						if (_2089d9d97_IsU8(_3305_prim.ptr())) {
							_case_begin_21a41013a:;
							{
								(*_30938_it.alloc)._field_Expr=(*_3219_cem.alloc)._field_Expr;
							}
						}
						else if (_2089d987a_IsI32(_3305_prim.ptr())) {
							_case_begin_21a410316:;
							{
								static__2170ab7bd_optimizeData(&((*((*_3219_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
								_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216da8d29_StrRuneIter>(_216da8d29_StrRuneIter{._field_Expr=(*_3219_cem.alloc)._field_Expr, ._field_Base=_30938_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_21a40d116:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_21a40b279:;
				{
					jule::Ptr<_208814452_SliceExpr> _3519_slc = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_208814452_SliceExpr>();;
					jule::Ptr<_2089dec8c_Arr> _3529_arr = jule::new_ptr<_2089dec8c_Arr>(_2089dec8c_Arr{._field_Auto=false, ._field_N=(*(_3519_slc))._field_Elems.len(), ._field_Elem=(*_3519_slc.alloc)._field_ElemType});;
					(*((*((*_30938_it.alloc)._field_Expr))._field_Type))._field_Kind=jule::Trait(_3529_arr, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data27);
					(*(*(_30938_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_208817389_ArrayExpr>(_208817389_ArrayExpr{._field_Kind=_3529_arr, ._field_Elems=(*_3519_slc.alloc)._field_Elems}), &__jule_any_type86);
				}
			}
			_match_end_21a40b6ca:;
		};
	};
	static__2170ab7bd_optimizeData(&((*((*_30938_it.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
}



inline void _2170a5795_optimizeWhileIter(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cbd11_WhileIter> _36638_it) {
	static__2170ab7bd_optimizeData(&((*(_36638_it))._field_Expr), &((*(_self_))._field_data), _self_);
	_2170a8006_optimizeStmt(_self_, (*_36638_it.alloc)._field_Next);
	_2170a8567_optimizeChildHard(_self_, (*_36638_it.alloc)._field_Scope);
}



inline jule::Bool _2170a5ad6_substr(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _37227_a) {
	if (((*((*(_37227_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37227_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_21a41a046:;
			{
				jule::Ptr<_208815be5_SlicingExpr> _3788_sem = (*((*(_37227_a))._field_Right))._field_Model.unsafe_cast_ptr<_208815be5_SlicingExpr>();;
				if (_208a63937_EqualModels((*((*(_37227_a))._field_Left))._field_Model, (*(_3788_sem))._field_Expr)) {
					_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216da7aa3_MutSlicingExpr>(_216da7aa3_MutSlicingExpr{._field_Token=(*_3788_sem.alloc)._field_Token, ._field_Expr=(*_3788_sem.alloc)._field_Expr, ._field_Left=(*_3788_sem.alloc)._field_Left, ._field_Right=(*_3788_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_21a419ebe:;
	};
	return false;;
}



inline jule::Bool _2170a5e27_strAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _39230_a) {
	if ((!(_2170bcacb_Str))) {
		return false;;
	};
	jule::Ptr<_2089d846c_Prim> _3963_lp = _2089d2774_Prim((*((*(_39230_a))._field_Left))._field_Type.ptr());;
	if (((_3963_lp == nullptr) || (!(_2089db937_IsStr(_3963_lp.ptr()))))) {
		return false;;
	};
	return _2170a5ad6_substr(_self_, _39230_a);;
}



inline jule::Bool _2170a6268_sliceAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _40332_a) {
	if (((!(_2170bcd73_Slice)) || (_2089d37ca_Slc((*((*(_40332_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _2170a5ad6_substr(_self_, _40332_a);;
}



inline void _2170a6521_optimizePostfix(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088cdeab_Postfix> _41136_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_2170ba14a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41136_postfix))._field_Expr);
	};
	static__2170ab7bd_optimizeData(&((*(_41136_postfix))._field_Expr), &((*(_self_))._field_data), _self_);
}



inline jule::Bool _2170a6862_cmplxAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign>* _41833_assign) {
	if ((((!(_2170be638_StdMathCmplx)) || ((*((*((*(_41833_assign))))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) || ((*(_2093a4b90_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_2087490bd_StructIns> _4227_s = _2089d3ce7_Struct((*((*((*(_41833_assign))))._field_Left))._field_Type.ptr());;
	if (((_4227_s == nullptr) || (_4227_s != (*((*(_2093a4b90_ProgramMeta))._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_41833_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a426c23:;
			{
				goto _match_end_21a4279c1;
			}
		}
		else {
			_case_begin_21a427a37:;
			{
				return false;;
			}
		}
		_match_end_21a4279c1:;
	};
	jule::Ptr<_208814078_FnCallExpr> _4327_fc = (*((*((*(_41833_assign))))._field_Right))._field_Model.cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30);;
	{
		auto &_match_expr{ (*(_4327_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a427c9b:;
			{
				goto _match_end_21a428b37;
			}
		}
		else {
			_case_begin_21a428b9d:;
			{
				return false;;
			}
		}
		_match_end_21a428b37:;
	};
	jule::Ptr<_208816b19_StructSubIdentExpr> _4397_siem = (*(_4327_fc))._field_Expr.cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
	if ((!(_208a63937_EqualModels((*(*((*(_41833_assign))))._field_Left.alloc)._field_Model, (*((*(_4397_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4327_fc))._field_Func };
		
		if (_match_expr == (*((*(_2093a4b90_ProgramMeta))._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_21a42a908:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2093a4b90_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*(_2093a4b90_ProgramMeta))._field_MathCmplx))._field_CmplxSub) {
			_case_begin_21a42a96e:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2093a4b90_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*(*(_2093a4b90_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMul) {
			_case_begin_21a42a9d5:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2093a4b90_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*(*(_2093a4b90_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDiv) {
			_case_begin_21a42aa5c:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2093a4b90_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_21a429a7d:;
			{
				return false;;
			}
		}
		_match_end_21a42a82b:;
	};
	(*(_4397_siem))._field_Method=(*_4327_fc.alloc)._field_Func;
	_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4327_fc, &__jule_any_type30), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)}), &__jule_any_type21));
	return true;;
}



inline void _2170a6b1a_optimizeAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce462_Assign> _46035_assign) {
	if ((((*((*(_46035_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _208a63937_EqualModels((*((*_46035_assign.alloc)._field_Left))._field_Model, (*((*_46035_assign.alloc)._field_Right))._field_Model))) {
		_2170a3c27_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		if (_2170ba414_isBoundaryRiskyType((*((*(_46035_assign))._field_Left))._field_Type)) {
			_2170ba14a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_46035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
		if (_216dab898_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Right))._field_Model)) {
			if (_216dabb62_isNilValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				;
				_216daa996_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _216dabea3_getNilVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_216dab4d0_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Left))._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
		jule::Ptr<_2089ce661_Type> _4848_kind = _2170b4e58_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_46035_assign))._field_Right))._field_Type, (*(*(_46035_assign))._field_Right.alloc)._field_Model);;
		if ((_4848_kind != nullptr)) {
			if (_2170b4a29_isDynamicValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				_2170b3b27_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2170b5299_getDynamicVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), _4848_kind);
			};
		} else {
			_2170b471b_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_46035_assign.alloc)._field_Left))._field_Model);
		};
	};
	{
		
		if (_2170a5e27_strAssign(_self_, _46035_assign) || _2170a6268_sliceAssign(_self_, _46035_assign) || _2170a6862_cmplxAssign(_self_, &(_46035_assign))) {
			_case_begin_21a43a660:;
			{
				return;;
			}
		}
		_match_end_21a4391db:;
	};
	static__2170ab7bd_optimizeData(&((*((*(_46035_assign))._field_Left))._field_Model), &((*(_self_))._field_data), _self_);
	static__2170ab7bd_optimizeData(&((*((*_46035_assign.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data), _self_);
	{
		auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(47LLU) || _match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU) || _match_expr == static_cast<jule::U64>(40LLU) || _match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_21a43c9e7:;
			{
				if ((((!(_2170bbba7_Math)) && (!(_2170bcacb_Str))) || (_2089d3ce7_Struct((*(*(_46035_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_21a43c970;
				};
				jule::U64 _5124_oldId;
				jule::Str _51211_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*((*_46035_assign.alloc)._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_46035_assign))._field_Op.alloc)._field_Kind;
					_5124_oldId = ___jule_assign_arg;
					_51211_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(40LLU)) {
						_case_begin_21a441204:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U64>(60LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(41LLU)) {
						_case_begin_21a440d4c:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U64>(61LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_21a440db3:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_21a440e29:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_21a440ea1:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_21a441028:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(47LLU)) {
						_case_begin_21a4410a0:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(67LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_21a43dda0:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:536:5"));;
						}
					}
					_match_end_21a440c09:;
				};
				jule::Ptr<_208812098_BinaryExpr> _5388_b = jule::new_ptr<_208812098_BinaryExpr>(_208812098_BinaryExpr{._field_Left=(*_46035_assign.alloc)._field_Left, ._field_Right=(*_46035_assign.alloc)._field_Right, ._field_Op=(*_46035_assign.alloc)._field_Op});;
				jule::Any _5438_model = jule::Any(_5388_b, &__jule_any_type113);;
				static__2170ab7bd_optimizeData(&(_5438_model), &((*_self_.alloc)._field_data), _self_);
				if (((!__jule_any_type113_compare(_5438_model, _5388_b)) || ((*(_5388_b))._field_Op != (*_46035_assign.alloc)._field_Op))) {
					if (((*((*_46035_assign.alloc)._field_Op))._field_Id == static_cast<jule::U64>(67LLU))) {
						_2170a3c27_removeCurrent(_self_);
						return;;
					};
					(*_46035_assign.alloc)._field_Right=jule::new_ptr<_208811a9d_OperandExpr>((*(*(_46035_assign))._field_Right.alloc));
					(*(_5388_b))._field_Op=jule::new_ptr<_208711827_Token>((*(*(_5388_b))._field_Op.alloc));
					(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_46035_assign))._field_Right.alloc)._field_Model=_5438_model;
					return;;
				};
				(*((*_46035_assign.alloc)._field_Op))._field_Id=_5124_oldId;
				(*(*(_46035_assign))._field_Op.alloc)._field_Kind=_51211_oldKind;
				return;;
			}
		}
		_match_end_21a43c970:;
	};
	if (_2170bb8aa_Append) {
		{
			auto &_match_expr{ (*((*(_46035_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_21a4540e6:;
				{
					jule::Ptr<_208818db3_BuiltinAppendCallExpr> _5699_m = (*((*(_46035_assign))._field_Right))._field_Model.unsafe_cast_ptr<_208818db3_BuiltinAppendCallExpr>();;
					if ((!(_2170b265e_areSameLvalueExpr(&((*(*(_46035_assign))._field_Left.alloc)._field_Model), &((*(_5699_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5699_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_21a45557b:;
							{
								_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216da8576_PushToSliceExpr>(_216da8576_PushToSliceExpr{._field_Dest=(*(_5699_m))._field_Dest, ._field_Elems=(*(_5699_m))._field_Elements.unsafe_cast_ptr<_208814452_SliceExpr>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_21a455d51:;
							{
								_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216da8950_AppendToSliceExpr>(_216da8950_AppendToSliceExpr{._field_Dest=(*(*(_46035_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*(_5699_m))._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_21a455cda:;
					};
				}
			}
			_match_end_21a45406e:;
		};
	};
}



inline void _2170a6e7d_normalizeAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _59437_assign, jule::Ptr<_208817686_TupleExpr>* _59470_tup) {
	jule::I64 _5957_i = 0LL;;
	while ((_5957_i < (*((*(_59437_assign))))._field_Left.len())) {
		{
			jule::Ptr<_20899a9a1_Data> _5978_l = (*((*(_59437_assign))))._field_Left[_5957_i];;
			jule::Ptr<_20899a9a1_Data> _5988_r = (*((*(_59470_tup))))._field_Datas[_5957_i];;
			if (((_5978_l == nullptr) && (_5988_r != nullptr))) {
				jule::I64 _6065_offset = ((*(_self_))._field_i + 1LL);;
				(*((*_self_.alloc)._field_scope))._field_Stmts=_21a45e3ba_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6065_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5988_r, &__jule_any_type21); __jule_collection; }));
				goto _julec_label_21a473016;
			};
			if (((_5978_l != nullptr) && (_5988_r != nullptr))) {
				{
					
					if (_20899b3db_IsConst(_5988_r)) {
						_case_begin_21a46bb14:;
						{
							jule::I64 _6186_offset = ((*(_self_))._field_i + 1LL);;
							(*((*_self_.alloc)._field_scope))._field_Stmts=_21a45e3ba_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6186_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_2088ce462_Assign>(_2088ce462_Assign{._field_Left=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*_5978_l.alloc)._field_Type, ._field_Model=(*_5978_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*_5988_r.alloc)._field_Type, ._field_Model=(*_5988_r.alloc)._field_Model}), ._field_Op=(*((*(_59437_assign))))._field_Op}), &__jule_any_type40); __jule_collection; }));
							goto _julec_label_21a473016;
						}
					}
					else if (_208a63937_EqualModels((*_5978_l.alloc)._field_Model, (*_5988_r.alloc)._field_Model)) {
						_case_begin_21a46bb7a:;
						{
							goto _julec_label_21a473016;
						}
					}
					_match_end_21a469529:;
				};
				{
					auto &_match_expr{ (*(_5978_l))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_21a469a24:;
						{
							jule::Ptr<_20894d7de_Var> _63610_v = (*(_5978_l))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
							if ((_2093a372c_FindVar(_63610_v, (*((*(_59437_assign))))._field_Decls) == -1LL)) {
								goto _match_end_21a4699ad;
							};
							{
								auto &_match_expr{ (*(_5988_r))._field_Model };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_21a472e6c:;
									{
										jule::I64 _6497_offset = ((*(_self_))._field_i + 1LL);;
										(*((*_self_.alloc)._field_scope))._field_Stmts=_21a45e3ba_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6497_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_63610_v, &__jule_any_type7); __jule_collection; }));
										goto _julec_label_21a473016;
									}
								}
								_match_end_21a472e06:;
							};
						}
					}
					_match_end_21a4699ad:;
				};
			};
			(_5957_i)++;
			goto _iter_next_21a45adbc;
			_julec_label_21a473016:;
			(*((*(_59437_assign))))._field_Left=jule::append((*((*(_59437_assign))))._field_Left.slice(0LL, _5957_i),(*((*(_59437_assign))))._field_Left.slice((_5957_i + 1LL)));
			(*((*(_59470_tup))))._field_Datas=jule::append((*((*(_59470_tup))))._field_Datas.slice(0LL, _5957_i),(*((*(_59470_tup))))._field_Datas.slice((_5957_i + 1LL)));
		}
	_iter_next_21a45adbc:;
	}
	_iter_end_21a45adbc:;;
}



inline jule::Bool _2170a7379_tryOptimizeSwap(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _66737_assign, jule::Ptr<_208817686_TupleExpr>* _66770_tup) {
	jule::Bool __jule_func_result = false;
	if ((((((*((*(_66770_tup))))._field_Datas.len() != 2LL) || ((*((*(_66737_assign))))._field_Left.len() != 2LL)) || ((*((*(_66737_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_66737_assign))))._field_Left[1LL] == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((!(_208a63937_EqualModels((*((*((*(_66737_assign))))._field_Left[0LL]))._field_Model, (*((*((*(_66770_tup))))._field_Datas[1LL]))._field_Model))) || (!(_208a63937_EqualModels((*((*((*(_66737_assign))))._field_Left[1LL]))._field_Model, (*((*((*(_66770_tup))))._field_Datas[0LL]))._field_Model))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_216da680a_SwapExpr> _6777_model = jule::new_ptr<_216da680a_SwapExpr>(_216da680a_SwapExpr{._field_Left=(*((*(_66737_assign))))._field_Left[0LL], ._field_Right=(*((*(_66737_assign))))._field_Left[1LL]});;
	_2170a3a29_setCurrentStmt(_self_, jule::Any(_6777_model, &__jule_any_type126));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _2170a76dc_splitAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _68933_assign, jule::Ptr<_208817686_TupleExpr>* _68966_tup) {
	{
		auto expr = &((*((*(_68966_tup))))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a47c51a:;
		if (it != expr_end) {
			jule::I64 _6957_i = it - expr->begin();
			{
				jule::Ptr<_20899a9a1_Data> _6964_r = (*((*(_68966_tup))))._field_Datas[_6957_i];;
				jule::Ptr<_20899a9a1_Data> _6974_l = (*((*(_68933_assign))))._field_Left[_6957_i];;
				if ((_6974_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6974_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_21a47e3da:;
							{
								goto _match_end_21a47e6a4;
							}
						}
						else {
							_case_begin_21a47e71a:;
							{
								return;;
							}
						}
						_match_end_21a47e6a4:;
					};
				};
				if ((_6964_r != nullptr)) {
					{
						auto &_match_expr{ (*(_6964_r))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_21a47e297:;
							{
								goto _match_end_21a4801dd;
							}
						}
						else {
							_case_begin_21a480254:;
							{
								return;;
							}
						}
						_match_end_21a4801dd:;
					};
				};
			}
			_iter_next_21a47c51a:;
			++it;
			_6957_i++;
			goto _iter_begin_21a47c51a;
		}
		_iter_end_21a47c51a:;
	};
	jule::I64 _7163_z = (*(_self_))._field_i;;
	jule::I64 _7177_i = 0LL;;
	_julec_label_21a481101:;
	while ((_7177_i < (*((*(_68933_assign))))._field_Left.len())) {
		{
			jule::Ptr<_20899a9a1_Data> _7208_l = (*((*(_68933_assign))))._field_Left[_7177_i];;
			if ((_7208_l == nullptr)) {
				(_7177_i)++;
				goto _iter_next_21a480bb1;
			};
			{
				auto &_match_expr{ (*(_7208_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_21a483510:;
					{
						goto _match_end_21a48307b;
					}
				}
				else {
					_case_begin_21a4830e2:;
					{
						(_7177_i)++;
						goto _iter_next_21a480bb1;
					}
				}
				_match_end_21a48307b:;
			};
			jule::Ptr<_20894d7de_Var> _7324_v = (*(_7208_l))._field_Model.cast_ptr<_20894d7de_Var>(&__jule_any_type7);;
			{
				auto expr = &((*((*(_68933_assign))))._field_Left);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_21a484049:;
				if (it != expr_end) {
					jule::I64 _7358_j = it - expr->begin();
					jule::Ptr<_20899a9a1_Data> _73511_jl = *it;
					{
						while ((((_7358_j != _7177_i) && (_73511_jl != nullptr)) && (__jule_any_type7_compare((*(_73511_jl))._field_Model, _7324_v)))) {
							{
								(_7177_i)++;
								goto _iter_next_21a480bb1;
							}
						_iter_next_21a484962:;
						}
						_iter_end_21a484962:;;
					}
					_iter_next_21a484049:;
					++it;
					_7358_j++;
					goto _iter_begin_21a484049;
				}
				_iter_end_21a484049:;
			};
			{
				auto expr = &((*((*(_68966_tup))))._field_Datas);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_21a4846a9:;
				if (it != expr_end) {
					jule::I64 _7428_j = it - expr->begin();
					jule::Ptr<_20899a9a1_Data> _74211_jl = *it;
					{
						while ((((_7428_j != _7177_i) && (_74211_jl != nullptr)) && (__jule_any_type7_compare((*(_74211_jl))._field_Model, _7324_v)))) {
							{
								(_7177_i)++;
								goto _iter_next_21a480bb1;
							}
						_iter_next_21a485b3e:;
						}
						_iter_end_21a485b3e:;;
					}
					_iter_next_21a4846a9:;
					++it;
					_7428_j++;
					goto _iter_begin_21a4846a9;
				}
				_iter_end_21a4846a9:;
			};
			jule::Ptr<_20899a9a1_Data> _7518_r = (*((*(_68966_tup))))._field_Datas[_7177_i];;
			jule::I64 _7564_offset = ((*_self_.alloc)._field_i + 1LL);;
			(*((*_self_.alloc)._field_scope))._field_Stmts=_21a45e3ba_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _7564_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_2088ce462_Assign>(_2088ce462_Assign{._field_Left=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*_7208_l.alloc)._field_Type, ._field_Model=(*_7208_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_7518_r))._field_Type, ._field_Model=(*_7518_r.alloc)._field_Model}), ._field_Op=(*((*(_68933_assign))))._field_Op}), &__jule_any_type40); __jule_collection; }));
			(*((*(_68933_assign))))._field_Left=jule::append((*((*(_68933_assign))))._field_Left.slice(0LL, _7177_i),(*((*(_68933_assign))))._field_Left.slice((_7177_i + 1LL)));
			(*((*(_68966_tup))))._field_Datas=jule::append((*((*(_68966_tup))))._field_Datas.slice(0LL, _7177_i),(*((*(_68966_tup))))._field_Datas.slice((_7177_i + 1LL)));
		}
	_iter_next_21a480bb1:;
	}
	_iter_end_21a480bb1:;;
	(*_self_.alloc)._field_i=_7163_z;
}



inline void _2170a7995_optimizeMultiAssign(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ce9e5_MultiAssign> _77040_assign) {
	jule::Ptr<_208817686_TupleExpr> _7757_tup = static_cast<jule::Ptr<_208817686_TupleExpr>>(nullptr);;
	{
		auto &_match_expr{ (*(_77040_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_21a48b66c:;
			{
				_7757_tup=(*(_77040_assign))._field_Right.unsafe_cast_ptr<_208817686_TupleExpr>();
			}
		}
		_match_end_21a48b5e5:;
	};
	if ((_2170bd12b_Assign && (_7757_tup != nullptr))) {
		_2170a6e7d_normalizeAssign(_self_, &(_77040_assign), &(_7757_tup));
		_2170a76dc_splitAssign(_self_, &(_77040_assign), &(_7757_tup));
		_2170a7379_tryOptimizeSwap(_self_, &(_77040_assign), &(_7757_tup));
		if (((*(_77040_assign))._field_Left.len() == 0LL)) {
			_2170a3c27_removeCurrent(_self_);
			return;;
		};
		if (((*(_77040_assign))._field_Left.len() == 1LL)) {
			jule::Ptr<_20899a9a1_Data> _8099_l = (*(_77040_assign))._field_Left[0LL];;
			{
				auto &_match_expr{ (*(_8099_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_21a48e76e:;
					{
						jule::Ptr<_20894d7de_Var> _81210_v = (*(_8099_l))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
						if ((_2093a372c_FindVar(_81210_v, (*_77040_assign.alloc)._field_Decls) >= 0LL)) {
							_2170a3a29_setCurrentStmt(_self_, jule::Any(_81210_v, &__jule_any_type7));
							goto _julec_label_21a48e41c;
						};
					}
				}
				_match_end_21a48e6e7:;
			};
			{
				jule::Ptr<_20899a9a1_Data> _82010_r = (*(_7757_tup))._field_Datas[0LL];;
				_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2088ce462_Assign>(_2088ce462_Assign{._field_Left=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_8099_l))._field_Type, ._field_Model=(*_8099_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_208811a9d_OperandExpr>(_208811a9d_OperandExpr{._field_Type=(*(_82010_r))._field_Type, ._field_Model=(*_82010_r.alloc)._field_Model}), ._field_Op=(*_77040_assign.alloc)._field_Op}), &__jule_any_type40));
			};
			_julec_label_21a48e41c:;
			((*_self_.alloc)._field_i)--;
			return;;
		};
	};
	_2170b5cb1_dataCheckpoint _8547_checkpoint = _2170b6d28_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*(_77040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a493ee3:;
		if (it != expr_end) {
			jule::I64 _8568_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _85615_l = *it;
			{
				if ((_85615_l != nullptr)) {
					if (((*(*(_self_))._field_data.alloc)._field_boundary != nullptr)) {
						if (_2170ba414_isBoundaryRiskyType((*_85615_l.alloc)._field_Type)) {
							_2170ba14a_possibleBoundaryRemove(&(_8547_checkpoint._field_boundary), (*_85615_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_7757_tup != nullptr) && _216dab898_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_7757_tup.alloc)._field_Datas[_8568_i]))._field_Model))) {
							if (_216dabb62_isNilValidType((*_85615_l.alloc)._field_Type)) {
								;
								_216daa996_pushVar(_8547_checkpoint._field_nils.ptr(), _216dabea3_getNilVar((*_85615_l.alloc)._field_Model), true);
							};
						} else {
							_216dab4d0_possibleNilRemove(&(_8547_checkpoint._field_nils), (*_85615_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_7757_tup != nullptr))) {
						jule::Ptr<_2089ce661_Type> _87410_kind = _2170b4e58_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_7757_tup.alloc)._field_Datas[_8568_i]))._field_Type, (*((*(_7757_tup))._field_Datas[_8568_i]))._field_Model);;
						if ((_87410_kind != nullptr)) {
							if (_2170b4a29_isDynamicValidType((*_85615_l.alloc)._field_Type)) {
								_2170b3b27_pushVar(_8547_checkpoint._field_dynamic, _2170b5299_getDynamicVar((*_85615_l.alloc)._field_Model), _87410_kind);
							};
						} else {
							_2170b471b_possibleDynamicRemove(&(_8547_checkpoint._field_dynamic), (*_85615_l.alloc)._field_Model);
						};
					};
					static__2170ab7bd_optimizeData(&((*_85615_l.alloc)._field_Model), &((*_self_.alloc)._field_data), _self_);
				};
			}
			_iter_next_21a493ee3:;
			++it;
			_8568_i++;
			goto _iter_begin_21a493ee3;
		}
		_iter_end_21a493ee3:;
	};
	static__2170ab7bd_optimizeData(&((*_77040_assign.alloc)._field_Right), &((*_self_.alloc)._field_data), _self_);
	_2170b7367_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _8547_checkpoint);
}



inline void _2170a7c4d_optimizeRet(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088d17e9_RetSt> _89332_r) {
	static__2170ab7bd_optimizeData(&((*(_89332_r))._field_Expr), &((*(_self_))._field_data), _self_);
	if ((!(_2170bd3d4_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_89332_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a49d78e:;
			{
				goto _match_end_21a49d87c;
			}
		}
		else {
			_case_begin_21a49d8e3:;
			{
				return;;
			}
		}
		_match_end_21a49d87c:;
	};
	jule::Ptr<_208814078_FnCallExpr> _9077_fc = (*_89332_r.alloc)._field_Expr.cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30);;
	if (((((!((*((*((*(_9077_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*(_9077_fc))._field_Except == nullptr)) || ((*((*(_9077_fc))._field_Except))._field_Stmts.len() != 1LL)) || (!(_20939e55d_IsForwarded(&((*(_9077_fc))._field_Except)))))) {
		return;;
	};
	_2170a3a29_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216da6057_ExceptionalForwardingExpr>(_216da6057_ExceptionalForwardingExpr{._field_Expr=_9077_fc}), &__jule_any_type121));
}



inline void _2170a8006_optimizeStmt(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Any _91733_stmt) {
	{
		auto &_match_expr{ _91733_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_21a4a1b8d:;
			{
				_2170a8567_optimizeChildHard(_self_, _91733_stmt.unsafe_cast_ptr<_2088ca969_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_21a4a1918:;
			{
				_2170a44ec_optimizeData(_self_, _91733_stmt.unsafe_cast_ptr<_20899a9a1_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a4a1c26:;
			{
				_2170a47a5_optimizeVar(_self_, _91733_stmt.unsafe_cast_ptr<_20894d7de_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_21a4a1c9d:;
			{
				_2170a4a5d_optimizeConditional(_self_, _91733_stmt.unsafe_cast_ptr<_2088cb55d_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_21a4a1d25:;
			{
				_2170a54dc_optimizeRangeIter(_self_, _91733_stmt.unsafe_cast_ptr<_2088cc7e5_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_21a4a1d9c:;
			{
				_2170a5795_optimizeWhileIter(_self_, _91733_stmt.unsafe_cast_ptr<_2088cbd11_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_21a4a1e24:;
			{
				_2170a8567_optimizeChildHard(_self_, (*(_91733_stmt.unsafe_cast_ptr<_2088cb85a_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_21a4a1e9b:;
			{
				_2170a6b1a_optimizeAssign(_self_, _91733_stmt.unsafe_cast_ptr<_2088ce462_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_21a4a2023:;
			{
				_2170a7995_optimizeMultiAssign(_self_, _91733_stmt.unsafe_cast_ptr<_2088ce9e5_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_21a4a209a:;
			{
				_2170a5234_optimizeMatch(_self_, _91733_stmt.unsafe_cast_ptr<_2088d0463_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_21a4a2122:;
			{
				_2170a7c4d_optimizeRet(_self_, _91733_stmt.unsafe_cast_ptr<_2088d17e9_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_21a4a2199:;
			{
				_2170a6521_optimizePostfix(_self_, _91733_stmt.unsafe_cast_ptr<_2088cdeab_Postfix>());
			}
		}
		_match_end_21a4a1a39:;
	};
}



inline void _2170a82ae_optimizeChild(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ca969_Scope> _94734_child) {
	jule::Ptr<_2170a3188_scopeOptimizer> _9487_so = static__2170a3771_new(_94734_child);;
	(*(_9487_so))._field_parent=_self_;
	(*_9487_so.alloc)._field_data=(*(_self_))._field_data;
	_2170a8765_optimize(_9487_so);
}



inline void _2170a8567_optimizeChildHard(jule::Ptr<_2170a3188_scopeOptimizer> _self_, jule::Ptr<_2088ca969_Scope> _98338_child) {
	_2170b62ab_data _9867_alive = _2170b62ab_data{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)};;
	_2170b7367_loadCheckpoint(&_9867_alive, _2170b6d28_getCheckpoint((*(_self_))._field_data.ptr()));
	_2170a82ae_optimizeChild(_self_, _98338_child);
	_2170b6a92_removeDeads(&_9867_alive, &((*_self_.alloc)._field_data));
	_2170b7367_loadCheckpoint((*(_self_))._field_data, _2170b70ae_getMutCheckpoint(&_9867_alive));
}



inline void _2170a8765_optimize(jule::Ptr<_2170a3188_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_2170a8006_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_21a4ab978:;
	}
	_iter_end_21a4ab978:;;
}








inline jule::Bool _2170aa998_exprOptimizer_eq(_2170aa998_exprOptimizer *_self_, _2170aa998_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector) &&
		(_self_->_field_scopeOpt == _self_->_field_scopeOpt);
}

inline void static__2170aaee8_optimize(jule::Any* _2326_model) {
	static__2170ab7bd_optimizeData(_2326_model, &(_2170b594d_emptyData), nullptr);
}



inline jule::Ptr<_2170aa998_exprOptimizer> static__2170ab427_new(jule::Any* _2721_model, jule::Ptr<_2170b62ab_data>* _2745_d, jule::Ptr<_2170a3188_scopeOptimizer> _2759_s) {
	return jule::new_ptr<_2170aa998_exprOptimizer>(_2170aa998_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2721_model)), ._field_data=(*(_2745_d)), ._field_inspector=static__20939cd97_New(), ._field_scopeOpt=_2759_s});;
}



inline void static__2170ab7bd_optimizeData(jule::Any* _3630_model, jule::Ptr<_2170b62ab_data>* _3654_d, jule::Ptr<_2170a3188_scopeOptimizer> _3668_s) {
	if (_2171d27a1_exprEnabled) {
		jule::Ptr<_2170aa998_exprOptimizer> _398_exop = static__2170ab427_new(_3630_model, _3654_d, _3668_s);;
		_2170b1d56_do(_398_exop.ptr());
	};
}



inline void static__2170abb64_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_2170b62ab_data>* _4765_d, jule::Ptr<_2170a3188_scopeOptimizer> _4779_s) {
	if ((!(_2171d27a1_exprEnabled))) {
		return;;
	};
	jule::Ptr<_2170aa998_exprOptimizer> _527_exop = static__2170ab427_new(_4741_model, _4765_d, _4779_s);;
	{
		auto &_match_expr{ (*(_4741_model)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a4bbc30:;
			{
				goto _match_end_21a4bbd0c;
			}
		}
		else {
			_case_begin_21a4bc0d7:;
			{
				_2170b1d56_do(_527_exop.ptr());
				return;;
			}
		}
		_match_end_21a4bbd0c:;
	};
	jule::Bool _677_check = true;;
	jule::Ptr<jule::Bool> _687__check = ((jule::Ptr<jule::Bool>)((&(_677_check))));;
	_20939da24_Inspect((*(_527_exop))._field_inspector.ptr(), &((*((*_527_exop.alloc)._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_21a4be01d, jule::Ptr<__jule_anon_21a4be01d_ctx>::make(__jule_anon_21a4be01d_ctx{._687__check=_687__check,._527_exop=_527_exop}).as<jule::Uintptr>(), __jule_anon_21a4be01d_ctx_handler));
}



inline jule::Bool _2170abea5_selfCmpCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _10128_m) {
	if (((_2089d2774_Prim((*((*((*(_10128_m))))._field_Left))._field_Type.ptr()) != nullptr) && _20889ce8b_IsFloat((*(_2089d2774_Prim((*((*((*(_10128_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_208a63937_EqualModels((*((*((*(_10128_m))))._field_Left))._field_Model, (*((*((*(_10128_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_10128_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_21a4c44a7:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__208806213_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_21a4c4540:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__208806213_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_21a4c3374:;
			{
				return false;;
			}
		}
		_match_end_21a4c4364:;
	};
}



inline jule::Bool _2170ac2e6_boolCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _13025_m) {
	jule::Ptr<_2089d846c_Prim> _1313_lp = _2089d2774_Prim((*((*((*(_13025_m))))._field_Left))._field_Type.ptr());;
	if (((_1313_lp == nullptr) || (!(_2089db6a1_IsBool(_1313_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a4c8b93:;
			{
				std::swap((*((*(_13025_m))))._field_Left, (*((*(_13025_m))))._field_Right);
			}
		}
		else {
			_case_begin_21a4c7d6d:;
			{
				{
					auto &_match_expr{ (*((*((*(_13025_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_21a4c7158:;
						{
							goto _match_end_21a4c8698;
						}
					}
					else {
						_case_begin_21a4c870e:;
						{
							return false;;
						}
					}
					_match_end_21a4c8698:;
				};
			}
		}
		_match_end_21a4c7d07:;
	};
	jule::Ptr<_208799195_Const> _1487_c = (*((*((*(_13025_m))))._field_Right))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_21a4ca722:;
			{
				if (_208807632_ReadBool(_1487_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				} else {
					_208808c1b_SetBool(_1487_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_21a4ca7bb:;
			{
				if (_208807632_ReadBool(_1487_c.ptr())) {
					_208808c1b_SetBool(_1487_c, true);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_21a4c8896:;
		}
		_match_end_21a4ca689:;
	};
	return false;;
}



inline jule::Bool _2170ac637_arrayCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr> _18325_m) {
	jule::Ptr<_2089dec8c_Arr> _1847_arr = _2089d3544_Arr((*((*(_18325_m))._field_Left))._field_Type.ptr());;
	if (((_1847_arr == nullptr) || ((*(_1847_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__208806213_NewBool(true), &__jule_any_type15);
	return true;;
}



inline void _2170ac8e0_strConv(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208811a9d_OperandExpr>* _19824_m) {
	jule::Ptr<_2089d846c_Prim> _1993_p = _2089d2774_Prim((*((*(_19824_m))))._field_Type.ptr());;
	if (((_1993_p == nullptr) || (!(_2089db937_IsStr(_1993_p.ptr()))))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_19824_m))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21a4d1d33:;
			{
				jule::Ptr<_2088136c6_CastingExpr> _2068_c = (*((*(_19824_m))))._field_Model.unsafe_cast_ptr<_2088136c6_CastingExpr>();;
				jule::Ptr<_2089dc96b_Slc> _2078_s = _2089d37ca_Slc((*((*(_2068_c))._field_Expr))._field_Type.ptr());;
				if ((_2078_s == nullptr)) {
					goto _match_end_21a4d1cab;
				};
				jule::Ptr<_2089d846c_Prim> _2114_sp = _2089d2774_Prim((*(_2078_s))._field_Elem.ptr());;
				if ((_2114_sp == nullptr)) {
					goto _match_end_21a4d1cab;
				};
				if (_2089d9d97_IsU8(_2114_sp.ptr())) {
					jule::Any _2179_model = jule::Any(jule::new_ptr<_216d93a39_StrFromBytes>(_216d93a39_StrFromBytes{._field_Expr=(*(*(_2068_c))._field_Expr.alloc)._field_Model}), &__jule_any_type127);;
					(*((*(_19824_m))))._field_Model=(*(((jule::Any*)((&(_2179_model))))));
				};
			}
		}
		_match_end_21a4d1cab:;
	};
}



inline jule::Bool _2170acc31_strCond(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _22324_m) {
	jule::Ptr<_2089d846c_Prim> _2243_lp = _2089d2774_Prim((*((*((*(_22324_m))))._field_Left))._field_Type.ptr());;
	if (((_2243_lp == nullptr) || (!(_2089db937_IsStr(_2243_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*((*(_22324_m))))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*((*(_22324_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_22324_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a4da5ab:;
			{
				std::swap((*((*(_22324_m))))._field_Left, (*((*(_22324_m))))._field_Right);
			}
		}
		else {
			_case_begin_21a4d9753:;
			{
				{
					auto &_match_expr{ (*((*((*(_22324_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_21a4d8840:;
						{
							goto _match_end_21a4da07d;
						}
					}
					else {
						_case_begin_21a4da0e4:;
						{
							return false;;
						}
					}
					_match_end_21a4da07d:;
				};
			}
		}
		_match_end_21a4d96dc:;
	};
	jule::Ptr<_208799195_Const> _2447_c = (*((*((*(_22324_m))))._field_Right))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_22324_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_21a4da325:;
			{
				if ((_2088078b8_ReadStr(_2447_c.ptr())).empty()) {
					jule::Any _2489_model = jule::Any(jule::new_ptr<_216da6bd4_EmptyCompareExpr>(_216da6bd4_EmptyCompareExpr{._field_Expr=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2489_model))))));
					goto _match_end_21a4dd1e6;
				};
				jule::Any _2558_model = jule::Any(jule::new_ptr<_216da7520_StrCompExpr>(_216da7520_StrCompExpr{._field_Left=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Right=_2447_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2558_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_21a4dd2a1:;
			{
				if ((_2088078b8_ReadStr(_2447_c.ptr())).empty()) {
					jule::Any _2639_model = jule::Any(jule::new_ptr<_216da6bd4_EmptyCompareExpr>(_216da6bd4_EmptyCompareExpr{._field_Expr=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2639_model))))));
					goto _match_end_21a4dd1e6;
				};
				jule::Any _2708_model = jule::Any(jule::new_ptr<_216da7520_StrCompExpr>(_216da7520_StrCompExpr{._field_Left=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Right=_2447_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2708_model))))));
			}
		}
		_match_end_21a4dd1e6:;
	};
	return true;;
}



inline jule::Bool _2170ad072_strConcat(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _28126_m) {
	jule::Ptr<_2089d846c_Prim> _2823_lp = _2089d2774_Prim((*((*((*(_28126_m))))._field_Left))._field_Type.ptr());;
	if (((_2823_lp == nullptr) || (!(_2089db937_IsStr(_2823_lp.ptr()))))) {
		return false;;
	};
	if (((*((*((*(_28126_m))))._field_Op))._field_Id != static_cast<jule::U64>(60LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_28126_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a4eabd7:;
			{
				goto _match_end_21a4eb853;
			}
		}
		else {
			_case_begin_21a4eb8b9:;
			{
				return false;;
			}
		}
		_match_end_21a4eb853:;
	};
	jule::Ptr<_216da64a8_StrConcatExpr> _3057_model = jule::new_ptr<_216da64a8_StrConcatExpr>(_216da64a8_StrConcatExpr{._field_Parts=jule::Slice<jule::Any>(nullptr)});;
	jule::Fn<void,jule::Any> _30611_step;;
	jule::Fn<void,jule::Any> *_3094__step = &(_30611_step);;
	_30611_step=jule::__new_closure<void,jule::Any>((void*)__jule_anon_21a4ed57a, jule::Ptr<__jule_anon_21a4ed57a_ctx>::make(__jule_anon_21a4ed57a_ctx{._3057_model=_3057_model,._self_=_self_,._3094__step=_3094__step}).as<jule::Uintptr>(), __jule_anon_21a4ed57a_ctx_handler);
	_30611_step(jule::Any((*(_28126_m)), &__jule_any_type113));
	jule::Any _3407_anyModel = jule::Any(_3057_model, &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_3407_anyModel))))));
	return true;;
}



inline jule::Bool _2170ad528_tryNeutralElement1(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _34535_m, jule::Ptr<_208799195_Const> _34561_c, jule::Ptr<_208811a9d_OperandExpr>* _34587_nc) {
	if (_208809eb4_IsStr(_34561_c.ptr())) {
		if ((!(_2170bcacb_Str))) {
			return false;;
		};
		if (((_2088078b8_ReadStr(_34561_c.ptr())).empty() && ((*((*((*(_34535_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_2170bbba7_Math)) || (_208808402_AsF64(_34561_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_34535_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_21a5053c8:;
			{
				if (((*(_34587_nc)) == (*((*(_34535_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_34561_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21a506055:;
			{
				if (_20889ce8b_IsFloat((*(_2089d2774_Prim((*((*(_34587_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_21a505e12;
				};
				_2088086aa_SetI64(_34561_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_34561_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_21a5060bb:;
			{
				(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_21a505e12:;
	};
	return false;;
}



inline jule::Bool _2170ad869_tryNeutralElement(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _39534_m) {
	{
		auto &_match_expr{ (*((*((*(_39534_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a50b1e2:;
			{
				jule::Ptr<_208799195_Const> _3998_c = (*((*((*(_39534_m))))._field_Left))._field_Model.unsafe_cast_ptr<_208799195_Const>();;
				return _2170ad528_tryNeutralElement1(_self_, _39534_m, _3998_c, &((*((*(_39534_m))))._field_Right));;
			}
		}
		_match_end_21a50b16a:;
	};
	{
		auto &_match_expr{ (*((*((*(_39534_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a50b775:;
			{
				jule::Ptr<_208799195_Const> _4048_c = (*((*((*(_39534_m))))._field_Right))._field_Model.unsafe_cast_ptr<_208799195_Const>();;
				return _2170ad528_tryNeutralElement1(_self_, _39534_m, _4048_c, &((*((*(_39534_m))))._field_Left));;
			}
		}
		_match_end_21a50b6ed:;
	};
	return false;;
}



inline void _2170adb22_checkBinaryForBoundary(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _41039_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_41039_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_21a50ea20:;
			{
				jule::Ptr<_2088191b0_BuiltinLenCallExpr> _4168_blc = (*((*((*(_41039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_2088191b0_BuiltinLenCallExpr>();;
				if ((!(_2170ba6cd_isBoundaryValidType((*((*(_4168_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_41039_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_41039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_41039_m))))._field_Op))._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_41039_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_21a512c21:;
							{
								jule::Ptr<_208799195_Const> _42810_c = jule::new_ptr<_208799195_Const>((*((*((*((*(_41039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_208799195_Const>())));;
								_20880c78b_Sub(_42810_c, (*(static__208805bc4_NewI64(1LL))));
								_2170b8a0b_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _2170ba997_getBoundaryVar((*((*(_4168_blc))._field_Expr))._field_Model), jule::Any(_42810_c, &__jule_any_type15));
							}
						}
						_match_end_21a512b99:;
					};
					return;;
				};
				_2170b8a0b_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _2170ba997_getBoundaryVar((*((*(_4168_blc))._field_Expr))._field_Model), (*((*((*(_41039_m))))._field_Right))._field_Model);
				return;;
			}
		}
		_match_end_21a50e998:;
	};
	{
		auto &_match_expr{ (*((*((*(_41039_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_21a51013b:;
			{
				jule::Ptr<_2088191b0_BuiltinLenCallExpr> _4398_blc = (*((*((*(_41039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_2088191b0_BuiltinLenCallExpr>();;
				if ((!(_2170ba6cd_isBoundaryValidType((*((*(_4398_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_41039_m))))._field_Op))._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_41039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_41039_m))))._field_Op))._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_41039_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_21a519684:;
							{
								jule::Ptr<_208799195_Const> _45110_c = jule::new_ptr<_208799195_Const>((*((*((*((*(_41039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_208799195_Const>())));;
								_20880c78b_Sub(_45110_c, (*(static__208805bc4_NewI64(1LL))));
								_2170b8a0b_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _2170ba997_getBoundaryVar((*((*(_4398_blc))._field_Expr))._field_Model), jule::Any(_45110_c, &__jule_any_type15));
							}
						}
						_match_end_21a51960c:;
					};
					return;;
				};
				_2170b8a0b_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _2170ba997_getBoundaryVar((*((*(_4398_blc))._field_Expr))._field_Model), (*((*((*(_41039_m))))._field_Left))._field_Model);
				return;;
			}
		}
		_match_end_21a5100b4:;
	};
}



inline void _2170addca_checkBinaryForNil(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _46234_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _4667_var = _216dabea3_getNilVar((*((*((*(_46234_m))))._field_Left))._field_Model);;
	if ((_4667_var != 0LLU)) {
		if ((!(_216dabb62_isNilValidType((*(*((*(_46234_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_46234_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_21a51ee1a:;
				{
					_216daa996_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4667_var, ((*((*((*(_46234_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_21a51ed93:;
		};
		return;;
	};
	_4667_var=_216dabea3_getNilVar((*((*((*(_46234_m))))._field_Right))._field_Model);
	if ((_4667_var != 0LLU)) {
		if ((!(_216dabb62_isNilValidType((*(*((*(_46234_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_46234_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_21a52258d:;
				{
					_216daa996_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4667_var, ((*((*((*(_46234_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_21a522516:;
		};
		return;;
	};
}



inline void _2170ae183_shift(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr> _49621_m) {
	jule::I64 _4983_z = _208894acb_BitSizeOf((*(_2089d2774_Prim((*((*(_49621_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _4993_s = _20880816b_AsU64((*((*_49621_m.alloc)._field_Right))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15).ptr());;
	if ((_4993_s >= static_cast<jule::U64>(_4983_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__208805e49_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _5097_model = jule::Any(jule::new_ptr<_216da7da0_UnsafeBinaryExpr>(_216da7da0_UnsafeBinaryExpr{._field_Node=_49621_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5097_model))))));
}



inline jule::Bool _2170ae4c4_binaryMath(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _51627_m) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2089d846c_Prim> _5203_lp = _2089d2774_Prim((*((*((*(_51627_m))))._field_Left))._field_Type.ptr());;
	if ((_5203_lp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2089d846c_Prim> _5243_rp = _2089d2774_Prim((*((*((*(_51627_m))))._field_Right))._field_Type);;
	if ((_5243_rp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_21a52a6a6:;
			{
				if (((!(_20889cb4a_IsInt((*(_5203_lp))._field_Kind))) || (!(_208a63937_EqualModels((*(*((*(_51627_m))))._field_Left.alloc)._field_Model, (*((*((*(_51627_m))))._field_Right))._field_Model))))) {
					goto _match_end_21a52a640;
				};
				(*((*(_51627_m))))._field_Op=jule::new_ptr<_208711827_Token>((*(*((*(_51627_m))))._field_Op.alloc));
				(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
				(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*((*((*(_51627_m))))._field_Right))._field_Model=jule::Any(static__208805e49_NewU64(1LLU), &__jule_any_type15);
				jule::Any _5438_model = jule::Any(jule::new_ptr<_216da7da0_UnsafeBinaryExpr>(_216da7da0_UnsafeBinaryExpr{._field_Node=(*(_51627_m))}), &__jule_any_type131);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_21a52a71c:;
			{
				if (((!(_20889cb4a_IsInt((*(_5203_lp))._field_Kind))) || (!(_208a63937_EqualModels((*(*((*(_51627_m))))._field_Left.alloc)._field_Model, (*((*((*(_51627_m))))._field_Right))._field_Model))))) {
					goto _match_end_21a52a640;
				};
				jule::Ptr<_208799195_Const> _5528_c = static__208805e49_NewU64(0LLU);;
				(*(_5528_c))._field_Kind=(*(_5203_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_5528_c, &__jule_any_type15);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_21a52a640:;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a52aab3:;
			{
				goto _match_end_21a532e50;
			}
		}
		else {
			_case_begin_21a532eb6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_21a532e50:;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21a5341e8:;
			{
				jule::Bool _5694_ok;
				jule::U64 _5698_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _2170b2296_checkForBitShiftOpt(&((*((*(_51627_m))))._field_Left), &((*((*(_51627_m))))._field_Right));
					_5694_ok = __jule_assign_result.__jule_result_arg0;
					_5698_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5694_ok) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_208711827_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_208799195_Const> _5749_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15);;
					_208808963_SetU64(_5749_c.ptr(), _5698_x);
					_2170ae183_shift(_self_, (*(_51627_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_21a53425e:;
			{
				jule::Bool _5804_ok;
				jule::U64 _5808_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _2170b2296_checkForBitShiftOpt(&((*((*(_51627_m))))._field_Left), &((*((*(_51627_m))))._field_Right));
					_5804_ok = __jule_assign_result.__jule_result_arg0;
					_5808_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5804_ok) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_208711827_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_208799195_Const> _5859_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15);;
					_208808963_SetU64(_5859_c.ptr(), _5808_x);
					_2170ae183_shift(_self_, (*(_51627_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_21a5342c5:;
			{
				jule::Ptr<_208799195_Const> _5918_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15);;
				if ((_208808402_AsF64(_5918_c.ptr()) == 2LL)) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_208711827_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_2088086aa_SetI64(_5918_c, 1LL);
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_21a53433b:;
			{
				jule::F64 _6034_s = _208808402_AsF64((*((*((*(_51627_m))))._field_Right))._field_Model.unsafe_cast_ptr<_208799195_Const>().ptr());;
				if ((_6034_s == 0LL)) {
					(*((*(_self_))._field_model))=(*((*((*(_51627_m))))._field_Left))._field_Model;
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_21a533d41:;
			{
				_2170ae183_shift(_self_, (*(_51627_m)));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_21a53366a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_21a533add:;
	};
	jule::Any _6177_model = jule::Any(jule::new_ptr<_216da7da0_UnsafeBinaryExpr>(_216da7da0_UnsafeBinaryExpr{._field_Node=(*(_51627_m))}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6177_model))))));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _2170ae77c_binaryStrCommon(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr>* _62432_m) {
	_2170ac8e0_strConv(_self_, &((*((*(_62432_m))))._field_Left));
	_2170ac8e0_strConv(_self_, &((*((*(_62432_m))))._field_Right));
}



inline void _2170aea35_binary(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812098_BinaryExpr> _62922_m) {
	if (_2170bcacb_Str) {
		_2170ae77c_binaryStrCommon(_self_, &(_62922_m));
		{
			
			if (_2170acc31_strCond(_self_, &(_62922_m)) || _2170ad072_strConcat(_self_, &(_62922_m))) {
				_case_begin_21a542ed7:;
				{
					goto _julec_label_21a544e73;
				}
			}
			_match_end_21a542e60:;
		};
	};
	if ((_2170bdbed_Array && _2170ac637_arrayCond(_self_, _62922_m))) {
		goto _julec_label_21a544e73;
	};
	if (_2170bc889_Cond) {
		{
			
			if (_2170ac2e6_boolCond(_self_, &(_62922_m)) || _2170abea5_selfCmpCond(_self_, &(_62922_m))) {
				_case_begin_21a54400a:;
				{
					goto _julec_label_21a544e73;
				}
			}
			_match_end_21a543db7:;
		};
	};
	if (_2170ad869_tryNeutralElement(_self_, &(_62922_m))) {
		goto _julec_label_21a544e73;
	};
	if ((_2170bbba7_Math && _2170ae4c4_binaryMath(_self_, &(_62922_m)))) {
		goto _julec_label_21a544e73;
	};
	_julec_label_21a544e73:;
	if (((*((*(_62922_m))._field_Op))._field_Id == static_cast<jule::U64>(55LLU))) {
		_2170b62ab_data _6868_checkpoint = _2170b62ab_data{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)};;
		_2170b7367_loadCheckpoint(&_6868_checkpoint, _2170b6d28_getCheckpoint((*(_self_))._field_data.ptr()));
		{
			_20939d408_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_62922_m.alloc)._field_Left))._field_Model));
		};
		_2170b7367_loadCheckpoint((*(_self_))._field_data, _2170b6d28_getCheckpoint(&_6868_checkpoint));
		{
			_20939d408_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_62922_m.alloc)._field_Right))._field_Model));
		};
		_2170b7367_loadCheckpoint((*(_self_))._field_data, _2170b70ae_getMutCheckpoint(&_6868_checkpoint));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
	};
}



inline void _2170aecdd_unary(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812472_UnaryExpr> _70621_m) {
	if ((!(_2170bc4c1_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_70621_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21a5490a9:;
			{
				{
					auto &_match_expr{ (*((*(_70621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_21a54a0aa:;
						{
							jule::Ptr<_208812472_UnaryExpr> _7149_um = (*((*(_70621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_208812472_UnaryExpr>();;
							if (((*((*(_7149_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_7149_um.alloc)._field_Expr))._field_Model;
							};
							return;;
						}
					}
					_match_end_21a54a033:;
				};
				if (((_2170bbe60_Access && ((*((*(_self_))._field_data))._field_nils != nullptr)) && _216dabb62_isNilValidType((*((*(_70621_m))._field_Expr))._field_Type))) {
					jule::Uintptr _7245_var = _216dabea3_getNilVar((*(*(_70621_m))._field_Expr.alloc)._field_Model);;
					if (_216dab128_isSafe((*((*(_self_))._field_data))._field_nils, _7245_var)) {
						jule::Any _72610_model = jule::Any(jule::new_ptr<_216da9126_UnsafeDerefExpr>(_216da9126_UnsafeDerefExpr{._field_Base=_70621_m}), &__jule_any_type132);;
						(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_72610_model))))));
					} else {
						_216daa996_pushVar((*((*(_self_))._field_data))._field_nils, _7245_var, true);
					};
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_21a5493d9:;
			{
				{
					auto &_match_expr{ (*((*(_70621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_21a551b3e:;
						{
							jule::Ptr<_20894d7de_Var> _7369_v = (*((*(_70621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
							if ((*(_7369_v))._field_Reference) {
								jule::Any _73810_model = jule::Any(jule::new_ptr<_216da6ed1_RefExpr>(_216da6ed1_RefExpr{._field_Var=_7369_v}), &__jule_any_type133);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_73810_model))))));
							};
						}
					}
					_match_end_21a551ab7:;
				};
			}
		}
		_match_end_21a54932e:;
	};
}



inline void _2170b0096_structureLit(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208812d46_StructLitExpr> _74528_m) {
	{
		auto expr = &((*(_74528_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a559e88:;
		if (it != expr_end) {
			jule::Ptr<_2088129a0_StructArgExpr> _74615_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_2170ba414_isBoundaryRiskyType((*((*(_74615_arg))._field_Expr))._field_Type)) {
						_2170ba14a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_74615_arg, &__jule_any_type134));
					};
				};
				if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
					_216dab4d0_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_74615_arg))._field_Expr))._field_Model);
				};
				if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
					_2170b471b_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_74615_arg))._field_Expr))._field_Model);
				};
			}
			_iter_next_21a559e88:;
			++it;
			goto _iter_begin_21a559e88;
		}
		_iter_end_21a559e88:;
	};
}



inline void _2170b034e_casting(_2170aa998_exprOptimizer* _self_, jule::Ptr<_2088136c6_CastingExpr> _76123_m) {
	jule::Bool _7623_valid = _2170b4a29_isDynamicValidType((*(_76123_m))._field_ExprType);;
	jule::Uintptr _7633_var = _2170b5299_getDynamicVar((*((*_76123_m.alloc)._field_Expr))._field_Model);;
	if (((_7623_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _2170b4364_isFits((*((*(_self_))._field_data))._field_dynamic, _7633_var, (*_76123_m.alloc)._field_Type))) {
		jule::Any _7658_model = jule::Any(jule::new_ptr<_216da9654_UnsafeCastingExpr>(_216da9654_UnsafeCastingExpr{._field_Base=_76123_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7658_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_dynamic != nullptr) && _7623_valid)) {
		_2170b3b27_pushVar((*((*(_self_))._field_data))._field_dynamic, _7633_var, (*_76123_m.alloc)._field_Type);
	};
}



inline void _2170b06b2_args(_2170aa998_exprOptimizer* _self_, jule::Slice<jule::Ptr<_20882121c_ParamIns>> _77520_params, jule::Slice<jule::Any>* _77552_args) {
	{
		auto expr = _77552_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a56435a:;
		if (it != expr_end) {
			jule::I64 _7768_i = it - expr->begin();
			jule::Any _77615_arg = *it;
			{
				if ((_7768_i >= _77520_params.len())) {
					goto _iter_next_21a56435a;
				};
				jule::Ptr<_20882121c_ParamIns> _7808_p = _77520_params[_7768_i];;
				if (((*((*(_7808_p))._field_Decl))._field_Mutable && (*(*(_7808_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_2170ba414_isBoundaryRiskyType((*_7808_p.alloc)._field_Type)) {
							_2170ba14a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _77615_arg);
						};
					};
					if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
						_216dab4d0_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _77615_arg);
					};
					if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
						_2170b471b_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _77615_arg);
					};
				};
			}
			_iter_next_21a56435a:;
			++it;
			_7768_i++;
			goto _iter_begin_21a56435a;
		}
		_iter_end_21a56435a:;
	};
}



inline void _2170b0a25_scope(_2170aa998_exprOptimizer* _self_, jule::Ptr<_2088ca969_Scope>* _80022_s, jule::Bool _80039_child) {
	if ((_80039_child && ((*(_self_))._field_scopeOpt != nullptr))) {
		_2170a8567_optimizeChildHard((*(_self_))._field_scopeOpt, (*(_80022_s)));
		return;;
	};
	jule::Ptr<_2170a3188_scopeOptimizer> _8057_scopt = static__2170a3771_new((*(_80022_s)));;
	if (((*(_self_))._field_data != nullptr)) {
		(*(_8057_scopt))._field_data=jule::new_ptr<_2170b62ab_data>(_2170b62ab_data{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)});
		_2170b7367_loadCheckpoint((*(_8057_scopt))._field_data, _2170b6d28_getCheckpoint((*(_self_))._field_data));
	};
	_2170a8765_optimize(_8057_scopt);
}



inline void _2170b0ccd_optimizeStrBuilderCall(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814078_FnCallExpr>* _81639_m) {
	;
	{
		if (((*((*(_2093a4b90_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_216da6244_FnCallIgnoreExceptionalExpr>(_216da6244_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_2093a4b90_ProgramMeta))._field_StrBuilder))._field_WriteByte == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_216da6244_FnCallIgnoreExceptionalExpr>(_216da6244_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_2093a4b90_ProgramMeta))._field_StrBuilder))._field_WriteRune == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_216da6244_FnCallIgnoreExceptionalExpr>(_216da6244_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_2093a4b90_ProgramMeta))._field_StrBuilder))._field_WriteStr == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_216da6244_FnCallIgnoreExceptionalExpr>(_216da6244_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
}



inline void _2170b1086_lenCall(_2170aa998_exprOptimizer* _self_, jule::Ptr<_2088191b0_BuiltinLenCallExpr> _83123_m) {
	if ((!(_2170be1d7_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_83123_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21a56cad3:;
			{
				goto _match_end_21a56d265;
			}
		}
		else {
			_case_begin_21a56d2cb:;
			{
				return;;
			}
		}
		_match_end_21a56d265:;
	};
	jule::Ptr<_2088136c6_CastingExpr> _8427_c = (*((*(_83123_m))._field_Expr))._field_Model.cast_ptr<_2088136c6_CastingExpr>(&__jule_any_type94);;
	jule::Ptr<_2089d846c_Prim> _8437_prim = _2089d2774_Prim((*((*(_8427_c))._field_Expr))._field_Type.ptr());;
	if (((_8437_prim == nullptr) || (!(_2089db937_IsStr(_8437_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_2089dc96b_Slc> _8487_slc = _2089d37ca_Slc((*_8427_c.alloc)._field_Type.ptr());;
	if ((_8487_slc == nullptr)) {
		return;;
	};
	_8437_prim=_2089d2774_Prim((*(_8487_slc))._field_Elem.ptr());
	if ((_8437_prim == nullptr)) {
		return;;
	};
	{
		
		if (_2089d9d97_IsU8(_8437_prim.ptr())) {
			_case_begin_21a5794e6:;
			{
				(*_83123_m.alloc)._field_Expr=(*_8427_c.alloc)._field_Expr;
			}
		}
		else if (_2089d987a_IsI32(_8437_prim.ptr())) {
			_case_begin_21a57955c:;
			{
				jule::Ptr<_208822372_FnIns> _8658_func = (*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_208814078_FnCallExpr>(_208814078_FnCallExpr{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Func=_8658_func, ._field_IsCo=false, ._field_Expr=jule::Any(_8658_func, &__jule_any_type65), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_8427_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type30);
			}
		}
		_match_end_21a5796b1:;
	};
}



inline void _2170b133e_funcCall(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814078_FnCallExpr> _87424_m) {
	_2170b06b2_args(_self_, (*((*(_87424_m))._field_Func))._field_Params, &((*_87424_m.alloc)._field_Args));
	if (((*_87424_m.alloc)._field_Except != nullptr)) {
		;
		_2170b0a25_scope(_self_, &((*_87424_m.alloc)._field_Except), true);
	};
	{
		
		if ((_2170be429_StdStrings && ((*(_2093a4b90_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_21a57d8c4:;
			{
				_2170b0ccd_optimizeStrBuilderCall(_self_, &(_87424_m));
			}
		}
		_match_end_21a57d220:;
	};
}



inline void _2170b15e7_indexing(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814908_IndexingExpr> _88824_m) {
	if ((!(_2170bbe60_Access))) {
		return;;
	};
	jule::Bool _8933_array = (_2089d3544_Arr((*((*(_88824_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_8933_array && _20899b3db_IsConst((*_88824_m.alloc)._field_Index.ptr()))) {
		jule::Any _8968_model = jule::Any(jule::new_ptr<_216da819c_UnsafeIndexingExpr>(_216da819c_UnsafeIndexingExpr{._field_Node=_88824_m}), &__jule_any_type137);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8968_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _2170ba6cd_isBoundaryValidType((*(*(_88824_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _9024_var = _2170ba997_getBoundaryVar((*(*(_88824_m))._field_Expr.alloc)._field_Model);;
		if (_2170b9248_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _9024_var, (*((*_88824_m.alloc)._field_Index))._field_Model)) {
			jule::Any _9049_model = jule::Any(jule::new_ptr<_216da819c_UnsafeIndexingExpr>(_216da819c_UnsafeIndexingExpr{._field_Node=_88824_m}), &__jule_any_type137);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9049_model))))));
			return;;
		};
		_2170b8a0b_pushVar((*((*(_self_))._field_data))._field_boundary, _9024_var, (*((*_88824_m.alloc)._field_Index))._field_Model);
	};
}



inline void _2170b18a0_anonFunc(_2170aa998_exprOptimizer* _self_, jule::Ptr<_208814dae_AnonFnExpr> _91224_m) {
	;
	_2170b0a25_scope(_self_, &((*((*(_91224_m))._field_Func))._field_Scope), false);
}



inline void _2170b1b58_inspectStep(_2170aa998_exprOptimizer* _self_, jule::Any* _92128_m) {
	(*(_self_))._field_model=((jule::Ptr<jule::Any>)(_92128_m));
	{
		auto &_match_expr{ (*(_92128_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a589726:;
			{
				_2170aea35_binary(_self_, (*(_92128_m)).cast_ptr<_208812098_BinaryExpr>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a588e95:;
			{
				_2170aecdd_unary(_self_, (*(_92128_m)).cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_21a58978c:;
			{
				_2170b0096_structureLit(_self_, (*(_92128_m)).cast_ptr<_208812d46_StructLitExpr>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21a589803:;
			{
				_2170b034e_casting(_self_, (*(_92128_m)).cast_ptr<_2088136c6_CastingExpr>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a589869:;
			{
				_2170b133e_funcCall(_self_, (*(_92128_m)).cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_21a5898d0:;
			{
				_2170b1086_lenCall(_self_, (*(_92128_m)).cast_ptr<_2088191b0_BuiltinLenCallExpr>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21a589946:;
			{
				_2170b15e7_indexing(_self_, (*(_92128_m)).cast_ptr<_208814908_IndexingExpr>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_21a5899ac:;
			{
				_2170b18a0_anonFunc(_self_, (*(_92128_m)).cast_ptr<_208814dae_AnonFnExpr>(&__jule_any_type101));
			}
		}
		_match_end_21a589616:;
	};
}



inline void _2170b1d56_do(_2170aa998_exprOptimizer* _self_) {
	_20939da24_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_21a58d829, jule::Ptr<__jule_anon_21a58d829_ctx>::make(__jule_anon_21a58d829_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a58d829_ctx_handler));
}








inline jule::Bool _2170b3341_dynamicVar_eq(_2170b3341_dynamicVar *_self_, _2170b3341_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _2170b3b27_pushVar(jule::Ptr<_2170b3682_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_2089ce661_Type> _2442_kind) {
	if (((!(_2170bd945_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_2170b4e58_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5991d6:;
		if (it != expr_end) {
			jule::I64 _307_i = it - expr->begin();
			{
				_2170b3341_dynamicVar *_319_v = &((*(_self_))._field_vars[_307_i]);;
				if (((*(_319_v))._field_var == _2424_var)) {
					(*(_319_v))._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_21a5991d6:;
			++it;
			_307_i++;
			goto _iter_begin_21a5991d6;
		}
		_iter_end_21a5991d6:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a59a4b2:;
		if (it != expr_end) {
			jule::I64 _387_i = it - expr->begin();
			{
				_2170b3341_dynamicVar *_399_v = &((*_self_.alloc)._field_vars[_387_i]);;
				if (((*(_399_v))._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_2089ce661_Type> _1___jule_assign_arg = _2442_kind;
						(*(_399_v))._field_var = ___jule_assign_arg;
						(*(_399_v))._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_21a59a4b2:;
			++it;
			_387_i++;
			goto _iter_begin_21a59a4b2;
		}
		_iter_end_21a59a4b2:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_2170b3341_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2170b3341_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _2170b3e68_removeVar(_2170b3682_dynamic* _self_, jule::Uintptr _4925_var) {
	if ((_4925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a59ce76:;
			if (it != expr_end) {
				jule::I64 _518_i = it - expr->begin();
				{
					_2170b3341_dynamicVar *_5210_v = &((*(_self_))._field_vars[_518_i]);;
					if (((*(_5210_v))._field_var == _4925_var)) {
						(*(_5210_v))._field_var=0LLU;
						(*(_5210_v))._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_21a59ce76:;
				++it;
				_518_i++;
				goto _iter_begin_21a59ce76;
			}
			_iter_end_21a59ce76:;
		};
	};
	return false;;
}



inline jule::Bool _2170b4364_isFits(_2170b3682_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_2089ce661_Type> _6436_kind) {
	if ((_6422_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a5a4d4b:;
			if (it != expr_end) {
				_2170b3341_dynamicVar _6611_v = *it;
				{
					if ((_6611_v._field_var == _6422_var)) {
						return ((_6611_v._field_kind != nullptr) && _2089ced9d_Equal(_6611_v._field_kind, _6436_kind));;
					};
				}
				_iter_next_21a5a4d4b:;
				++it;
				goto _iter_begin_21a5a4d4b;
			}
			_iter_end_21a5a4d4b:;
		};
	};
	return false;;
}








inline jule::Bool _2170b5cb1_dataCheckpoint_eq(_2170b5cb1_dataCheckpoint *_self_, _2170b5cb1_dataCheckpoint _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}






inline jule::Bool _2170b62ab_data_eq(_2170b62ab_data *_self_, _2170b62ab_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline void _2170b6a92_removeDeads(_2170b62ab_data* _self_, jule::Ptr<_2170b62ab_data>* _4228_other) {
	if ((((*(_self_))._field_boundary != nullptr) && ((*((*(_4228_other))))._field_boundary != nullptr))) {
		_21a5a6688__removeDeads(&((*(_self_))._field_boundary), &((*((*(_4228_other))))._field_boundary), 0LLU);
	};
	if ((((*(_self_))._field_nils != nullptr) && ((*((*(_4228_other))))._field_nils != nullptr))) {
		_21a5a858b__removeDeads(&((*(_self_))._field_nils), &((*((*(_4228_other))))._field_nils), 0LLU);
	};
	if ((((*(_self_))._field_dynamic != nullptr) && ((*((*(_4228_other))))._field_dynamic != nullptr))) {
		_21a5aba23__removeDeads(&((*(_self_))._field_dynamic), &((*((*(_4228_other))))._field_dynamic), 0LLU);
	};
}



inline _2170b5cb1_dataCheckpoint _2170b6d28_getCheckpoint(_2170b62ab_data* _self_) {
	_2170b5cb1_dataCheckpoint _577_c = _2170b5cb1_dataCheckpoint{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)};;
	if (((*(_self_))._field_boundary != nullptr)) {
		_577_c._field_boundary=jule::new_ptr<_2170b8566_boundary>(_2170b8566_boundary{._field_vars=jule::Slice<_2170b8225_boundaryVar>(nullptr)});
		(*_577_c._field_boundary.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_2170b8225_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _2170b8225_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_boundary.alloc)._field_vars);
		{
			auto expr = &((*_577_c._field_boundary.alloc)._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a5b2991:;
			if (it != expr_end) {
				jule::I64 _618_i = it - expr->begin();
				{
					(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize);
				}
				_iter_next_21a5b2991:;
				++it;
				_618_i++;
				goto _iter_begin_21a5b2991;
			}
			_iter_end_21a5b2991:;
		};
	};
	if (((*(_self_))._field_nils != nullptr)) {
		_577_c._field_nils=jule::new_ptr<_216daa501_nils>(_216daa501_nils{._field_vars=jule::Slice<_216daa1b0_nilVar>(nullptr)});
		(*_577_c._field_nils.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_216daa1b0_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _216daa1b0_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*(*(_self_))._field_nils.alloc)._field_vars);
	};
	if (((*(_self_))._field_dynamic != nullptr)) {
		_577_c._field_dynamic=jule::new_ptr<_2170b3682_dynamic>(_2170b3682_dynamic{._field_vars=jule::Slice<_2170b3341_dynamicVar>(nullptr)});
		(*_577_c._field_dynamic.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_2170b3341_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _2170b3341_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_2089ce661_Type>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_dynamic.alloc)._field_vars);
	};
	return _577_c;;
}



inline _2170b5cb1_dataCheckpoint _2170b70ae_getMutCheckpoint(_2170b62ab_data* _self_) {
	return _2170b5cb1_dataCheckpoint{._field_boundary=(*(_self_))._field_boundary, ._field_nils=(*(_self_))._field_nils, ._field_dynamic=(*(_self_))._field_dynamic};;
}



inline void _2170b7367_loadCheckpoint(_2170b62ab_data* _self_, _2170b5cb1_dataCheckpoint _8534_c) {
	(*(_self_))._field_boundary=_8534_c._field_boundary;
	(*(_self_))._field_nils=_8534_c._field_nils;
	(*(_self_))._field_dynamic=_8534_c._field_dynamic;
}











inline void _2170b8a0b_pushVar(_2170b8566_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize) {
	if (((!(_2170bbe60_Access)) || (_2523_var == 0LLU))) {
		return;;
	};
	if ((!(_2170b95cd_isValidBoundaryInfo(_2541_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5c7d3b:;
		if (it != expr_end) {
			_2170b8225_boundaryVar _3315_v = *it;
			{
				if ((_3315_v._field_var == _2523_var)) {
					{
						auto expr = &(_3315_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21a5c8b83:;
						if (it != expr_end) {
							jule::I64 _359_i = it - expr->begin();
							jule::Any _3512_max = *it;
							{
								if (_2170b9d1a_fitsSize(_2541_maxSize, _3512_max)) {
									_3315_v._field_maxSize[_359_i]=_2541_maxSize;
									return;;
								};
							}
							_iter_next_21a5c8b83:;
							++it;
							_359_i++;
							goto _iter_begin_21a5c8b83;
						}
						_iter_end_21a5c8b83:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3315_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_21a5c7d3b:;
			++it;
			goto _iter_begin_21a5c7d3b;
		}
		_iter_end_21a5c7d3b:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5c9425:;
		if (it != expr_end) {
			_2170b8225_boundaryVar _4715_v = *it;
			{
				if ((_4715_v._field_var == 0LLU)) {
					_4715_v._field_var=_2523_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4715_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_21a5c9425:;
			++it;
			goto _iter_begin_21a5c9425;
		}
		_iter_end_21a5c9425:;
	};
	{ jule::Slice<_2170b8225_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_2170b8225_boundaryVar{._field_var=_2523_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2541_maxSize; __jule_collection; })}); };
}



inline jule::Bool _2170b8d4c_removeVar(_2170b8566_boundary* _self_, jule::Uintptr _5825_var) {
	if ((_5825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a5cb911:;
			if (it != expr_end) {
				_2170b8225_boundaryVar _6016_v = *it;
				{
					if ((_6016_v._field_var == _5825_var)) {
						_6016_v._field_var=0LLU;
						(_6016_v._field_maxSize).mut_slice(0LL, 0LL);;
						return true;;
					};
				}
				_iter_next_21a5cb911:;
				++it;
				goto _iter_begin_21a5cb911;
			}
			_iter_end_21a5cb911:;
		};
	};
	return false;;
}



inline jule::Bool _2170b9248_fitsMaxSize(_2170b8566_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr) {
	if ((_7227_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a5cd4a1:;
			if (it != expr_end) {
				_2170b8225_boundaryVar _7411_v = *it;
				{
					if ((_7411_v._field_var == _7227_var)) {
						return (_2170b9996_fitsMaxSize(_7411_v._field_maxSize, _7241_expr) != -1LL);;
					};
				}
				_iter_next_21a5cd4a1:;
				++it;
				goto _iter_begin_21a5cd4a1;
			}
			_iter_end_21a5cd4a1:;
		};
	};
	return false;;
}








inline jule::Bool _2171d2b47_Optimizer_eq(_2171d2b47_Optimizer *_self_, _2171d2b47_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_2171d2b47_Optimizer> static__2171d310e_New(jule::Ptr<_20939938d_IR>* _2121_ir) {
	return jule::new_ptr<_2171d2b47_Optimizer>(_2171d2b47_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _2171d33b7_optimizeExpr(_2171d2b47_Optimizer* _self_, jule::Any* _2733_model) {
	static__2170aaee8_optimize(_2733_model);
}



inline void _2171d3670_optimizeGlobal(_2171d2b47_Optimizer* _self_, jule::Ptr<_20894d7de_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_2171d33b7_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _2171d3928_optimizeFunction(_2171d2b47_Optimizer* _self_, jule::Ptr<_20881e2b4_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5d8302:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_2170a3188_scopeOptimizer> _428_so = static__2170a3771_new((*(_4115_ins))._field_Scope);;
				_2170a8765_optimize(_428_so);
			}
			_iter_next_21a5d8302:;
			++it;
			goto _iter_begin_21a5d8302;
		}
		_iter_end_21a5d8302:;
	};
}



inline void _2171d3bd1_optimizeStruct(_2171d2b47_Optimizer* _self_, jule::Ptr<_208746230_Struct> _4734_s) {
	if ((*(_4734_s))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4734_s))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5d99c9:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5da469:;
					if (it != expr_end) {
						jule::Ptr<_208748496_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_2171d33b7_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_21a5da469:;
						++it;
						goto _iter_begin_21a5da469;
					}
					_iter_end_21a5da469:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5da8dc:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _5716_m = *it;
						{
							_2171d3928_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_21a5da8dc:;
						++it;
						goto _iter_begin_21a5da8dc;
					}
					_iter_end_21a5da8dc:;
				};
			}
			_iter_next_21a5d99c9:;
			++it;
			goto _iter_begin_21a5d99c9;
		}
		_iter_end_21a5d99c9:;
	};
}



inline void _2171d3e89_optimizeGlobals(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5d9e4c:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5dca76:;
					if (it != expr_end) {
						jule::Ptr<_20894d7de_Var> _6516_v = *it;
						{
							_2171d3670_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_21a5dca76:;
						++it;
						goto _iter_begin_21a5dca76;
					}
					_iter_end_21a5dca76:;
				};
			}
			_iter_next_21a5d9e4c:;
			++it;
			goto _iter_begin_21a5d9e4c;
		}
		_iter_end_21a5d9e4c:;
	};
}



inline void _2171d4242_optimizeFunctions(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5dd04e:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5dde73:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _7316_func = *it;
						{
							_2171d3928_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_21a5dde73:;
						++it;
						goto _iter_begin_21a5dde73;
					}
					_iter_end_21a5dde73:;
				};
			}
			_iter_next_21a5dd04e:;
			++it;
			goto _iter_begin_21a5dd04e;
		}
		_iter_end_21a5dd04e:;
	};
}



inline void _2171d44ea_optimizeStructs(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5de44b:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5e0370:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> _8116_s = *it;
						{
							_2171d3bd1_optimizeStruct(_self_, _8116_s);
						}
						_iter_next_21a5e0370:;
						++it;
						goto _iter_begin_21a5e0370;
					}
					_iter_end_21a5e0370:;
				};
				{
					auto expr = &((*_8015_f.alloc)._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5e0815:;
					if (it != expr_end) {
						jule::Ptr<_2089cd94b_TypeAlias> _8416_ta = *it;
						{
							if (((*(_8416_ta))._field_Strict && (!((*_8416_ta.alloc)._field_Binded)))) {
								_2171d3bd1_optimizeStruct(_self_, (*((*((*((*_8416_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)))._field_Decl);
							};
						}
						_iter_next_21a5e0815:;
						++it;
						goto _iter_begin_21a5e0815;
					}
					_iter_end_21a5e0815:;
				};
			}
			_iter_next_21a5de44b:;
			++it;
			goto _iter_begin_21a5de44b;
		}
		_iter_end_21a5de44b:;
	};
}



inline void _2171d47a3_optimizePackage(_2171d2b47_Optimizer* _self_, jule::Ptr<_2089107b2_Package>* _9236_p) {
	_2171d3e89_optimizeGlobals(_self_, _9236_p);
	_2171d4242_optimizeFunctions(_self_, _9236_p);
	_2171d44ea_optimizeStructs(_self_, _9236_p);
}



inline void _2171d49a1_Optimize(_2171d2b47_Optimizer* _self_) {
	_2171d4c15_detectEnabled();
	if (_2170bb602_Deadcode) {
		_2171cb547_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_2171d29b0_scopeEnabled || _2171d27a1_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a5e3c8b:;
			if (it != expr_end) {
				jule::Ptr<_20890d040_ImportInfo> _10816_u = *it;
				{
					if ((!((*(_10816_u))._field_Binded))) {
						_2171d47a3_optimizePackage(_self_, &((*_10816_u.alloc)._field_Package));
					};
				}
				_iter_next_21a5e3c8b:;
				++it;
				goto _iter_begin_21a5e3c8b;
			}
			_iter_end_21a5e3c8b:;
		};
		_2171d47a3_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_2170bb602_Deadcode) {
		_2171d1360_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _2172a3cd4_AbsTime_eq(_2172a3cd4_AbsTime *_self_, _2172a3cd4_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _2172a44aa_Time_eq(_2172a44aa_Time *_self_, _2172a44aa_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _2172a44aa_Time static__2172a4895_Unix(jule::U64 _9117_sec) {
	return _2172a44aa_Time{._field_sec=_9117_sec};;
}



inline _2172a44aa_Time static__2172a4aa4_Now(void) {
	return static__2172a4895_Unix(_2172a659a_unix());;
}



inline _2172a3cd4_AbsTime _2172a628c_Abs(_2172a44aa_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (static_cast<jule::U64>(_2172a3245_mdays[static_cast<jule::I64>(_1697_months)]) <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=static_cast<jule::U64>(_2172a3245_mdays[static_cast<jule::I64>(_1697_months)]);
		}
	_iter_next_21a61ac2a:;
	}
	_iter_end_21a61ac2a:;;
	_2172a3cd4_AbsTime _1747_t = _2172a3cd4_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LL + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}




















inline jule::Bool _2171d6b29_scopeCoder_eq(_2171d6b29_scopeCoder *_self_, _2171d6b29_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_2171d6b29_scopeCoder> static__2171d7311_new(jule::Ptr<_2172b1a06_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_2171d6b29_scopeCoder>(_2171d6b29_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _21a74d841_iterHead(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_2170bb305_Copy && _2171dea66_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_21a751a53:;
				{
					jule::Ptr<_20894d7de_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
					if ((*(_535_v))._field_Reference) {
						_2172015e4_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_21a7521c4;
					};
					goto _case_begin_21a75223a;
				}
			}
			else {
				_case_begin_21a75223a:;
				{
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_2172015e4_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_21a7521c4:;
		};
	} else {
		_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, _4452_begin);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
}



inline void _2171d79d7_rangeIndexIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter>* _9336_it) {
	_21e64c5b5_Builder _947_sb = static__21e64ce12_New(64LL);;
	static__21720a972_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _21e64de24_Str(&_947_sb);;
	_21e64e122_Clear(&_947_sb);
	static__21720b049_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _21e64de24_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_21a74d841_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_2172b915c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_21a75e19d, jule::Ptr<__jule_anon_21a75e19d_ctx>::make(__jule_anon_21a75e19d_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_21a75e19d_ctx_handler));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_2170bb305_Copy && _2171dee2e_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_2172b915c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_21a762ba7, jule::Ptr<__jule_anon_21a762ba7_ctx>::make(__jule_anon_21a762ba7_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_21a762ba7_ctx_handler));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	_2171ddd0c_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, _993_next);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__21720a686_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2172b2221_write((*(_self_))._field_oc, _963_begin);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720ac5d_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171d7c90_rangeHashmapIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter>* _16038_it) {
	_21e64c5b5_Builder _1617_sb = static__21e64ce12_New(64LL);;
	static__21720a972_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _21e64de24_Str(&_1617_sb);;
	_21e64e122_Clear(&_1617_sb);
	static__21720b049_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _21e64de24_Str(&_1617_sb);;
	jule::Ptr<_2089de110_Map> _1687__map = _2089d459a_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_2087490bd_StructIns> _1697_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_208822372_FnIns> _1717_f = (*(_20874a135_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_2087490bd_StructIns> _1737_iterator = _2093a2e9b_FindStructGenericInstance(&((*(*(_2093a4b90_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_208822372_FnIns> _1747_nextCall = (*(_20874a135_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172c4ae6_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, _1633_begin);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172c5d06_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_2172b915c_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_21a782138, jule::Ptr<__jule_anon_21a782138_ctx>::make(__jule_anon_21a782138_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a782138_ctx_handler));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_2172b915c_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_21a784624, jule::Ptr<__jule_anon_21a784624_ctx>::make(__jule_anon_21a784624_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a784624_ctx_handler));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	_2171ddd0c_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, _1663_next);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2172b2221_write((*(_self_))._field_oc, _1633_begin);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720ac5d_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171d8048_strRuneIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da8d29_StrRuneIter> _24132_it) {
	_21e64c5b5_Builder _2427_sb = static__21e64ce12_New(64LL);;
	static__21720a972_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _21e64de24_Str(&_2427_sb);;
	_21e64e122_Clear(&_2427_sb);
	static__21720b049_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _21e64de24_Str(&_2427_sb);;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_2170bb305_Copy && _2171dea66_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_21a791246:;
				{
					jule::Ptr<_20894d7de_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_2172015e4_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_21a7918b7;
					};
					goto _case_begin_21a79192d;
				}
			}
			else {
				_case_begin_21a79192d:;
				{
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_2172015e4_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_21a7918b7:;
		};
	} else {
		_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_2172b915c_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_21a79d231, jule::Ptr<__jule_anon_21a79d231_ctx>::make(__jule_anon_21a79d231_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a79d231_ctx_handler));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_2172b915c_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	_2172b2221_write((*(_self_))._field_oc, _2443_begin);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__21720a686_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2171ddd0c_scope(_self_, (*((*_24132_it.alloc)._field_Base))._field_Scope);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, _2473_next);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__21720a686_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2172b2221_write((*(_self_))._field_oc, _2443_begin);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171d8301_ifCase(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cad43_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_2171ddd0c_scope(_self_, (*(_35327_i))._field_Scope);
}



inline void _2171d85a9_conditional(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cb55d_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a7b34bb:;
		if (it != expr_end) {
			jule::Ptr<_2088cad43_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_21a7b34bb;
				};
				if (_3637_writed) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_2171d8301_ifCase(_self_, _36415_elif);
			}
			_iter_next_21a7b34bb:;
			++it;
			goto _iter_begin_21a7b34bb;
		}
		_iter_end_21a7b34bb:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_2171ddd0c_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _2171d8862_infIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cb85a_InfIter> _38228_it) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2171ddd0c_scope(_self_, (*(_38228_it))._field_Scope);
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720b049_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720ac5d_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _2171d8b1a_whileIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cbd11_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_39930_it))._field_Next != nullptr)) {
			_2171dd79b_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2171ddd0c_scope(_self_, (*(_39930_it))._field_Scope);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720b049_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720ac5d_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _2171d8dc3_rangeIter(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cc7e5_RangeIter> _43830_it) {
	{
		
		if ((_2089d37ca_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_21a7c8d72:;
			{
				_2171d79d7_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_2089d3544_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_21a7c8a20:;
			{
				_2171d79d7_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_2089d459a_Map((*((*(_43830_it))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_21a7c8a86:;
			{
				_2171d7c90_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_21a7c89a9:;
			{
				_2171d79d7_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_21a7c8899:;
	};
}



inline void _2171d917b_cont(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ccae2_ContSt> _45121_c) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__21720b049_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _2171d9434_label(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cd472_Label> _45622_l) {
	static__21720b335_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _2171d96dc_gotoSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cdad2_GotoSt> _46123_gt) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__21720b335_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _2171d9995_postfix(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088cdeab_Postfix> _46628_p) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_2172b2221_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _2171d9c4d_assignLeft(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21a7d2bd3:;
			{
				jule::Ptr<_208814908_IndexingExpr> _4768_iem = (*(_47332_model)).cast_ptr<_208814908_IndexingExpr>(&__jule_any_type43);;
				jule::Ptr<_2089de110_Map> _4774__map = _2089d459a_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_21a7d2b6c;
				};
				jule::Ptr<_2087490bd_StructIns> _4838_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*_4774__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_208822372_FnIns> _4858_f = (*(_20874a135_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_220c73ee8_Production))) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_2172b48a5_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_21a7d2b6c:;
	};
	_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _2171da006_shl(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _50424_a) {
	_2171d9c4d_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_2171e56c6_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _2171da2ae_shr(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _51024_a) {
	_2171d9c4d_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_2171e5a39_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _2171da567_divByZeroAssign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _51636_a) {
	_2171d9c4d_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_2171e48b2_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _2171da820_assign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce462_Assign> _52227_a) {
	{
		auto &_match_expr{ (*((*(_52227_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_21a7e39b3:;
			{
				if (_220c73ca6_Safety) {
					_2171da567_divByZeroAssign(_self_, _52227_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_21a7e3a3a:;
			{
				_2171da006_shl(_self_, _52227_a);
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_21a7e3aa1:;
			{
				_2171da2ae_shr(_self_, _52227_a);
				return;;
			}
		}
		_match_end_21a7e38e7:;
	};
	jule::U64 _5417_op = (*((*(_52227_a))._field_Op))._field_Id;;
	jule::Str _5427_kind = (*(*(_52227_a))._field_Op.alloc)._field_Kind;;
	if (((*(*(_52227_a))._field_Op.alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
		_5417_op=static_cast<jule::U64>(71LLU);
		_5427_kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
	};
	_2171d9c4d_assignLeft(_self_, &((*((*_52227_a.alloc)._field_Left))._field_Model));
	_2172b2221_write((*_self_.alloc)._field_oc, _5427_kind);
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_52227_a.alloc)._field_Right))._field_Model);
}



inline void _2171daac8_mapLookupAssign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _55337_a) {
	jule::Ptr<_208814908_IndexingExpr> _5557_iem = (*((*(_55337_a))))._field_Right.cast_ptr<_208814908_IndexingExpr>(&__jule_any_type43);;
	jule::Ptr<_2089de110_Map> _5567__map = _2089d459a_Map((*((*(_5557_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_2087490bd_StructIns> _5587_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5567__map))._field_Key; (*it++) = (*_5567__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_208822372_FnIns> _5607_f = (*(_20874a135_FindMethod(_5587_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5607_f));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171d9c4d_assignLeft(_self_, &((*(*(_5557_iem))._field_Expr.alloc)._field_Model));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5557_iem.alloc)._field_Index))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_55337_a))))._field_Left[0LL] != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55337_a))))._field_Left[0LL]))._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_55337_a))))._field_Left[1LL] != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55337_a))))._field_Left[1LL]))._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171dad81_multiAssignTup(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _58536_a) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	jule::Ptr<_208817686_TupleExpr> _5957_tup = (*((*(_58536_a))))._field_Right.cast_ptr<_208817686_TupleExpr>(&__jule_any_type83);;
	{
		auto expr = &((*(_5957_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a805ed1:;
		if (it != expr_end) {
			jule::I64 _5978_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _59715_r = *it;
			{
				_2172b2ac3_indent((*(_self_))._field_oc);
				jule::Ptr<_20899a9a1_Data> _5998_l = (*((*(_58536_a))))._field_Left[_5978_i];;
				if ((_5998_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5998_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_21a808e6d:;
							{
								jule::Ptr<_20894d7de_Var> _60310_v = (*(_5998_l))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
								if ((!((*(_60310_v))._field_Reference))) {
									goto _match_end_21a808e07;
								};
								{
									auto expr = &((*((*(_58536_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_21a809db4:;
									if (it != expr_end) {
										jule::Ptr<_20894d7de_Var> _61013_dv = *it;
										{
											if ((_60310_v == _61013_dv)) {
												goto _julec_label_21a809d09;
											};
										}
										_iter_next_21a809db4:;
										++it;
										goto _iter_begin_21a809db4;
									}
									_iter_end_21a809db4:;
								};
								goto _match_end_21a808e07;
								_julec_label_21a809d09:;
								static__21720a686_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _60310_v);
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_59715_r))._field_Model);
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_58536_a))))._field_Left[_5978_i]=nullptr;
								goto _iter_next_21a805ed1;
							}
						}
						_match_end_21a808e07:;
					};
					_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5998_l.alloc)._field_Type);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__2172088d7_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _2171d63ba_assignArgName, static_cast<jule::Uintptr>(_5978_i));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_59715_r))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_21a805ed1:;
			++it;
			_5978_i++;
			goto _iter_begin_21a805ed1;
		}
		_iter_end_21a805ed1:;
	};
	{
		auto expr = &((*((*(_58536_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a810bab:;
		if (it != expr_end) {
			jule::I64 _6398_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _63915_l = *it;
			{
				if ((_63915_l == nullptr)) {
					goto _iter_next_21a810bab;
				};
				_2172b2ac3_indent((*(_self_))._field_oc);
				_2171d9c4d_assignLeft(_self_, &((*(_63915_l))._field_Model));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__2172088d7_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _2171d63ba_assignArgName, static_cast<jule::Uintptr>(_6398_i));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_21a810bab:;
			++it;
			_6398_i++;
			goto _iter_begin_21a810bab;
		}
		_iter_end_21a810bab:;
	};
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _2171db139_multiAssignFn(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign>* _65535_a) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	jule::Ptr<_208814078_FnCallExpr> _6607_f = (*((*(_65535_a))))._field_Right.cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30);;
	_2172cb7e0_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6607_f))._field_Func))._field_Result));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_65535_a))))._field_Right);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_2089dd560_Tuple> _6667_tup = _2089d4831_Tup((*(*(_6607_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_65535_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a818c2a:;
		if (it != expr_end) {
			jule::I64 _6678_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _66715_l = *it;
			{
				if ((_66715_l == nullptr)) {
					goto _iter_next_21a818c2a;
				};
				;
				_2172b2ac3_indent((*(_self_))._field_oc);
				_2171d9c4d_assignLeft(_self_, &((*(_66715_l))._field_Model));
				{
					
					if (_2089ced9d_Equal((*(_6667_tup))._field_Types[_6678_i], (*_66715_l.alloc)._field_Type)) {
						_case_begin_21a821947:;
						{
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_6678_i));
						}
					}
					else if (_20939eb35_IsAny(&((*_66715_l.alloc)._field_Type))) {
						_case_begin_21a81ba85:;
						{
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_6678_i));
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_2172b3c28_pushAnyType((*(_self_))._field_oc, (*(_6667_tup))._field_Types[_6678_i])));
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_21a81ab94:;
						{
							if ((_2089d4314_Trait((*(_6667_tup))._field_Types[_6678_i].ptr()) != nullptr)) {
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_2088299c8_Trait> _68810_t1 = _2089d4314_Trait((*_66715_l.alloc)._field_Type.ptr());;
								jule::Ptr<_2088299c8_Trait> _68910_t2 = _2089d4314_Trait((*(_6667_tup))._field_Types[_6678_i].ptr());;
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_6678_i));
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_2172b45ec_pushAndWriteMaskMapper((*(_self_))._field_oc, _68810_t1, _68910_t2);
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_21a81b9db;
							};
							jule::Ptr<_2088299c8_Trait> _6975_t = _2089d4314_Trait((*_66715_l.alloc)._field_Type.ptr());;
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_6678_i));
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__2172096eb_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6975_t);
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_2093a27a3_FindTraitTypeOffset(_6975_t, (*(_6667_tup))._field_Types[_6678_i])));
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_21a81b9db:;
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_21a818c2a:;
			++it;
			_6678_i++;
			goto _iter_begin_21a818c2a;
		}
		_iter_end_21a818c2a:;
	};
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _2171db3e2_multiAssign(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ce9e5_MultiAssign> _71432_a) {
	{
		auto expr = &((*(_71432_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a82a38a:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _71715_d = *it;
			{
				_2172b915c_varInitExpr((*(_self_))._field_oc, &(_71715_d), nullptr);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_2172b2ac3_indent((*(_self_))._field_oc);
			}
			_iter_next_21a82a38a:;
			++it;
			goto _iter_begin_21a82a38a;
		}
		_iter_end_21a82a38a:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21a82ab1b:;
			{
				_2171daac8_mapLookupAssign(_self_, &(_71432_a));
				return;;
			}
		}
		_match_end_21a82aaa5:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_21a82cb40:;
			{
				_2171dad81_multiAssignTup(_self_, &(_71432_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a82c58a:;
			{
				_2171db139_multiAssignFn(_self_, &(_71432_a));
			}
		}
		else {
			_case_begin_21a82c513:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:736:4"));;
			}
		}
		_match_end_21a82c25a:;
	};
}



inline jule::Fn<void> _2171db733_matchExpr(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d0463_Match> _74030_m) {
	if ((!(_20899b3db_IsConst((*(_74030_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_21a82ea21, jule::Ptr<__jule_anon_21a82ea21_ctx>::make(__jule_anon_21a82ea21_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21a82ea21_ctx_handler);;
	};
	if (((!(_208809c2d_IsBool((*((*(_74030_m))._field_Expr))._field_Constant.ptr()))) || (!(_208807632_ReadBool((*((*(_74030_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::__new_closure<void>((void*)__jule_anon_21a830d52, jule::Ptr<__jule_anon_21a830d52_ctx>::make(__jule_anon_21a830d52_ctx{._self_=_self_,._74030_m=_74030_m}).as<jule::Uintptr>(), __jule_anon_21a830d52_ctx_handler);;
	};
	return nullptr;;
}



inline void _2171dba96_case(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d0463_Match> _75025_m, jule::Ptr<_2088d0c5a_Case> _75046_c) {
	if ((((*(_75046_c))._field_Exprs.len() != 0LL) && (!((*(_75025_m))._field_Comptime)))) {
		if ((((*_75025_m.alloc)._field_Cases.len() > 0LL) && ((*(_75025_m))._field_Cases[0LL] == _75046_c))) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_75046_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a834e55:;
			if (it != expr_end) {
				jule::I64 _7579_i = it - expr->begin();
				jule::Ptr<_20899a9a1_Data> _75716_expr = *it;
				{
					{
						
						if ((!((*_75025_m.alloc)._field_TypeMatch))) {
							_case_begin_21a83cb0b:;
							{
								jule::Fn<void> _7606_caseExpr = _2171db733_matchExpr(_self_, _75025_m);;
								if (_20899b72c_GoodOperand((*_75025_m.alloc)._field_Expr.ptr(), &(_75716_expr))) {
									if ((_7606_caseExpr != nullptr)) {
										_7606_caseExpr();
										_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_2171e6e25_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
								} else {
									_2171e6e25_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
									if ((_7606_caseExpr != nullptr)) {
										_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7606_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_21a835be2:;
							{
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_2089ce661_Type> _77610_tk = (*(_75716_expr))._field_Model.cast_ptr<_2089ce661_Type>(&__jule_any_type85);;
								if ((_2089d4314_Trait((*((*_75025_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_2171e363b_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_2089d2a0a_Sptr((*(_75716_expr))._field_Type) != nullptr));
									_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__2172096eb_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _2089d4314_Trait((*((*(_75025_m))._field_Expr))._field_Type));
									_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_2093a27a3_FindTraitTypeOffset(_2089d4314_Trait((*((*(_75025_m))._field_Expr))._field_Type), (*_75716_expr.alloc)._field_Type)));
									_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _7867_j = _2172b3c28_pushAnyType((*(_self_))._field_oc, _77610_tk);;
									_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_7867_j));
								};
							}
						}
						_match_end_21a835ad2:;
					};
					if ((((*_75046_c.alloc)._field_Exprs.len() - _7579_i) > 1LL)) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_21a834e55:;
				++it;
				_7579_i++;
				goto _iter_begin_21a834e55;
			}
			_iter_end_21a834e55:;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_75025_m))._field_Default == _75046_c) && ((*_75025_m.alloc)._field_Cases.len() != 0LL))) {
		_2172b2ac3_indent((*(_self_))._field_oc);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720b90c_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_75046_c));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_75046_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_2172b2ac3_indent((*(_self_))._field_oc);
		_2171ddd0c_scope(_self_, (*_75046_c.alloc)._field_Scope);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171dbd4e_matchSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d0463_Match> _82028_m) {
	if ((((*(_82028_m))._field_Cases.len() == 0LL) && ((*_82028_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*(_82028_m))._field_Comptime && (((*_82028_m.alloc)._field_Default == nullptr) || ((*((*((*_82028_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((!((*(_82028_m))._field_Comptime)) && (!(_20899b3db_IsConst((*_82028_m.alloc)._field_Expr.ptr()))))) {
		if ((_2170bb305_Copy && _2171dea66_isCopyOptimizable(&((*_82028_m.alloc)._field_Expr)))) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_82028_m))._field_Expr.alloc)._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	if (((*(_82028_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_82028_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a85104d:;
			if (it != expr_end) {
				jule::Ptr<_2088d0c5a_Case> _84816_c = *it;
				{
					if ((_84816_c == nullptr)) {
						goto _iter_next_21a85104d;
					};
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_2172b2ac3_indent((*(_self_))._field_oc);
					_2171dba96_case(_self_, _82028_m, _84816_c);
				}
				_iter_next_21a85104d:;
				++it;
				goto _iter_begin_21a85104d;
			}
			_iter_end_21a85104d:;
		};
	};
	if (((*(_82028_m))._field_Default != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2171dba96_case(_self_, _82028_m, (*_82028_m.alloc)._field_Default);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__21720b621_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_82028_m));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171dc107_fallSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d1453_FallSt> _87523_f) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__21720b90c_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_87523_f))._field_DestCase);
}



inline void _2171dc3b0_breakSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ccebb_BreakSt> _88024_b) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_88024_b))._field_It != 0LLU)) {
		static__21720ac5d_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_88024_b.alloc)._field_It);
	} else {
		static__21720b621_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_88024_b))._field_Mtch);
	};
}



inline void _2171dc668_setResult(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d17e9_RetSt> _88930_r) {
	if (((*((*((*((*(_88930_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_88930_r.alloc)._field_Expr);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_2172b2ac3_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_88930_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_21a85ac4a:;
			{
				jule::Slice<jule::Ptr<_20899a9a1_Data>> _8998_datas = (*((*(_88930_r))._field_Expr.unsafe_cast_ptr<_208817686_TupleExpr>()))._field_Datas;;
				{
					auto expr = &(_8998_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a85e875:;
					if (it != expr_end) {
						jule::I64 _9008_i = it - expr->begin();
						jule::Ptr<_20899a9a1_Data> _90011_data = *it;
						{
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_9008_i));
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_90011_data))._field_Model);
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_2172b2ac3_indent((*(_self_))._field_oc);
						}
						_iter_next_21a85e875:;
						++it;
						_9008_i++;
						goto _iter_begin_21a85e875;
					}
					_iter_end_21a85e875:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a85d533:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_2172015e4_model((*(*(_self_))._field_oc.alloc)._field_ec, (*(_88930_r))._field_Expr);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_21a85d4bc:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:913:4"));;
			}
		}
		_match_end_21a85d456:;
	};
}



inline void _2171dc921_retSt(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088d17e9_RetSt> _91726_r) {
	if (_20881e76a_IsVoid((*((*(_91726_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_91726_r))._field_Func.alloc)._field_Result);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_91726_r))._field_Expr != nullptr)) {
		_2171dc668_setResult(_self_, _91726_r);
	};
	if ((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Exceptional) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_2172cb7e0_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_91726_r))._field_Func.alloc)._field_Result));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _2171dcbc9_var(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_20894d7de_Var> _95324_v) {
	if ((!((*(_95324_v))._field_Constant))) {
		_2172b9415_var((*(_self_))._field_oc, _95324_v);
	};
}



inline void _2171dce82_mutSlicing(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da7aa3_MutSlicingExpr> _95931_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_95931_m))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_220c73ee8_Production))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_2172b48a5_locInfo((*(_self_))._field_oc, &((*_95931_m.alloc)._field_Token));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Left);
	if (((*_95931_m.alloc)._field_Right != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Right);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _2171dd23a_swap(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da680a_SwapExpr> _97625_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_2171e6e25_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_97625_m))._field_Left))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2171e6e25_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_97625_m.alloc)._field_Right))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171dd4e3_exceptionalForwarding(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_216da6057_ExceptionalForwardingExpr> _98442_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_2171e8850_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_98442_m))._field_Expr));
}



inline void _2171dd79b_st(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Any _99023_st) {
	if ((_99023_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _99023_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_21a881699:;
			{
				_2171ddd0c_scope(_self_, _99023_st.unsafe_cast_ptr<_2088ca969_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a881952:;
			{
				_2171dcbc9_var(_self_, _99023_st.unsafe_cast_ptr<_20894d7de_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_21a8819b8:;
			{
				_2172015e4_model((*((*_self_.alloc)._field_oc))._field_ec, (*(_99023_st.unsafe_cast_ptr<_20899a9a1_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_21a8821d3:;
			{
				_2171d85a9_conditional(_self_, _99023_st.unsafe_cast_ptr<_2088cb55d_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_21a882249:;
			{
				_2171d8862_infIter(_self_, _99023_st.unsafe_cast_ptr<_2088cb85a_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_21a8822b0:;
			{
				_2171d8b1a_whileIter(_self_, _99023_st.unsafe_cast_ptr<_2088cbd11_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_21a882326:;
			{
				_2171d8dc3_rangeIter(_self_, _99023_st.unsafe_cast_ptr<_2088cc7e5_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_21a88238c:;
			{
				_2171d917b_cont(_self_, _99023_st.unsafe_cast_ptr<_2088ccae2_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_21a882403:;
			{
				_2171d9434_label(_self_, _99023_st.unsafe_cast_ptr<_2088cd472_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_21a882469:;
			{
				_2171d96dc_gotoSt(_self_, _99023_st.unsafe_cast_ptr<_2088cdad2_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_21a8824d0:;
			{
				_2171d9995_postfix(_self_, _99023_st.unsafe_cast_ptr<_2088cdeab_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_21a882546:;
			{
				_2171da820_assign(_self_, _99023_st.unsafe_cast_ptr<_2088ce462_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_21a8825ac:;
			{
				_2171db3e2_multiAssign(_self_, _99023_st.unsafe_cast_ptr<_2088ce9e5_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_21a882634:;
			{
				_2171dbd4e_matchSt(_self_, _99023_st.unsafe_cast_ptr<_2088d0463_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_21a8826ab:;
			{
				_2171dc107_fallSt(_self_, _99023_st.unsafe_cast_ptr<_2088d1453_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_21a882733:;
			{
				_2171dc3b0_breakSt(_self_, _99023_st.unsafe_cast_ptr<_2088ccebb_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_21a8827aa:;
			{
				_2171dc921_retSt(_self_, _99023_st.unsafe_cast_ptr<_2088d17e9_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_21a882832:;
			{
				_2171eda64_pushToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.unsafe_cast_ptr<_216da8576_PushToSliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_21a8828a9:;
			{
				_2171edd1c_appendToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.unsafe_cast_ptr<_216da8950_AppendToSliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_21a882931:;
			{
				_2171dce82_mutSlicing(_self_, _99023_st.unsafe_cast_ptr<_216da7aa3_MutSlicingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_21a8829a8:;
			{
				_2171dd23a_swap(_self_, _99023_st.unsafe_cast_ptr<_216da680a_SwapExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_21a882a30:;
			{
				_2171dd4e3_exceptionalForwarding(_self_, _99023_st.unsafe_cast_ptr<_216da6057_ExceptionalForwardingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_21a882aa7:;
			{
				_2171d8048_strRuneIter(_self_, _99023_st.unsafe_cast_ptr<_216da8d29_StrRuneIter>());
			}
		}
		else {
			_case_begin_21a8814ce:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_21a881468:;
	};
}



inline void _2171dda54_scopeStmts(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ca969_Scope>* _104632_s) {
	{
		auto expr = &((*((*(_104632_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a889ecc:;
		if (it != expr_end) {
			jule::Any _104715_st = *it;
			{
				_2172b2ac3_indent((*(_self_))._field_oc);
				_2171dd79b_st(_self_, _104715_st);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_21a889ecc:;
			++it;
			goto _iter_begin_21a889ecc;
		}
		_iter_end_21a889ecc:;
	};
}



inline void _2171ddd0c_scope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_2088ca969_Scope> _105526_s) {
	_2172b26c7_addIndent((*(_self_))._field_oc);
	if ((*(_105526_s))._field_Deferred) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2171dda54_scopeStmts(_self_, &(_105526_s));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_105526_s))._field_Deferred) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _2171de0b5_commonFuncScope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_208822372_FnIns>* _107037_f) {
	if ((!(_20881e76a_IsVoid((*((*(_107037_f))))._field_Decl.ptr())))) {
		jule::Ptr<_2089dd560_Tuple> _10728_tup = _2089d4831_Tup((*((*(_107037_f))))._field_Result.ptr());;
		if ((_10728_tup != nullptr)) {
			_2172b2ac3_indent((*(_self_))._field_oc);
			_2172cb119_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10728_tup);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_10728_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_21a896109:;
				if (it != expr_end) {
					jule::I64 _107710_i = it - expr->begin();
					jule::Ptr<_2089ce661_Type> _107717_t = *it;
					{
						if (_2172cd9bd_shouldInitialized(&(_107717_t))) {
							_2172b2ac3_indent((*(_self_))._field_oc);
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_107710_i));
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_2172027b0_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _107717_t);
							_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_21a896109:;
					++it;
					_107710_i++;
					goto _iter_begin_21a896109;
				}
				_iter_end_21a896109:;
			};
		} else if (((*((*(*((*(_107037_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_2172b2ac3_indent((*(_self_))._field_oc);
			_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_107037_f))))._field_Result);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_2172cd9bd_shouldInitialized(&((*((*(_107037_f))))._field_Result))) {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_2172027b0_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_107037_f))))._field_Result);
			};
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_2171dda54_scopeStmts(_self_, &((*((*(_107037_f))))._field_Scope));
	if (((*((*((*(_107037_f))))._field_Decl))._field_Exceptional && _20881e76a_IsVoid((*((*(_107037_f))))._field_Decl))) {
		_2172b2ac3_indent((*_self_.alloc)._field_oc);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _2171de428_anonFuncScope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr> _111034_m, jule::Str _111056_ident) {
	if (((*((*(_111034_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11143_closure = _20939ee76_IsClosure(&(_111034_m));;
	if (_11143_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_20894d7de_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_20894d7de_Var>>((void*)__jule_anon_21a8a4c3e, jule::Ptr<__jule_anon_21a8a4c3e_ctx>::make(__jule_anon_21a8a4c3e_ctx{._self_=_self_,._111034_m=_111034_m}).as<jule::Uintptr>(), __jule_anon_21a8a4c3e_ctx_handler); __jule_collection; }));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	if (_11143_closure) {
		_2172b2ac3_indent((*(_self_))._field_oc);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_2172b2221_write((*(_self_))._field_oc, _111056_ident);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_2172b2221_write((*(_self_))._field_oc, _111056_ident);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_2171de0b5_commonFuncScope(_self_, &((*(_111034_m))._field_Func));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11143_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _2171de6d1_funcScope(jule::Ptr<_2171d6b29_scopeCoder> _self_, jule::Ptr<_208822372_FnIns> _114230_f) {
	if (((*(_114230_f))._field_Scope == nullptr)) {
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2171de0b5_commonFuncScope(_self_, &(_114230_f));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_2171e2bce_exprCoder> static__2171e30ca_new(jule::Ptr<_2172b1a06_ObjectCoder>* _5021_oc) {
	return jule::new_ptr<_2171e2bce_exprCoder>(_2171e2bce_exprCoder{._field_oc=(*(_5021_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_20894d7de_Var>>>(nullptr)});;
}



inline void _2171e3383_string(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const>* _5624_c) {
	jule::Str _573_content = _2088078b8_ReadStr((*(_5624_c)).ptr());;
	if ((_573_content.len() == 0LL)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _623_len = _21ec9e343_FmtInt(static_cast<jule::I64>(_573_content.len()), 10LL);;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_21720356e_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _573_content);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2172b2221_write((*(_self_))._field_oc, _623_len);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171e363b_boolean(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Bool _7124_b) {
	if (_7124_b) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _2171e3839_nilLit(jule::Ptr<_2171e2bce_exprCoder> _self_) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _2171e3b7a_ftoaSpecialCases(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::F64* _8334_x) {
	{
		
		if (_21ec53d0e_IsNaN((*(_8334_x)))) {
			_case_begin_21a8c6bc8:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_21ec54491_IsInf((*(_8334_x)), 1LL)) {
			_case_begin_21a8c6c72:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_21ec54491_IsInf((*(_8334_x)), -1LL)) {
			_case_begin_21a8c6ce9:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_21a8c6b51:;
			{
				return false;;
			}
		}
		_match_end_21a8c6a41:;
	};
	return true;;
}



inline void _2171e3e33_float32(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const>* _9725_c) {
	jule::F64 _983_x = _208808402_AsF64((*(_9725_c)).ptr());;
	if (_2171e3b7a_ftoaSpecialCases(_self_, &(_983_x))) {
		return;;
	};
	{
		
		if ((_983_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_21a8ca34c:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_983_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_21a8ca02d:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_21a8c9eb7:;
			{
				_217203915_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _983_x, 32LL);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_21a8c9a33:;
	};
}



inline void _2171e41db_float64(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const>* _11625_c) {
	jule::F64 _1173_x = _208808402_AsF64((*(_11625_c)).ptr());;
	if (_2171e3b7a_ftoaSpecialCases(_self_, &(_1173_x))) {
		return;;
	};
	{
		
		if ((_1173_x == jule::MAX_F64)) {
			_case_begin_21a8cde66:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1173_x == jule::MIN_F64)) {
			_case_begin_21a8cd76d:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_21a8cd3d8:;
			{
				_217203915_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1173_x, 64LL);
			}
		}
		_match_end_21a8cce54:;
	};
}



inline void _2171e4494_constant(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208799195_Const> _13429_c) {
	{
		
		if (_208809eb4_IsStr(_13429_c.ptr())) {
			_case_begin_21a8d0583:;
			{
				_2171e3383_string(_self_, &(_13429_c));
			}
		}
		else if (_208809c2d_IsBool(_13429_c.ptr())) {
			_case_begin_21a8d05e9:;
			{
				_2171e363b_boolean(_self_, _208807632_ReadBool(_13429_c));
			}
		}
		else if (_20880a24a_IsF64(_13429_c)) {
			_case_begin_21a8d0660:;
			{
				{
					
					if (((*_13429_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_21a8d309c:;
						{
							_2171e3e33_float32(_self_, &(_13429_c));
						}
					}
					else {
						_case_begin_21a8d2c06:;
						{
							_2171e41db_float64(_self_, &(_13429_c));
						}
					}
					_match_end_21a8d2ae6:;
				};
			}
		}
		else if (_208809711_IsI64(_13429_c)) {
			_case_begin_21a8d06c6:;
			{
				_217203c01_itoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _208807115_ReadI64(_13429_c));
			}
		}
		else if (_208809997_IsU64(_13429_c)) {
			_case_begin_21a8d073c:;
			{
				_217203edc_utoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _20880739b_ReadU64(_13429_c));
			}
		}
		else if (_20880a4d1_IsNil(_13429_c)) {
			_case_begin_21a8d07a3:;
			{
				_2171e3839_nilLit(_self_);
			}
		}
		else {
			_case_begin_21a8d051c:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_21a8d040c:;
	};
}



inline void _2171e48b2_divByZeroBinary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208711827_Token>* _15833_op, jule::Ptr<_208811a9d_OperandExpr>* _15857_l, jule::Ptr<_208811a9d_OperandExpr>* _15885_r) {
	;
	;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15857_l))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_15857_l))))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15885_r))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_15885_r))))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_220c73ee8_Production))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_2172b48a5_locInfo((*(_self_))._field_oc, _15833_op);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15857_l))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_15833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_21a8dda58:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_21a8e22a9:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_21a8e2210:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _2171e50aa__unsafeBinary(jule::Ptr<_2171e2bce_exprCoder> _self_, _21e64c5b5_Builder* _19735_buf, jule::Str* _19759_l, jule::Str* _19768_r, jule::Ptr<_2089ce661_Type>* _1988_lk, jule::Ptr<_2089ce661_Type>* _19830_rk, jule::U64 _19847_op, jule::Str _19862_kind) {
	if ((_2089d3ce7_Struct((*(_1988_lk)).ptr()) != nullptr)) {
		jule::Ptr<_2087490bd_StructIns> _2008_s = _2089d3ce7_Struct((*(_1988_lk)).ptr());;
		_21720463b_structBinary(_19735_buf, &(_2008_s), _19759_l, _19768_r, _19847_op, _19862_kind);
		return;;
	};
	if (((_19847_op == static_cast<jule::U64>(50LLU)) || (_19847_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_20939eb35_IsAny(_1988_lk)) {
				_case_begin_21a8e6c2b:;
				{
					if (((!(_2089d07d8_IsNil((*(_19830_rk)).ptr()))) && (!(_20939eb35_IsAny(_19830_rk))))) {
						({
							auto except = _21e64d84c_WriteByte(_19735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:212:6"));
						});
						if ((_19847_op == static_cast<jule::U64>(51LLU))) {
							({
								auto except = _21e64d84c_WriteByte(_19735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:214:7"));
							});
						};
						jule::I64 _2166_i = _2172b3c28_pushAnyType((*(_self_))._field_oc, (*(_19830_rk)));;
						({
							auto except = _21e64d594_WriteStr(_19735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:217:6"));
							(except.result);
						});
						({
							auto except = _21e64d594_WriteStr(_19735_buf, _21ec9e60c_Itoa(_2166_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:218:6"));
							(except.result);
						});
						({
							auto except = _21e64d594_WriteStr(_19735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:219:6"));
							(except.result);
						});
						({
							auto except = _21e64d594_WriteStr(_19735_buf, (*(_19759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:220:6"));
							(except.result);
						});
						({
							auto except = _21e64d594_WriteStr(_19735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:221:6"));
							(except.result);
						});
						({
							auto except = _21e64d594_WriteStr(_19735_buf, (*(_19768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:222:6"));
							(except.result);
						});
						({
							auto except = _21e64d594_WriteStr(_19735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_2089d3544_Arr((*(_1988_lk)).ptr()) != nullptr)) {
				_case_begin_21a8e6cc5:;
				{
					jule::Ptr<_2089dec8c_Arr> _2295_arr = _2089d3544_Arr((*(_1988_lk)).ptr());;
					jule::Ptr<_208822372_FnIns> _2309_ins = _2093a2b27_FindFnGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2295_arr))._field_Elem; __jule_collection; }));;
					if ((_19847_op == static_cast<jule::U64>(51LLU))) {
						({
							auto except = _21e64d84c_WriteByte(_19735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
						});
					};
					static__217209410_funcIns(_19735_buf, &(_2309_ins));
					({
						auto except = _21e64d84c_WriteByte(_19735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:235:5"));
					});
					({
						auto except = _21e64d594_WriteStr(_19735_buf, (*(_19759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:236:5"));
						(except.result);
					});
					({
						auto except = _21e64d594_WriteStr(_19735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:237:5"));
						(except.result);
					});
					({
						auto except = _21e64d594_WriteStr(_19735_buf, (*(_19768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:238:5"));
						(except.result);
					});
					({
						auto except = _21e64d594_WriteStr(_19735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:239:5"));
						(except.result);
					});
					({
						auto except = _21e64d594_WriteStr(_19735_buf, _21ec9e60c_Itoa((*_2295_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:240:5"));
						(except.result);
					});
					({
						auto except = _21e64d84c_WriteByte(_19735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:241:5"));
					});
					return;;
				}
			}
			_match_end_21a8e6b3d:;
		};
	};
	{
		auto &_match_expr{ _19847_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_21a8e6d5d:;
			{
				jule::Ptr<_2089d846c_Prim> _2494_lp = _2089d2774_Prim((*(_1988_lk)).ptr());;
				if (((_2494_lp != nullptr) && _20889c881_IsUnsigInt((*_2494_lp.alloc)._field_Kind))) {
					({
						auto except = _21e64d84c_WriteByte(_19735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
					});
					_2172c2363_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _19735_buf, _2494_lp);
					({
						auto except = _21e64d84c_WriteByte(_19735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
				};
			}
		}
		_match_end_21a8ea845:;
	};
	({
		auto except = _21e64d84c_WriteByte(_19735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:257:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_19735_buf, (*(_19759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:258:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_19735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:259:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_19735_buf, _19862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:260:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_19735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:261:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_19735_buf, (*(_19768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:262:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_19735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:3"));
	});
}



inline void _2171e5363_unsafeBinary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812098_BinaryExpr> _26633_m) {
	jule::I64 _2673_i = _21e64e3a8_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2687_oldbuf = _21e64e8c5_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_2171e6e25_possibleRefExpr(_self_, (*((*(_26633_m))._field_Left))._field_Model);
	jule::Str _2703_l = __jule_bytesToStr(_21e64e8c5_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2673_i));;
	{
		_21e64eb7d_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2687_oldbuf);
	};
	_2171e6e25_possibleRefExpr(_self_, (*((*_26633_m.alloc)._field_Right))._field_Model);
	jule::Str _2733_r = __jule_bytesToStr(_21e64e8c5_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2673_i));;
	{
		_21e64eb7d_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2687_oldbuf);
	};
	_2171e50aa__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2703_l), &(_2733_r), &((*(*(_26633_m))._field_Left.alloc)._field_Type), &((*(*(_26633_m))._field_Right.alloc)._field_Type), (*((*_26633_m.alloc)._field_Op))._field_Id, (*(*(_26633_m))._field_Op.alloc)._field_Kind);
}



inline void _2171e56c6_shl(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208811a9d_OperandExpr>* _27825_l, jule::Ptr<_208811a9d_OperandExpr>* _27853_r) {
	;
	;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27825_l))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_27825_l))))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27853_r))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_27853_r))))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27825_l))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_208894acb_BitSizeOf((*(_2089d2774_Prim((*((*(_27825_l))))._field_Type.ptr())))._field_Kind)));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _2171e5a39_shr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208811a9d_OperandExpr>* _30625_l, jule::Ptr<_208811a9d_OperandExpr>* _30653_r) {
	;
	;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30625_l))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_30625_l))))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30653_r))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_30653_r))))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30625_l))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_208894acb_BitSizeOf((*(_2089d2774_Prim((*((*(_30625_l))))._field_Type.ptr())))._field_Kind)));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _2171e5ce2_binary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812098_BinaryExpr> _33427_m) {
	{
		auto &_match_expr{ (*((*(_33427_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_21a923142:;
			{
				if (_220c73ca6_Safety) {
					_2171e48b2_divByZeroBinary(_self_, &((*(_33427_m))._field_Op), &((*_33427_m.alloc)._field_Left), &((*_33427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_21a9231b9:;
			{
				_2171e56c6_shl(_self_, &((*(_33427_m))._field_Left), &((*_33427_m.alloc)._field_Right));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_21a923230:;
			{
				_2171e5a39_shr(_self_, &((*_33427_m.alloc)._field_Left), &((*_33427_m.alloc)._field_Right));
				return;;
			}
		}
		_match_end_21a923076:;
	};
	_2171e5363_unsafeBinary(_self_, _33427_m);
}



inline void _2171e609a_var(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20894d7de_Var> _35124_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a926277:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_20894d7de_Var>> _35210_prefix = *it;
			{
				if (_35210_prefix(_35124_m)) {
					return;;
				};
			}
			_iter_next_21a926277:;
			++it;
			goto _iter_begin_21a926277;
		}
		_iter_end_21a926277:;
	};
	if ((*(_35124_m))._field_Binded) {
		jule::Ptr<_208726760_Directive> _3584_d = _2093a152c_FindDirective(&((*_35124_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3584_d != nullptr)) {
			_2172b24c9_writeBytes((*_self_.alloc)._field_oc, _2172be805_concatAllParts((*_3584_d.alloc)._field_Args));
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__21720a686_var(&((*((*_self_.alloc)._field_oc))._field_Buf), _35124_m);
}



inline void _2171e6353_structureIns(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2087490bd_StructIns> _36733_m) {
	_2172c4ae6_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _36733_m);
}



inline void _2171e660b_unary(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812472_UnaryExpr> _37126_m) {
	{
		auto &_match_expr{ (*((*(_37126_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_21a92a622:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_2171e6e25_possibleRefExpr(_self_, (*((*(_37126_m))._field_Expr))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21a92ac1b:;
			{
				if ((_220c73ee8_Production || (_2089d2a0a_Sptr((*((*(_37126_m))._field_Expr))._field_Type.ptr()) == nullptr))) {
					goto _match_end_21a92ab1c;
				};
				_2171e6e25_possibleRefExpr(_self_, (*((*(_37126_m))._field_Expr))._field_Model);
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_2172b48a5_locInfo((*(_self_))._field_oc, &((*_37126_m.alloc)._field_Op));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_21a92ab1c:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2172b2221_write((*(_self_))._field_oc, (*((*(_37126_m))._field_Op))._field_Kind);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr(_self_, (*((*_37126_m.alloc)._field_Expr))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _2171e68b4_structureLit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208812d46_StructLitExpr> _39533_m) {
	jule::Bool _3963_binded = _2093a0cce_IsStructBinded((*(_39533_m))._field_Strct);;
	if (_3963_binded) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_2171e6353_structureIns(_self_, (*_39533_m.alloc)._field_Strct);
	if (_3963_binded) {
		_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4077_inited = false;;
	_julec_label_21a934065:;
	{
		auto expr = &((*((*_39533_m.alloc)._field_Strct))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a935341:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> _40915_f = *it;
			{
				{
					auto expr = &((*_39533_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a935e8a:;
					if (it != expr_end) {
						jule::Ptr<_2088129a0_StructArgExpr> _41016_arg = *it;
						{
							if (((*(_41016_arg))._field_Field == _40915_f)) {
								if (_4077_inited) {
									_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__21720a39a_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_40915_f))._field_Decl));
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_2171e6e25_possibleRefExpr(_self_, (*((*_41016_arg.alloc)._field_Expr))._field_Model);
								_4077_inited=true;
								goto _iter_next_21a935341;
							};
						}
						_iter_next_21a935e8a:;
						++it;
						goto _iter_begin_21a935e8a;
					}
					_iter_end_21a935e8a:;
				};
				if (_3963_binded) {
					_4077_inited=false;
					goto _iter_next_21a935341;
				};
				if (_4077_inited) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4077_inited=_217201935_handleFieldByDefault(_self_, &(_40915_f));
			}
			_iter_next_21a935341:;
			++it;
			goto _iter_begin_21a935341;
		}
		_iter_end_21a935341:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171e6b6c_allocStructure(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208813143_AllocStructLitExpr> _43935_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_2171e6353_structureIns(_self_, (*((*(_43935_m))._field_Lit))._field_Strct);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_2171e68b4_structureLit(_self_, (*_43935_m.alloc)._field_Lit);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171e6e25_possibleRefExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _44732_expr) {
	{
		auto &_match_expr{ _44732_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a93cd60:;
			{
				jule::Ptr<_20894d7de_Var> _4504_v = _44732_expr.unsafe_cast_ptr<_20894d7de_Var>();;
				if ((*(_4504_v))._field_Reference) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_2172015e4_model(_self_, _44732_expr);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_21a93cce9:;
	};
	_2172015e4_model(_self_, _44732_expr);
}



inline void _2171e7343_castTraitFromTrait(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088136c6_CastingExpr>* _46140_m, jule::Ptr<_2088299c8_Trait> _46167_t1, jule::Ptr<_2088299c8_Trait> _46189_t2) {
	_2171e6e25_possibleRefExpr(_self_, (*((*((*(_46140_m))))._field_Expr))._field_Model);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_2172b45ec_pushAndWriteMaskMapper((*(_self_))._field_oc, _46167_t1, _46189_t2);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171e75eb_casting(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088136c6_CastingExpr> _47428_m) {
	if (_2089d1146_ActualEqual((*(_47428_m))._field_Type, (*_47428_m.alloc)._field_ExprType)) {
		_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
		return;;
	};
	{
		
		if (_20939eb35_IsAny(&((*(_47428_m))._field_Type))) {
			_case_begin_21a943937:;
			{
				if (_2089d07d8_IsNil((*_47428_m.alloc)._field_ExprType.ptr())) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_2089d32ad_TypeEnum((*_47428_m.alloc)._field_ExprType.ptr()) != nullptr)) {
					_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _4904_i = _2172b3c28_pushAnyType((*(_self_))._field_oc, (*_47428_m.alloc)._field_ExprType);;
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_47428_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_21a945609:;
						{
							jule::Ptr<_2089d846c_Prim> _4945_prim = _2089d2774_Prim((*_47428_m.alloc)._field_ExprType.ptr());;
							if (((_4945_prim != nullptr) && _20889cb4a_IsInt((*_4945_prim.alloc)._field_Kind))) {
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_2172c2363_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _4945_prim);
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_21a94782b;
							};
							goto _case_begin_21a947892;
						}
					}
					else {
						_case_begin_21a947892:;
						{
							_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
						}
					}
					_match_end_21a94782b:;
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_4904_i));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_20939eb35_IsAny(&((*(_47428_m))._field_ExprType))) {
			_case_begin_21a9439ae:;
			{
				_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_2089d2a0a_Sptr((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_2089d2a0a_Sptr((*(_47428_m))._field_Type)))._field_Elem);
				} else {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_220c73ee8_Production))) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_2172b48a5_locInfo((*(_self_))._field_oc, &((*_47428_m.alloc)._field_Token));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_2172b3c28_pushAnyType((*(_self_))._field_oc, (*_47428_m.alloc)._field_Type)));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_2089d2c91_Ptr((*_47428_m.alloc)._field_ExprType.ptr()) != nullptr) || (_2089d2c91_Ptr((*(_47428_m))._field_Type) != nullptr)) {
			_case_begin_21a943a25:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_2171e6e25_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_2089d4314_Trait((*(_47428_m))._field_ExprType) != nullptr)) {
			_case_begin_21a943a8b:;
			{
				if ((_2089d4314_Trait((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_2171e7343_castTraitFromTrait(_self_, &(_47428_m), _2089d4314_Trait((*(_47428_m))._field_Type), _2089d4314_Trait((*(_47428_m))._field_ExprType));
					return;;
				};
				_2171e6e25_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_2089d2a0a_Sptr((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_2089d2a0a_Sptr((*(_47428_m))._field_Type)))._field_Elem);
				} else {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_220c73ee8_Production))) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_2172b48a5_locInfo((*(_self_))._field_oc, &((*_47428_m.alloc)._field_Token));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__2172096eb_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _2089d4314_Trait((*(_47428_m))._field_ExprType));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_2093a27a3_FindTraitTypeOffset(_2089d4314_Trait((*(_47428_m))._field_ExprType), (*_47428_m.alloc)._field_Type)));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_2089d4314_Trait((*(_47428_m))._field_Type) != nullptr)) {
			_case_begin_21a943b02:;
			{
				_2172c6840_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_2171e6e25_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__2172096eb_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _2089d4314_Trait((*_47428_m.alloc)._field_Type.ptr()));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_2093a27a3_FindTraitTypeOffset(_2089d4314_Trait((*(_47428_m))._field_Type), (*_47428_m.alloc)._field_ExprType)));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_21a94353b:;
	};
	jule::Ptr<_2089d846c_Prim> _5767_prim = _2089d2774_Prim((*(_47428_m))._field_Type.ptr());;
	if (((_5767_prim != nullptr) && _2089db937_IsStr(_5767_prim))) {
		jule::Ptr<_2089d846c_Prim> _5788_eprim = _2089d2774_Prim((*_47428_m.alloc)._field_ExprType.ptr());;
		if (((_5788_eprim != nullptr) && (_5767_prim != nullptr))) {
			if (_2089d9d97_IsU8(_5788_eprim)) {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
			_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_2089dc96b_Slc> _5898_slc = _2089d37ca_Slc((*(_47428_m))._field_ExprType);;
		if ((_5898_slc != nullptr)) {
			_5788_eprim=_2089d2774_Prim((*_5898_slc.alloc)._field_Elem.ptr());
			if (_2089d987a_IsI32(_5788_eprim.ptr())) {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
			_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5767_prim=_2089d2774_Prim((*_47428_m.alloc)._field_ExprType.ptr());
	if (((_5767_prim != nullptr) && _2089db937_IsStr(_5767_prim))) {
		jule::Ptr<_2089dc96b_Slc> _6058_slc = _2089d37ca_Slc((*(_47428_m))._field_Type);;
		if ((_6058_slc != nullptr)) {
			_5767_prim=_2089d2774_Prim((*_6058_slc.alloc)._field_Elem.ptr());
			if (_2089d987a_IsI32(_5767_prim.ptr())) {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
			_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_2171e6e25_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171e78a4_args(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _62626_m) {
	jule::I64 _6277_j = 0LL;;
	if (((((*((*((*(_62626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_62626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*((*((*(_62626_m))))._field_Func))._field_Params.len() > 0LL) && _20881ce3e_IsSelf((*((*(*((*(_62626_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6277_j)++;
	};
	{
		auto expr = &((*((*(_62626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a97962c:;
		if (it != expr_end) {
			jule::I64 _6327_i = it - expr->begin();
			jule::Any _63210_arg = *it;
			{
				jule::Ptr<_20882121c_ParamIns> _6334_p = (*((*((*(_62626_m))))._field_Func))._field_Params[_6277_j];;
				if ((((*(_6334_p))._field_Decl != nullptr) && (*(*(_6334_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _63210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_21a97d037:;
							{
								jule::Ptr<_20894d7de_Var> _6376_v = _63210_arg.unsafe_cast_ptr<_20894d7de_Var>();;
								if ((*(_6376_v))._field_Reference) {
									_2172015e4_model(_self_, _63210_arg);
									goto _julec_label_21a98090d;
								};
							}
						}
						_match_end_21a97cec1:;
					};
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_2172015e4_model(_self_, _63210_arg);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_21a98090d;
				};
				_2171e6e25_possibleRefExpr(_self_, _63210_arg);
				_julec_label_21a98090d:;
				if ((((*((*(_62626_m))))._field_Args.len() - _6327_i) > 1LL)) {
					_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_6277_j)++;
			}
			_iter_next_21a97962c:;
			++it;
			_6327_i++;
			goto _iter_begin_21a97962c;
		}
		_iter_end_21a97962c:;
	};
}



inline void _2171e7b5c_modelForCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _65733_expr) {
	{
		auto &_match_expr{ _65733_expr };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_21a97bed1:;
			{
				_2171eb28c_funcIns(_self_, _65733_expr.unsafe_cast_ptr<_208822372_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a980ed5:;
			{
				jule::Ptr<_208816b19_StructSubIdentExpr> _6638_ssie = _65733_expr.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>();;
				if (((*(_6638_ssie))._field_Method != nullptr)) {
					_2171eb28c_funcIns(_self_, (*_6638_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_21a97be6a:;
	};
	_2171e6e25_possibleRefExpr(_self_, _65733_expr);
}



inline void _2171e7e15_pushCallInf(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _67229_m) {
	if ((_220c73ee8_Production || (!((*((*((*(_67229_m))))._field_Func))._field_Anon)))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_67229_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_67229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_21a985391:;
				{
					if (_2093a0cce_IsStructBinded((*((*((*((*(_67229_m))))._field_Expr.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>()))._field_Field))._field_Owner)) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_21a98532a:;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_2172b48a5_locInfo((*(_self_))._field_oc, &((*((*(_67229_m))))._field_Token));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_67229_m))))._field_Args.len() != 0LL)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _2171e8256_isWrapped(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _69531_m) {
	if ((((!(_20882383a_IsBuiltin((*((*(_69531_m))))._field_Func.ptr()))) && ((*((*(*((*(_69531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _20881ce3e_IsSelf((*((*((*((*(_69531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_69531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_21a989c7a:;
				{
					jule::Ptr<_208816b19_StructSubIdentExpr> _6999_ssie = (*((*(_69531_m))))._field_Expr.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>();;
					if ((*((*(_6999_ssie))._field_Expr))._field_Lvalue) {
						return false;;
					};
					{
						
						if (_20881d1c5_IsRef((*((*((*((*(_69531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_2089d2a0a_Sptr((*((*(_6999_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_21a98c002:;
							{
								return false;;
							}
						}
						else {
							_case_begin_21a98b3ca:;
							{
								{
									auto &_match_expr{ (*((*((*(_6999_ssie))._field_Expr))._field_Type))._field_Kind };
									
									if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
										_case_begin_21a98be58:;
										{
											_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
											_2172015e4_model(_self_, (*((*(_6999_ssie))._field_Expr))._field_Model);
											_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
											return true;;
										}
									}
									_match_end_21a98bde2:;
								};
							}
						}
						_match_end_21a98ad7a:;
					};
				}
			}
			_match_end_21a989c14:;
		};
	};
	return false;;
}



inline jule::Bool _2171e8597_writeReceiver(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _72234_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _72234_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a991589:;
			{
				_2171e6e25_possibleRefExpr(_self_, (*((*(_72234_m.unsafe_cast_ptr<_208812472_UnaryExpr>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_21a991ee6:;
			{
				_2171e6e25_possibleRefExpr(_self_, (*((*((*(_72234_m.unsafe_cast_ptr<_216da9126_UnsafeDerefExpr>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_21a991732:;
			{
				_2171e6e25_possibleRefExpr(_self_, _72234_m);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_21a9916bb:;
	};
}



inline void _2171e8850_pureFuncCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _73634_m) {
	jule::Bool _7373_wrapped = _2171e8256_isWrapped(_self_, _73634_m);;
	_2171e7b5c_modelForCall(_self_, (*((*(_73634_m))))._field_Expr);
	if ((!(_20882383a_IsBuiltin((*((*(_73634_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_73634_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_73634_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_2093a18e5_HasDirective(&((*(*((*((*(_73634_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_73634_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a995aee:;
					if (it != expr_end) {
						jule::I64 _74311_i = it - expr->begin();
						jule::Ptr<_2089ccc7a_InsGeneric> _74318_g = *it;
						{
							_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_74318_g))._field_Type);
							if ((((*(*((*(_73634_m))))._field_Func.alloc)._field_Generics.len() - _74311_i) > 1LL)) {
								_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_21a995aee:;
						++it;
						_74311_i++;
						goto _iter_begin_21a995aee;
					}
					_iter_end_21a995aee:;
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_2171e7e15_pushCallInf(_self_, _73634_m);
	if (((*((*((*(_73634_m))))._field_Func))._field_AsAnon && (!((*(*((*(_73634_m))))._field_Func.alloc)._field_Anon)))) {
		_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_73634_m))))._field_Args.len() > 0LL)) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_20882383a_IsBuiltin((*((*(_73634_m))))._field_Func.ptr()))) && ((*((*(*((*(_73634_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _20881ce3e_IsSelf((*((*((*((*(_73634_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_73634_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_21a99c8a3:;
				{
					jule::Ptr<_208816b19_StructSubIdentExpr> _7679_ssie = (*((*(_73634_m))))._field_Expr.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>();;
					{
						
						if (_20881d1c5_IsRef((*((*((*((*(_73634_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_21a99e4dc:;
							{
								_2171e8597_writeReceiver(_self_, (*((*(_7679_ssie))._field_Expr))._field_Model);
							}
						}
						else {
							_case_begin_21a99d871:;
							{
								{
									auto &_match_expr{ (*((*((*(_7679_ssie))._field_Expr))._field_Type))._field_Kind };
									
									if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
										_case_begin_21a9a2ce8:;
										{
											jule::Bool _7767_safe = _2171e8597_writeReceiver(_self_, (*((*(_7679_ssie))._field_Expr))._field_Model);;
											if (_7767_safe) {
												_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
												if ((!(_220c73ee8_Production))) {
													_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
													_2172b48a5_locInfo((*(_self_))._field_oc, &((*((*(_73634_m))))._field_Token));
													_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
												};
												_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
											};
										}
									}
									else {
										_case_begin_21a99e476:;
										{
											{
												auto &_match_expr{ (*((*((*(_7679_ssie))._field_Expr))._field_Type))._field_Kind };
												
												if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
													_case_begin_21a9a0004:;
													{
														{
															auto &_match_expr{ (*((*(_7679_ssie))._field_Expr))._field_Model };
															
															if (_match_expr.type == &__jule_any_type7) {
																_case_begin_21a9a06a8:;
																{
																	jule::Ptr<_20894d7de_Var> _7919_v = (*((*(_7679_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
																	if ((*(_7919_v))._field_Reference) {
																		goto _match_end_21a9a0b92;
																	};
																	goto _case_begin_21a9a0c08;
																}
															}
															else {
																_case_begin_21a9a0c08:;
																{
																	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
																}
															}
															_match_end_21a9a0b92:;
														};
													}
												}
												_match_end_21a99ee8d:;
											};
											if (_7373_wrapped) {
												_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
											} else if ((_2089d2c91_Ptr((*((*(_7679_ssie))._field_Expr))._field_Type.ptr()) == nullptr)) {
												_2172015e4_model(_self_, (*(*(_7679_ssie))._field_Expr.alloc)._field_Model);
											} else {
												_2171e6e25_possibleRefExpr(_self_, (*((*((*(*(_7679_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112)))._field_Expr))._field_Model);
											};
										}
									}
									_match_end_21a99e410:;
								};
							}
						}
						_match_end_21a99d7e9:;
					};
					if (((*((*(_73634_m))))._field_Args.len() > 0LL)) {
						_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type98) {
				_case_begin_21a99c551:;
				{
					_2171e6e25_possibleRefExpr(_self_, (*((*((*(_73634_m))))._field_Expr.unsafe_cast_ptr<_208816278_TraitSubIdentExpr>()))._field_Expr);
					_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_73634_m))))._field_Args.len() > 0LL)) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_21a99c82b:;
		};
	};
	_2171e78a4_args(_self_, _73634_m);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_7373_wrapped) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _2171e8b08_coFuncCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr>* _83032_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8377_i = jule::Str();;
	if ((((*((*((*(_83032_m))))._field_Func))._field_Params.len() > 0LL) || (*((*((*(_83032_m))))._field_Func))._field_AsAnon)) {
		_8377_i=_21ec9e60c_Itoa(_2172b3255_pushCoSpawn((*(_self_))._field_oc, (*((*(_83032_m))))._field_Func));
		jule::Str _8404_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8377_i);;
		_2172b2221_write((*(_self_))._field_oc, _8404_t);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_2172b2221_write((*(_self_))._field_oc, _8404_t);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_2172b2ac3_indent((*(_self_))._field_oc);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_2171e7b5c_modelForCall(_self_, (*((*(_83032_m))))._field_Expr);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*((*((*(_83032_m))))._field_Func))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21a9b8abc:;
			if (it != expr_end) {
				jule::I64 _8628_j = it - expr->begin();
				{
					_2172b2ac3_indent((*(_self_))._field_oc);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_8628_j));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_2171e6e25_possibleRefExpr(_self_, (*((*(_83032_m))))._field_Args[_8628_j]);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_21a9b8abc:;
				++it;
				_8628_j++;
				goto _iter_begin_21a9b8abc;
			}
			_iter_end_21a9b8abc:;
		};
		_2172b2ac3_indent((*(_self_))._field_oc);
	};
	if (!(_8377_i).empty()) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8377_i).empty()) {
		static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_83032_m))))._field_Func));
	} else {
		_2172b2221_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8377_i));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8377_i).empty()) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8377_i).empty()) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171e8e6b_writeUseExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208822372_FnIns>* _90834_f, jule::Ptr<_20899a9a1_Data> _90855_d) {
	if ((_2089d4831_Tup((*(_90855_d))._field_Type.ptr()) == nullptr)) {
		_2171e6e25_possibleRefExpr(_self_, (*_90855_d.alloc)._field_Model);
		_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_208817686_TupleExpr> _9147_tup = (*(_90855_d))._field_Model.cast_ptr<_208817686_TupleExpr>(&__jule_any_type83);;
	_2172cb119_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _2089d4831_Tup((*((*(_90834_f))))._field_Result.ptr()));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_9147_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a9d061c:;
		if (it != expr_end) {
			jule::I64 _9177_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _91710_data = *it;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_9177_i));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_2171e6e25_possibleRefExpr(_self_, (*(_91710_data))._field_Model);
				if ((((*(_9147_tup))._field_Datas.len() - _9177_i) > 1LL)) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_21a9d061c:;
			++it;
			_9177_i++;
			goto _iter_begin_21a9d061c;
		}
		_iter_end_21a9d061c:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _2171e92ce_funcCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814078_FnCallExpr> _92929_m, jule::Bool _92951_ignoreExceptional) {
	if ((*(_92929_m))._field_IsCo) {
		_2171e8b08_coFuncCall(_self_, &(_92929_m));
		return;;
	};
	if (((_20882383a_IsBuiltin((*(_92929_m))._field_Func.ptr()) || (!((*((*((*(_92929_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_92929_m))._field_Except != nullptr) && ((*((*_92929_m.alloc)._field_Except))._field_Stmts.len() == 0LL)))) {
		_2171e8850_pureFuncCall(_self_, &(_92929_m));
		return;;
	};
	if (_92951_ignoreExceptional) {
		_2171e8850_pureFuncCall(_self_, &(_92929_m));
		if (((*((*(_92929_m))._field_Func))._field_Result != nullptr)) {
			_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_2171e8850_pureFuncCall(_self_, &(_92929_m));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	if (((*(_92929_m))._field_Except != nullptr)) {
		if ((((*((*_92929_m.alloc)._field_Func))._field_Result == nullptr) || (!((*_92929_m.alloc)._field_Assigned)))) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_2171ddd0c_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_92929_m.alloc)._field_Except);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9675_forwarded = _20939e55d_IsForwarded(&((*_92929_m.alloc)._field_Except));;
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9675_forwarded) {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9729_stmt = (*(*(_92929_m))._field_Except.alloc)._field_Stmts[((*(*(_92929_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9729_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_21a9e0473:;
					{
						((*((*(_92929_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_92929_m))._field_Except))._field_Stmts.len() - 1LL));;
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_2172b26c7_addIndent((*(_self_))._field_oc);
						_2171dda54_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_92929_m.alloc)._field_Except));
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_2172b2ac3_indent((*(_self_))._field_oc);
						_2171e8e6b_writeUseExpr(_self_, &((*_92929_m.alloc)._field_Func), _9729_stmt.unsafe_cast_ptr<_20899a9a1_Data>());
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_2172b28c5_doneIndent((*(_self_))._field_oc);
						_2172b2ac3_indent((*(_self_))._field_oc);
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_21a9e053e:;
					{
						_2171ddd0c_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_92929_m.alloc)._field_Except);
					}
				}
				_match_end_21a9e040c:;
			};
			if (_9675_forwarded) {
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_2172027b0_initExpr(_self_, (*((*_92929_m.alloc)._field_Func))._field_Result);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_2172b28c5_doneIndent((*(_self_))._field_oc);
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_2172b48a5_locInfo((*(_self_))._field_oc, &((*(_92929_m))._field_Token));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_20881e76a_IsVoid((*((*_92929_m.alloc)._field_Func))._field_Decl.ptr())))) {
			_2172b2ac3_indent((*(_self_))._field_oc);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_2172b28c5_doneIndent((*(_self_))._field_oc);
	};
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _2171e9587_slice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814452_SliceExpr> _101226_m) {
	if (((*(_101226_m))._field_Elems.len() == 0LL)) {
		_2172c3c49_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101226_m.alloc)._field_ElemType);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_2172c3c49_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_101226_m))._field_ElemType);
	jule::Str _10203_size = _21ec9e60c_Itoa((*_101226_m.alloc)._field_Elems.len());;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_2172b2221_write((*(_self_))._field_oc, _10203_size);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2172b2221_write((*(_self_))._field_oc, _10203_size);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_101226_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aa04289:;
		if (it != expr_end) {
			jule::I64 _10307_i = it - expr->begin();
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_2171e6e25_possibleRefExpr(_self_, (*(_101226_m))._field_Elems[_10307_i]);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_21aa04289:;
			++it;
			_10307_i++;
			goto _iter_begin_21aa04289;
		}
		_iter_end_21aa04289:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _2171e9840_indexing(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814908_IndexingExpr> _104129_m) {
	{
		auto &_match_expr{ (*((*(_104129_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21aa08205:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_220c73ee8_Production))) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_2172b48a5_locInfo((*(_self_))._field_oc, &((*(_104129_m))._field_Token));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10524_s = _2088078b8_ReadStr((*((*(_104129_m))._field_Expr))._field_Model.unsafe_cast_ptr<_208799195_Const>().ptr());;
				_21720356e_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10524_s);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_10524_s.len()));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_2171e6e25_possibleRefExpr(_self_, (*((*(_104129_m))._field_Index))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_21aa0818e:;
	};
	{
		
		if ((_2089d459a_Map((*((*(_104129_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_21aa0e4c5:;
			{
				jule::Ptr<_2089de110_Map> _10658__map = _2089d459a_Map((*((*(_104129_m))._field_Expr))._field_Type);;
				jule::Ptr<_2087490bd_StructIns> _10668_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10658__map))._field_Key; (*it++) = (*_10658__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_208822372_FnIns> _10688_f = (*(_20874a135_FindMethod(_10668_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_10688_f));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_2171e6e25_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_2171e6e25_possibleRefExpr(_self_, (*((*_104129_m.alloc)._field_Index))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_220c73ee8_Production || (_2089d2c91_Ptr((*((*(_104129_m))._field_Expr))._field_Type.ptr()) != nullptr) || _20939e86b_IsExprComesFromBind(&((*_104129_m.alloc)._field_Expr))) {
			_case_begin_21aa08612:;
			{
				_2171e6e25_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_2171e6e25_possibleRefExpr(_self_, (*((*_104129_m.alloc)._field_Index))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_21aa0e3d7:;
			{
				_2171e6e25_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_2172b48a5_locInfo((*(_self_))._field_oc, &((*_104129_m.alloc)._field_Token));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_2171e6e25_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_21aa0b912:;
	};
}



inline void _2171e9ae8_unsafeIndexing(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da819c_UnsafeIndexingExpr> _109235_m) {
	_2171e6e25_possibleRefExpr(_self_, (*((*((*(_109235_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_220c73ee8_Production || (_2089d2c91_Ptr((*(*((*(_109235_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_2089d459a_Map((*((*((*(_109235_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_21aa1b658:;
			{
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_2171e6e25_possibleRefExpr(_self_, (*((*(*(_109235_m))._field_Node.alloc)._field_Index))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_21aa1890d:;
			{
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_2171e6e25_possibleRefExpr(_self_, (*((*(*(_109235_m))._field_Node.alloc)._field_Index))._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_21aa1b26d:;
	};
}



inline void _2171e9da1_anonFunc(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr> _110929_m) {
	jule::Bool _11103_closure = _20939ee76_IsClosure(&(_110929_m));;
	jule::Str _11113_ident = _2172b38d7_pushAnonFn((*(_self_))._field_oc, &(_110929_m));;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_2172c6169_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_110929_m))._field_Func);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_2172b2221_write((*(_self_))._field_oc, _11113_ident);
	if (_11103_closure) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_2172b2221_write((*(_self_))._field_oc, _11113_ident);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_2172b2221_write((*(_self_))._field_oc, _11113_ident);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_110929_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21aa264a9:;
			if (it != expr_end) {
				jule::I64 _11239_i = it - expr->begin();
				jule::Ptr<_20894d7de_Var> _112316_v = *it;
				{
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__21720a686_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _112316_v);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_2171e609a_var(_self_, _112316_v);
					if ((((*_110929_m.alloc)._field_Captured.len() - _11239_i) > 1LL)) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_21aa264a9:;
				++it;
				_11239_i++;
				goto _iter_begin_21aa264a9;
			}
			_iter_end_21aa264a9:;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_2172b2221_write((*(_self_))._field_oc, _11113_ident);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _2171ea159_mapExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208815662_MapExpr> _114028_m) {
	jule::Ptr<_2087490bd_StructIns> _11417_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_114028_m))._field_Kind))._field_Key; (*it++) = (*(*(_114028_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_208822372_FnIns> _11437_maker = (*(_20874a135_FindMethod(_11417_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_114028_m.alloc)._field_Entries.len() == 0LL)) {
		static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11437_maker));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_208822372_FnIns> _11507_f = (*(_20874a135_FindMethod(_11417_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_2172c4420_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_114028_m.alloc)._field_Kind);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11437_maker));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_114028_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aa33829:;
		if (it != expr_end) {
			jule::Ptr<_208815288_KeyValPairExpr> _116015_pair = *it;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11507_f));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_2171e6e25_possibleRefExpr(_self_, (*(_116015_pair))._field_Key);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_2171e6e25_possibleRefExpr(_self_, (*_116015_pair.alloc)._field_Val);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_21aa33829:;
			++it;
			goto _iter_begin_21aa33829;
		}
		_iter_end_21aa33829:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _2171ea412_slicing(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208815be5_SlicingExpr> _117528_m) {
	_2171e6e25_possibleRefExpr(_self_, (*(_117528_m))._field_Expr);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_220c73ee8_Production))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_2172b48a5_locInfo((*(_self_))._field_oc, &((*_117528_m.alloc)._field_Token));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_2171e6e25_possibleRefExpr(_self_, (*_117528_m.alloc)._field_Left);
	if (((*_117528_m.alloc)._field_Right != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_2171e6e25_possibleRefExpr(_self_, (*_117528_m.alloc)._field_Right);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ea6ba_traitSub(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208816278_TraitSubIdentExpr> _119129_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__2172096eb_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_119129_m))._field_Trt);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_2171e6e25_possibleRefExpr(_self_, (*_119129_m.alloc)._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_220c73ee8_Production))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_2172b48a5_locInfo((*(_self_))._field_oc, &((*_119129_m.alloc)._field_Token));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__217209124_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_119129_m.alloc)._field_Method));
}



inline void _2171ea973_structureSub(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208816b19_StructSubIdentExpr> _120733_m) {
	_2171e6e25_possibleRefExpr(_self_, (*((*(_120733_m))._field_Expr))._field_Model);
	if (((*_120733_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__21720a39a_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_120733_m.alloc)._field_Field))._field_Decl));
}



inline void _2171eac2b_array(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817389_ArrayExpr> _121626_m) {
	if ((((*((*(_121626_m))._field_Kind))._field_N == 0LL) || (((*(_121626_m))._field_Elems.len() == 0LL) && (!(_2172cd6e3_ableToInit(&((*((*_121626_m.alloc)._field_Kind))._field_Elem))))))) {
		_2172c4e59_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_121626_m))._field_Kind);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_121626_m))._field_Elems.len() == 2LL) && ((*(_121626_m))._field_Elems[1LL] == nullptr))) {
		_2172c4e59_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121626_m.alloc)._field_Kind);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_2171e6e25_possibleRefExpr(_self_, (*(_121626_m))._field_Elems[0LL]);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_2172c4e59_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_121626_m))._field_Kind);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_121626_m.alloc)._field_Elems.len() != (*((*_121626_m.alloc)._field_Kind))._field_N)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_121626_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aa50d1e:;
		if (it != expr_end) {
			jule::I64 _12497_i = it - expr->begin();
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_2171e6e25_possibleRefExpr(_self_, (*(_121626_m))._field_Elems[_12497_i]);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_21aa50d1e:;
			++it;
			_12497_i++;
			goto _iter_begin_21aa50d1e;
		}
		_iter_end_21aa50d1e:;
	};
	if ((((*_121626_m.alloc)._field_Elems.len() != (*((*_121626_m.alloc)._field_Kind))._field_N) && _2172cd6e3_ableToInit(&((*(*(_121626_m))._field_Kind.alloc)._field_Elem)))) {
		_217201e96_fillCollectionByDefault(_self_, &((*(*(_121626_m))._field_Kind.alloc)._field_Elem));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _2171eaed4_funcInsCommon(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208822372_FnIns> _126634_m) {
	_2172c64cc_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _126634_m);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171eb28c_funcIns(_self_, _126634_m);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171eb28c_funcIns(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208822372_FnIns> _127328_m) {
	if ((((*(_127328_m))._field_Decl != nullptr) && (*(*(_127328_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_208726760_Directive> _12754_d = _2093a152c_FindDirective(&((*(*(_127328_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12754_d != nullptr)) {
			_2172b24c9_writeBytes((*(_self_))._field_oc, _2172be805_concatAllParts((*_12754_d.alloc)._field_Args));
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_127328_m));
}



inline void _2171eb545_tuple(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817686_TupleExpr> _128426_m) {
	{
		auto expr = &((*(_128426_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aa5bb71:;
		if (it != expr_end) {
			jule::I64 _12858_i = it - expr->begin();
			jule::Ptr<_20899a9a1_Data> _128515_d = *it;
			{
				_2171e6e25_possibleRefExpr(_self_, (*(_128515_d))._field_Model);
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_128426_m))._field_Datas.len() - _12858_i) > 1LL)) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_2172b2ac3_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_21aa5bb71:;
			++it;
			_12858_i++;
			goto _iter_begin_21aa5bb71;
		}
		_iter_end_21aa5bb71:;
	};
}



inline void _2171eb7ed_newCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208818159_BuiltinNewCallExpr> _129528_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_129528_m))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_129528_m.alloc)._field_Init != nullptr)) {
		_2171e6e25_possibleRefExpr(_self_, (*_129528_m.alloc)._field_Init);
	} else if (_2172cd6e3_ableToInit(&((*_129528_m.alloc)._field_Type))) {
		_2172027b0_initExpr(_self_, (*_129528_m.alloc)._field_Type);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ebaa6_printCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817983_BuiltinPrintCallExpr> _130730_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_208822372_FnIns> _13097_f = _2093a2b27_FindFnGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_130730_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13097_f));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr(_self_, (*(*(_130730_m))._field_Expr.alloc)._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _2171ebd5e_printlnCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208817c80_BuiltinPrintlnCallExpr> _131632_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_208822372_FnIns> _13187_f = _2093a2b27_FindFnGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131632_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13187_f));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr(_self_, (*(*(_131632_m))._field_Expr.alloc)._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _2171ec117_panicCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208818533_BuiltinPanicCallExpr> _132530_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_2171e6e25_possibleRefExpr(_self_, (*(_132530_m))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_2172b48a5_locInfo((*(_self_))._field_oc, &((*_132530_m.alloc)._field_Token));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _2171ec3c0_errorCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881a139_BuiltinErrorCallExpr> _133330_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_20881e76a_IsVoid((*((*(_133330_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_133330_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_21aa6d0d3:;
				{
					jule::Ptr<_20894d7de_Var> _13385_v = (*((*(_133330_m))._field_Err))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
					if (((*(_13385_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_21aa6d06c:;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_2172cb7e0_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_133330_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_133330_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_21aa7256b:;
				{
					jule::Ptr<_20894d7de_Var> _13505_v = (*((*(_133330_m))._field_Err))._field_Model.unsafe_cast_ptr<_20894d7de_Var>();;
					if (((*(_13505_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_21aa72505:;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_2171e6e25_possibleRefExpr(_self_, (*((*(_133330_m))._field_Err))._field_Model);
	jule::I64 _13593_i = _2172b3c28_pushAnyType((*(_self_))._field_oc, (*(*(_133330_m))._field_Err.alloc)._field_Type);;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_13593_i));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _2171ec678_copyCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208819c60_BuiltinCopyCallExpr> _136529_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_136529_m))._field_Dest))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2171e6e25_possibleRefExpr(_self_, (*((*_136529_m.alloc)._field_Src))._field_Model);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ec931_lenCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088191b0_BuiltinLenCallExpr> _137328_m) {
	jule::Ptr<_2089de110_Map> _13747__map = _2089d459a_Map((*((*(_137328_m))._field_Expr))._field_Type.ptr());;
	if ((_13747__map != nullptr)) {
		jule::Ptr<_2087490bd_StructIns> _13768_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13747__map.alloc)._field_Key; (*it++) = (*_13747__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_208822372_FnIns> _13788_f = (*(_20874a135_FindMethod(_13768_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13788_f));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_2171e6e25_possibleRefExpr(_self_, (*(*(_137328_m))._field_Expr.alloc)._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_2171e6e25_possibleRefExpr(_self_, (*(*(_137328_m))._field_Expr.alloc)._field_Model);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _2171ecbd9_capCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088194ac_BuiltinCapCallExpr> _138928_m) {
	_2171e6e25_possibleRefExpr(_self_, (*((*(_138928_m))._field_Expr))._field_Model);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _2171ece92_deleteCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208819886_BuiltinDeleteCallExpr> _139431_m) {
	jule::Ptr<_2089de110_Map> _13957__map = _2089d459a_Map((*((*(_139431_m))._field_Dest))._field_Type.ptr());;
	if ((_13957__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1397:4"));;
	};
	jule::Ptr<_2087490bd_StructIns> _13997_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13957__map))._field_Key; (*it++) = (*_13957__map.alloc)._field_Val; __jule_collection; }));;
	;
	if (((*_139431_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_208822372_FnIns> _14028_f = (*(_20874a135_FindMethod(_13997_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14028_f));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_2171e6e25_possibleRefExpr(_self_, (*(*(_139431_m))._field_Dest.alloc)._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_2171e6e25_possibleRefExpr(_self_, (*(*(_139431_m))._field_Key.alloc)._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_208822372_FnIns> _14108_f = (*(_20874a135_FindMethod(_13997_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14108_f));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_2171e6e25_possibleRefExpr(_self_, (*(*(_139431_m))._field_Dest.alloc)._field_Model);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _2171ed24a_makeCallSlice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088189d9_BuiltinMakeCallExpr>* _141835_m) {
	jule::Ptr<_2089dc96b_Slc> _14197_slice = _2089d37ca_Slc((*((*(_141835_m))))._field_Type.ptr());;
	jule::Bool _14203_init = _2172cd6e3_ableToInit(&((*(_14197_slice))._field_Elem));;
	if (_14203_init) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_141835_m))))._field_Type);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_141835_m))))._field_Len);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_141835_m))))._field_Cap != nullptr)) {
		_2171e6e25_possibleRefExpr(_self_, (*((*(_141835_m))))._field_Cap);
	} else {
		_2171e6e25_possibleRefExpr(_self_, (*((*(_141835_m))))._field_Len);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14203_init))) {
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_21720224e_initCollection(_self_, &((*_14197_slice.alloc)._field_Elem));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _2171ed503_makeCallStr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088189d9_BuiltinMakeCallExpr>* _144233_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_2171e6e25_possibleRefExpr(_self_, (*((*(_144233_m))))._field_Len);
	if (((*((*(_144233_m))))._field_Cap != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_2171e6e25_possibleRefExpr(_self_, (*((*(_144233_m))))._field_Cap);
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ed7ab_makeCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2088189d9_BuiltinMakeCallExpr> _145329_m) {
	if ((_2089d37ca_Slc((*(_145329_m))._field_Type.ptr()) != nullptr)) {
		_2171ed24a_makeCallSlice(_self_, &(_145329_m));
		return;;
	};
	_2171ed503_makeCallStr(_self_, &(_145329_m));
}



inline void _2171eda64_pushToSlice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da8576_PushToSliceExpr> _146132_m) {
	;
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_2172c3c49_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_146132_m))._field_Elems))._field_ElemType);
	jule::Bool _14697_ptr = false;;
	{
		auto &_match_expr{ (*(_146132_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21aa95d97:;
			{
				jule::Ptr<_208812472_UnaryExpr> _14738_u = (*(_146132_m))._field_Dest.unsafe_cast_ptr<_208812472_UnaryExpr>();;
				if ((_2089d2c91_Ptr((*((*(_14738_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_2171e6e25_possibleRefExpr(_self_, (*(*(_14738_u))._field_Expr.alloc)._field_Model);
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14697_ptr=true;
					goto _match_end_21aa97ad0;
				};
				goto _case_begin_21aa97b46;
			}
		}
		else {
			_case_begin_21aa97b46:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_2171e6e25_possibleRefExpr(_self_, (*_146132_m.alloc)._field_Dest);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_21aa97ad0:;
	};
	if (((*(*(_146132_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14697_ptr) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_2171e6e25_possibleRefExpr(_self_, (*((*(_146132_m))._field_Elems))._field_Elems[0LL]);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14697_ptr) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa((*(*(_146132_m))._field_Elems.alloc)._field_Elems.len()));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_146132_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aaa13ad:;
		if (it != expr_end) {
			jule::Any _150715_e = *it;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14697_ptr) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_2171e6e25_possibleRefExpr(_self_, _150715_e);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_21aaa13ad:;
			++it;
			goto _iter_begin_21aaa13ad;
		}
		_iter_end_21aaa13ad:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2171edd1c_appendToSlice(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da8950_AppendToSliceExpr> _152134_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr(_self_, (*(_152134_m))._field_Dest);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_2171e6e25_possibleRefExpr(_self_, (*_152134_m.alloc)._field_Slice);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _2171ee0c5_appendCall(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208818db3_BuiltinAppendCallExpr> _152931_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_2171e6e25_possibleRefExpr(_self_, (*(_152931_m))._field_Dest);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_2171e6e25_possibleRefExpr(_self_, (*_152931_m.alloc)._field_Elements);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ee37d_sizeof(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881a436_SizeofExpr> _153727_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_2171e6e25_possibleRefExpr(_self_, (*(_153727_m))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ee636_alignof(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881aada_AlignofExpr> _154328_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_2171e6e25_possibleRefExpr(_self_, (*(_154328_m))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2171ee8de_runeLit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881acc7_RuneExpr> _154924_m) {
	if (((*(_154924_m))._field_Code <= 127LL)) {
		({
			auto except = _21e64d84c_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1551:4"));
		});
		jule::Str _15528_b = _217202e53_sbtoa(static_cast<jule::U8>((*_154924_m.alloc)._field_Code));;
		if (_15528_b.equal("'", 1)) {
			({
				auto except = _21e64d84c_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1554:5"));
			});
		};
		({
			auto except = _21e64d594_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15528_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1556:4"));
			(except.result);
		});
		({
			auto except = _21e64d84c_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1557:4"));
		});
		return;;
	};
	_217203c01_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>((*(_154924_m))._field_Code));
}



inline void _2171eeb97_structureStatic(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208816eb0_StructStaticIdentExpr> _156336_m) {
	static__217209410_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_156336_m))._field_Method));
}



inline void _2171eee50_backendEmit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881b14b_BackendEmitExpr> _156732_m) {
	if (((*(_156732_m))._field_Exprs.len() == 0LL)) {
		_2172b2221_write((*(_self_))._field_oc, (*_156732_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _15723_n = _21e64e3a8_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _15737_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*(_156732_m))._field_Exprs.len(), (*(_156732_m))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_156732_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aab14ab:;
		if (it != expr_end) {
			jule::I64 _15748_i = it - expr->begin();
			jule::Any _157415_expr = *it;
			{
				_2171e6e25_possibleRefExpr(_self_, _157415_expr);
				jule::Slice<jule::U8> _15768_buf = _21e64e8c5_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15737_args[_15748_i]=jule::Any(__jule_bytesToStr(_15768_buf.slice(_15723_n)), &__jule_any_type5);
				{
					_21e64eb7d_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15768_buf.slice(0LL, _15723_n));
				};
			}
			_iter_next_21aab14ab:;
			++it;
			_15748_i++;
			goto _iter_begin_21aab14ab;
		}
		_iter_end_21aab14ab:;
	};
	_2172b2221_write((*(_self_))._field_oc, _208a52184_Format((*_156732_m.alloc)._field_Code, _15737_args));
}



inline void _217200208_free(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_20881b448_FreeExpr> _158325_m) {
	_2171e6e25_possibleRefExpr(_self_, (*(_158325_m))._field_Expr);
	if (_220c738dd_RC) {
		_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _2172004b1_strComp(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da7520_StrCompExpr> _159228_m) {
	if ((*(_159228_m))._field_NotEq) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _15963_s = _2088078b8_ReadStr((*(_159228_m))._field_Right.ptr());;
	_2171e6e25_possibleRefExpr(_self_, (*_159228_m.alloc)._field_Left);
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_21720356e_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _15963_s);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_15963_s.len()));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_159228_m.alloc)._field_NotEq) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _217200769_emptyCompare(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da6bd4_EmptyCompareExpr> _160833_m) {
	if ((*(_160833_m))._field_Neg) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2171e6e25_possibleRefExpr(_self_, (*(_160833_m))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _217200a22_unsafeDeref(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da9126_UnsafeDerefExpr> _161732_m) {
	{
		
		if ((_2089d2a0a_Sptr((*((*((*(_161732_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_21aabed6b:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_2171e6e25_possibleRefExpr(_self_, (*(*((*(_161732_m))._field_Base))._field_Expr.alloc)._field_Model);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_21aabe9a3:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1624:4"));;
			}
		}
		_match_end_21aabe893:;
	};
}



inline void _217200cca_unsafeCasting(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da9654_UnsafeCastingExpr> _162834_m) {
	{
		
		if (_20939eb35_IsAny(&((*((*(_162834_m))._field_Base))._field_ExprType))) {
			_case_begin_21aac2a0b:;
			{
				_2171e6e25_possibleRefExpr(_self_, (*((*(*(_162834_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_2089d2a0a_Sptr((*(*(_162834_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_2089d2a0a_Sptr((*((*(_162834_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_162834_m))._field_Base.alloc)._field_Type);
				};
				_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_21aac2643:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1641:4"));;
			}
		}
		_match_end_21aac2533:;
	};
}



inline void _217201083_strConcat(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216da64a8_StrConcatExpr> _164530_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ jule::Int size = 0; ", 23));
	{
		auto expr = &((*(_164530_m))._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aac8913:;
		if (it != expr_end) {
			jule::I64 _16477_i = it - expr->begin();
			jule::Any _164710_p = *it;
			{
				jule::Str _16484_ident = (jule::Str::lit("part", 4) + _21ec9e60c_Itoa(_16477_i));;
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str ", 10));
				_2172b2221_write((*(_self_))._field_oc, _16484_ident);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = std::move(", 13));
				_2171e6e25_possibleRefExpr(_self_, _164710_p);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); size += ", 11));
				_2172b2221_write((*(_self_))._field_oc, _16484_ident);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".len(); ", 8));
			}
			_iter_next_21aac8913:;
			++it;
			_16477_i++;
			goto _iter_begin_21aac8913;
		}
		_iter_end_21aac8913:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Slice<jule::U8> buf; buf.alloc_new(0, size); ", 51));
	{
		auto expr = &((*_164530_m.alloc)._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aac866b:;
		if (it != expr_end) {
			jule::I64 _16587_i = it - expr->begin();
			{
				jule::Str _16594_ident = (jule::Str::lit("part", 4) + _21ec9e60c_Itoa(_16587_i));;
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("buf.append(", 11));
				_2172b2221_write((*(_self_))._field_oc, _16594_ident);
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_21aac866b:;
			++it;
			_16587_i++;
			goto _iter_begin_21aac866b;
		}
		_iter_end_21aac866b:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); })", 128));
}



inline void _21720133b_strFromBytes(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_216d93a39_StrFromBytes> _166733_m) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::unsafe_from_bytes(", 29));
	_2171e6e25_possibleRefExpr(_self_, (*(_166733_m))._field_Expr);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2172015e4_model(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Any _167326_m) {
	{
		auto &_match_expr{ _167326_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_21aad19b5:;
			{
				_2172b2221_write((*(_self_))._field_oc, _167326_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_21aad1bc4:;
			{
				_2172b2221_write((*(_self_))._field_oc, (*(_167326_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_21aad1c3a:;
			{
				_2172c6840_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _167326_m.unsafe_cast_ptr<_2089ce661_Type>());
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21aad1ca1:;
			{
				_2171e4494_constant(_self_, _167326_m.unsafe_cast_ptr<_208799195_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21aad1d17:;
			{
				_2171e609a_var(_self_, _167326_m.unsafe_cast_ptr<_20894d7de_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_21aad1d7d:;
			{
				_2171e6353_structureIns(_self_, _167326_m.unsafe_cast_ptr<_2087490bd_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_21aad1de4:;
			{
				_2171eaed4_funcInsCommon(_self_, _167326_m.unsafe_cast_ptr<_208822372_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_21aad2a60:;
			{
				_2171e5363_unsafeBinary(_self_, (*(_167326_m.unsafe_cast_ptr<_216da7da0_UnsafeBinaryExpr>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21aad2ac6:;
			{
				_2171e5ce2_binary(_self_, _167326_m.unsafe_cast_ptr<_208812098_BinaryExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21aad2b3c:;
			{
				_2171e660b_unary(_self_, _167326_m.unsafe_cast_ptr<_208812472_UnaryExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_21aad2ba3:;
			{
				_2171e68b4_structureLit(_self_, _167326_m.unsafe_cast_ptr<_208812d46_StructLitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_21aad2c19:;
			{
				_2171e6b6c_allocStructure(_self_, _167326_m.unsafe_cast_ptr<_208813143_AllocStructLitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21aad2c80:;
			{
				_2171e75eb_casting(_self_, _167326_m.unsafe_cast_ptr<_2088136c6_CastingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21aad2d07:;
			{
				_2171e92ce_funcCall(_self_, _167326_m.unsafe_cast_ptr<_208814078_FnCallExpr>(), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_21aad2d7e:;
			{
				_2171e9587_slice(_self_, _167326_m.unsafe_cast_ptr<_208814452_SliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_21aad2e06:;
			{
				_2171eac2b_array(_self_, _167326_m.unsafe_cast_ptr<_208817389_ArrayExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_21aad2e7d:;
			{
				_2171e9ae8_unsafeIndexing(_self_, _167326_m.unsafe_cast_ptr<_216da819c_UnsafeIndexingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21aad3005:;
			{
				_2171e9840_indexing(_self_, _167326_m.unsafe_cast_ptr<_208814908_IndexingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_21aad307c:;
			{
				_2171e9da1_anonFunc(_self_, _167326_m.unsafe_cast_ptr<_208814dae_AnonFnExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_21aad3104:;
			{
				_2171ea159_mapExpr(_self_, _167326_m.unsafe_cast_ptr<_208815662_MapExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_21aad317b:;
			{
				_2171ea412_slicing(_self_, _167326_m.unsafe_cast_ptr<_208815be5_SlicingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_21aad3203:;
			{
				_2171ea6ba_traitSub(_self_, _167326_m.unsafe_cast_ptr<_208816278_TraitSubIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21aad327a:;
			{
				_2171ea973_structureSub(_self_, _167326_m.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_21aad3302:;
			{
				_2171eb545_tuple(_self_, _167326_m.unsafe_cast_ptr<_208817686_TupleExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_21aad3379:;
			{
				_2171ebaa6_printCall(_self_, _167326_m.unsafe_cast_ptr<_208817983_BuiltinPrintCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_21aad3401:;
			{
				_2171ebd5e_printlnCall(_self_, _167326_m.unsafe_cast_ptr<_208817c80_BuiltinPrintlnCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_21aad3478:;
			{
				_2171eb7ed_newCall(_self_, _167326_m.unsafe_cast_ptr<_208818159_BuiltinNewCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_21aad3500:;
			{
				_2171ec117_panicCall(_self_, _167326_m.unsafe_cast_ptr<_208818533_BuiltinPanicCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_21aad3577:;
			{
				_2171ec3c0_errorCall(_self_, _167326_m.unsafe_cast_ptr<_20881a139_BuiltinErrorCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_21aad35ee:;
			{
				_2171ed7ab_makeCall(_self_, _167326_m.unsafe_cast_ptr<_2088189d9_BuiltinMakeCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_21aad3676:;
			{
				_2171ee0c5_appendCall(_self_, _167326_m.unsafe_cast_ptr<_208818db3_BuiltinAppendCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_21aad36ed:;
			{
				_2171ec678_copyCall(_self_, _167326_m.unsafe_cast_ptr<_208819c60_BuiltinCopyCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_21aad3775:;
			{
				_2171ec931_lenCall(_self_, _167326_m.unsafe_cast_ptr<_2088191b0_BuiltinLenCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_21aad37ec:;
			{
				_2171ecbd9_capCall(_self_, _167326_m.unsafe_cast_ptr<_2088194ac_BuiltinCapCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_21aad3874:;
			{
				_2171ece92_deleteCall(_self_, _167326_m.unsafe_cast_ptr<_208819886_BuiltinDeleteCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_21aad38eb:;
			{
				_2171ee37d_sizeof(_self_, _167326_m.unsafe_cast_ptr<_20881a436_SizeofExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_21aad3973:;
			{
				_2171ee636_alignof(_self_, _167326_m.unsafe_cast_ptr<_20881aada_AlignofExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_21aad39ea:;
			{
				_2171ee8de_runeLit(_self_, _167326_m.unsafe_cast_ptr<_20881acc7_RuneExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_21aad3a72:;
			{
				_2171eeb97_structureStatic(_self_, _167326_m.unsafe_cast_ptr<_208816eb0_StructStaticIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_21aad3ae9:;
			{
				_2171eee50_backendEmit(_self_, _167326_m.unsafe_cast_ptr<_20881b14b_BackendEmitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_21aad3b71:;
			{
				_217200208_free(_self_, _167326_m.unsafe_cast_ptr<_20881b448_FreeExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_21aad3be8:;
			{
				_2172004b1_strComp(_self_, _167326_m.unsafe_cast_ptr<_216da7520_StrCompExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_21aad3c70:;
			{
				_2171e609a_var(_self_, (*(_167326_m.unsafe_cast_ptr<_216da6ed1_RefExpr>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_21aad3ce7:;
			{
				_217200769_emptyCompare(_self_, _167326_m.unsafe_cast_ptr<_216da6bd4_EmptyCompareExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_21aad3d6e:;
			{
				_217200a22_unsafeDeref(_self_, _167326_m.unsafe_cast_ptr<_216da9126_UnsafeDerefExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_21aad3de6:;
			{
				_217200cca_unsafeCasting(_self_, _167326_m.unsafe_cast_ptr<_216da9654_UnsafeCastingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_21aad3e6d:;
			{
				_2171e92ce_funcCall(_self_, (*(_167326_m.unsafe_cast_ptr<_216da6244_FnCallIgnoreExceptionalExpr>()))._field_Base, true);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_21aad3ee5:;
			{
				_217201083_strConcat(_self_, _167326_m.unsafe_cast_ptr<_216da64a8_StrConcatExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_21aad406c:;
			{
				_21720133b_strFromBytes(_self_, _167326_m.unsafe_cast_ptr<_216d93a39_StrFromBytes>());
			}
		}
		else {
			_case_begin_21aad1b5d:;
			{
				_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_21aad1ae7:;
	};
}



inline jule::Bool _217201935_handleFieldByDefault(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_208748496_FieldIns>* _177942_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_177942_f))))._field_Default != nullptr)) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__21720a39a_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_177942_f))))._field_Decl));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_2171e6e25_possibleRefExpr(_self_, (*(*((*(_177942_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_2172cd6e3_ableToInit(&((*((*(_177942_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__21720a39a_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_177942_f))))._field_Decl));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_2172027b0_initExpr(_self_, (*((*(_177942_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _217201bdd_initStructLit(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _180035_s) {
	if (_2093a0cce_IsStructBinded((*(_180035_s)))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_2171e6353_structureIns(_self_, (*(_180035_s)));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_2171e6353_structureIns(_self_, (*(_180035_s)));
	_2172b2221_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18097_inited = false;;
	{
		auto expr = &((*((*(_180035_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab0591d:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> _181015_f = *it;
			{
				if (_18097_inited) {
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18097_inited=_217201935_handleFieldByDefault(_self_, &(_181015_f));
			}
			_iter_next_21ab0591d:;
			++it;
			goto _iter_begin_21ab0591d;
		}
		_iter_end_21ab0591d:;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _217201e96_fillCollectionByDefault(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089ce661_Type>* _182245_elem) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2172027b0_initExpr(_self_, (*(_182245_elem)));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _21720224e_initCollection(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089ce661_Type>* _183736_elem) {
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_217201e96_fillCollectionByDefault(_self_, _183736_elem);
}



inline void _217202507_initArray(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089dec8c_Arr>* _185131_arr) {
	if (((*((*(_185131_arr))))._field_N == 0LL)) {
		_2172c4e59_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185131_arr)));
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_2172c4e59_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185131_arr)));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_21720224e_initCollection(_self_, &((*((*(_185131_arr))))._field_Elem));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _2172027b0_initExpr(jule::Ptr<_2171e2bce_exprCoder> _self_, jule::Ptr<_2089ce661_Type> _186529_t) {
	if (_2089d1ec1_NilCompatible(_186529_t.ptr())) {
		if ((_2089d459a_Map(_186529_t) != nullptr)) {
			_2172c6840_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186529_t);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_2089d2c91_Ptr(_186529_t.ptr()) != nullptr)) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_2172c6840_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186529_t);
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_2089dd560_Tuple> _18807_tup = _2089d4831_Tup(_186529_t.ptr());;
	if ((_18807_tup != nullptr)) {
		_2172cb119_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18807_tup);
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_18807_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21ab1ca34:;
			if (it != expr_end) {
				jule::I64 _18849_i = it - expr->begin();
				jule::Ptr<_2089ce661_Type> _188416_tt = *it;
				{
					if ((!(_2172cd9bd_shouldInitialized(&(_188416_tt))))) {
						goto _iter_next_21ab1ca34;
					};
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_2172b2221_write((*(_self_))._field_oc, _21ec9e60c_Itoa(_18849_i));
					_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_2172027b0_initExpr(_self_, _188416_tt);
					if ((((*(_18807_tup))._field_Types.len() - _18849_i) > 1LL)) {
						_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_21ab1ca34:;
				++it;
				_18849_i++;
				goto _iter_begin_21ab1ca34;
			}
			_iter_end_21ab1ca34:;
		};
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_20882c17e_Enum> _18997_enm = _2089d3027_Enum(_186529_t);;
	if ((_18997_enm != nullptr)) {
		_2172015e4_model(_self_, (*((*((*((*_18997_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_2089d846c_Prim> _19043_prim = _2089d2774_Prim(_186529_t);;
	if ((_19043_prim != nullptr)) {
		if (_20889d222_IsNum((*_19043_prim.alloc)._field_Kind)) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_2089db6a1_IsBool(_19043_prim)) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_2089db937_IsStr(_19043_prim)) {
			_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_2089d3544_Arr(_186529_t) != nullptr)) {
		jule::Ptr<_2089dec8c_Arr> _19168_arr = _2089d3544_Arr(_186529_t);;
		_217202507_initArray(_self_, &(_19168_arr));
		return;;
	};
	jule::Ptr<_2087490bd_StructIns> _19207_s = _2089d3ce7_Struct(_186529_t);;
	if ((_19207_s != nullptr)) {
		_217201bdd_initStructLit(_self_, &(_19207_s));
		return;;
	};
	_2172c6840_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186529_t);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _2172053a6_TestCoder_eq(_2172053a6_TestCoder *_self_, _2172053a6_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_2172053a6_TestCoder> static__21720585c_New(jule::Ptr<_2172b1a06_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_2172053a6_TestCoder>(_2172053a6_TestCoder{._field_t=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_20890d040_ImportInfo> _217205ae3_findTestingPackage(jule::Ptr<_2172053a6_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab31bad:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_21ab31bad:;
			++it;
			goto _iter_begin_21ab31bad;
		}
		_iter_end_21ab31bad:;
	};
	return nullptr;;
}



inline void _217205d9b_appendTest(jule::Ptr<_2172053a6_TestCoder> _self_, jule::Ptr<_208822372_FnIns> _3531_f) {
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172065d8_callTmReset(_self_);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_21720356e_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_2172b2ac3_indent((*(_self_))._field_oc);
	static__217209410_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _217206154_appendPackageTests(jule::Ptr<_2172053a6_TestCoder> _self_, jule::Ptr<_2089107b2_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab3838a:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21ab38da2:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _5216_f = *it;
						{
							if (_2093a18e5_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_217205d9b_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_21ab38da2:;
						++it;
						goto _iter_begin_21ab38da2;
					}
					_iter_end_21ab38da2:;
				};
			}
			_iter_next_21ab3838a:;
			++it;
			goto _iter_begin_21ab3838a;
		}
		_iter_end_21ab3838a:;
	};
}



inline jule::Bool _2172063da_readyTestingPackage(jule::Ptr<_2172053a6_TestCoder> _self_) {
	jule::Ptr<_20890d040_ImportInfo> _617_p = _217205ae3_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_20890e250_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_20874a135_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_20874a135_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_20874a135_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _2172065d8_callTmReset(jule::Ptr<_2172053a6_TestCoder> _self_) {
	static__217209124_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _2172067d6_callTmFailed(jule::Ptr<_2172053a6_TestCoder> _self_) {
	static__217209124_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _2172069d4_callTmSkipped(jule::Ptr<_2172053a6_TestCoder> _self_) {
	static__217209124_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _217206bd2_Serialize(jule::Ptr<_2172053a6_TestCoder> _self_) {
	_2172be272_serializeHead((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	if ((!(_2172063da_readyTestingPackage(_self_)))) {
		_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_2172b28c5_doneIndent((*(_self_))._field_oc);
		_2172bd55c_end((*(_self_))._field_oc);
		return;;
	};
	_21e64c5b5_Builder _1097_tb = static__21e64ce12_New(40LL);;
	_2172c4ae6_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_2172c2a39_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _21e64e8c5_Buf(&_1097_tb));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_2172b24c9_writeBytes((*(_self_))._field_oc, _21e64e8c5_Buf(&_1097_tb));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_2172b26c7_addIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_2172067d6_callTmFailed(_self_);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_2172069d4_callTmSkipped(_self_);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_217206154_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_2172b28c5_doneIndent((*(_self_))._field_oc);
	_2172b2ac3_indent((*(_self_))._field_oc);
	_2172b2221_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2172bd55c_end((*(_self_))._field_oc);
}








inline jule::Bool _217208002_identCoder_eq(_217208002_identCoder *_self_, _217208002_identCoder _other_) { return true; }

inline void static__217208541_writeIdentTo(_21e64c5b5_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab5a258:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_21ab5a5dd;
				};
			}
			_iter_next_21ab5a258:;
			++it;
			goto _iter_begin_21ab5a258;
		}
		_iter_end_21ab5a258:;
	};
	({
		auto except = _21e64d594_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_21ab5a5dd:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_21ab5b18d:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _21e64d84c_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_21ab5b18d;
				};
				({
					auto except = _21e64d594_WriteStr(_2630_buf, _21ec9e343_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_21ab5b18d:;
			it += len;
			goto _iter_begin_21ab5b18d;
		}
	};
}



inline void static__2172088d7_toOut(_21e64c5b5_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _21e64d84c_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _21e64d594_WriteStr(_5423_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _21e64d84c_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__217208541_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__217208d38_toLocal(_21e64c5b5_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _21e64d84c_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_6925_buf, _21ec9e60c_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_6925_buf, _21ec9e60c_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__217208541_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__217209124_func(_21e64c5b5_Builder* _7722_buf, jule::Ptr<_20881e2b4_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_21ab603d4:;
			{
				({
					auto except = _21e64d594_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_20881ea01_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_21ab6047d:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _21e64d594_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_21ab602b3:;
	};
	jule::Ptr<_208726760_Directive> _873_export = _2093a152c_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _21e64d594_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__2172088d7_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__217209410_funcIns(_21e64c5b5_Builder* _9525_buf, jule::Ptr<_208822372_FnIns>* _9553_f) {
	if (_20882383a_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _21e64d594_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*((*(_9553_f))))._field_Decl))._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__217209124_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__2172088d7_toOut(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__2172096eb_traitDecl(_21e64c5b5_Builder* _11027_buf, jule::Ptr<_2088299c8_Trait> _11050_t) {
	static__2172088d7_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__2172099d7_param(_21e64c5b5_Builder* _11423_buf, jule::Ptr<_20881c7e0_Param>* _11447_p) {
	if ((_2087144c8_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _20871420e_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_20881ce3e_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _21e64d594_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__217208d38_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__217208d38_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*(*((*(_11447_p))))._field_Token.alloc)._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__217209cc3_structure(_21e64c5b5_Builder* _12927_buf, jule::Ptr<_208746230_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_2093a18e5_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _21e64d594_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _21e64d594_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__2172088d7_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__21720a0ae_structureIns(_21e64c5b5_Builder* _14030_buf, jule::Ptr<_2087490bd_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__217209cc3_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__2172088d7_toOut(_14030_buf, (*((*((*(_14054_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__21720a39a_field(_21e64c5b5_Builder* _14823_buf, jule::Ptr<_208744e10_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _21e64d594_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _21e64d594_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__217208541_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__21720a686_var(_21e64c5b5_Builder* _15821_buf, jule::Ptr<_20894d7de_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_21ab6ee4e:;
			{
				({
					auto except = _21e64d594_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_21ab70713:;
			{
				({
					auto except = _21e64d594_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_21ab70779:;
			{
				({
					auto except = _21e64d594_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder == -1LL)) {
			_case_begin_21ab6e866:;
			{
				({
					auto except = _21e64d594_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder >= 0LL)) {
			_case_begin_21ab6e8cc:;
			{
				({
					auto except = _21e64d594_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(_15821_buf, _21ec9e60c_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Scope != nullptr)) {
			_case_begin_21ab6e943:;
			{
				static__217208d38_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_21ab6e800:;
			{
				jule::Ptr<_208726760_Directive> _1764_export = _2093a152c_FindDirective(&((*_15848_v.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _21e64d594_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__2172088d7_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_21ab6e6e0:;
	};
}



inline void static__21720a972_iterBegin(_21e64c5b5_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _21e64d594_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_18527_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__21720ac5d_iterEnd(_21e64c5b5_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _21e64d594_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_19025_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__21720b049_iterNext(_21e64c5b5_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _21e64d594_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_19526_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__21720b335_label(_21e64c5b5_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _21e64d594_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_20023_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__21720b621_matchEnd(_21e64c5b5_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _21e64d594_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_20526_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__21720b90c_caseBegin(_21e64c5b5_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _21e64d594_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_21027_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _2172ae251_SerializationInfo_eq(_2172ae251_SerializationInfo *_self_, _2172ae251_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _2172ae66e_traitCast_eq(_2172ae66e_traitCast *_self_, _2172ae66e_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _2172aea48_anonHash_eq(_2172aea48_anonHash *_self_, _2172aea48_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _2172b0263_metadata_eq(_2172b0263_metadata *_self_, _2172b0263_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_2172b1a06_ObjectCoder> static__2172b1e68_New(jule::Ptr<_20939938d_IR>* _11921_ir, _2172ae251_SerializationInfo _11935_info) {
	jule::Ptr<_2172b1a06_ObjectCoder> _1207_oc = jule::new_ptr<_2172b1a06_ObjectCoder>(_2172b1a06_ObjectCoder{._field_Buf=_21e64c5b5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_21e64c5b5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_21e64c5b5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_21e64c5b5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_21e64c5b5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_21e64c5b5_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11921_ir)), ._field_info=_11935_info, ._field_anons=jule::Slice<jule::Ptr<_2172aea48_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__21a63e3e1_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_2172ae66e_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_208822372_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_2172aee66_traitHash>>(nullptr), ._field_traitMetMap=static__21a686ed8_make(), ._field_ec=jule::Ptr<_2171e2bce_exprCoder>(nullptr), ._field_sc=jule::Ptr<_2171d6b29_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_2172c163c_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_2172b0263_metadata{._field_concurrent=false}});;
	(*(_1207_oc))._field_ec=static__2171e30ca_new(&(_1207_oc));
	(*(_1207_oc))._field_sc=static__2171d7311_new(&(_1207_oc));
	(*(_1207_oc))._field_tc=static__2172c1b8c_new(&(_1207_oc));
	return _1207_oc;;
}



inline void _2172b2221_write(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Str _13222_s) {
	({
		auto except = _21e64d594_WriteStr(&(*(_self_))._field_Buf, _13222_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:133:3"));
		(except.result);
	});
}



inline void _2172b24c9_writeBytes(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Slice<jule::U8> _13627_b) {
	({
		auto except = _21e64d253_Write(&(*(_self_))._field_Buf, _13627_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:137:3"));
		(except.result);
	});
}



inline void _2172b26c7_addIndent(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _2172b28c5_doneIndent(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _2172b2ac3_indent(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	({
		auto except = _21e64d253_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:152:3"));
		(except.result);
	});
}



inline jule::I64 _2172b2e14_findAnyType(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089ce661_Type>* _15533_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab82d52:;
		if (it != expr_end) {
			jule::I64 _1568_i = it - expr->begin();
			jule::Ptr<_2089ce661_Type> _15615_at = *it;
			{
				if (_2089ced9d_Equal(_15615_at, (*(_15533_t)))) {
					return _1568_i;;
				};
			}
			_iter_next_21ab82d52:;
			++it;
			_1568_i++;
			goto _iter_begin_21ab82d52;
		}
		_iter_end_21ab82d52:;
	};
	return -1LL;;
}



inline jule::I64 _2172b3255_pushCoSpawn(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns> _16432_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab838e1:;
		if (it != expr_end) {
			jule::I64 _1657_i = it - expr->begin();
			jule::Ptr<_208822372_FnIns> _16510_sf = *it;
			{
				if (((*(_16510_sf))._field_Params.len() == (*(_16432_f))._field_Params.len())) {
					{
						auto expr = &((*_16510_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21ab85481:;
						if (it != expr_end) {
							jule::I64 _1679_j = it - expr->begin();
							jule::Ptr<_20882121c_ParamIns> *_16712_sp = it;
							{
								if ((!(_2089ced9d_Equal((*((*(_16712_sp))))._field_Type, (*((*(_16510_sf))._field_Params[_1679_j]))._field_Type)))) {
									goto _iter_end_21ab85481;
								};
							}
							_iter_next_21ab85481:;
							++it;
							_1679_j++;
							goto _iter_begin_21ab85481;
						}
						_iter_end_21ab85481:;
					};
					return _1657_i;;
				};
			}
			_iter_next_21ab838e1:;
			++it;
			_1657_i++;
			goto _iter_begin_21ab838e1;
		}
		_iter_end_21ab838e1:;
	};
	jule::I64 _1753_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1763_is = _21ec9e60c_Itoa(_1753_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_208822372_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16432_f; __jule_collection; }));
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:178:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:184:3"));
	});
	_2172c64cc_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16432_f);
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:186:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	{
		auto expr = &((*(_16432_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab8a91a:;
		if (it != expr_end) {
			jule::I64 _1928_j = it - expr->begin();
			jule::Ptr<_20882121c_ParamIns> _19215_p = *it;
			{
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:193:4"));
				});
				_2172c6840_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19215_p))._field_Type);
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:195:4"));
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _21ec9e60c_Itoa(_1928_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
				});
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
			}
			_iter_next_21ab8a91a:;
			++it;
			_1928_j++;
			goto _iter_begin_21ab8a91a;
		}
		_iter_end_21ab8a91a:;
	};
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:201:3"));
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	{
		
		if ((_220c6c8d7_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_21ab90821:;
			{
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:207:4"));
					(except.result);
				});
			}
		}
		else if (_21e660d59_IsUnix(_220c6c8d7_OS)) {
			_case_begin_21ab904e1:;
			{
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:209:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_21ab87384:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:211:4"));;
			}
		}
		_match_end_21ab9047a:;
	};
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:213:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	;
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:216:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	{
		auto expr = &((*_16432_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab98296:;
		if (it != expr_end) {
			jule::I64 _2377_j = it - expr->begin();
			{
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:238:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _21ec9e60c_Itoa(_2377_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				if ((((*_16432_f.alloc)._field_Params.len() - _2377_j) > 1LL)) {
					({
						auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:243:5"));
						(except.result);
					});
				};
			}
			_iter_next_21ab98296:;
			++it;
			_2377_j++;
			goto _iter_begin_21ab98296;
		}
		_iter_end_21ab98296:;
	};
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:246:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:248:3"));
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	{
		
		if ((_220c6c8d7_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_21ab9c861:;
			{
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:254:4"));
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
					(except.result);
				});
			}
		}
		else if (_21e660d59_IsUnix(_220c6c8d7_OS)) {
			_case_begin_21ab9c4ed:;
			{
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:257:4"));
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_21ab9278a:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:260:4"));;
			}
		}
		_match_end_21ab9c487:;
	};
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:262:3"));
		(except.result);
	});
	return _1753_i;;
}



inline jule::I64 _2172b3596_pushDealloc(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089ce661_Type> _26732_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab9ed5d:;
		if (it != expr_end) {
			jule::I64 _2687_i = it - expr->begin();
			jule::Ptr<_2089ce661_Type> _26810_dt = *it;
			{
				if (_2089ced9d_Equal(_26810_dt, _26732_t)) {
					return _2687_i;;
				};
			}
			_iter_next_21ab9ed5d:;
			++it;
			_2687_i++;
			goto _iter_begin_21ab9ed5d;
		}
		_iter_end_21ab9ed5d:;
	};
	jule::I64 _2733_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26732_t; __jule_collection; }));
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:275:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_deallocObj, _21ec9e60c_Itoa(_2733_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	_2172c6840_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26732_t);
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:279:3"));
		(except.result);
	});
	return _2733_i;;
}



inline jule::Str _2172b38d7_pushAnonFn(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr>* _28332_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28332_m))))._field_Func))._field_CalledCo);
	jule::Bool _2863_closure = _20939ee76_IsClosure(_28332_m);;
	if (_2863_closure) {
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:289:4"));
			(except.result);
		});
		jule::I64 _2904_l = _21e64e3a8_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:291:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28332_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_21e64e8c5_Buf(&(*_self_.alloc)._field_anonObj).slice(_2904_l));
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:294:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28332_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21aba7c01:;
			if (it != expr_end) {
				jule::Ptr<_20894d7de_Var> _29516_v = *it;
				{
					({
						auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:296:5"));
					});
					_2172c6840_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29516_v))._field_TypeSym))._field_Type);
					({
						auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:298:5"));
					});
					if ((*_29516_v.alloc)._field_Reference) {
						({
							auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:300:6"));
						});
					};
					static__21720a686_var(&((*_self_.alloc)._field_anonObj), _29516_v);
					({
						auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:303:5"));
						(except.result);
					});
				}
				_iter_next_21aba7c01:;
				++it;
				goto _iter_begin_21aba7c01;
			}
			_iter_end_21aba7c01:;
		};
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:305:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:308:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28332_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_2172aea48_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2172aea48_anonHash>(_2172aea48_anonHash{._field_expr=(*(_28332_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_2172b9778_anonFuncInsDecl(_self_, _28332_m, __jule_func_result);
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:321:3"));
	});
	return __jule_func_result;;
}



inline jule::I64 _2172b3c28_pushAnyType(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089ce661_Type> _32532_t) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=_2172b2e14_findAnyType(_self_, &(_32532_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32532_t; __jule_collection; }));
	jule::Str _3323_si = _21ec9e60c_Itoa(__jule_func_result);;
	if ((_2089d2a0a_Sptr(_32532_t.ptr()) != nullptr)) {
		_21e64c5b5_Builder _3348_elemKind = static__21e64ce12_New(40LL);;
		_2172c6840_kind((*_self_.alloc)._field_tc.ptr(), &(_3348_elemKind), (*(_2089d2a0a_Sptr(_32532_t)))._field_Elem);
		jule::I64 _3384_di = _2172b3596_pushDealloc(_self_, (*(_2089d2a0a_Sptr(_32532_t)))._field_Elem);;
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:341:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _21ec9e60c_Itoa(_3384_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:349:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		_2172c2a39_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _21e64e8c5_Buf(&_3348_elemKind));
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:353:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
	} else {
		_21e64c5b5_Builder _3578_kindB = static__21e64ce12_New(40LL);;
		_2172c6840_kind((*_self_.alloc)._field_tc.ptr(), &(_3578_kindB), _32532_t);
		jule::Str _3594_kind = _21e64de24_Str(&_3578_kindB);;
		jule::I64 _3624_di = _2172b3596_pushDealloc(_self_, _32532_t);;
		jule::Str _3678_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3678_lmodel+=_3594_kind;
		_3678_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3708_rmodel = _3678_lmodel;;
		_3708_rmodel+=jule::Str::lit("other)", 6);
		_3678_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:374:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		if (_2089d171d_Comparable(_32532_t.ptr())) {
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:378:5"));
				(except.result);
			});
			_2171e50aa__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3678_lmodel), &(_3708_rmodel), &(_32532_t), &(_32532_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:380:5"));
				(except.result);
			});
		} else {
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:382:5"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			jule::I64 _3859_n = _21e64e3a8_Len(&(*_self_.alloc)._field_anyObj);;
			_21720323e_cstrBytes(&((*_self_.alloc)._field_anyObj), _2089cea5c_Str(_32532_t.ptr()));
			_3859_n=(_21e64e3a8_Len(&(*_self_.alloc)._field_anyObj) - _3859_n);
			_3859_n+=37LL;
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:389:5"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _21ec9e60c_Itoa(_3859_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
		};
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:395:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		jule::Ptr<_208822372_FnIns> _3988_f = _2093a2b27_FindFnGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32532_t; __jule_collection; }));;
		static__217209410_funcIns(&((*_self_.alloc)._field_anyObj), &(_3988_f));
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:400:4"));
			(except.result);
		});
		if ((_2089d2c91_Ptr(_32532_t.ptr()) == nullptr)) {
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:402:5"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3594_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
		} else {
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3594_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:405:5"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
		};
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:408:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:411:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _21ec9e60c_Itoa(_3624_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _2172b3ed1_pushResultIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns>* _42535_f) {
	jule::Str _4263_s = __jule_bytesToStr(_2172cbaed_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42535_f))))._field_Result)));;
	jule::Bool _4276_ok;
	_21a63eaa6_lookup((*_self_.alloc)._field_resultMap, _4263_s, nullptr, &(_4276_ok));
	if (_4276_ok) {
		return;;
	};
	(*_21a63ed5e_set(((*_self_.alloc)._field_resultMap).ptr(), _4263_s))=false;
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:432:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, _4263_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	{
		auto expr = &((*(_2089d4831_Tup((*((*(_42535_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21abcbb37:;
		if (it != expr_end) {
			jule::I64 _4358_i = it - expr->begin();
			jule::Ptr<_2089ce661_Type> _43515_t = *it;
			{
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:436:4"));
				});
				_2172c6840_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43515_t);
				({
					auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:438:4"));
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, _21ec9e60c_Itoa(_4358_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
			}
			_iter_next_21abcbb37:;
			++it;
			_4358_i++;
			goto _iter_begin_21abcbb37;
		}
		_iter_end_21abcbb37:;
	};
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:443:3"));
		(except.result);
	});
}



inline void _2172b4289_pushResult(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _44632_f) {
	if ((_20881e76a_IsVoid((*(_44632_f)).ptr()) || ((*((*((*(_44632_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4507_n = (*((*(_44632_f))))._field_Instances.len();;
	if (((*((*(_44632_f))))._field_Generics.len() == 0LL)) {
		_4507_n=1LL;
	};
	{
		auto expr = (*((*(_44632_f))))._field_Instances.slice(0LL, _4507_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_21abd1b81:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _45415_ins = *it;
			{
				_2172b3ed1_pushResultIns(_self_, &(_45415_ins));
			}
			_iter_next_21abd1b81:;
			++it;
			goto _iter_begin_21abd1b81;
		}
		_iter_end_21abd1b81:;
	};
}



inline void _2172b45ec_pushAndWriteMaskMapper(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2088299c8_Trait> _45943_t1, jule::Ptr<_2088299c8_Trait> _45965_t2) {
	_21e64c5b5_Builder _4607_ident = static__21e64ce12_New(32LL);;
	({
		auto except = _21e64d594_WriteStr(&_4607_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:461:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_4607_ident, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45965_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_4607_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_4607_ident, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45943_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _21e64d253_Write(&(*(_self_))._field_Buf, _21e64e8c5_Buf(&_4607_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21abd4964:;
		if (it != expr_end) {
			_2172ae66e_traitCast _46810_m = *it;
			{
				if (((_46810_m._field_t1 == _45943_t1) && (_46810_m._field_t2 == _45965_t2))) {
					return;;
				};
			}
			_iter_next_21abd4964:;
			++it;
			goto _iter_begin_21abd4964;
		}
		_iter_end_21abd4964:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_2172ae66e_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2172ae66e_traitCast{._field_t1=_45943_t1, ._field_t2=_45965_t2}; __jule_collection; }));
	;
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:478:3"));
		(except.result);
	});
	({
		auto except = _21e64d253_Write(&(*_self_.alloc)._field_anyObj, _21e64e8c5_Buf(&_4607_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	_21e64c5b5_Builder _4827_t1Ident = static__21e64ce12_New(16LL);;
	_21e64c5b5_Builder _4837_t2Ident = static__21e64ce12_New(16LL);;
	static__2172096eb_traitDecl(&(_4827_t1Ident), _45943_t1);
	static__2172096eb_traitDecl(&(_4837_t2Ident), _45965_t2);
	{
		auto expr = &((*(_45943_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21abd516d:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _48715_s1 = *it;
			{
				{
					auto expr = &((*(_45965_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21abd9062:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> _48811_s2 = *it;
						{
							if ((_48715_s1 == _48811_s2)) {
								{
									auto expr = &((*(_48715_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_21abd9edb:;
									if (it != expr_end) {
										jule::Ptr<_2087490bd_StructIns> _49018_s1i = *it;
										{
											jule::I64 _4917_i1 = _2093a242e_FindTraitTypeOffsetS(_45943_t1, _49018_s1i);;
											jule::I64 _4927_i2 = _2093a242e_FindTraitTypeOffsetS(_45965_t2, _49018_s1i);;
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:493:7"));
												(except.result);
											});
											({
												auto except = _21e64d253_Write(&(*_self_.alloc)._field_anyObj, _21e64e8c5_Buf(&_4837_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _21ec9e60c_Itoa(_4927_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _21e64d253_Write(&(*_self_.alloc)._field_anyObj, _21e64e8c5_Buf(&_4827_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, _21ec9e60c_Itoa(_4917_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
										}
										_iter_next_21abd9edb:;
										++it;
										goto _iter_begin_21abd9edb;
									}
									_iter_end_21abd9edb:;
								};
							};
						}
						_iter_next_21abd9062:;
						++it;
						goto _iter_begin_21abd9062;
					}
					_iter_end_21abd9062:;
				};
			}
			_iter_next_21abd516d:;
			++it;
			goto _iter_begin_21abd516d;
		}
		_iter_end_21abd516d:;
	};
	({
		auto except = _21e64d594_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:506:3"));
		(except.result);
	});
}



inline void _2172b48a5_locInfo(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208711827_Token>* _51025_t) {
	jule::Str *_5114_loc = &((*((*((*(_51025_t))))._field_File))._field_Path);;
	if (_220c73ee8_Production) {
		{
			
			if (_220c5c157_HasPrefix((*(_5114_loc)), _220c6bce3_PathStdlib)) {
				_case_begin_21abe04a8:;
				{
					_21720323e_cstrBytes(&((*(_self_))._field_Buf), (*(_5114_loc)).slice((_220c68ebb_Dir(_220c6bce3_PathStdlib).len() + 1LL)));
				}
			}
			else if (_220c5c157_HasPrefix((*(_5114_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_21abe0156:;
				{
					_21720323e_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5114_loc)).slice((_220c68ebb_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_21abe00e0:;
				{
					_21720323e_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5114_loc)));
				}
			}
			_match_end_21abe0013:;
		};
	} else {
		_21720323e_cstrBytes(&((*(_self_))._field_Buf), (*(_5114_loc)));
	};
	_2172b2221_write(_self_, jule::Str::lit(":", 1));
	_2172b2221_write(_self_, _21ec9e60c_Itoa((*((*(_51025_t))))._field_Row));
	_2172b2221_write(_self_, jule::Str::lit(":", 1));
	_2172b2221_write(_self_, _21ec9e60c_Itoa((*((*(_51025_t))))._field_Column));
}



inline void _2172b4aa3_head(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_2172a44aa_Time _5373_time = static__2172a4aa4_Now();;
	_2172a3cd4_AbsTime _5383_abs = _2172a628c_Abs(&_5373_time);;
	_2172b2221_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_2172b2221_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_2172b2221_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_2172b2221_write(_self_, jule::Str::lit("\n", 1));
	_2172b2221_write(_self_, jule::Str::lit("// Date: ", 9));
	_2172b2221_write(_self_, _21ec9de7a_FmtUint(_5383_abs._field_Day, 10LL));
	_2172b2221_write(_self_, jule::Str::lit("/", 1));
	_2172b2221_write(_self_, _21ec9de7a_FmtUint(_5383_abs._field_Month, 10LL));
	_2172b2221_write(_self_, jule::Str::lit("/", 1));
	_2172b2221_write(_self_, _21ec9de7a_FmtUint(_5383_abs._field_Year, 10LL));
	_2172b2221_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_2172b2221_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_2172b2221_write(_self_, jule::Str::lit(" ", 1));
	_2172b2221_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	if (_220c73ee8_Production) {
		_2172b2221_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_220c738dd_RC))) {
		_2172b2221_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_220c73ca6_Safety))) {
		_2172b2221_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_2172b4d5b_links(_self_, true);
	_2172b2221_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_2172b2221_write(_self_, _220c6c62e_PathApi);
	_2172b2221_write(_self_, jule::Str::lit("\"\n\n", 3));
	_2172b4d5b_links(_self_, false);
}



inline void _2172b4d5b_links(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Bool _57722_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21abec592:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _57810_used = *it;
			{
				{
					
					if ((!((*(_57810_used))._field_Binded))) {
						_case_begin_21abed461:;
						{
							goto _iter_next_21abec592;
						}
					}
					else if (_21e6118cb_IsStdHeaderPath((*(_57810_used))._field_Path)) {
						_case_begin_21abed4e9:;
						{
							if ((!(_57722_std))) {
								goto _iter_next_21abec592;
							};
							_2172b2221_write(_self_, jule::Str::lit("#include ", 9));
							_2172b2221_write(_self_, (*_57810_used.alloc)._field_Path);
							_2172b2221_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_21e611ba6_IsValidHeaderExt(_220c6855e_Ext((*_57810_used.alloc)._field_Path))) {
						_case_begin_21abed560:;
						{
							if (_57722_std) {
								goto _iter_next_21abec592;
							};
							_2172b2221_write(_self_, jule::Str::lit("#include \"", 10));
							_2172b2221_write(_self_, (*_57810_used.alloc)._field_Path);
							_2172b2221_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_21abed30c:;
				};
			}
			_iter_next_21abec592:;
			++it;
			goto _iter_begin_21abec592;
		}
		_iter_end_21abec592:;
	};
}



inline void _2172b5114_prepareStructure(_2172b1a06_ObjectCoder* _self_, jule::Ptr<_208746230_Struct>* _60037_s) {
	{
		auto expr = &((*((*(_60037_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21abec509:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _60115_ins = *it;
			{
				{
					auto expr = &((*(_60115_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21ac021ce:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _60216_m = *it;
						{
							if ((*(_60216_m))._field_Statically) {
								goto _iter_next_21ac021ce;
							};
							{
								auto expr = &((*(_60216_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_21ac02d28:;
								if (it != expr_end) {
									jule::Ptr<_208822372_FnIns> _60617_mins = *it;
									{
										jule::Ptr<_20882121c_ParamIns> _60710_p = (*(_60617_mins))._field_Params[0LL];;
										_21e64c5b5_Builder _60810_kind = static__21e64ce12_New(40LL);;
										_2172c6840_kind((*(_self_))._field_tc.ptr(), &(_60810_kind), (*(_60710_p))._field_Type);
										if ((!(_20881d1c5_IsRef((*_60710_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _21e64d594_WriteStr(&_60810_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:611:7"));
												(except.result);
											});
										};
										(*_60710_p.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2172c0a26_customType>(_2172c0a26_customType{._field_kind=_21e64de24_Str(&_60810_kind)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data29)});
									}
									_iter_next_21ac02d28:;
									++it;
									goto _iter_begin_21ac02d28;
								}
								_iter_end_21ac02d28:;
							};
						}
						_iter_next_21ac021ce:;
						++it;
						goto _iter_begin_21ac021ce;
					}
					_iter_end_21ac021ce:;
				};
			}
			_iter_next_21abec509:;
			++it;
			goto _iter_begin_21abec509;
		}
		_iter_end_21abec509:;
	};
}



inline void _2172b5312_prepareStructures(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac01c7d:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _62415_s = *it;
			{
				if (((*(_62415_s))._field_Token != nullptr)) {
					_2172b5114_prepareStructure(_self_.ptr(), &(_62415_s));
				};
			}
			_iter_next_21ac01c7d:;
			++it;
			goto _iter_begin_21ac01c7d;
		}
		_iter_end_21ac01c7d:;
	};
}



inline void _2172b55ba_structurePlainDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _63140_s) {
	{
		auto expr = &((*((*(_63140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac07503:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _63215_ins = *it;
			{
				_2172b2221_write(_self_, jule::Str::lit("struct ", 7));
				static__21720a0ae_structureIns(&((*_self_.alloc)._field_Buf), &(_63215_ins));
				_2172b2221_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_21ac07503:;
			++it;
			goto _iter_begin_21ac07503;
		}
		_iter_end_21ac07503:;
	};
}



inline void _2172b57b8_structurePlainDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac089bb:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _64015_s = *it;
			{
				if (((*(_64015_s))._field_Token != nullptr)) {
					_2172b55ba_structurePlainDecl(_self_, &(_64015_s));
				};
			}
			_iter_next_21ac089bb:;
			++it;
			goto _iter_begin_21ac089bb;
		}
		_iter_end_21ac089bb:;
	};
}



inline void _2172b5a71_fieldDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208748496_FieldIns>* _64731_f) {
	_2172c6840_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64731_f))))._field_Type);
	_2172b2221_write(_self_, jule::Str::lit(" ", 1));
	static__21720a39a_field(&((*_self_.alloc)._field_Buf), &((*((*(_64731_f))))._field_Decl));
	_2172b2221_write(_self_, jule::Str::lit(";", 1));
}



inline void _2172b5e8e_structureOperatorEq(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Str _65436_ident, jule::Ptr<_2087490bd_StructIns>* _65453_s, jule::Bool _65474_decl) {
	if ((!((*((*(_65453_s))))._field_Comparable))) {
		return;;
	};
	_2172b2221_write(_self_, jule::Str::lit("\n", 1));
	if (_2170bc218_Inline) {
		_2172b2221_write(_self_, jule::Str::lit("inline ", 7));
	};
	_2172b2221_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_2172b2221_write(_self_, _65436_ident);
	_2172b2221_write(_self_, jule::Str::lit("_eq", 3));
	_2172b2221_write(_self_, jule::Str::lit("(", 1));
	_2172b2221_write(_self_, _65436_ident);
	_2172b2221_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_2172b2221_write(_self_, _65436_ident);
	_2172b2221_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65474_decl) {
		_2172b2221_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_2172b2221_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65453_s))))._field_Fields.len() == 0LL)) {
		_2172b2221_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_2172b26c7_addIndent(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n", 1));
	_2172b2ac3_indent(_self_);
	_2172b2221_write(_self_, jule::Str::lit("return ", 7));
	_2172b26c7_addIndent(_self_);
	jule::Bool _6857_writed = false;;
	jule::Str _6887_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6897_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65453_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac14554:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> _69115_f = *it;
			{
				jule::Ptr<_2087490bd_StructIns> _6934_strct = _2089d3ce7_Struct((*(_69115_f))._field_Type.ptr());;
				if ((((_6934_strct != nullptr) && ((*_6934_strct.alloc)._field_Decl != nullptr)) && (*(*(_6934_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_21ac14554;
				};
				if (_6857_writed) {
					_2172b2221_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6857_writed=true;
				_2172b2221_write(_self_, jule::Str::lit("\n", 1));
				_2172b2ac3_indent(_self_);
				_21e64c5b5_Builder _7048_fIdent = static__21e64ce12_New((*((*_69115_f.alloc)._field_Decl))._field_Ident.len());;
				static__21720a39a_field(&(_7048_fIdent), &((*_69115_f.alloc)._field_Decl));
				_6887_lmodel+=jule::Str::unsafe_from_bytes(_21e64e8c5_Buf(&_7048_fIdent));
				_6897_rmodel+=jule::Str::unsafe_from_bytes(_21e64e8c5_Buf(&_7048_fIdent));
				_2171e50aa__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6887_lmodel), &(_6897_rmodel), &((*_69115_f.alloc)._field_Type), &((*_69115_f.alloc)._field_Type), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6887_lmodel).mut_slice(0LL, (_6887_lmodel.len() - _21e64e3a8_Len(&_7048_fIdent)));;
				_6897_rmodel=_6887_lmodel.slice(0LL, (_6897_rmodel.len() - _21e64e3a8_Len(&_7048_fIdent)));
			}
			_iter_next_21ac14554:;
			++it;
			goto _iter_begin_21ac14554;
		}
		_iter_end_21ac14554:;
	};
	_2172b28c5_doneIndent(_self_);
	if ((!(_6857_writed))) {
		_2172b2221_write(_self_, jule::Str::lit("true", 4));
	};
	_2172b2221_write(_self_, jule::Str::lit(";\n", 2));
	_2172b28c5_doneIndent(_self_);
	_2172b2ac3_indent(_self_);
	_2172b2221_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _2172b6302_structureOperators(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _72240_s, jule::Bool _72261_decl) {
	_21e64c5b5_Builder _7237_sb = static__21e64ce12_New(40LL);;
	static__21720a0ae_structureIns(&(_7237_sb), _72240_s);
	jule::Str _7253_ident = _21e64de24_Str(&_7237_sb);;
	_2172b5e8e_structureOperatorEq(_self_, _7253_ident, _72240_s, _72261_decl);
}



inline void _2172b65aa_structureInsDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _73138_s) {
	_2172b2221_write(_self_, jule::Str::lit("struct ", 7));
	static__21720a0ae_structureIns(&((*_self_.alloc)._field_Buf), _73138_s);
	_2172b2221_write(_self_, jule::Str::lit(" {\n", 3));
	_2172b26c7_addIndent(_self_);
	{
		auto expr = &((*((*(_73138_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac1e6c4:;
		if (it != expr_end) {
			jule::Ptr<_208748496_FieldIns> _73715_f = *it;
			{
				_2172b2ac3_indent(_self_);
				_2172b5a71_fieldDecl(_self_, &(_73715_f));
				_2172b2221_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_21ac1e6c4:;
			++it;
			goto _iter_begin_21ac1e6c4;
		}
		_iter_end_21ac1e6c4:;
	};
	_2172b28c5_doneIndent(_self_);
	_2172b2ac3_indent(_self_);
	_2172b2221_write(_self_, jule::Str::lit("};", 2));
	;
	_2172b6302_structureOperators(_self_, _73138_s, true);
}



inline void _2172b6863_structureDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _75135_s) {
	{
		auto expr = &((*((*(_75135_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac221aa:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _75215_ins = *it;
			{
				_2172b65aa_structureInsDecl(_self_, &(_75215_ins));
			}
			_iter_next_21ac221aa:;
			++it;
			goto _iter_begin_21ac221aa;
		}
		_iter_end_21ac221aa:;
	};
}



inline void _2172b6a61_structureDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac22908:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _75815_s = *it;
			{
				if (((*(_75815_s))._field_Token != nullptr)) {
					_2172b6863_structureDecl(_self_, &(_75815_s));
					_2172b2221_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_21ac22908:;
			++it;
			goto _iter_begin_21ac22908;
		}
		_iter_end_21ac22908:;
	};
}



inline void _2172b6d19_structureMethodDecls1(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _76643_s) {
	{
		auto expr = &((*((*(_76643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac23aa2:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _76715_ins = *it;
			{
				{
					auto expr = &((*(_76715_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21ac25521:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _76816_m = *it;
						{
							_2172b4289_pushResult(_self_, &(_76816_m));
							_2172b7bb6_funcDecl(_self_, &(_76816_m), false);
						}
						_iter_next_21ac25521:;
						++it;
						goto _iter_begin_21ac25521;
					}
					_iter_end_21ac25521:;
				};
			}
			_iter_next_21ac23aa2:;
			++it;
			goto _iter_begin_21ac23aa2;
		}
		_iter_end_21ac23aa2:;
	};
}



inline void _2172b7017_structureMethodDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac26786:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _77615_s = *it;
			{
				if (((*(_77615_s))._field_Token != nullptr)) {
					_2172b6d19_structureMethodDecls1(_self_, &(_77615_s));
				};
			}
			_iter_next_21ac26786:;
			++it;
			goto _iter_begin_21ac26786;
		}
		_iter_end_21ac26786:;
	};
}



inline void _2172b74e0_funcHead(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _78630_buf, jule::Ptr<_208822372_FnIns>* _78658_f, jule::Bool _78675_ptr, jule::Str _78686_ident) {
	if ((((!(_78675_ptr)) && _2170bc218_Inline) && (!(_20881ec87_IsEntryPoint((*((*(_78658_f))))._field_Decl.ptr()))))) {
		({
			auto except = _21e64d594_WriteStr(_78630_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:788:4"));
			(except.result);
		});
	};
	_2172c5d06_funcInsResult((*(_self_))._field_tc.ptr(), _78630_buf, _78658_f);
	if (_78675_ptr) {
		({
			auto except = _21e64d594_WriteStr(_78630_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:792:4"));
			(except.result);
		});
		static__217209410_funcIns(_78630_buf, _78658_f);
		({
			auto except = _21e64d84c_WriteByte(_78630_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
		});
	} else {
		({
			auto except = _21e64d84c_WriteByte(_78630_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:796:4"));
		});
		if ((_78686_ident).empty()) {
			static__217209410_funcIns(_78630_buf, _78658_f);
		} else {
			({
				auto except = _21e64d594_WriteStr(_78630_buf, _78686_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:5"));
				(except.result);
			});
		};
	};
}



inline void _2172b7853_funcDeclIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns>* _80533_f, jule::Bool _80550_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_80533_f))))._field_CalledCo);
	_2172b2ac3_indent(_self_);
	_2172b74e0_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80533_f, _80550_ptr, jule::Str());
	_2172b8ce9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80533_f);
	_2172b2221_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _2172b7bb6_funcDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _81330_f, jule::Bool _81344_ptr) {
	{
		auto expr = &((*((*(_81330_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac2d4b3:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _81415_c = *it;
			{
				_2172b7853_funcDeclIns(_self_, &(_81415_c), _81344_ptr);
			}
			_iter_next_21ac2d4b3:;
			++it;
			goto _iter_begin_21ac2d4b3;
		}
		_iter_end_21ac2d4b3:;
	};
}



inline void _2172b7e6e_funcDeclTrait(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _81935_f) {
	{
		auto expr = &((*((*(_81935_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac2dd54:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _82015_c = *it;
			{
				jule::Ptr<_2089ce661_Type> _8218_k = (*((*(_82015_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82015_c))._field_Params[0LL]))._field_Type=_2172ade76_generalGCPtr;
				_2172b7853_funcDeclIns(_self_, &(_82015_c), true);
				(*((*(_82015_c))._field_Params[0LL]))._field_Type=_8218_k;
			}
			_iter_next_21ac2dd54:;
			++it;
			goto _iter_begin_21ac2dd54;
		}
		_iter_end_21ac2dd54:;
	};
}



inline void _2172b816c_funcDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_20939bcdb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_2089107b2_Package>*>((void*)__jule_anon_21ac32066, jule::Ptr<__jule_anon_21ac32066_ctx>::make(__jule_anon_21ac32066_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21ac32066_ctx_handler));
}



inline void _2172b8425_traitDataTypeMethods(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2172aee66_traitHash>* _84142_hash) {
	{
		auto expr = &((*((*(_84142_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac3295c:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _84215_m = *it;
			{
				jule::Ptr<_208822372_FnIns> _8438_ins = (*(_84215_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8438_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_21ac36356:;
					if (it != expr_end) {
						jule::I64 _8449_i = it - expr.begin();
						jule::Ptr<_20882121c_ParamIns> _84416_ip = *it;
						{
							if (_2087144c8_IsAnonIdent((*((*(_84416_ip))._field_Decl))._field_Ident)) {
								(*(*(_84416_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _21ec9e60c_Itoa(_8449_i));
							};
						}
						_iter_next_21ac36356:;
						++it;
						_8449_i++;
						goto _iter_begin_21ac36356;
					}
					_iter_end_21ac36356:;
				};
				_2172b4289_pushResult(_self_, &(_84215_m));
				_2172b7e6e_funcDeclTrait(_self_, &(_84215_m));
			}
			_iter_next_21ac3295c:;
			++it;
			goto _iter_begin_21ac3295c;
		}
		_iter_end_21ac3295c:;
	};
}



inline void _2172b8623_traitDataTypes(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac340e0:;
		if (it != expr_end) {
			jule::Ptr<_2172aee66_traitHash> _85515_hash = *it;
			{
				_2172b2221_write(_self_, jule::Str::lit("struct ", 7));
				static__2172096eb_traitDecl(&((*_self_.alloc)._field_Buf), (*(_85515_hash))._field_traitDecl);
				_2172b2221_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_2172b26c7_addIndent(_self_);
				_2172b2ac3_indent(_self_);
				_2172b2221_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_2172b8425_traitDataTypeMethods(_self_, &(_85515_hash));
				_2172b28c5_doneIndent(_self_);
				_2172b2ac3_indent(_self_);
				_2172b2221_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_21ac340e0:;
			++it;
			goto _iter_begin_21ac340e0;
		}
		_iter_end_21ac340e0:;
	};
}



inline void _2172b8986_paramIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _86930_buf, jule::Ptr<_20882121c_ParamIns>* _86958_p) {
	_2172c5630_paramIns((*(_self_))._field_tc.ptr(), _86930_buf, _86958_p);
	({
		auto except = _21e64d84c_WriteByte(_86930_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:871:3"));
	});
	static__2172099d7_param(_86930_buf, &((*((*(_86958_p))))._field_Decl));
}



inline void _2172b8ce9_paramsIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _87531_buf, jule::Ptr<_208822372_FnIns>* _87559_f) {
	if (((!((*((*(_87559_f))))._field_AsAnon)) && ((*((*(_87559_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _21e64d594_WriteStr(_87531_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _21e64d84c_WriteByte(_87531_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:880:3"));
	});
	if ((*((*(_87559_f))))._field_AsAnon) {
		({
			auto except = _21e64d594_WriteStr(_87531_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:882:4"));
			(except.result);
		});
		if (((*((*(_87559_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _21e64d594_WriteStr(_87531_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:884:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_87559_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac3e99c:;
		if (it != expr_end) {
			jule::I64 _8878_i = it - expr->begin();
			jule::Ptr<_20882121c_ParamIns> _88715_p = *it;
			{
				_2172b8986_paramIns(_self_, _87531_buf, &(_88715_p));
				if ((((*((*(_87559_f))))._field_Params.len() - _8878_i) > 1LL)) {
					({
						auto except = _21e64d594_WriteStr(_87531_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
						(except.result);
					});
				};
			}
			_iter_next_21ac3e99c:;
			++it;
			_8878_i++;
			goto _iter_begin_21ac3e99c;
		}
		_iter_end_21ac3e99c:;
	};
	({
		auto except = _21e64d84c_WriteByte(_87531_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:893:3"));
	});
}



inline void _2172b915c_varInitExpr(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20894d7de_Var>* _89633_v, jule::Fn<void> _89648_init) {
	if ((*((*(_89633_v))))._field_Statically) {
		_2172b2221_write(_self_, jule::Str::lit("static ", 7));
	};
	_2172c6840_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_89633_v))))._field_TypeSym))._field_Type);
	_2172b2221_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_89633_v))))._field_Reference) {
		_2172b2221_write(_self_, jule::Str::lit("*", 1));
	};
	static__21720a686_var(&((*_self_.alloc)._field_Buf), (*(_89633_v)));
	if ((_89648_init != nullptr)) {
		_2172b2221_write(_self_, jule::Str::lit(" = ", 3));
		_89648_init();
	};
	_2172b2221_write(_self_, jule::Str::lit(";", 1));
}



inline void _2172b9415_var(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20894d7de_Var> _91424_v) {
	if (_20871420e_IsIgnoreIdent((*(_91424_v))._field_Ident)) {
		return;;
	};
	if ((((*(_91424_v))._field_Value != nullptr) && ((*(*(_91424_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_91424_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_91424_v.alloc)._field_Reference) {
				_2172b915c_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_21ac46a92, jule::Ptr<__jule_anon_21ac46a92_ctx>::make(__jule_anon_21ac46a92_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_21ac46a92_ctx_handler));
			} else {
				_2172b915c_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_21ac48b82, jule::Ptr<__jule_anon_21ac48b82_ctx>::make(__jule_anon_21ac48b82_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_21ac48b82_ctx_handler));
			};
			return;;
		};
		_2172b915c_varInitExpr(_self_, &(_91424_v), nullptr);
		return;;
	};
	if ((*(_91424_v))._field_Reference) {
		_2172b915c_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_21ac4b38d, jule::Ptr<__jule_anon_21ac4b38d_ctx>::make(__jule_anon_21ac4b38d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21ac4b38d_ctx_handler));
		return;;
	};
	if (_2172cd9bd_shouldInitialized(&((*((*(_91424_v))._field_TypeSym))._field_Type))) {
		_2172b915c_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_21ac4c537, jule::Ptr<__jule_anon_21ac4c537_ctx>::make(__jule_anon_21ac4c537_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_21ac4c537_ctx_handler));
		return;;
	};
	_2172b915c_varInitExpr(_self_, &(_91424_v), nullptr);
}



inline void _2172b9778_anonFuncInsDecl(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr>* _94537_m, jule::Str _94559_ident) {
	_2172b74e0_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_94537_m))))._field_Func), false, _94559_ident);
	_2172b8ce9_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_94537_m))))._field_Func));
	({
		auto except = _21e64d84c_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:948:3"));
	});
}



inline void _2172b9adb_anonFuncIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208814dae_AnonFnExpr>* _95133_m, jule::Str _95155_ident) {
	_2172b74e0_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95133_m))))._field_Func), false, _95155_ident);
	_2172b8ce9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95133_m))))._field_Func));
	_2172b2221_write(_self_, jule::Str::lit(" ", 1));
	_2171de428_anonFuncScope((*_self_.alloc)._field_sc, (*(_95133_m)), _95155_ident);
	if (((*((*((*(_95133_m))))._field_Func))._field_Scope != nullptr)) {
		_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _2172b9e4e_funcIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208822372_FnIns> _96128_f, jule::Str _96145_ident) {
	_2172b74e0_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96128_f), false, _96145_ident);
	_2172b8ce9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96128_f));
	_2172b2221_write(_self_, jule::Str::lit(" ", 1));
	_2171de6d1_funcScope((*_self_.alloc)._field_sc, _96128_f);
	if (((*(_96128_f))._field_Scope != nullptr)) {
		_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _2172ba207_func(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _97126_f) {
	{
		auto expr = &((*((*(_97126_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac55c6b:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _97215_ins = *it;
			{
				_2172b9e4e_funcIns(_self_, _97215_ins, jule::Str());
			}
			_iter_next_21ac55c6b:;
			++it;
			goto _iter_begin_21ac55c6b;
		}
		_iter_end_21ac55c6b:;
	};
}



inline void _2172ba56a_funcTrait(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _97727_s, jule::Ptr<_208822372_FnIns>* _97753_f) {
	(*((*(_97753_f))))._field_Scope=nullptr;
	_21e64c5b5_Builder _9807_nident = static__21e64ce12_New(30LL);;
	({
		auto except = _21e64d594_WriteStr(&_9807_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:981:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_9807_nident, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_97753_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:982:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_9807_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:983:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(&_9807_nident, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_97727_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:984:3"));
		(except.result);
	});
	jule::Ptr<_2089ce661_Type> _9867_k = (*((*((*(_97753_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_97753_f))))._field_Params[0LL]))._field_Type=_2172ade76_generalGCPtr;
	_2172b9e4e_funcIns(_self_, (*(_97753_f)), _21e64de24_Str(&_9807_nident));
	(*((*((*(_97753_f))))._field_Params[0LL]))._field_Type=_9867_k;
}



inline __jule_tuple_x_208822372_FnIns__jule_tuple_bool _2172ba8ab_findTraitMetMap(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_20881e2b4_Fn>* _99237_m) {
	__jule_tuple_x_208822372_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_208822372_FnIns> _9937_mins = (*((*(_99237_m))))._field_Instances[0LL];;
	{
		_21a690343_mapIterator it = _21a68811b_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_21ac5b425:;
		__jule_tuple_px_208822372_FnIns__jule_tuple_psuintptr __iterator_result = _21a69083d_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_208822372_FnIns> _99412_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_99412_f))._field_Decl))._field_Public == (*((*(_99237_m))))._field_Public) && ((*(*(_99412_f))._field_Decl.alloc)._field_Ident == (*((*(_99237_m))))._field_Ident)) && _208822ecc_EqualFn(_99412_f, &(_9937_mins)))) {
					__jule_func_result.__jule_result_arg0 = _99412_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_21ac5b425:;
			goto _iter_begin_21ac5b425;
		}
		_iter_end_21ac5b425:;
	};
	__jule_func_result.__jule_result_arg0 = _9937_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _2172bac1e_traitWrapper(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2088299c8_Trait>* _100434_t, jule::Ptr<_20881e2b4_Fn>* _100456_m) {
	_julec_label_21ac5db0e:;
	{
		auto expr = &((*((*(_100434_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac5dcb8:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _100615_imp = *it;
			{
				jule::Ptr<_208822372_FnIns> _10078_mepf;
				jule::Bool _100714_exist;
				({
					__jule_tuple_x_208822372_FnIns__jule_tuple_bool __jule_assign_result = _2172ba8ab_findTraitMetMap(_self_, _100456_m);
					_10078_mepf = __jule_assign_result.__jule_result_arg0;
					_100714_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_100714_exist) {
					jule::Slice<jule::Uintptr> _10109_vals = _21a687802_get((*(_self_))._field_traitMetMap, _10078_mepf);;
					{
						auto expr = &(_10109_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21ac60d42:;
						if (it != expr_end) {
							jule::Uintptr _101112_val = *it;
							{
								if ((_101112_val == static_cast<jule::Uintptr>(_100615_imp))) {
									goto _iter_next_21ac5dcb8;
								};
							}
							_iter_next_21ac60d42:;
							++it;
							goto _iter_begin_21ac60d42;
						}
						_iter_end_21ac60d42:;
					};
					(*_21a687956_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10078_mepf))=jule::append(_10109_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_100615_imp); __jule_collection; }));
				} else {
					(*_21a687956_set(((*(_self_))._field_traitMetMap).ptr(), _10078_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_100615_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_100615_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21ac61639:;
					if (it != expr_end) {
						jule::Ptr<_2087490bd_StructIns> _102116_ins = *it;
						{
							_2172ba56a_funcTrait(_self_, &(_102116_ins), &(_10078_mepf));
							;
							jule::Ptr<_20881e2b4_Fn> _10259_sm = _20874a135_FindMethod(_102116_ins.ptr(), (*((*(_100456_m))))._field_Ident, false);;
							if (((_10259_sm == nullptr) || ((*(_10259_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_2172b26c7_addIndent(_self_);
							_2172b2221_write(_self_, jule::Str::lit("{\n", 2));
							_2172b2ac3_indent(_self_);
							if (((*((*(_100456_m))))._field_Exceptional || (!(_20881e76a_IsVoid((*(_100456_m)).ptr()))))) {
								_2172b2221_write(_self_, jule::Str::lit("return ", 7));
							};
							static__217209124_func(&((*_self_.alloc)._field_Buf), &(_10259_sm));
							_2172b2221_write(_self_, jule::Str::lit("(", 1));
							_2172b2221_write(_self_, jule::Str::lit("_self_.as<", 10));
							_2172c4ae6_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102116_ins);
							_2172b2221_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10425_ptr = (!(_20881d1c5_IsRef((*((*(_100456_m))))._field_Params[0LL].ptr())));;
							if (_10425_ptr) {
								_2172b2221_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_100456_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_21ac68e8d:;
								if (it != expr_end) {
									jule::Ptr<_20881c7e0_Param> _104612_mp = *it;
									{
										_2172b2221_write(_self_, jule::Str::lit(", ", 2));
										static__2172099d7_param(&((*_self_.alloc)._field_Buf), &(_104612_mp));
									}
									_iter_next_21ac68e8d:;
									++it;
									goto _iter_begin_21ac68e8d;
								}
								_iter_end_21ac68e8d:;
							};
							_2172b2221_write(_self_, jule::Str::lit(");\n}\n", 5));
							_2172b28c5_doneIndent(_self_);
						}
						_iter_next_21ac61639:;
						++it;
						goto _iter_begin_21ac61639;
					}
					_iter_end_21ac61639:;
				};
			}
			_iter_next_21ac5dcb8:;
			++it;
			goto _iter_begin_21ac5dcb8;
		}
		_iter_end_21ac5dcb8:;
	};
}



inline void _2172bae1c_traitWrappers(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac652ec:;
		if (it != expr_end) {
			jule::Ptr<_2172aee66_traitHash> _105715_hash = *it;
			{
				if (((*((*(_105715_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_21ac652ec;
				};
				{
					auto expr = &((*(_105715_hash))._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21ac6ae4b:;
					if (it != expr_end) {
						jule::Ptr<_20881e2b4_Fn> _106116_m = *it;
						{
							_2172bac1e_traitWrapper(_self_, &((*(_105715_hash))._field_traitDecl), &(_106116_m));
						}
						_iter_next_21ac6ae4b:;
						++it;
						goto _iter_begin_21ac6ae4b;
					}
					_iter_end_21ac6ae4b:;
				};
			}
			_iter_next_21ac652ec:;
			++it;
			goto _iter_begin_21ac652ec;
		}
		_iter_end_21ac652ec:;
	};
}



inline void _2172bb280_traitDataMethods(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2172aee66_traitHash>* _106838_hash, jule::Ptr<_2087490bd_StructIns> _106856_s) {
	{
		auto expr = &((*((*(_106838_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac6a4de:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _106915_m = *it;
			{
				_2172b2ac3_indent(_self_);
				_2172b2221_write(_self_, jule::Str::lit(".", 1));
				static__217209124_func(&((*_self_.alloc)._field_Buf), &(_106915_m));
				_2172b2221_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_208822372_FnIns> _10744_mepf;
				jule::Bool _107410_exist;
				({
					__jule_tuple_x_208822372_FnIns__jule_tuple_bool __jule_assign_result = _2172ba8ab_findTraitMetMap(_self_, &(_106915_m));
					_10744_mepf = __jule_assign_result.__jule_result_arg0;
					_107410_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_107410_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1076:5"));;
				};
				_2172b2221_write(_self_, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10744_mepf)), 15LL));
				_2172b2221_write(_self_, jule::Str::lit("_", 1));
				_2172b2221_write(_self_, _21ec9de7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_106856_s)), 15LL));
				_2172b2221_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_21ac6a4de:;
			++it;
			goto _iter_begin_21ac6a4de;
		}
		_iter_end_21ac6a4de:;
	};
}



inline void _2172bb69d_traitData(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2172aee66_traitHash>* _108631_hash, jule::I64 _108649_i, jule::Ptr<_2087490bd_StructIns>* _108662_s) {
	_21e64c5b5_Builder _10877_ident = static__21e64ce12_New((*((*((*(_108631_hash))))._field_traitDecl))._field_Ident.len());;
	static__2172096eb_traitDecl(&(_10877_ident), (*((*(_108631_hash))))._field_traitDecl);
	_2172b2221_write(_self_, jule::Str::lit("static ", 7));
	_2172b24c9_writeBytes(_self_, _21e64e8c5_Buf(&_10877_ident));
	_2172b2221_write(_self_, jule::Str::lit("MptrData ", 9));
	_2172b24c9_writeBytes(_self_, _21e64e8c5_Buf(&_10877_ident));
	_2172b2221_write(_self_, jule::Str::lit("_mptr_data", 10));
	_2172b2221_write(_self_, _21ec9e60c_Itoa(_108649_i));
	_2172b2221_write(_self_, jule::Str::lit(" {\n", 3));
	_2172b26c7_addIndent(_self_);
	_2172b2ac3_indent(_self_);
	_2172b2221_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_2172b2221_write(_self_, _21ec9e60c_Itoa(_2172b3596_pushDealloc(_self_, jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_108662_s)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)}))));
	_2172b2221_write(_self_, jule::Str::lit(",\n", 2));
	_2172bb280_traitDataMethods(_self_, _108631_hash, (*(_108662_s)));
	_2172b28c5_doneIndent(_self_);
	_2172b2221_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _2172bb89b_traitDatas(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac76bb0:;
		if (it != expr_end) {
			jule::Ptr<_2172aee66_traitHash> _110815_hash = *it;
			{
				jule::I64 _11098_i = 0LL;;
				{
					auto expr = &((*((*(_110815_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21ac77b39:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> _111016_s = *it;
						{
							{
								auto expr = &((*(_111016_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_21ac78761:;
								if (it != expr_end) {
									jule::Ptr<_2087490bd_StructIns> _111117_ins = *it;
									{
										_2172bb69d_traitData(_self_, &(_110815_hash), _11098_i, &(_111117_ins));
										(_11098_i)++;
									}
									_iter_next_21ac78761:;
									++it;
									goto _iter_begin_21ac78761;
								}
								_iter_end_21ac78761:;
							};
						}
						_iter_next_21ac77b39:;
						++it;
						goto _iter_begin_21ac77b39;
					}
					_iter_end_21ac77b39:;
				};
			}
			_iter_next_21ac76bb0:;
			++it;
			goto _iter_begin_21ac76bb0;
		}
		_iter_end_21ac76bb0:;
	};
}



inline void _2172bba99_globalDecls(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac77ab2:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _112015_v = *it;
			{
				_2172c6840_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112015_v))._field_TypeSym))._field_Type);
				_2172b2221_write(_self_, jule::Str::lit(" ", 1));
				static__21720a686_var(&((*_self_.alloc)._field_Buf), _112015_v);
				_2172b2221_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_21ac77ab2:;
			++it;
			goto _iter_begin_21ac77ab2;
		}
		_iter_end_21ac77ab2:;
	};
}



inline void _2172bbc97_decls(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_2172b57b8_structurePlainDecls(_self_);
	_2172b6a61_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_21e64e3a8_Len(&(*_self_.alloc)._field_Buf);
	_2172b7017_structureMethodDecls(_self_);
	_2172b816c_funcDecls(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	_2172b8623_traitDataTypes(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_21e64e3a8_Len(&(*_self_.alloc)._field_Buf);
	_2172bae1c_traitWrappers(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	_2172bb89b_traitDatas(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_21e64e3a8_Len(&(*_self_.alloc)._field_Buf);
	_2172bba99_globalDecls(_self_);
}



inline void _2172bc050_structureMethods(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _114638_s) {
	{
		auto expr = &((*((*(_114638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac80955:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _114715_f = *it;
			{
				_2172ba207_func(_self_, &(_114715_f));
				_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_21ac80955:;
			++it;
			goto _iter_begin_21ac80955;
		}
		_iter_end_21ac80955:;
	};
}



inline void _2172bc308_structureIns(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2087490bd_StructIns>* _115334_s) {
	if (((*((*(_115334_s))))._field_Source == nullptr)) {
		;
		_2172b6302_structureOperators(_self_, _115334_s, false);
	};
	_2172bc050_structureMethods(_self_, _115334_s);
}



inline void _2172bc5b1_structure(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_208746230_Struct>* _116231_s) {
	{
		auto expr = &((*((*(_116231_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac832e8:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _116315_ins = *it;
			{
				_2172bc308_structureIns(_self_, &(_116315_ins));
				_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_21ac832e8:;
			++it;
			goto _iter_begin_21ac832e8;
		}
		_iter_end_21ac832e8:;
	};
}



inline void _2172bc7ae_structures(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac832a4:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _117015_s = *it;
			{
				if (((*(_117015_s))._field_Token != nullptr)) {
					_2172bc5b1_structure(_self_, &(_117015_s));
					_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_21ac832a4:;
			++it;
			goto _iter_begin_21ac832a4;
		}
		_iter_end_21ac832a4:;
	};
}



inline void _2172bc9ac_funcs(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_20939bcdb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_2089107b2_Package>*>((void*)__jule_anon_21ac865a4, jule::Ptr<__jule_anon_21ac865a4_ctx>::make(__jule_anon_21ac865a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21ac865a4_ctx_handler));
}



inline void _2172bcc65_pushInit(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2089107b2_Package>* _120130_pkg) {
	_20939c03e_IterFiles(_120130_pkg, jule::__new_closure<void,jule::Ptr<_2088255b7_SymTab>*>((void*)__jule_anon_21ac8c775, jule::Ptr<__jule_anon_21ac8c775_ctx>::make(__jule_anon_21ac8c775_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21ac8c775_ctx_handler));
}



inline void _2172bce63_anonHashes(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_julec_label_21ac8d457:;
	jule::Slice<jule::Ptr<_2172aea48_anonHash>> _12187_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12187_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac92170:;
		if (it != expr_end) {
			jule::Ptr<_2172aea48_anonHash> _122015_h = *it;
			{
				_2172b9adb_anonFuncIns(_self_, &((*(_122015_h))._field_expr), (*_122015_h.alloc)._field_ident);
			}
			_iter_next_21ac92170:;
			++it;
			goto _iter_begin_21ac92170;
		}
		_iter_end_21ac92170:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_21ac8d457;
	};
}



inline void _2172bd161_initGlobals(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac94d43:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _122915_v = *it;
			{
				({
					auto except = _21e64d84c_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1230:4"));
				});
				static__21720a686_var(&((*_self_.alloc)._field_Buf), _122915_v);
				_2172b2221_write(_self_, jule::Str::lit(" = ", 3));
				_2172015e4_model((*_self_.alloc)._field_ec, (*((*((*(_122915_v))._field_Value))._field_Data))._field_Model);
				_2172b2221_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_21ac94d43:;
			++it;
			goto _iter_begin_21ac94d43;
		}
		_iter_end_21ac94d43:;
	};
}



inline void _2172bd35e_initCaller(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_2172b2221_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_2172b26c7_addIndent(_self_);
	_20939bcdb_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_2089107b2_Package>*>((void*)__jule_anon_21ac98a39, jule::Ptr<__jule_anon_21ac98a39_ctx>::make(__jule_anon_21ac98a39_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21ac98a39_ctx_handler));
	_2172b28c5_doneIndent(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _2172bd55c_end(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_2172b2221_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	_2172bd161_initGlobals(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_220c73635_Test) {
		_2172b2221_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__217209124_func(&((*_self_.alloc)._field_Buf), &((*(_2093a4b90_ProgramMeta))._field_EntryPoint));
		_2172b2221_write(_self_, jule::Str::lit("();", 3));
	};
	_2172b2221_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _2172bd815_buildTraitHash(jule::Ptr<_2172b1a06_ObjectCoder> _self_, jule::Ptr<_2088299c8_Trait>* _127336_t) {
	jule::Ptr<_2172aee66_traitHash> _12747_hash = jule::new_ptr<_2172aee66_traitHash>(_2172aee66_traitHash{._field_traitDecl=(*(_127336_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_20881e2b4_Fn>>::alloc(0LL, (*((*(_127336_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20881e2b4_Fn>(nullptr); __jule_collection; })});;
	_20939c32a_IterTraitMethods(_127336_t, jule::__new_closure<void,jule::Ptr<_20881e2b4_Fn>*>((void*)__jule_anon_21ac9da72, jule::Ptr<__jule_anon_21ac9da72_ctx>::make(__jule_anon_21ac9da72_ctx{._12747_hash=_12747_hash}).as<jule::Uintptr>(), __jule_anon_21ac9da72_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_2172aee66_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12747_hash; __jule_collection; }));
}



inline void _2172bda13_buildTraitHashes(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_20939bcdb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_2089107b2_Package>*>((void*)__jule_anon_21aca10c4, jule::Ptr<__jule_anon_21aca10c4_ctx>::make(__jule_anon_21aca10c4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_21aca10c4_ctx_handler));
}



inline void _2172bdd76_insertBuf(jule::Ptr<_2172b1a06_ObjectCoder> _self_, _21e64c5b5_Builder* _130331_buf, jule::I64 _130354_pos) {
	if ((_21e64e3a8_Len(_130331_buf) > 0LL)) {
		jule::Slice<jule::U8> _13058_ibuf = _21e64e8c5_Buf(&(*(_self_))._field_Buf);;
		_13058_ibuf=_21aca4737_Insert(_13058_ibuf, _130354_pos, _21e64e8c5_Buf(_130331_buf));
		{
			_21e64eb7d_SetBuf(&(*_self_.alloc)._field_Buf, _13058_ibuf);
		};
	};
}



inline void _2172be074_implementRC(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_2172b9e4e_funcIns(_self_, (*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_2172b9e4e_funcIns(_self_, (*(*(_2093a4b90_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_2172b9e4e_funcIns(_self_, (*(*(_2093a4b90_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_2172b9e4e_funcIns(_self_, (*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_2172b9e4e_funcIns(_self_, (*(*(_2093a4b90_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_2172b9e4e_funcIns(_self_, (*(*(_2093a4b90_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _2172be272_serializeHead(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_2172bda13_buildTraitHashes(_self_);
	_2172b5312_prepareStructures(_self_);
	_2172b4aa3_head(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n", 1));
	_2172bbc97_decls(_self_);
	_2172bdd76_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_resultDecls);
	_2172b2221_write(_self_, jule::Str::lit("\n", 1));
	_2172bc7ae_structures(_self_);
	_2172bc9ac_funcs(_self_);
	_2172bd35e_initCaller(_self_);
	_2172b2221_write(_self_, jule::Str::lit("\n\n", 2));
	_2172bce63_anonHashes(_self_);
	_2172be074_implementRC(_self_);
	_2172bdd76_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_deallocObj);
	_2172bdd76_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_anyObj);
	_2172bdd76_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_anonObj);
	_2172bdd76_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_21e64e3a8_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _2172be470_Serialize(jule::Ptr<_2172b1a06_ObjectCoder> _self_) {
	_2172be272_serializeHead(_self_);
	_2172bd55c_end(_self_);
}








inline jule::Bool _2172c0a26_customType_eq(_2172c0a26_customType *_self_, _2172c0a26_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _2172c0e00_Str(_2172c0a26_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _2172c1241_Equal(jule::Ptr<_2172c0a26_customType> _self_, jule::Ptr<_2089ce661_Type> _2518_k) {
	return false;;
}








inline jule::Bool _2172c163c_typeCoder_eq(_2172c163c_typeCoder *_self_, _2172c163c_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_2172c163c_typeCoder> static__2172c1b8c_new(jule::Ptr<_2172b1a06_ObjectCoder>* _5021_oc) {
	jule::Ptr<_2172c163c_typeCoder> _517_tc = jule::new_ptr<_2172c163c_typeCoder>(_2172c163c_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_2172c9227_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__2172c9733_new(&(_517_tc));
	return _517_tc;;
}



inline void _2172c2000_toType(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_208894812_RealKindOf(_5754_id);
	};
	({
		auto except = _21e64d594_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _21e64d84c_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _21e64d84c_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _21e64d594_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _2172c2363_prim(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _7125_buf, jule::Ptr<_2089d846c_Prim> _7148_p) {
	_2172c2000_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _2172c26c6_tuple(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _7626_buf, jule::Ptr<_2089dd560_Tuple> _7653_t) {
	({
		auto except = _21e64d594_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*(_7653_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21acc977e:;
		if (it != expr_end) {
			jule::I64 _788_i = it - expr->begin();
			jule::Ptr<_2089ce661_Type> _7815_tk = *it;
			{
				_2172c6840_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _21e64d84c_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_21acc977e:;
			++it;
			_788_i++;
			goto _iter_begin_21acc977e;
		}
		_iter_end_21acc977e:;
	};
	({
		auto except = _21e64d84c_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _2172c2a39_asSptr(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _21e64d594_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _21e64d253_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _2172c2d9c_sptr(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _9525_buf, jule::Ptr<_2089dbe98_Sptr> _9552_sptr) {
	({
		auto except = _21e64d594_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_2172c6840_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _21e64d84c_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _2172c3210_ptr(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _10224_buf, jule::Ptr<_2089e0760_Ptr> _10251_p) {
	;
	if (_2089e12cc_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _21e64d594_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_2172c6840_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _21e64d594_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _2172c3573_enumDecl(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _11329_buf, jule::Ptr<_20882c17e_Enum> _11356_e) {
	_2172c6840_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _2172c38d6_typeEnumDecl(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _11833_buf, jule::Ptr<_20882d889_TypeEnum> _11860_e) {
	({
		auto except = _21e64d594_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _2172c3c49_asSlice(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _12228_buf, jule::Ptr<_2089ce661_Type> _12255_elem) {
	({
		auto except = _21e64d594_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_2172c6840_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _21e64d84c_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _2172c40ac_slice(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _12926_buf, jule::Ptr<_2089dc96b_Slc> _12953_s) {
	_2172c3c49_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _2172c4420_mapType(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _13428_buf, jule::Ptr<_2089de110_Map> _13455_m) {
	jule::Ptr<_2087490bd_StructIns> _1357_ins = _2093a2e9b_FindStructGenericInstance(&((*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _21e64d594_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__21720a0ae_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _21e64d594_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _2172c4ae6_structureIns(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _14733_buf, jule::Ptr<_2087490bd_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		if (((*_14760_s.alloc)._field_Source != nullptr)) {
			_2172c6840_kind(_self_, _14733_buf, (*_14760_s.alloc)._field_Source);
		} else {
			static__21720a0ae_structureIns(_14733_buf, &(_14760_s));
		};
		return;;
	};
	jule::Ptr<_208726760_Directive> _1563_d = _2093a152c_FindDirective(&((*((*(_14760_s))._field_Decl))._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1563_d != nullptr)) {
		({
			auto except = _21e64d253_Write(_14733_buf, _2172be805_concatAllParts((*_1563_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:158:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
			(except.result);
		});
	};
	static__21720a0ae_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _21e64d84c_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21acd7e0d:;
			if (it != expr_end) {
				jule::I64 _1649_i = it - expr->begin();
				jule::Ptr<_2089ccc7a_InsGeneric> _16416_g = *it;
				{
					_2172c6840_kind(_self_, _14733_buf, (*(_16416_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1649_i) > 1LL)) {
						({
							auto except = _21e64d84c_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:167:6"));
						});
					};
				}
				_iter_next_21acd7e0d:;
				++it;
				_1649_i++;
				goto _iter_begin_21acd7e0d;
			}
			_iter_end_21acd7e0d:;
		};
		({
			auto except = _21e64d84c_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:170:4"));
		});
	};
}



inline void _2172c4e59_array(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _17526_buf, jule::Ptr<_2089dec8c_Arr> _17553_a) {
	({
		auto except = _21e64d594_WriteStr(_17526_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
		(except.result);
	});
	_2172c6840_kind(_self_, _17526_buf, (*(_17553_a))._field_Elem);
	({
		auto except = _21e64d84c_WriteByte(_17526_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:178:3"));
	});
	({
		auto except = _21e64d594_WriteStr(_17526_buf, _21ec9e60c_Itoa((*_17553_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:179:3"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_17526_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:180:3"));
	});
}



inline void _2172c5630_paramIns(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _19829_buf, jule::Ptr<_20882121c_ParamIns>* _19857_p) {
	if ((*((*((*(_19857_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _21e64d594_WriteStr(_19829_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:200:4"));
			(except.result);
		});
		_2172c6840_kind(_self_, _19829_buf, (*((*(_19857_p))))._field_Type);
		({
			auto except = _21e64d84c_WriteByte(_19829_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:202:4"));
		});
	} else {
		_2172c6840_kind(_self_, _19829_buf, (*((*(_19857_p))))._field_Type);
	};
	if ((*((*((*(_19857_p))))._field_Decl))._field_Reference) {
		({
			auto except = _21e64d84c_WriteByte(_19829_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:207:4"));
		});
	};
}



inline void _2172c5d06_funcInsResult(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _23034_s, jule::Ptr<_208822372_FnIns>* _23060_f) {
	if (_20881e76a_IsVoid((*((*(_23060_f))))._field_Decl.ptr())) {
		if ((*(*((*(_23060_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _21e64d594_WriteStr(_23034_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:233:5"));
				(except.result);
			});
		} else {
			({
				auto except = _21e64d594_WriteStr(_23034_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:235:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*((*((*(_23060_f))))._field_Decl))._field_Exceptional) {
		({
			auto except = _21e64d594_WriteStr(_23034_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:240:4"));
			(except.result);
		});
		_2172cb7e0_codeMut1((*(_self_))._field_rc.ptr(), _23034_s, &((*((*(_23060_f))))._field_Result));
		({
			auto except = _21e64d84c_WriteByte(_23034_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:242:4"));
		});
		return;;
	};
	_2172cb7e0_codeMut1((*(_self_))._field_rc.ptr(), _23034_s, &((*((*(_23060_f))))._field_Result));
}



inline void _2172c6169_anonFunc(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _24829_buf, jule::Ptr<_208822372_FnIns> _24856_f) {
	if ((((*(_24856_f))._field_Result != nullptr) && (_2089d4831_Tup((*(_24856_f))._field_Result) != nullptr))) {
		_2172b3ed1_pushResultIns((*(_self_))._field_oc, &(_24856_f));
	};
	_2172c5d06_funcInsResult(_self_, _24829_buf, &(_24856_f));
	if (((*(_24856_f))._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _21e64d84c_WriteByte(_24829_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:256:3"));
	});
	{
		auto expr = &((*(_24856_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ace94b3:;
		if (it != expr_end) {
			jule::I64 _2578_i = it - expr->begin();
			jule::Ptr<_20882121c_ParamIns> _25715_param = *it;
			{
				if (_20881ce3e_IsSelf((*(_25715_param))._field_Decl.ptr())) {
					goto _iter_next_21ace94b3;
				};
				_2172c5630_paramIns(_self_, _24829_buf, &(_25715_param));
				if ((((*(_24856_f))._field_Params.len() - _2578_i) > 1LL)) {
					({
						auto except = _21e64d84c_WriteByte(_24829_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:263:5"));
					});
				};
			}
			_iter_next_21ace94b3:;
			++it;
			_2578_i++;
			goto _iter_begin_21ace94b3;
		}
		_iter_end_21ace94b3:;
	};
}



inline void _2172c64cc_func(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _26925_buf, jule::Ptr<_208822372_FnIns> _26952_f) {
	({
		auto except = _21e64d594_WriteStr(_26925_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:270:3"));
		(except.result);
	});
	_2172c6169_anonFunc(_self_, _26925_buf, _26952_f);
	({
		auto except = _21e64d84c_WriteByte(_26925_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:272:3"));
	});
}



inline void _2172c6840_kind(_2172c163c_typeCoder* _self_, _21e64c5b5_Builder* _27625_buf, jule::Ptr<_2089ce661_Type> _27652_k) {
	{
		
		if ((_2089d3ce7_Struct(_27652_k.ptr()) != nullptr)) {
			_case_begin_21acecc14:;
			{
				_2172c4ae6_structureIns(_self_, _27625_buf, _2089d3ce7_Struct(_27652_k));
				return;;
			}
		}
		else if (_2089d0552_Binded(_27652_k.ptr())) {
			_case_begin_21aceccad:;
			{
				({
					auto except = _21e64d594_WriteStr(_27625_buf, _2093a39e6_GetBindIdent(_27652_k));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:285:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_2089d2774_Prim(_27652_k) != nullptr)) {
			_case_begin_21acecd24:;
			{
				_2172c2363_prim(_self_, _27625_buf, _2089d2774_Prim(_27652_k));
				return;;
			}
		}
		else if ((_2089d4831_Tup(_27652_k) != nullptr)) {
			_case_begin_21acecd8a:;
			{
				_2172c26c6_tuple(_self_, _27625_buf, _2089d4831_Tup(_27652_k));
				return;;
			}
		}
		else if ((_2089d2a0a_Sptr(_27652_k) != nullptr)) {
			_case_begin_21acece01:;
			{
				_2172c2d9c_sptr(_self_, _27625_buf, _2089d2a0a_Sptr(_27652_k));
				return;;
			}
		}
		else if ((_2089d2c91_Ptr(_27652_k) != nullptr)) {
			_case_begin_21acece78:;
			{
				_2172c3210_ptr(_self_, _27625_buf, _2089d2c91_Ptr(_27652_k));
				return;;
			}
		}
		else if ((_2089d3027_Enum(_27652_k) != nullptr)) {
			_case_begin_21aced000:;
			{
				_2172c3573_enumDecl(_self_, _27625_buf, _2089d3027_Enum(_27652_k));
				return;;
			}
		}
		else if ((_2089d32ad_TypeEnum(_27652_k) != nullptr)) {
			_case_begin_21aced077:;
			{
				_2172c38d6_typeEnumDecl(_self_, _27625_buf, _2089d32ad_TypeEnum(_27652_k));
				return;;
			}
		}
		else if ((_2089d37ca_Slc(_27652_k) != nullptr)) {
			_case_begin_21aced0ee:;
			{
				_2172c40ac_slice(_self_, _27625_buf, _2089d37ca_Slc(_27652_k));
				return;;
			}
		}
		else if ((_2089d459a_Map(_27652_k) != nullptr)) {
			_case_begin_21aced176:;
			{
				_2172c4420_mapType(_self_, _27625_buf, _2089d459a_Map(_27652_k));
				return;;
			}
		}
		else if ((_2089d4314_Trait(_27652_k) != nullptr)) {
			_case_begin_21aced1ed:;
			{
				({
					auto except = _21e64d594_WriteStr(_27625_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:312:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_2089d3544_Arr(_27652_k) != nullptr)) {
			_case_begin_21aced275:;
			{
				_2172c4e59_array(_self_, _27625_buf, _2089d3544_Arr(_27652_k));
				return;;
			}
		}
		else if ((_2089d3a61_Fn(_27652_k) != nullptr)) {
			_case_begin_21aced2ec:;
			{
				_2172c64cc_func(_self_, _27625_buf, _2089d3a61_Fn(_27652_k));
				return;;
			}
		}
		_match_end_21aceca27:;
	};
	{
		auto &_match_expr{ (*(_27652_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data29)) {
			_case_begin_21aced385:;
			{
				({
					auto except = _21e64d594_WriteStr(_27625_buf, (*((*(_27652_k))._field_Kind.cast_ptr<_2172c0a26_customType>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:323:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_21ad067cd:;
			{
				({
					auto except = _21e64d594_WriteStr(_27625_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:325:4"));
					(except.result);
				});
			}
		}
		_match_end_21ad06767:;
	};
}








inline jule::Bool _2172c9227_resultCoder_eq(_2172c9227_resultCoder *_self_, _2172c9227_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_2172c9227_resultCoder> static__2172c9733_new(jule::Ptr<_2172c163c_typeCoder>* _34421_tc) {
	return jule::new_ptr<_2172c9227_resultCoder>(_2172c9227_resultCoder{._field_tc=(*(_34421_tc))});;
}



inline void _2172c9a96_ptr(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _34824_s, jule::Ptr<_2089e0760_Ptr> _34849_p) {
	({
		auto except = _21e64d594_WriteStr(_34824_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:349:3"));
		(except.result);
	});
	_2172cb47c_codeMut(_self_, _34824_s, &((*(_34849_p))._field_Elem));
}



inline void _2172c9e09_sptr(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _35325_s, jule::Ptr<_2089dbe98_Sptr> _35350_p) {
	({
		auto except = _21e64d594_WriteStr(_35325_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:354:3"));
		(except.result);
	});
	_2172cb47c_codeMut(_self_, _35325_s, &((*(_35350_p))._field_Elem));
}



inline void _2172ca26c_mapType(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _35828_s, jule::Ptr<_2089de110_Map> _35853_p) {
	({
		auto except = _21e64d594_WriteStr(_35828_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:359:3"));
		(except.result);
	});
	_2172cb47c_codeMut(_self_, _35828_s, &((*(_35853_p))._field_Key));
	_2172cb47c_codeMut(_self_, _35828_s, &((*_35853_p.alloc)._field_Val));
}



inline void _2172ca5d0_slice(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _36426_s, jule::Ptr<_2089dc96b_Slc> _36451_slc) {
	({
		auto except = _21e64d594_WriteStr(_36426_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:365:3"));
		(except.result);
	});
	_2172cb47c_codeMut(_self_, _36426_s, &((*(_36451_slc))._field_Elem));
}



inline void _2172ca943_arr(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _36924_s, jule::Ptr<_2089dec8c_Arr> _36949_arr) {
	({
		auto except = _21e64d594_WriteStr(_36924_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:370:3"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_36924_s, _21ec9e343_FmtInt(static_cast<jule::I64>((*(_36949_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:371:3"));
		(except.result);
	});
	_2172cb47c_codeMut(_self_, _36924_s, &((*_36949_arr.alloc)._field_Elem));
}



inline void _2172caca6_func(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _37525_s, jule::Ptr<_208822372_FnIns> _37550_f) {
	({
		auto except = _21e64d594_WriteStr(_37525_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:376:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37550_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad0de56:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> _37715_p = *it;
			{
				if ((*((*(_37715_p))._field_Decl))._field_Reference) {
					({
						auto except = _21e64d594_WriteStr(_37525_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:379:5"));
						(except.result);
					});
				};
				_2172cb47c_codeMut(_self_, _37525_s, &((*(_37715_p))._field_Type));
			}
			_iter_next_21ad0de56:;
			++it;
			goto _iter_begin_21ad0de56;
		}
		_iter_end_21ad0de56:;
	};
	if (((*_37550_f.alloc)._field_Result != nullptr)) {
		_2172cb47c_codeMut(_self_, _37525_s, &((*_37550_f.alloc)._field_Result));
	};
}



inline void _2172cb119_tup(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _38824_s, jule::Ptr<_2089dd560_Tuple> _38849_tup) {
	{
		auto expr = &((*(_38849_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad112bb:;
		if (it != expr_end) {
			jule::Ptr<_2089ce661_Type> _38915_t = *it;
			{
				({
					auto except = _21e64d594_WriteStr(_38824_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:390:4"));
					(except.result);
				});
				_2172cb47c_codeMut(_self_, _38824_s, &(_38915_t));
			}
			_iter_next_21ad112bb:;
			++it;
			goto _iter_begin_21ad112bb;
		}
		_iter_end_21ad112bb:;
	};
}



inline void _2172cb47c_codeMut(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _39528_s, jule::Ptr<_2089ce661_Type>* _39554_t) {
	if (_2089d0552_Binded((*(_39554_t)).ptr())) {
		({
			auto except = _21e64d594_WriteStr(_39528_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:404:4"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_39528_s, _2093a39e6_GetBindIdent((*(_39554_t))));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:405:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39554_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data28)) {
			_case_begin_21ad1293d:;
			{
				_2172c9a96_ptr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_2089e0760_Ptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_21ad134aa:;
			{
				_2172c9e09_sptr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_2089dbe98_Sptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data26)) {
			_case_begin_21ad13521:;
			{
				_2172ca26c_mapType(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_2089de110_Map>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)) {
			_case_begin_21ad13587:;
			{
				_2172ca5d0_slice(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_2089dc96b_Slc>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data27)) {
			_case_begin_21ad135ed:;
			{
				_2172ca943_arr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_2089dec8c_Arr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)) {
			_case_begin_21ad13a4e:;
			{
				_2172caca6_func(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_208822372_FnIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data3)) {
			_case_begin_21ad13ab5:;
			{
				jule::Ptr<_20882c17e_Enum> _4224_te = (*((*(_39554_t))))._field_Kind.cast_ptr<_20882c17e_Enum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data3);;
				static__2172088d7_toOut(_39528_s, (*(_4224_te))._field_Ident, static_cast<jule::Uintptr>(_4224_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data4)) {
			_case_begin_21ad13b2b:;
			{
				jule::Ptr<_20882d889_TypeEnum> _4254_te = (*((*(_39554_t))))._field_Kind.cast_ptr<_20882d889_TypeEnum>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data4);;
				static__2172088d7_toOut(_39528_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_21ad13b92:;
			{
				jule::Ptr<_2087490bd_StructIns> _4288_si = (*((*(_39554_t))))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				static__21720a0ae_structureIns(_39528_s, &(_4288_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data2)) {
			_case_begin_21ad13c08:;
			{
				jule::Ptr<_2088299c8_Trait> _4318_trt = (*((*(_39554_t))))._field_Kind.cast_ptr<_2088299c8_Trait>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data2);;
				static__2172096eb_traitDecl(_39528_s, _4318_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)) {
			_case_begin_21ad13c6e:;
			{
				({
					auto except = _21e64d594_WriteStr(_39528_s, (*((*((*(_39554_t))))._field_Kind.cast_ptr<_2089d846c_Prim>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:434:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data25)) {
			_case_begin_21ad13cd5:;
			{
				_2172cb119_tup(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_2089dd560_Tuple>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_21ad13444:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:438:4"));;
			}
		}
		_match_end_21ad133cd:;
	};
}



inline void _2172cb7e0_codeMut1(_2172c9227_resultCoder* _self_, _21e64c5b5_Builder* _44229_s, jule::Ptr<_2089ce661_Type>* _44255_t) {
	jule::Ptr<_2089dd560_Tuple> _4437_tup = _2089d4831_Tup((*(_44255_t)).ptr());;
	if ((_4437_tup != nullptr)) {
		_2172cb119_tup(_self_, _44229_s, _4437_tup);
	} else {
		_2172c6840_kind((*(_self_))._field_tc.ptr(), _44229_s, (*(_44255_t)));
	};
}



inline jule::Slice<jule::U8> _2172cbaed_code(_2172c9227_resultCoder* _self_, jule::Ptr<_2089ce661_Type>* _45125_t) {
	_21e64c5b5_Builder _4527_s = static__21e64ce12_New(20LL);;
	_2172cb47c_codeMut(_self_, &(_4527_s), _45125_t);
	return _21e64e8c5_Buf(&_4527_s);;
}








inline jule::Bool _21ad1e164_Flag_eq(_21ad1e164_Flag *_self_, _21ad1e164_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _21ad1e32e_Name(_21ad1e164_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _21ad1e483_What(_21ad1e164_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _21ad1e5d7_Reset(_21ad1e164_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _21ad1e73b_Short(_21ad1e164_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _21ad22299_Flag_eq(_21ad22299_Flag *_self_, _21ad22299_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _21ad22453_Name(_21ad22299_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _21ad22761_What(_21ad22299_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _21ad228a4_Reset(_21ad22299_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _21ad229e7_Short(_21ad22299_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _21ad254de_Flag_eq(_21ad254de_Flag *_self_, _21ad254de_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _21ad25698_Name(_21ad254de_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _21ad259a6_What(_21ad254de_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _21ad25ae9_Reset(_21ad254de_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _21ad25c3c_Short(_21ad254de_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _21ad28778_Flag_eq(_21ad28778_Flag *_self_, _21ad28778_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _21ad28932_Name(_21ad28778_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _21ad28c40_What(_21ad28778_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _21ad28d83_Reset(_21ad28778_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _21ad28ec6_Short(_21ad28778_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _21ad2b9bd_Flag_eq(_21ad2b9bd_Flag *_self_, _21ad2b9bd_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _21ad2bb77_Name(_21ad2b9bd_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _21ad2be85_What(_21ad2b9bd_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _21ad2c0c8_Reset(_21ad2b9bd_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _21ad2c21b_Short(_21ad2b9bd_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_21733e325_FlagSet> static__21733e644_New(void) {
	return jule::new_ptr<_21733e325_FlagSet>(_21733e325_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _21733eaea_FindFlag(_21733e325_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad33c17:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_21733c752_CommonFlagMptrData*)_7215_flag.safe_type())->_21730ab1b_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_21ad33c17:;
			++it;
			goto _iter_begin_21ad33c17;
		}
		_iter_end_21ad33c17:;
	};
	return nullptr;;
}



inline jule::Trait _21733ee3b_FindFlagShort(_21733e325_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad3429a:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_21733c752_CommonFlagMptrData*)_8215_flag.safe_type())->_21730ac5e_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_21ad3429a:;
			++it;
			goto _iter_begin_21ad3429a;
		}
		_iter_end_21ad3429a:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _217340513_Parse(_21733e325_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_217341cd9_argParser _1167_ap = _217341cd9_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _217343318_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_21ad2b9bd_Flag> _21ada597b_addFlagCommon(_21733e325_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_21733eaea_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_21733ee3b_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_21ad2b9bd_Flag> _1407_flag = jule::new_ptr<_21ad2b9bd_Flag>(_21ad2b9bd_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_21ad28778_Flag> _21adae15a_addFlagCommon(_21733e325_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_21733eaea_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_21733ee3b_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_21ad28778_Flag> _1407_flag = jule::new_ptr<_21ad28778_Flag>(_21ad28778_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _21ada344b_AddVar(_21733e325_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_21ad2b9bd_Flag> _1717_flag = _21ada597b_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _21adabb6e_AddVar(_21733e325_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_21ad28778_Flag> _1717_flag = _21adae15a_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _21ad3db45_parseInteger(_217341cd9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_21ad4140b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_220c5c157_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_21ad4173b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_220c5c157_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_21ad417a2:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_220c5c157_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_21ad410a9:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_21ad41120:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_21ad41043:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_21ad40e33:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _21ad46444_parseInteger(_217341cd9_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_21ad48cd7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_220c5c157_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_21ad49117:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_220c5c157_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_21ad4917d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_220c5c157_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_21ad48985:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_21ad489eb:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_21ad4891e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_21ad4880e:;
	};
	return __jule_func_result;;
}



inline jule::Str _217342636_getData(_217341cd9_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _2173428ab_processFlag(_217341cd9_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data3)) {
			_case_begin_21ad3ad0c:;
			{
				jule::Ptr<_21ad28778_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_21ad28778_Flag>((jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_21ad3ac0d:;
	};
	jule::Str _2203_data = _217342636_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_21733c752_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_21730ab1b_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression missing", 20)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data0)) {
			_case_begin_21ad3cbee:;
			{
				jule::Ptr<_21ad1e164_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_21ad1e164_Flag>((jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _21ad3db45_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon21ad42473, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_21733c752_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_21730ab1b_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid signed integer", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data1)) {
			_case_begin_21ad3c528:;
			{
				jule::Ptr<_21ad22299_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_21ad22299_Flag>((jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _21ad46444_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon21ad49d4e, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_21733c752_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_21730ab1b_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid unsigned integer", 43)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data2)) {
			_case_begin_21ad3cc65:;
			{
				jule::Ptr<_21ad254de_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_21ad254de_Flag>((jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _21ec946bd_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_21733c752_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_21730ab1b_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid floating-point", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data4)) {
			_case_begin_21ad3cccb:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_21ad2b9bd_Flag>((jule::Trait::Type*)&_21733c752_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_21ad3c3a2:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _217342b64_singleDash(_217341cd9_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_21ad50728:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _21733ee3b_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move((*(_25227_arg))); size += part0.len(); jule::Str part1 = std::move(jule::Str::lit(": flag is not exist: ", 21)); size += part1.len(); jule::Str part2 = std::move(__jule_strFromRune(_25710_r)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
				({
					auto except = _2173428ab_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_21ad50728:;
			it += len;
			goto _iter_begin_21ad50728;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _217342e1c_doubleDash(_217341cd9_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _21733eaea_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _2173428ab_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _21734311a_tryArg(_217341cd9_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _217342e1c_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _217342b64_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _217343318_parse(_217341cd9_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _21734311a_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_21ad55e8c:;
	}
	_iter_end_21ad55e8c:;;
	return jule::VoidExceptional{};
}







inline __jule_tuple_x_20939938d_IR__jule_tuple_s_21e65b904_Log static__209399866_Build(jule::Str _3018_path, jule::I64 _3029_flags) {
	__jule_tuple_x_20939938d_IR__jule_tuple_s_21e65b904_Log __jule_func_result;
	jule::Ptr<_209396940_Importer> _317_importer = static__209396d6e_New(_20939b318_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_2087253da_AST>> _337_files;
	jule::Slice<_21e65b904_Log> _3318_logs;
	({
		__jule_tuple_sx_2087253da_AST__jule_tuple_s_21e65b904_Log __jule_assign_result = _209398359_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_2087253da_AST> _457_firstFile = _337_files[0LL];;
	_20939b5c1_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_2089107b2_Package> _487_pkg;
	({
		__jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log __jule_assign_result = _208a01e25_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_20890a03c_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_20939938d_IR> _537_ir = jule::new_ptr<_20939938d_IR>(_20939938d_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_20890d040_ImportInfo>(nullptr), ._field_Used=_209397105_AllPackages(_317_importer.ptr()), ._field_Ordered=_2093a839c_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_20939b109_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _209399d50_appendStructs(_20939938d_IR* _self_, jule::Ptr<_2089107b2_Package>* _6830_p, jule::Slice<jule::Ptr<_208746230_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a26170b:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a262201:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_208746230_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_21a262201:;
						++it;
						goto _iter_begin_21a262201;
					}
					_iter_end_21a262201:;
				};
				{
					auto expr = &((*_6915_f.alloc)._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2625b9:;
					if (it != expr_end) {
						jule::Ptr<_2089cd94b_TypeAlias> _7516_ta = *it;
						{
							if (((!((*(_7516_ta))._field_Binded)) && (*_7516_ta.alloc)._field_Strict)) {
								{ jule::Slice<jule::Ptr<_208746230_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push((*((*((*((*_7516_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)))._field_Decl); };
							};
						}
						_iter_next_21a2625b9:;
						++it;
						goto _iter_begin_21a2625b9;
					}
					_iter_end_21a2625b9:;
				};
			}
			_iter_next_21a26170b:;
			++it;
			goto _iter_begin_21a26170b;
		}
		_iter_end_21a26170b:;
	};
}



inline jule::Slice<jule::Ptr<_208746230_Struct>> _20939a0d6_GetAllStructures(_20939938d_IR* _self_) {
	jule::Slice<jule::Ptr<_208746230_Struct>> _8611_buffer = nullptr;;
	_209399d50_appendStructs(_self_, &((*(_self_))._field_Main), &(_8611_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a26418c:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _8815_u = *it;
			{
				if ((!((*(_8815_u))._field_Binded))) {
					_209399d50_appendStructs(_self_, &((*_8815_u.alloc)._field_Package), &(_8611_buffer));
				};
			}
			_iter_next_21a26418c:;
			++it;
			goto _iter_begin_21a26418c;
		}
		_iter_end_21a26418c:;
	};
	return _8611_buffer;;
}



inline void _20939a449_appendGlobals(_20939938d_IR* _self_, jule::Ptr<_2089107b2_Package>* _9630_p, jule::Slice<jule::Ptr<_20894d7de_Var>>* _9654_buffer) {
	{
		auto expr = &((*((*(_9630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a266337:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _9715_f = *it;
			{
				{
					auto expr = &((*(_9715_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a266d2c:;
					if (it != expr_end) {
						jule::Ptr<_20894d7de_Var> _9816_v = *it;
						{
							if (((((*(_9816_v))._field_Token != nullptr) && (!((*_9816_v.alloc)._field_Binded))) && (!((*_9816_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_20894d7de_Var>> &__jule_push_dest = (*(_9654_buffer)); __jule_push_dest.push(_9816_v); };
							};
						}
						_iter_next_21a266d2c:;
						++it;
						goto _iter_begin_21a266d2c;
					}
					_iter_end_21a266d2c:;
				};
			}
			_iter_next_21a266337:;
			++it;
			goto _iter_begin_21a266337;
		}
		_iter_end_21a266337:;
	};
}



inline jule::Slice<jule::Ptr<_20894d7de_Var>> _20939a6d0_GetAllGlobals(_20939938d_IR* _self_) {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _10911_buffer = nullptr;;
	_20939a449_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a268669:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _11115_u = *it;
			{
				if ((!((*(_11115_u))._field_Binded))) {
					_20939a449_appendGlobals(_self_, &((*_11115_u.alloc)._field_Package), &(_10911_buffer));
				};
			}
			_iter_next_21a268669:;
			++it;
			goto _iter_begin_21a268669;
		}
		_iter_end_21a268669:;
	};
	return _10911_buffer;;
}



inline void _20939a8cd_Order(_20939938d_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_20939a6d0_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_20939a0d6_GetAllStructures(_self_);
	_21a26a1c6_order((*(_self_))._field_Ordered._field_Globals);
	_21a26a902_order((*(_self_))._field_Ordered._field_Structs);
}








inline jule::Bool _21e80ade4_Dir_eq(_21e80ade4_Dir *_self_, _21e80ade4_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_21e88b804_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_21e80ade4_Dir>> static__220c6b1cc_Read(jule::Str _1117_path) {
	jule::Slice<_21e80ade4_Dir> __jule_func_result;
	jule::Slice<jule::U8> _123_s = _238cbd711_StrToBytes(_1117_path);;
	DIR* _137_dir = _2390a9832_Opendir((&(_123_s[0LL])));;
	if ((_137_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<_21e80ade4_Dir>>{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _184_dirent = _2390a9a0d_Readdir(_137_dir);;
			if ((_184_dirent == nullptr)) {
				goto _iter_end_218296bb6;
			};
			jule::Str _224_name = _238cbd47a_BytePtrToStr(((jule::U8*)((*(_184_dirent)).d_name)));;
			_21e88b804_Stat _238_stat = ({
				auto except = static__21e80ce3a_Of(_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _224_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_21e80ade4_Dir>>{.error=except.error};
				} _21e88b804_Stat{._field_mode=0LL, ._field_size=0};});
			});;
			{ jule::Slice<_21e80ade4_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_21e80ade4_Dir{._field_Name=_224_name, ._field_Stat=_238_stat}); };
		}
	_iter_next_218296bb6:;
	}
	_iter_end_218296bb6:;;
	_2390a9ca5_Closedir(_137_dir);
	return jule::Exceptional<jule::Slice<_21e80ade4_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__220c6b3ca_Create(jule::Str _3419_path) {
	jule::Slice<jule::U8> _383_s = _238cbd711_StrToBytes(_3419_path);;
	if ((_2390aa6ac_Mkdir((&(_383_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__220c6b60b_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U8> _463_s = _238cbd711_StrToBytes(_4519_path);;
	if ((_2390aa976_Rmdir((&(_463_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_21e8a12db_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline jule::Ptr<_21e80ba1b_Cmd> static__21e80be6c_New(jule::Str _3516_path) {
	return jule::new_ptr<_21e80ba1b_Cmd>(_21e80ba1b_Cmd{._field_attrs=_21e88968c_cmdAttrs{._field_pid=-1LL}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _21e80c16a_Spawn(_21e80ba1b_Cmd* _self_) {
	return _21e88a43a_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21e80c5ee_Wait(_21e80ba1b_Cmd* _self_) {
	return _21e88a8be_wait(_self_);
}



inline jule::VoidExceptional _21e88a43a_spawn(_21e80ba1b_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_unix.jule:84:4"));;
	};
	jule::Str _863_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _877_pipe;;
	if ((pipe((&(_877_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type139)};
	};
	jule::I64 _913_pipe0 = static_cast<jule::I64>(_877_pipe[0LL]);;
	jule::I64 _923_pipe1 = static_cast<jule::I64>(_877_pipe[1LL]);;
	if ((_2390a8710_Fcntl(_923_pipe1, F_SETFD, (fcntl(_923_pipe1, F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_2390c5496_Close(_913_pipe0);
		_2390c5496_Close(_923_pipe1);
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type139)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_2182a6027:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type139)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_2182a5d90:;
			{
				_2390c5496_Close(_913_pipe0);
				jule::Slice<jule::Str> _1048_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1048_args[0LL]=_863_path;
				(_1048_args).append((*(_self_))._field_Args);;
				({
					auto except = _21e88a1a4_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_21e889e73_execvp(&(_863_path), &(_1048_args));
				jule::Str _1094_code = _21e860c07_Itoa(_239079c86_GetLastErrno());;
				{
					_2390c584d_Write(_923_pipe1, (&(_1094_code[0LL])), static_cast<jule::U64>(_1094_code.len()));
				};
				_2390c5496_Close(_923_pipe1);
				_21e89a5d2_Exit(1LL);
			}
		}
		else {
			_case_begin_2182a2c16:;
			{
				_2390c5496_Close(_923_pipe1);
				jule::Array<jule::U8,16> _11512_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I64 _1164_n = _2390c50bc_Read(_913_pipe0, (&(_11512_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_2390c5496_Close(_913_pipe0);
				if ((_1164_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1205_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e8572d6_AtoiBp((&(_11512_buf[0LL])), _1164_n);
						_1205_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_21e88ac54_cmdErrorFromCode(_1205_code), &__jule_any_type139)};
				};
			}
		}
		_match_end_2182a45b9:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21e88a8be_wait(_21e80ba1b_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_unix.jule:138:4"));;
	};
	jule::I64 _1407_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1407_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_21e88ae63_getLastCmdError(), &__jule_any_type139)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1407_stat)};;
}







inline void _238c8eddb_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _238cbd47a_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_776_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_21737e332:;
		}
		_iter_end_21737e332:;;
	};
	return __jule_bytesToStr(_776_buf);;
}



inline jule::Slice<jule::U8> _238cbd711_StrToBytes(jule::Str _9015_s) {
	{
		auto expr = &(_9015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21737e750:;
		if (it != expr_end) {
			jule::I64 _916_i = it - expr->begin();
			jule::U8 *_919_b = it;
			{
				if (((*(_919_b)) == 0LLU)) {
					jule::Slice<jule::U8> _938_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_916_i + 1LL), (_916_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_938_bytes, _9015_s.slice(0LL, _938_bytes.len()));
					return _938_bytes;;
				};
			}
			_iter_next_21737e750:;
			++it;
			_916_i++;
			goto _iter_begin_21737e750;
		}
		_iter_end_21737e750:;
	};
	jule::Slice<jule::U8> _986_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9015_s.len() + 1LL), (_9015_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_986_bytes, _9015_s);
	return _986_bytes;;
}



inline jule::Str _238cbe06e_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _2173859dc_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _238cd51b7_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _2173859dc_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _238cd544d_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _238cbe06e_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _238cd5717_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I64 _239079c86_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _2390a8710_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg) {
	return fcntl(_5510_handle, _5523_cmd, _5533_arg);;
}



inline jule::I64 _2390a8a84_Stat(jule::U8* _6016_path, struct stat* _6033_stat) {
	return stat(((char*)(_6016_path)), _6033_stat);;
}



inline jule::I64 _2390a8eb3_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode) {
	return open(((char*)(_6516_path)), _6529_flag, _6540_mode);;
}



inline jule::U8* _2390a9337_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7118_buff)), _7131_bufflen)));;
}



inline DIR* _2390a9832_Opendir(jule::U8* _7619_path) {
	return ((DIR*)(opendir(((char*)(_7619_path)))));;
}



inline struct dirent* _2390a9a0d_Readdir(DIR* _7923_dir) {
	return ((struct dirent*)(readdir(((DIR*)(_7923_dir)))));;
}



inline jule::I64 _2390a9ca5_Closedir(DIR* _8224_dir) {
	return closedir(((DIR*)(_8224_dir)));;
}



inline jule::I64 _2390aa6ac_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode) {
	return mkdir(((char*)(_9117_path)), _9130_mode);;
}



inline jule::I64 _2390aa976_Rmdir(jule::U8* _9617_path) {
	return rmdir(((char*)(_9617_path)));;
}



inline jule::I64 _2390aac40_Unlink(jule::U8* _9918_path) {
	return unlink(((char*)(_9918_path)));;
}



inline jule::I64 _2390c50bc_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _2390c5496_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _2390c584d_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _2390c5a7e_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _21e42d495_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _21e42c20d_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_21e42c7b3_acceptRange _1962_accept = _21e42cb59_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21e42d7d6_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _21e42c20d_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_21e42c7b3_acceptRange _2432_accept = _21e42cb59_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21e42dd36_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_21e430552_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_21742d090;
			};
		}
	_iter_next_21742d090:;
	}
	_iter_end_21742d090:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _21e42e881_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _21e42ec05_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _21e42ec05_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_21743bce6:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_21743bd5c:;
			{
				_41242_r=128LL;
				goto _case_begin_21743ba3d;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_21743ba3d:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_21743b5ba:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_21743b543:;
	};
}



inline jule::I64 _21e430288_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_217445e65;
			};
			jule::U8 _4823_x = _21e42c20d_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_217445e65;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_217445e65;
			};
			_21e42c7b3_acceptRange _4923_accept = _21e42cb59_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_217445e65:;
	}
	_iter_end_217445e65:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21e430552_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _21e56c5c3_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _21e574e5a_Len64(_5919_x));;
}



inline jule::I64 _21e56d519_TrailingZeros(jule::U64 _8118_x) {
	;
	return _21e56e1b8_TrailingZeros64(static_cast<jule::U64>(_8118_x));;
}



inline jule::I64 _21e56ddee_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_21e56cbbc__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _21e56e1b8_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_21e56d2a5__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _21e574b91_Len32(jule::U32 _35014_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I64 _21e574e5a_Len64(jule::U64 _36414_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21e575be7_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21e577501_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _21e43518e__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _238b40bb0_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I64 _238b89bc6_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_217513708:;
	}
	_iter_end_217513708:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_217514a17:;
	}
	_iter_end_217514a17:;;
	return _238cd5717_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _238cd6a26_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _238cd5717_StrFromBytes(_516_buf);;
}



inline jule::I64 _238cd6a26_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_21751db97:;
	}
	_iter_end_21751db97:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_238cd7bc0_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _238b40bb0_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I64 _852_exp = (static_cast<jule::I64>((_832_bits >> 52LLU)) & 2047LLU);;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LLU)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_21752453d:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_2175242b8:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_217522173:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_217523d23:;
		};
	};
	;
	jule::I64 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_238cd6a26_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I64 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I64 _1203_digit = static_cast<jule::I64>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_21752740e:;
	}
	_iter_end_21752740e:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_217528311;
			};
		}
	_iter_next_217528311:;
	}
	_iter_end_217528311:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _238cd5717_StrFromBytes(_1046_buf);;
}



inline jule::Str _21ad7a3e0_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad7ba0c:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_2183249be_toStr((*(_1459_z))));;
			}
			_iter_next_21ad7ba0c:;
			++it;
			_1456_i++;
			goto _iter_begin_21ad7ba0c;
		}
		_iter_end_21ad7ba0c:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _238cd5717_StrFromBytes(_1436_buf);;
}



inline jule::Str _21ad6d1c4_structToStr(_21e64c5b5_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_21ad70bdd:;
				{
					;
					{
						
{
							_case_begin_21ad722b6:;
							{
								;
								;
							}
						}
						_match_end_21ad71e97:;
					};
				}
			}
			_match_end_21ad71271:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_21ad743b7:;
				{
					(_1966_buf).append(_21ad748e5_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_21ad74087:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _238cd5717_StrFromBytes(_1966_buf);;
}



inline jule::Str _217590cd5_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_217591e7e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_217591d4c:;
	};
	{
		
{
			_case_begin_2175927ba:;
			{
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_217592c93:;
	};
}

inline jule::Str _2175dc518_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_2175dd77d:;
			{
				return _21613_x;;
			}
		}
		_match_end_2175dd86b:;
	};
}

inline jule::Str _21828e296_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_218290e57:;
			{
				return _2182954ab_toStr(_21613_x);;
			}
		}
		_match_end_218290462:;
	};
}

inline jule::Str _2182954ab_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_218296bc7:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_2182967a9:;
	};
}

inline jule::Str _2182a1330_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2182a2e9c:;
			{
				return _2182954ab_toStr(_21613_x);;
			}
		}
		_match_end_2182a24a7:;
	};
}

inline jule::Str _2182d43b8_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2182d60ce:;
			{
				return _2182954ab_toStr(_21613_x);;
			}
		}
		_match_end_2182d562d:;
	};
}

inline jule::Str _2183249be_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_218326284:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_218325cab:;
	};
}

inline jule::Str _21832523e_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_21832ae15:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_21832aa19:;
	};
}

inline jule::Str _21863b3ce_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_21863d04b:;
			{
				return _2182954ab_toStr(_21613_x);;
			}
		}
		_match_end_21863c556:;
	};
}

inline jule::Str _218901c8d_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_218903344:;
			{
				return __jule_i64ToStr(_21613_x);;
			}
		}
		_match_end_218902e15:;
	};
}

inline jule::Str _218902068_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_218908beb:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_218908723:;
	};
}

inline jule::Str _2189079db_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_21890da9c:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_21890d4e7:;
	};
}

inline jule::Str _21890e053_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_21891074c:;
			{
				return __jule_f64ToStr(_21613_x);;
			}
		}
		_match_end_218910263:;
	};
}

inline jule::Str _2189b2b95_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2189b43e4:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_2189b3da5:;
	};
}

inline jule::Str _2189b31c3_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2189b9130:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_2189b8c23:;
	};
}

inline jule::Str _218324d98_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2189bec18:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_2189be7d9:;
	};
}

inline jule::Str _2189bdc28_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2189c6912:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_2189c6439:;
	};
}

inline jule::Str _2189c74a1_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2189cb9b1:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_2189cb4d8:;
	};
}

inline jule::Str _2189cc550_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_2189d1a60:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_2189d1587:;
	};
}

inline jule::Str _218c3581e_toStr(jule::Ptr<_20894d7de_Var> _21613_x) {
	;
	{
		
{
			_case_begin_218c368ec:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c367ba:;
	};
	{
		
{
			_case_begin_218c379a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c37711:;
	};
}

inline jule::Str _218c37c1c_toStr(jule::Ptr<_2089cd94b_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_218c38c95:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c38b63:;
	};
	{
		
{
			_case_begin_218c39e1c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c38bc9:;
	};
}

inline jule::Str _218c3a181_toStr(jule::Ptr<_208746230_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_218c3c392:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c3c260:;
	};
	{
		
{
			_case_begin_218c3d519:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c3c2c6:;
	};
}

inline jule::Str _218c3a406_toStr(jule::Ptr<_20881e2b4_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_218c40928:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c4083a:;
	};
	{
		
{
			_case_begin_218c41b16:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c416b5:;
	};
}

inline jule::Str _218c41e68_toStr(jule::Ptr<_2088299c8_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_218c44201:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c440be:;
	};
	{
		
{
			_case_begin_218c45378:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c44135:;
	};
}

inline jule::Str _218c42199_toStr(jule::Ptr<_20882c17e_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_218c474e0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c4737a:;
	};
	{
		
{
			_case_begin_218c48645:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c4825a:;
	};
}

inline jule::Str _218c45620_toStr(jule::Ptr<_20882d889_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_218c49316:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c491d4:;
	};
	{
		
{
			_case_begin_218c4b758:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c4b390:;
	};
}

inline jule::Str _218c67158_toStr(jule::Ptr<_208744e10_Field> _21613_x) {
	;
	{
		
{
			_case_begin_218c682ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c6817b:;
	};
	{
		
{
			_case_begin_218c69369:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c690c2:;
	};
}

inline jule::Str _218c7870d_toStr(jule::Ptr<_208799195_Const> _21613_x) {
	;
	{
		
{
			_case_begin_218c79863:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c79731:;
	};
	{
		
{
			_case_begin_218c7a91e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c7a677:;
	};
}

inline jule::Str _218c91b22_toStr(jule::Ptr<_20882b623_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_218c92c66:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218c92b34:;
	};
	{
		
{
			_case_begin_218c93d22:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218c93a7a:;
	};
}

inline jule::Str _218ca27c0_toStr(jule::Ptr<_20881c7e0_Param> _21613_x) {
	;
	{
		
{
			_case_begin_218ca3bab:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2189b3b0d:;
	};
	{
		
{
			_case_begin_218ca4d00:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2189b3b74:;
	};
}

inline jule::Str _218e55412_toStr(jule::Ptr<_20872794d_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_218e56776:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e56644:;
	};
	{
		
{
			_case_begin_218e57832:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e5758a:;
	};
}

inline jule::Str _218e77dc4_toStr(jule::Ptr<_2088ce9e5_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_218e79106:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e78ec4:;
	};
	{
		
{
			_case_begin_218e7a1b2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e79e1a:;
	};
}

inline jule::Str _218e809d1_toStr(jule::Ptr<_20872c26b_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_218e82021:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e81dde:;
	};
	{
		
{
			_case_begin_218e830cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e82d35:;
	};
}

inline jule::Str _218e8cbca_toStr(jule::Ptr<_208735ce1_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_218e8dcb9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e8db87:;
	};
	{
		
{
			_case_begin_218e8ed75:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e8eacd:;
	};
}

inline jule::Str _218e8e2c5_toStr(jule::Ptr<_20872b677_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_218e9088c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e9075a:;
	};
	{
		
{
			_case_begin_218e91a8b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e907c1:;
	};
}

inline jule::Str _218e8e605_toStr(jule::Ptr<_2088cdeab_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_218e92174:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e92042:;
	};
	{
		
{
			_case_begin_218e94b27:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e920a8:;
	};
}

inline jule::Str _218e926a2_toStr(jule::Ptr<_2088ce462_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_218e94e68:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e94d36:;
	};
	{
		
{
			_case_begin_218e97256:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e952ba:;
	};
}

inline jule::Str _218e918e3_toStr(jule::Ptr<_20899a9a1_Data> _21613_x) {
	;
	{
		
{
			_case_begin_218e976eb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e975b9:;
	};
	{
		
{
			_case_begin_218e99d08:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e98851:;
	};
}

inline jule::Str _218e97c07_toStr(jule::Ptr<_208814078_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_218e9adc5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218e9ac93:;
	};
	{
		
{
			_case_begin_218e9d207:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218e9ad09:;
	};
}

inline jule::Str _218eb7ba0_toStr(jule::Ptr<_2088cd472_Label> _21613_x) {
	;
	{
		
{
			_case_begin_218eb8cc2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218eb8b90:;
	};
	{
		
{
			_case_begin_218eb9d7d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218eb9ad6:;
	};
}

inline jule::Str _218ed5b46_toStr(jule::Ptr<_2088ca969_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_218ed6c9b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218ed6b69:;
	};
	{
		
{
			_case_begin_218ed7d57:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218ed7ab0:;
	};
}

inline jule::Str _218edec60_toStr(jule::Ptr<_20881a139_BuiltinErrorCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_218ee0d3d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218ee0c0b:;
	};
	{
		
{
			_case_begin_218ee1de9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218ee1b52:;
	};
}

inline jule::Str _218ee2d62_toStr(jule::Ptr<_20881b14b_BackendEmitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_218ee8b6a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218ee8a38:;
	};
	{
		
{
			_case_begin_218eeaead:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218ee8a9e:;
	};
}

inline jule::Str _218ee3549_toStr(jule::Ptr<_208818db3_BuiltinAppendCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_218eeb51e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218eeb3dc:;
	};
	{
		
{
			_case_begin_218eec71d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218eeb453:;
	};
}

inline jule::Str _219001942_toStr(jule::Ptr<_208817983_BuiltinPrintCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_218eec960:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218eec861:;
	};
	{
		
{
			_case_begin_218eed422:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218eed884:;
	};
}

inline jule::Str _2190041b4_toStr(jule::Ptr<_208817c80_BuiltinPrintlnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2190000a0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21900103a:;
	};
	{
		
{
			_case_begin_219001557:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219001139:;
	};
}

inline jule::Str _21900059a_toStr(jule::Ptr<_208818533_BuiltinPanicCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2190014d0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21900139d:;
	};
	{
		
{
			_case_begin_219003bec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219002888:;
	};
}

inline jule::Str _219006705_toStr(jule::Ptr<_208819c60_BuiltinCopyCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219006040:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219005e52:;
	};
	{
		
{
			_case_begin_21900654b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21900612d:;
	};
}

inline jule::Str _219003e83_toStr(jule::Ptr<_208819886_BuiltinDeleteCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2190064c4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190063d6:;
	};
	{
		
{
			_case_begin_219008cbd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2190088a0:;
	};
}

inline jule::Str _21900e19c_toStr(jule::Ptr<_20881b448_FreeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219008a37:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21900ae24:;
	};
	{
		
{
			_case_begin_21900b232:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219008a9d:;
	};
}

inline jule::Str _219015956_toStr(jule::Ptr<_2088cb55d_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_219016aab:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219016979:;
	};
	{
		
{
			_case_begin_219017b67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2190178c0:;
	};
}

inline jule::Str _219020d6d_toStr(jule::Ptr<_2088cb85a_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_219021ec3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219021d91:;
	};
	{
		
{
			_case_begin_21902307e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219022cd7:;
	};
}

inline jule::Str _2190255d1_toStr(jule::Ptr<_2088cbd11_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_219027924:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190277e2:;
	};
	{
		
{
			_case_begin_2190289d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219028738:;
	};
}

inline jule::Str _2190520ad_toStr(jule::Ptr<_2088cc7e5_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_219053213:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190530d1:;
	};
	{
		
{
			_case_begin_2190542be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219054027:;
	};
}

inline jule::Str _2190616c7_toStr(jule::Ptr<_20873b70e_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_2190627e9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190626b7:;
	};
	{
		
{
			_case_begin_2190638a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21906360d:;
	};
}

inline jule::Str _219064103_toStr(jule::Ptr<_20873c116_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_219065115:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219064ed3:;
	};
	{
		
{
			_case_begin_219066248:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21906606c:;
	};
}

inline jule::Str _21907eb8a_toStr(jule::Ptr<_2088ccae2_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_219080ce0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219080bad:;
	};
	{
		
{
			_case_begin_219081d9b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219081b04:;
	};
}

inline jule::Str _21908859a_toStr(jule::Ptr<_2088cdad2_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_219089700:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190895bd:;
	};
	{
		
{
			_case_begin_21908a7ab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21908a514:;
	};
}

inline jule::Str _2190c1627_toStr(jule::Ptr<_20872ce92_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2190c2727:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190c25e5:;
	};
	{
		
{
			_case_begin_2190c37d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2190c353b:;
	};
}

inline jule::Str _2190e55c4_toStr(jule::Ptr<_208814908_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2190e66e6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2190e65b4:;
	};
	{
		
{
			_case_begin_2190e77a2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2190e750a:;
	};
}

inline jule::Str _21913d760_toStr(jule::Ptr<_2088d0463_Match> _21613_x) {
	;
	{
		
{
			_case_begin_21913e8b5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21913e783:;
	};
	{
		
{
			_case_begin_219140971:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2191406c9:;
	};
}

inline jule::Str _219157416_toStr(jule::Ptr<_2088d1453_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_218ca3914:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_218ca37d2:;
	};
	{
		
{
			_case_begin_2191595a0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_218ca3848:;
	};
}

inline jule::Str _219172068_toStr(jule::Ptr<_2088ccebb_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_219172c4a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219172b18:;
	};
	{
		
{
			_case_begin_219173d06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219173a5e:;
	};
}

inline jule::Str _219177dc6_toStr(jule::Ptr<_2088d17e9_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_21917902b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219178de9:;
	};
	{
		
{
			_case_begin_21917a0d7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219179d40:;
	};
}

inline jule::Str _219184dd3_toStr(jule::Ptr<_208737441_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_219186005:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219185dc3:;
	};
	{
		
{
			_case_begin_2191870b1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219186d19:;
	};
}

inline jule::Str _219186511_toStr(jule::Ptr<_20873a28a_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_219187b50:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219187a1d:;
	};
	{
		
{
			_case_begin_219188d4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219187a84:;
	};
}

inline jule::Str _219188513_toStr(jule::Ptr<_20873e019_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2191891e5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191890b3:;
	};
	{
		
{
			_case_begin_21918babb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21918916d:;
	};
}

inline jule::Str _21918c737_toStr(jule::Ptr<_20873d700_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_21918e140:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21918e01e:;
	};
	{
		
{
			_case_begin_2191902b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21918e8d2:;
	};
}

inline jule::Str _219194321_toStr(jule::Ptr<_20873add4_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_219191e78:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219191d68:;
	};
	{
		
{
			_case_begin_219193111:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219191dce:;
	};
}

inline jule::Str _21919283b_toStr(jule::Ptr<_20873c8b9_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_21919351d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191933db:;
	};
	{
		
{
			_case_begin_219195de4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219193496:;
	};
}

inline jule::Str _219199eb4_toStr(jule::Ptr<_208734927_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_219196114:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219196037:;
	};
	{
		
{
			_case_begin_219198aa6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21919690b:;
	};
}

inline jule::Str _21919ca99_toStr(jule::Ptr<_208734d01_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_219199524:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191993e2:;
	};
	{
		
{
			_case_begin_21919b889:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219199458:;
	};
}

inline jule::Str _21919c868_toStr(jule::Ptr<_20873ecd9_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_21919dc54:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21919c35c:;
	};
	{
		
{
			_case_begin_21919ed65:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21919e9e1:;
	};
}

inline jule::Str _2191a4166_toStr(jule::Ptr<_2087350ed_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_2191a0481:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191a0393:;
	};
	{
		
{
			_case_begin_2191a2c8b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2191a283a:;
	};
}

inline jule::Str _2191a2450_toStr(jule::Ptr<_20873c4e0_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_2191a3132:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191a3000:;
	};
	{
		
{
			_case_begin_2191a5a08:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2191a30aa:;
	};
}

inline jule::Str _2191a9ac8_toStr(jule::Ptr<_20873a664_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_2191a5e7b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191a5d8d:;
	};
	{
		
{
			_case_begin_2191a88b8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2191a62bc:;
	};
}

inline jule::Str _2191a50ac_toStr(jule::Ptr<_20872c04b_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2191a8cc5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2191a8b93:;
	};
	{
		
{
			_case_begin_2191ab69b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2191a8c4d:;
	};
}

inline jule::Str _2085a0111_toStr(jule::Ptr<_208743dcb_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_2085a1233:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085a1101:;
	};
	{
		
{
			_case_begin_2085a22de:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085a2047:;
	};
}

inline jule::Str _2085a3653_toStr(jule::Ptr<_20874302e_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2085a45cc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085a449a:;
	};
	{
		
{
			_case_begin_2085a68dc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085a4511:;
	};
}

inline jule::Str _2085a715c_toStr(jule::Ptr<_2087390d0_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2085a80e7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085a7eb5:;
	};
	{
		
{
			_case_begin_2085a9219:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085a904e:;
	};
}

inline jule::Str _2085a7679_toStr(jule::Ptr<_20874376b_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2085ab88c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085ab75a:;
	};
	{
		
{
			_case_begin_2085aca14:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085ab7c1:;
	};
}

inline jule::Str _2085b02ec_toStr(jule::Ptr<_2087413d4_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2085b1276:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085b1144:;
	};
	{
		
{
			_case_begin_2085b3520:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085b3278:;
	};
}

inline jule::Str _2085b380b_toStr(jule::Ptr<_20874236e_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2085b47a7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085b46b9:;
	};
	{
		
{
			_case_begin_2085b5995:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085b5544:;
	};
}

inline jule::Str _2085db02b_toStr(jule::Ptr<_208816b19_StructSubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2085dc25d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085dc12b:;
	};
	{
		
{
			_case_begin_2085dd319:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085dd072:;
	};
}

inline jule::Str _2085db6d0_toStr(jule::Ptr<_208812472_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2085de804:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2085de6c2:;
	};
	{
		
{
			_case_begin_2085e097b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2085de738:;
	};
}

inline jule::Str _20861cce9_toStr(jule::Ptr<_208822372_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_20861de4e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20861dd1c:;
	};
	{
		
{
			_case_begin_20862000a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20861ec63:;
	};
}

inline jule::Str _21947b4c6_toStr(jule::Ptr<_208729d5c_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_21947c5e8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21947c4b6:;
	};
	{
		
{
			_case_begin_21947d6a4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21947d40c:;
	};
}

inline jule::Str _2194807a5_toStr(jule::Ptr<_208728a70_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_219482ab5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219482983:;
	};
	{
		
{
			_case_begin_219483b71:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2194838c9:;
	};
}

inline jule::Str _219494720_toStr(jule::Ptr<_20872960e_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_219495853:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219495721:;
	};
	{
		
{
			_case_begin_21949690e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219496667:;
	};
}

inline jule::Str _219499505_toStr(jule::Ptr<_208728773_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_21949b7e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21949b6b1:;
	};
	{
		
{
			_case_begin_21949c89e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21949c607:;
	};
}

inline jule::Str _2194a04b7_toStr(jule::Ptr<_208728d6c_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2194a27a5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2194a2673:;
	};
	{
		
{
			_case_begin_2194a3861:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2194a35b9:;
	};
}

inline jule::Str _2194a618d_toStr(jule::Ptr<_2087283dd_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2194a846a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2194a8338:;
	};
	{
		
{
			_case_begin_2194a9526:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2194a927e:;
	};
}

inline jule::Str _2195075da_toStr(jule::Ptr<_20872db0d_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21950861e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2195084dc:;
	};
	{
		
{
			_case_begin_2195096ca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219509433:;
	};
}

inline jule::Str _21950bc3d_toStr(jule::Ptr<_208814452_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21950eaba:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21950e988:;
	};
	{
		
{
			_case_begin_219510b76:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195108ce:;
	};
}

inline jule::Str _21952aba2_toStr(jule::Ptr<_208730d96_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_21952bcc4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21952bb92:;
	};
	{
		
{
			_case_begin_21952cd80:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21952cad8:;
	};
}

inline jule::Str _219534183_toStr(jule::Ptr<_2087324a2_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_2195352a5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219535173:;
	};
	{
		
{
			_case_begin_219536361:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195360b9:;
	};
}

inline jule::Str _21957e673_toStr(jule::Ptr<_208817686_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2195807c8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219580696:;
	};
	{
		
{
			_case_begin_219581884:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195815dc:;
	};
}

inline jule::Str _21959e583_toStr(jule::Ptr<_208813143_AllocStructLitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2195a06d8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2195a05a6:;
	};
	{
		
{
			_case_begin_2195a1794:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195a14ec:;
	};
}

inline jule::Str _2195b2123_toStr(jule::Ptr<_2088136c6_CastingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2195b3278:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2195b3146:;
	};
	{
		
{
			_case_begin_2195b4334:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195b408c:;
	};
}

inline jule::Str _2195c90e6_toStr(jule::Ptr<_208816eb0_StructStaticIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2195ca0c5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2195c9e93:;
	};
	{
		
{
			_case_begin_2195cb181:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195cadd9:;
	};
}

inline jule::Str _2195cc79d_toStr(jule::Ptr<_20872e78a_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2195cd86a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2195cd738:;
	};
	{
		
{
			_case_begin_2195d0b14:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195d086c:;
	};
}

inline jule::Str _2195d7ad8_toStr(jule::Ptr<_208812d46_StructLitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2195d8bc7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2195d8a95:;
	};
	{
		
{
			_case_begin_2195d9c83:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2195d99db:;
	};
}

inline jule::Str _219609610_toStr(jule::Ptr<_20881acc7_RuneExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21960a765:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21960a633:;
	};
	{
		
{
			_case_begin_21960b821:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21960b579:;
	};
}

inline jule::Str _2196d6e5c_toStr(jule::Ptr<_2087490bd_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_2196d80b2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2196d7e80:;
	};
	{
		
{
			_case_begin_2196d916d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2196d8dc6:;
	};
}

inline jule::Str _2197238a0_toStr(jule::Ptr<_2089ce661_Type> _21613_x) {
	;
	{
		
{
			_case_begin_219724a05:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2197248c3:;
	};
	{
		
{
			_case_begin_219725ab1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219725819:;
	};
}

inline jule::Str _219748485_toStr(jule::Ptr<_208817389_ArrayExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2197495da:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2197494a8:;
	};
	{
		
{
			_case_begin_21974a696:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21974a3ee:;
	};
}

inline jule::Str _2197841b3_toStr(jule::Ptr<_208727c17_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_219785318:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2197851d6:;
	};
	{
		
{
			_case_begin_2197863c4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21978612c:;
	};
}

inline jule::Str _21978733c_toStr(jule::Ptr<_20872d734_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219788360:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21978822d:;
	};
	{
		
{
			_case_begin_21978a670:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2197882d8:;
	};
}

inline jule::Str _21978e8b6_toStr(jule::Ptr<_208727343_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_21979280e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2197926cc:;
	};
	{
		
{
			_case_begin_219793997:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219792743:;
	};
}

inline jule::Str _219795988_toStr(jule::Ptr<_20872e3b1_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219798caa:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219798b78:;
	};
	{
		
{
			_case_begin_219799d66:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219799abe:;
	};
}

inline jule::Str _21979ba49_toStr(jule::Ptr<_2087280e1_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_21979cbc1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21979ca8e:;
	};
	{
		
{
			_case_begin_2197a0014:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21979cb05:;
	};
}

inline jule::Str _2197d7a41_toStr(jule::Ptr<_208815be5_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2197d8b41:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2197d8a0e:;
	};
	{
		
{
			_case_begin_2197d9bec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2197d9955:;
	};
}

inline jule::Str _21985b257_toStr(jule::Ptr<_208732bcd_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21985c379:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21985c247:;
	};
	{
		
{
			_case_begin_21985d435:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21985d18d:;
	};
}

inline jule::Str _2198c7977_toStr(jule::Ptr<_208816278_TraitSubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2198c8abb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2198c8989:;
	};
	{
		
{
			_case_begin_2198c9b77:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2198c98d0:;
	};
}

inline jule::Str _2196514e2_toStr(jule::Ptr<_208815662_MapExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21965304e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219652e1c:;
	};
	{
		
{
			_case_begin_21965410a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219653d63:;
	};
}

inline jule::Str _219663adc_toStr(jule::Ptr<_208814dae_AnonFnExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219664c31:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219664aee:;
	};
	{
		
{
			_case_begin_219665cdc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219665a45:;
	};
}

inline jule::Str _21966a7d6_toStr(jule::Ptr<_20872b941_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21966b908:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21966b7c6:;
	};
	{
		
{
			_case_begin_21966c9b4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21966c71c:;
	};
}

inline jule::Str _21966be14_toStr(jule::Ptr<_20872c612_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21966dc6d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21966db80:;
	};
	{
		
{
			_case_begin_21966ee5b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21966ea0a:;
	};
}

inline jule::Str _21966d1ce_toStr(jule::Ptr<_20872c9db_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2196732c2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219673190:;
	};
	{
		
{
			_case_begin_2196755d2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219673206:;
	};
}

inline jule::Str _21967853b_toStr(jule::Ptr<_20873363a_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21967657d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21967643a:;
	};
	{
		
{
			_case_begin_21967768e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21967731a:;
	};
}

inline jule::Str _21967757e_toStr(jule::Ptr<_208733c9a_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21967801e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219677ded:;
	};
	{
		
{
			_case_begin_21967a52c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21967a087:;
	};
}

inline jule::Str _21967b75e_toStr(jule::Ptr<_20872ded7_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21967a917:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21967a7d5:;
	};
	{
		
{
			_case_begin_21967d354:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21967a84b:;
	};
}

inline jule::Str _21967ae23_toStr(jule::Ptr<_2087316c1_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_21968070d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21967dd05:;
	};
	{
		
{
			_case_begin_219681797:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219680774:;
	};
}

inline jule::Str _2196859aa_toStr(jule::Ptr<_2087303a1_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219683c1c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219683b2e:;
	};
	{
		
{
			_case_begin_219684e0a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2196849a9:;
	};
}

inline jule::Str _2196845be_toStr(jule::Ptr<_208731b77_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_219687913:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2196877d1:;
	};
	{
		
{
			_case_begin_21968898b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2196881a5:;
	};
}

inline jule::Str _219687e1e_toStr(jule::Ptr<_20872ec41_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21968ae11:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21968acce:;
	};
	{
		
{
			_case_begin_21968c088:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21968ad45:;
	};
}

inline jule::Str _219a8bc07_toStr(jule::Ptr<_208812098_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219a8cd5c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219a8cc2a:;
	};
	{
		
{
			_case_begin_219a8de18:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219a8db71:;
	};
}

inline jule::Str _219c3083a_toStr(jule::Ptr<_208818159_BuiltinNewCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219c31990:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219c3185d:;
	};
	{
		
{
			_case_begin_219c32a4b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219c327a4:;
	};
}

inline jule::Str _219c45a70_toStr(jule::Ptr<_2088189d9_BuiltinMakeCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219c46bc5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219c46a93:;
	};
	{
		
{
			_case_begin_219c47c81:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219c479d9:;
	};
}

inline jule::Str _219c7e933_toStr(jule::Ptr<_2088191b0_BuiltinLenCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219c80a88:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219c80956:;
	};
	{
		
{
			_case_begin_219c81b44:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219c8189c:;
	};
}

inline jule::Str _219c99079_toStr(jule::Ptr<_2088194ac_BuiltinCapCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219c9a1ce:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219c9a09c:;
	};
	{
		
{
			_case_begin_219c9b28a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219c9aee3:;
	};
}

inline jule::Str _219cde476_toStr(jule::Ptr<_20881a436_SizeofExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219ce0510:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219ce03cd:;
	};
	{
		
{
			_case_begin_219ce15bb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219ce1324:;
	};
}

inline jule::Str _219ce7e52_toStr(jule::Ptr<_20881aada_AlignofExpr> _21613_x) {
	;
	{
		
{
			_case_begin_219ce8edb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_219ce8da9:;
	};
	{
		
{
			_case_begin_219cea097:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_219ce9d00:;
	};
}

inline jule::Str _21a3c981e_toStr(jule::Ptr<_216da6057_ExceptionalForwardingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a3ca963:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a3ca831:;
	};
	{
		
{
			_case_begin_21a3cba1e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a3cb777:;
	};
}

inline jule::Str _21a41299a_toStr(jule::Ptr<_216da8d29_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_21a413ade:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a4139ac:;
	};
	{
		
{
			_case_begin_21a414b9a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a414903:;
	};
}

inline jule::Str _21a41c774_toStr(jule::Ptr<_216da7aa3_MutSlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a41d8b8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a41d786:;
	};
	{
		
{
			_case_begin_21a41e974:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a41e6cc:;
	};
}

inline jule::Str _21a457160_toStr(jule::Ptr<_216da8950_AppendToSliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a4582a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a458172:;
	};
	{
		
{
			_case_begin_21a459360:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a4590b8:;
	};
}

inline jule::Str _21a459690_toStr(jule::Ptr<_216da8576_PushToSliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a45a806:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a45a6c4:;
	};
	{
		
{
			_case_begin_21a45b97d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a45a73a:;
	};
}

inline jule::Str _21a47ad43_toStr(jule::Ptr<_216da680a_SwapExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a47be98:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a47bd66:;
	};
	{
		
{
			_case_begin_21a47d054:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a47ccac:;
	};
}

inline jule::Str _21a4d56b6_toStr(jule::Ptr<_216d93a39_StrFromBytes> _21613_x) {
	;
	{
		
{
			_case_begin_21a4d681b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a4d66d9:;
	};
	{
		
{
			_case_begin_21a4d78c7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a4d7630:;
	};
}

inline jule::Str _21a4dec0e_toStr(jule::Ptr<_216da6bd4_EmptyCompareExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a4e0d64:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a4e0c32:;
	};
	{
		
{
			_case_begin_21a4e1e20:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a4e1b78:;
	};
}

inline jule::Str _21a4e26a1_toStr(jule::Ptr<_216da7520_StrCompExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a4e3817:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a4e36d5:;
	};
	{
		
{
			_case_begin_21a4e49c2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a4e374b:;
	};
}

inline jule::Str _21a4ed888_toStr(jule::Ptr<_216da64a8_StrConcatExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a502529:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a5023e7:;
	};
	{
		
{
			_case_begin_21a5035d5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a50333d:;
	};
}

inline jule::Str _21a526581_toStr(jule::Ptr<_216da7da0_UnsafeBinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a527681:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a52754e:;
	};
	{
		
{
			_case_begin_21a52873c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a528495:;
	};
}

inline jule::Str _21a54d740_toStr(jule::Ptr<_216da9126_UnsafeDerefExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a54e895:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a54e763:;
	};
	{
		
{
			_case_begin_21a550951:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a5506a9:;
	};
}

inline jule::Str _21a554bca_toStr(jule::Ptr<_216da6ed1_RefExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a555d30:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a555bed:;
	};
	{
		
{
			_case_begin_21a556ddb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a556b44:;
	};
}

inline jule::Str _21a557d54_toStr(jule::Ptr<_2088129a0_StructArgExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a558dcc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a558c9a:;
	};
	{
		
{
			_case_begin_21a55b253:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a558d11:;
	};
}

inline jule::Str _21a560356_toStr(jule::Ptr<_216da9654_UnsafeCastingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a56149a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a561368:;
	};
	{
		
{
			_case_begin_21a562556:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a5622ae:;
	};
}

inline jule::Str _21a56e376_toStr(jule::Ptr<_216da6244_FnCallIgnoreExceptionalExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a5704cb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a570399:;
	};
	{
		
{
			_case_begin_21a571587:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a5712e0:;
	};
}

inline jule::Str _21a5812bc_toStr(jule::Ptr<_216da819c_UnsafeIndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_21a582422:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21a5822e0:;
	};
	{
		
{
			_case_begin_21a5834cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21a583236:;
	};
}

inline jule::Str _21aad4d70_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_21aad5e09:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21aad5cc7:;
	};
	{
		
{
			_case_begin_21aad6eb5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_21aad6c1d:;
	};
}

inline jule::Str _21ad66046_toStr(_21e64c5b5_Builder _21613_x) {
	;
	;
	{
		
{
			_case_begin_21ad695bb:;
			{
				return _21ad6d1c4_structToStr(_21613_x);;
			}
		}
		_match_end_21ad68c19:;
	};
}

inline jule::Str _21ad748e5_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_21ad75c04:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_21ad75b05:;
	};
	{
		
{
			_case_begin_21ad76cb0:;
			{
				return _21ad7a3e0_arrToStr(_21613_x);;
			}
		}
		_match_end_21ad76919:;
	};
}

inline jule::Str _21ad793cd_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_21ad6c459:;
			{
				return _2175dc518_toStr(_21613_x);;
			}
		}
		_match_end_21ad7ce5e:;
	};
}

inline jule::Str _21ad7d1b2_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_21ad69c2b:;
			{
				return _2175dc518_toStr(_21613_x);;
			}
		}
		_match_end_21ad6909e:;
	};
}



inline void _238cd7bc0_rev(jule::Slice<jule::U8> _26512_b) {
	jule::I64 _2666_i = 0LL;;
	for (; (_2666_i < (_26512_b.len() >> 1LL)); (_2666_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26512_b[((_26512_b.len() - 1LL) - _2666_i)];
				jule::U8 _1___jule_assign_arg = _26512_b[_2666_i];
				_26512_b[_2666_i] = ___jule_assign_arg;
				_26512_b[((_26512_b.len() - 1LL) - _2666_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_217529983:;
	}
	_iter_end_217529983:;;
}



inline jule::Bool _2175be4b7_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_2175c1376:;
	}
	_iter_end_2175c1376:;;
	return true;;
}

inline jule::Bool _21761ea89_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_217621470:;
	}
	_iter_end_217621470:;;
	return true;;
}

inline jule::Bool _2185a01cd_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_2185a1a81:;
	}
	_iter_end_2185a1a81:;;
	return true;;
}

inline jule::Bool _21a6415be_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_21a643439:;
	}
	_iter_end_21a643439:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _2390ee05d__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf) {
	if ((_2516_buf.len() == 0LL)) {
		return 0LL;;
	};
	_21e4332be_handleRW(&(_2516_buf));
	return _2390c584d_Write(static_cast<jule::I64>(_2390a7995_STDOUT), (&(_2516_buf[0LL])), static_cast<jule::U64>(_2516_buf.len()));;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf) {
	if ((_3616_buf.len() == 0LL)) {
		return 0LL;;
	};
	_21e4332be_handleRW(&(_3616_buf));
	return _2390c584d_Write(static_cast<jule::I64>(_2390a7c81_STDERR), (&(_3616_buf[0LL])), static_cast<jule::U64>(_3616_buf.len()));;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_21e4332be_handleRW(&(_4718_buf));
	return _2390c584d_Write(static_cast<jule::I64>(_2390a7665_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U64>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_238cd51b7_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_2173859dc_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_238cd51b7_StrBytes(jule::Str::lit("\n", 1)));
	_2390c5a7e_Exit(2LL);
}



inline jule::U64 _21753ac5d_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _21753ae28_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _239107440_executable(void) {
	jule::Slice<jule::U8> _146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4096LL, 4096LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Str _152_p = jule::Str::lit("/proc/self/exe", 14);;
	jule::I64 _162_n = readlink(((char*)((&(_152_p[0LL])))), ((char*)((&(_146_buf[0LL])))), _146_buf.len());;
	if ((_162_n != -1LL)) {
		(_146_buf).mut_slice(0LL, _162_n);;
		return _238cd5717_StrFromBytes(_146_buf);;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_linux.jule:21:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _21753ac5d_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_21753ae28_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_21753ae28_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_21754158d:;
	}
	_iter_end_21754158d:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _238cd5717_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21754500e:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_21e42e881_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_21754500e:;
			++it;
			goto _iter_begin_21754500e;
		}
		_iter_end_21754500e:;
	};
	return _238cd5717_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _21e430288_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_21754598d:;
	}
	_iter_end_21754598d:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _238cd5717_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_21e42e881_AppendRune(_846_buf, _8316_r);
	return _238cd5717_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _2173859dc_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I64 __jule_runeCount(jule::Str _10514_s) {
	return _21e430288_RuneCountStr(_10514_s);;
}



inline void _21e4332be_handleRW(jule::Slice<jule::U8>* _814_b) {
	_2390ee05d__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _21e4337ca_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21754bcb3:;
		if (it != expr_end) {
			jule::I64 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_238cbe06e_Str(_118_arg, _21e433d6e_strlen(_118_arg));
				};
			}
			_iter_next_21754bcb3:;
			++it;
			_96_i++;
			goto _iter_begin_21754bcb3;
		}
		_iter_end_21754bcb3:;
	};
	return _86_args;;
}



inline jule::I64 _21e433d6e_strlen(jule::U8* _3122_p) {
	jule::I64 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_21754db61:;
	}
	_iter_end_21754db61:;;
	return __jule_func_result;;
}



inline jule::Bool _21e43518e__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _21e487543_hash128to64(_21e48718b_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _21e487851_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__21e483a5b_DecodeU64(_5312_bytes);;
}



inline jule::U32 _21e487b1a_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__21e483132_DecodeU32(_5412_bytes);;
}



inline jule::U64 _21e487e5b_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _21e48829c_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _21e487543_hash128to64(_21e48718b_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _21e488621_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _21e488a50_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _21e488ed4_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_21e487851_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _21e487851_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_21e488621_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_21e488621_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _21e488a50_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_21e487b1a_fetch32(_7517_bytes));;
		return _21e488a50_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_21e487b1a_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = _7517_bytes[0LL];;
		jule::U8 _933_b = _7517_bytes[(_7532_n >> 1LL)];;
		jule::U8 _943_c = _7517_bytes[(_7532_n - 1LL)];;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_21e487e5b_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _21e48718b_u128 _21e48938b_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _21e48718b_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_21e487e5b_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _21e488ed4_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_21e487e5b_shiftMix((jule::U64)(_1046_a + _21e487851_fetch64(_10319_bytes)));
		} else {
			_1076_d=_21e487e5b_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_21e48829c_hashLen16((jule::U64)(_21e487851_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_21e48829c_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _21e487851_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_21e487e5b_shiftMix((jule::U64)(_21e487851_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_21e487e5b_shiftMix((jule::U64)(_21e487851_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_217562900;
				};
			}
		_iter_next_217562900:;
		}
		_iter_end_217562900:;;
	};
	_1046_a=_21e48829c_hashLen16(_1046_a, _1066_c);
	_1056_b=_21e48829c_hashLen16(_1076_d, _1056_b);
	return _21e48718b_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_21e48829c_hashLen16(_1056_b, _1046_a)};;
}



inline _21e48718b_u128 _21e4899da_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_21e488621_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_21e488621_rotate64(_14563_a, 44LLU);
	return _21e48718b_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _21e48718b_u128 _21e489e19_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _21e4899da_weakHashLen32WithSeeds(_21e487851_fetch64(_15529_bytes), _21e487851_fetch64(_15529_bytes.slice(8LL)), _21e487851_fetch64(_15529_bytes.slice(16LL)), _21e487851_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _21e48718b_u128 _21e48a348_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _21e48718b_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _21e48938b_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_21e48718b_u128 _16910_v = _21e48718b_u128{._field_hi=0, ._field_lo=0};;
	_21e48718b_u128 _17010_w = _21e48718b_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_21e488621_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _21e487851_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_21e488621_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _21e487851_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_21e488621_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_21e488621_rotate64((jule::U64)(_1716_x + _21e487851_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_21e488621_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _21e487851_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_21e488621_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _21e487851_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _21e487851_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_21e488621_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_21e489e19_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_21e489e19_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _21e487851_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_21e488621_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _21e487851_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_21e488621_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _21e487851_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _21e487851_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_21e488621_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_21e489e19_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_21e489e19_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _21e487851_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_21756dc91;
			};
		}
	_iter_next_21756dc91:;
	}
	_iter_end_21756dc91:;;
	_1716_x+=(jule::U64)(_21e488621_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _21e488621_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _21e488621_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_21e488621_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_21e487851_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _21e487851_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_21e489e19_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_2175786d5:;
	}
	_iter_end_2175786d5:;;
	_1716_x=_21e48829c_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_21e48829c_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _21e48718b_u128{._field_hi=(jule::U64)(_21e48829c_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_21e48829c_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _21e48a612_hash(jule::Slice<jule::U8> _23413_bytes) {
	_21e48718b_u128 _2356_sum = _21e48718b_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_21e48a348_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _21e48718b_u128{._field_hi=_21e487851_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_21e487851_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_21e48a348_hashWithSeed(_23413_bytes, _23413_bytes.len(), _21e48718b_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _21e487543_hash128to64(_2356_sum);;
}



inline jule::U64 _21e57bb76_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _21e57c58e_hasZeroByte((_21e57c825_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _21e57be84_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _21e57c58e_hasZeroByte((_21e57c825_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _21e57c24d_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_21e56e1b8_TrailingZeros64((*(_6419_b))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _21e57c58e_hasZeroByte(jule::U64 _7016_x) {
	return (((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU);;
}



inline jule::U64 _21e57c825_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _21e57cade_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _21e57cced_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21758304c:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_21758304c:;
			++it;
			_886_i++;
			goto _iter_begin_21758304c;
		}
		_iter_end_21758304c:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _21e57d1c7_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = ((_9414_h & 18446744073709551488LLU) >> 7LLU);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _21e57d4c4_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _21e57d848_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _21e57d848_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline __jule_tuple_int__jule_tuple_bool _21e8572d6_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_2175a4348:;
	}
	_iter_end_2175a4348:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _21e860c07_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _21e860e5a_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _21e860e5a_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _21e860e5a_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _1613_x) - (jule::U64)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_2175aaa7a:;
	}
	_iter_end_2175aaa7a:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_21e86118b_rev(&(_206_buf));
	return _238cd5717_StrFromBytes(_206_buf);;
}



inline void _21e86118b_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_2175ae232:;
	}
	_iter_end_2175ae232:;;
}



inline jule::I64 _21e87ad43_findLastByte(jule::U8* _2117_begin, jule::U8* _2135_end, jule::U8 _2147_b) {
	jule::U8* _226_it = _2135_end;;
	for (; (_226_it >= _2117_begin); (_226_it)--) {
		{
			{
				if (((*(_226_it)) == _2147_b)) {
					return ((jule::I64)((_226_it - _2117_begin)));;
				};
			};
		}
	_iter_next_2175b3b2c:;
	}
	_iter_end_2175b3b2c:;;
	return -1LL;;
}



inline jule::I64 _21e8861e4_FindByteStr(jule::Str _4416_s, jule::U8 _4424_b) {
	{
		auto expr = &(_4416_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2175b5b84:;
		if (it != expr_end) {
			jule::I64 _466_i = it - expr->begin();
			jule::U8 *_469_se = it;
			{
				if (((*(_469_se)) == _4424_b)) {
					return _466_i;;
				};
			}
			_iter_next_2175b5b84:;
			++it;
			_466_i++;
			goto _iter_begin_2175b5b84;
		}
		_iter_end_2175b5b84:;
	};
	return -1LL;;
}



inline jule::I64 _21e886568_FindLastByteStr(jule::Str _5520_s, jule::U8 _5528_b) {
	if ((_5520_s.len() == 0LL)) {
		return -1LL;;
	};
	return _21e87ad43_findLastByte((&(_5520_s[0LL])), (&(_5520_s[(_5520_s.len() - 1LL)])), _5528_b);;
}



inline jule::Str _21e897128_Getwd(void) {
	jule::U8* _96_buf = _2390a9337_Getcwd(nullptr, 0LLU);;
	if ((_96_buf == nullptr)) {
		return jule::Str();;
	};
	jule::Str _132_pwd = _238cbd47a_BytePtrToStr(_96_buf);;
	{
		_238c8eddb_Free(_96_buf);
	};
	return _132_pwd;;
}



inline jule::Bool _220bde194_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_220c51c73__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _220c5a793_isExcludingLatin(_220be816a_Letter, _7613_r);;
}



inline jule::Bool _220c59b16_is16(jule::Slice<_220c57d78_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2181d553e:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_220c57d78_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_2181d553e:;
				++it;
				_1937_i++;
				goto _iter_begin_2181d553e;
			}
			_iter_end_2181d553e:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_220c57d78_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_2181d5000:;
	}
	_iter_end_2181d5000:;;
	return false;;
}



inline jule::Bool _220c59e8a_is32(jule::Slice<_220c583a6_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2181dba40:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_220c583a6_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_2181dba40:;
				++it;
				_2307_i++;
				goto _iter_begin_2181dba40;
			}
			_iter_end_2181dba40:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_220c583a6_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_2181d8520:;
	}
	_iter_end_2181d8520:;;
	return false;;
}



inline jule::Bool _220c5a793_isExcludingLatin(jule::Ptr<_220c58829_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_220c57d78_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _220c59b16_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_220c583a6_Range32> *_2873_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _220c59e8a_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _220c5a9d5_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_220c51c73__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _220c5a793_isExcludingLatin(_220bee43a_Upper, _29512_r);;
}



inline jule::I32 _220c5b1cd_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_220c578c2_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_220c578c2_CaseRange> _220c5b552_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_220c578c2_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_220c578c2_CaseRange> _3397_cr = ((jule::Ptr<_220c578c2_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*(_3397_cr))._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_2181ecba5:;
	}
	_iter_end_2181ecba5:;;
	return nullptr;;
}



inline jule::I32 _220c5b81b_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_220c53a55_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _220c53d41_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_220c53d41_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_218201d96:;
	}
	_iter_end_218201d96:;;
	if (((_3806_lo < _220c53d41_caseOrbit.len()) && (static_cast<jule::I32>(_220c53d41_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_220c53d41_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_220c578c2_CaseRange> _3972_cr = _220c5b552_lookupCaseRange(_37015_r, _220c5169b_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _220c5b1cd_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _220c5b1cd_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _220c5bc8e_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_21e64c5b5_Builder _186_ss = static__21e64ce12_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _21e64d594_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_2182148e2:;
	}
	_iter_end_2182148e2:;;
	return _21e64de24_Str(&_186_ss);;
}



inline jule::Bool _220c5c157_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _220c5c4cb_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _220c5c982_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_220c5c157_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_2182184a6:;
	}
	_iter_end_2182184a6:;;
	return -1LL;;
}



inline jule::I64 _220c5ccc3_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _220c5c982_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _220c5d202_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_21821a772:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_21821a08a;
					};
				}
			_iter_next_21821be7c:;
			}
			_iter_end_21821be7c:;;
			return _636_j;;
		}
	_iter_next_21821a08a:;
	}
	_iter_end_21821a08a:;;
	return -1LL;;
}



inline jule::I64 _220c5d576_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _220c5d202_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _220c5ed5d_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _21e886568_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _220c601d2_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_218224083:;
	}
	_iter_end_218224083:;;
	return -1LL;;
}



inline jule::I64 _220c60b0b_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_220c601d2_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_218227394:;
	}
	_iter_end_218227394:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _220c6129e_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _220c5c982_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_21822c487;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_21822c487:;
	}
	_iter_end_21822c487:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _220c61623_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _220c6129e_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _220c61997_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_220c5c982_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _220c62514_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_220c60b0b_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I64 _220c62888_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2746_n = 0LL;;
	jule::I64 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2773_j = _220c5c982_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_218232514;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_218232514:;
	}
	_iter_end_218232514:;;
	return _2746_n;;
}



inline jule::Str _220c62d72_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I64 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I64 _2952_m = _220c62888_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_21e64c5b5_Builder _3036_ss = static__21e64ce12_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I64 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I64 _3063_j = _220c5c982_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_218236062;
			};
			({
				auto except = _21e64d594_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _21e64d594_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_218236062:;
	}
	_iter_end_218236062:;;
	({
		auto except = _21e64d594_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _21e64de24_Str(&_3036_ss);;
}



inline jule::Str _220c632a1_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _220c62d72_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _220c6402c_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I64 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I64 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_220c601d2_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_21823b7a4:;
	}
	_iter_end_21823b7a4:;;
	return jule::Str();;
}



inline jule::Str _220c643a1_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I64 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I64 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42dd36_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_220c601d2_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_21823d3dd:;
	}
	_iter_end_21823d3dd:;;
	return jule::Str();;
}



inline jule::Str _220c649ab_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _220c6402c_TrimLeft(_220c643a1_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Str _220c64cdb_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep) {
	{
		auto _match_expr{ _3879_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_21823eca2:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_218240467:;
			{
				return _3879_parts[0LL];;
			}
		}
		_match_end_2182403bd:;
	};
	jule::I64 _3946_n = 0LL;;
	{
		auto expr = &(_3879_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218240533:;
		if (it != expr_end) {
			jule::Str *_3959_part = it;
			{
				_3946_n+=(*(_3959_part)).len();
				(_3946_n)++;
			}
			_iter_next_218240533:;
			++it;
			goto _iter_begin_218240533;
		}
		_iter_end_218240533:;
	};
	_21e64c5b5_Builder _3996_s = static__21e64ce12_New((_3946_n + 1LL));;
	({
		auto except = _21e64d594_WriteStr(&_3996_s, _3879_parts[0LL]);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:400:2"));
		(except.result);
	});
	{
		auto expr = _3879_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_21824247a:;
		if (it != expr_end) {
			jule::Str *_4019_part = it;
			{
				({
					auto except = _21e64d594_WriteStr(&_3996_s, _38723_sep);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:402:3"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&_3996_s, (*(_4019_part)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:403:3"));
					(except.result);
				});
			}
			_iter_next_21824247a:;
			++it;
			goto _iter_begin_21824247a;
		}
		_iter_end_21824247a:;
	};
	return _21e64de24_Str(&_3996_s);;
}



inline jule::Bool _220c664b3_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_218248096;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_21824537e;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_21824537e;
			};
			return false;;
		}
	_iter_next_21824537e:;
	}
	_iter_end_21824537e:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_218248096:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_2182485b3:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_2182485b3;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_2182485b3;
					};
					return false;;
				};
				jule::I32 _1237_r = _220c5b81b_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_220c5b81b_SimpleFold(_1237_r);
					}
				_iter_next_218248d44:;
				}
				_iter_end_218248d44:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_2182485b3;
				};
				return false;;
			}
			_iter_next_2182485b3:;
			it += len;
			goto _iter_begin_2182485b3;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _220c678b0_Clean(jule::Str _10814_path) {
	jule::Str _1092_originalPath = _10814_path;;
	jule::I64 _1102_volLen = _220c6a682_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1102_volLen);;
	if ((_10814_path).empty()) {
		if ((((_1102_volLen > 1LL) && _220c6a0aa_IsPathSep(_1092_originalPath[0LL])) && _220c6a0aa_IsPathSep(_1092_originalPath[1LL]))) {
			return _220c67e87_FromSlash(_1092_originalPath);;
		};
		return (_1092_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1192_rooted = _220c6a0aa_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1262_n = _10814_path.len();;
	_220c66a24_lazyBuff _1276_out = _220c66a24_lazyBuff{._field_path=_10814_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1092_originalPath, ._field_volLen=_1102_volLen};;
	jule::I64 _13213_dotdot = 0LL;;
	jule::I64 _1326_r = 0LL;;
	if (_1192_rooted) {
		_220c67294_append(&_1276_out, 47LLU);
		_13213_dotdot=1LL;
		_1326_r=1LL;
	};
	while ((_1326_r < _1262_n)) {
		{
			{
				
				if (_220c6a0aa_IsPathSep(_10814_path[_1326_r])) {
					_case_begin_21825a707:;
					{
						(_1326_r)++;
					}
				}
				else if (((_10814_path[_1326_r] == '.') && (((_1326_r + 1LL) == _1262_n) || _220c6a0aa_IsPathSep(_10814_path[(_1326_r + 1LL)])))) {
					_case_begin_21825846e:;
					{
						(_1326_r)++;
					}
				}
				else if ((((_10814_path[_1326_r] == '.') && (_10814_path[(_1326_r + 1LL)] == '.')) && (((_1326_r + 2LL) == _1262_n) || _220c6a0aa_IsPathSep(_10814_path[(_1326_r + 2LL)])))) {
					_case_begin_2182584d5:;
					{
						_1326_r+=2LL;
						{
							
							if ((_1276_out._field_w > _13213_dotdot)) {
								_case_begin_21825e72d:;
								{
									(_1276_out._field_w)--;
									while (((_1276_out._field_w > _13213_dotdot) && (!(_220c6a0aa_IsPathSep(_220c66edb_index(&_1276_out, _1276_out._field_w)))))) {
										{
											(_1276_out._field_w)--;
										}
									_iter_next_2182600d0:;
									}
									_iter_end_2182600d0:;;
								}
							}
							else if ((!(_1192_rooted))) {
								_case_begin_21825e7c7:;
								{
									if ((_1276_out._field_w > 0LL)) {
										_220c67294_append(&_1276_out, 47LLU);
									};
									_220c67294_append(&_1276_out, '.');
									_220c67294_append(&_1276_out, '.');
									_13213_dotdot=_1276_out._field_w;
								}
							}
							_match_end_21825e398:;
						};
					}
				}
				else {
					_case_begin_218258408:;
					{
						if (((_1192_rooted && (_1276_out._field_w != 1LL)) || ((!(_1192_rooted)) && (_1276_out._field_w != 0LL)))) {
							_220c67294_append(&_1276_out, 47LLU);
						};
						;
						for (; ((_1326_r < _1262_n) && (!(_220c6a0aa_IsPathSep(_10814_path[_1326_r])))); (_1326_r)++) {
							{
								_220c67294_append(&_1276_out, _10814_path[_1326_r]);
							}
						_iter_next_21825978e:;
						}
						_iter_end_21825978e:;;
					}
				}
				_match_end_218257d75:;
			};
		}
	_iter_next_218257a67:;
	}
	_iter_end_218257a67:;;
	if ((_1276_out._field_w == 0LL)) {
		_220c67294_append(&_1276_out, '.');
	};
	return _220c67e87_FromSlash(_220c6752a_string(&_1276_out));;
}



inline jule::Str _220c67e87_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _220c682c8_Join(jule::Slice<jule::Str> _2259_elem) {
	return _220c6ac59_join(_2259_elem);;
}



inline jule::Str _220c6855e_Ext(jule::Str _2308_path) {
	jule::I64 _2316_i = (_2308_path.len() - 1LL);;
	for (; ((_2316_i >= 0LL) && (!(_220c6a0aa_IsPathSep(_2308_path[_2316_i])))); (_2316_i)--) {
		{
			if ((_2308_path[_2316_i] == '.')) {
				return _2308_path.slice(_2316_i);;
			};
		}
	_iter_next_218263831:;
	}
	_iter_end_218263831:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _220c68828_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_220c6a9c3_abs(_2458_path));
return __jule_func_result;;
}



inline jule::Str _220c68ae2_Base(jule::Str _25113_path) {
	if ((_25113_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25113_path.len() > 0LL) && _220c6a0aa_IsPathSep(_25113_path[(_25113_path.len() - 1LL)]))) {
		{
			(_25113_path).mut_slice(0LL, (_25113_path.len() - 1LL));;
		}
	_iter_next_218265338:;
	}
	_iter_end_218265338:;;
	(_25113_path).mut_slice(_220c6920d_VolumeName(_25113_path).len());;
	jule::I64 _2626_i = (_25113_path.len() - 1LL);;
	while (((_2626_i >= 0LL) && (!(_220c6a0aa_IsPathSep(_25113_path[_2626_i]))))) {
		{
			(_2626_i)--;
		}
	_iter_next_21826517e:;
	}
	_iter_end_21826517e:;;
	if ((_2626_i >= 0LL)) {
		(_25113_path).mut_slice((_2626_i + 1LL));;
	};
	if ((_25113_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25113_path;;
}



inline jule::Str _220c68ebb_Dir(jule::Str _2828_path) {
	jule::Str _2832_vol = _220c6920d_VolumeName(_2828_path);;
	jule::I64 _2846_i = (_2828_path.len() - 1LL);;
	while (((_2846_i >= _2832_vol.len()) && (!(_220c6a0aa_IsPathSep(_2828_path[_2846_i]))))) {
		{
			(_2846_i)--;
		}
	_iter_next_2182685b1:;
	}
	_iter_end_2182685b1:;;
	jule::Str _2882_dir = _220c678b0_Clean(_2828_path.slice(_2832_vol.len(), (_2846_i + 1LL)));;
	if ((_2882_dir.equal(".", 1) && (_2832_vol.len() > 2LL))) {
		return _2832_vol;;
	};
	return (_2832_vol + _2882_dir);;
}



inline jule::Str _220c6920d_VolumeName(jule::Str _30015_path) {
	return _220c67e87_FromSlash(_30015_path.slice(0LL, _220c6a682_volumeNameLen(_30015_path)));;
}



inline jule::Bool _220c6a0aa_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _220c6a3b8_IsAbs(jule::Str _5310_path) {
	return _220c5c157_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _220c6a682_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _220c6a9c3_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_220c6a3b8_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _220c678b0_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = _21e897128_Getwd();;
	if ((_672_wd).empty()) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _220c6ac59_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _220c6ac59_join(jule::Slice<jule::Str> _749_elem) {
	{
		auto expr = &(_749_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218271135:;
		if (it != expr_end) {
			jule::I64 _756_i = it - expr->begin();
			jule::Str *_759_e = it;
			{
				if (!((*(_759_e))).empty()) {
					return _220c678b0_Clean(_220c64cdb_Join(_749_elem.slice(_756_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_218271135:;
			++it;
			_756_i++;
			goto _iter_begin_218271135;
		}
		_iter_end_218271135:;
	};
	return jule::Str();;
}



inline jule::Slice<char*> _21e889aee_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs) {
	jule::Slice<char*> _376_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3640_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3625_s)).len(), (*(_3625_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2182c2cd0:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::Str *_399_arg = it;
			{
				jule::Slice<jule::U8> _407_barg = _238cbd711_StrToBytes((*(_399_arg)));;
				(*(_3640_bargs))[_396_i]=_407_barg;
				_376_cs[_396_i]=((char*)((&(_407_barg[0LL]))));
			}
			_iter_next_2182c2cd0:;
			++it;
			_396_i++;
			goto _iter_begin_2182c2cd0;
		}
		_iter_end_2182c2cd0:;
	};
	_376_cs[(_376_cs.len() - 1LL)]=nullptr;
	return _376_cs;;
}



inline jule::I64 _21e889e73_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv) {
	jule::Slice<jule::Slice<jule::U8>> _496_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _502_cargv = _21e889aee_strSliceToCstrSlice(_4824_argv, &(_496_bargs));;
	jule::Slice<jule::U8> _512_s = _238cbd711_StrToBytes((*(_4812_file)));;
	{
		return execvp(((char*)((&(_512_s[0LL])))), (char*const*)(&(_502_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _21e88a1a4_setenv(jule::Slice<jule::Str>* _5712_envv) {
	;
	{
		auto expr = _5712_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2182c6da0:;
		if (it != expr_end) {
			jule::Str *_599_env = it;
			{
				jule::I64 _603_i = _21e8861e4_FindByteStr((*(_599_env)), '=');;
				if ((_603_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type139)};
				};
				{
					jule::Slice<jule::U8> _654_key = _238cbd711_StrToBytes((*(_599_env)).slice(0LL, _603_i));;
					if ((((*(_599_env)).len() - _603_i) == 1LL)) {
						jule::Str _675_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_675_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type139)};
						};
					} else {
						jule::Slice<jule::U8> _725_val = _238cbd711_StrToBytes((*(_599_env)).slice((_603_i + 1LL)));;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_725_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type139)};
						};
					};
				};
			}
			_iter_next_2182c6da0:;
			++it;
			goto _iter_begin_2182c6da0;
		}
		_iter_end_2182c6da0:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _21e88ac54_cmdErrorFromCode(jule::I64 _15121_code) {
	{
		auto &_match_expr{ _15121_code };
		
		if (_match_expr == 13LL) {
			_case_begin_2182c7400:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2182c71be:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_2182c6322:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_2182cb723:;
	};
}



inline jule::I64 _21e88ae63_getLastCmdError(void) {
	return _21e88ac54_cmdErrorFromCode(_239079c86_GetLastErrno());;
}



inline void _21e89a5d2_Exit(jule::I64 _119_code) {
	_2390c5a7e_Exit(_119_code);
}



inline jule::Str _21e89a7e1_Executable(void) {
	return _239107440_executable();;
}



inline jule::Slice<jule::Str> _21e89aa00_Args(void) {
	return _21e4337ca_args();;
}



inline jule::Exceptional<jule::Str> _21e89ae62_Getwd(void) {
	jule::Str _332_wd = _21e897128_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_21e8a17e7_getLastOsError(), &__jule_any_type140)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I64 _21e8a12db_getLastFsError(void) {
	jule::I64 _412_err = _239079c86_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_2182e78a4:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2182e7255:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_2182e72bb:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_2182e7332:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2182e7398:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_2182e740e:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_2182e7475:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_2182e7a3b:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_2182e7aa2:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_2182e7b18:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_2182e7b7e:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_2182e7c06:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2182e7c7d:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_2182e7d05:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_2182e7d7c:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_2182e7e04:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_2182e7e7b:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_2182e8003:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_2182e807a:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_2182e8102:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_2182e8179:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_2182e8201:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_2182e8278:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_2182e8300:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_2182e8377:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_2182e83ee:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_2182e8476:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_2182e84ed:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_2182e7112:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_2182e71de:;
	};
}



inline jule::I64 _21e8a17e7_getLastOsError(void) {
	jule::I64 _92_err = _239079c86_GetLastErrno();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 13LL) {
			_case_begin_218300a44:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2183004b1:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_218300527:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_21830059e:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_218300626:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_21830078b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_218300802:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_2182eadc4:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_2182eaea1:;
	};
}



inline jule::Bool _21e6118cb_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _21e611ba6_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_21e587753_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2183208bb:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_2183208bb:;
			++it;
			goto _iter_begin_2183208bb;
		}
		_iter_end_2183208bb:;
	};
	return false;;
}



inline jule::Bool _21e611e70_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_21e587841_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218322824:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_218322824:;
			++it;
			goto _iter_begin_218322824;
		}
		_iter_end_218322824:;
	};
	{
		auto expr = &(_21e611722_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21832357d:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_21832357d:;
			++it;
			goto _iter_begin_21832357d;
		}
		_iter_end_21832357d:;
	};
	return false;;
}



inline jule::Str _21e65bd66_Logf(jule::Str _3259_fmt, jule::Slice<jule::Any> _32522_args) {
	return _21e65c806_applyFmt(_3259_fmt, _32522_args);;
}



inline jule::Str _21e65c174_argToStr(jule::Any _32913_arg) {
	{
		auto &_match_expr{ _32913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_218324749:;
			{
				return _32913_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_21832454b:;
			{
				return __jule_strFromByte(_32913_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2183245b2:;
			{
				return __jule_strFromRune(_32913_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_2183238ad:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_218323847:;
	};
}



inline jule::I64 _21e65c43d_findNextFmt(jule::Str _34216_fmt) {
	{
		auto expr = &(_34216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2183239ce:;
		if (it != expr_end) {
			jule::I64 _3436_i = it - expr->begin();
			jule::U8 *_3439_b = it;
			{
				if (((*(_3439_b)) == '@')) {
					return _3436_i;;
				};
			}
			_iter_next_2183239ce:;
			++it;
			_3436_i++;
			goto _iter_begin_2183239ce;
		}
		_iter_end_2183239ce:;
	};
	return -1LL;;
}



inline jule::Str _21e65c806_applyFmt(jule::Str _35117_fmt, jule::Slice<jule::Any> _35127_args) {
	_21e64c5b5_Builder _3526_s = static__21e64ce12_New(32LL);;
	{
		auto expr = &(_35127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218331338:;
		if (it != expr_end) {
			jule::Any *_3539_arg = it;
			{
				jule::I64 _3543_i = _21e65c43d_findNextFmt(_35117_fmt);;
				if ((_3543_i == -1LL)) {
					goto _iter_end_218331338;
				};
				({
					auto except = _21e64d594_WriteStr(&_3526_s, _35117_fmt.slice(0LL, _3543_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&_3526_s, _21e65c174_argToStr((*(_3539_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:359:3"));
					(except.result);
				});
				(_35117_fmt).mut_slice((_3543_i + 1LL));;
			}
			_iter_next_218331338:;
			++it;
			goto _iter_begin_218331338;
		}
		_iter_end_218331338:;
	};
	({
		auto except = _21e64d594_WriteStr(&_3526_s, _35117_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:362:2"));
		(except.result);
	});
	return _21e64de24_Str(&_3526_s);;
}



inline jule::Bool _21e65d708_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _21e65eb27_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _21e65ee35_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _21e6601ee_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _21e660540_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _21e6607c6_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _21e660a90_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _21e660d59_IsUnix(jule::Str _5511_os) {
	return (_21e65ee35_IsDarwin(_5511_os) || _21e6601ee_IsLinux(_5511_os));;
}



inline jule::Bool _21e661233_Is32Bit(jule::Str _5812_arch) {
	return _21e660540_IsI386(_5812_arch);;
}



inline jule::Bool _21e661475_Is64Bit(jule::Str _6112_arch) {
	return (_21e6607c6_IsAmd64(_6112_arch) || _21e660a90_IsArm64(_6112_arch));;
}



inline void _220c6ccd3_init(void) {
	jule::Str _256_path = _21e89a7e1_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_220c6c332_PathWd=({
			auto except = _21e89ae62_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_220c6c079_PathExec=_220c68ebb_Dir(_256_path);
		_220c6bce3_PathStdlib=_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _220c6c079_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_220c6c62e_PathApi=_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _220c6c079_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _21ec4a60d_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _21ec4a91b_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _21ec4abd5_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _21ec4b026_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _21ec4d589_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_2183a06d7:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_21ec54491_IsInf(_4714_f, 0LL) || _21ec53d0e_IsNaN(_4714_f)) {
			_case_begin_2183a0781:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_2183a05e9:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _21ec5475a_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _21ec4abd5_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_21ec4b026_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _21ec53a01_NaN(void) {
	return _21ec4b026_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _21ec53d0e_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _21ec540c8_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _21ec4b026_F64FromBits(9218868437227405312LLU);;
	};
	return _21ec4b026_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _21ec54491_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _21ec5475a_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_21ec56b14_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _21ec5622e_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_21ec53d0e_IsNaN(_1118_x) || _21ec54491_IsInf(_1118_x, 1LL)) {
			_case_begin_2183e1074:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_2183e111d:;
			{
				return _21ec53a01_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_2183e1184:;
			{
				return _21ec540c8_Inf(-1LL);;
			}
		}
		_match_end_2183e0ea8:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _21ec4d589_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _21ec56b14_Abs(jule::F64 _438_x) {
	return _21ec4b026_F64FromBits((_21ec4abd5_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _21ec5d687_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _21ec56b14_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_218452c62:;
		}
		_iter_end_218452c62:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _21ec5de90_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _21ec4d589_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_21ec5622e_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _21ec87a79_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _238cd5717_StrFromBytes(_21ec88162_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _21ec8b51c_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _21ec88162_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_21ec8689c_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_2186404b0:;
			{
				_886_bits=static_cast<jule::U64>(_21ec4a60d_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_21ec8689c_floatInfo>)((&(_21ec86c65_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_218640526:;
			{
				_886_bits=_21ec4abd5_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_21ec8689c_floatInfo>)((&(_21ec87062_f64info))));
			}
		}
		else {
			_case_begin_21863deb4:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_21863ec95:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & (({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == (({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)) {
			_case_begin_21864563b:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_218646e12:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_218646e78:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_2186466b4:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_2186465a4:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_2186456a2:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_218644816:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_218644959:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _21ec8a692_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _21ec8ad24_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	;
	_21ec874e6_decimalSlice _1376_digs = _21ec874e6_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_21ec962a2_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*_8910_flt.alloc)));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_218649a4c:;
				{
					_8758_prec=_21ec8b51c_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_21864aa3c:;
				{
					_8758_prec=_21ec8b51c_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_21864aaa3:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_21864a9c6:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21864c9ea:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_21864cab6:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_21864c555:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_21864c665:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_21ec94ee8_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_21ec9548d_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _21ec8886b_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	return _21ec89042_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _21ec8886b_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _21ec8689c_floatInfo* _18824_flt) {
	_21ec9a086_decimal _1896_d = _21ec9a086_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_21ec9a471_assign(&_1896_d, _1882_mant);
	_21ec9a729_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_21ec874e6_decimalSlice _1926_digs = _21ec874e6_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_21ec89460_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_21ec874e6_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_218653715:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_21865453a:;
				{
					_18733_prec=_21ec8b51c_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_2186545a1:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_218654419:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_21865343a:;
				{
					_21ec9b043_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_2186534a1:;
				{
					_21ec9b043_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_218653517:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_21ec9b043_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_218655a36:;
		};
		_1926_digs=_21ec874e6_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _21ec89042_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _21ec89042_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _21ec874e6_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_218658b27:;
			{
				return _21ec89a04_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_218658b8d:;
			{
				return _21ec89edd_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_218658c04:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _21ec89a04_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _21ec89edd_fmtF(_22418_dst, _22447_neg, _2252_digs, _21ec8b51c_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_218658a6c:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _21ec89460_roundShortest(_21ec9a086_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _21ec8689c_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_21ec9a086_decimal _2926_upper = _21ec9a086_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_21ec9a471_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_21ec9a729_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_21ec9a086_decimal _3116_lower = _21ec9a086_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_21ec9a471_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_21ec9a729_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_218664b55;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = '0';;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = '0';;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = '0';;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_2186698b3:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_21866995c:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_2186699c3:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_2186697d6:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_21866c256:;
					{
						_21ec9b043_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_21866c300:;
					{
						_21ec9a9d2_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_21866c366:;
					{
						_21ec9ac8a_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_218669a39:;
			};
		}
	_iter_next_218664b55:;
	}
	_iter_end_218664b55:;;
}



inline jule::Slice<jule::U8> _21ec89a04_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _21ec874e6_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _21ec8b198_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_2186711a0:;
		}
		_iter_end_2186711a0:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_218673878:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_218673a10:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_218673317:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_218672c51:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _21ec89edd_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _21ec874e6_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _21ec8b198_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_21867755d:;
		}
		_iter_end_21867755d:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = '0';;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_218678817:;
		}
		_iter_end_218678817:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _21ec8a692_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _21ec8689c_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_s_21734d334_byte__jule_tuple_str __jule_assign_result = _21eca0278_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_s_21734d334_byte__jule_tuple_str __jule_assign_result = _21eca0278_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _21ec8ad24_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _21ec8689c_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_21867dce5:;
	}
	_iter_end_21867dce5:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_218683767:;
		}
		_iter_end_218683767:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_21868525d:;
		}
		_iter_end_21868525d:;;
	};
	jule::U8 _5716_ch = 'P';;
	if ((_51137_fmt == _21ec8c1aa_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_218687b56:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_2186872d7:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_218686a56:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_218686d0e:;
	};
	return _51113_dst;;
}



inline jule::I64 _21ec8b198_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _21ec8b51c_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _21ec8c1aa_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__205e60243_ConvError _21ec8c62d_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__205e60243_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_21868d266:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_21868c60b:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_21ec8c1aa_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_21868eb2a:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_21ec8c1aa_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_21868ec18:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_21ec8c1aa_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_21868e7c8:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_21868e762:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_21868e685:;
					};
				};
			}
		}
		else {
			_case_begin_21868c584:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_21868c485:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_218693b2e:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_218693942:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_2186929eb:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_2186935ac:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_218693623:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_21868e344:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_218694a53:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2186959bb:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_218696d30:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _21ec8c1aa_lower(_1099_c)) && (_21ec8c1aa_lower(_1099_c) <= 'z'))) {
						_case_begin_218696c31:;
						{
							_1107_d=(jule::U8)((jule::U8)(_21ec8c1aa_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_218696ca8:;
						{
							goto _iter_next_2186959bb;
						}
					}
					else {
						_case_begin_2186967ad:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_218696736:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_2186959bb:;
			++it;
			goto _iter_begin_2186959bb;
		}
		_iter_end_2186959bb:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _21ec8ca5c_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__205e60243_ConvError __jule_assign_result = _21ec8c62d_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _21ec8d013_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type142)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__205e60243_ConvError __jule_assign_result = _21ec8c62d_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type142)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type142)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type142)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _21ec8dba1_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_21ec4b026_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _21e56c5c3_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(_4122_man, _21ec8e982_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(_4122_man, _21ec8e982_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_6315_xLo=_6817_mergedLo;
		_636_xHi=_687_mergedHi;
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _21ec4b026_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _21ec8e08b_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_21ec4a91b_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _21e56c5c3_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(_11022_man, _21ec8e982_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(_11022_man, _21ec8e982_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_13816_x_lo=_14318_merged_lo;
		_1386_x_hi=_1437_merged_hi;
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _21ec4a91b_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _21ec90cb3_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_2186bee35:;
	}
	_iter_end_2186bee35:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _21ec910c1_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_2186c3741:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_2186c37b8;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_2186c37b8:;
			{
				jule::I64 _887_caseN = _21ec90cb3_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _21ec540c8_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_2186c382e:;
			{
				if ((_21ec90cb3_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _21ec53a01_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2186c3697:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _21ec9138a_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_2186c8acb:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_2186c8d84:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_2186c8c96:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_21ec8c1aa_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_2186cdc68:;
					{
						goto _iter_next_2186cd1eb;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_2186cdd12:;
					{
						if (_1326_sawdot) {
							goto _julec_label_2186d309c;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_2186cd1eb;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_2186cdd78:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_2186cd1eb;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_2186cd1eb;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _21ec8c1aa_lower(_1383_c))) && (_21ec8c1aa_lower(_1383_c) <= 'f'))) {
					_case_begin_2186cddde:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_21ec8c1aa_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_2186cd1eb;
					}
				}
				_match_end_2186cdb7a:;
			};
			goto _iter_end_2186cd1eb;
		}
	_iter_next_2186cd1eb:;
	}
	_iter_end_2186cd1eb:;;
	_julec_label_2186d309c:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_21ec8c1aa_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_2186d5e90;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_2186d5e90:;
		}
		_iter_end_2186d5e90:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _21ec92dd6_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _21ec87062_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_2186ddc9a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_2186ddd11:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_21ec9229d_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _21ec9229d_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_2186ddd77:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _21ec9229d_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_2186ddbac:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _21ec93315_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _21ec86c65_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_2186e2dc0:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_2186e2e36:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_21ec925cd_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _21ec925cd_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_2186e2e9c:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _21ec925cd_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_2186e2cd2:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__205e60243_ConvError _21ec938a9_atofHex(_21ec8689c_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__205e60243_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_2186e6676:;
	}
	_iter_end_2186e6676:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_2186e88a9:;
	}
	_iter_end_2186e88a9:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_2186e8c50:;
	}
	_iter_end_2186e8c50:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & (({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_21ec8689c_floatInfo_eq(&(*(_55613_flt)), _21ec86c65_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_21ec4a91b_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _21ec4b026_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__205e60243_ConvError _21ec93c83_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__205e60243_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec910c1_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec9138a_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__205e60243_ConvError __jule_assign_result = _21ec938a9_atofHex(&(_21ec86c65_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21ec93315_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21ec8e08b_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21ec8e08b_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_21ec9a086_decimal _6676_d = _21ec9a086_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_21ec91a50_set(&_6676_d, _238cd51b7_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _21ec91d91_floatBits(&_6676_d, &(_21ec86c65_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_21ec4a91b_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError _21ec93ec5_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec910c1_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec9138a_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__205e60243_ConvError __jule_assign_result = _21ec938a9_atofHex(&(_21ec87062_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _21ec92dd6_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _21ec8dba1_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _21ec8dba1_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_21ec9a086_decimal _7246_d = _21ec9a086_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_21ec91a50_set(&_7246_d, _238cd51b7_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _21ec91d91_floatBits(&_7246_d, &(_21ec87062_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_21ec4b026_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError _21ec94349_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__205e60243_ConvError __jule_assign_result = _21ec93c83_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_21ec93ec5_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _21ec946bd_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__205e60243_ConvError __jule_assign_result = _21ec94349_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type142)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _21ec94ee8_ryuFtoaFixed32(_21ec874e6_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		(*(_4924_d))._field_dp=0LL;
		(*(_4924_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _21e574b91_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(_632_b - 25LL);
	};
	jule::I64 _742_q = (((-(_21ec96538_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec97e30_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _21ec986d3_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_21ec95cc9_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _21ec9548d_ryuFtoaFixed64(_21ec874e6_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		(*(_12124_d))._field_dp=0LL;
		(*(_12124_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _21e574e5a_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(_1322_b - 55LL);
	};
	jule::I64 _1462_q = (((-(_21ec96538_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec9835e_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _21ec986d3_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_21ec95cc9_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _21ec95cc9_formatDecimal(_21ec874e6_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _21ec957ce_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_21872d416:;
	}
	_iter_end_21872d416:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=_20088_prec;
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_2187314d5:;
	}
	_iter_end_2187314d5:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_218731b78:;
	}
	_iter_end_218731b78:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _21ec962a2_ryuFtoaShortest(_21ec874e6_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _21ec8689c_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		(*(_26125_d))._field_dp=0LL;
		(*(_26125_d))._field_nd=0LL;
		return;;
	};
	if (((_26157_exp <= 0LL) && (_21e56e1b8_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_21ec97380_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _21ec96c31_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_21ec97380_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_21ec96538_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_21ec8689c_floatInfo_eq(&(*(_26168_flt)), _21ec86c65_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec97e30_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec97e30_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec97e30_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec9835e_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec9835e_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21ec9835e_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		_2886_du0=false;
		_2876_dc0=false;
		_2866_dl0=false;
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_21ec986d3_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_21ec986d3_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_21ec986d3_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_21ec97380_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _21ec96538_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _21ec96802_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _21ec96c31_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _21ec8689c_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _21ec97380_ryuDigits(_21ec874e6_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21ec9899c_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21ec9899c_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21ec9899c_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_21ec97a01_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_21ec97a01_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_21875465c:;
		}
		_iter_end_21875465c:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_21ec97a01_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_218756c8b:;
	}
	_iter_end_218756c8b:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_218754eba:;
	}
	_iter_end_218754eba:;;
}



inline void _21ec97a01_ryuDigits32(_21ec874e6_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_21875981b;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			_4556_upper=_4723_u;
			_45458_central=_4717_c;
			_45442_lower=_4703_l;
		}
	_iter_next_21875981b:;
	}
	_iter_end_21875981b:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_2187606e0:;
	}
	_iter_end_2187606e0:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _21ec97e30_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _21ec8e982_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_21ec96802_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _21ec9835e_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _21ec8e982_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_21ec96802_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e577501_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e575be7_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _21ec986d3_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_21876d412:;
	}
	_iter_end_21876d412:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _21ec9899c_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _21ec9b8d4_trim(_21ec9a086_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_218771ca6:;
	}
	_iter_end_218771ca6:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _21ec9bbc0_rightShift(_21ec9a086_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_2187752b5:;
				}
				_iter_end_2187752b5:;;
				goto _iter_end_2187734d3;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_2187734d3:;
	}
	_iter_end_2187734d3:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_218775ded:;
	}
	_iter_end_218775ded:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_21877821e:;
	}
	_iter_end_21877821e:;;
	(*(_28420_a))._field_nd=_2866_w;
	_21ec9b8d4_trim(_28420_a);
}



inline jule::Bool _21ec9c176_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_21877ade2:;
	}
	_iter_end_21877ade2:;;
	return false;;
}



inline void _21ec9c42e_leftShift(_21ec9a086_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _21ec9999d_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_21ec9c176_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_21ec9999d_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_21877e3bd:;
	}
	_iter_end_21877e3bd:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_218781788:;
	}
	_iter_end_218781788:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_21ec9b8d4_trim(_35219_a);
}



inline jule::Bool _21ec9c7a3_shouldRoundUp(_21ec9a086_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _21ec9de7a_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _21ec9e94d_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_s_21734d334_byte__jule_tuple_str __jule_assign_result = _21eca0278_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _21ec9e343_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _21ec9e94d_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_s_21734d334_byte__jule_tuple_str __jule_assign_result = _21eca0278_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _21ec9e60c_Itoa(jule::I64 _819_i) {
	return _21ec9e343_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _21ec9e94d_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _238cd5717_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _21ec9ebd4_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_s_21734d334_byte__jule_tuple_str _21eca0278_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_s_21734d334_byte__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_2187b6aa9:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = (jule::U64)(({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_2187b8a01:;
				}
				_iter_end_2187b8a01:;;
				jule::U64 _1643_is = (jule::U64)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_21ec9ebd4_isPowerOfTwo(_10541_base)) {
			_case_begin_2187b6ec7:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_21e56d519_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_2187c150e:;
				}
				_iter_end_2187c150e:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_2187b6009:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_2187b6ca7:;
				}
				_iter_end_2187b6ca7:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_2187b645a:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_238cd5717_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _21eca1b2b_Throw(jule::Str _910_msg) {
	jule::println(_2175dc518_toStr(_910_msg));
	_21e89a5d2_Exit(1LL);
}



inline jule::Bool _208712064_IsUnaryOp(jule::U64 _33314_id) {
	{
		auto expr = &(_20823b97e_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2188274cc:;
		if (it != expr_end) {
			jule::U64 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_2188274cc:;
			++it;
			goto _iter_begin_2188274cc;
		}
		_iter_end_2188274cc:;
	};
	return false;;
}



inline jule::Bool _208712372_IsBinOp(jule::U64 _34312_id) {
	{
		auto expr = &(_20823bcae_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2188279d8:;
		if (it != expr_end) {
			jule::U64 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_2188279d8:;
			++it;
			goto _iter_begin_2188279d8;
		}
		_iter_end_2188279d8:;
	};
	return false;;
}



inline jule::Bool _20871297c_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _208712c13_IsRawStr(_36310_k)));;
}



inline jule::Bool _208712c13_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _208712ecc_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _2087138b2_IsFloat(jule::Str _37912_k) {
	if (_220c5c157_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _220c62514_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _220c62514_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _208713b7b_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _20871420e_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _2087144c8_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _208714a5b_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_20823b693_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218830084:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_218830084:;
			++it;
			goto _iter_begin_218830084;
		}
		_iter_end_218830084:;
	};
	return false;;
}



inline jule::Bool _208715056_IsLetter(jule::I32 _42813_r) {
	return _220bde194_IsLetter(_42813_r);;
}



inline jule::Bool _2087154c9_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_208719ad8_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21883285b:;
		if (it != expr_end) {
			_2087196ed_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_21883285b:;
			++it;
			goto _iter_begin_21883285b;
		}
		_iter_end_21883285b:;
	};
	return false;;
}



inline jule::Bool _208715793_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _208715a5c_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _208715d26_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _2087160e0_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_2188347c5:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_21883485d:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_2188348d5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_21883475e:;
			{
				return false;;
			}
		}
		_match_end_218834143:;
	};
}



inline jule::Bool _2087163a9_IsAssign(jule::U64 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U64>(1LLU)) || (_48213_id == static_cast<jule::U64>(27LLU))) || (_48213_id == static_cast<jule::U64>(30LLU))) || (_48213_id == static_cast<jule::U64>(32LLU))) || (_48213_id == static_cast<jule::U64>(24LLU))) || (_48213_id == static_cast<jule::U64>(74LLU))) || (_48213_id == static_cast<jule::U64>(62LLU))) || (_48213_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _208716673_IsPostfixOp(jule::U64 _49416_id) {
	{
		auto expr = &(_20870ad0a_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218837773:;
		if (it != expr_end) {
			jule::U64 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_218837773:;
			++it;
			goto _iter_begin_218837773;
		}
		_iter_end_218837773:;
	};
	return false;;
}



inline jule::Bool _20871693c_IsAssignOp(jule::U64 _50415_id) {
	if (_208716673_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_20870b0e6_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218838ab5:;
		if (it != expr_end) {
			jule::U64 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_218838ab5:;
			++it;
			goto _iter_begin_218838ab5;
		}
		_iter_end_218838ab5:;
	};
	return false;;
}



inline _21e65b904_Log _20871a457_makeErr(jule::I64 _10112_row, jule::I64 _10122_col, jule::Ptr<_2087173cc_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _21e65b904_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_21e65bd66_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _20871a820_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218844076:;
		if (it != expr_end) {
			jule::I64 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_218844076:;
			++it;
			_1156_i++;
			goto _iter_begin_218844076;
		}
		_iter_end_218844076:;
	};
	return true;;
}



inline jule::Str _20871ab94_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I64 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_208715793_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_218847002;
			};
		}
	_iter_next_218847002:;
	}
	_iter_end_218847002:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _20871b05c_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I64 _15728_i) {
	return _20871ab94_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _20871b3d1_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I64 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_218848a5e:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _208715793_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_218849b3c:;
					{
						goto _iter_next_21884893d;
					}
				}
				else if (_20871cc62_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_218849bd6:;
					{
						return _20871b05c_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_218849ab5:;
					{
						goto _iter_end_21884893d;
					}
				}
				_match_end_218849a4e:;
			};
		}
	_iter_next_21884893d:;
	}
	_iter_end_21884893d:;;
	return jule::Str();;
}



inline jule::Str _20871b755_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I64 _18236_i) {
	_18236_i+=2LL;
	return _20871ab94_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _20871bac9_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I64 _18735_i) {
	(_18735_i)++;
	return _20871ab94_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _20871c05d_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I64 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _238cd5717_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _238cd5717_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _20871ab94_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_208715793_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_21884c1a0;
			};
		}
	_iter_next_21884c1a0:;
	}
	_iter_end_21884c1a0:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _20871c2a0_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2186_i = 0LL;;
	_julec_label_21884ea65:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_2188507be:;
					{
						__jule_func_result = _20871c05d_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_218850868:;
					{
						goto _iter_next_21884eb97;
					}
				}
				else if (_20871c8dd_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_2188508ce:;
					{
						__jule_func_result = _20871ab94_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_208715793_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_218850945:;
					{
						goto _iter_end_21884eb97;
					}
				}
				_match_end_2188506e2:;
			};
		}
	_iter_next_21884eb97:;
	}
	_iter_end_21884eb97:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _20871c569_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_20871a820_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_208715a5c_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_21885320b;
			};
		}
	_iter_next_21885320b:;
	}
	_iter_end_21885320b:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _20871c8dd_isFloatFmtE(jule::U8 _26216_b, jule::I64 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _20871cc62_isFloatFmtP(jule::U8 _26616_b, jule::I64 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _20871d0d6_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I64 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_218855bc0:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _208715793_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_218856d25:;
					{
						goto _iter_next_2188562ca;
					}
				}
				else if (_20871cc62_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_218856dbe:;
					{
						return true;;
					}
				}
				else {
					_case_begin_218856c9d:;
					{
						goto _iter_end_2188562ca;
					}
				}
				_match_end_218856c37:;
			};
		}
	_iter_next_2188562ca:;
	}
	_iter_end_2188562ca:;;
	return false;;
}



inline jule::Bool _20871d45a_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I64 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_218857ead:;
			{
				goto _case_begin_218856561;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_218856561:;
			{
				goto _case_begin_2188565c7;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_2188565c7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2188564c8:;
			{
				return true;;
			}
		}
		_match_end_2188563c9:;
	};
}



inline jule::Bool _20871d7ce_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I64 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_218859a09:;
			{
				goto _case_begin_218859a70;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_218859a70:;
			{
				goto _case_begin_218859ae7;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_218859ae7:;
			{
				goto _case_begin_218859b6e;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_218859b6e:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2188595db:;
			{
				return true;;
			}
		}
		_match_end_2188594cb:;
	};
}



inline jule::Str _20871dcc9_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I64 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _20871c05d_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_20871c8dd_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _20871ab94_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_208715d26_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_21885e080;
			};
		}
	_iter_next_21885e080:;
	}
	_iter_end_21885e080:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _20871dea5_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3706_i = 2LL;;
	_julec_label_218862bee:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_20871d45a_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_21886386a:;
					{
						__jule_func_result = _20871bac9_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_20871d7ce_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_218863914:;
					{
						__jule_func_result = _20871b755_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_20871cc62_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_21886397a:;
					{
						__jule_func_result = _20871b05c_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_20871d0d6_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_2188639e1:;
					{
						__jule_func_result = _20871b3d1_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_2087160e0_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_218863a57:;
					{
						goto _iter_end_218862c98;
					}
				}
				_match_end_21886377c:;
			};
		}
	_iter_next_218862c98:;
	}
	_iter_end_218862c98:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _20871e307_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I64 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_2087160e0_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_218865927:;
	}
	_iter_end_218865927:;;
	__jule_func_result=_238cd5717_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _20871e5c1_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _20871e307_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _20871e88a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _20871e307_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _20871eb54_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _20871e307_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _20871ee1d_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_208715d26_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_208715d26_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_208715d26_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _238cd5717_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_21e65b904_Log> _208724e12_Lex(jule::Ptr<_2087173cc_Fileset> _80712_f, jule::I64 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_20872068d_lex _8126_lex = _20872068d_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_208711827_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_21e65b904_Log>(nullptr)};;
	_2087234d7_newLine(&_8126_lex);
	_2087212b5_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _20880e727_lshiftUnsig(_208799195_Const* _58821_c, _208799195_Const* _58832_x) {
	jule::U64 _5892_l = _20880816b_AsU64(_58821_c);;
	jule::U64 _5902_r = _20880816b_AsU64(_58832_x);;
	_208808963_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _20880ea57_rshiftUnsig(_208799195_Const* _59421_c, _208799195_Const* _59432_x) {
	jule::U64 _5952_l = _20880816b_AsU64(_59421_c);;
	jule::U64 _5962_r = _20880816b_AsU64(_59432_x);;
	_208808963_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _208894812_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_21896c369:;
			{
				return _208893d2d_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_21896c402:;
			{
				return _2088940d6_SysUint;;
			}
		}
		else {
			_case_begin_218964729:;
			{
				return _4515_kind;;
			}
		}
		_match_end_2189640db:;
	};
}



inline jule::I64 _208894acb_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_21896d645:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_21896d887:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_21896d90e:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_21896d6bc:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_21896d744:;
			{
				return _208893ab9_BitSize;;
			}
		}
		else {
			_case_begin_21896d469:;
			{
				return -1LL;;
			}
		}
		_match_end_21896d58a:;
	};
}



inline jule::Str _208894e1c_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_218970ec7:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_2189714b1:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_218971527:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21897103d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_21897137e:;
			{
				return jule::Str();;
			}
		}
		_match_end_218970e0b:;
	};
}



inline jule::Str _2088951a3_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_218971978:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_218972c54:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_218972cba:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_2189719de:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_2189710b5:;
			{
				return jule::Str();;
			}
		}
		_match_end_21897265a:;
	};
}



inline jule::Str _20889546c_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_218974849:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_218974481:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_218971a66:;
			{
				return jule::Str();;
			}
		}
		_match_end_218973d87:;
	};
}



inline jule::Bool _208896072_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _21ec946bd_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _20889633b_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_21897961d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_218979057:;
			{
				return 64LLU;;
			}
		}
		_match_end_21897873d:;
	};
}



inline jule::I64 _208896605_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_21897a3bb:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_21897a047:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_21897a0ad:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_2189798e8:;
			{
				return 64LLU;;
			}
		}
		_match_end_218979e04:;
	};
}



inline jule::I64 _2088968be_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_21897be06:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_21897ba82:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_21897bae8:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_21897b433:;
			{
				return 64LLU;;
			}
		}
		_match_end_21897b93e:;
	};
}



inline void _208896a67_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _220c6cb90_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_21897cc4d:;
				{
					_208893ab9_BitSize=64LLU;
					_208893d2d_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_2088940d6_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_21897c9d9:;
				{
					_208893ab9_BitSize=32LLU;
					_208893d2d_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_2088940d6_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_21897cd4c:;
		};
	};
}



inline void _208896bdd_init(void) {
	_208896a67_UpdateTarget();
}



inline jule::I64 _20889a7a2_MinI(jule::Str _6113_k) {
	_6113_k=_208894812_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_218980190:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_218980206:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_21898026c:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_2189802d3:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_21897c1e2:;
			{
				return 0LL;;
			}
		}
		_match_end_21897d18d:;
	};
}



inline jule::I64 _20889aab0_MaxI(jule::Str _7913_k) {
	_7913_k=_208894812_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_218981a32:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_218981a98:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_218981b0e:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_218981b86:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_2189817bd:;
			{
				return 0LL;;
			}
		}
		_match_end_218980987:;
	};
}



inline jule::U64 _20889ad79_MaxU(jule::Str _9713_k) {
	_9713_k=_208894812_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_21898343a:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_2189834a1:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_218983517:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_21898357d:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_2189831b5:;
			{
				return 0LLU;;
			}
		}
		_match_end_21898237e:;
	};
}



inline jule::F64 _20889b1ba_Min(jule::Str _11512_k) {
	_11512_k=_208894812_RealKindOf(_11512_k);
	jule::I64 _1172_i = _20889a7a2_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_218985d88:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_218985915:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_218985195:;
			{
				return 0LL;;
			}
		}
		_match_end_218985739:;
	};
}



inline jule::F64 _20889b451_Max(jule::Str _13312_k) {
	_13312_k=_208894812_RealKindOf(_13312_k);
	jule::I64 _1352_i = _20889aab0_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _20889ad79_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_21898763c:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_218987d46:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_21898796c:;
			{
				return 0LL;;
			}
		}
		_match_end_2189875c6:;
	};
}



inline jule::Bool _20889c573_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _20889c881_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _20889cb4a_IsInt(jule::Str _4610_k) {
	return (_20889c573_IsSigInt(_4610_k) || _20889c881_IsUnsigInt(_4610_k));;
}



inline jule::Bool _20889ce8b_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _20889d222_IsNum(jule::Str _5610_k) {
	return (_20889cb4a_IsInt(_5610_k) || _20889ce8b_IsFloat(_5610_k));;
}



inline jule::Bool _20889d4db_IsSigNum(jule::Str _6113_k) {
	return (_20889c573_IsSigInt(_6113_k) || _20889ce8b_IsFloat(_6113_k));;
}



inline jule::Bool _208926751_FindModuleFile(jule::Slice<_21e80ade4_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21898dc81:;
		if (it != expr_end) {
			_21e80ade4_Dir *_159_d = it;
			{
				if (((!(_21e88bc11_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_21898dc81:;
			++it;
			goto _iter_begin_21898dc81;
		}
		_iter_end_21898dc81:;
	};
	return false;;
}



inline jule::Str _208926a2b_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_21e80ade4_Dir> _287_dirents = ({
				auto except = static__220c6b1cc_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_21898e6bb;
				} jule::Slice<_21e80ade4_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _208926751_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I64 _373_n = _2627_path.len();;
			_2627_path=_220c68ebb_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_21898e6bb;
			};
		}
	_iter_next_21898e6bb:;
	}
	_iter_end_21898e6bb:;;
	return jule::Str();;
}



inline jule::Slice<_21e65b904_Log> _208926ce5_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__21e811a65_Read(_220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_21e65b904_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21e65b904_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _220c649ab_Trim(_238cd544d_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_21e65b904_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21e65b904_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _208927587_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _220c5a9d5_IsUpper(_142_r);;
}



inline jule::Bool _208982180_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _208968b17_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_208984a01_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _2089840a5_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _2089843e6_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21899aa07:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_21899aa07;
				};
			}
			_iter_next_21899aa07:;
			++it;
			goto _iter_begin_21899aa07;
		}
		_iter_end_21899aa07:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_208984d97_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_21e42e881_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_21899c7a6:;
	}
	_iter_end_21899c7a6:;;
	return _238cd5717_StrFromBytes(_686_s);;
}



inline __jule_tuple__21734d334_byte__jule_tuple_bool _20898467c_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple__21734d334_byte__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_21899ee29:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_2189a0611:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2189a0677:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_2189a06dd:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_2189a0754:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_2189a07cb:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_2189a0853:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_2189a08ca:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_2189a0952:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_2189a09c9:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_2189a0479:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _208984a01_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple__21734d334_byte__jule_tuple_bool __jule_assign_result = _20898467c_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_2189a58be:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _21ec8ca5c_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2189a5528:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _21ec8ca5c_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2189a4da7:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _21ec8ca5c_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_2189a4219:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _21ec8ca5c_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_2189a3cb8:;
	};
}



inline void _208984d97_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _208984a01_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_21e42e881_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _208a47498_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_2189aca6e:;
	}
	_iter_end_2189aca6e:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _208a4e03d_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d495_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_2189aeb70:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_2189b080d:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_2189b06dc:;
			};
		}
	_iter_next_2189ae785:;
	}
	_iter_end_2189ae785:;;
	return nullptr;;
}



inline void _208a4e329_FmtByDefault(_21e64c5b5_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _21e64d594_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type143) {
			_case_begin_2189aea3d:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec87a79_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type143)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_2189b2667:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec87a79_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_2189b27bb:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9e343_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_2189b2832:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9e343_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2189b1d81:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9e343_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2189b1de7:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9e343_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_2189b1e5d:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type147) {
			_case_begin_2189b1ec4:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type147)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type148) {
			_case_begin_2189b2942:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9de7a_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type148)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_2189b29a8:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _21ec9de7a_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2189b2a30:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_2189b2aa7:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _21e64d594_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _21e64d594_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_2189b17ba:;
			{
				({
					auto except = _21e64d594_WriteStr(_4822_buf, _217590cd5_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_2189b1754:;
	};
}



inline void _208a4e747_applyFmtByDefault(_21e64c5b5_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_208a4e329_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _208a4eb65_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _21e64c5b5_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_208a4e747_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _21e64d594_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _21e64d253_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _208a4eed9_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _238cd51b7_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _208a47498_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_21e64c5b5_Builder _1276_buf = static__21e64ce12_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_208a47498_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _21e64d253_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _208a4e03d_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_2189dc560;
			};
			_208a4eb65_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _21e64d253_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_2189dc560;
			};
			_1266_last=_1216_i;
		}
	_iter_next_2189dc560:;
	}
	_iter_end_2189dc560:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _21e64d253_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _21e64e8c5_Buf(&_1276_buf);;
}



inline jule::Str _208a52184_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _238cd5717_StrFromBytes(_208a4eed9_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_20881e2b4_Fn> _2083e3152_runtimeFindFn(jule::Ptr<_20890d040_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_20881e2b4_Fn> _126_f = _20890e64b_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_208746230_Struct> _2083e35d6_runtimeFindStruct(jule::Ptr<_20890d040_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_208746230_Struct> _256_f = _20890e250_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _20882464e_parameterUsesGenerics(jule::Ptr<_20882121c_ParamIns>* _40231_p, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _40246_generics) {
	if (_20881ce3e_IsSelf((*((*(_40231_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _2089eb507_kindUsesGenerics(&((*((*(_40231_p))))._field_Type), _40246_generics);;
}



inline jule::Ptr<_20899a9a1_Data> _2088c327a_buildAsComptimeMethodData(jule::Ptr<_208822372_FnIns>* _203135_f) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203135_f)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20890d040_ImportInfo> _2088c3489_findComptimePackage(jule::Ptr<_20892a755_sema>* _203929_s) {
	return _20892ac2d_SelectPackage((*(_203929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_20890d040_ImportInfo>>((void*)__jule_anon218c62560, nullptr, nullptr));;
}



inline jule::Ptr<_20899a9a1_Data> _2088c380d_buildComptimeTypeInfoData(jule::Ptr<_20892a755_sema>* _204535_s, jule::Ptr<_2089ce661_Type>* _204550_t) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_208929c0a_pushComptimeTypeInfo((*((*(_204535_s))))._field_meta.ptr(), _204550_t), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _2088c3b4e_buildComptimeValue(jule::Ptr<_20899a9a1_Data>* _205328_d) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088b569b_comptimeValue>(_2088b569b_comptimeValue{._field_data=(*(_205328_d))}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Str _2088c6976_toStrConstraints(jule::Ptr<_2089ccc7a_InsGeneric> _14321_g) {
	_21e64c5b5_Builder _1446_sb = static__21e64ce12_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218e44c4d:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_2089ce661_Type> *_1459_c = it;
			{
				({
					auto except = _21e64d594_WriteStr(&_1446_sb, _2089cea5c_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _21e64d594_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_218e44c4d:;
			++it;
			_1456_i++;
			goto _iter_begin_218e44c4d;
		}
		_iter_end_218e44c4d:;
	};
	return _21e64de24_Str(&_1446_sb);;
}



inline jule::Bool _2088c6d3e_matchConstraint(jule::Str* _15421_c, jule::Ptr<_2089ce661_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_218e46ac9:;
			{
				jule::Ptr<_2089d846c_Prim> _1573_prim = _2089d2774_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _20889d4db_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_218e46b40:;
			{
				jule::Ptr<_2089d846c_Prim> _1633_prim = _2089d2774_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _20889c881_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_218e46ba6:;
			{
				jule::Ptr<_2089d846c_Prim> _1693_prim = _2089d2774_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _20889ce8b_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_218e46c1c:;
			{
				jule::Ptr<_2089d846c_Prim> _1753_prim = _2089d2774_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _20889d222_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_218e46e09:;
			{
				return _2089d19a4_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_218e46e70:;
			{
				return (!(_2089d19a4_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_218e46ed6:;
			{
				return _2089d171d_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_218e4704c:;
			{
				return _2089d1c3a_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_218e2d84c:;
			{
				return false;;
			}
		}
		_match_end_218e46975:;
	};
}



inline jule::Bool _2088c7108_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_2088c4d3c_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218e4d097:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_218e4d097:;
			++it;
			goto _iter_begin_218e4d097;
		}
		_iter_end_218e4d097:;
	};
	return false;;
}



inline jule::Ptr<_2088d3169_scopeChecker> _2088c99e0_newScopeCheckerBase(jule::Ptr<_20892a755_sema>* _3229_s, jule::Ptr<_208822372_FnIns> _3243_owner) {
	return jule::new_ptr<_2088d3169_scopeChecker>(_2088d3169_scopeChecker{._field_calledFrom=jule::Ptr<_208711827_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_2088d3169_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_2088255b7_SymTab>(_2088255b7_SymTab{._field_File=jule::Ptr<_2087173cc_Fileset>(nullptr), ._field_Passes=jule::Slice<_2088ec518_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_20890d040_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_20881e2b4_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_2088299c8_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_20882c17e_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_20882d889_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_2088c7977_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_tree=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_result=jule::Ptr<_2088d2179_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_20894d7de_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_2088d1ca0_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_2088d3169_scopeChecker> _2088c9da8_newScopeChecker(jule::Ptr<_20892a755_sema>* _4025_s, jule::Ptr<_208822372_FnIns> _4039_owner) {
	jule::Ptr<_2088d3169_scopeChecker> _416_base = _2088c99e0_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2088d1ca0_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::U64 _2088e580d_removeEqFromOp(jule::U64 _208319_op) {
	{
		auto &_match_expr{ _208319_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_218e6759a:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_218e67611:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_218e67688:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_218e67710:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_218e678ca:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_218e67941:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_218e679a7:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_218e67a2e:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_218e67aa6:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_218e67b72:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_218e6638a:;
			{
				return _208319_op;;
			}
		}
		_match_end_218e66610:;
	};
}



inline void _2088e5ab6_makeComptimeRange(jule::Ptr<_20899a9a1_Data>* _211227_d) {
	{
		
		if ((_2089d4d4d_comptimeStructFields((*((*(_211227_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_218e6805c:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d4d4d_comptimeStructFields((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else if ((_2089d536a_comptimeEnumFields((*((*(_211227_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_218e6b3b2:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d536a_comptimeEnumFields((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else if ((_2089d613a_comptimeTypeInfos((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_218e6b428:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d613a_comptimeTypeInfos((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else if ((_2089d5887_comptimeParams((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_218e680c3:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d5887_comptimeParams((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else if ((_2089d6657_comptimeStatics((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_218e68139:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d6657_comptimeStatics((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else if ((_2089d76ad_comptimeFiles((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_218e681a0:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d76ad_comptimeFiles((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else if ((_2089d7191_comptimeDecls((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_218e6b99a:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_20889e696_comptimeRange>(_20889e696_comptimeRange{._field_kind=jule::Trait(_2089d7191_comptimeDecls((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_20889e476_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_218e67ee6:;
			{
				(*((*(_211227_d))))._field_Decl=true;
			}
		}
		_match_end_218e6b0b5:;
	};
}



inline jule::Bool _2088e5d4c_canComptimeMatch(jule::Ptr<_20899a9a1_Data>* _213526_d) {
	if ((!(_208998ebb_isGoodValueToInfer(_213526_d)))) {
		return false;;
	};
	return (_20899b3db_IsConst((*(_213526_d)).ptr()) || (_2089d63c1_comptimeTypeInfo((*((*(_213526_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _2088e6116_stmtIsDef(jule::Any* _214315_stmt) {
	{
		auto &_match_expr{ (*(_214315_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_218e766a8:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_218e77a0b:;
			{
				jule::Ptr<_2088ce9e5_MultiAssign> _21483_ma = (*(_214315_stmt)).cast_ptr<_2088ce9e5_MultiAssign>(&__jule_any_type44);;
				return ((*(_21483_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_218e775aa:;
			{
				return false;;
			}
		}
		_match_end_218e77544:;
	};
}



inline jule::I64 _2088e648a_countMatchType(jule::Ptr<_2088d0463_Match>* _215520_m, jule::Ptr<_2089ce661_Type>* _215532_t) {
	jule::I64 _21566_n = 0LL;;
	_julec_label_218e7a4d1:;
	{
		auto expr = &((*((*(_215520_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218e7a921:;
		if (it != expr_end) {
			jule::Ptr<_2088d0c5a_Case> *_21589_c = it;
			{
				if (((*(_21589_c)) == nullptr)) {
					goto _iter_next_218e7a921;
				};
				{
					auto expr = &((*((*(_21589_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e7b7ac:;
					if (it != expr_end) {
						jule::Ptr<_20899a9a1_Data> *_216210_expr = it;
						{
							if (((*(_216210_expr)) == nullptr)) {
								goto _iter_end_218e7a921;
							};
							if (_2089ced9d_Equal((*(_215532_t)), (*((*(_216210_expr))))._field_Model.cast_ptr<_2089ce661_Type>(&__jule_any_type85))) {
								(_21566_n)++;
							};
						}
						_iter_next_218e7b7ac:;
						++it;
						goto _iter_begin_218e7b7ac;
					}
					_iter_end_218e7b7ac:;
				};
			}
			_iter_next_218e7a921:;
			++it;
			goto _iter_begin_218e7a921;
		}
		_iter_end_218e7a921:;
	};
	return _21566_n;;
}



inline jule::Ptr<_2088d1ca0_scopeLabel> _2088e691e_findLabelParent(jule::Str* _217921_ident, jule::Ptr<_2088d3169_scopeChecker> _217937_scope) {
	jule::Ptr<_2088d1ca0_scopeLabel> _21806_label = _2088d7536_findLabelScope(_217937_scope, _217921_ident);;
	while ((_21806_label == nullptr)) {
		{
			if ((((*_217937_scope.alloc)._field_parent == nullptr) || ((*_217937_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_217937_scope=(*(_217937_scope))._field_parent;
			_21806_label=_2088d7536_findLabelScope(_217937_scope, _217921_ident);
		}
	_iter_next_218e7bbca:;
	}
	_iter_end_218e7bbca:;;
	return _21806_label;;
}



inline jule::Bool _2088e714a_checkAssignMut(jule::Ptr<_20892a755_sema>* _222624_s, jule::Ptr<_20899a9a1_Data>* _222635_left, jule::Ptr<_20899a9a1_Data> _222652_right, jule::Ptr<_208711827_Token> _222666_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_222635_left))))._field_Mutable))) {
			_case_begin_218e846a5:;
			{
				_20892d659_pushErr((*(_222624_s)).ptr(), _222666_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_222652_right != nullptr) && (!((*_222652_right.alloc)._field_Mutable))) && _2089d19a4_Mutable((*_222652_right.alloc)._field_Type.ptr()))) {
			_case_begin_218e8474e:;
			{
				_20892d659_pushErr((*(_222624_s)).ptr(), _222666_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_222652_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_218e8462d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_218e84551:;
	};
}



inline jule::Bool _2088e7634_checkAssign(jule::Ptr<_20892a755_sema>* _223921_s, jule::Ptr<_20899a9a1_Data>* _223936_left, jule::Ptr<_20899a9a1_Data> _223953_right, jule::Ptr<_208711827_Token> _223967_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_208822372_FnIns> _22402_f = _2089d3a61_Fn((*((*(_223936_left))))._field_Type.ptr());;
	if ((((_22402_f != nullptr) && ((*_22402_f.alloc)._field_Decl != nullptr)) && (*(*(_22402_f))._field_Decl.alloc)._field_Global)) {
		_20892d659_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_20899b3db_IsConst((*(_223936_left)).ptr())) {
			_case_begin_218e8a58a:;
			{
				_20892d659_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_20892d9bc_pushSuggestion((*(_223921_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_223936_left))))._field_Lvalue))) {
			_case_begin_218e8a612:;
			{
				_20892d659_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_218e8949b:;
	};
	__jule_func_result = _2088e714a_checkAssignMut(_223921_s, _223936_left, _223953_right, _223967_op);
	return __jule_func_result;;
}



inline jule::Bool _2088e78ed_isValidAstStForNextSt(jule::Any* _225731_n) {
	{
		auto &_match_expr{ (*(_225731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_218e8c746:;
			{
				return (!((*((*(_225731_n)).cast_ptr<_208735ce1_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_218e847e8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_218e886dc:;
			{
				return false;;
			}
		}
		_match_end_218e8a678:;
	};
}



inline jule::Bool _2088e7bb7_isValidStForNextSt(jule::Any* _226824_st) {
	{
		auto &_match_expr{ (*(_226824_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type44) {
			_case_begin_218e95a7e:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_218e95cb0:;
			{
				{
					auto &_match_expr{ (*((*(_226824_st)).cast_ptr<_20899a9a1_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_218e97e8d:;
						{
							return true;;
						}
					}
					else {
						_case_begin_218e9e109:;
						{
							return false;;
						}
					}
					_match_end_218e9551d:;
				};
			}
		}
		else {
			_case_begin_218e9011c:;
			{
				return false;;
			}
		}
		_match_end_218e900a6:;
	};
}



inline jule::Ptr<_2089d7a65_TypeSym> _2088ec87b_buildType(jule::Ptr<_208727343_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr)});;
}



inline jule::Ptr<_20899bb28_Value> _2088ecb89_buildExpr(jule::Ptr<_20872b677_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_20899a9a1_Data>(nullptr)});;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _2088ece53_buildTypeAlias(jule::Ptr<_20873e019_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Strict=(*_8723_decl.alloc)._field_Strict, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_2088ec87b_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_208744e10_Field> _2088ed294_buildField(jule::Ptr<_208742638_FieldDecl> _9919_decl) {
	return jule::new_ptr<_208744e10_Field>(_208744e10_Field{._field_Owner=jule::Ptr<_208746230_Struct>(nullptr), ._field_Token=(*(_9919_decl))._field_Token, ._field_Public=(*_9919_decl.alloc)._field_Public, ._field_Mutable=(*_9919_decl.alloc)._field_Mutable, ._field_Ident=(*_9919_decl.alloc)._field_Ident, ._field_TypeSym=_2088ec87b_buildType((*_9919_decl.alloc)._field_Kind), ._field_Default=(*_9919_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_208744e10_Field>> _2088ed52a_buildFields(jule::Slice<jule::Ptr<_208742638_FieldDecl>>* _11021_decls) {
	jule::Slice<jule::Ptr<_208744e10_Field>> _1116_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_208744e10_Field>>::alloc(0LL, (*(_11021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_208744e10_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _11021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219226c55:;
		if (it != expr_end) {
			jule::Ptr<_208742638_FieldDecl> _11214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_208744e10_Field>> &__jule_push_dest = _1116_fields; __jule_push_dest.push(_2088ed294_buildField(_11214_decl)); };
			}
			_iter_next_219226c55:;
			++it;
			goto _iter_begin_219226c55;
		}
		_iter_end_219226c55:;
	};
	return _1116_fields;;
}



inline jule::Ptr<_208746230_Struct> _2088ed7e4_buildStruct(jule::Ptr<_20874302e_StructDecl> _11820_decl) {
	return jule::new_ptr<_208746230_Struct>(_208746230_Struct{._field_sema=jule::Ptr<_20892a755_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Token=(*(_11820_decl))._field_Token, ._field_Ident=(*_11820_decl.alloc)._field_Ident, ._field_Fields=_2088ed52a_buildFields(&((*_11820_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_20881e2b4_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_Public=(*_11820_decl.alloc)._field_Public, ._field_Binded=(*_11820_decl.alloc)._field_Binded, ._field_Directives=(*_11820_decl.alloc)._field_Directives, ._field_Generics=(*_11820_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_2088299c8_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_2087490bd_StructIns>>(nullptr)});;
}



inline jule::Ptr<_20881c7e0_Param> _2088edaad_buildParam(jule::Ptr<_208737b7d_ParamDecl> _13019_decl) {
	return jule::new_ptr<_20881c7e0_Param>(_20881c7e0_Param{._field_Token=(*(_13019_decl))._field_Token, ._field_Mutable=(*_13019_decl.alloc)._field_Mutable, ._field_Variadic=(*_13019_decl.alloc)._field_Variadic, ._field_Reference=(*_13019_decl.alloc)._field_Reference, ._field_TypeSym=_2088ec87b_buildType((*_13019_decl.alloc)._field_Kind), ._field_Ident=(*_13019_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_20881c7e0_Param>> _2088ede87_buildParams(jule::Slice<jule::Ptr<_208737b7d_ParamDecl>>* _14121_decls) {
	jule::Slice<jule::Ptr<_20881c7e0_Param>> _1426_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20881c7e0_Param>>::alloc(0LL, (*(_14121_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20881c7e0_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14121_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21922ac15:;
		if (it != expr_end) {
			jule::Ptr<_208737b7d_ParamDecl> _14314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20881c7e0_Param>> &__jule_push_dest = _1426_params; __jule_push_dest.push(_2088edaad_buildParam(_14314_decl)); };
			}
			_iter_next_21922ac15:;
			++it;
			goto _iter_begin_21922ac15;
		}
		_iter_end_21922ac15:;
	};
	return _1426_params;;
}



inline jule::Ptr<_20881c229_RetType> _2088ee1c9_buildRetType(jule::Ptr<_20872a236_RetTypeDecl> _14921_decl) {
	if ((((*(_14921_decl))._field_Idents == nullptr) && ((*_14921_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_20881c229_RetType>(_20881c229_RetType{._field_TypeSym=_2088ec87b_buildType((*(_14921_decl))._field_Kind), ._field_Idents=(*_14921_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_20881e2b4_Fn> _2088ee493_buildFunc(jule::Ptr<_2087390d0_FnDecl> _15918_decl) {
	return jule::new_ptr<_20881e2b4_Fn>(_20881e2b4_Fn{._field_sema=jule::Ptr<_20892a755_sema>(nullptr), ._field_Token=(*(_15918_decl))._field_Token, ._field_Global=(*_15918_decl.alloc)._field_Global, ._field_Unsafety=(*_15918_decl.alloc)._field_Unsafety, ._field_Public=(*_15918_decl.alloc)._field_Public, ._field_Binded=(*_15918_decl.alloc)._field_Binded, ._field_Statically=(*_15918_decl.alloc)._field_Statically, ._field_Exceptional=(*_15918_decl.alloc)._field_Exceptional, ._field_Ident=(*_15918_decl.alloc)._field_Ident, ._field_Directives=(*_15918_decl.alloc)._field_Directives, ._field_Scope=(*_15918_decl.alloc)._field_Scope, ._field_Generics=(*_15918_decl.alloc)._field_Generics, ._field_Result=_2088ee1c9_buildRetType((*_15918_decl.alloc)._field_Result), ._field_Params=_2088ede87_buildParams(&((*_15918_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_208746230_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_208822372_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_20881e2b4_Fn>> _2088ee75c_buildMethods(jule::Slice<jule::Ptr<_2087390d0_FnDecl>>* _17722_decls) {
	jule::Slice<jule::Ptr<_20881e2b4_Fn>> _1786_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20881e2b4_Fn>>::alloc(0LL, (*(_17722_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20881e2b4_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17722_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219230c2b:;
		if (it != expr_end) {
			jule::Ptr<_2087390d0_FnDecl> _17914_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20881e2b4_Fn>> &__jule_push_dest = _1786_methods; __jule_push_dest.push(_2088ee493_buildFunc(_17914_decl)); };
			}
			_iter_next_219230c2b:;
			++it;
			goto _iter_begin_219230c2b;
		}
		_iter_end_219230c2b:;
	};
	return _1786_methods;;
}



inline jule::Slice<jule::Ptr<_2089d7a65_TypeSym>> _2088eea26_buildTraitInherits(jule::Slice<jule::Ptr<_208727343_TypeDecl>>* _18528_inherits) {
	jule::Slice<jule::Ptr<_2089d7a65_TypeSym>> _1866_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2089d7a65_TypeSym>>::alloc(0LL, (*(_18528_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089d7a65_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18528_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192321c2:;
		if (it != expr_end) {
			jule::Ptr<_208727343_TypeDecl> _18714_it = *it;
			{
				{ jule::Slice<jule::Ptr<_2089d7a65_TypeSym>> &__jule_push_dest = _1866_symbols; __jule_push_dest.push(_2088ec87b_buildType(_18714_it)); };
			}
			_iter_next_2192321c2:;
			++it;
			goto _iter_begin_2192321c2;
		}
		_iter_end_2192321c2:;
	};
	return _1866_symbols;;
}



inline jule::Ptr<_2088299c8_Trait> _2088eece0_buildTrait(jule::Ptr<_20874376b_TraitDecl> _19319_decl) {
	return jule::new_ptr<_2088299c8_Trait>(_2088299c8_Trait{._field_Token=(*(_19319_decl))._field_Token, ._field_Ident=(*_19319_decl.alloc)._field_Ident, ._field_Public=(*_19319_decl.alloc)._field_Public, ._field_Inherits=_2088eea26_buildTraitInherits(&((*_19319_decl.alloc)._field_Inherits)), ._field_Methods=_2088ee75c_buildMethods(&((*_19319_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr)});;
}



inline jule::Ptr<_20882b623_EnumItem> _2089000a9_buildEnumItem(jule::Ptr<_208740823_EnumItemDecl> _20322_decl) {
	return jule::new_ptr<_20882b623_EnumItem>(_20882b623_EnumItem{._field_Token=(*(_20322_decl))._field_Token, ._field_Ident=(*_20322_decl.alloc)._field_Ident, ._field_Value=_2088ecb89_buildExpr((*_20322_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_20882b623_EnumItem>> _208900373_buildEnumItems(jule::Slice<jule::Ptr<_208740823_EnumItemDecl>>* _21124_decls) {
	jule::Slice<jule::Ptr<_20882b623_EnumItem>> _2126_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20882b623_EnumItem>>::alloc(0LL, (*(_21124_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20882b623_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21124_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192353c3:;
		if (it != expr_end) {
			jule::Ptr<_208740823_EnumItemDecl> _21314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20882b623_EnumItem>> &__jule_push_dest = _2126_items; __jule_push_dest.push(_2089000a9_buildEnumItem(_21314_decl)); };
			}
			_iter_next_2192353c3:;
			++it;
			goto _iter_begin_2192353c3;
		}
		_iter_end_2192353c3:;
	};
	return _2126_items;;
}



inline jule::Ptr<_20882c17e_Enum> _20890086d_buildEnum(jule::Ptr<_2087413d4_EnumDecl> _21918_decl) {
	return jule::new_ptr<_20882c17e_Enum>(_20882c17e_Enum{._field_Token=(*(_21918_decl))._field_Token, ._field_Public=(*_21918_decl.alloc)._field_Public, ._field_Ident=(*_21918_decl.alloc)._field_Ident, ._field_TypeSym=_2088ec87b_buildType((*_21918_decl.alloc)._field_Kind), ._field_Items=_208900373_buildEnumItems(&((*_21918_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_20882d2b2_TypeEnumItem> _208900a49_buildTypeEnumItem(jule::Ptr<_208741c0e_TypeEnumItemDecl> _22926_decl) {
	return jule::new_ptr<_20882d2b2_TypeEnumItem>(_20882d2b2_TypeEnumItem{._field_Token=(*(_22926_decl))._field_Token, ._field_Ident=(*_22926_decl.alloc)._field_Ident, ._field_TypeSym=_2088ec87b_buildType((*_22926_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> _208900ce1_buildTypeEnumItems(jule::Slice<jule::Ptr<_208741c0e_TypeEnumItemDecl>>* _23728_decls) {
	jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> _2386_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>>::alloc(0LL, (*(_23728_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20882d2b2_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23728_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192385c4:;
		if (it != expr_end) {
			jule::Ptr<_208741c0e_TypeEnumItemDecl> _23914_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20882d2b2_TypeEnumItem>> &__jule_push_dest = _2386_items; __jule_push_dest.push(_208900a49_buildTypeEnumItem(_23914_decl)); };
			}
			_iter_next_2192385c4:;
			++it;
			goto _iter_begin_2192385c4;
		}
		_iter_end_2192385c4:;
	};
	return _2386_items;;
}



inline jule::Ptr<_20882d889_TypeEnum> _2089010aa_buildTypeEnum(jule::Ptr<_20874236e_TypeEnumDecl> _24522_decl) {
	return jule::new_ptr<_20882d889_TypeEnum>(_20882d889_TypeEnum{._field_Token=(*(_24522_decl))._field_Token, ._field_Public=(*_24522_decl.alloc)._field_Public, ._field_Ident=(*_24522_decl.alloc)._field_Ident, ._field_Items=_208900ce1_buildTypeEnumItems(&((*_24522_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_20894d7de_Var> _208901374_buildVar(jule::Ptr<_20873a28a_VarDecl> _25417_decl) {
	return jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Token=(*(_25417_decl))._field_Token, ._field_Ident=(*_25417_decl.alloc)._field_Ident, ._field_Binded=(*_25417_decl.alloc)._field_Binded, ._field_Constant=(*_25417_decl.alloc)._field_Constant, ._field_Mutable=(*_25417_decl.alloc)._field_Mutable, ._field_Public=(*_25417_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25417_decl.alloc)._field_Statically, ._field_Reference=(*_25417_decl.alloc)._field_Reference, ._field_TypeSym=_2088ec87b_buildType((*_25417_decl.alloc)._field_Kind), ._field_Value=_2088ecb89_buildExpr((*_25417_decl.alloc)._field_Expr), ._field_Refers=static__2088eb32a_new(), ._field_Directives=(*_25417_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_20894d7de_Var>> _20890163d_buildVars(jule::Slice<jule::Ptr<_20873a28a_VarDecl>> _27118_decls) {
	jule::Slice<jule::Ptr<_20894d7de_Var>> _2726_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20894d7de_Var>>::alloc(0LL, _27118_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20894d7de_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27118_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21923cd7b:;
		if (it != expr_end) {
			jule::Ptr<_20873a28a_VarDecl> _27314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20894d7de_Var>> &__jule_push_dest = _2726_vars; __jule_push_dest.push(_208901374_buildVar(_27314_decl)); };
			}
			_iter_next_21923cd7b:;
			++it;
			goto _iter_begin_21923cd7b;
		}
		_iter_end_21923cd7b:;
	};
	return _2726_vars;;
}



inline jule::Ptr<_2088c7977_Impl> _208901907_buildImpl(jule::Ptr<_208743dcb_Impl> _27918_decl) {
	return jule::new_ptr<_2088c7977_Impl>(_2088c7977_Impl{._field_Base=(*(_27918_decl))._field_Base, ._field_Dest=(*_27918_decl.alloc)._field_Dest, ._field_Methods=_2088ee75c_buildMethods(&((*_27918_decl.alloc)._field_Methods)), ._field_Statics=_20890163d_buildVars((*_27918_decl.alloc)._field_Statics)});;
}



inline jule::Bool _208908227_isImplicitImport(jule::Ptr<_20890d040_ImportInfo> _79221_imp) {
	return ((*((*(_79221_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_2088255b7_SymTab> _20890a37d_findVarFileInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _4430_files, jule::Ptr<_20894d7de_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c3343:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _4514_f = *it;
			{
				if ((_208827b5d_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_2085c3343:;
			++it;
			goto _iter_begin_2085c3343;
		}
		_iter_end_2085c3343:;
	};
	return nullptr;;
}



inline jule::Ptr<_20894d7de_Var> _20890a801_findVarInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c45db:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _5614_f = *it;
			{
				jule::Ptr<_20894d7de_Var> _577_v = _208825ed0_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_2085c45db:;
			++it;
			goto _iter_begin_2085c45db;
		}
		_iter_end_2085c45db:;
	};
	return nullptr;;
}



inline jule::Ptr<_2089cd94b_TypeAlias> _20890ac30_findTypeAliasInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c4b4c:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _6814_f = *it;
			{
				jule::Ptr<_2089cd94b_TypeAlias> _697_ta = _2088263cb_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_2085c4b4c:;
			++it;
			goto _iter_begin_2085c4b4c;
		}
		_iter_end_2085c4b4c:;
	};
	return nullptr;;
}



inline jule::Ptr<_208746230_Struct> _20890b1d6_findStructInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c617b:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _8014_f = *it;
			{
				jule::Ptr<_208746230_Struct> _817_s = _2088267c7_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_2085c617b:;
			++it;
			goto _iter_begin_2085c617b;
		}
		_iter_end_2085c617b:;
	};
	return nullptr;;
}



inline jule::Ptr<_20881e2b4_Fn> _20890b5d2_findFnInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c76aa:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _9214_file = *it;
			{
				jule::Ptr<_20881e2b4_Fn> _937_f = _208826bc3_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_2085c76aa:;
			++it;
			goto _iter_begin_2085c76aa;
		}
		_iter_end_2085c76aa:;
	};
	return nullptr;;
}



inline jule::Ptr<_2088299c8_Trait> _20890b956_findTraitInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c89ec:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _10414_f = *it;
			{
				jule::Ptr<_2088299c8_Trait> _1057_t = _208827014_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_2085c89ec:;
			++it;
			goto _iter_begin_2085c89ec;
		}
		_iter_end_2085c89ec:;
	};
	return nullptr;;
}



inline jule::Ptr<_20882c17e_Enum> _20890bcca_findEnumInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085c9d1c:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _11614_f = *it;
			{
				jule::Ptr<_20882c17e_Enum> _1177_e = _208827355_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_2085c9d1c:;
			++it;
			goto _iter_begin_2085c9d1c;
		}
		_iter_end_2085c9d1c:;
	};
	return nullptr;;
}



inline jule::Ptr<_20882d889_TypeEnum> _20890c25e_findTypeEnumInPackage(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085cb170:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _12814_f = *it;
			{
				jule::Ptr<_20882d889_TypeEnum> _1297_e = _208827696_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_2085cb170:;
			++it;
			goto _iter_begin_2085cb170;
		}
		_iter_end_2085cb170:;
	};
	return nullptr;;
}



inline jule::Bool _208912c8c_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _220c5c157_HasPrefix((*(_33318_f)), _220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _220c6bce3_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _208927c4c_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2085da613:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_2085da9ed:;
			{
				jule::Ptr<_208816b19_StructSubIdentExpr> _207_model = (*(_1528_m)).cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				return (((*(_207_model))._field_Field != nullptr) && _208927c4c_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_2085daa64:;
			{
				jule::Ptr<_208812472_UnaryExpr> _237_unary = (*(_1528_m)).cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_2089d2c91_Ptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_2089d2a0a_Sptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _208927c4c_isValidModelForRef(&((*((*(_237_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_2085daaca:;
			{
				jule::Ptr<_208814908_IndexingExpr> _377_indexing = (*(_1528_m)).cast_ptr<_208814908_IndexingExpr>(&__jule_any_type43);;
				if ((_2089d3544_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _208927c4c_isValidModelForRef(&((*((*(_377_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_2085da59c:;
			{
				return false;;
			}
		}
		_match_end_2085da1a1:;
	};
}



inline _21e65b904_Log _20892827a_compilerErr(jule::Ptr<_208711827_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_21e65b904_Log _506_log = _21e65b904_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_21e65bd66_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_2087188b7_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _208928566_appendRetVars(jule::Slice<jule::Ptr<_20894d7de_Var>>* _6323_dest, jule::Ptr<_208822372_FnIns>* _6342_f) {
	if ((_20881e76a_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_2089ce661_Type>> _686_types = _2088235a4_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_6342_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085ea755:;
		if (it != expr_end) {
			jule::I64 _697_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _6914_ident = *it;
			{
				if ((_20871420e_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _2087144c8_IsAnonIdent((*(_6914_ident))._field_Kind))) {
					goto _iter_next_2085ea755;
				};
				{ jule::Slice<jule::Ptr<_20894d7de_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*(_6914_ident))._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)})); };
			}
			_iter_next_2085ea755:;
			++it;
			_697_i++;
			goto _iter_begin_2085ea755;
		}
		_iter_end_2085ea755:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _208928896_appendParamVars(jule::Slice<jule::Ptr<_20894d7de_Var>>* _9325_dest, jule::Ptr<_208822372_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085eee74:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> _9814_p = *it;
			{
				if ((_20871420e_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _2087144c8_IsAnonIdent((*((*(_9814_p))._field_Decl))._field_Ident))) {
					goto _iter_next_2085eee74;
				};
				jule::Ptr<_20894d7de_Var> _1037_v = jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*((*(_9814_p))._field_Decl))._field_Reference, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr)}), ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
				{
					
					if (_20881ce3e_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_208603ce1:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_20881d1c5_IsRef((*(_9814_p))._field_Decl)));
							if (_20881d1c5_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_2089dbe98_Sptr>(_2089dbe98_Sptr{._field_Elem=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_2086039c2:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dc96b_Slc>(_2089dc96b_Slc{._field_Elem=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*((*_9814_p.alloc)._field_Type))._field_Kind})}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_20860395b:;
						{
							(*(*(_1037_v))._field_TypeSym.alloc)._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_20860383a:;
				};
				{ jule::Slice<jule::Ptr<_20894d7de_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_2085eee74:;
			++it;
			goto _iter_begin_2085eee74;
		}
		_iter_end_2085eee74:;
	};
}



inline void _208928b82_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>* _15134_dest, jule::Ptr<_208822372_FnIns>* _15159_f) {
	jule::I64 _1526_size = (*((*(_15159_f))))._field_Generics.len();;
	if (((*((*((*(_15159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1526_size+=(*(*((*((*(_15159_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1526_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20860b4ad:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			jule::Ptr<_2089ccc7a_InsGeneric> _16114_g = *it;
			{
				if ((_16114_g == nullptr)) {
					goto _iter_next_20860b4ad;
				};
				jule::Ptr<_20873454d_GenericDecl> _1657_decl = (*((*((*(_15159_f))))._field_Decl))._field_Generics[_1617_i];;
				{ jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> &__jule_push_dest = (*(_15134_dest)); __jule_push_dest.push(jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=(*(*((*(_15159_f))))._field_Decl.alloc)._field_Scope, ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1657_decl.alloc)._field_Token, ._field_Ident=(*(_1657_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_16114_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)})); };
			}
			_iter_next_20860b4ad:;
			++it;
			_1617_i++;
			goto _iter_begin_20860b4ad;
		}
		_iter_end_20860b4ad:;
	};
	if (((*((*((*(_15159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_2087490bd_StructIns> _1777_owner = (*((*(_15159_f))))._field_Owner;;
		{
			auto expr = &((*(_1777_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20860d12a:;
			if (it != expr_end) {
				jule::I64 _1788_i = it - expr->begin();
				jule::Ptr<_2089ccc7a_InsGeneric> _17815_g = *it;
				{
					jule::Ptr<_20873454d_GenericDecl> _1798_decl = (*((*(_1777_owner))._field_Decl))._field_Generics[_1788_i];;
					{ jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>> &__jule_push_dest = (*(_15134_dest)); __jule_push_dest.push(jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=(*(*((*(_15159_f))))._field_Decl.alloc)._field_Scope, ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1798_decl.alloc)._field_Token, ._field_Ident=(*(_1798_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_17815_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)})); };
				}
				_iter_next_20860d12a:;
				++it;
				_1788_i++;
				goto _iter_begin_20860d12a;
			}
			_iter_end_20860d12a:;
		};
	};
}



inline jule::Ptr<_2088255b7_SymTab> _208929006_findFile(jule::Slice<jule::Ptr<_2088255b7_SymTab>>* _19218_files, jule::Ptr<_2087173cc_Fileset>* _19237_handler) {
	{
		auto expr = _19218_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20860d7bd:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _19314_fl = *it;
			{
				if (((*(_19314_fl))._field_File == (*(_19237_handler)))) {
					return _19314_fl;;
				};
			}
			_iter_next_20860d7bd:;
			++it;
			goto _iter_begin_20860d7bd;
		}
		_iter_end_20860d7bd:;
	};
	return nullptr;;
}



inline void _20892939c_pushSuggestion(_21e65b904_Log* _20130_log, jule::Str _20148_fmt, jule::Slice<jule::Any> _20168_args) {
	(*(_20130_log))._field_Suggestion=_21e65bd66_Logf(_20148_fmt, _20168_args);
}



inline void _20894b743_pushImplemented(jule::Ptr<_2088299c8_Trait> _277124_t, jule::Ptr<_208746230_Struct>* _277140_d) {
	_julec_label_208613e77:;
	{
		
		if (((*(_277124_t))._field_Implemented.len() > 0LL)) {
			_case_begin_208614c25:;
			{
				{
					auto expr = &((*_277124_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208615693:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> _277510_s = *it;
						{
							if ((_277510_s == (*(_277140_d)))) {
								goto _match_end_2086141ca;
							};
						}
						_iter_next_208615693:;
						++it;
						goto _iter_begin_208615693;
					}
					_iter_end_208615693:;
				};
				goto _case_begin_208614285;
			}
		}
		else {
			_case_begin_208614285:;
			{
				(*(_277124_t))._field_Implemented=jule::append((*_277124_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_208746230_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_277140_d)); __jule_collection; }));
			}
		}
		_match_end_2086141ca:;
	};
	{
		auto expr = &((*(_277124_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208615a5b:;
		if (it != expr_end) {
			jule::Ptr<_2089d7a65_TypeSym> _278414_i = *it;
			{
				_20894b743_pushImplemented(_2089d4314_Trait((*(_278414_i))._field_Type.ptr()), _277140_d);
			}
			_iter_next_208615a5b:;
			++it;
			goto _iter_begin_208615a5b;
		}
		_iter_end_208615a5b:;
	};
}



inline void _20894ba2e_pushImplements(jule::Ptr<_208746230_Struct>* _278924_s, jule::Ptr<_2088299c8_Trait> _278940_t) {
	_julec_label_208616551:;
	{
		
		if (((*((*(_278924_s))))._field_Implements.len() > 0LL)) {
			_case_begin_208617794:;
			{
				{
					auto expr = &((*((*(_278924_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208618212:;
					if (it != expr_end) {
						jule::Ptr<_2088299c8_Trait> _279310_b = *it;
						{
							if ((_279310_b == _278940_t)) {
								goto _match_end_208616c49;
							};
						}
						_iter_next_208618212:;
						++it;
						goto _iter_begin_208618212;
					}
					_iter_end_208618212:;
				};
				goto _case_begin_208616d04;
			}
		}
		else {
			_case_begin_208616d04:;
			{
				{ jule::Slice<jule::Ptr<_2088299c8_Trait>> &__jule_push_dest = (*((*(_278924_s))))._field_Implements; __jule_push_dest.push(_278940_t); };
			}
		}
		_match_end_208616c49:;
	};
	{
		auto expr = &((*(_278940_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2086185ca:;
		if (it != expr_end) {
			jule::Ptr<_2089d7a65_TypeSym> _280214_i = *it;
			{
				_20894ba2e_pushImplements(_278924_s, _2089d4314_Trait((*(_280214_i))._field_Type.ptr()));
			}
			_iter_next_2086185ca:;
			++it;
			goto _iter_begin_2086185ca;
		}
		_iter_end_2086185ca:;
	};
}



inline void _20894be80_pushRuntimeToStr(jule::Ptr<_20892a755_sema>* _280726_s, jule::Ptr<_2089ce661_Type>* _280741_t, jule::Ptr<_208711827_Token>* _280756_token, jule::Ptr<_2088eaeb7_ReferenceStack> _28086_refers) {
	if (((((*((*((*(_280726_s))))._field_meta))._field_runtime == nullptr) || _2089d07d8_IsNil((*(_280741_t)).ptr())) || (_28086_refers == nullptr))) {
		return;;
	};
	jule::Ptr<_208822372_FnIns> _28126_f = _2088207c1_instanceForce(_2083e3152_runtimeFindFn(&((*((*((*(_280726_s))))._field_meta))._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28126_f))._field_Generics=jule::append((*_28126_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_2089ccc7a_InsGeneric>(_2089ccc7a_InsGeneric{._field_Type=(*(_280741_t)), ._field_Constraint=jule::Slice<jule::Ptr<_2089ce661_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28142_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _208946243_checkGenericFn((*(_280726_s)), &(_28126_f), _280756_token);
		_28142_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28142_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2816:3"));;
	};
	_2088ebd20_Push(_28086_refers.ptr(), jule::Any(_28126_f, &__jule_any_type65));
}



inline jule::Bool _20894c249_isValidImpAlias(jule::Str _282324_alias) {
	jule::Bool __jule_func_result = false;
	if (_20871420e_IsIgnoreIdent(_282324_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_2087154c9_IsKeyword(_282324_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28306_r;
	jule::I64 _283013_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_282324_alias);
		_28306_r = __jule_assign_result.__jule_result_arg0;
		_283013_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28306_r != '_') && (!(_208715056_IsLetter(_28306_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_282324_alias).mut_slice(_283013_size);;
			if ((_282324_alias.len() == 0LL)) {
				goto _iter_end_20861e911;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21e42d7d6_DecodeRuneStr(_282324_alias);
				_28306_r = __jule_assign_result.__jule_result_arg0;
				_283013_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28306_r != '_') && (!((('0' <= _28306_r) && (_28306_r <= '9'))))) && (!(_208715056_IsLetter(_28306_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_20861e911:;
	}
	_iter_end_20861e911:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2089854e6_traitHasReferenceReceiver(jule::Ptr<_2088299c8_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21942de18:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_21942de18;
				};
				jule::Ptr<_20881c7e0_Param> _233_p = (*((*(_179_f))))._field_Params[0LL];;
				if ((_20881d1c5_IsRef(_233_p.ptr()) && _20881ce3e_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_21942de18:;
			++it;
			goto _iter_begin_21942de18;
		}
		_iter_end_21942de18:;
	};
	return false;;
}



inline jule::Bool _2089858ae_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_20899a9a1_Data>* _3133_d) {
	jule::Str _322_value = _21ec87a79_FmtFloat(_208808402_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _208896072_CheckBitFloat(_322_value, _208894acb_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _208985c33_sigAssignable(jule::Str _3618_kind, jule::Ptr<_20899a9a1_Data>* _3630_d) {
	jule::F64 _372_min = _20889b1ba_Min(_3618_kind);;
	jule::F64 _382_max = _20889b451_Max(_3618_kind);;
	{
		
		if (_20880a24a_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_219432988:;
			{
				jule::F64 _413_x = _208807b4e_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _21ec5d687_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_208809997_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_2194329ee:;
			{
				jule::F64 _483_x = _208808402_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_208809711_IsI64((*((*(_3630_d))))._field_Constant)) {
			_case_begin_219432a76:;
			{
				jule::F64 _533_x = _208808402_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_219432867:;
	};
	return false;;
}



inline jule::Bool _2089860eb_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_20899a9a1_Data>* _5932_d) {
	jule::F64 _602_max = _20889b451_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _208982180_IsAscii(static_cast<jule::I32>(_208807115_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_20880a24a_IsF64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_2194386c5:;
			{
				jule::F64 _673_x = _208807b4e_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _21ec5d687_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_208809997_IsU64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_21943873b:;
			{
				jule::F64 _773_x = _208808402_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_208809711_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_2194387a2:;
			{
				jule::F64 _823_x = _208808402_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_219437729:;
	};
	return false;;
}



inline jule::Bool _208986470_intAssignable(jule::Str _8818_kind, jule::Ptr<_20899a9a1_Data>* _8830_d) {
	{
		
		if (_20889c573_IsSigInt(_8818_kind)) {
			_case_begin_21943d301:;
			{
				return _208985c33_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_20889c881_IsUnsigInt(_8818_kind)) {
			_case_begin_21943d378:;
			{
				return _2089860eb_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_21943cd6c:;
			{
				return false;;
			}
		}
		_match_end_21943cc90:;
	};
}



inline void _208992965_checkMutRiskOfStructLit(jule::Ptr<_20892a755_sema>* _93833_s, jule::Ptr<_208812d46_StructLitExpr>* _93844_m) {
	{
		auto expr = &((*((*(_93844_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21943e478:;
		if (it != expr_end) {
			jule::Ptr<_2088129a0_StructArgExpr> *_9399_arg = it;
			{
				if ((*((*((*((*(_9399_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_21943e478;
				};
				if (((!((*((*((*(_9399_arg))))._field_Expr))._field_Mutable)) && _2089d19a4_Mutable((*(*((*(_9399_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_20892d659_pushErr((*(_93833_s)).ptr(), (*(*(_9399_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*((*(_9399_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_21943e478:;
			++it;
			goto _iter_begin_21943e478;
		}
		_iter_end_21943e478:;
	};
}



inline jule::Ptr<_2089ce661_Type> _208998b69_lenKind(void) {
	return _208a548d4_primInt;;
}



inline jule::Bool _208998ebb_isGoodValueToInfer(jule::Ptr<_20899a9a1_Data>* _143224_d) {
	return (!(_20899adbe_IsNil((*(_143224_d)).ptr())));;
}



inline jule::Ptr<_208726760_Directive> _2089c5dd8_findDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _439523_directives, jule::Str _439554_d) {
	{
		auto expr = _439523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2195925ed:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _439614_dr = *it;
			{
				if (((*((*(_439614_dr))._field_Tag))._field_Kind == _439554_d)) {
					return _439614_dr;;
				};
			}
			_iter_next_2195925ed:;
			++it;
			goto _iter_begin_2195925ed;
		}
		_iter_end_2195925ed:;
	};
	return nullptr;;
}



inline jule::Any _2089c62a1_findBuiltinsImport(jule::Str* _440424_ident, jule::Ptr<_20890d040_ImportInfo> _440436_imp) {
	return _208a57c28_findPackageBuiltinDef(&((*(_440436_imp))._field_LinkPath), _440424_ident);;
}



inline void _2089c64d2_fitBitsize(jule::Ptr<_20899a9a1_Data>* _441320_d) {
	jule::Ptr<_2089d846c_Prim> _44146_prim = _2089d2774_Prim((*((*(_441320_d))))._field_Type.ptr());;
	jule::I64 _44152_z = _208894acb_BitSizeOf(_2089d87e1_Str(_44146_prim.ptr()));;
	{
		
		if (_208809711_IsI64((*((*(_441320_d))))._field_Constant.ptr())) {
			_case_begin_219594d4d:;
			{
				jule::I64 _44183_k = _208896605_BitSizeOfInt(_208807115_ReadI64((*((*(_441320_d))))._field_Constant));;
				if (((_44183_k > _44152_z) || _20889c881_IsUnsigInt((*_44146_prim.alloc)._field_Kind))) {
					(*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind=_208894e1c_IntFromBits(_44183_k);
					(*((*(_441320_d))))._field_Type=(*((*(_208a56c38_findBuiltinTypeAlias((*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_208809997_IsU64((*((*(_441320_d))))._field_Constant.ptr())) {
			_case_begin_219594db4:;
			{
				jule::I64 _44243_k = _2088968be_BitSizeOfUint(_20880739b_ReadU64((*((*(_441320_d))))._field_Constant));;
				if (((_44243_k > _44152_z) || _20889c573_IsSigInt((*_44146_prim.alloc)._field_Kind))) {
					(*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind=_2088951a3_UintFromBits(_44243_k);
					(*((*(_441320_d))))._field_Type=(*((*(_208a56c38_findBuiltinTypeAlias((*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_20880a24a_IsF64((*((*(_441320_d))))._field_Constant)) {
			_case_begin_219594e3b:;
			{
				if ((_44152_z == 64LLU)) {
					return;;
				};
				jule::I64 _44343_k = _20889633b_BitSizeOfFloat(_208807b4e_ReadF64((*((*(_441320_d))))._field_Constant));;
				if ((_44343_k > _44152_z)) {
					(*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind=_20889546c_FloatFromBits(_44343_k);
					(*((*(_441320_d))))._field_Type=(*((*(_208a56c38_findBuiltinTypeAlias((*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_219594c0a:;
	};
}



inline void _2089c6812_makeStructLitAlloc(jule::Ptr<_20899a9a1_Data>* _444228_d, jule::Ptr<_208812d46_StructLitExpr>* _444243_lit) {
	(*((*(_444228_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dbe98_Sptr>(_2089dbe98_Sptr{._field_Elem=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_444243_lit))))._field_Strct, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)})}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)});
	(*((*(_444228_d))))._field_Model=jule::Any(jule::new_ptr<_208813143_AllocStructLitExpr>(_208813143_AllocStructLitExpr{._field_Lit=(*(_444243_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_20894d7de_Var> _2089c6b86_buildErrorVar(jule::Ptr<_2088ca969_Scope>* _445323_s, jule::Ptr<_2087303a1_FnCallExpr>* _445339_fc) {
	return jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=(*(_445323_s)), ._field_Token=(*((*(_445339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
}



inline jule::Any _2089c700a_findBuiltinsSema(jule::Str* _446822_ident, jule::Ptr<_20892a755_sema> _446838_s) {
	jule::Str _44706_ppath = _208718059_Dir((*((*(_446838_s))._field_file))._field_File.ptr());;
	if (_220c5c157_HasPrefix(_44706_ppath, _220c6bce3_PathStdlib)) {
		(_44706_ppath).mut_slice(_220c6bce3_PathStdlib.len());;
		_44706_ppath=(jule::Str::lit("std", 3) + _220c632a1_ReplaceAll(_44706_ppath, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		return _208a57c28_findPackageBuiltinDef(&(_44706_ppath), _446822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _2089c72c4_isOkForShifting(jule::Ptr<_20899a9a1_Data>* _448325_d) {
	if (_20899b3db_IsConst((*(_448325_d)).ptr())) {
		{
			
			if (_208809711_IsI64((*((*(_448325_d))))._field_Constant.ptr())) {
				_case_begin_2195a5897:;
				{
					return (_208807115_ReadI64((*((*(_448325_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_208809997_IsU64((*((*(_448325_d))))._field_Constant.ptr())) {
				_case_begin_2195a4566:;
				{
					return true;;
				}
			}
			else if (_20880a24a_IsF64((*((*(_448325_d))))._field_Constant)) {
				_case_begin_2195a45cc:;
				{
					return (_208807b4e_ReadF64((*((*(_448325_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_2195a44cd:;
				{
					return false;;
				}
			}
			_match_end_2195a4401:;
		};
	};
	jule::Ptr<_2089d846c_Prim> _44962_prim = _2089d2774_Prim((*((*(_448325_d))))._field_Type.ptr());;
	return ((_44962_prim != nullptr) && _20889cb4a_IsInt(_2089d87e1_Str(_44962_prim.ptr())));;
}



inline jule::Bool _2089c769d_isInstancedStruct(jule::Ptr<_2087490bd_StructIns> _450022_s) {
	return ((*((*(_450022_s))._field_Decl))._field_Generics.len() == (*_450022_s.alloc)._field_Generics.len());;
}



inline jule::Bool _2089c799a_isPtrArithmeticCompatible(jule::Ptr<_20899a9a1_Data>* _450435_l, jule::Ptr<_20899a9a1_Data>* _450450_r) {
	jule::Ptr<_2089e0760_Ptr> _45052_ptr = _2089d2c91_Ptr((*((*(_450450_r))))._field_Type.ptr());;
	if ((_45052_ptr != nullptr)) {
		return _2089ced9d_Equal((*(_2089d2c91_Ptr((*((*(_450435_l))))._field_Type)))._field_Elem, (*_45052_ptr.alloc)._field_Elem);;
	};
	if ((_20899b3db_IsConst((*(_450450_r)).ptr()) && (*((*(_450450_r))))._field_untyped)) {
		return (_208986470_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _450450_r) || _208986470_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _450450_r));;
	};
	_208986959_typeCompatibilityChecker _45146_tcc = _208986959_typeCompatibilityChecker{._field_s=jule::Ptr<_20892a755_sema>(nullptr), ._field_dest=_208a548d4_primInt, ._field_src=(*((*(_450450_r))))._field_Type, ._field_errorToken=jule::Ptr<_208711827_Token>(nullptr)};;
	if (_208988153_check(&_45146_tcc)) {
		return true;;
	};
	_45146_tcc._field_dest=_208a5451b_primUint;
	return _208988153_check(&_45146_tcc);;
}



inline void _2089c7ea6_applyRuntimeToStr(jule::Ptr<_20892a755_sema>* _452527_s, jule::Ptr<_2089ce661_Type>* _452542_from, jule::Ptr<_2089ce661_Type>* _452560_to, jule::Ptr<_208711827_Token>* _45267_token, jule::Ptr<_2088eaeb7_ReferenceStack> _452633_refers) {
	jule::Ptr<_2089d846c_Prim> _45272_prim = _2089d2774_Prim((*(_452560_to)).ptr());;
	if ((_45272_prim != nullptr)) {
		if (_2089dbbbd_IsAny(_45272_prim)) {
			_20894be80_pushRuntimeToStr(_452527_s, _452542_from, _45267_token, _452633_refers);
		};
		return;;
	};
	if ((_2089d32ad_TypeEnum((*(_452560_to)).ptr()) != nullptr)) {
		_20894be80_pushRuntimeToStr(_452527_s, _452542_from, _45267_token, _452633_refers);
		return;;
	};
}



inline void _2089c84b2_applyCastKindModel(jule::Ptr<_20892a755_sema>* _454028_s, jule::Ptr<_20899a9a1_Data>* _454043_d, jule::Ptr<_2089ce661_Type>* _454058_t, jule::Ptr<_208711827_Token>* _45417_token, jule::Ptr<_2088eaeb7_ReferenceStack> _454133_refers) {
	_2089c7ea6_applyRuntimeToStr(_454028_s, &((*((*(_454043_d))))._field_Type), _454058_t, _45417_token, _454133_refers);
	(*((*(_454043_d))))._field_Model=jule::Any(jule::new_ptr<_2088136c6_CastingExpr>(_2088136c6_CastingExpr{._field_Token=(*(_45417_token)), ._field_Expr=jule::new_ptr<_20899a9a1_Data>((*((*(_454043_d))))), ._field_Type=(*(_454058_t)), ._field_ExprType=(*((*(_454043_d))))._field_Type}), &__jule_any_type94);
}



inline void _2089c89bd_applyCastKind(jule::Ptr<_20892a755_sema>* _455123_s, jule::Ptr<_20899a9a1_Data>* _455138_d, jule::Ptr<_2089ce661_Type>* _455153_t, jule::Ptr<_208711827_Token>* _45527_token, jule::Ptr<_2088eaeb7_ReferenceStack> _455233_refers) {
	_2089c84b2_applyCastKindModel(_455123_s, _455138_d, _455153_t, _45527_token, _455233_refers);
	(*((*(_455138_d))))._field_Type=(*(_455153_t));
}



inline jule::Ptr<_20899a9a1_Data> _2089c8bcc_buildVoidData(void) {
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a5364c_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Str _2089c91b6_checkDataForIntegerIndexing(jule::Ptr<_20892a755_sema>* _456337_s, jule::Ptr<_20899a9a1_Data>* _456352_d, jule::Ptr<_208711827_Token>* _45647_token, jule::Ptr<_2088eaeb7_ReferenceStack> _456433_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_456352_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_2089d2774_Prim((*((*(_456352_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_2195b53e0:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_20889cb4a_IsInt(_2089d87e1_Str(_2089d2774_Prim((*((*(_456352_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_2195b5456:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_20899b3db_IsConst((*(_456352_d)).ptr())) {
			_case_begin_2195b54bc:;
			{
				if ((_208808402_AsF64((*((*(_456352_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_2089d2774_Prim((*((*(_456352_d))))._field_Type) == nullptr) || _20899b3db_IsConst((*(_456352_d)).ptr()) || (_208894812_RealKindOf(_2089d87e1_Str(_2089d2774_Prim((*((*(_456352_d))))._field_Type).ptr())) != _208894812_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_2195b5533:;
			{
				_2089c89bd_applyCastKind(_456337_s, _456352_d, &(_208a548d4_primInt), _45647_token, _456433_refers);
			}
		}
		_match_end_2195b4eb1:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _2089c96c2_applyCastModelByEnum(jule::Ptr<_20892a755_sema>* _458930_s, jule::Ptr<_20899a9a1_Data>* _458945_d, jule::Ptr<_20882c17e_Enum> _458959_e, jule::Ptr<_208711827_Token>* _45907_token, jule::Ptr<_2088eaeb7_ReferenceStack> _459033_refers) {
	if ((_458959_e == nullptr)) {
		return;;
	};
	_2089c84b2_applyCastKindModel(_458930_s, _458945_d, &((*((*(_458959_e))._field_TypeSym))._field_Type), _45907_token, _459033_refers);
}



inline void _2089c9bde_castConstByType(jule::Str* _459721_t, jule::Ptr<_20899a9a1_Data>* _459734_d) {
	{
		
		if (_20889c573_IsSigInt((*(_459721_t)))) {
			_case_begin_2195bc293:;
			{
				{
					auto _match_expr{ _208894acb_BitSizeOf(_208894812_RealKindOf((*(_459721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2195bcd65:;
						{
							_2088086aa_SetI64((*((*(_459734_d))))._field_Constant.ptr(), _208807dd5_AsI64((*((*(_459734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2195bcded:;
						{
							_2088086aa_SetI64((*((*(_459734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_208807dd5_AsI64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_2195bce64:;
						{
							_2088086aa_SetI64((*((*(_459734_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I16>(_208807dd5_AsI64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_2195bceca:;
						{
							_2088086aa_SetI64((*((*(_459734_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I8>(_208807dd5_AsI64((*((*(_459734_d))))._field_Constant))));
						}
					}
					_match_end_2195bccee:;
				};
			}
		}
		else if (_20889c881_IsUnsigInt((*(_459721_t)))) {
			_case_begin_2195bc33c:;
			{
				{
					auto _match_expr{ _208894acb_BitSizeOf(_208894812_RealKindOf((*(_459721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2195c1e46:;
						{
							_208808963_SetU64((*((*(_459734_d))))._field_Constant.ptr(), _20880816b_AsU64((*((*(_459734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2195c1ebd:;
						{
							_208808963_SetU64((*((*(_459734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_20880816b_AsU64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_2195c2034:;
						{
							_208808963_SetU64((*((*(_459734_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U16>(_20880816b_AsU64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_2195c209a:;
						{
							_208808963_SetU64((*((*(_459734_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U8>(_20880816b_AsU64((*((*(_459734_d))))._field_Constant))));
						}
					}
					_match_end_2195c1dd0:;
				};
			}
		}
		else if (_20889ce8b_IsFloat((*(_459721_t)))) {
			_case_begin_2195bc3a3:;
			{
				{
					auto _match_expr{ _208894acb_BitSizeOf(_208894812_RealKindOf((*(_459721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2195c508c:;
						{
							_20880927c_SetF64((*((*(_459734_d))))._field_Constant, _208808402_AsF64((*((*(_459734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2195c6038:;
						{
							_20880927c_SetF64((*((*(_459734_d))))._field_Constant, static_cast<jule::F64>(static_cast<jule::F32>(_208808402_AsF64((*((*(_459734_d))))._field_Constant))));
						}
					}
					_match_end_2195c2650:;
				};
			}
		}
		_match_end_2195bc12d:;
	};
}



inline void _2089c9dba_updateModelToGenericIns(jule::Any* _463133_m, jule::Ptr<_208822372_FnIns>* _463147_f) {
	{
		auto &_match_expr{ (*(_463133_m)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2195c64ab:;
			{
				(*(_463133_m))=jule::Any((*(_463147_f)), &__jule_any_type65);
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_2195bd481:;
			{
				(*((*(_463133_m)).cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99)))._field_Method=(*(_463147_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2195c6522:;
			{
				(*((*(_463133_m)).cast_ptr<_208816eb0_StructStaticIdentExpr>(&__jule_any_type97)))._field_Method=(*(_463147_f));
			}
		}
		_match_end_2195bd56e:;
	};
}



inline jule::Bool _2089ca23e_pushSubIdentFromExpr(jule::Any _464229_expr, jule::Ptr<_208727c17_SubIdentTypeDecl>* _464255_t) {
	{
		auto &_match_expr{ _464229_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2195cb2c4:;
			{
				jule::Ptr<_20872ce92_IdentExpr> _46457_e = _464229_expr.unsafe_cast_ptr<_20872ce92_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>> &__jule_push_dest = (*((*(_464255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*(_46457_e))._field_Token, ._field_Ident=(*_46457_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2195cb33a:;
			{
				jule::Ptr<_20872e78a_SubIdentExpr> _46517_e = _464229_expr.unsafe_cast_ptr<_20872e78a_SubIdentExpr>();;
				if ((!(_2089ca23e_pushSubIdentFromExpr((*((*(_46517_e))._field_Expr))._field_Kind, _464255_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_20872794d_IdentTypeDecl>> &__jule_push_dest = (*((*(_464255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_20872794d_IdentTypeDecl>(_20872794d_IdentTypeDecl{._field_Token=(*(_46517_e))._field_Ident, ._field_Ident=(*((*_46517_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_208727343_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_2195ce12e:;
			{
				return false;;
			}
		}
		_match_end_2195ce0b8:;
	};
	return true;;
}



inline jule::Str _2089ca508_constoa(jule::Ptr<_208799195_Const>* _466513_c) {
	{
		
		if (_208809711_IsI64((*(_466513_c)).ptr())) {
			_case_begin_2195cc3d5:;
			{
				return _21ec9e343_FmtInt(_208807115_ReadI64((*(_466513_c)).ptr()), 10LL);;
			}
		}
		else if (_208809997_IsU64((*(_466513_c)).ptr())) {
			_case_begin_2195d151b:;
			{
				return _21ec9de7a_FmtUint(_20880739b_ReadU64((*(_466513_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_2195d1b48:;
			{
				return jule::Str();;
			}
		}
		_match_end_2195d1a7c:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _2089caa9c_evalEnumStatic(jule::Ptr<_20892a755_sema>* _467624_s, jule::Ptr<_20882c17e_Enum>* _467639_enm, jule::Ptr<_20882b623_EnumItem>* _467656_item, jule::Ptr<_208711827_Token>* _46777_token, jule::Ptr<_2088eaeb7_ReferenceStack> _467733_refers) {
	jule::Ptr<_20899a9a1_Data> _46786_d = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_467639_enm)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	if (((*(_467656_item)) != nullptr)) {
		(*(_46786_d))._field_Constant=jule::new_ptr<_208799195_Const>((*(*((*((*((*(_467656_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46786_d.alloc)._field_Model=jule::Any((*_46786_d.alloc)._field_Constant, &__jule_any_type15);
		_2089c96c2_applyCastModelByEnum(_467624_s, &(_46786_d), (*(_467639_enm)), _46777_token, _467733_refers);
	};
	return _46786_d;;
}



inline jule::Ptr<_208812d46_StructLitExpr> _2089cad66_isLitBased(jule::Any* _469420_m) {
	{
		auto &_match_expr{ (*(_469420_m)) };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_2195d7368:;
			{
				return (*(_469420_m)).cast_ptr<_208812d46_StructLitExpr>(&__jule_any_type96);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_2195d7775:;
			{
				return (*((*(_469420_m)).cast_ptr<_208813143_AllocStructLitExpr>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_2195d77db:;
			{
				jule::Ptr<_208816b19_StructSubIdentExpr> _47017_ssi = (*(_469420_m)).cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				return _2089cad66_isLitBased(&((*((*(_47017_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_2195d7852:;
			{
				jule::Ptr<_2088136c6_CastingExpr> _47047_c = (*(_469420_m)).cast_ptr<_2088136c6_CastingExpr>(&__jule_any_type94);;
				return _2089cad66_isLitBased(&((*((*(_47047_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_2195d7302:;
			{
				return nullptr;;
			}
		}
		_match_end_2195d728b:;
	};
}



inline void _2089cb152_makeImplicitDeref(jule::Ptr<_20899a9a1_Data>* _471127_d, jule::Ptr<_208711827_Token> _471141_baseToken) {
	jule::Ptr<_208812472_UnaryExpr> _47126_unary = jule::new_ptr<_208812472_UnaryExpr>(_208812472_UnaryExpr{._field_Expr=jule::new_ptr<_20899a9a1_Data>((*((*(_471127_d))))), ._field_Op=jule::new_ptr<_208711827_Token>((*(_471141_baseToken)))});;
	(*((*(_47126_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_47126_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_471127_d))))._field_Model=jule::Any(_47126_unary, &__jule_any_type112);
}



inline void _2197aaa8b_updateRefer(jule::Ptr<_2088eaeb7_ReferenceStack> _472223_ref, jule::Ptr<_208822372_FnIns>* _472246_old, jule::Ptr<_208822372_FnIns>* _472259_new) {
	{
		auto expr = &((*(_472223_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2197ac3c8:;
		if (it != expr_end) {
			jule::I64 _47236_i = it - expr->begin();
			jule::Any _47239_sym = *it;
			{
				if ((jule::Any((*(_472246_old)), &__jule_any_type65) == _47239_sym)) {
					(*(_472223_ref))._field_buffer[_47236_i]=jule::Any((*(_472259_new)), &__jule_any_type65);
				};
			}
			_iter_next_2197ac3c8:;
			++it;
			_47236_i++;
			goto _iter_begin_2197ac3c8;
		}
		_iter_end_2197ac3c8:;
	};
}



inline void _2089cb7d4_makeVariadic(jule::Ptr<_20899a9a1_Data>* _473022_d, jule::Ptr<_2089ce661_Type> _473036_elem) {
	(*((*(_473022_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=(*(_473036_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_473036_elem.alloc)._field_Kind});
}



inline jule::Bool _2089cbc13_isVarCaptured(jule::Ptr<_2088d3169_scopeChecker> _474318_r, jule::Ptr<_2088d3169_scopeChecker> _474340_s, jule::Ptr<_20894d7de_Var> _474358_v) {
	if (((*(_474358_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_474340_s))._field_scope == (*(_474358_v))._field_Scope)) {
				return false;;
			};
			if ((((*(_474340_s))._field_parent == nullptr) || (_474340_s == _474318_r))) {
				goto _iter_end_2195e1086;
			};
			_474340_s=(*(_474340_s))._field_parent;
		}
	_iter_next_2195e1086:;
	}
	_iter_end_2195e1086:;;
	return true;;
}



inline jule::Ptr<_20890d040_ImportInfo> _2089cc087_findNamespace(jule::Trait _476022_lookup, jule::Str _476038_namespace) {
	return ((_208a0052d_LookupMptrData*)_476022_lookup.safe_type())->_2089ed817_SelectPackage(_476022_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_20890d040_ImportInfo>>((void*)__jule_anon_2195e2e56, jule::Ptr<__jule_anon_2195e2e56_ctx>::make(__jule_anon_2195e2e56_ctx{._476038_namespace=_476038_namespace}).as<jule::Uintptr>(), __jule_anon_2195e2e56_ctx_handler));;
}



inline jule::Bool _2089eb507_kindUsesGenerics(jule::Ptr<_2089ce661_Type>* _178826_k, jule::Slice<jule::Ptr<_20873454d_GenericDecl>>* _178837_generics) {
	{
		auto expr = _178837_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219a98d9b:;
		if (it != expr_end) {
			jule::Ptr<_20873454d_GenericDecl> *_17899_g = it;
			{
				if (static__2089eb10b_exist(&((*((*(_17899_g))))._field_Ident), _178826_k)) {
					return true;;
				};
			}
			_iter_next_219a98d9b:;
			++it;
			goto _iter_begin_219a98d9b;
		}
		_iter_end_219a98d9b:;
	};
	return false;;
}



inline jule::Bool _2089eb8c0_hasDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _179822_directives, jule::Str _179853_tag) {
	{
		auto expr = _179822_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219a99462:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _179914_dr = *it;
			{
				if (((*((*(_179914_dr))._field_Tag))._field_Kind == _179853_tag)) {
					return true;;
				};
			}
			_iter_next_219a99462:;
			++it;
			goto _iter_begin_219a99462;
		}
		_iter_end_219a99462:;
	};
	return false;;
}



inline jule::Bool _2089ebb89_canGetPtr(jule::Ptr<_20899a9a1_Data>* _180719_d) {
	return (*((*(_180719_d))))._field_Lvalue;;
}



inline jule::Bool _2089ebeca_isBuiltinStrConvertable(jule::Ptr<_2089ce661_Type>* _181033_t) {
	return ((((!(_2089d0a6e_Void((*(_181033_t)).ptr()))) && (_2089d3a61_Fn((*(_181033_t)).ptr()) == nullptr)) && (_2089d4831_Tup((*(_181033_t)).ptr()) == nullptr)) && (!(_2089d4ab7_comptime((*(_181033_t)).ptr()))));;
}



inline jule::Ptr<_2089d846c_Prim> _2089ec261_buildPrimType(jule::Str _181418_kind) {
	return jule::new_ptr<_2089d846c_Prim>(_2089d846c_Prim{._field_Kind=_181418_kind});;
}



inline void _2089eca36_applyImplicitCast(jule::Ptr<_20892a755_sema>* _184227_s, jule::Ptr<_2089ce661_Type>* _184242_dest, jule::Ptr<_20899a9a1_Data>* _184260_d, jule::Ptr<_208711827_Token>* _18437_token, jule::Ptr<_2088eaeb7_ReferenceStack> _184333_refers) {
	if (_2089d07d8_IsNil((*((*(_184260_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_2089d846c_Prim> _18472_destPrim = _2089d2774_Prim((*(_184242_dest)).ptr());;
	if (((_18472_destPrim != nullptr) && _2089dbbbd_IsAny(_18472_destPrim))) {
		jule::Ptr<_2089d846c_Prim> _18493_prim = _2089d2774_Prim((*((*(_184260_d))))._field_Type.ptr());;
		if (((_18493_prim == nullptr) || (!(_2089dbbbd_IsAny(_18493_prim.ptr()))))) {
			_2089c89bd_applyCastKind(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
		};
		return;;
	};
	jule::Ptr<_2088299c8_Trait> _18562_dt = _2089d4314_Trait((*(_184242_dest)).ptr());;
	if ((_18562_dt != nullptr)) {
		jule::Ptr<_2088299c8_Trait> _18583_bt = _2089d4314_Trait((*((*(_184260_d))))._field_Type.ptr());;
		if (((_18583_bt == nullptr) || (_18583_bt != _18562_dt))) {
			_2089c84b2_applyCastKindModel(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
			return;;
		};
	};
	if (((_2089d32ad_TypeEnum((*(_184242_dest)).ptr()) != nullptr) && (_2089d32ad_TypeEnum((*((*(_184260_d))))._field_Type.ptr()) == nullptr))) {
		_2089c84b2_applyCastKindModel(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
		return;;
	};
}



inline jule::Bool _2089ece10_validTypeForXof(jule::Ptr<_2089ce661_Type>* _187225_t) {
	return ((((!(_2089d0a6e_Void((*(_187225_t)).ptr()))) && (_2089d3a61_Fn((*(_187225_t)).ptr()) == nullptr)) && (_2089d4831_Tup((*(_187225_t)).ptr()) == nullptr)) && (!(_2089d4ab7_comptime((*(_187225_t)).ptr()))));;
}



inline jule::Ptr<_2087490bd_StructIns> _2089ed20c_initNewStructType(jule::Str _187822_ident, jule::Ptr<_2089ce661_Type> _187838_source) {
	jule::Ptr<_208746230_Struct> _18796_s = jule::new_ptr<_208746230_Struct>(_208746230_Struct{._field_sema=jule::Ptr<_20892a755_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_208746230_Struct>>(nullptr), ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_208744e10_Field>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_20881e2b4_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_20873454d_GenericDecl>>(nullptr), ._field_Implements=jule::Slice<jule::Ptr<_2088299c8_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_2087490bd_StructIns>>(nullptr)});;
	(*_18796_s.alloc)._field_Ident=_187822_ident;
	jule::Ptr<_2087490bd_StructIns> _18816_ins = _20874664d_instance(_18796_s);;
	_20874698e_appendInstance(_18796_s, &(_18816_ins));
	(*(_18816_ins))._field_Source=_187838_source;
	(*_18816_ins.alloc)._field_Comparable=_2089d171d_Comparable(_187838_source.ptr());
	(*_18816_ins.alloc)._field_Mutable=_2089d19a4_Mutable(_187838_source);
	return _18816_ins;;
}



inline __jule_tuple_x_2088255b7_SymTab__jule_tuple_s_21e65b904_Log _208a01210_buildSymbols(jule::Ptr<_2087253da_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_208901ebd_symBuilder> _1667_owner) {
	__jule_tuple_x_2088255b7_SymTab__jule_tuple_s_21e65b904_Log __jule_func_result;
	jule::Ptr<_208901ebd_symBuilder> _176_sb = jule::new_ptr<_208901ebd_symBuilder>(_208901ebd_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_21e65b904_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_2088255b7_SymTab>(nullptr)});;
	_208907d5e_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _208a01540_collectImplicitImports(jule::Ptr<_20892a755_sema>* _3132_s, jule::Ptr<_2088255b7_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219bd3700:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _3214_imp = *it;
			{
				if ((!(_208908227_isImplicitImport(_3214_imp)))) {
					goto _iter_end_219bd3700;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_219bd4965:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_219bd4008:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_219bd459c:;
				};
			}
			_iter_next_219bd3700:;
			++it;
			goto _iter_begin_219bd3700;
		}
		_iter_end_219bd3700:;
	};
}



inline __jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log _208a0196e_analyzePackage(jule::Slice<jule::Ptr<_2087253da_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags) {
	__jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2088255b7_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2088255b7_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088255b7_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219bd5a98:;
		if (it != expr_end) {
			jule::Ptr<_2087253da_AST> _4814_f = *it;
			{
				jule::Ptr<_2088255b7_SymTab> _497_table;
				jule::Slice<_21e65b904_Log> _4918_errors;
				({
					__jule_tuple_x_2088255b7_SymTab__jule_tuple_s_21e65b904_Log __jule_assign_result = _208a01210_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_2088255b7_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_219bd5a98:;
			++it;
			goto _iter_begin_219bd5a98;
		}
		_iter_end_219bd5a98:;
	};
	jule::Ptr<_20892a755_sema> _566_sema = jule::new_ptr<_20892a755_sema>(_20892a755_sema{._field_errors=jule::Slice<_21e65b904_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_2088255b7_SymTab>>(nullptr), ._field_file=jule::Ptr<_2088255b7_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_208929765_commonSemaMeta>(_208929765_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_2088ae596_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_20890d040_ImportInfo>(nullptr)}), ._field_step=0LL});;
	jule::Ptr<_2088255b7_SymTab> _636_firstTable = _476_tables[0LL];;
	_208a01540_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_20894990b_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_2089107b2_Package> _716_pkg = jule::new_ptr<_2089107b2_Package>(_2089107b2_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log _208a01e25_AnalyzePackage(jule::Slice<jule::Ptr<_2087253da_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags) {
	__jule_tuple_x_2089107b2_Package__jule_tuple_s_21e65b904_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_208a0196e_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_208822372_FnIns> _208a52ae1_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_219be0311:;
			{
				static jule::Ptr<_208822372_FnIns> _2314_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a584cb_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_219be0377:;
			{
				static jule::Ptr<_208822372_FnIns> _2614_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5890a_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_219be03dd:;
			{
				static jule::Ptr<_208822372_FnIns> _2914_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a58d39_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_219be0454:;
			{
				static jule::Ptr<_208822372_FnIns> _3214_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a59268_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_219be061e:;
			{
				static jule::Ptr<_208822372_FnIns> _3514_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a59697_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_219be0685:;
			{
				static jule::Ptr<_208822372_FnIns> _3814_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a59d07_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_219be06eb:;
			{
				static jule::Ptr<_208822372_FnIns> _4114_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5a610_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_219be0762:;
			{
				static jule::Ptr<_208822372_FnIns> _4414_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5bca4_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_219be07d9:;
			{
				static jule::Ptr<_208822372_FnIns> _4714_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5c557_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_219be08d8:;
			{
				static jule::Ptr<_208822372_FnIns> _5014_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5ce70_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_219bdd50c:;
			{
				return nullptr;;
			}
		}
		_match_end_219be018a:;
	};
}



inline jule::Ptr<_2089cd94b_TypeAlias> _208a53042_primTypeAlias(jule::Str _5718_ident, jule::Ptr<_2089ce661_Type>* _5735_k, jule::Bool _5745_strict) {
	if ((!(_5745_strict))) {
		return jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=_5718_ident, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=(*(_5735_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)});;
	};
	jule::Ptr<_2087490bd_StructIns> _676_s = _2089ed20c_initNewStructType(_5718_ident, (*(_5735_k)));;
	(*(_676_s))._field_Checked=true;
	(*((*_676_s.alloc)._field_Decl))._field_Public=true;
	return jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=_5718_ident, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_676_s, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)})}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_20894d7de_Var> _208a568e7_findBuiltinVar(jule::Str* _9820_ident) {
	{
		auto &_match_expr{ (*(_9820_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_219be8b88:;
			{
				static jule::Ptr<_20894d7de_Var> _10114_v = jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=_208a53350_primNil}), ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__2088069a5_NewNil()})}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
				return _10114_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_219be8c32:;
			{
				static jule::Ptr<_20894d7de_Var> _11614_v = jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__208806213_NewBool(true)})}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_219be8ca9:;
			{
				static jule::Ptr<_20894d7de_Var> _13014_v = jule::new_ptr<_20894d7de_Var>(_20894d7de_Var{._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_208a56c38_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_20899bb28_Value>(_20899bb28_Value{._field_Expr=jule::Ptr<_20872b677_Expr>(nullptr), ._field_Data=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=true, ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__208806213_NewBool(false)})}), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_20894d7de_Var>>(nullptr)});;
				return _13014_v;;
			}
		}
		else {
			_case_begin_219be75d2:;
			{
				return nullptr;;
			}
		}
		_match_end_219be8a9a:;
	};
}



inline jule::Ptr<_2089cd94b_TypeAlias> _208a56c38_findBuiltinTypeAlias(jule::Str _14825_ident) {
	{
		auto &_match_expr{ _14825_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_219bed9d4:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _15114_t = _208a53042_primTypeAlias(jule::Str::lit("any", 3), &(_208a53905_primAny), false);;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_219bedb38:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _15414_t = _208a53042_primTypeAlias(jule::Str::lit("str", 3), &(_208a53c02_primStr), false);;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_219bedb9e:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _15714_t = _208a53042_primTypeAlias(jule::Str::lit("bool", 4), &(_208a53eaa_primBool), false);;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_219bedc6a:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _16014_t = _208a53042_primTypeAlias(jule::Str::lit("uintptr", 7), &(_208a54263_primUintptr), false);;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_219bedcd1:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _16314_t = _208a53042_primTypeAlias(jule::Str::lit("uint", 4), &(_208a5451b_primUint), false);;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_219bedd47:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _16614_t = _208a53042_primTypeAlias(jule::Str::lit("int", 3), &(_208a548d4_primInt), false);;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_219beddbe:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _16914_t = _208a53042_primTypeAlias(jule::Str::lit("i8", 2), &(_208a54b26_primI8), false);;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_219bede46:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _17214_t = _208a53042_primTypeAlias(jule::Str::lit("i16", 3), &(_208a54dbd_primI16), false);;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_219bee034:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _17514_t = _208a53042_primTypeAlias(jule::Str::lit("i32", 3), &(_208a55176_primI32), false);;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_219bee0ab:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _17814_t = _208a53042_primTypeAlias(jule::Str::lit("i64", 3), &(_208a5542e_primI64), false);;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_219bee133:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _18114_t = _208a53042_primTypeAlias(jule::Str::lit("u8", 2), &(_208a556d7_primU8), false);;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_219bee1aa:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _18414_t = _208a53042_primTypeAlias(jule::Str::lit("u16", 3), &(_208a55990_primU16), false);;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_219bee232:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _18714_t = _208a53042_primTypeAlias(jule::Str::lit("u32", 3), &(_208a55c48_primU32), false);;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_219bee2a9:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _19014_t = _208a53042_primTypeAlias(jule::Str::lit("u64", 3), &(_208a56232_primU64), false);;
				return _19014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_219bee331:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _19314_t = _208a53042_primTypeAlias(jule::Str::lit("f32", 3), &(_208a56474_primF32), false);;
				return _19314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_219bee3a8:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _19614_t = _208a53042_primTypeAlias(jule::Str::lit("f64", 3), &(_208a56683_primF64), false);;
				return _19614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4)) {
			_case_begin_219bee430:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _19914_t = _208a53042_primTypeAlias(jule::Str::lit("byte", 4), &(_208a556d7_primU8), true);;
				return _19914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4)) {
			_case_begin_219bee4a7:;
			{
				static jule::Ptr<_2089cd94b_TypeAlias> _20214_t = _208a53042_primTypeAlias(jule::Str::lit("rune", 4), &(_208a55176_primI32), false);;
				return _20214_t;;
			}
		}
		else {
			_case_begin_219be934d:;
			{
				return nullptr;;
			}
		}
		_match_end_219be943b:;
	};
}



inline jule::Any _208a56ebe_findBuiltinDef(jule::Str* _20920_ident) {
	jule::Ptr<_20894d7de_Var> _2106_v = _208a568e7_findBuiltinVar(_20920_ident);;
	if ((_2106_v != nullptr)) {
		return jule::Any(_2106_v, &__jule_any_type7);;
	};
	jule::Ptr<_208822372_FnIns> _2146_f = _208a52ae1_findBuiltinFunc(_20920_ident);;
	if ((_2146_f != nullptr)) {
		return jule::Any(_2146_f, &__jule_any_type65);;
	};
	jule::Ptr<_2089cd94b_TypeAlias> _2186_ta = _208a56c38_findBuiltinTypeAlias((*(_20920_ident)));;
	if ((_2186_ta != nullptr)) {
		return jule::Any(_2186_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _208a57288_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_219c0b805:;
			{
				static jule::Ptr<_208822372_FnIns> _22814_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a6011a_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22814_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_219c0b65c:;
			{
				static jule::Ptr<_208822372_FnIns> _23114_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a60549_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23114_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_219c0b6c3:;
			{
				static jule::Ptr<_208822372_FnIns> _23414_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a60978_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23414_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_219c0ad65:;
			{
				return nullptr;;
			}
		}
		_match_end_219c0b1a6:;
	};
}



inline jule::Any _208a57552_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_219c0b3c6:;
			{
				static jule::Ptr<_208822372_FnIns> _24414_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5d39e_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24414_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_219c0d83a:;
			{
				static jule::Ptr<_208822372_FnIns> _24714_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5d7cd_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24714_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_219c0d8b2:;
			{
				static jule::Ptr<_208822372_FnIns> _25014_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5dc0c_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25014_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_219c0b44d:;
			{
				static jule::Ptr<_208822372_FnIns> _25314_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5e37d_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25314_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_219c0b4c5:;
			{
				static jule::Ptr<_208822372_FnIns> _25614_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5e7ac_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25614_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_219c0da05:;
			{
				static jule::Ptr<_208822372_FnIns> _25914_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::Ptr<_20881e2b4_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a5ebdb_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25914_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_219c0d76e:;
			{
				return nullptr;;
			}
		}
		_match_end_219c0d5c6:;
	};
}



inline jule::Any _208a5792b_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_219c0dc9c:;
			{
				static jule::Ptr<_208822372_FnIns> _26914_f = jule::new_ptr<_208822372_FnIns>(_208822372_FnIns{._field_Owner=jule::Ptr<_2087490bd_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_20881e2b4_Fn>(_20881e2b4_Fn{._field_sema=jule::Ptr<_20892a755_sema>(nullptr), ._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_Scope=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_20873454d_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20873454d_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_20881c229_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20881c7e0_Param>>(nullptr), ._field_Owner=jule::Ptr<_208746230_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_208822372_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_2089ccc7a_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_20882121c_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_2089ce661_Type>(nullptr), ._field_Scope=jule::Ptr<_2088ca969_Scope>(nullptr), ._field_Refers=jule::Ptr<_2088eaeb7_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_20899a9a1_Data>,jule::Ptr<_20899c970_eval>*,jule::Ptr<_2087303a1_FnCallExpr>*,jule::Ptr<_20899a9a1_Data>*>(_208a60da7_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26914_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_219c0da8d:;
			{
				return nullptr;;
			}
		}
		_match_end_219c128c7:;
	};
}



inline jule::Any _208a57c28_findPackageBuiltinDef(jule::Str* _28127_linkPath, jule::Str* _28143_ident) {
	{
		auto &_match_expr{ (*(_28127_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_219c14148:;
			{
				return _208a57552_findBuiltinDefStdComptime(_28143_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_219c141ae:;
			{
				return _208a57288_findBuiltinDefStdMem(_28143_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_219c14225:;
			{
				return _208a5792b_findBuiltinDefStdJuleIntegrated(_28143_ident);;
			}
		}
		else {
			_case_begin_219c12e9e:;
			{
				return nullptr;;
			}
		}
		_match_end_219c12dc2:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _208a5809c_builtinCallerError(jule::Ptr<_20899c970_eval>* _29428_e, jule::Ptr<_2087303a1_FnCallExpr>* _29443_fc) {
	if (((*((*(_29443_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_29428_e)).ptr(), (*((*(_29443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29443_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_29428_e)).ptr(), (*((*((*(_29443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _3026_expr = _2089bc5d8_evalExpr((*(_29428_e)), (*((*(_29443_fc))))._field_Args[0LL]);;
	if ((_3026_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_208711827_Token> _3076_token = (*((*((*(_29443_fc))))._field_Args[0LL]))._field_Token;;
	if (_20899adbe_IsNil(_3026_expr.ptr())) {
		_20899ce48_pushErr((*(_29428_e)).ptr(), _3076_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_20893a3d0_checkValidityForInitExpr((*((*(_29428_e))))._field_s, true, false, &(_208a53905_primAny), &(_3026_expr), &(_3076_token))))) {
		return nullptr;;
	};
	_2089c7ea6_applyRuntimeToStr(&((*((*(_29428_e))))._field_s), &((*(_3026_expr))._field_Type), &(_208a53905_primAny), &(_3076_token), _2089a0e7e_getOwnerRefers((*(_29428_e)).ptr()));
	jule::Ptr<_20899a9a1_Data> _3206_d = _2089c8bcc_buildVoidData();;
	(*(_3206_d))._field_Model=jule::Any(jule::new_ptr<_20881a139_BuiltinErrorCallExpr>(_20881a139_BuiltinErrorCallExpr{._field_Func=jule::Ptr<_208822372_FnIns>(nullptr), ._field_Err=_3026_expr}), &__jule_any_type20);
	return _3206_d;;
}



inline jule::Ptr<_20899a9a1_Data> _208a584cb_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _32528_e, jule::Ptr<_2087303a1_FnCallExpr>* _32543_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_32543_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_32528_e)).ptr(), (*((*(_32543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32543_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_32528_e)).ptr(), (*((*((*(_32543_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20872b677_Expr> _3346_arg = (*((*(_32543_fc))))._field_Args[0LL];;
	jule::Ptr<_20899a9a1_Data> _3356_expr = _2089bc5d8_evalExpr((*(_32528_e)), _3346_arg);;
	if ((_3356_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_2089ebeca_isBuiltinStrConvertable(&((*(_3356_expr))._field_Type))))) {
		_20899ce48_pushErr((*(_32528_e)).ptr(), (*(_3346_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20894be80_pushRuntimeToStr(&((*((*(_32528_e))))._field_s), &((*(_3356_expr))._field_Type), &((*(_3346_arg))._field_Token), _2089a0e7e_getOwnerRefers((*(_32528_e)).ptr()));
	jule::Ptr<_20899a9a1_Data> _3476_d = _2089c8bcc_buildVoidData();;
	(*(_3476_d))._field_Model=jule::Any(jule::new_ptr<_208817983_BuiltinPrintCallExpr>(_208817983_BuiltinPrintCallExpr{._field_Expr=_3356_expr}), &__jule_any_type24);
	return _3476_d;;
}



inline jule::Ptr<_20899a9a1_Data> _208a5890a_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _35230_e, jule::Ptr<_2087303a1_FnCallExpr>* _35245_fc, jule::Ptr<_20899a9a1_Data>* _35272_d) {
	(*(_35272_d))=_208a584cb_builtinCallerPrint(nullptr, _35230_e, _35245_fc, _35272_d);
	if (((*(_35272_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35272_d))))._field_Model=jule::Any(jule::new_ptr<_208817c80_BuiltinPrintlnCallExpr>(_208817c80_BuiltinPrintlnCallExpr{._field_Expr=(*((*((*(_35272_d))))._field_Model.cast_ptr<_208817983_BuiltinPrintCallExpr>(&__jule_any_type24)))._field_Expr}), &__jule_any_type25);
	return (*(_35272_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a58d39_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _36426_e, jule::Ptr<_2087303a1_FnCallExpr>* _36441_fc, jule::Ptr<_20899a9a1_Data>* _36468_d) {
	if (((*((*(_36441_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_36426_e)).ptr(), (*((*(_36441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36441_fc))))._field_Args.len() > 2LL)) {
		_20899ce48_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _3736_t = _2089bbb15_eval1((*(_36426_e)), (*((*(_36441_fc))))._field_Args[0LL]);;
	if ((_3736_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3736_t))._field_Decl))) {
		_20899ce48_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*((*(_36468_d))))._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dbe98_Sptr>(_2089dbe98_Sptr{._field_Elem=(*(_3736_t))._field_Type}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)});
	if (((*((*(_36441_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_2089ce661_Type> _3907_old = (*((*(_36426_e))))._field_prefix;;
		(*((*(_36426_e))))._field_prefix=(*_3736_t.alloc)._field_Type;
		jule::Ptr<_20899a9a1_Data> _3937_init = _2089bc5d8_evalExpr((*(_36426_e)), (*((*(_36441_fc))))._field_Args[1LL]);;
		(*((*(_36426_e))))._field_prefix=_3907_old;
		if ((_3937_init != nullptr)) {
			jule::Ptr<_208711827_Token> _3988_token = (*((*((*(_36441_fc))))._field_Args[1LL]))._field_Token;;
			;
			_20893a3d0_checkValidityForInitExpr((*((*(_36426_e))))._field_s, (*((*(_36426_e))))._field_target._field_mutable, false, &((*_3736_t.alloc)._field_Type), &(_3937_init), &(_3988_token));
			_208935b4a_checkAssignType((*((*(_36426_e))))._field_s, false, &((*_3736_t.alloc)._field_Type), &(_3937_init), _3988_token, _2089a0e7e_getOwnerRefers((*(_36426_e)).ptr()));
			(*((*(_36468_d))))._field_Model=jule::Any(jule::new_ptr<_208818159_BuiltinNewCallExpr>(_208818159_BuiltinNewCallExpr{._field_Type=(*_3736_t.alloc)._field_Type, ._field_Init=(*(_3937_init))._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_36468_d))))._field_Model=jule::Any(jule::new_ptr<_208818159_BuiltinNewCallExpr>(_208818159_BuiltinNewCallExpr{._field_Type=(*_3736_t.alloc)._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_36468_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a59268_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _41828_e, jule::Ptr<_2087303a1_FnCallExpr>* _41843_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_41843_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_41828_e)).ptr(), (*((*(_41843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_41843_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_41828_e)).ptr(), (*((*((*(_41843_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _4276_expr = _2089bc5d8_evalExpr((*(_41828_e)), (*((*(_41843_fc))))._field_Args[0LL]);;
	if ((_4276_expr == nullptr)) {
		return nullptr;;
	};
	if (((_2089d2774_Prim((*(_4276_expr))._field_Type.ptr()) == nullptr) || (!(_2089db937_IsStr(_2089d2774_Prim((*(_4276_expr))._field_Type.ptr()).ptr()))))) {
		_20899ce48_pushErr((*(_41828_e)).ptr(), (*((*(_41843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20899a9a1_Data> _4366_d = _2089c8bcc_buildVoidData();;
	(*(_4366_d))._field_Model=jule::Any(jule::new_ptr<_208818533_BuiltinPanicCallExpr>(_208818533_BuiltinPanicCallExpr{._field_Token=(*((*(_41843_fc))))._field_Token, ._field_Expr=(*(_4276_expr))._field_Model}), &__jule_any_type26);
	return _4366_d;;
}



inline jule::Ptr<_20899a9a1_Data> _208a59697_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _44427_e, jule::Ptr<_2087303a1_FnCallExpr>* _44442_fc, jule::Ptr<_20899a9a1_Data>* _44469_d) {
	if (((*((*(_44442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44442_fc))))._field_Args.len() == 1LL)) {
			_20899ce48_pushErr((*(_44427_e)).ptr(), (*((*(_44442_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_20899ce48_pushErr((*(_44427_e)).ptr(), (*((*(_44442_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44442_fc))))._field_Args.len() > 3LL)) {
		_20899ce48_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_20899a9a1_Data> _4576_t = _2089bb7c4_evalExprKind((*(_44427_e)), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4576_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4576_t))._field_Decl))) {
		_20899ce48_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_2089d37ca_Slc((*(_4576_t))._field_Type.ptr()) == nullptr)) {
		_20899ce48_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_4576_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44469_d))))._field_Type=(*(_4576_t))._field_Type;
	jule::Ptr<_20899a9a1_Data> _4726_lenExpr = _2089bc5d8_evalExpr(_2089351dd_evalp((*((*(_44427_e))))._field_s, (*((*(_44427_e))))._field_lookup, (*_4576_t.alloc)._field_Type), (*((*(_44442_fc))))._field_Args[1LL]);;
	if ((_4726_lenExpr == nullptr)) {
		return nullptr;;
	};
	_2089a6bee_checkIntegerIndexingByData((*(_44427_e)).ptr(), &(_4726_lenExpr), (*((*((*(_44442_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_2088189d9_BuiltinMakeCallExpr> _4796_model = jule::new_ptr<_2088189d9_BuiltinMakeCallExpr>(_2088189d9_BuiltinMakeCallExpr{._field_Type=(*_4576_t.alloc)._field_Type, ._field_Len=(*(_4726_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44469_d))))._field_Model=jule::Any(_4796_model, &__jule_any_type116);
	if (((*((*(_44442_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_20899a9a1_Data> _4857_capExpr = _2089bc5d8_evalExpr(_2089351dd_evalp((*((*(_44427_e))))._field_s, (*((*(_44427_e))))._field_lookup, (*_4576_t.alloc)._field_Type), (*((*(_44442_fc))))._field_Args[2LL]);;
		if ((_4857_capExpr == nullptr)) {
			return (*(_44469_d));;
		};
		_2089a6bee_checkIntegerIndexingByData((*(_44427_e)).ptr(), &(_4857_capExpr), (*((*((*(_44442_fc))))._field_Args[2LL]))._field_Token);
		(*(_4796_model))._field_Cap=(*(_4857_capExpr))._field_Model;
	};
	return (*(_44469_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a59d07_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _49529_e, jule::Ptr<_2087303a1_FnCallExpr>* _49544_fc, jule::Ptr<_20899a9a1_Data>* _49571_d) {
	if (((*((*(_49544_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49544_fc))))._field_Args.len() == 1LL)) {
			_20899ce48_pushErr((*(_49529_e)).ptr(), (*((*(_49544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_20899ce48_pushErr((*(_49529_e)).ptr(), (*((*(_49544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_20872b677_Expr> _5056_firstArg = (*((*(_49544_fc))))._field_Args[0LL];;
	jule::Ptr<_20899a9a1_Data> _5066_t = _2089bc5d8_evalExpr((*(_49529_e)), _5056_firstArg);;
	if ((_5066_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2089dc96b_Slc> _5116_s = _2089d37ca_Slc((*(_5066_t))._field_Type.ptr());;
	if ((_5116_s == nullptr)) {
		_20899ce48_pushErr((*(_49529_e)).ptr(), (*(_5056_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_20893a3d0_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5066_t.alloc)._field_Type), &(_5066_t), &((*(_5056_firstArg))._field_Token))) {
		_208935b4a_checkAssignType((*((*(_49529_e))))._field_s, false, &((*(_5066_t))._field_Type), &(_5066_t), (*_5056_firstArg.alloc)._field_Token, _2089a0e7e_getOwnerRefers((*(_49529_e)).ptr()));
	};
	jule::Ptr<_2089ce661_Type> _5266_prefix = (*((*(_49529_e))))._field_prefix;;
	(*((*(_49529_e))))._field_prefix=(*_5066_t.alloc)._field_Type;
	__JULE_DEFER({
		(*((*(_49529_e))))._field_prefix=_5266_prefix;
	});;
	(*(_49571_d))=jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=(*_5066_t.alloc)._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});
	jule::Ptr<_20872b677_Expr> _5346_secondArg = (*((*(_49544_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5346_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_219c54dae:;
			{
				if (((*((*(_49544_fc))))._field_Args.len() > 2LL)) {
					_20899ce48_pushErr((*(_49529_e)).ptr(), (*((*((*(_49544_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_20899a9a1_Data> _5417_e1 = _2089bc5d8_evalExpr((*(_49529_e)), (*((*(_5346_secondArg))._field_Kind.unsafe_cast_ptr<_20872db0d_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_2089d2774_Prim((*(_5116_s))._field_Elem.ptr()) != nullptr) && _2089d9d97_IsU8(_2089d2774_Prim((*(_5116_s))._field_Elem).ptr()))) {
					if (((_2089d2774_Prim((*(_5417_e1))._field_Type) != nullptr) && _2089db937_IsStr(_2089d2774_Prim((*(_5417_e1))._field_Type).ptr()))) {
						_2089cb7d4_makeVariadic(&(_5417_e1), _208a556d7_primU8);
						(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_208818db3_BuiltinAppendCallExpr>(_208818db3_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type23);
						return (*(_49571_d));;
					};
				};
				if ((!(_2089d24dd_Variadicable((*(_5417_e1))._field_Type)))) {
					_20899ce48_pushErr((*(_49529_e)).ptr(), (*(_5346_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_5417_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_2089cb7d4_makeVariadic(&(_5417_e1), (*(_5116_s))._field_Elem);
				(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=false;
				if (_20893a3d0_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5116_s.alloc)._field_Elem), &(_5417_e1), &((*(_5346_secondArg))._field_Token))) {
					(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=true;
					_208935b4a_checkAssignType((*((*(_49529_e))))._field_s, false, &((*_5116_s.alloc)._field_Elem), &(_5417_e1), (*_5346_secondArg.alloc)._field_Token, _2089a0e7e_getOwnerRefers((*(_49529_e)).ptr()));
				} else {
					(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_208818db3_BuiltinAppendCallExpr>(_208818db3_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type23);
				return (*(_49571_d));;
			}
		}
		_match_end_219c54d37:;
	};
	jule::Ptr<_20899a9a1_Data> _5846_e1 = _2089bc5d8_evalExpr((*(_49529_e)), _5346_secondArg);;
	if ((_5846_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_208814452_SliceExpr> _5896_slice = jule::new_ptr<_208814452_SliceExpr>(_208814452_SliceExpr{._field_ElemType=(*(_5116_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49544_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49544_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_219c66c28:;
		if (it != expr_end) {
			jule::Ptr<_20872b677_Expr> _59314_arg = *it;
			{
				_5846_e1=_2089bc5d8_evalExpr((*(_49529_e)), _59314_arg);
				if ((_5846_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5846_e1))._field_Type.alloc)._field_Variadic) {
					_20899ce48_pushErr((*(_49529_e)).ptr(), (*(_59314_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_20893a3d0_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5116_s.alloc)._field_Elem), &(_5846_e1), &((*(_59314_arg))._field_Token))) {
					_208935b4a_checkAssignType((*((*(_49529_e))))._field_s, false, &((*_5116_s.alloc)._field_Elem), &(_5846_e1), (*_59314_arg.alloc)._field_Token, _2089a0e7e_getOwnerRefers((*(_49529_e)).ptr()));
				};
				(*(_5896_slice))._field_Elems=jule::append((*_5896_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5846_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_219c66c28:;
			++it;
			goto _iter_begin_219c66c28;
		}
		_iter_end_219c66c28:;
	};
	(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_208818db3_BuiltinAppendCallExpr>(_208818db3_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=jule::Any(_5896_slice, &__jule_any_type80)}), &__jule_any_type23);
	return (*(_49571_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5a1d1_callerCopySlice(jule::Ptr<_20899a9a1_Data>* _61525_dest, jule::Ptr<_20899c970_eval>* _61543_e, jule::Ptr<_2087303a1_FnCallExpr>* _61558_fc, jule::Ptr<_20899a9a1_Data>* _61585_d) {
	if ((!((*((*(_61525_dest))))._field_Mutable))) {
		_20899ce48_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20899a9a1_Data> _6206_src = _2089bc5d8_evalExpr((*(_61543_e)), (*((*(_61558_fc))))._field_Args[1LL]);;
	if ((_6206_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2089dc96b_Slc> _6246_slc = _2089d37ca_Slc((*(_6206_src))._field_Type.ptr());;
	if ((_6246_slc != nullptr)) {
		if (((!((*_6206_src.alloc)._field_Mutable)) && _2089d19a4_Mutable((*_6246_slc.alloc)._field_Elem.ptr()))) {
			_20899ce48_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_2089ced9d_Equal((*((*(_61525_dest))))._field_Type, (*_6206_src.alloc)._field_Type)))) {
			_20899ce48_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_61525_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_6206_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_2089d846c_Prim> _6343_destPrim = _2089d2774_Prim((*(_2089d37ca_Slc((*((*(_61525_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_2089d846c_Prim> _6353_prim = _2089d2774_Prim((*(_6206_src))._field_Type);;
		if (((((_6343_destPrim == nullptr) || (_6353_prim == nullptr)) || (!(_2089db937_IsStr(_6353_prim.ptr())))) || (!(_2089d9d97_IsU8(_6343_destPrim.ptr()))))) {
			_20899ce48_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*((*(_61525_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_6206_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_61585_d))))._field_Type=_208998b69_lenKind();
	(*((*(_61585_d))))._field_Model=jule::Any(jule::new_ptr<_208819c60_BuiltinCopyCallExpr>(_208819c60_BuiltinCopyCallExpr{._field_Dest=(*(_61525_dest)), ._field_Src=_6206_src}), &__jule_any_type27);
	return (*(_61585_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5a610_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _64927_e, jule::Ptr<_2087303a1_FnCallExpr>* _64942_fc, jule::Ptr<_20899a9a1_Data>* _64969_d) {
	if (((*((*(_64942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64942_fc))))._field_Args.len() == 1LL)) {
			_20899ce48_pushErr((*(_64927_e)).ptr(), (*((*(_64942_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_20899ce48_pushErr((*(_64927_e)).ptr(), (*((*(_64942_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_64942_fc))))._field_Args.len() > 2LL)) {
		_20899ce48_pushErr((*(_64927_e)).ptr(), (*((*((*(_64942_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _6626_dest = _2089bc5d8_evalExpr((*(_64927_e)), (*((*(_64942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6626_dest == nullptr)) {
			_case_begin_219c7cdd7:;
			{
				return nullptr;;
			}
		}
		else if ((_2089d37ca_Slc((*(_6626_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_219c7ce4d:;
			{
				return _208a5a1d1_callerCopySlice(&(_6626_dest), _64927_e, _64942_fc, _64969_d);;
			}
		}
		else {
			_case_begin_219c7bcb5:;
			{
				_20899ce48_pushErr((*(_64927_e)).ptr(), (*((*((*(_64942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219c78399:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _208a5a984_callerLenSlice(jule::Ptr<_20899a9a1_Data>* _67424_expr, jule::Ptr<_20899a9a1_Data>* _67442_d) {
	(*((*(_67442_d))))._field_Type=_208998b69_lenKind();
	(*((*(_67442_d))))._field_Model=jule::Any(jule::new_ptr<_2088191b0_BuiltinLenCallExpr>(_2088191b0_BuiltinLenCallExpr{._field_Expr=(*(_67424_expr))}), &__jule_any_type117);
	return (*(_67442_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5ad08_callerLenMap(jule::Ptr<_20899a9a1_Data>* _68222_expr, jule::Ptr<_20899a9a1_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Type=_208998b69_lenKind();
	(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_2088191b0_BuiltinLenCallExpr>(_2088191b0_BuiltinLenCallExpr{._field_Expr=(*(_68222_expr))}), &__jule_any_type117);
	return (*(_68240_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5b17c_callerLenArr(jule::Ptr<_20899a9a1_Data>* _69022_expr, jule::Ptr<_20899a9a1_Data>* _69040_d) {
	(*((*(_69040_d))))._field_Type=_208998b69_lenKind();
	(*((*(_69040_d))))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>((*(_2089d3544_Arr((*((*(_69022_expr))))._field_Type.ptr())))._field_N));
	(*((*(_69040_d))))._field_Model=jule::Any((*((*(_69040_d))))._field_Constant, &__jule_any_type15);
	return (*(_69040_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5b501_callerLenStr(jule::Ptr<_20899a9a1_Data>* _69722_expr, jule::Ptr<_20899a9a1_Data>* _69740_d) {
	(*((*(_69740_d))))._field_Type=_208998b69_lenKind();
	if (_20899b3db_IsConst((*(_69722_expr)).ptr())) {
		(*((*(_69740_d))))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_2088078b8_ReadStr((*((*(_69722_expr))))._field_Constant.ptr()).len()));
		(*((*(_69740_d))))._field_Model=jule::Any((*((*(_69740_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_69740_d))))._field_Model=jule::Any(jule::new_ptr<_2088191b0_BuiltinLenCallExpr>(_2088191b0_BuiltinLenCallExpr{._field_Expr=(*(_69722_expr))}), &__jule_any_type117);
	};
	return (*(_69740_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5b875_callerLenComptime(jule::Ptr<_20899a9a1_Data>* _71027_d, jule::I64 _71037_n) {
	(*((*(_71027_d))))._field_Type=_208998b69_lenKind();
	(*((*(_71027_d))))._field_Constant=static__208805bc4_NewI64(static_cast<jule::I64>(_71037_n));
	(*((*(_71027_d))))._field_Model=jule::Any((*((*(_71027_d))))._field_Constant, &__jule_any_type15);
	return (*(_71027_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5bca4_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _71726_e, jule::Ptr<_2087303a1_FnCallExpr>* _71741_fc, jule::Ptr<_20899a9a1_Data>* _71768_d) {
	if (((*((*(_71741_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_71726_e)).ptr(), (*((*(_71741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71741_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_71726_e)).ptr(), (*((*((*(_71741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _7256_dest = _2089bc297_evalExpr1((*(_71726_e)), (*((*(_71741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7256_dest == nullptr)) {
			_case_begin_219c8ca73:;
			{
				return nullptr;;
			}
		}
		else if ((_2089d37ca_Slc((*(_7256_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_219c8cad9:;
			{
				return _208a5a984_callerLenSlice(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_2089d3544_Arr((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8cb50:;
			{
				return _208a5b17c_callerLenArr(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_2089d459a_Map((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8cbb6:;
			{
				return _208a5ad08_callerLenMap(&(_7256_dest), _71768_d);;
			}
		}
		else if (((_2089d2774_Prim((*(_7256_dest))._field_Type) != nullptr) && _2089db937_IsStr(_2089d2774_Prim((*(_7256_dest))._field_Type).ptr()))) {
			_case_begin_219c8b9b7:;
			{
				return _208a5b501_callerLenStr(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_2089d4d4d_comptimeStructFields((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8ba2d:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d4d4d_comptimeStructFields((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_2089d536a_comptimeEnumFields((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8ba94:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d536a_comptimeEnumFields((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_2089d613a_comptimeTypeInfos((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8bb0a:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d613a_comptimeTypeInfos((*(_7256_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_2089d5887_comptimeParams((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8cc82:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d5887_comptimeParams((*(_7256_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_2089d6657_comptimeStatics((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8cce8:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d6657_comptimeStatics((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_2089d76ad_comptimeFiles((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8cd5e:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d76ad_comptimeFiles((*(_7256_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_2089d7191_comptimeDecls((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_219c8cdc5:;
			{
				return _208a5b875_callerLenComptime(_71768_d, (*(_2089d7191_comptimeDecls((*(_7256_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_219c8b951:;
			{
				_20899ce48_pushErr((*(_71726_e)).ptr(), (*((*((*(_71741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219c89531:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _208a5c128_callerCapSlice(jule::Ptr<_20899a9a1_Data>* _75724_expr, jule::Ptr<_20899a9a1_Data>* _75742_d) {
	(*((*(_75742_d))))._field_Type=_208998b69_lenKind();
	(*((*(_75742_d))))._field_Model=jule::Any(jule::new_ptr<_2088194ac_BuiltinCapCallExpr>(_2088194ac_BuiltinCapCallExpr{._field_Expr=(*(_75724_expr))}), &__jule_any_type118);
	return (*(_75742_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5c557_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _76526_e, jule::Ptr<_2087303a1_FnCallExpr>* _76541_fc, jule::Ptr<_20899a9a1_Data>* _76568_d) {
	if (((*((*(_76541_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_76526_e)).ptr(), (*((*(_76541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76541_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _7736_dest = _2089bc5d8_evalExpr((*(_76526_e)), (*((*(_76541_fc))))._field_Args[0LL]);;
	{
		
		if ((_7736_dest == nullptr)) {
			_case_begin_219c9e05c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7736_dest))._field_Decl) {
			_case_begin_219ca0de9:;
			{
				_20899ce48_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2089d37ca_Slc((*_7736_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_219ca0e60:;
			{
				return _208a5c128_callerCapSlice(&(_7736_dest), _76568_d);;
			}
		}
		else {
			_case_begin_219c9db72:;
			{
				_20899ce48_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219c9cb2c:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _208a5ca41_callerDeleteMap(jule::Ptr<_20899c970_eval>* _78825_e, jule::Ptr<_2087303a1_FnCallExpr>* _78840_fc, jule::Ptr<_20899a9a1_Data>* _78867_expr, jule::Ptr<_20899a9a1_Data>* _78885_d) {
	if ((!((*((*(_78867_expr))))._field_Mutable))) {
		_20899ce48_pushErr((*(_78825_e)).ptr(), (*((*((*(_78840_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_78885_d))=_2089c8bcc_buildVoidData();
	jule::Ptr<_208819886_BuiltinDeleteCallExpr> _7936_model = jule::new_ptr<_208819886_BuiltinDeleteCallExpr>(_208819886_BuiltinDeleteCallExpr{._field_Dest=(*(_78867_expr)), ._field_Key=jule::Ptr<_20899a9a1_Data>(nullptr)});;
	if (((*((*(_78840_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_20899a9a1_Data> _7977_key = _2089bc5d8_evalExpr((*(_78825_e)), (*((*(_78840_fc))))._field_Args[1LL]);;
		{
			
			if ((_7977_key == nullptr)) {
				_case_begin_219ca6ecc:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7977_key))._field_Decl) {
				_case_begin_219ca7043:;
				{
					_20899ce48_pushErr((*(_78825_e)).ptr(), (*((*((*(_78840_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_219ca5a9c:;
				{
					;
					jule::Ptr<_2089ce661_Type> _8068_keyType = (*(_2089d459a_Map((*((*(_78867_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_208935b4a_checkAssignType((*((*(_78825_e))))._field_s, false, &(_8068_keyType), &(_7977_key), (*((*((*(_78840_fc))))._field_Args[1LL]))._field_Token, _2089a0e7e_getOwnerRefers((*(_78825_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_219ca5a36:;
		};
		(*(_7936_model))._field_Key=_7977_key;
	};
	(*((*(_78885_d))))._field_Model=jule::Any(_7936_model, &__jule_any_type28);
	return (*(_78885_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5ce70_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _81729_e, jule::Ptr<_2087303a1_FnCallExpr>* _81744_fc, jule::Ptr<_20899a9a1_Data>* _81771_d) {
	if (((*((*(_81744_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_81729_e)).ptr(), (*((*(_81744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81744_fc))))._field_Args.len() > 2LL)) {
		_20899ce48_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _8256_dest = _2089bc5d8_evalExpr((*(_81729_e)), (*((*(_81744_fc))))._field_Args[0LL]);;
	{
		
		if ((_8256_dest == nullptr)) {
			_case_begin_219cae49b:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8256_dest))._field_Decl) {
			_case_begin_219cae512:;
			{
				_20899ce48_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2089d459a_Map((*_8256_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_219cae578:;
			{
				return _208a5ca41_callerDeleteMap(_81729_e, _81744_fc, &(_8256_dest), _81771_d);;
			}
		}
		else {
			_case_begin_219cad379:;
			{
				_20899ce48_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219caa62e:;
	};
}



inline jule::Ptr<_20899a9a1_Data> _208a5d39e_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _84040_e, jule::Ptr<_2087303a1_FnCallExpr>* _84055_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_84055_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_84040_e)).ptr(), (*((*(_84055_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84055_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _8496_d = _2089bb7c4_evalExprKind((*(_84040_e)), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8496_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_208822372_FnIns> _8532_f = _2089d3a61_Fn((*(_8496_d))._field_Type.ptr());;
	if ((_8532_f != nullptr)) {
		if (_20882383a_IsBuiltin(_8532_f)) {
			_20899ce48_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8532_f.alloc)._field_Generics.len() != (*((*_8532_f.alloc)._field_Decl))._field_Generics.len())) {
			_20899ce48_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_2087490bd_StructIns> _8642_s = _2089d3ce7_Struct((*(_8496_d))._field_Type);;
	if (((_8642_s != nullptr) && ((*_8642_s.alloc)._field_Generics.len() != (*((*_8642_s.alloc)._field_Decl))._field_Generics.len()))) {
		_20899ce48_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_2089d4ab7_comptime((*(_8496_d))._field_Type)) {
		_20899ce48_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_8496_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c380d_buildComptimeTypeInfoData(&((*((*(_84040_e))))._field_s), &((*_8496_d.alloc)._field_Type));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5d7cd_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _87641_e, jule::Ptr<_2087303a1_FnCallExpr>* _87656_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_87656_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_87641_e)).ptr(), (*((*(_87656_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87656_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_87641_e)).ptr(), (*((*((*(_87656_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _8846_d = _2089bc5d8_evalExpr((*(_87641_e)), (*((*(_87656_fc))))._field_Args[0LL]);;
	if ((_8846_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_208998ebb_isGoodValueToInfer(&(_8846_d))))) {
		_20899ce48_pushErr((*(_87641_e)).ptr(), (*((*((*(_87656_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_8846_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _2088c3b4e_buildComptimeValue(&(_8846_d));;
}



inline jule::Ptr<_20899a9a1_Data> _208a5dc0c_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _89638_e, jule::Ptr<_2087303a1_FnCallExpr>* _89653_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_89653_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_89638_e)).ptr(), (*((*((*(_89653_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_208799195_Const> _9006_constant = static__208805bc4_NewI64(static_cast<jule::I64>((*((*((*(_89653_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a548d4_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9006_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9006_constant});;
}



inline jule::Ptr<_20899a9a1_Data> _208a5e37d_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _90838_e, jule::Ptr<_2087303a1_FnCallExpr>* _90853_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_90853_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_90838_e)).ptr(), (*((*((*(_90853_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088b9d76_comptimeFile>(_2088b9d76_comptimeFile{._field_file=(*((*((*(_90838_e))))._field_s))._field_file}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _208a5e7ac_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _92139_e, jule::Ptr<_2087303a1_FnCallExpr>* _92154_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_92154_fc))))._field_Args.len() > 0LL)) {
		_20899ce48_pushErr((*(_92139_e)).ptr(), (*((*((*(_92154_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2088b8407_comptimeFiles>(_2088b8407_comptimeFiles{._field_files=(*((*((*(_92139_e))))._field_s))._field_files}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
}



inline jule::Ptr<_20899a9a1_Data> _208a5ebdb_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _93443_e, jule::Ptr<_2087303a1_FnCallExpr>* _93458_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_93458_fc))))._field_Args.len() > 2LL)) {
		_20899ce48_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93458_fc))))._field_Args.len() == 0LL)) {
		_20899ce48_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93458_fc))))._field_Args.len() == 1LL)) {
		_20899ce48_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_93458_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_219ccc94d:;
			{
				goto _match_end_219ccd410;
			}
		}
		else {
			_case_begin_219ccd487:;
			{
				_20899ce48_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_20899d2ab_pushSuggestion((*(_93443_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_219ccd410:;
	};
	jule::Ptr<_208711827_Token> _9556_ident = (*((*((*((*(_93458_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_20872ce92_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_93443_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1)) {
			_case_begin_219cd1820:;
			{
				goto _match_end_219cd0b4e;
			}
		}
		else {
			_case_begin_219cd0bb5:;
			{
				_20899ce48_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_219cd0b4e:;
	};
	jule::Ptr<_2088d3169_scopeChecker> _9646_sc = (*((*(_93443_e))))._field_lookup.cast_ptr<_2088d3169_scopeChecker>((jule::Trait::Type*)&_208a0052d_Lookup_mptr_data1);;
	jule::Ptr<_2089cd94b_TypeAlias> _9656_alias = jule::new_ptr<_2089cd94b_TypeAlias>(_2089cd94b_TypeAlias{._field_Scope=(*(_9646_sc))._field_tree, ._field_Strict=false, ._field_Public=_208927587_IsPub((*(_9556_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9556_ident, ._field_Ident=(*_9556_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_2089d7a65_TypeSym>(_2089d7a65_TypeSym{._field_Decl=jule::Ptr<_208727343_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_2089ce661_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>(nullptr)});;
	jule::Ptr<_20899a9a1_Data> _9756_t = _2089bbb15_eval1((*(_93443_e)), (*((*(_93458_fc))))._field_Args[1LL]);;
	if ((_9756_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9756_t))._field_Decl) {
		(*((*(_9656_alias))._field_TypeSym))._field_Type=(*_9756_t.alloc)._field_Type;
	} else {
		jule::Ptr<_2088ae596_comptimeTypeInfo> _9827_cti = _2089d63c1_comptimeTypeInfo((*(_9756_t))._field_Type.ptr());;
		if ((_9827_cti == nullptr)) {
			_20899ce48_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_20899d2ab_pushSuggestion((*(_93443_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9656_alias))._field_TypeSym))._field_Type=(*(_9827_cti))._field_base;
	};
	_2088d82d4_checkTypeAlias(_9646_sc, &(_9656_alias));
	return _2089c8bcc_buildVoidData();;
}



inline jule::Ptr<_20899a9a1_Data> _208a6011a_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _99435_e, jule::Ptr<_2087303a1_FnCallExpr>* _99450_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<_20899a9a1_Data> _9956_result = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a5451b_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	if (((*((*(_99450_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_99435_e)).ptr(), (*((*(_99450_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9956_result;;
	};
	if (((*((*(_99450_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_99435_e)).ptr(), (*((*((*(_99450_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _10076_d = _2089bb7c4_evalExprKind((*(_99435_e)), (*((*((*(_99450_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10076_d == nullptr)) {
		return _9956_result;;
	};
	if ((!(_2089ece10_validTypeForXof(&((*(_10076_d))._field_Type))))) {
		_20899ce48_pushErr((*(_99435_e)).ptr(), (*((*((*(_99450_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*_10076_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9956_result))._field_Model=jule::Any(jule::new_ptr<_20881a436_SizeofExpr>(_20881a436_SizeofExpr{._field_Expr=jule::Any((*(_10076_d))._field_Type, &__jule_any_type85)}), &__jule_any_type119);
	return _9956_result;;
}



inline jule::Ptr<_20899a9a1_Data> _208a60549_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _101936_e, jule::Ptr<_2087303a1_FnCallExpr>* _101951_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<_20899a9a1_Data> _10206_result = jule::new_ptr<_20899a9a1_Data>(_20899a9a1_Data{._field_untyped=false, ._field_Type=_208a5451b_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_208799195_Const>(nullptr)});;
	if (((*((*(_101951_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_101936_e)).ptr(), (*((*(_101951_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10206_result;;
	};
	if (((*((*(_101951_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_101936_e)).ptr(), (*((*((*(_101951_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _10326_d = _2089bb7c4_evalExprKind((*(_101936_e)), (*((*((*(_101951_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10326_d == nullptr)) {
		return _10206_result;;
	};
	if ((!(_2089ece10_validTypeForXof(&((*(_10326_d))._field_Type))))) {
		_20899ce48_pushErr((*(_101936_e)).ptr(), (*((*((*(_101951_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*_10326_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10206_result))._field_Model=jule::Any(jule::new_ptr<_20881aada_AlignofExpr>(_20881aada_AlignofExpr{._field_Expr=jule::Any((*(_10326_d))._field_Type, &__jule_any_type85)}), &__jule_any_type120);
	return _10206_result;;
}



inline jule::Ptr<_20899a9a1_Data> _208a60978_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _104433_e, jule::Ptr<_2087303a1_FnCallExpr>* _104448_fc, jule::Ptr<_20899a9a1_Data>* ) {
	if (((*((*(_104448_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_104433_e)).ptr(), (*((*(_104448_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104448_fc))))._field_Args.len() > 1LL)) {
		_20899ce48_pushErr((*(_104433_e)).ptr(), (*((*((*(_104448_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_20899a9a1_Data> _10536_d = _2089bc5d8_evalExpr((*(_104433_e)), (*((*(_104448_fc))))._field_Args[0LL]);;
	if ((_10536_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2089d2257_GC((*(_10536_d))._field_Type.ptr())))) {
		_20899ce48_pushErr((*(_104433_e)).ptr(), (*((*((*(_104448_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20899a9a1_Data> _10626_result = _2089c8bcc_buildVoidData();;
	(*(_10626_result))._field_Model=jule::Any(jule::new_ptr<_20881b448_FreeExpr>(_20881b448_FreeExpr{._field_Expr=(*(_10536_d))._field_Model}), &__jule_any_type29);
	return _10626_result;;
}



inline jule::Ptr<_20899a9a1_Data> _208a60da7_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _106744_e, jule::Ptr<_2087303a1_FnCallExpr>* _106759_fc, jule::Ptr<_20899a9a1_Data>* _106786_d) {
	if ((!(_20899d93d_isUnsafe((*(_106744_e)).ptr())))) {
		_20899ce48_pushErr((*(_106744_e)).ptr(), (*((*(_106759_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_106759_fc))))._field_Args.len() < 1LL)) {
		_20899ce48_pushErr((*(_106744_e)).ptr(), (*((*(_106759_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_20899a9a1_Data> _10776_argd = _2089bc5d8_evalExpr((*(_106744_e)), (*((*(_106759_fc))))._field_Args[0LL]);;
	if ((_10776_argd == nullptr)) {
		return nullptr;;
	};
	if (((_2089d2774_Prim((*(_10776_argd))._field_Type.ptr()) == nullptr) || (!(_2089db937_IsStr(_2089d2774_Prim((*(_10776_argd))._field_Type.ptr()).ptr()))))) {
		_20899ce48_pushErr((*(_106744_e)).ptr(), (*((*((*(_106759_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2089cea5c_Str((*(_10776_argd))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_2089cea5c_Str((*(_10776_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_20899b3db_IsConst(_10776_argd.ptr()))) || (!(_208809eb4_IsStr((*(_10776_argd))._field_Constant.ptr()))))) {
		_20899ce48_pushErr((*(_106744_e)).ptr(), (*((*((*(_106759_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20899a9a1_Data> _10926_r = _2089c8bcc_buildVoidData();;
	jule::Ptr<_208822372_FnIns> _10946_f = _2089d3a61_Fn((*((*(_106786_d))))._field_Type.ptr());;
	if (((*(_10946_f))._field_Generics.len() > 0LL)) {
		(*(_10926_r))._field_Type=(*((*(_10946_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_20881b14b_BackendEmitExpr> _10996_model = jule::new_ptr<_20881b14b_BackendEmitExpr>(_20881b14b_BackendEmitExpr{._field_Code=_2088078b8_ReadStr((*(_10776_argd))._field_Constant.ptr()), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_106759_fc))))._field_Args.len() > 1LL)) {
		(*(_10996_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_106759_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_106759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_219d0bb8b:;
			if (it != expr_end) {
				jule::Ptr<_20872b677_Expr> _110515_arg = *it;
				{
					_10776_argd=_2089bbb15_eval1((*(_106744_e)), _110515_arg);
					if ((_10776_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10776_argd))._field_Decl) {
						(*_10996_model.alloc)._field_Exprs=jule::append((*_10996_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_10776_argd.alloc)._field_Type, &__jule_any_type85); __jule_collection; }));
					} else {
						(*_10996_model.alloc)._field_Exprs=jule::append((*_10996_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10776_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_219d0bb8b:;
				++it;
				goto _iter_begin_219d0bb8b;
			}
			_iter_end_219d0bb8b:;
		};
	};
	(*(_10926_r))._field_Model=jule::Any(_10996_model, &__jule_any_type22);
	return _10926_r;;
}



inline jule::Ptr<_20931304e_FileInfo> _209315d65_ParseFile(jule::Ptr<_2087173cc_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20931304e_FileInfo> _276_finf = jule::new_ptr<_20931304e_FileInfo>(_20931304e_FileInfo{._field_Ast=jule::Ptr<_2087253da_AST>(nullptr), ._field_Errors=jule::Slice<_21e65b904_Log>(nullptr)});;
	({
		__jule_tuple_x_2087253da_AST__jule_tuple_s_21e65b904_Log __jule_assign_result = _209360ed1_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_2087253da_AST__jule_tuple_s_21e65b904_Log _209360ed1_parseFileset(jule::Ptr<_2087173cc_Fileset> _5521_f) {
	__jule_tuple_x_2087253da_AST__jule_tuple_s_21e65b904_Log __jule_func_result;
	jule::Ptr<_209381683_parser> _566_p = jule::new_ptr<_209381683_parser>(_209381683_parser{._field_ast=jule::Ptr<_2087253da_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_208726760_Directive>>(nullptr), ._field_errors=jule::Slice<_21e65b904_Log>(nullptr), ._field_ep=jule::Ptr<_209370d9d_exprBuilder>(nullptr)});;
	_2093916b5_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_208737441_ScopeTree> _209361861_newScope(void) {
	return jule::new_ptr<_208737441_ScopeTree>(_208737441_ScopeTree{._field_Parent=jule::Ptr<_208737441_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_208736cd1_Stmt>(nullptr), ._field_End=jule::Ptr<_208711827_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _209361be6_isSt(jule::Ptr<_208711827_Token> _149_current, jule::Ptr<_208711827_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_1433_prev))._field_Row < (*(_149_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_149_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _20936206a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_208711827_Token>>* _2026_tokens, jule::I64* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_208711827_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U64>(17LLU)) || ((*(_263_prev))._field_Id == static_cast<jule::U64>(5LLU))) || (_208712372_IsBinOp((*(_263_prev))._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _209362433_nextStPos(jule::Slice<jule::Ptr<_208711827_Token>>* _3415_tokens, jule::I64 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _356_braceN = 0LL;;
	jule::I64 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_208711827_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_219d5a679:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_20936206a_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _209361be6_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_219d600b8;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_219d59216;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_219d5a8bb:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _209361be6_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_219d600b8;
							};
						};
						goto _iter_next_219d59216;
					}
				}
				_match_end_219d5a822:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_219d59216;
			};
			if ((_366_i > _3440_start)) {
				if (_20936206a_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_219d59216;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _209361be6_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _209361be6_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_219d59216;
			};
			_julec_label_219d600b8:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_219d59216:;
	}
	_iter_end_219d59216:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_208711827_Token__jule_tuple_bool _2093627a7_skipSt(jule::I64* _9616_i, jule::Slice<jule::Ptr<_208711827_Token>> _9628_tokens) {
	__jule_tuple_sx_208711827_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _209362433_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_208711827_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_2093627a7_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_209362ad7_stmt>> _209362e8e_splitStmts(jule::Slice<jule::Ptr<_208711827_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_209362ad7_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_209362ad7_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_209362ad7_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_208711827_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_208711827_Token__jule_tuple_bool __jule_assign_result = _2093627a7_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_209362ad7_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_209362ad7_stmt>(_209362ad7_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_219d62be2:;
	}
	_iter_end_219d62be2:;;
	return _1186_stmts;;
}



inline jule::Bool _20937b4d5_isTypeOp(jule::U64* _87014_id) {
	return ((((*(_87014_id)) == static_cast<jule::U64>(65LLU)) || ((*(_87014_id)) == static_cast<jule::U64>(54LLU))) || ((*(_87014_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _20937b7e3_isTypeRange(jule::Slice<jule::Ptr<_208711827_Token>>* _87721_tokens) {
	jule::Bool _8786_op = false;;
	{
		auto expr = _87721_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e53be5:;
		if (it != expr_end) {
			jule::I64 _8796_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _8799_token = *it;
			{
				if (((*(_8799_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8786_op) {
						return true;;
					};
					jule::I64 _8848_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_208711827_Token>> _8858_lTokens = (*(_87721_tokens)).slice(_8796_i);;
					{
						auto expr = &(_8858_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_219e54b2a:;
						if (it != expr_end) {
							jule::Ptr<_208711827_Token> _88611_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88611_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_219e55e7d:;
										{
											(_8848_rangeN)++;
											goto _iter_next_219e54b2a;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_219e56368:;
										{
											(_8848_rangeN)--;
											goto _iter_next_219e54b2a;
										}
									}
									_match_end_219e56269:;
								};
								if ((_8848_rangeN == 0LL)) {
									return _20937b4d5_isTypeOp(&((*(_88611_lToken))._field_Id));;
								};
							}
							_iter_next_219e54b2a:;
							++it;
							goto _iter_begin_219e54b2a;
						}
						_iter_end_219e54b2a:;
					};
					return true;;
				};
				if ((!(_20937b4d5_isTypeOp(&((*(_8799_token))._field_Id))))) {
					return false;;
				};
				_8786_op=true;
			}
			_iter_next_219e53be5:;
			++it;
			_8796_i++;
			goto _iter_begin_219e53be5;
		}
		_iter_end_219e53be5:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_208711827_Token>> _20937baac_getBlockExpr(jule::Slice<jule::Ptr<_208711827_Token>>* _91022_tokens) {
	jule::I64 _9116_braceN = 0LL;;
	jule::I64 _9126_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91022_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e57d92:;
		if (it != expr_end) {
			jule::I64 _9136_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _9139_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9139_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_219e58e4d:;
						{
							if (((((*(_91022_tokens)).len() - _9136_i) > 1LL) && ((*((*(_91022_tokens))[(_9136_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9126_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_219e58ed6:;
						{
							if (((_9116_braceN > 0LL) || (_9126_skipToNextBraceClose > 0LL))) {
								if ((_9126_skipToNextBraceClose > 0LL)) {
									(_9126_skipToNextBraceClose)--;
								};
								(_9116_braceN)++;
								goto _match_end_219e58d82;
							};
							return (*(_91022_tokens)).slice(0LL, _9136_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_219e5904c:;
						{
							(_9116_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_219e590b3:;
						{
							(_9116_braceN)--;
						}
					}
					_match_end_219e58d82:;
				};
			}
			_iter_next_219e57d92:;
			++it;
			_9136_i++;
			goto _iter_begin_219e57d92;
		}
		_iter_end_219e57d92:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token _20937be75_splitDelim(jule::Slice<jule::Ptr<_208711827_Token>>* _94220_tokens, jule::U64 _94245_delim) {
	__jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token __jule_func_result;
	jule::I64 _9436_func = -1LL;;
	jule::I64 _9446_rangeN = 0LL;;
	jule::I64 _9456_i = 0LL;;
	for (; (_9456_i < (*(_94220_tokens)).len()); (_9456_i)++) {
		{
			jule::Ptr<_208711827_Token> _9473_token = (*(_94220_tokens))[_9456_i];;
			{
				auto &_match_expr{ (*(_9473_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_219e5d859:;
					{
						_9436_func=_9446_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_219e5d8d1:;
					{
						(_9446_rangeN)++;
						goto _iter_next_219e5c2b4;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_219e5d947:;
					{
						(_9446_rangeN)--;
						if ((_9436_func == _9446_rangeN)) {
							_9436_func=-1LL;
							if (((((*(_94220_tokens)).len() - _9456_i) > 1LL) && ((*((*(_94220_tokens))[(_9456_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9456_i)++;
								goto _iter_next_219e5c2b4;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_219e5d9ad:;
					{
						(_9446_rangeN)--;
					}
				}
				_match_end_219e5d5c3:;
			};
			if ((((*(_9473_token))._field_Id == _94245_delim) && (_9446_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_208711827_Token>> _9718_l = (*(_94220_tokens)).slice(0LL, _9456_i);;
				jule::Slice<jule::Ptr<_208711827_Token>> _9728_r = (*(_94220_tokens)).slice((_9456_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9718_l;
				__jule_func_result.__jule_result_arg1 = _9728_r;
				return __jule_func_result;;
			};
		}
	_iter_next_219e5c2b4:;
	}
	_iter_end_219e5c2b4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _20937c23e_findLowestPrecOp(jule::Slice<jule::Ptr<_208711827_Token>>* _98122_tokens) {
	jule::U8 _9866_prec = 255LLU;;
	jule::I64 _9876_precPos = -1LL;;
	jule::I64 _9896_braceN = 0LL;;
	jule::Bool _9906_skipToNextBraceOpen = false;;
	{
		auto expr = _98122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_219e63a07:;
		if (it != expr_end) {
			jule::I64 _9916_i = it - expr->begin();
			jule::Ptr<_208711827_Token> *_9919_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9919_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_219e6483d:;
						{
							_9906_skipToNextBraceOpen=false;
							goto _case_begin_219e648c6;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_219e648c6:;
						{
							(_9896_braceN)++;
							goto _iter_next_219e63a07;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_219e6493c:;
						{
							(_9896_braceN)--;
							goto _iter_next_219e63a07;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_219e649a3:;
						{
							_9906_skipToNextBraceOpen=true;
							goto _iter_next_219e63a07;
						}
					}
					_match_end_219e64772:;
				};
				{
					
					if (_9906_skipToNextBraceOpen) {
						_case_begin_219e66125:;
						{
							goto _iter_next_219e63a07;
						}
					}
					else if ((_9916_i == 0LL)) {
						_case_begin_219e6618b:;
						{
							goto _iter_next_219e63a07;
						}
					}
					else if ((_9896_braceN > 0LL)) {
						_case_begin_219e66202:;
						{
							goto _iter_next_219e63a07;
						}
					}
					else if ((!(_208712372_IsBinOp((*((*(_9919_token))))._field_Id)))) {
						_case_begin_219e66268:;
						{
							goto _iter_next_219e63a07;
						}
					}
					_match_end_219e65e27:;
				};
				jule::Ptr<_208711827_Token> _10203_left = (*(_98122_tokens))[(_9916_i - 1LL)];;
				if ((_208712064_IsUnaryOp((*(_10203_left))._field_Id) || ((*(_10203_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_219e63a07;
				};
				if (((_9916_i > 1LL) && ((*(_10203_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_208711827_Token> _10284_lleft = (*(_98122_tokens))[(_9916_i - 2LL)];;
					if (((*(_10284_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_9919_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_9919_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_219e63a07;
						};
					};
				};
				jule::U8 _10373_p = _208711bce_Prec((*(_9919_token)).ptr());;
				if (((_10373_p != 0LLU) && (_10373_p <= _9866_prec))) {
					_9866_prec=_10373_p;
					_9876_precPos=_9916_i;
				};
			}
			_iter_next_219e63a07:;
			++it;
			_9916_i++;
			goto _iter_begin_219e63a07;
		}
		_iter_end_219e63a07:;
	};
	return _9876_precPos;;
}



inline jule::Ptr<_20872ce92_IdentExpr> _20937c508_buildIdentExpr(jule::Ptr<_208711827_Token>* _104624_token) {
	return jule::new_ptr<_20872ce92_IdentExpr>(_20872ce92_IdentExpr{._field_Token=(*(_104624_token)), ._field_Ident=(*((*(_104624_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_208711827_Token__jule_tuple_int _20937c7c2_getRangeExprTokens(jule::Slice<jule::Ptr<_208711827_Token>>* _105428_tokens) {
	__jule_tuple_sx_208711827_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10556_rangeN = 0LL;;
	jule::I64 _10566_i = ((*(_105428_tokens)).len() - 1LL);;
	for (; (_10566_i >= 0LL); (_10566_i)--) {
		{
			jule::Ptr<_208711827_Token> _10583_tok = (*(_105428_tokens))[_10566_i];;
			{
				auto &_match_expr{ (*(_10583_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_219e6cdb8:;
					{
						(_10556_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_219e6d1e8:;
					{
						(_10556_rangeN)--;
					}
				}
				_match_end_219e6ce40:;
			};
			if ((_10556_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105428_tokens)).slice(0LL, _10566_i);
				__jule_func_result.__jule_result_arg1 = _10556_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_219e6c45b:;
	}
	_iter_end_219e6c45b:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10556_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _20937cb9b_isAnonFnHead(jule::Slice<jule::Ptr<_208711827_Token>>* _107718_tokens) {
	{
		auto &_match_expr{ (*((*(_107718_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_219e6c7ad:;
			{
				if ((((*(_107718_tokens)).len() == 1LL) || ((*((*(_107718_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_219e6eea8;
				};
				goto _case_begin_219e700eb;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_219e700eb:;
			{
				if (((*((*(_107718_tokens))[((*(_107718_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_219e6eea8;
				};
				return true;;
			}
		}
		_match_end_219e6eea8:;
	};
	return false;;
}



inline jule::Bool _20937d84a_checkAssignTokens(jule::Slice<jule::Ptr<_208711827_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_2087163a9_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a013a52:;
		if (it != expr_end) {
			jule::Ptr<_208711827_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21a01437c:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_21a014723:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_21a014624:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_21a01578a:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_21a015801:;
						{
							goto _iter_next_21a013a52;
						}
					}
					else if (_20871693c_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_21a015867:;
						{
							return true;;
						}
					}
					_match_end_21a015724:;
				};
			}
			_iter_next_21a013a52:;
			++it;
			goto _iter_begin_21a013a52;
		}
		_iter_end_21a013a52:;
	};
	return false;;
}



inline _21e65b904_Log _20937e807_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_2087173cc_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _21e65b904_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_21e65bd66_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_208711827_Token>> _20937ed35_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_208711827_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_208711827_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I64 _396_rangeN = 1LL;;
	jule::I64 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_208711827_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_21a01a790:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_21a01ab03:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_21a01aa6a:;
			};
		}
	_iter_next_21a019bac:;
	}
	_iter_end_21a019bac:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token _2093800ee_rangeLast(jule::Slice<jule::Ptr<_208711827_Token>>* _6019_tokens) {
	__jule_tuple_sx_208711827_Token__jule_tuple_sx_208711827_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U64>(73LLU)) && (_642_first != static_cast<jule::U64>(76LLU))) && (_642_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _706_braceN = 0LL;;
	jule::I64 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_208711827_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21a01e8b5:;
					{
						(_706_braceN)++;
						goto _iter_next_21a01dc05;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_21a01ebe5:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_21a01e93c:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_21a01dc05:;
	}
	_iter_end_21a01dc05:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log _2093805a5_parts(jule::Slice<jule::Ptr<_208711827_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_208711827_Token__jule_tuple_s_21e65b904_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1026_rangeN = 0LL;;
	jule::I64 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a026999:;
		if (it != expr_end) {
			jule::I64 _1046_i = it - expr->begin();
			jule::Ptr<_208711827_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21a028869:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_21a0288e1:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_21a028957:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_21a026999;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_21e65b904_Log _1155_err = _20937e807_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_21e65b904_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_21a02879d:;
				};
			}
			_iter_next_21a026999:;
			++it;
			_1046_i++;
			goto _iter_begin_21a026999;
		}
		_iter_end_21a026999:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_208711827_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _20938083b_getCloseOfBrace(jule::U64 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_21a02bd34:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_21a02bd9a:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_21a02be11:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_21a0299be:;
			{
				return _12820_left;;
			}
		}
		_match_end_21a029a9b:;
	};
}



inline _21e65b904_Log _209380c6a_compilerErr(jule::Ptr<_208711827_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _21e65b904_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_21e65bd66_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_2087188b7_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _209381111_pushSuggestion(_21e65b904_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_21e65bd66_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_208727343_TypeDecl> _209392078_buildVoidType(void) {
	return jule::new_ptr<_208727343_TypeDecl>(_208727343_TypeDecl{._field_Token=jule::Ptr<_208711827_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _208ae7adc_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_21a1d147d:;
			{
				__jule_func_result.__jule_result_arg0=_21e65eb27_IsWindows(_220c6c8d7_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_21a1d14e4:;
			{
				__jule_func_result.__jule_result_arg0=_21e65ee35_IsDarwin(_220c6c8d7_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_21a1d115e:;
			{
				__jule_func_result.__jule_result_arg0=_21e6601ee_IsLinux(_220c6c8d7_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_21a1d11c5:;
			{
				__jule_func_result.__jule_result_arg0=_21e660d59_IsUnix(_220c6c8d7_OS);
			}
		}
		else {
			_case_begin_21a1d0aba:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_21a1d103d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _208ae2e4a_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_21a1d3958:;
			{
				__jule_func_result.__jule_result_arg0=_21e660540_IsI386(_220c6cb90_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_21a1d39be:;
			{
				__jule_func_result.__jule_result_arg0=_21e6607c6_IsAmd64(_220c6cb90_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_21a1d3639:;
			{
				__jule_func_result.__jule_result_arg0=_21e660a90_IsArm64(_220c6cb90_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_21a1d36a0:;
			{
				__jule_func_result.__jule_result_arg0=_21e661475_Is64Bit(_220c6cb90_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_21a1d3716:;
			{
				__jule_func_result.__jule_result_arg0=_21e661233_Is32Bit(_220c6cb90_Arch);
			}
		}
		else {
			_case_begin_21a1d3095:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_21a1d3518:;
	};
	return __jule_func_result;;
}



inline void _208b0e3b7_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_220c6c8d7_OS); };
	if (_21e660d59_IsUnix(_220c6c8d7_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _208b0e63c_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_220c6cb90_Arch); };
	if (_21e661475_Is64Bit(_220c6cb90_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_21e661233_Is32Bit(_220c6cb90_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _208b0e928_initVars(jule::Slice<jule::Str>* _5518_vars, _208b0e098_CompileInfo* _5532_info) {
	_208b0e3b7_setOsVars(_5518_vars);
	_208b0e63c_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_21a1d7e79:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_21a1d78e6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_21a1d7880:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_21a1d797e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_21a1d9002:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_21a1d8771:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_21a1d8e69:;
	};
}



inline jule::I64 _208b0ece1_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a1da894:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_21a1da894:;
			++it;
			_886_i++;
			goto _iter_begin_21a1da894;
		}
		_iter_end_21a1da894:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _209396148_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__21e811a65_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_2175dc518_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_21e89a5d2_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _21e65b904_Log _209396456_flatCompilerErr(jule::Str _2820_text) {
	return _21e65b904_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_20881e2b4_Fn> _208a611c6_RuntimeFindFn(jule::Ptr<_20890d040_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_20881e2b4_Fn> _96_f = _20890e64b_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_208746230_Struct> _208a6158e_RuntimeFindStruct(jule::Ptr<_20890d040_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_208746230_Struct> _186_f = _20890e250_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline jule::Uintptr _208a622b5_TypeData(jule::Any* _1414_m) {
	return ((jule::Uintptr)((*(((_208a620c8_anyData*)(_1414_m))))._field_typePtr));;
}



inline jule::Bool _208a6267d_equalConst(jule::Ptr<_208799195_Const> _1815_l, jule::Ptr<_208799195_Const> _1836_r) {
	{
		
		if (_208809711_IsI64(_1815_l.ptr())) {
			_case_begin_21a23bc58:;
			{
				return (_208809711_IsI64(_1836_r.ptr()) && (_208807115_ReadI64(_1815_l) == _208807115_ReadI64(_1836_r)));;
			}
		}
		else if (_208809997_IsU64(_1815_l.ptr())) {
			_case_begin_21a23bcbe:;
			{
				return (_208809997_IsU64(_1836_r.ptr()) && (_20880739b_ReadU64(_1815_l) == _20880739b_ReadU64(_1836_r)));;
			}
		}
		else if (_20880a24a_IsF64(_1815_l)) {
			_case_begin_21a23bd46:;
			{
				return (_20880a24a_IsF64(_1836_r) && (_208807b4e_ReadF64(_1815_l) == _208807b4e_ReadF64(_1836_r)));;
			}
		}
		else if (_208809eb4_IsStr(_1815_l)) {
			_case_begin_21a23bdbd:;
			{
				return (_208809eb4_IsStr(_1836_r) && (_2088078b8_ReadStr(_1815_l) == _2088078b8_ReadStr(_1836_r)));;
			}
		}
		else if (_208809c2d_IsBool(_1815_l)) {
			_case_begin_21a23be45:;
			{
				return (_208809c2d_IsBool(_1836_r) && (_208807632_ReadBool(_1815_l) == _208807632_ReadBool(_1836_r)));;
			}
		}
		else if (_20880a4d1_IsNil(_1815_l)) {
			_case_begin_21a23c0dd:;
			{
				return _20880a4d1_IsNil(_1836_r);;
			}
		}
		else {
			_case_begin_21a23bb6a:;
			{
				return false;;
			}
		}
		_match_end_21a23ba5a:;
	};
}



inline jule::Bool _208a62a02_equalCasting(jule::Ptr<_2088136c6_CastingExpr> _3717_l, jule::Ptr<_2088136c6_CastingExpr> _3740_r) {
	if ((!(_2089ced9d_Equal((*(_3717_l))._field_Type, (*(_3740_r))._field_Type)))) {
		return false;;
	};
	return _208a63937_EqualModels((*((*(_3717_l))._field_Expr))._field_Model, (*(*(_3740_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _208a62dba_equalUnary(jule::Ptr<_208812472_UnaryExpr> _4415_l, jule::Ptr<_208812472_UnaryExpr> _4436_r) {
	if ((((*((*(_4415_l))._field_Op))._field_Id != (*(*(_4436_r))._field_Op.alloc)._field_Id) || ((*((*(_4415_l))._field_Op))._field_Kind != (*(*(_4436_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _208a63937_EqualModels((*((*(_4415_l))._field_Expr))._field_Model, (*(*(_4436_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _208a6323e_equalIndexing(jule::Ptr<_208814908_IndexingExpr> _5118_l, jule::Ptr<_208814908_IndexingExpr> _5142_r) {
	return (_208a63937_EqualModels((*((*(_5118_l))._field_Expr))._field_Model, (*(*(_5142_r))._field_Expr.alloc)._field_Model) && _208a63937_EqualModels((*((*_5118_l.alloc)._field_Index))._field_Model, (*(*(_5142_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _208a635b3_equalBinary(jule::Ptr<_208812098_BinaryExpr> _5616_l, jule::Ptr<_208812098_BinaryExpr> _5638_r) {
	if ((((*((*(_5616_l))._field_Op))._field_Id != (*(*(_5638_r))._field_Op.alloc)._field_Id) || ((*((*(_5616_l))._field_Op))._field_Kind != (*(*(_5638_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_208a63937_EqualModels((*((*(_5616_l))._field_Left))._field_Model, (*(*(_5638_r))._field_Left.alloc)._field_Model) && _208a63937_EqualModels((*((*_5616_l.alloc)._field_Right))._field_Model, (*(*(_5638_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _208a63937_EqualModels(jule::Any _6716_l, jule::Any _6731_r) {
	if ((_208a622b5_TypeData(&(_6716_l)) != _208a622b5_TypeData(&(_6731_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6716_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a24aea9:;
			{
				return (_6716_l.unsafe_cast_ptr<_20894d7de_Var>() == _6731_r.cast_ptr<_20894d7de_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a24b482:;
			{
				jule::Ptr<_208816b19_StructSubIdentExpr> _753_li = _6716_l.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>();;
				jule::Ptr<_208816b19_StructSubIdentExpr> _763_ri = _6731_r.cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				return (((*(_753_li))._field_Field == (*(_763_ri))._field_Field) && _208a63937_EqualModels((*((*_753_li.alloc)._field_Expr))._field_Model, (*(*(_763_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a24b4e8:;
			{
				return _208a6267d_equalConst(_6716_l.unsafe_cast_ptr<_208799195_Const>(), _6731_r.cast_ptr<_208799195_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21a24b55e:;
			{
				return _208a62a02_equalCasting(_6716_l.unsafe_cast_ptr<_2088136c6_CastingExpr>(), _6731_r.cast_ptr<_2088136c6_CastingExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a24b5c5:;
			{
				return _208a62dba_equalUnary(_6716_l.unsafe_cast_ptr<_208812472_UnaryExpr>(), _6731_r.cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21a24b196:;
			{
				return _208a6323e_equalIndexing(_6716_l.unsafe_cast_ptr<_208814908_IndexingExpr>(), _6731_r.cast_ptr<_208814908_IndexingExpr>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a24b20c:;
			{
				return _208a635b3_equalBinary(_6716_l.unsafe_cast_ptr<_208812098_BinaryExpr>(), _6731_r.cast_ptr<_208812098_BinaryExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_21a24a96a:;
			{
				return false;;
			}
		}
		_match_end_21a24a904:;
	};
}



inline void _20939ac41_pushPasses(jule::Ptr<_2089107b2_Package>* _12820_p, jule::Slice<jule::Str>* _12844_passes) {
	{
		auto expr = &((*((*(_12820_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2513cc:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _12914_f = *it;
			{
				_julec_label_21a251a92:;
				{
					auto expr = &((*(_12914_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a251ed2:;
					if (it != expr_end) {
						_2088ec518_Pass _13110_pass = *it;
						{
							if ((_13110_pass._field_Text).empty()) {
								goto _iter_next_21a251ed2;
							};
							{
								auto expr = _12844_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_21a2527b8:;
								if (it != expr_end) {
									jule::Str _13511_cpass = *it;
									{
										if ((_13511_cpass == _13110_pass._field_Text)) {
											goto _iter_next_21a251ed2;
										};
									}
									_iter_next_21a2527b8:;
									++it;
									goto _iter_begin_21a2527b8;
								}
								_iter_end_21a2527b8:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12844_passes)); __jule_push_dest.push(_13110_pass._field_Text); };
						}
						_iter_next_21a251ed2:;
						++it;
						goto _iter_begin_21a251ed2;
					}
					_iter_end_21a251ed2:;
				};
			}
			_iter_next_21a2513cc:;
			++it;
			goto _iter_begin_21a2513cc;
		}
		_iter_end_21a2513cc:;
	};
}



inline jule::Slice<jule::Str> _20939b109_getAllUniquePasses(jule::Ptr<_2089107b2_Package>* _14528_pkg, jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _14553_uses) {
	jule::Slice<jule::Str> _14610_passes = nullptr;;
	_20939ac41_pushPasses(_14528_pkg, &(_14610_passes));
	{
		auto expr = &(_14553_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2539c8:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _14914_u = *it;
			{
				if ((!((*(_14914_u))._field_Binded))) {
					_20939ac41_pushPasses(&((*_14914_u.alloc)._field_Package), &(_14610_passes));
				};
			}
			_iter_next_21a2539c8:;
			++it;
			goto _iter_begin_21a2539c8;
		}
		_iter_end_21a2539c8:;
	};
	return _14610_passes;;
}



inline _208b0e098_CompileInfo _20939b318_buildCompileInfo(void) {
	_208b0e098_CompileInfo _1596_info = _208b0e098_CompileInfo{._field_Prod=_220c73ee8_Production, ._field_Test=_220c73635_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _220c71721_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_21a254c71:;
			{
				_1596_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_21a254db4:;
			{
				_1596_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_21a254ce8:;
	};
	{
		auto &_match_expr{ _220c72d2c_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_21a254e4c:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_21a255b40:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_21a2553c0:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_21a255de8:;
	};
	return _1596_info;;
}



inline void _20939b5c1_pushRuntimeToAST(jule::Ptr<_2087253da_AST>* _18426_f) {
	jule::Ptr<_20874036c_UseDecl> _1856_decl = jule::new_ptr<_20874036c_UseDecl>(_20874036c_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_208711827_Token>(_208711827_Token{._field_File=jule::Ptr<_2087173cc_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U64>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_20874036c_UseDecl>> &__jule_push_dest = (*((*(_18426_f))))._field_UseDecls; __jule_push_dest.push(_1856_decl); };
	if (((*((*(_18426_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_18426_f))))._field_UseDecls[((*((*(_18426_f))))._field_UseDecls.len() - 1LL)]=(*((*(_18426_f))))._field_UseDecls[0LL];
		(*((*(_18426_f))))._field_UseDecls[0LL]=_1856_decl;
	};
}



inline void _20939bcdb_IterPackages(jule::Ptr<_20939938d_IR>* _722_ir, jule::Fn<void,jule::Ptr<_2089107b2_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a266942:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_21a266942:;
			++it;
			goto _iter_begin_21a266942;
		}
		_iter_end_21a266942:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _20939c03e_IterFiles(jule::Ptr<_2089107b2_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_2088255b7_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a277cd8:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_21a277cd8:;
			++it;
			goto _iter_begin_21a277cd8;
		}
		_iter_end_21a277cd8:;
	};
}



inline void _20939c32a_IterTraitMethods(jule::Ptr<_2088299c8_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_20881e2b4_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2789cb:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_21a2789cb:;
			++it;
			goto _iter_begin_21a2789cb;
		}
		_iter_end_21a2789cb:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a278ea4:;
		if (it != expr_end) {
			jule::Ptr<_2089d7a65_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_2088299c8_Trait> _297_it = _2089d4314_Trait((*(_2814_inh))._field_Type.ptr());;
				_20939c32a_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_21a278ea4:;
			++it;
			goto _iter_begin_21a278ea4;
		}
		_iter_end_21a278ea4:;
	};
}



inline jule::Bool _20939e55d_IsForwarded(jule::Ptr<_2088ca969_Scope>* _1117_s) {
	jule::Any _122_last = (*((*(_1117_s))))._field_Stmts[((*((*(_1117_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _122_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_21a2a174b:;
			{
				{
					auto &_match_expr{ (*(_122_last.cast_ptr<_20899a9a1_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_21a2a1e44:;
						{
							return true;;
						}
					}
					else {
						_case_begin_21a2a2571:;
						{
							return false;;
						}
					}
					_match_end_21a2a250a:;
				};
			}
		}
		else {
			_case_begin_21a2a18c2:;
			{
				return true;;
			}
		}
		_match_end_21a2a185b:;
	};
}



inline jule::Bool _20939e86b_IsExprComesFromBind(jule::Ptr<_20899a9a1_Data>* _2725_d) {
	{
		auto &_match_expr{ (*((*(_2725_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a2a31a9:;
			{
				return (*((*((*(_2725_d))))._field_Model.unsafe_cast_ptr<_20894d7de_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a2a3242:;
			{
				return _2093a0cce_IsStructBinded((*((*((*(_2725_d))))._field_Model.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>()))._field_Owner);;
			}
		}
		else {
			_case_begin_21a2a1ae2:;
			{
				return false;;
			}
		}
		_match_end_21a2a1a7b:;
	};
}



inline jule::Bool _20939eb35_IsAny(jule::Ptr<_2089ce661_Type>* _3915_t) {
	if ((_2089d32ad_TypeEnum((*(_3915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_2089d846c_Prim> _432_prim = _2089d2774_Prim((*(_3915_t)).ptr());;
	return ((_432_prim != nullptr) && _2089dbbbd_IsAny(_432_prim.ptr()));;
}



inline jule::Bool _20939ee76_IsClosure(jule::Ptr<_208814dae_AnonFnExpr>* _4815_m) {
	return ((*((*(_4815_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _2093a02b7_IsTraitMethod(jule::Ptr<_2087490bd_StructIns>* _5123_owner, jule::Ptr<_208822372_FnIns>* _5149_f) {
	{
		auto expr = &((*((*((*(_5123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2a66c9:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _5214_t = *it;
			{
				if ((_20882a6aa_FindMethod(_5214_t.ptr(), (*((*((*(_5149_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_21a2a66c9:;
			++it;
			goto _iter_begin_21a2a66c9;
		}
		_iter_end_21a2a66c9:;
	};
	return false;;
}



inline jule::Bool _2093a063b_IsStdPackage(jule::Str _6517_f, jule::Str _6525_p) {
	return _220c5c157_HasPrefix(_6517_f, _220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _220c6bce3_PathStdlib; (*it++) = _6525_p; __jule_collection; })));;
}



inline jule::Bool _2093a0cce_IsStructBinded(jule::Ptr<_2087490bd_StructIns> _7919_s) {
	if ((*((*(_7919_s))._field_Decl))._field_Binded) {
		return true;;
	};
	if (((*(_7919_s))._field_Source != nullptr)) {
		{
			auto &_match_expr{ (*((*(_7919_s))._field_Source))._field_Kind };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
				_case_begin_21a2a9897:;
				{
					return _2093a0cce_IsStructBinded((*(*(_7919_s))._field_Source.alloc)._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0));;
				}
			}
			_match_end_21a2a9820:;
		};
	};
	return false;;
}



inline jule::Ptr<_208726760_Directive> _2093a152c_FindDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2a9de7:;
		if (it != expr_end) {
			jule::Ptr<_208726760_Directive> _1014_dr = *it;
			{
				if (((*((*(_1014_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1014_dr;;
				};
			}
			_iter_next_21a2a9de7:;
			++it;
			goto _iter_begin_21a2a9de7;
		}
		_iter_end_21a2a9de7:;
	};
	return nullptr;;
}



inline jule::Bool _2093a18e5_HasDirective(jule::Slice<jule::Ptr<_208726760_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_2093a152c_FindDirective(_1918_directives, _1949_tag) != nullptr);;
}



inline jule::I64 _2093a242e_FindTraitTypeOffsetS(jule::Ptr<_2088299c8_Trait> _3725_t, jule::Ptr<_2087490bd_StructIns> _3746_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _416_i = 0LL;;
	{
		auto expr = &((*(_3725_t))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2ae1a4:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> *_429_si = it;
			{
				if (((*(_3746_s))._field_Decl == (*(_429_si)))) {
					{
						auto expr = &((*((*(_429_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21a2b012d:;
						if (it != expr_end) {
							jule::Ptr<_2087490bd_StructIns> *_4411_ins = it;
							{
								if (((*(_4411_ins)) == _3746_s)) {
									return _416_i;;
								};
								(_416_i)++;
							}
							_iter_next_21a2b012d:;
							++it;
							goto _iter_begin_21a2b012d;
						}
						_iter_end_21a2b012d:;
					};
					goto _iter_end_21a2ae1a4;
				} else {
					_416_i+=(*(*(_429_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_21a2ae1a4:;
			++it;
			goto _iter_begin_21a2ae1a4;
		}
		_iter_end_21a2ae1a4:;
	};
	return -1LL;;
}



inline jule::I64 _2093a27a3_FindTraitTypeOffset(jule::Ptr<_2088299c8_Trait> _6024_t, jule::Ptr<_2089ce661_Type> _6045_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_2087490bd_StructIns> _6410_s = nullptr;;
	{
		auto &_match_expr{ (*(_6045_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)) {
			_case_begin_21a2b1cab:;
			{
				_6045_k=(*((*(_6045_k))._field_Kind.cast_ptr<_2089dbe98_Sptr>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)))._field_Elem;
				{
					auto &_match_expr{ (*(_6045_k))._field_Kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
						_case_begin_21a2b2d89:;
						{
							_6410_s=(*_6045_k.alloc)._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);
						}
					}
					_match_end_21a2b2d12:;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_21a2b19d1:;
			{
				_6410_s=(*(_6045_k))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);
			}
		}
		_match_end_21a2b1c23:;
	};
	if ((_6410_s == nullptr)) {
		return -1LL;;
	};
	return _2093a242e_FindTraitTypeOffsetS(_6024_t, _6410_s);;
}



inline jule::Ptr<_208822372_FnIns> _2093a2b27_FindFnGenericInstance(jule::Ptr<_20881e2b4_Fn>* _8431_f, jule::Slice<jule::Ptr<_2089ce661_Type>> _8445_generics) {
	_julec_label_21a2b4187:;
	{
		auto expr = &((*((*(_8431_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2b46b5:;
		if (it != expr_end) {
			jule::Ptr<_208822372_FnIns> _8614_ins = *it;
			{
				{
					auto expr = &((*(_8614_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2b5155:;
					if (it != expr_end) {
						jule::I64 _877_i = it - expr->begin();
						{
							if ((!(_2089ced9d_Equal((*((*(_8614_ins))._field_Generics[_877_i]))._field_Type, _8445_generics[_877_i])))) {
								goto _iter_next_21a2b46b5;
							};
						}
						_iter_next_21a2b5155:;
						++it;
						_877_i++;
						goto _iter_begin_21a2b5155;
					}
					_iter_end_21a2b5155:;
				};
				return _8614_ins;;
			}
			_iter_next_21a2b46b5:;
			++it;
			goto _iter_begin_21a2b46b5;
		}
		_iter_end_21a2b46b5:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:94:2"));;
}



inline jule::Ptr<_2087490bd_StructIns> _2093a2e9b_FindStructGenericInstance(jule::Ptr<_208746230_Struct>* _10035_s, jule::Slice<jule::Ptr<_2089ce661_Type>> _10053_generics) {
	_julec_label_21a2b49e5:;
	{
		auto expr = &((*((*(_10035_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2b6772:;
		if (it != expr_end) {
			jule::Ptr<_2087490bd_StructIns> _10214_ins = *it;
			{
				{
					auto expr = &((*(_10214_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2b7212:;
					if (it != expr_end) {
						jule::I64 _1037_i = it - expr->begin();
						{
							if ((!(_2089ced9d_Equal((*((*(_10214_ins))._field_Generics[_1037_i]))._field_Type, _10053_generics[_1037_i])))) {
								goto _iter_next_21a2b6772;
							};
						}
						_iter_next_21a2b7212:;
						++it;
						_1037_i++;
						goto _iter_begin_21a2b7212;
					}
					_iter_end_21a2b7212:;
				};
				return _10214_ins;;
			}
			_iter_next_21a2b6772:;
			++it;
			goto _iter_begin_21a2b6772;
		}
		_iter_end_21a2b6772:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:110:2"));;
}



inline jule::Ptr<_20890d040_ImportInfo> _2093a3430_SelectImport(jule::Slice<jule::Ptr<_20890d040_ImportInfo>> _11521_imports, jule::Str _11551_linkpath) {
	{
		auto expr = &(_11521_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2b6b29:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> _11614_imp = *it;
			{
				if (((*(_11614_imp))._field_LinkPath == _11551_linkpath)) {
					return _11614_imp;;
				};
			}
			_iter_next_21a2b6b29:;
			++it;
			goto _iter_begin_21a2b6b29;
		}
		_iter_end_21a2b6b29:;
	};
	return nullptr;;
}



inline jule::I64 _2093a372c_FindVar(jule::Ptr<_20894d7de_Var> _12512_v, jule::Slice<jule::Ptr<_20894d7de_Var>> _12527_vars) {
	{
		auto expr = &(_12527_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2b89a5:;
		if (it != expr_end) {
			jule::I64 _1266_i = it - expr->begin();
			jule::Ptr<_20894d7de_Var> *_1269_v2 = it;
			{
				if ((_12512_v == (*(_1269_v2)))) {
					return _1266_i;;
				};
			}
			_iter_next_21a2b89a5:;
			++it;
			_1266_i++;
			goto _iter_begin_21a2b89a5;
		}
		_iter_end_21a2b89a5:;
	};
	return -1LL;;
}



inline jule::Str _2093a39e6_GetBindIdent(jule::Ptr<_2089ce661_Type> _13617_t) {
	{
		auto &_match_expr{ (*(_13617_t))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)) {
			_case_begin_21a2b9995:;
			{
				jule::Ptr<_2087490bd_StructIns> _1393_s = (*(_13617_t))._field_Kind.cast_ptr<_2087490bd_StructIns>((jule::Trait::Type*)&_2089ce287_Kind_mptr_data0);;
				if ((*((*(_1393_s))._field_Decl))._field_Binded) {
					return (*(*(_1393_s))._field_Decl.alloc)._field_Ident;;
				};
				if (((*(_1393_s))._field_Source != nullptr)) {
					return _2093a39e6_GetBindIdent((*_1393_s.alloc)._field_Source);;
				};
			}
		}
		_match_end_21a2b992e:;
	};
	return jule::Str();;
}



inline jule::Bool _21a26ce87_isOrdered(jule::Ptr<_20894d7de_Var>* _1418_t, jule::Slice<jule::Ptr<_20894d7de_Var>> _1425_s) {
	_julec_label_21a26ed46:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a2702a8:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_21a270b16:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_21a2702a8;
							};
						}
					}
					_match_end_21a270a5b:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2712cb:;
					if (it != expr_end) {
						jule::Ptr<_20894d7de_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_21a2702a8;
							};
						}
						_iter_next_21a2712cb:;
						++it;
						goto _iter_begin_21a2712cb;
					}
					_iter_end_21a2712cb:;
				};
				return false;;
			}
			_iter_next_21a2702a8:;
			++it;
			goto _iter_begin_21a2702a8;
		}
		_iter_end_21a2702a8:;
	};
	return true;;
}

inline jule::Bool _21a273a81_isOrdered(jule::Ptr<_208746230_Struct>* _1418_t, jule::Slice<jule::Ptr<_208746230_Struct>> _1425_s) {
	_julec_label_21a2758eb:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a275d5d:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a2767ed:;
					if (it != expr_end) {
						jule::Ptr<_208746230_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_21a275d5d;
							};
						}
						_iter_next_21a2767ed:;
						++it;
						goto _iter_begin_21a2767ed;
					}
					_iter_end_21a2767ed:;
				};
				return false;;
			}
			_iter_next_21a275d5d:;
			++it;
			goto _iter_begin_21a275d5d;
		}
		_iter_end_21a275d5d:;
	};
	return true;;
}



inline void _21a26a1c6_order(jule::Slice<jule::Ptr<_20894d7de_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_21a26a69e:;
	jule::I64 _406_j = _386_i;;
	_julec_label_21a26b3c5:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_20894d7de_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_21a26c618:;
				if (it != expr_end) {
					jule::Ptr<_20894d7de_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_21a26b97a;
						};
					}
					_iter_next_21a26c618:;
					++it;
					goto _iter_begin_21a26c618;
				}
				_iter_end_21a26c618:;
			};
			if (_21a26ce87_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_21a26b97a:;
	}
	_iter_end_21a26b97a:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_21a26a69e;
	};
}

inline void _21a26a902_order(jule::Slice<jule::Ptr<_208746230_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_21a26aa45:;
	jule::I64 _406_j = _386_i;;
	_julec_label_21a27083b:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_208746230_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_21a273212:;
				if (it != expr_end) {
					jule::Ptr<_208746230_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_21a272574;
						};
					}
					_iter_next_21a273212:;
					++it;
					goto _iter_begin_21a273212;
				}
				_iter_end_21a273212:;
			};
			if (_21a273a81_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_21a272574:;
	}
	_iter_end_21a272574:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_21a26aa45;
	};
}



inline void _21a46b185_Reverse(jule::Slice<jule::Any> _7327_s) {
	jule::I64 _7413_j = (_7327_s.len() - 1LL);;
	jule::I64 _746_i = 0LL;;
	for (; (_746_i < _7413_j); ({
		jule::I64 ___jule_assign_arg = (_746_i + 1LL);
		jule::I64 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_21a46bd56:;
	}
	_iter_end_21a46bd56:;;
}

inline void _21acaecc5_Reverse(jule::Slice<jule::U8> _7327_s) {
	jule::I64 _7413_j = (_7327_s.len() - 1LL);;
	jule::I64 _746_i = 0LL;;
	for (; (_746_i < _7413_j); ({
		jule::I64 ___jule_assign_arg = (_746_i + 1LL);
		jule::I64 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_21acb0952:;
	}
	_iter_end_21acb0952:;;
}



inline void _21a469d54_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I64 _4230_r) {
	_21a46b185_Reverse(_4222_s.slice(0LL, _4230_r));
	_21a46b185_Reverse(_4222_s.slice(_4230_r));
	_21a46b185_Reverse(_4222_s);
}

inline void _21acad9d8_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I64 _4230_r) {
	_21acaecc5_Reverse(_4222_s.slice(0LL, _4230_r));
	_21acaecc5_Reverse(_4222_s.slice(_4230_r));
	_21acaecc5_Reverse(_4222_s);
}



inline void _21a4677d0_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I64 _4831_r) {
	_21a469d54_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}

inline void _21acab4a8_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I64 _4831_r) {
	_21acad9d8_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _21a464b84_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U64 _572_elemSize = sizeof(jule::Any);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))));;
}

inline jule::Bool _21aca88a1_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U64 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::Any> _21a45e3ba_Insert(jule::Slice<jule::Any> _7226_s, jule::I64 _7232_i, jule::Slice<jule::Any> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I64 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I64 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::Any> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_21a464b84_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_21a4677d0_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}

inline jule::Slice<jule::U8> _21aca4737_Insert(jule::Slice<jule::U8> _7226_s, jule::I64 _7232_i, jule::Slice<jule::U8> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I64 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I64 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_21aca88a1_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_21acab4a8_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline void _2171cb547_EliminateDefines(jule::Ptr<_20939938d_IR>* _35226_ir) {
	jule::Ptr<_2171c8368_ObjectDeadCode> _3536_ocd = static__2171c8852_new(_35226_ir);;
	_2171cb24a_elimanate(_3536_ocd);
}



inline jule::Bool _2171cb855_isAllMethodsLive(jule::Ptr<_208746230_Struct> _35821_s) {
	return ((_35821_s == (*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_Map) || (_35821_s == (*((*(_2093a4b90_ProgramMeta))._field_Runtime))._field_MapIterator));;
}



inline void _2171d06c2_eliminateDeadCodeOfScope(jule::Ptr<_2088ca969_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_2088cd472_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cd472_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088cd472_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_2088cdad2_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2088cdad2_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_2171cc48d_scopeDeadCode> _2216_sdc = jule::new_ptr<_2171cc48d_scopeDeadCode>(_2171cc48d_scopeDeadCode{._field_parent=jule::Ptr<_2171cc48d_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_2088cd472_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_2088cdad2_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_2171d03c5_optimizeStmts(_2216_sdc);
	};
}



inline void _2171d0947_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20881e2b4_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a34a7d4:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a34b494:;
					if (it != expr_end) {
						jule::Ptr<_208822372_FnIns> _23215_ins = *it;
						{
							_2171d06c2_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_21a34b494:;
						++it;
						goto _iter_begin_21a34b494;
					}
					_iter_end_21a34b494:;
				};
			}
			_iter_next_21a34a7d4:;
			++it;
			goto _iter_begin_21a34a7d4;
		}
		_iter_end_21a34a7d4:;
	};
}



inline void _2171d0b78_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_208746230_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a34c044:;
		if (it != expr_end) {
			jule::Ptr<_208746230_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a34c594:;
					if (it != expr_end) {
						jule::Ptr<_2087490bd_StructIns> _24115_ins = *it;
						{
							_2171d0947_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_21a34c594:;
						++it;
						goto _iter_begin_21a34c594;
					}
					_iter_end_21a34c594:;
				};
			}
			_iter_next_21a34c044:;
			++it;
			goto _iter_begin_21a34c044;
		}
		_iter_end_21a34c044:;
	};
}



inline void _2171d0e31_eliminateFunctionsScopePackage(jule::Ptr<_2089107b2_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a34d144:;
		if (it != expr_end) {
			jule::Ptr<_2088255b7_SymTab> _24814_f = *it;
			{
				_2171d0947_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_2171d0b78_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_21a34d144:;
			++it;
			goto _iter_begin_21a34d144;
		}
		_iter_end_21a34d144:;
	};
}



inline void _2171d112e_eliminateScopePackage(jule::Ptr<_2089107b2_Package>* _25431_pkg) {
	_2171d0e31_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _2171d1360_EliminateScopes(jule::Ptr<_20939938d_IR>* _25925_ir) {
	jule::I64 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_20890d040_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_2171d112e_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_21a34e9d6:;
	}
	_iter_end_21a34e9d6:;;
	_2171d112e_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline void _216dab4d0_possibleNilRemove(jule::Ptr<_216daa501_nils>* _7527_n, jule::Any _7537_m) {
	if (((*(_7527_n)) != nullptr)) {
		_216daacd7_removeVar((*(_7527_n)).ptr(), _216dabea3_getNilVar(_7537_m));
	};
}



inline jule::Bool _216dab898_isGuaranteedNonNilExpr(jule::Ptr<_216daa501_nils>* _8132_n, jule::Any _8142_m) {
	{
		auto &_match_expr{ _8142_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_21a396434:;
			{
				return true;;
			}
		}
		_match_end_21a3963bd:;
	};
	return (((*(_8132_n)) != nullptr) && _216dab128_isSafe((*(_8132_n)).ptr(), _216dabea3_getNilVar(_8142_m)));;
}



inline jule::Bool _216dabb62_isNilValidType(jule::Ptr<_2089ce661_Type> _8923_t) {
	return (_2089d2a0a_Sptr(_8923_t.ptr()) != nullptr);;
}



inline jule::Uintptr _216dabea3_getNilVar(jule::Any _9114_m) {
	if ((!(_2170bbe60_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9114_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a397cc6:;
			{
				jule::Ptr<_20894d7de_Var> _1003_v = _9114_m.unsafe_cast_ptr<_20894d7de_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9114_m.unsafe_cast_ptr<_20894d7de_Var>());;
				};
				return _216dabea3_getNilVar((*((*((*(_1003_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a397de7:;
			{
				return static_cast<jule::Uintptr>((*(_9114_m.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>()))._field_Field);;
			}
		}
		_match_end_21a397c60:;
	};
	return 0LLU;;
}



inline jule::Bool _2170a8aea_isConstantValidConditionalCase(jule::Ptr<_2088cad43_If>* _100736_i) {
	{
		auto &_match_expr{ (*((*(_100736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a39db12:;
			{
				jule::Ptr<_208799195_Const> _10103_c = (*((*(_100736_i))))._field_Expr.unsafe_cast_ptr<_208799195_Const>();;
				return (_208809c2d_IsBool(_10103_c.ptr()) && _208807632_ReadBool(_10103_c));;
			}
		}
		_match_end_21a3a14c7:;
	};
	return false;;
}



inline jule::Bool _2170a8e08_isUnreachableExpr(jule::Any* _101623_expr) {
	{
		auto &_match_expr{ (*(_101623_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a3a2132:;
			{
				jule::Ptr<_208799195_Const> _10193_c = (*(_101623_expr)).cast_ptr<_208799195_Const>(&__jule_any_type15);;
				return (_208809c2d_IsBool(_10193_c.ptr()) && (!(_208807632_ReadBool(_10193_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a3a194a:;
			{
				jule::Ptr<_208812098_BinaryExpr> _10223_m = (*(_101623_expr)).cast_ptr<_208812098_BinaryExpr>(&__jule_any_type113);;
				if (((*((*(_10223_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_2170a8e08_isUnreachableExpr(&((*((*_10223_m.alloc)._field_Left))._field_Model)) || _2170a8e08_isUnreachableExpr(&((*((*_10223_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_21a3a20bb:;
	};
	return false;;
}



inline jule::Bool _2170a91c2_isConstantValidMatchCase(jule::Ptr<_2088d0c5a_Case>* _103130_case) {
	{
		auto expr = &((*((*(_103130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a3a61e1:;
		if (it != expr_end) {
			jule::Ptr<_20899a9a1_Data> *_10329_expr = it;
			{
				if (((_20899b3db_IsConst((*(_10329_expr)).ptr()) && _208809c2d_IsBool((*(*(_10329_expr)).alloc)._field_Constant.ptr())) && _208807632_ReadBool((*((*(_10329_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_21a3a61e1:;
			++it;
			goto _iter_begin_21a3a61e1;
		}
		_iter_end_21a3a61e1:;
	};
	return false;;
}



inline jule::Bool _2170a9513_isUnreachableConditionalCase(jule::Ptr<_2088cad43_If>* _104034_i) {
	return _2170a8e08_isUnreachableExpr(&((*((*(_104034_i))))._field_Expr));;
}



inline jule::Bool _2170a9799_isUnreachableMatchCase(jule::Ptr<_2088d0c5a_Case>* _104428_case) {
	{
		auto expr = &((*((*(_104428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a3a81d2:;
		if (it != expr_end) {
			jule::Ptr<_20899a9a1_Data> *_10459_expr = it;
			{
				if ((!(_2170a8e08_isUnreachableExpr(&((*((*(_10459_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_21a3a81d2:;
			++it;
			goto _iter_begin_21a3a81d2;
		}
		_iter_end_21a3a81d2:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _2170b2296_checkForBitShiftOpt(jule::Ptr<_208811a9d_OperandExpr>* _96029_l, jule::Ptr<_208811a9d_OperandExpr>* _96057_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::Ptr<_2089d846c_Prim> _9612_lp = _2089d2774_Prim((*((*(_96029_l))))._field_Type.ptr());;
	jule::Ptr<_2089d846c_Prim> _9622_rp = _2089d2774_Prim((*((*(_96057_r))))._field_Type);;
	if (((!(_20889cb4a_IsInt(_2089d87e1_Str(_9612_lp.ptr())))) || (!(_20889cb4a_IsInt(_2089d87e1_Str(_9622_rp.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_20880816b_AsU64((*((*(_96057_r))))._field_Model.cast_ptr<_208799195_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _9702_j = _21ec5de90_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _9712_z = static_cast<jule::U64>(_9702_j);;
	if ((static_cast<jule::F64>(_9712_z) != _9702_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _9712_z;
	return __jule_func_result;;
}



inline jule::Bool _2170b265e_areSameLvalueExpr(jule::Any* _97923_l, jule::Any* _97939_r) {
	{
		auto &_match_expr{ (*(_97923_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a4b3243:;
			{
				return ((*(_97939_r)) == (*(_97923_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a4b2ebd:;
			{
				{
					auto &_match_expr{ (*(_97939_r)) };
					
					if (_match_expr.type == &__jule_any_type99) {
						_case_begin_21a4b3ee1:;
						{
							goto _match_end_21a4b38a3;
						}
					}
					else {
						_case_begin_21a4b3919:;
						{
							return false;;
						}
					}
					_match_end_21a4b38a3:;
				};
				jule::Ptr<_208816b19_StructSubIdentExpr> _9923_lsi = (*(_97923_l)).cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				jule::Ptr<_208816b19_StructSubIdentExpr> _9933_rsi = (*(_97939_r)).cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				if (((*(_9923_lsi))._field_Field != (*(_9933_rsi))._field_Field)) {
					return false;;
				};
				return _2170b265e_areSameLvalueExpr(&((*((*(_9923_lsi))._field_Expr))._field_Model), &((*(*(_9933_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a4b32ba:;
			{
				{
					auto &_match_expr{ (*(_97939_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_21a4b3e03:;
						{
							jule::Ptr<_208812472_UnaryExpr> _10054_ul = (*(_97923_l)).cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112);;
							jule::Ptr<_208812472_UnaryExpr> _10064_ur = (*(_97939_r)).cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112);;
							if ((((*((*(_10054_ul))._field_Op))._field_Id != (*(*(_10064_ur))._field_Op.alloc)._field_Id) || ((*((*(_10054_ul))._field_Op))._field_Kind != (*(*(_10064_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _2170b265e_areSameLvalueExpr(&((*((*(_10054_ul))._field_Expr))._field_Model), &((*(*(_10064_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_21a4b61be:;
				};
			}
		}
		_match_end_21a4b31cc:;
	};
	return false;;
}



inline void _2170b471b_possibleDynamicRemove(jule::Ptr<_2170b3682_dynamic>* _7631_d, jule::Any _7644_m) {
	if (((*(_7631_d)) != nullptr)) {
		_2170b3e68_removeVar((*(_7631_d)).ptr(), _2170b5299_getDynamicVar(_7644_m));
	};
}



inline jule::Bool _2170b4a29_isDynamicValidType(jule::Ptr<_2089ce661_Type> _8227_t) {
	return _20939eb35_IsAny(&(_8227_t));;
}



inline jule::Ptr<_2089ce661_Type> _2170b4e58_isTypeGuaranteedDynamicData(jule::Ptr<_2170b3682_dynamic>* _8437_dy, jule::Ptr<_2089ce661_Type> _8455_t, jule::Any _8475_m) {
	if (_2089d07d8_IsNil(_8455_t.ptr())) {
		return nullptr;;
	};
	jule::Bool _882_isAny = _20939eb35_IsAny(&(_8455_t));;
	if (((!(_882_isAny)) && (_2089d4314_Trait(_8455_t.ptr()) == nullptr))) {
		return _8455_t;;
	};
	if ((!(_882_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8475_m };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_21a591ca0:;
			{
				jule::Ptr<_2088136c6_CastingExpr> _977_cem = _8475_m.unsafe_cast_ptr<_2088136c6_CastingExpr>();;
				return _2170b4e58_isTypeGuaranteedDynamicData(_8437_dy, (*(_977_cem))._field_ExprType, (*((*_977_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_21a591c39:;
	};
	jule::Uintptr _1002_var = _2170b5299_getDynamicVar(_8475_m);;
	if ((_1002_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8437_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a593653:;
		if (it != expr_end) {
			_2170b3341_dynamicVar _10414_v = *it;
			{
				if ((_10414_v._field_var == _1002_var)) {
					return _10414_v._field_kind;;
				};
			}
			_iter_next_21a593653:;
			++it;
			goto _iter_begin_21a593653;
		}
		_iter_end_21a593653:;
	};
	return nullptr;;
}



inline jule::Uintptr _2170b5299_getDynamicVar(jule::Any _11218_m) {
	if ((!(_2170bd945_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11218_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a593c91:;
			{
				jule::Ptr<_20894d7de_Var> _1183_v = _11218_m.unsafe_cast_ptr<_20894d7de_Var>();;
				if ((!((*(_1183_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11218_m.unsafe_cast_ptr<_20894d7de_Var>());;
				};
				return _2170b5299_getDynamicVar((*((*((*(_1183_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a594b82:;
			{
				return static_cast<jule::Uintptr>((*(_11218_m.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a593d07:;
			{
				jule::Ptr<_208812472_UnaryExpr> _1293_uem = _11218_m.unsafe_cast_ptr<_208812472_UnaryExpr>();;
				if (((*((*(_1293_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _2170b5299_getDynamicVar((*((*_1293_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_21a594ad8:;
	};
	return 0LLU;;
}



inline void _21a5a6688__removeDeads(jule::Ptr<_2170b8566_boundary>* _2340_alive, jule::Ptr<_2170b8566_boundary>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_21a5a71a0:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5a815c:;
		if (it != expr_end) {
			_2170b8225_boundaryVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_21a5a815c;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5a8ec6:;
					if (it != expr_end) {
						_2170b8225_boundaryVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_21a5a815c;
							};
						}
						_iter_next_21a5a8ec6:;
						++it;
						goto _iter_begin_21a5a8ec6;
					}
					_iter_end_21a5a8ec6:;
				};
				_2170b8d4c_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_21a5a815c:;
			++it;
			goto _iter_begin_21a5a815c;
		}
		_iter_end_21a5a815c:;
	};
}

inline void _21a5a858b__removeDeads(jule::Ptr<_216daa501_nils>* _2340_alive, jule::Ptr<_216daa501_nils>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_21a5aa626:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5ab58e:;
		if (it != expr_end) {
			_216daa1b0_nilVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_21a5ab58e;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5ac408:;
					if (it != expr_end) {
						_216daa1b0_nilVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_21a5ab58e;
							};
						}
						_iter_next_21a5ac408:;
						++it;
						goto _iter_begin_21a5ac408;
					}
					_iter_end_21a5ac408:;
				};
				_216daacd7_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_21a5ab58e:;
			++it;
			goto _iter_begin_21a5ab58e;
		}
		_iter_end_21a5ab58e:;
	};
}

inline void _21a5aba23__removeDeads(jule::Ptr<_2170b3682_dynamic>* _2340_alive, jule::Ptr<_2170b3682_dynamic>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_21a5adabe:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5aea7b:;
		if (it != expr_end) {
			_2170b3341_dynamicVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_21a5aea7b;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5b08e5:;
					if (it != expr_end) {
						_2170b3341_dynamicVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_21a5aea7b;
							};
						}
						_iter_next_21a5b08e5:;
						++it;
						goto _iter_begin_21a5b08e5;
					}
					_iter_end_21a5b08e5:;
				};
				_2170b3e68_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_21a5aea7b:;
			++it;
			goto _iter_begin_21a5aea7b;
		}
		_iter_end_21a5aea7b:;
	};
}



inline jule::Bool _2170b95cd_isValidBoundaryInfo(jule::Any _8524_m) {
	return _2170b9d1a_fitsSize(_8524_m, _8524_m);;
}



inline jule::I64 _2170b9996_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9035_expr) {
	{
		auto expr = &(_9016_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5b7897:;
		if (it != expr_end) {
			jule::I64 _916_i = it - expr->begin();
			jule::Any *_919_m = it;
			{
				if (_2170b9d1a_fitsSize((*(_919_m)), _9035_expr)) {
					return _916_i;;
				};
			}
			_iter_next_21a5b7897:;
			++it;
			_916_i++;
			goto _iter_begin_21a5b7897;
		}
		_iter_end_21a5b7897:;
	};
	return -1LL;;
}



inline jule::Bool _2170b9d1a_fitsSize(jule::Any _9913_e1, jule::Any _9929_e2) {
	if ((_208a622b5_TypeData(&(_9913_e1)) != _208a622b5_TypeData(&(_9929_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9913_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21a5b937c:;
			{
				jule::Ptr<_208799195_Const> _1053_exprConst = _9929_e2.cast_ptr<_208799195_Const>(&__jule_any_type15);;
				return ((_208808402_AsF64(_1053_exprConst.ptr()) >= 0LL) && _20880c109_GtEq(_9913_e1.unsafe_cast_ptr<_208799195_Const>().ptr(), (*_1053_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a5b93e3:;
			{
				return (_9929_e2 == _9913_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a5b9459:;
			{
				jule::Ptr<_208816b19_StructSubIdentExpr> _1103_ssi1 = _9913_e1.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>();;
				jule::Ptr<_208816b19_StructSubIdentExpr> _1113_ssi2 = _9929_e2.cast_ptr<_208816b19_StructSubIdentExpr>(&__jule_any_type99);;
				return (_208a63937_EqualModels((*((*(_1103_ssi1))._field_Expr))._field_Model, (*(*(_1113_ssi2))._field_Expr.alloc)._field_Model) && ((*_1103_ssi1.alloc)._field_Field == (*(_1113_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a5b94c0:;
			{
				jule::Ptr<_208812472_UnaryExpr> _1143_uem1 = _9913_e1.unsafe_cast_ptr<_208812472_UnaryExpr>();;
				jule::Ptr<_208812472_UnaryExpr> _1153_uem2 = _9929_e2.cast_ptr<_208812472_UnaryExpr>(&__jule_any_type112);;
				if ((((*((*(_1143_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*((*(_1143_uem1))._field_Op))._field_Id != (*(*(_1153_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _2170b9d1a_fitsSize((*((*(_1143_uem1))._field_Expr))._field_Model, (*(*(_1153_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_21a5b8ec5:;
			{
				return false;;
			}
		}
		_match_end_21a5b8d93:;
	};
}



inline void _2170ba14a_possibleBoundaryRemove(jule::Ptr<_2170b8566_boundary>* _12532_b, jule::Any _12546_model) {
	{
		auto expr = &((*((*(_12532_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a5b9800:;
		if (it != expr_end) {
			_2170b8225_boundaryVar _12714_v = *it;
			{
				{
					auto expr = &(_12714_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21a5c1098:;
					if (it != expr_end) {
						jule::I64 _1287_i = it - expr->begin();
						jule::Any _12810_max = *it;
						{
							if (_208a63937_EqualModels(_12810_max, _12546_model)) {
								_12714_v._field_maxSize=jule::append(_12714_v._field_maxSize.slice(0LL, _1287_i),_12714_v._field_maxSize.slice((_1287_i + 1LL)));
								goto _iter_end_21a5c1098;
							};
						}
						_iter_next_21a5c1098:;
						++it;
						_1287_i++;
						goto _iter_begin_21a5c1098;
					}
					_iter_end_21a5c1098:;
				};
			}
			_iter_next_21a5b9800:;
			++it;
			goto _iter_begin_21a5b9800;
		}
		_iter_end_21a5b9800:;
	};
}



inline jule::Bool _2170ba414_isBoundaryRiskyType(jule::Ptr<_2089ce661_Type> _13728_t) {
	return (_2089d3544_Arr(_13728_t.ptr()) == nullptr);;
}



inline jule::Bool _2170ba6cd_isBoundaryValidType(jule::Ptr<_2089ce661_Type> _14228_t) {
	return ((_2089d37ca_Slc(_14228_t.ptr()) != nullptr) || (_2089d3544_Arr(_14228_t.ptr()) != nullptr));;
}



inline jule::Uintptr _2170ba997_getBoundaryVar(jule::Any _14419_m) {
	if ((!(_2170bbe60_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14419_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21a5c373d:;
			{
				jule::Ptr<_20894d7de_Var> _1503_v = _14419_m.unsafe_cast_ptr<_20894d7de_Var>();;
				if ((!((*(_1503_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14419_m.unsafe_cast_ptr<_20894d7de_Var>());;
				};
				return _2170ba997_getBoundaryVar((*((*((*(_1503_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_21a5c37c6:;
			{
				return static_cast<jule::Uintptr>((*(_14419_m.unsafe_cast_ptr<_208816b19_StructSubIdentExpr>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_21a5c385e:;
			{
				jule::Ptr<_208812472_UnaryExpr> _1613_uem = _14419_m.unsafe_cast_ptr<_208812472_UnaryExpr>();;
				if (((*((*(_1613_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _2170ba997_getBoundaryVar((*((*_1613_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_21a5c36c7:;
	};
	return 0LLU;;
}



inline void _2170be814_PushOptLevel(jule::I64 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I64>(2LL));;
	_2170bb305_Copy=_422_l1;
	_2170bb602_Deadcode=_422_l1;
	_2170bb8aa_Append=_422_l1;
	_2170bbba7_Math=_422_l1;
	_2170bbe60_Access=_422_l1;
	_2170bc218_Inline=_422_l1;
	_2170bc4c1_Ptr=_422_l1;
	_2170bc889_Cond=_422_l1;
	_2170bcacb_Str=_422_l1;
	_2170bcd73_Slice=_422_l1;
	_2170bd12b_Assign=_422_l1;
	_2170bd3d4_Exceptional=_422_l1;
	_2170bd68c_Iter=_422_l1;
	_2170bd945_Dynamic=_422_l1;
	_2170bdbed_Array=_422_l1;
	_2170be1d7_Len=_422_l1;
	_2170be429_StdStrings=_432_l2;
	_2170be638_StdMathCmplx=_432_l2;
}



inline void _2171d4c15_detectEnabled(void) {
	_2171d27a1_exprEnabled=((((((((_2170be429_StdStrings || _2170bc4c1_Ptr) || _2170bbba7_Math) || _2170bbe60_Access) || _2170bc889_Cond) || _2170bdbed_Array) || _2170bcacb_Str) || _2170bd945_Dynamic) || _2170be1d7_Len);
	_2171d29b0_scopeEnabled=(((((((((_2170bc889_Cond || _2170bb8aa_Append) || _2170bb305_Copy) || _2170bcacb_Str) || _2170bcd73_Slice) || _2170bd12b_Assign) || _2170bd3d4_Exceptional) || _2170bd68c_Iter) || _2170bd945_Dynamic) || _2170be638_StdMathCmplx);
}



inline jule::U64 _2172a659a_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _2171dea66_isCopyOptimizable(jule::Ptr<_20899a9a1_Data>* _115523_expr) {
	if ((!((*((*(_115523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_115523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_21a741bdb:;
			{
				return false;;
			}
		}
		_match_end_21a741b75:;
	};
	return true;;
}



inline jule::Bool _2171dee2e_isIterCopyOptimizable(jule::Ptr<_20899a9a1_Data>* _116627_expr, jule::Ptr<_20894d7de_Var>* _116647_v) {
	if (((!((*((*(_116627_expr))))._field_Lvalue)) && (!(_2089d19a4_Mutable((*((*(_116627_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_116647_v))))._field_Mutable)) && (!((*((*(_116627_expr))))._field_Mutable)));;
}



inline jule::Bool _2171e035d_captureVarHandling(jule::Ptr<_2172b1a06_ObjectCoder>* _117328_oc, jule::Ptr<_208814dae_AnonFnExpr>* _117351_m, jule::Ptr<_20894d7de_Var>* _117378_v) {
	{
		auto expr = &((*((*(_117351_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a743d42:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _11749_cv = *it;
			{
				if ((_11749_cv == (*(_117378_v)))) {
					_2172b2221_write((*(_117328_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__21720a686_var(&((*((*(_117328_oc))))._field_Buf), (*(_117378_v)));
					return true;;
				};
			}
			_iter_next_21a743d42:;
			++it;
			goto _iter_begin_21a743d42;
		}
		_iter_end_21a743d42:;
	};
	return false;;
}



inline jule::Str _217202b45_decomposeCommonEsq(jule::U8 _193023_b) {
	{
		auto &_match_expr{ _193023_b };
		
		if (_match_expr == '\\') {
			_case_begin_21a8b0453:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_21a8b01cd:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_21a8b0244:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_21a8b02bb:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_21a8b0343:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_21a8aed9d:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_21a8aee25:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_21a8aee9c:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_21a8b0024:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_21a8b04ca:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_21a8ac7c4:;
			{
				return jule::Str();;
			}
		}
		_match_end_21a8aec27:;
	};
}



inline jule::Str _217202e53_sbtoa(jule::U8 _195710_b) {
	if ((_195710_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_195710_b < 128LLU)) {
		jule::Str _19623_seq = _217202b45_decomposeCommonEsq(_195710_b);;
		if (!(_19623_seq).empty()) {
			return _19623_seq;;
		};
		if (((32LL <= _195710_b) && (_195710_b <= 126LLU))) {
			return __jule_strFromByte(_195710_b);;
		};
	};
	jule::Str _19702_seq = _21ec9de7a_FmtUint(static_cast<jule::U64>(_195710_b), 8LL);;
	if ((_19702_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19702_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19702_seq);;
}



inline void _21720323e_cstrBytes(_21e64c5b5_Builder* _197719_s, jule::Str _197740_ctx) {
	{
		auto expr = &(_197740_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a8b50b2:;
		if (it != expr_end) {
			jule::U8 *_19789_b = it;
			{
				({
					auto except = _21e64d594_WriteStr(_197719_s, _217202e53_sbtoa((*(_19789_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1979:3"));
					(except.result);
				});
			}
			_iter_next_21a8b50b2:;
			++it;
			goto _iter_begin_21a8b50b2;
		}
		_iter_end_21a8b50b2:;
	};
}



inline void _21720356e_cstrLit(_21e64c5b5_Builder* _198317_s, jule::Str _198338_ctx) {
	({
		auto except = _21e64d84c_WriteByte(_198317_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1984:2"));
	});
	_21720323e_cstrBytes(_198317_s, _198338_ctx);
	({
		auto except = _21e64d84c_WriteByte(_198317_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1986:2"));
	});
}



inline void _217203915_ftoa(_21e64c5b5_Builder* _198914_s, jule::F64 _198935_f, jule::I64 _198943_bitsize) {
	if ((_198943_bitsize != 32LL)) {
		if ((_198935_f == static_cast<jule::F64>(static_cast<jule::I64>(_198935_f)))) {
			_217203c01_itoa(_198914_s, static_cast<jule::I64>(_198935_f));
			return;;
		};
		if ((_198935_f == static_cast<jule::F64>(static_cast<jule::U64>(_198935_f)))) {
			_217203edc_utoa(_198914_s, static_cast<jule::U64>(_198935_f));
			return;;
		};
	};
	jule::Str _20002_m = _21ec87a79_FmtFloat(_198935_f, 'f', -1LL, _198943_bitsize);;
	({
		auto except = _21e64d594_WriteStr(_198914_s, _20002_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2001:2"));
		(except.result);
	});
	if ((!(_220c61997_Contains(_20002_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _21e64d594_WriteStr(_198914_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2003:3"));
			(except.result);
		});
	};
}



inline void _217203c01_itoa(_21e64c5b5_Builder* _200714_s, jule::I64 _200735_x) {
	{
		
		if ((_200735_x == jule::MAX_I64)) {
			_case_begin_21a8b9490:;
			{
				({
					auto except = _21e64d594_WriteStr(_200714_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2010:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_200735_x == jule::MIN_I64)) {
			_case_begin_21a8b9539:;
			{
				({
					auto except = _21e64d594_WriteStr(_200714_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2013:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_21a8b936e:;
	};
	({
		auto except = _21e64d594_WriteStr(_200714_s, _21ec9e343_FmtInt(_200735_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2017:2"));
		(except.result);
	});
	if (_21e661475_Is64Bit(jule::Str::lit("arm64", 5))) {
		({
			auto except = _21e64d84c_WriteByte(_200714_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2019:3"));
		});
	};
	({
		auto except = _21e64d84c_WriteByte(_200714_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:2"));
	});
}



inline void _217203edc_utoa(_21e64c5b5_Builder* _202414_s, jule::U64 _202435_x) {
	{
		
		if ((_202435_x == jule::MAX_U64)) {
			_case_begin_21a8bb5d5:;
			{
				({
					auto except = _21e64d594_WriteStr(_202414_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2027:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_21a8bb492:;
	};
	({
		auto except = _21e64d594_WriteStr(_202414_s, _21ec9de7a_FmtUint(_202435_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2031:2"));
		(except.result);
	});
	if (_21e661475_Is64Bit(jule::Str::lit("arm64", 5))) {
		({
			auto except = _21e64d84c_WriteByte(_202414_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2033:3"));
		});
	};
	({
		auto except = _21e64d594_WriteStr(_202414_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2035:2"));
		(except.result);
	});
}



inline void _21720463b_structBinary(_21e64c5b5_Builder* _203822_buf, jule::Ptr<_2087490bd_StructIns>* _203850_s, jule::Str* _203872_l, jule::Str* _20393_r, jule::U64 _203911_op, jule::Str _203926_kind) {
	if (((_203911_op != static_cast<jule::U64>(50LLU)) && (_203911_op != static_cast<jule::U64>(51LLU)))) {
		__jule_panic_s(jule::Str::lit("cxx: unsupported token occurred for structure binary, this is an implementation mistake", 87) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2041:3"));;
	};
	static__21720a0ae_structureIns(_203822_buf, _203850_s);
	({
		auto except = _21e64d594_WriteStr(_203822_buf, jule::Str::lit("_eq", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2044:2"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_203822_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2045:2"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_203822_buf, (*(_203872_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2046:2"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_203822_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2047:2"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_203822_buf, (*(_20393_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:2"));
		(except.result);
	});
	({
		auto except = _21e64d84c_WriteByte(_203822_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2049:2"));
	});
}



inline jule::Slice<jule::U8> _2172be805_concatAllParts(jule::Slice<jule::Ptr<_208711827_Token>> _137219_parts) {
	jule::I64 _13736_n = 0LL;;
	{
		auto expr = &(_137219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab7acb2:;
		if (it != expr_end) {
			jule::Ptr<_208711827_Token> *_13749_part = it;
			{
				_13736_n+=(*(*(_13749_part)).alloc)._field_Kind.len();
			}
			_iter_next_21ab7acb2:;
			++it;
			goto _iter_begin_21ab7acb2;
		}
		_iter_end_21ab7acb2:;
	};
	if ((_13736_n == 0LL)) {
		return nullptr;;
	};
	_21e64c5b5_Builder _13806_s = static__21e64ce12_New(_13736_n);;
	{
		auto expr = &(_137219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ab7be17:;
		if (it != expr_end) {
			jule::Ptr<_208711827_Token> *_13819_p = it;
			{
				({
					auto except = _21e64d594_WriteStr(&_13806_s, (*((*(_13819_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1382:3"));
					(except.result);
				});
			}
			_iter_next_21ab7be17:;
			++it;
			goto _iter_begin_21ab7be17;
		}
		_iter_end_21ab7be17:;
	};
	return _21e64e8c5_Buf(&_13806_s);;
}



inline jule::Bool _2172cd6e3_ableToInit(jule::Ptr<_2089ce661_Type>* _45920_t) {
	return (!(_2089d0552_Binded((*(_45920_t)).ptr())));;
}



inline jule::Bool _2172cd9bd_shouldInitialized(jule::Ptr<_2089ce661_Type>* _46627_t) {
	if ((!(_2172cd6e3_ableToInit(_46627_t)))) {
		return false;;
	};
	jule::Ptr<_2089d846c_Prim> _4702_prim = _2089d2774_Prim((*(_46627_t)).ptr());;
	if ((_4702_prim != nullptr)) {
		return ((!(_2089dbbbd_IsAny(_4702_prim))) && (!(_2089db937_IsStr(_4702_prim))));;
	};
	{
		
		if ((_2089d2a0a_Sptr((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc04de:;
			{
				return false;;
			}
		}
		else if ((_2089d459a_Map((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc0555:;
			{
				return false;;
			}
		}
		else if ((_2089d37ca_Slc((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc05bb:;
			{
				return false;;
			}
		}
		else if ((_2089d4314_Trait((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc129d:;
			{
				return false;;
			}
		}
		else if ((_2089d3a61_Fn((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc1314:;
			{
				return false;;
			}
		}
		else if ((_2089d3544_Arr((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc1413:;
			{
				jule::Ptr<_2089dec8c_Arr> _4867_arr = _2089d3544_Arr((*(_46627_t)).ptr());;
				return _2172cd6e3_ableToInit(&((*(_4867_arr))._field_Elem));;
			}
		}
		else if ((_2089d3ce7_Struct((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_21acc148a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_21acc03e0:;
			{
				return true;;
			}
		}
		_match_end_21acc0896:;
	};
}



inline void _220c75390_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_2175dc518_toStr(_3022_msg));
}



inline void _220c75615_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_220c75390_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _220c751b4_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_220c751b4_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad64033:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_21ad64033:;
			++it;
			goto _iter_begin_21ad64033;
		}
		_iter_end_21ad64033:;
	};
	_21e64c5b5_Builder _496_s = static__21e64ce12_New(32LL);;
	;
	{
		auto expr = &(_220c751b4_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad6581a:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _21e64d594_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&_496_s, _220c5bc8e_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _21e64d594_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _21e64d84c_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_21ad6581a:;
			++it;
			_516_i++;
			goto _iter_begin_21ad6581a;
		}
		_iter_end_21ad6581a:;
	};
	jule::println(_21ad66046_toStr(_496_s));
}



inline void _220c75846_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_220c75390_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_2175dc518_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _220c75a55_toolDistos(void) {
	jule::print(_2175dc518_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_21ad793cd_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_2175dc518_toStr(jule::Str::lit(" ", 1)));
	jule::print(_21ad793cd_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_2175dc518_toStr(jule::Str::lit(" ", 1)));
	jule::print(_21ad793cd_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_2175dc518_toStr(jule::Str()));
}



inline void _220c75bba_toolDistarch(void) {
	jule::print(_2175dc518_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_21ad7d1b2_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_2175dc518_toStr(jule::Str::lit(" ", 1)));
	jule::print(_21ad7d1b2_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_2175dc518_toStr(jule::Str::lit(" ", 1)));
	jule::print(_21ad7d1b2_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_2175dc518_toStr(jule::Str()));
}



inline void _220c75db8_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_2175dc518_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_220c75390_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_21ad6a5de:;
			{
				_220c75a55_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_21ad6a413:;
			{
				_220c75bba_toolDistarch();
			}
		}
		else {
			_case_begin_21ad6a215:;
			{
				_220c75390_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_21ad6a2e2:;
	};
}



inline void _220c760e9_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_220c75390_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_2175dc518_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_2175dc518_toStr(jule::Str::lit("architecture: arm64", 19)));
	jule::println(_2175dc518_toStr(jule::Str::lit("operating system: linux", 23)));
	jule::println(_2175dc518_toStr((jule::Str::lit("default compiler: ", 18) + _220c71721_Compiler)));
	jule::println(_2175dc518_toStr((jule::Str::lit("default C++ standard: ", 22) + _220c72d2c_CppStd)));
}



inline void _220c7643a_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_2175dc518_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_220c75390_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_21ad80cb9:;
			{
				({
					auto except = static__21e811e0b_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_220c75390_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_21ad801c5:;
			{
				_220c75390_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_21ad80824:;
	};
}



inline jule::Bool _220c7667c_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_21ad81bee:;
			{
				_220c75615_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_21ad81c65:;
			{
				_220c75846_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_21ad81ccb:;
			{
				_220c75db8_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_21ad81d42:;
			{
				_220c760e9_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_21ad81da8:;
			{
				_220c7643a_mod(_15320_args);
			}
		}
		else {
			_case_begin_21ad8136e:;
			{
				return false;;
			}
		}
		_match_end_21ad8155b:;
	};
	return true;;
}



inline void _220c76825_showInfo(void) {
	jule::println(_2175dc518_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _220c7699b_main(void) {
	jule::Slice<jule::Str> _1896_args = _21e89aa00_Args();;
	if ((_1896_args.len() < 2LL)) {
		_220c76825_showInfo();
		return;;
	};
	if (_220c7667c_processCommand(&(_1896_args))) {
		return;;
	};
	_217347817_compileCommand(&(_1896_args));
}



inline void _217344737_init(void) {
	_220c71721_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_21e8109ed_File> _217344a01_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _220c68ebb_Dir((*(_3016_path)));;
	({
		auto except = static__21e80ce3a_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__220c6b3ca_Create(_312_dir);
				if (!except.ok()) {
					_21eca1b2b_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21e81179b_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_21eca1b2b_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _217344b99_clearObjects(void) {
	({
		auto except = static__21e80a07a_Remove(_217345cee_getCompilePath());
		if (!except.ok()) {
			jule::println(_2175dc518_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__220c6b60b_Remove(_217343ec8_OutDir);
}



inline void _217344ea7_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_21e80ba1b_Cmd> _606_cmd = static__21e80be6c_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_220c61623_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _21e80c16a_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type139) == _match_expr) {
					_case_begin_21ad88200:;
					{
						static__220c98cba_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type139) == _match_expr) {
					_case_begin_21ad87dae:;
					{
						static__220c98cba_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_21ad87bd3:;
					{
						static__220c98cba_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_21ad87ce3:;
			};
			_21eca1b2b_Throw(jule::Str());
		}
	});
	jule::I64 _732_status = ({
		auto except = _21e80c5ee_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("\n>>> your backend compiler (", 28)); size += part0.len(); jule::Str part1 = std::move(_220c71721_Compiler); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
		static__220c98cba_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_21eca1b2b_Throw(jule::Str());
	};
	_217344b99_clearObjects();
}



inline jule::Bool _217345271_isCppSourceFile(jule::Str _8620_path) {
	jule::I64 _872_offset = _220c5ed5d_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _21e611e70_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _2173454a2_pushCompCmdClang(_21e64c5b5_Builder* _9426_cmd) {
	({
		auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _220c72d2c_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_21ad8b1c0:;
			{
				({
					auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_21ad8bed4:;
			{
				({
					auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_21ad8c04a:;
			{
				({
					auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_21ad8bc3c:;
	};
	({
		auto except = _21e64d84c_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_220c73ee8_Production) {
		({
			auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _21e64d594_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _2173456d3_pushCompCmdGcc(_21e64c5b5_Builder* _12024_cmd) {
	({
		auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _220c72d2c_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_21ad8d5ac:;
			{
				({
					auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_21ad9001a:;
			{
				({
					auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_21ad90081:;
			{
				({
					auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_21ad8ec73:;
	};
	({
		auto except = _21e64d84c_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_220c73ee8_Production) {
		({
			auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _21e64d594_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _217345b67_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_20939938d_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_220c72b1d_CompilerPath);;
	_21e64c5b5_Builder _1486_cmd = static__21e64ce12_New(64LL);;
	{
		auto &_match_expr{ _220c71721_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_21ad92c98:;
			{
				_2173456d3_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_21ad932c6:;
			{
				_2173454a2_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_21ad931a5:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad935c3:;
		if (it != expr_end) {
			jule::Ptr<_20890d040_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _217345271_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _21e64d594_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _21e64d84c_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_21ad935c3:;
			++it;
			goto _iter_begin_21ad935c3;
		}
		_iter_end_21ad935c3:;
	};
	if (!(_21734457d_Out).empty()) {
		({
			auto except = _21e64d594_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _21e64d594_WriteStr(&_1486_cmd, _21734457d_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _21e64d84c_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _21e64d594_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ad9610e:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _21e64d84c_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _21e64d594_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_21ad9610e:;
			++it;
			goto _iter_begin_21ad9610e;
		}
		_iter_end_21ad9610e:;
	};
	if ((_220c6c8d7_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _21e64d594_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _21e64de24_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _217345cee_getCompilePath(void) {
	return _220c682c8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _217343ec8_OutDir; (*it++) = _21734436e_OutName; __jule_collection; }));;
}



inline void _217346030_applyTargetIndependentOptimizations(jule::Ptr<_20939938d_IR>* _19245_ir) {
	jule::Ptr<_2171d2b47_Optimizer> _1936_opt = static__2171d310e_New(_19245_ir);;
	_2171d49a1_Optimize(_1936_opt.ptr());
}



inline void _2173461c8_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _220c71721_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_21ad987c6:;
			{
				_21eca1b2b_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_21ad984a7:;
			{
				if ((_220c72b1d_CompilerPath).empty()) {
					_220c72b1d_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_21ad9851d:;
			{
				if ((_220c72b1d_CompilerPath).empty()) {
					_220c72b1d_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_21ad977c5:;
			{
				_21eca1b2b_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _220c71721_Compiler));
			}
		}
		_match_end_21ad983ec:;
	};
}



inline void _2173463d7_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_21eca1b2b_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _217346618_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_21eca1b2b_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _217346849_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_21eca1b2b_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _220c61623_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_21eca1b2b_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_217346618_checkTargetOs(_2402_os);
		_220c6c8d7_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_2173463d7_checkTargetArch(_2406_arch);
		_220c6cb90_Arch=_2406_arch;
	};
	_208896a67_UpdateTarget();
}



inline void _217346a7a_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_21eca1b2b_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_21ada0679:;
			{
				goto _match_end_21ada0019;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_21ada06e0:;
			{
				_2170be814_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_21ada03c1:;
			{
				_2170be814_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_21ad9ed3d:;
			{
				_21eca1b2b_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_21ada0019:;
	};
}



inline void _217346e43_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _220c72d2c_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_21ada1a98:;
			{
				goto _match_end_21ada14c1;
			}
		}
		else {
			_case_begin_21ada0459:;
			{
				_21eca1b2b_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _220c72d2c_CppStd));
			}
		}
		_match_end_21ada14c1:;
	};
}



inline jule::Slice<jule::Str> _21734710d_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_21733e325_FlagSet> _2856_fs = static__21733e644_New();;
	_21ada344b_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_21ada344b_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_21ada344b_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_21734457d_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_220c730c4_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_220c7337c_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_21ada344b_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_220c71721_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_21ada344b_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_220c72b1d_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_220c73ee8_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_220c738dd_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_220c73ca6_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_21ada344b_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_220c72d2c_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bb305_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bb602_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bb8aa_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bbba7_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bbe60_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bc218_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bc4c1_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bc889_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bcacb_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bcd73_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bd12b_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bd3d4_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bd68c_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bd945_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170bdbed_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170be1d7_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170be429_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_21adabb6e_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2170be638_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _217340513_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_21eca1b2b_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_2173461c8_checkCompilerFlag();
	_217346e43_checkCppStdFlag();
	_217346849_checkTargetFlag(&(_2836_target));
	_217346a7a_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _21734731c_setupSemaFlags(jule::I64* _33024_flags) {
	if (_220c730c4_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_20939938d_IR> _2173475d6_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _21734710d_checkFlags(_33613_args);;
	jule::I64 _3396_semaFlags = static_cast<jule::I64>(0LL);;
	_21734731c_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_21eca1b2b_Throw(_21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_21eca1b2b_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _220c68828_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_21eca1b2b_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_21e88b804_Stat _3532_inf = ({
		auto except = static__21e80ce3a_Of(_220c6bce3_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_21eca1b2b_Throw(_21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _21e88b804_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21e88bc11_IsDir(&_3532_inf)))) {
		_21eca1b2b_Throw(_21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_20939938d_IR> _3616_ir;
	jule::Slice<_21e65b904_Log> _36110_logs;
	({
		__jule_tuple_x_20939938d_IR__jule_tuple_s_21e65b904_Log __jule_assign_result = static__209399866_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_21eca1b2b_Throw(_21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__21eca1158_PrintLogs(&(_36110_logs));
		_21eca1b2b_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _217347817_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_220c73635_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_20939938d_IR> _3826_ir = _2173475d6_buildIr(_37624_args);;
	_2093a4b90_ProgramMeta=static__2093a729c_Collect(_3826_ir);
	if ((!(_220c73635_Test))) {
		;
		(*(_2093a4b90_ProgramMeta))._field_EntryPoint=_208911d79_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_2093a4b90_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_21eca1b2b_Throw(_21e65bd66_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_217346030_applyTargetIndependentOptimizations(&(_3826_ir));
	_20939a8cd_Order(_3826_ir.ptr());
	jule::Str _4002_compPath = _217345cee_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _217345b67_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_2172b1a06_ObjectCoder> _4036_oc = static__2172b1e68_New(&(_3826_ir), _2172ae251_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_220c73635_Test) {
		jule::Ptr<_2172053a6_TestCoder> _4087_tc = static__21720585c_New(&(_4036_oc));;
		_217206bd2_Serialize(_4087_tc);
	} else {
		_2172be470_Serialize(_4036_oc);
	};
	jule::Ptr<_21e8109ed_File> _4146_file = _217344a01_openOutput(&(_4002_compPath));;
	({
		auto except = _21e80a50e_Write(_4146_file.ptr(), _21e64e8c5_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_21eca1b2b_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _21e812714_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_220c7337c_Transpilation))) {
		_217344ea7_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_220c6ccd3_init();
	_208896bdd_init();
	_217344737_init();

}

inline jule::Bool __jule_anon218c05b74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20882121c_ParamIns> _25721_p1, jule::Ptr<_20882121c_ParamIns> _25736_p2) {
	if (((*((*(_25721_p1))._field_Decl))._field_Mutable != (*(*(_25736_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_20881ce3e_IsSelf((*(_25721_p1))._field_Decl.ptr())) {
		if ((!(_20881ce3e_IsSelf((*(_25736_p2))._field_Decl)))) {
			return false;;
		};
		if ((_20881d1c5_IsRef((*(_25721_p1))._field_Decl) != _20881d1c5_IsRef((*(_25736_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*((*(_25721_p1))._field_Decl))._field_Reference != (*(*(_25736_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*((*(_25721_p1))._field_Decl))._field_Variadic != (*(*(_25736_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _2089ced9d_Equal((*(_25721_p1))._field_Type, (*(_25736_p2))._field_Type);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c6d59e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _6521_e, jule::Ptr<_2087303a1_FnCallExpr>* _6536_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218c6d59e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218c6d59e_ctx>();
	return _2088a0e06__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c70381(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _7221_e, jule::Ptr<_2087303a1_FnCallExpr>* _7236_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218c70381_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218c70381_ctx>();
	return _2088a1302__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c833d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _17821_e, jule::Ptr<_2087303a1_FnCallExpr>* _17836_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218c833d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218c833d8_ctx>();
	return _2088a4129__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c851cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _18521_e, jule::Ptr<_2087303a1_FnCallExpr>* _18536_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218c851cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218c851cb_ctx>();
	return _2088a4525__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218c9499e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _28321_e, jule::Ptr<_2087303a1_FnCallExpr>* _28336_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218c9499e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218c9499e_ctx>();
	return _2088a733b__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218cabba3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _40221_e, jule::Ptr<_2087303a1_FnCallExpr>* _40236_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218cabba3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218cabba3_ctx>();
	return _2088aa174__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218cad996(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _40921_e, jule::Ptr<_2087303a1_FnCallExpr>* _40936_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218cad996_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218cad996_ctx>();
	return _2088aa96b__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218cb0789(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _41621_e, jule::Ptr<_2087303a1_FnCallExpr>* _41636_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218cb0789_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218cb0789_ctx>();
	return _2088aa570__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d48190(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _97421_e, jule::Ptr<_2087303a1_FnCallExpr>* _97436_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d48190_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d48190_ctx>();
	return _2088b03cc__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d49e83(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _98121_e, jule::Ptr<_2087303a1_FnCallExpr>* _98136_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d49e83_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d49e83_ctx>();
	return _2088b07c8__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d4bc76(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _98821_e, jule::Ptr<_2087303a1_FnCallExpr>* _98836_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d4bc76_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d4bc76_ctx>();
	return _2088b10c0__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d4da69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _99521_e, jule::Ptr<_2087303a1_FnCallExpr>* _99536_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d4da69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d4da69_ctx>();
	return _2088b14bb__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5085c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _100221_e, jule::Ptr<_2087303a1_FnCallExpr>* _100236_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d5085c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d5085c_ctx>();
	return _2088b18b7__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d52650(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _100921_e, jule::Ptr<_2087303a1_FnCallExpr>* _100936_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d52650_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d52650_ctx>();
	return _2088b1cb3__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d54443(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _101621_e, jule::Ptr<_2087303a1_FnCallExpr>* _101636_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d54443_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d54443_ctx>();
	return _2088b21ae__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d56236(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _102321_e, jule::Ptr<_2087303a1_FnCallExpr>* _102336_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d56236_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d56236_ctx>();
	return _2088b25aa__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5816c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _103021_e, jule::Ptr<_2087303a1_FnCallExpr>* _103036_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d5816c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d5816c_ctx>();
	return _2088b29a6__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d59e60(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _103721_e, jule::Ptr<_2087303a1_FnCallExpr>* _103736_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d59e60_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d59e60_ctx>();
	return _2088b5080__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5bc53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _104421_e, jule::Ptr<_2087303a1_FnCallExpr>* _104436_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d5bc53_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d5bc53_ctx>();
	return _2088b3e91__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d5da46(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _105121_e, jule::Ptr<_2087303a1_FnCallExpr>* _105136_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d5da46_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d5da46_ctx>();
	return _2088b2da2__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d60839(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _105821_e, jule::Ptr<_2087303a1_FnCallExpr>* _105836_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d60839_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d60839_ctx>();
	return _2088b329d__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d6262c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _106521_e, jule::Ptr<_2087303a1_FnCallExpr>* _106536_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d6262c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d6262c_ctx>();
	return _2088b3699__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d64420(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _107221_e, jule::Ptr<_2087303a1_FnCallExpr>* _107236_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d64420_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d64420_ctx>();
	return _2088b3a95__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d66213(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _107921_e, jule::Ptr<_2087303a1_FnCallExpr>* _107936_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d66213_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d66213_ctx>();
	return _2088b438c__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d68006(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _108621_e, jule::Ptr<_2087303a1_FnCallExpr>* _108636_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d68006_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d68006_ctx>();
	return _2088b4788__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d69ce9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _109321_e, jule::Ptr<_2087303a1_FnCallExpr>* _109336_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d69ce9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d69ce9_ctx>();
	return _2088b4b84__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d6badc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _110021_e, jule::Ptr<_2087303a1_FnCallExpr>* _110036_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d6badc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d6badc_ctx>();
	return _2088b0bc4__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d9ab4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _126321_e, jule::Ptr<_2087303a1_FnCallExpr>* _126336_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d9ab4e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d9ab4e_ctx>();
	return _2088b6405__Unwrap(__jule_closure_ctx.alloc->_self_, _126321_e, _126336_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d9c942(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _127021_e, jule::Ptr<_2087303a1_FnCallExpr>* _127036_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d9c942_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d9c942_ctx>();
	return _2088b6801__Type(__jule_closure_ctx.alloc->_self_, _127021_e, _127036_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218d9e735(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _127721_e, jule::Ptr<_2087303a1_FnCallExpr>* _127736_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218d9e735_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218d9e735_ctx>();
	return _2088b6bec__Lvalue(__jule_closure_ctx.alloc->_self_, _127721_e, _127736_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da1528(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _128421_e, jule::Ptr<_2087303a1_FnCallExpr>* _128436_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218da1528_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218da1528_ctx>();
	return _2088b70e8__Mutable(__jule_closure_ctx.alloc->_self_, _128421_e, _128436_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da331b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _129121_e, jule::Ptr<_2087303a1_FnCallExpr>* _129136_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218da331b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218da331b_ctx>();
	return _2088b74e4__Const(__jule_closure_ctx.alloc->_self_, _129121_e, _129136_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da510e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _129821_e, jule::Ptr<_2087303a1_FnCallExpr>* _129836_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218da510e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218da510e_ctx>();
	return _2088b78e0__Field(__jule_closure_ctx.alloc->_self_, _129821_e, _129836_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218da6e02(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _130521_e, jule::Ptr<_2087303a1_FnCallExpr>* _130536_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218da6e02_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218da6e02_ctx>();
	return _2088b7cdb__Method(__jule_closure_ctx.alloc->_self_, _130521_e, _130536_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218dbb389(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _143021_e, jule::Ptr<_2087303a1_FnCallExpr>* _143036_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218dbb389_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218dbb389_ctx>();
	return _2088baa8b__Path(__jule_closure_ctx.alloc->_self_, _143021_e, _143036_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218dbd17c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _143721_e, jule::Ptr<_2087303a1_FnCallExpr>* _143736_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218dbd17c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218dbd17c_ctx>();
	return _2088bae87__Name(__jule_closure_ctx.alloc->_self_, _143721_e, _143736_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218dbee70(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _144421_e, jule::Ptr<_2087303a1_FnCallExpr>* _144436_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218dbee70_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218dbee70_ctx>();
	return _2088bb383__Dir(__jule_closure_ctx.alloc->_self_, _144421_e, _144436_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e2e81a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _195021_e, jule::Ptr<_2087303a1_FnCallExpr>* _195036_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e2e81a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e2e81a_ctx>();
	return _2088becd2__Name(__jule_closure_ctx.alloc->_self_, _195021_e, _195036_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3160d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _195721_e, jule::Ptr<_2087303a1_FnCallExpr>* _195736_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e3160d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e3160d_ctx>();
	return _2088c01cd__Public(__jule_closure_ctx.alloc->_self_, _195721_e, _195736_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e33401(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _196421_e, jule::Ptr<_2087303a1_FnCallExpr>* _196436_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e33401_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e33401_ctx>();
	return _2088c05c9__Binded(__jule_closure_ctx.alloc->_self_, _196421_e, _196436_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e351e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _197121_e, jule::Ptr<_2087303a1_FnCallExpr>* _197136_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e351e4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e351e4_ctx>();
	return _2088c09c5__Exceptional(__jule_closure_ctx.alloc->_self_, _197121_e, _197136_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e36ed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _197821_e, jule::Ptr<_2087303a1_FnCallExpr>* _197836_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e36ed7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e36ed7_ctx>();
	return _2088c0dc1__Mutable(__jule_closure_ctx.alloc->_self_, _197821_e, _197836_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e38cca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _198521_e, jule::Ptr<_2087303a1_FnCallExpr>* _198536_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e38cca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e38cca_ctx>();
	return _2088c12bc__Variadic(__jule_closure_ctx.alloc->_self_, _198521_e, _198536_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3aabd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _199221_e, jule::Ptr<_2087303a1_FnCallExpr>* _199236_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e3aabd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e3aabd_ctx>();
	return _2088c16b8__Reference(__jule_closure_ctx.alloc->_self_, _199221_e, _199236_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3c8b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _199921_e, jule::Ptr<_2087303a1_FnCallExpr>* _199936_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e3c8b1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e3c8b1_ctx>();
	return _2088c1ab4__Params(__jule_closure_ctx.alloc->_self_, _199921_e, _199936_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e3e7e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _200621_e, jule::Ptr<_2087303a1_FnCallExpr>* _200636_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e3e7e7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e3e7e7_ctx>();
	return _2088c1eb0__Fields(__jule_closure_ctx.alloc->_self_, _200621_e, _200636_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e415da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _201321_e, jule::Ptr<_2087303a1_FnCallExpr>* _201336_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e415da_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e415da_ctx>();
	return _2088c23ab__Statics(__jule_closure_ctx.alloc->_self_, _201321_e, _201336_fc);;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_218e433cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20899c970_eval>* _202021_e, jule::Ptr<_2087303a1_FnCallExpr>* _202036_fc, jule::Ptr<_20899a9a1_Data>* ) {
	jule::Ptr<__jule_anon_218e433cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e433cd_ctx>();
	return _2088c27a7__Methods(__jule_closure_ctx.alloc->_self_, _202021_e, _202036_fc);;
}

inline jule::Bool __jule_anon_218e4e395(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _6415_sema, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_218e4e395_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_218e4e395_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_self_))._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_218e50374:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_20873454d_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_2089ccc7a_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*(_6516_g))._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_218e50374;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(0LL, (*((*(_6516_g))._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_2089ce661_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*(*(_6516_g))._field_Constraint.alloc)._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_218e53124:;
					if (it != expr_end) {
						jule::Ptr<_208727343_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_2089ce661_Type> _7310_kind = _208932a59_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_208a0052d_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_218e55005:;
										{
											jule::Ptr<_20872794d_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_20872794d_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _2088c7108_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_218e55654;
											};
										}
									}
									_match_end_218e54e7d:;
								};
								return false;;
							};
							_julec_label_218e55654:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_2089ce661_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_218e53124:;
						++it;
						goto _iter_begin_218e53124;
					}
					_iter_end_218e53124:;
				};
			}
			_iter_next_218e50374:;
			++it;
			_659_i++;
			goto _iter_begin_218e50374;
		}
		_iter_end_218e50374:;
	};
	return true;;
}

inline void __jule_anon_2190d2a89(jule::Ptr<jule::Uintptr> __f_ctx, jule::I64 _126519_i) {
	jule::Ptr<__jule_anon_2190d2a89_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2190d2a89_ctx>();
	jule::Ptr<_20873575d_AssignLeft> _12664_l = (*(__jule_closure_ctx.alloc->_126347_a))._field_Left[_126519_i];;
	(*(__jule_closure_ctx.alloc->_12647_eval))._field_target._field_mutable=(!(_20871420e_IsIgnoreIdent((*(_12664_l))._field_Ident)));
	{
		
		if (((*__jule_closure_ctx.alloc->_126347_a.alloc)._field_Declarative && (*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable)) {
			_case_begin_2190d4481:;
			{
				if (((*_12664_l.alloc)._field_Mutable && (*_12664_l.alloc)._field_Reference)) {
					(*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable=(*_12664_l.alloc)._field_Mutable;
					goto _match_end_2190d3a68;
				};
				{
					auto &_match_expr{ (*((*(_12664_l))._field_Expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type41) {
						_case_begin_2190d6296:;
						{
							if (_2088ddedd_isNewAssignIdent(__jule_closure_ctx.alloc->_self_.ptr(), (*_12664_l.alloc)._field_Ident)) {
								(*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable=(*_12664_l.alloc)._field_Mutable;
							};
						}
					}
					_match_end_2190d621e:;
				};
			}
		}
		_match_end_2190d3a68:;
	};
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_2190ddd5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20872b677_Expr>* _129644_expr) {
	jule::Ptr<__jule_anon_2190ddd5e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2190ddd5e_ctx>();
	if (((*(__jule_closure_ctx.alloc->_12948__i)) >= (*(__jule_closure_ctx.alloc->_126347_a))._field_Left.len())) {
		return nullptr;;
	};
	__jule_closure_ctx.alloc->_12653_updateMut((*(__jule_closure_ctx.alloc->_12948__i)));
	jule::Ptr<_20899a9a1_Data> _13019_d = _2089bc5d8_evalExpr(__jule_closure_ctx.alloc->_12647_eval, (*(_129644_expr)));;
	if ((_13019_d != nullptr)) {
		(*(__jule_closure_ctx.alloc->_12958__parts))=jule::append((*__jule_closure_ctx.alloc->_12958__parts.alloc),({ auto __jule_collection = jule::Slice<_2088ca1d8_exprPart>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2088ca1d8_exprPart{._field_data=_13019_d, ._field_expr=(*(_129644_expr))}; __jule_collection; }));
	};
	return _13019_d;;
}

inline jule::Bool __jule_anon_2085752d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20890d040_ImportInfo> _48835_spkg) {
	jule::Ptr<__jule_anon_2085752d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2085752d4_ctx>();
	return ((!(_208908227_isImplicitImport(_48835_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48728_pkg))))._field_Path == (*(_48835_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_20867e50e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _84042_sema) {
	jule::Ptr<__jule_anon_20867e50e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20867e50e_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_83343_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2086804aa:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> _84216_p = *it;
			{
				if ((!(_20881ce3e_IsSelf((*(_84216_p))._field_Decl.ptr())))) {
					(*_84216_p.alloc)._field_Type=_208937432_buildNonGenericType((*(_84042_sema)), &((*((*(*(_84216_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_83411_generics), __jule_closure_ctx.alloc->_83359_ignored);
					__jule_func_result=(__jule_func_result && ((*_84216_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_2086804aa:;
			++it;
			goto _iter_begin_2086804aa;
		}
		_iter_end_2086804aa:;
	};
	if ((!(_20881e76a_IsVoid((*__jule_closure_ctx.alloc->_83343_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_83343_f.alloc)._field_Result=_208937432_buildNonGenericType((*(_84042_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_83343_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_83411_generics), __jule_closure_ctx.alloc->_83359_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_83343_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_2192b9d4d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _94342_sema) {
	jule::Ptr<__jule_anon_2192b9d4d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2192b9d4d_ctx>();
	return __jule_closure_ctx.alloc->_93646_algo(_94342_sema, &(__jule_closure_ctx.alloc->_9417_generics));;
}

inline jule::Bool __jule_anon_2192bc735(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20892a755_sema>* _95637_sema, jule::Slice<jule::Ptr<_2089cd94b_TypeAlias>>* _95655_generics) {
	jule::Ptr<__jule_anon_2192bc735_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2192bc735_ctx>();
	jule::Bool _9578_ok = true;;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_95237_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2192bdb10:;
		if (it != expr_end) {
			jule::Ptr<_20882121c_ParamIns> _95816_p = *it;
			{
				if (_20881ce3e_IsSelf((*(_95816_p))._field_Decl.ptr())) {
					if (((*(__jule_closure_ctx.alloc->_95237_f))._field_Owner == nullptr)) {
						goto _iter_next_2192bdb10;
					};
					if (_20881d1c5_IsRef((*(_95816_p))._field_Decl)) {
						(*_95816_p.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dbe98_Sptr>(_2089dbe98_Sptr{._field_Elem=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_95237_f))._field_Owner, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)})}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)});
					} else {
						(*_95816_p.alloc)._field_Type=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_95237_f))._field_Owner, (jule::Trait::Type*)&_2089ce287_Kind_mptr_data0)});
					};
				} else {
					(*(_95816_p))._field_Type=_2089341a9_buildTypeWithGenerics((*(_95637_sema)), &((*((*((*_95816_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95655_generics)), (*(__jule_closure_ctx.alloc->_95237_f))._field_Refers);
					if (((*_95816_p.alloc)._field_Type != nullptr)) {
						_20893917b_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95816_p));
					} else {
						_9578_ok=false;
					};
				};
			}
			_iter_next_2192bdb10:;
			++it;
			goto _iter_begin_2192bdb10;
		}
		_iter_end_2192bdb10:;
	};
	if ((!(_20881e76a_IsVoid((*__jule_closure_ctx.alloc->_95237_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_95237_f.alloc)._field_Result=_2089341a9_buildTypeWithGenerics((*(_95637_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_95237_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95655_generics)), (*__jule_closure_ctx.alloc->_95237_f.alloc)._field_Refers);
		_9578_ok=(((*__jule_closure_ctx.alloc->_95237_f.alloc)._field_Result != nullptr) && _9578_ok);
	};
	return _9578_ok;;
}

inline jule::Ptr<_20899a9a1_Data> __jule_anon_2196463e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20872b677_Expr>* _294939_expr) {
	jule::Ptr<__jule_anon_2196463e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2196463e9_ctx>();
	return _2089bc5d8_evalExpr(__jule_closure_ctx.alloc->_self_, (*(_294939_expr)));;
}

inline jule::Str __jule_anon219b2c8d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _91619_def) {
	{
		auto &_match_expr{ (*(_91619_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_219b2d194:;
			{
				return (*((*(_91619_def)).cast_ptr<_2089cd94b_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_219b2d7b0:;
			{
				return (*((*(_91619_def)).cast_ptr<_208746230_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_219b2d370:;
			{
				return jule::Str();;
			}
		}
		_match_end_219b2d309:;
	};
}

inline void __jule_anon_21a31cec1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _17731_file) {
	jule::Ptr<__jule_anon_21a31cec1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a31cec1_ctx>();
	{
		auto expr = &((*((*(_17731_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a31d90b:;
		if (it != expr_end) {
			jule::Ptr<_20894d7de_Var> _17816_v = *it;
			{
				if (_2093a18e5_HasDirective(&((*(_17816_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_21a314270_isLive(__jule_closure_ctx.alloc->_self_, &(_17816_v))))) {
						_21a3174c6_pushLive(__jule_closure_ctx.alloc->_self_, _17816_v);
						_2171c94ac_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_17816_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_21a31d90b:;
			++it;
			goto _iter_begin_21a31d90b;
		}
		_iter_end_21a31d90b:;
	};
	{
		auto expr = &((*((*(_17731_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21a31e984:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _18616_f = *it;
			{
				if (_2093a18e5_HasDirective(&((*(_18616_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_18616_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21a32127c:;
						if (it != expr_end) {
							jule::Ptr<_208822372_FnIns> _18818_ins = *it;
							{
								if ((!(_21a2ee1c2_isLive(__jule_closure_ctx.alloc->_self_, &(_18818_ins))))) {
									_21a30026c_pushLive(__jule_closure_ctx.alloc->_self_, _18818_ins);
									_2171c94ac_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_18818_ins))._field_Refers));
								};
							}
							_iter_next_21a32127c:;
							++it;
							goto _iter_begin_21a32127c;
						}
						_iter_end_21a32127c:;
					};
				};
			}
			_iter_next_21a31e984:;
			++it;
			goto _iter_begin_21a31e984;
		}
		_iter_end_21a31e984:;
	};
}

inline void __jule_anon_21a37a171(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_21a37a171_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a37a171_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21a37aa9a:;
			{
				jule::Ptr<_208814078_FnCallExpr> _259_m = (*(_2236_expr)).cast_ptr<_208814078_FnCallExpr>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_2171ccc63_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_21a37a8e1:;
			{
				jule::Ptr<_208814dae_AnonFnExpr> _309_m = (*(_2236_expr)).cast_ptr<_208814dae_AnonFnExpr>(&__jule_any_type101);;
				_2171d06c2_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_21a37aa23:;
	};
}

inline void __jule_anon_21a4be01d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m) {
	jule::Ptr<__jule_anon_21a4be01d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a4be01d_ctx>();
	if ((*(__jule_closure_ctx.alloc->_687__check))) {
		{
			auto &_match_expr{ (*(_7047_m)) };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_21a4beddc:;
				{
					jule::Ptr<_208812098_BinaryExpr> _7410_binary = (*(_7047_m)).cast_ptr<_208812098_BinaryExpr>(&__jule_any_type113);;
					(*__jule_closure_ctx.alloc->_687__check.alloc)=((*((*(_7410_binary))._field_Op))._field_Id != static_cast<jule::U64>(55LLU));
					if ((!((*__jule_closure_ctx.alloc->_687__check.alloc)))) {
						goto _match_end_21a4bed76;
					};
					_2170adb22_checkBinaryForBoundary(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
					_2170addca_checkBinaryForNil(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
				}
			}
			_match_end_21a4bed76:;
		};
	};
	_2170b1b58_inspectStep(__jule_closure_ctx.alloc->_527_exop, _7047_m);
}

inline void __jule_anon_21a4ed57a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _31013_m) {
	jule::Ptr<__jule_anon_21a4ed57a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a4ed57a_ctx>();
	{
		auto &_match_expr{ _31013_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21a4ee900:;
			{
				jule::Ptr<_208812098_BinaryExpr> _3249_binary = _31013_m.unsafe_cast_ptr<_208812098_BinaryExpr>();;
				{
					_2170ae77c_binaryStrCommon(__jule_closure_ctx.alloc->_self_, &(_3249_binary));
					(*(__jule_closure_ctx.alloc->_3094__step))((*(*(_3249_binary))._field_Left.alloc)._field_Model);
					(*(__jule_closure_ctx.alloc->_3094__step))((*((*(_3249_binary))._field_Right))._field_Model);
				};
			}
		}
		else {
			_case_begin_21a4edec6:;
			{
				(*__jule_closure_ctx.alloc->_3057_model.alloc)._field_Parts=jule::append((*__jule_closure_ctx.alloc->_3057_model.alloc)._field_Parts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _31013_m; __jule_collection; }));
			}
		}
		_match_end_21a4ede60:;
	};
}

inline void __jule_anon_21a58d829(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _94447_m) {
	jule::Ptr<__jule_anon_21a58d829_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a58d829_ctx>();
	{
		_2170b1b58_inspectStep(__jule_closure_ctx.alloc->_self_, _94447_m);
	};
}

inline void __jule_anon_21a75e19d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a75e19d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a75e19d_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_21a762ba7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a762ba7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a762ba7_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_21a782138(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a782138_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a782138_ctx>();
	_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_21a784624(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a784624_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a784624_ctx>();
	_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_21a79d231(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a79d231_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a79d231_ctx>();
	_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_21a82ea21(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a82ea21_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a82ea21_ctx>();
	_2172b2221_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_21a830d52(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21a830d52_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a830d52_ctx>();
	_2171e6e25_possibleRefExpr((*((*(__jule_closure_ctx.alloc->_self_))._field_oc))._field_ec, (*((*(__jule_closure_ctx.alloc->_74030_m))._field_Expr))._field_Model);
}

inline jule::Bool __jule_anon_21a8a4c3e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20894d7de_Var> _111667_v) {
	jule::Ptr<__jule_anon_21a8a4c3e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21a8a4c3e_ctx>();
	return _2171e035d_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_111034_m), &(_111667_v));;
}

inline void __jule_anon_21ac32066(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _82938_pkg) {
	jule::Ptr<__jule_anon_21ac32066_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac32066_ctx>();
	_20939c03e_IterFiles(_82938_pkg, jule::__new_closure<void,jule::Ptr<_2088255b7_SymTab>*>((void*)__jule_anon_21ac32e24, jule::Ptr<__jule_anon_21ac32e24_ctx>::make(__jule_anon_21ac32e24_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_21ac32e24_ctx_handler));
}

inline void __jule_anon_21ac46a92(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21ac46a92_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac46a92_ctx>();
	_2172b2221_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_2172015e4_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_91424_v))._field_Value))._field_Data.alloc)._field_Model);
	_2172b2221_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_21ac48b82(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21ac48b82_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac48b82_ctx>();
	_2171e6e25_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_91424_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_21ac4b38d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21ac4b38d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac4b38d_ctx>();
	_2172b2221_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_21ac4c537(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_21ac4c537_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac4c537_ctx>();
	_2172027b0_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_91424_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_21ac865a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _117938_pkg) {
	jule::Ptr<__jule_anon_21ac865a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac865a4_ctx>();
	_20939c03e_IterFiles(_117938_pkg, jule::__new_closure<void,jule::Ptr<_2088255b7_SymTab>*>((void*)__jule_anon_21ac87462, jule::Ptr<__jule_anon_21ac87462_ctx>::make(__jule_anon_21ac87462_ctx{._117938_pkg=_117938_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_21ac87462_ctx_handler));
}

inline void __jule_anon_21ac8c775(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _120231_file) {
	jule::Ptr<__jule_anon_21ac8c775_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac8c775_ctx>();
	{
		auto expr = &((*((*(_120231_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac919ee:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _120316_f = *it;
			{
				if ((*(_120316_f))._field_Ident.equal("init", 4)) {
					_2172b2ac3_indent(__jule_closure_ctx.alloc->_self_);
					static__217209124_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120316_f));
					_2172b2221_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_21ac919ee:;
			++it;
			goto _iter_begin_21ac919ee;
		}
		_iter_end_21ac919ee:;
	};
}

inline void __jule_anon_21ac98a39(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _124138_pkg) {
	jule::Ptr<__jule_anon_21ac98a39_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac98a39_ctx>();
	_2172bcc65_pushInit(__jule_closure_ctx.alloc->_self_, _124138_pkg);
}

inline void __jule_anon_21ac9da72(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20881e2b4_Fn>* _127836_m) {
	jule::Ptr<__jule_anon_21ac9da72_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac9da72_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12747_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac9e589:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _128011_em = *it;
			{
				if ((_128011_em == (*(_127836_m)))) {
					return;;
				};
			}
			_iter_next_21ac9e589:;
			++it;
			goto _iter_begin_21ac9e589;
		}
		_iter_end_21ac9e589:;
	};
	(*__jule_closure_ctx.alloc->_12747_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12747_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_20881e2b4_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_127836_m)); __jule_collection; }));
}

inline void __jule_anon_21aca10c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2089107b2_Package>* _129238_pkg) {
	jule::Ptr<__jule_anon_21aca10c4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21aca10c4_ctx>();
	_20939c03e_IterFiles(_129238_pkg, jule::__new_closure<void,jule::Ptr<_2088255b7_SymTab>*>((void*)__jule_anon_21aca1e82, jule::Ptr<__jule_anon_21aca1e82_ctx>::make(__jule_anon_21aca1e82_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_21aca1e82_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon21ad42473(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _21ec8d013_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon21ad49d4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _21ec8ca5c_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon218c62560(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20890d040_ImportInfo> _204025_pkg) {
	return (*(_204025_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_2195e2e56(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_20890d040_ImportInfo> _476130_imp) {
	jule::Ptr<__jule_anon_2195e2e56_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2195e2e56_ctx>();
	return (((*(_476130_imp))._field_Alias == __jule_closure_ctx.alloc->_476038_namespace) && (!(_208908227_isImplicitImport(_476130_imp))));;
}

inline void __jule_anon_21ac32e24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _83032_file) {
	jule::Ptr<__jule_anon_21ac32e24_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac32e24_ctx>();
	{
		auto expr = &((*((*(_83032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac3384d:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _83117_f = *it;
			{
				if (((!((*(_83117_f))._field_Binded)) && ((*_83117_f.alloc)._field_Token != nullptr))) {
					_2172b4289_pushResult(__jule_closure_ctx.alloc->_self_, &(_83117_f));
					_2172b7bb6_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83117_f), false);
				};
			}
			_iter_next_21ac3384d:;
			++it;
			goto _iter_begin_21ac3384d;
		}
		_iter_end_21ac3384d:;
	};
}

inline void __jule_anon_21ac87462(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _118032_file) {
	jule::Ptr<__jule_anon_21ac87462_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21ac87462_ctx>();
	{
		auto expr = &((*((*(_118032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21ac8cbe8:;
		if (it != expr_end) {
			jule::Ptr<_20881e2b4_Fn> _118117_f = *it;
			{
				if (((!(_220c73635_Test)) && _2093a18e5_HasDirective(&((*(_118117_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_21ac8cbe8;
				};
				if (((*(__jule_closure_ctx.alloc->_117938_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118117_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_21ac8e689:;
							{
								goto _iter_next_21ac8cbe8;
							}
						}
						_match_end_21ac8e5bd:;
					};
				};
				if (((!((*(_118117_f))._field_Binded)) && ((*_118117_f.alloc)._field_Token != nullptr))) {
					_2172ba207_func(__jule_closure_ctx.alloc->_self_, &(_118117_f));
					_2172b2221_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_21ac8cbe8:;
			++it;
			goto _iter_begin_21ac8cbe8;
		}
		_iter_end_21ac8cbe8:;
	};
}

inline void __jule_anon_21aca1e82(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_2088255b7_SymTab>* _129332_file) {
	jule::Ptr<__jule_anon_21aca1e82_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_21aca1e82_ctx>();
	{
		auto expr = &((*((*(_129332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21aca28ab:;
		if (it != expr_end) {
			jule::Ptr<_2088299c8_Trait> _129417_t = *it;
			{
				if (((*(_129417_t))._field_Token != nullptr)) {
					_2172bd815_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129417_t));
				};
			}
			_iter_next_21aca28ab:;
			++it;
			goto _iter_begin_21aca28ab;
		}
		_iter_end_21aca28ab:;
	};
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_220c751b4_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_217343ec8_OutDir = jule::Str::lit("dist", 4);
	_21734436e_OutName = jule::Str::lit("ir.cpp", 6);
	_21734457d_Out = jule::Str();
	_2390a7665_STDIN = 0LLU;
	_2390a7995_STDOUT = 1LLU;
	_2390a7c81_STDERR = 2LLU;
	_21e42c20d_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_21e42cb59_acceptRanges = ({ auto __jule_collection = jule::Array<_21e42c7b3_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _21e42c7b3_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _21e42c7b3_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _21e42c7b3_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _21e42c7b3_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _21e42c7b3_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _21e42c7b3_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_21e56cbbc__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_21e56d2a5__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_220be1273__L = jule::new_ptr<_220c58829_RangeTable>(_220c58829_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_220c57d78_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _220c57d78_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _220c57d78_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _220c57d78_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_220c583a6_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _220c583a6_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _220c583a6_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _220c583a6_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _220c583a6_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _220c583a6_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_220be2186__LU = jule::new_ptr<_220c58829_RangeTable>(_220c58829_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_220c57d78_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _220c57d78_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _220c57d78_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _220c57d78_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _220c57d78_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _220c57d78_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_220c583a6_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _220c583a6_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _220c583a6_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _220c583a6_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_220be816a_Letter = _220be1273__L;
	_220bee43a_Upper = _220be2186__LU;
	_220c51987__CaseRanges = ({ auto __jule_collection = jule::Slice<_220c578c2_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _220c578c2_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _220c578c2_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_220c51c73__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_220c53a55_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_220c53d41_caseOrbit = ({ auto __jule_collection = jule::Slice<_220c573c7_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _220c573c7_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _220c573c7_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _220c573c7_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _220c573c7_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _220c573c7_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _220c573c7_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _220c573c7_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _220c573c7_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _220c573c7_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _220c573c7_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _220c573c7_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _220c573c7_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _220c573c7_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _220c573c7_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _220c573c7_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _220c573c7_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _220c573c7_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _220c573c7_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _220c573c7_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _220c573c7_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _220c573c7_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _220c573c7_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _220c573c7_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _220c573c7_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _220c573c7_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _220c573c7_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _220c573c7_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _220c573c7_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _220c573c7_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _220c573c7_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _220c573c7_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _220c573c7_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _220c573c7_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _220c573c7_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _220c573c7_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _220c573c7_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _220c573c7_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _220c573c7_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _220c573c7_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _220c573c7_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _220c573c7_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _220c573c7_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _220c573c7_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _220c573c7_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _220c573c7_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _220c573c7_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _220c573c7_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _220c573c7_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _220c573c7_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _220c573c7_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _220c573c7_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _220c573c7_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _220c573c7_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _220c573c7_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _220c573c7_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _220c573c7_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _220c573c7_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _220c573c7_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _220c573c7_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _220c573c7_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _220c573c7_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _220c573c7_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _220c573c7_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _220c573c7_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _220c573c7_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _220c573c7_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _220c573c7_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _220c573c7_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _220c573c7_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _220c573c7_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _220c573c7_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _220c573c7_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _220c573c7_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _220c573c7_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _220c573c7_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _220c573c7_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _220c573c7_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _220c573c7_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _220c573c7_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _220c573c7_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _220c573c7_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _220c573c7_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _220c573c7_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _220c573c7_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _220c573c7_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _220c573c7_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _220c573c7_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _220c573c7_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_21e587753_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_21e587841_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_21e611722_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_220c6bce3_PathStdlib = jule::Str();
	_220c6c079_PathExec = jule::Str();
	_220c6c332_PathWd = jule::Str();
	_220c6c62e_PathApi = jule::Str();
	_220c6c8d7_OS = jule::Str::lit("linux", 5);
	_220c6cb90_Arch = jule::Str::lit("arm64", 5);
	_220c71721_Compiler = jule::Str();
	_220c72b1d_CompilerPath = jule::Str();
	_220c72d2c_CppStd = jule::Str::lit("cpp17", 5);
	_220c730c4_Shadowing = false;
	_220c7337c_Transpilation = false;
	_220c73635_Test = false;
	_220c738dd_RC = true;
	_220c73ca6_Safety = true;
	_220c73ee8_Production = false;
	_21ec86c65_f32info = _21ec8689c_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_21ec87062_f64info = _21ec8689c_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_21ec8e982_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_21ec916dc_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_21ec9229d_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_21ec925cd_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_21ec957ce_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_21ec9999d_leftCheats = ({ auto __jule_collection = jule::Slice<_21ec9956e_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _21ec9956e_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _21ec9956e_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _21ec9956e_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _21ec9956e_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _21ec9956e_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _21ec9956e_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _21ec9956e_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _21ec9956e_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _21ec9956e_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _21ec9956e_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _21ec9956e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _21ec9956e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _21ec9956e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _21ec9956e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _21ec9956e_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _21ec9956e_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _21ec9956e_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _21ec9956e_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _21ec9956e_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _21ec9956e_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _21ec9956e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _21ec9956e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _21ec9956e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _21ec9956e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _21ec9956e_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _21ec9956e_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _21ec9956e_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _21ec9956e_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _21ec9956e_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _21ec9956e_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _21ec9956e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _21ec9956e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _21ec9956e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _21ec9956e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _21ec9956e_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _21ec9956e_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _21ec9956e_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _21ec9956e_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _21ec9956e_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _21ec9956e_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _21ec9956e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _21ec9956e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _21ec9956e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _21ec9956e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _21ec9956e_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _21ec9956e_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _21ec9956e_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _21ec9956e_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _21ec9956e_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _21ec9956e_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _21ec9956e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _21ec9956e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _21ec9956e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _21ec9956e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _21ec9956e_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _21ec9956e_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _21ec9956e_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _21ec9956e_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _21ec9956e_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _21ec9956e_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _21ec9956e_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_20823b693_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_20823b97e_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_20823bcae_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_20870ad0a_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_20870b0e6_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_208719ad8_keywords = ({ auto __jule_collection = jule::Array<_2087196ed_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_208719e18_basicOps = ({ auto __jule_collection = jule::Array<_2087196ed_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _2087196ed_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_208893ab9_BitSize = 0LL;
	_208893d2d_SysInt = jule::Str();
	_2088940d6_SysUint = jule::Str();
	_2088c4d3c_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_208a53350_primNil = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_208a5364c_primVoid = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a53905_primAny = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a53c02_primStr = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a53eaa_primBool = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a54263_primUintptr = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a5451b_primUint = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a548d4_primInt = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a54b26_primI8 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a54dbd_primI16 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a55176_primI32 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a5542e_primI64 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a556d7_primU8 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a55990_primU16 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a55c48_primU32 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a56232_primU64 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a56474_primF32 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_208a56683_primF64 = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_2089ec261_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)});
	_2093a4b90_ProgramMeta = static_cast<jule::Ptr<_2093a6dc3_Meta>>(nullptr);
	_2170b594d_emptyData = jule::new_ptr<_2170b62ab_data>(_2170b62ab_data{._field_boundary=jule::Ptr<_2170b8566_boundary>(nullptr), ._field_nils=jule::Ptr<_216daa501_nils>(nullptr), ._field_dynamic=jule::Ptr<_2170b3682_dynamic>(nullptr)});
	_2170bb305_Copy = false;
	_2170bb602_Deadcode = false;
	_2170bb8aa_Append = false;
	_2170bbba7_Math = false;
	_2170bbe60_Access = false;
	_2170bc218_Inline = false;
	_2170bc4c1_Ptr = false;
	_2170bc889_Cond = false;
	_2170bcacb_Str = false;
	_2170bcd73_Slice = false;
	_2170bd12b_Assign = false;
	_2170bd3d4_Exceptional = false;
	_2170bd68c_Iter = false;
	_2170bd945_Dynamic = false;
	_2170bdbed_Array = false;
	_2170be1d7_Len = false;
	_2170be429_StdStrings = false;
	_2170be638_StdMathCmplx = false;
	_2171d27a1_exprEnabled = false;
	_2171d29b0_scopeEnabled = false;
	_2172a3245_mdays = ({ auto __jule_collection = jule::Array<jule::I64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 31LL; (*it++) = 29LL; __jule_collection; });
	_2171d63ba_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_2172ade76_generalGCPtr = jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089dbe98_Sptr>(_2089dbe98_Sptr{._field_Elem=jule::new_ptr<_2089ce661_Type>(_2089ce661_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_2089d846c_Prim>(_2089d846c_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data22)})}), (jule::Trait::Type*)&_2089ce287_Kind_mptr_data23)});
	_220c5169b_CaseRanges = _220c51987__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_220c7699b_main();

	return EXIT_SUCCESS;
}