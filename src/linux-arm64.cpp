// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 8/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>

struct _1a3e31431_Importer{};
struct _1a3ecd7ca_Kind{};
struct _1a3eee697_Lookup{};
struct _1a4cb984b_CommonFlag{};
struct _1b9c45d67_Range16;
struct _1b9c462da_Range32;
struct _1b9c4675d_RangeTable;
struct _1b9d0a6bd_acceptRange;
struct _1b9d34a49_lazyBuff;
struct _1d2a84044_DirEntry;
struct _1d299198a_Directory;
struct _1d29727a1_File;
struct _1d29915b1_Status;
struct _1b9e0cc43_Cmd;
struct _1b9db24ab_Log;
struct _1ba1dbeab_Token;
struct _1ba1e2346_File;
struct _1ba1e439d_kindPair;
struct _1ba1e9e97_lex;
struct _1a30c48a0_Ast;
struct _1a30c562b_Node;
struct _1a30c5a27_Directive;
struct _1a3109462_TypeDecl;
struct _1a3109a28_IdentTypeDecl;
struct _1a310a177_SubIdentTypeDecl;
struct _1a310a52e_NamespaceTypeDecl;
struct _1a310a81a_SptrTypeDecl;
struct _1a310ac16_SlcTypeDecl;
struct _1a310b002_TupleTypeDecl;
struct _1a310b2dd_PtrTypeDecl;
struct _1a310b970_ArrTypeDecl;
struct _1a310c1bd_MapTypeDecl;
struct _1a310c575_RetTypeDecl;
struct _1a310d983_Expr;
struct _1a310dc6e_RangeExpr;
struct _1a310e324_UseExpr;
struct _1a310e610_TupleExpr;
struct _1a310e9b7_LitExpr;
struct _1a31101c1_UnsafeExpr;
struct _1a3110578_CoExpr;
struct _1a31109eb_IdentExpr;
struct _1a3111205_UnaryExpr;
struct _1a31115ac_VariadicExpr;
struct _1a3111964_CastExpr;
struct _1a3111d1b_NsSelectionExpr;
struct _1a311228e_SubIdentExpr;
struct _1a3112712_BinopExpr;
struct _1a3112c51_FnCallExpr;
struct _1a31136d0_FieldExprPair;
struct _1a3113e2d_StructLit;
struct _1a31143a1_BraceLit;
struct _1a3114db8_KeyValPair;
struct _1a311533b_SliceExpr;
struct _1a3115bcc_IndexingExpr;
struct _1a31162d7_SlicingExpr;
struct _1a31165c3_Constraint;
struct _1a3116a46_GenericDecl;
struct _1a3116ded_LabelSt;
struct _1a31172a5_GotoSt;
struct _1a3117591_FallSt;
struct _1a3117b9b_AssignLeft;
struct _1a31181da_AssignSt;
struct _1a3119175_Stmt;
struct _1a3119780_ScopeTree;
struct _1a3119e56_ParamDecl;
struct _1a31210d3_FnDecl;
struct _1a31220b2_VarDecl;
struct _1a3122469_RetSt;
struct _1a3122ac9_Iter;
struct _1a312339e_WhileKind;
struct _1a3123c40_RangeKind;
struct _1a31240e7_BreakSt;
struct _1a312449e_ContSt;
struct _1a3124922_If;
struct _1a3124cc9_Else;
struct _1a312524c_Conditional;
struct _1a3125923_TypeAliasDecl;
struct _1a3125d96_Case;
struct _1a312656c_MatchCase;
struct _1a3126d0e_UseDecl;
struct _1a3127282_EnumItemDecl;
struct _1a3127caa_EnumDecl;
struct _1a31287b1_TypeEnumItemDecl;
struct _1a31289ae_TypeEnumDecl;
struct _1a312900e_FieldDecl;
struct _1a312986c_StructDecl;
struct _1a3129e77_TraitDecl;
struct _1a312a582_Impl;
struct _1a31618e8_Const;
struct _1a39e1b3a_floatInfo;
struct _1a38e393d_decimalSlice;
struct _1a3e1c021_leftCheat;
struct _1a3e1c384_decimal;
struct _1a30dc038_Field;
struct _1a30eb5b9_Operators;
struct _1a30e9b8e_Struct;
struct _1a3102306_FieldIns;
struct _1a31bee0c_OperandExprModel;
struct _1a31c00e9_BinopExprModel;
struct _1a31c02d6_UnaryExprModel;
struct _1a31c04c3_StructArgExprModel;
struct _1a31c06b0_StructLitExprModel;
struct _1a31c089c_AllocStructLitExprModel;
struct _1a31c0a89_CastingExprModel;
struct _1a31c0c76_FnCallExprModel;
struct _1a31c0e63_SliceExprModel;
struct _1a31c1150_IndexingExprModel;
struct _1a31c133c_AnonFnExprModel;
struct _1a31c1529_KeyValPairExprModel;
struct _1a31c1716_MapExprModel;
struct _1a31c1903_SlicingExprModel;
struct _1a31c1ae0_TraitSubIdentExprModel;
struct _1a31c200d_StructSubIdentExprModel;
struct _1a31c21ea_StructStaticIdentExprModel;
struct _1a31c23d7_ArrayExprModel;
struct _1a31c25c4_CommonIdentExprModel;
struct _1a31c27b1_CommonSubIdentExprModel;
struct _1a31c299d_TupleExprModel;
struct _1a31c2b8a_BuiltinOutCallExprModel;
struct _1a31c2d77_BuiltinOutlnCallExprModel;
struct _1a31c3064_BuiltinCloneCallExprModel;
struct _1a31c3251_BuiltinNewCallExprModel;
struct _1a31c343d_BuiltinPanicCallExprModel;
struct _1a31c362a_BuiltinAssertCallExprModel;
struct _1a31c3817_BuiltinMakeCallExprModel;
struct _1a31c3a04_BuiltinAppendCallExprModel;
struct _1a31c3be1_BuiltinLenCallExprModel;
struct _1a31c3dcd_BuiltinCapCallExprModel;
struct _1a31c1ccc_BuiltinCopyCallExprModel;
struct _1a31c453d_BuiltinErrorCallExprModel;
struct _1a31c472a_SizeofExprModel;
struct _1a31c4917_AlignofExprModel;
struct _1a31c4b04_RuneExprModel;
struct _1a31c4ce1_IntegratedToStrExprModel;
struct _1a31c4ecd_BackendEmitExprModel;
struct _1a31c51ba_FreeExprModel;
struct _1a31c5b6b_RetType;
struct _1a31c6386_Param;
struct _1a31c7bc3_Fn;
struct _1a31c99a5_ParamIns;
struct _1a31ca874_FnIns;
struct _1a31cd745_ReferenceStack;
struct _1a31ceb0e_Pass;
struct _1a31d40a8_symbolBuilder;
struct _1a31d9a81_Trait;
struct _1a31db1d1_EnumItem;
struct _1a31dbbc6_Enum;
struct _1a31dcc0a_TypeEnumItem;
struct _1a31dd2c1_TypeEnum;
struct _1a3205e21_constraintChecker;
struct _1a326e41d_Impl;
struct _1a3e21344_Scope;
struct _1a3e21531_If;
struct _1a3e2171d_Else;
struct _1a3e2190a_Conditional;
struct _1a3e21ae7_InfIter;
struct _1a3e21cd4_WhileIter;
struct _1a3e22103_RangeIter;
struct _1a3e222e0_ContSt;
struct _1a3e224cc_BreakSt;
struct _1a3e226b9_Label;
struct _1a3e228a6_GotoSt;
struct _1a3e22a93_Postfix;
struct _1a3e22c80_Assign;
struct _1a3e22e6c_MultiAssign;
struct _1a3e23159_Match;
struct _1a3e236a9_Case;
struct _1a3e239c8_FallSt;
struct _1a3e23bb5_RetSt;
struct _1a3e23da2_scopeLabel;
struct _1a3e2408e_scopeGoto;
struct _1a3e2427b_scopeChecker;
struct _1a3e2d021_directiveChecker;
struct _1a3e3409e_ImportInfo;
struct _1a3e37008_Package;
struct _1a3e3c1ea_Sema;
struct _1a3e57325_missingRetChecker;
struct _1a3e58ed6_IterRelation;
struct _1a3e59e4e_Var;
struct _1a3e5abec_FuncPattern;
struct _1a3e8bb1d_typeCompatibilityChecker;
struct _1a3e8d746_assignTypeChecker;
struct _1a3e90160_dynamicTypeAnnotation;
struct _1a3e9495b_fnCallArgChecker;
struct _1a3e97365_structLitChecker;
struct _1a3e98e49_rangeChecker;
struct _1a3e9b0a0_retTypeChecker;
struct _1a3e9d14b_SymbolTable;
struct _1a3ea2e75_Data;
struct _1a3ea3eed_Value;
struct _1a3ea49e3_Eval;
struct _1a3ec0877_unaryEval;
struct _1a3ec2615_binaryEval;
struct _1a3ecc4cc_InsGeneric;
struct _1a3ecd016_TypeAlias;
struct _1a3ecdc09_TypeKind;
struct _1a3ed2d62_TypeSymbol;
struct _1a3ed36d1_Prim;
struct _1a3ed6e65_Sptr;
struct _1a3ed78c2_Slc;
struct _1a3ed8450_Tuple;
struct _1a3ed8e78_Map;
struct _1a3ed9a6c_Arr;
struct _1a3eda4c9_Ptr;
struct _1a3edb420_referencer;
struct _1a3edc234_typeChecker;
struct _1a3ee97a2_identTypeLookup;
struct _1a46a7b0d_FileInfo;
struct _1a47094de_stmt;
struct _1a4709d19_scopeParser;
struct _1a47162cb_exprBuilder;
struct _1a4722b34_assignInfo;
struct _1a4726462_parser;
struct _1a4737176_typeBuilder;
struct _1c82a0836_CompileInfo;
struct _1c82a1b89_directiveEval;
struct _1a4156cc7_JuleImporter;
struct _1c8271c69_OrderedDefines;
struct _1a46e5cd3_defineOrderer;
struct _1a47eecee_liveTable;
struct _1a48391ac_scopeDeadCode;
struct _1a483d117_exprDeadCode;
struct _1c8396388_UnsafeBinopExprModel;
struct _1c846418c_UnsafeIndexingExprModel;
struct _1c84705e9_PushToSliceExprModel;
struct _1c8436a66_MutSlicingExprModel;
struct _1c8424180_StrInsertBeginExprModel;
struct _1c842436c_scopeOptimizer;
struct _1a4097047_exprOptimizer;
struct _1a480a337_Optimizer;
struct _1a4847dd0_AnsiEscape;
struct _1a48494b9_Logger;
struct _1a4e69c2c_AbsTime;
struct _1a4e6a3c0_Time;
struct _1a4db554b_scopeCoder;
struct _1a4dbd2bd_exprCoder;
struct _1a4dcb919_deriveCoder;
struct _1a4dccd8d_TestCoder;
struct _1a4dd04de_identCoder;
struct _1a4dd833d_SerializationInfo;
struct _1a4e7242c_traitHash;
struct _1a4e765c9_customType;
struct _1a4e76dc1_typeCoder;
struct _1a795951b_Flag;
struct _1a795d366_Flag;
struct _1a7961ea2_Flag;
struct _1a7965b32_Flag;
struct _1a796976d_Flag;
struct _1a4eac368_FlagSet;
struct _1a4380b6b_IR;
struct _1a312ad46_StructIns;
struct _1a48000b8_ObjectDeadCode;
struct _1a4e72619_ObjectCoder;
struct _1a4eaea41_argParser;
struct _1b9c45d67_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_1b9c45d67_Range16(void) = default;

	inline bool operator==(_1b9c45d67_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1b9c45d67_Range16 _other) { return !this->operator==(_other); }


};
struct _1b9c462da_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_1b9c462da_Range32(void) = default;

	inline bool operator==(_1b9c462da_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1b9c462da_Range32 _other) { return !this->operator==(_other); }


};
struct _1b9c4675d_RangeTable {
	jule::Slice<_1b9c45d67_Range16> _field_R16 = jule::Slice<_1b9c45d67_Range16>();
	jule::Slice<_1b9c462da_Range32> _field_R32 = jule::Slice<_1b9c462da_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_1b9c4675d_RangeTable(void) = default;

	inline bool operator==(_1b9c4675d_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_1b9c4675d_RangeTable _other) { return !this->operator==(_other); }


};
struct _1b9d0a6bd_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1b9d0a6bd_acceptRange(void) = default;

	inline bool operator==(_1b9d0a6bd_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1b9d0a6bd_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _1b9d34ebc_index(_1b9d34a49_lazyBuff*, jule::I64);
inline void _1b9d35242_append(_1b9d34a49_lazyBuff*, jule::U8);
inline jule::Str _1b9d354a6_string(_1b9d34a49_lazyBuff*);
struct _1b9d34a49_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_1b9d34a49_lazyBuff(void) = default;

	inline bool operator==(_1b9d34a49_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_1b9d34a49_lazyBuff _other) { return !this->operator==(_other); }


};
struct _1d2a84044_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_1d29915b1_Status> _field_Stat = jule::Ptr<_1d29915b1_Status>();
	

	_1d2a84044_DirEntry(void) = default;

	inline bool operator==(_1d2a84044_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1d2a84044_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>> static__1b9d3908c_Read(jule::Str);
inline jule::VoidExceptional static__1b9d3929b_Create(jule::Str);
inline jule::VoidExceptional static__1b9d394aa_Remove(jule::Str);
struct _1d299198a_Directory {
	

	_1d299198a_Directory(void) = default;

	inline bool operator==(_1d299198a_Directory _other) { return true; }

	inline bool operator!=(_1d299198a_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1d29727a1_File>> static__1d29782bd_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1d297a28c_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1d297ae4c_Write(_1d29727a1_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1d297c569_Read(_1d29727a1_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1d29727a1_File> static__1d299675e_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1d29727a1_File>> static__1d2998453_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d2999212_Read(jule::Str);
inline jule::VoidExceptional static__1d299a048_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1d299bac7_Seek(_1d29727a1_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1d299c5ab_Close(_1d29727a1_File*);
struct _1d29727a1_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_1d29727a1_File(void) = default;

	inline bool operator==(_1d29727a1_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d29727a1_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1d29915b1_Status>> static__1d299388d_Of(jule::Str);
inline jule::Bool _1d299dc3e_IsDir(_1d29915b1_Status*);
inline jule::Bool _1d2a4d9d1_IsReg(_1d29915b1_Status*);
struct _1d29915b1_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_1d29915b1_Status(void) = default;

	inline bool operator==(_1d29915b1_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1d29915b1_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b9e0cc43_Cmd> static__1b9e0d172_New(jule::Str);
inline jule::Exceptional<jule::I64> _1b9e0d3d6_Spawn(_1b9e0cc43_Cmd*);
inline jule::Exceptional<jule::I64> _1b9e11340_spawn(_1b9e0cc43_Cmd*);
struct _1b9e0cc43_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_1b9e0cc43_Cmd(void) = default;

	inline bool operator==(_1b9e0cc43_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_1b9e0cc43_Cmd _other) { return !this->operator==(_other); }


};
struct _1b9db24ab_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_1b9db24ab_Log(void) = default;

	inline bool operator==(_1b9db24ab_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1b9db24ab_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1ba1dc363_Prec(_1ba1dbeab_Token*);
struct _1ba1dbeab_Token {
	jule::Ptr<_1ba1e2346_File> _field_File = jule::Ptr<_1ba1e2346_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_1ba1dbeab_Token(void) = default;

	inline bool operator==(_1ba1dbeab_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1ba1dbeab_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ba1e2753_IsOk(_1ba1e2346_File*);
inline void _1ba1e29c8_Fill(_1ba1e2346_File*, jule::Slice<jule::U8>);
inline jule::Str _1ba1e2c3c_Dir(_1ba1e2346_File*);
inline jule::Str _1ba1e2ea1_Name(_1ba1e2346_File*);
inline jule::Uintptr _1ba1e3215_Addr(_1ba1e2346_File*);
inline jule::Str _1ba1e3523_GetRow(_1ba1e2346_File*, jule::I64);
struct _1ba1e2346_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Tokens = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	

	_1ba1e2346_File(void) = default;

	inline bool operator==(_1ba1e2346_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_1ba1e2346_File _other) { return !this->operator==(_other); }


};
struct _1ba1e439d_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1ba1e439d_kindPair(void) = default;

	inline bool operator==(_1ba1e439d_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ba1e439d_kindPair _other) { return !this->operator==(_other); }


};
inline void _1ba1ea53b_pushErr(_1ba1e9e97_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1ba1ea85a_pushErrTok(_1ba1e9e97_lex*, jule::Ptr<_1ba1dbeab_Token>&, jule::Str);
inline void _1ba1eaa36_lex(_1ba1e9e97_lex*);
inline jule::Str _1ba1ead44_id(_1ba1e9e97_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1ba1eb0a8_resume(_1ba1e9e97_lex*);
inline void _1ba1eb32d_lexLineComment(_1ba1e9e97_lex*, jule::Ptr<_1ba1dbeab_Token>&);
inline void _1ba1eb5a3_lexRangeComment(_1ba1e9e97_lex*, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Str _1ba1eb8b1_num(_1ba1e9e97_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1ba1ebbbe_escapeSeq(_1ba1e9e97_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1ba1ec076_getRune(_1ba1e9e97_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1ba1ec384_lexRune(_1ba1e9e97_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1ba1ec5e8_lexStr(_1ba1e9e97_lex*);
inline jule::Bool _1ba1ec85c_isFirstTokenOfLine(_1ba1e9e97_lex*);
inline void _1ba1eca38_newLine(_1ba1e9e97_lex*);
inline jule::Bool _1ba1ed033_isOp(_1ba1e9e97_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1ba1ed3da_lexBasicOps(_1ba1e9e97_lex*, jule::Slice<jule::U8>, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1ba1ed792_lexId(_1ba1e9e97_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1ba1edb49_lexNum(_1ba1e9e97_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Ptr<_1ba1dbeab_Token> _1ba1eddad_token(_1ba1e9e97_lex*);
struct _1ba1e9e97_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Ptr<_1ba1e2346_File> _field_file = jule::Ptr<_1ba1e2346_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1b9db24ab_Log> _field_errors = jule::Slice<_1b9db24ab_Log>();
	

	_1ba1e9e97_lex(void) = default;

	inline bool operator==(_1ba1e9e97_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ba1e9e97_lex _other) { return !this->operator==(_other); }


};
struct _1a30c48a0_Ast {
	jule::Ptr<_1ba1e2346_File> _field_File = jule::Ptr<_1ba1e2346_File>();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Slice<jule::Ptr<_1a3126d0e_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_1a3126d0e_UseDecl>>();
	jule::Slice<_1a30c562b_Node> _field_Nodes = jule::Slice<_1a30c562b_Node>();
	

	_1a30c48a0_Ast(void) = default;

	inline bool operator==(_1a30c48a0_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_1a30c48a0_Ast _other) { return !this->operator==(_other); }


};
struct _1a30c562b_Node {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1a30c562b_Node(void) = default;

	inline bool operator==(_1a30c562b_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a30c562b_Node _other) { return !this->operator==(_other); }


};
struct _1a30c5a27_Directive {
	jule::Ptr<_1ba1dbeab_Token> _field_Tag = jule::Ptr<_1ba1dbeab_Token>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Args = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	

	_1a30c5a27_Directive(void) = default;

	inline bool operator==(_1a30c5a27_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1a30c5a27_Directive _other) { return !this->operator==(_other); }


};
struct _1a3109462_TypeDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1a3109462_TypeDecl(void) = default;

	inline bool operator==(_1a3109462_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3109462_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3109d8b_IsPrim(_1a3109a28_IdentTypeDecl*);
struct _1a3109a28_IdentTypeDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>();
	

	_1a3109a28_IdentTypeDecl(void) = default;

	inline bool operator==(_1a3109a28_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1a3109a28_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310a177_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a3109a28_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_1a3109a28_IdentTypeDecl>>();
	

	_1a310a177_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1a310a177_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1a310a177_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310a52e_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Idents = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a310a52e_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1a310a52e_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a310a52e_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310a81a_SptrTypeDecl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Elem = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a310a81a_SptrTypeDecl(void) = default;

	inline bool operator==(_1a310a81a_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a310a81a_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310ac16_SlcTypeDecl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Elem = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a310ac16_SlcTypeDecl(void) = default;

	inline bool operator==(_1a310ac16_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a310ac16_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310b002_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>();
	

	_1a310b002_TupleTypeDecl(void) = default;

	inline bool operator==(_1a310b002_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1a310b002_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a310b640_IsUnsafe(_1a310b2dd_PtrTypeDecl*);
struct _1a310b2dd_PtrTypeDecl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Elem = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a310b2dd_PtrTypeDecl(void) = default;

	inline bool operator==(_1a310b2dd_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a310b2dd_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a310bd49_AutoSized(_1a310b970_ArrTypeDecl*);
struct _1a310b970_ArrTypeDecl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Elem = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a310d983_Expr> _field_Size = jule::Ptr<_1a310d983_Expr>();
	

	_1a310b970_ArrTypeDecl(void) = default;

	inline bool operator==(_1a310b970_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a310b970_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310c1bd_MapTypeDecl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Key = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Val = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a310c1bd_MapTypeDecl(void) = default;

	inline bool operator==(_1a310c1bd_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a310c1bd_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310c575_RetTypeDecl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Idents = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	

	_1a310c575_RetTypeDecl(void) = default;

	inline bool operator==(_1a310c575_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1a310c575_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a310d983_Expr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1a310d983_Expr(void) = default;

	inline bool operator==(_1a310d983_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a310d983_Expr _other) { return !this->operator==(_other); }


};
struct _1a310dc6e_RangeExpr {
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a310dc6e_RangeExpr(void) = default;

	inline bool operator==(_1a310dc6e_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a310dc6e_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a310e324_UseExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a310e324_UseExpr(void) = default;

	inline bool operator==(_1a310e324_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a310e324_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a310e610_TupleExpr {
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_Expr = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	

	_1a310e610_TupleExpr(void) = default;

	inline bool operator==(_1a310e610_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a310e610_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a310ed19_IsNil(_1a310e9b7_LitExpr*);
struct _1a310e9b7_LitExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Value = jule::Str();
	

	_1a310e9b7_LitExpr(void) = default;

	inline bool operator==(_1a310e9b7_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a310e9b7_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a31101c1_UnsafeExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a31101c1_UnsafeExpr(void) = default;

	inline bool operator==(_1a31101c1_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31101c1_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a3110578_CoExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a3110578_CoExpr(void) = default;

	inline bool operator==(_1a3110578_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3110578_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3110d4d_IsSelf(_1a31109eb_IdentExpr*);
struct _1a31109eb_IdentExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_1a31109eb_IdentExpr(void) = default;

	inline bool operator==(_1a31109eb_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1a31109eb_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a3111205_UnaryExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Op = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a3111205_UnaryExpr(void) = default;

	inline bool operator==(_1a3111205_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3111205_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a31115ac_VariadicExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a31115ac_VariadicExpr(void) = default;

	inline bool operator==(_1a31115ac_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31115ac_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a3111964_CastExpr {
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a3111964_CastExpr(void) = default;

	inline bool operator==(_1a3111964_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3111964_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a3111d1b_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Ns = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Ptr<_1ba1dbeab_Token> _field_Ident = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3111d1b_NsSelectionExpr(void) = default;

	inline bool operator==(_1a3111d1b_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3111d1b_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1a311228e_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1ba1dbeab_Token> _field_Ident = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a311228e_SubIdentExpr(void) = default;

	inline bool operator==(_1a311228e_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a311228e_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a3112712_BinopExpr {
	jule::Ptr<_1a310d983_Expr> _field_Left = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a310d983_Expr> _field_Right = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1ba1dbeab_Token> _field_Op = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3112712_BinopExpr(void) = default;

	inline bool operator==(_1a3112712_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3112712_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a31130b4_Unhandled(_1a3112c51_FnCallExpr*);
inline jule::Bool _1a3113328_Ignored(_1a3112c51_FnCallExpr*);
struct _1a3112c51_FnCallExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_Args = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	jule::Ptr<_1a3119780_ScopeTree> _field_Exception = jule::Ptr<_1a3119780_ScopeTree>();
	

	_1a3112c51_FnCallExpr(void) = default;

	inline bool operator==(_1a3112c51_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_1a3112c51_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3113a32_IsTargeted(_1a31136d0_FieldExprPair*);
struct _1a31136d0_FieldExprPair {
	jule::Ptr<_1ba1dbeab_Token> _field_Field = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a31136d0_FieldExprPair(void) = default;

	inline bool operator==(_1a31136d0_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31136d0_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a3113e2d_StructLit {
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	

	_1a3113e2d_StructLit(void) = default;

	inline bool operator==(_1a3113e2d_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1a3113e2d_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3114a22_IsEmpty(_1a31143a1_BraceLit*);
struct _1a31143a1_BraceLit {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	

	_1a31143a1_BraceLit(void) = default;

	inline bool operator==(_1a31143a1_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1a31143a1_BraceLit _other) { return !this->operator==(_other); }


};
struct _1a3114db8_KeyValPair {
	jule::Ptr<_1a310d983_Expr> _field_Key = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a310d983_Expr> _field_Val = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1ba1dbeab_Token> _field_Colon = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3114db8_KeyValPair(void) = default;

	inline bool operator==(_1a3114db8_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a3114db8_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a311568d_IsEmpty(_1a311533b_SliceExpr*);
struct _1a311533b_SliceExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	

	_1a311533b_SliceExpr(void) = default;

	inline bool operator==(_1a311533b_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1a311533b_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1a3115bcc_IndexingExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a310d983_Expr> _field_Index = jule::Ptr<_1a310d983_Expr>();
	

	_1a3115bcc_IndexingExpr(void) = default;

	inline bool operator==(_1a3115bcc_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a3115bcc_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a31162d7_SlicingExpr {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a310d983_Expr> _field_Start = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a310d983_Expr> _field_To = jule::Ptr<_1a310d983_Expr>();
	

	_1a31162d7_SlicingExpr(void) = default;

	inline bool operator==(_1a31162d7_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a31162d7_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a31165c3_Constraint {
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>();
	

	_1a31165c3_Constraint(void) = default;

	inline bool operator==(_1a31165c3_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_1a31165c3_Constraint _other) { return !this->operator==(_other); }


};
struct _1a3116a46_GenericDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a31165c3_Constraint> _field_Constraint = jule::Ptr<_1a31165c3_Constraint>();
	

	_1a3116a46_GenericDecl(void) = default;

	inline bool operator==(_1a3116a46_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a3116a46_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a3116ded_LabelSt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1a3116ded_LabelSt(void) = default;

	inline bool operator==(_1a3116ded_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3116ded_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a31172a5_GotoSt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_Label = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a31172a5_GotoSt(void) = default;

	inline bool operator==(_1a31172a5_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a31172a5_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a3117591_FallSt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3117591_FallSt(void) = default;

	inline bool operator==(_1a3117591_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a3117591_FallSt _other) { return !this->operator==(_other); }


};
struct _1a3117b9b_AssignLeft {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a3117b9b_AssignLeft(void) = default;

	inline bool operator==(_1a3117b9b_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3117b9b_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a31181da_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_1ba1dbeab_Token> _field_Setter = jule::Ptr<_1ba1dbeab_Token>();
	jule::Slice<jule::Ptr<_1a3117b9b_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_1a3117b9b_AssignLeft>>();
	jule::Ptr<_1a310d983_Expr> _field_Right = jule::Ptr<_1a310d983_Expr>();
	

	_1a31181da_AssignSt(void) = default;

	inline bool operator==(_1a31181da_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a31181da_AssignSt _other) { return !this->operator==(_other); }


};
struct _1a3119175_Stmt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1a3119175_Stmt(void) = default;

	inline bool operator==(_1a3119175_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a3119175_Stmt _other) { return !this->operator==(_other); }


};
struct _1a3119780_ScopeTree {
	jule::Ptr<_1a3119780_ScopeTree> _field_Parent = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_1a3119175_Stmt> _field_Stmts = jule::Slice<_1a3119175_Stmt>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3119780_ScopeTree(void) = default;

	inline bool operator==(_1a3119780_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1a3119780_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a311a2b9_IsSelf(_1a3119e56_ParamDecl*);
inline jule::Bool _1a311a52d_IsRef(_1a3119e56_ParamDecl*);
struct _1a3119e56_ParamDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_1a3119e56_ParamDecl(void) = default;

	inline bool operator==(_1a3119e56_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3119e56_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3121435_IsAnon(_1a31210d3_FnDecl*);
struct _1a31210d3_FnDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>();
	jule::Ptr<_1a310c575_RetTypeDecl> _field_Result = jule::Ptr<_1a310c575_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>>();
	

	_1a31210d3_FnDecl(void) = default;

	inline bool operator==(_1a31210d3_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_1a31210d3_FnDecl _other) { return !this->operator==(_other); }


};
struct _1a31220b2_VarDecl {
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a31220b2_VarDecl(void) = default;

	inline bool operator==(_1a31220b2_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31220b2_VarDecl _other) { return !this->operator==(_other); }


};
struct _1a3122469_RetSt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a3122469_RetSt(void) = default;

	inline bool operator==(_1a3122469_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3122469_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3122e2b_IsInf(_1a3122ac9_Iter*);
struct _1a3122ac9_Iter {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	

	_1a3122ac9_Iter(void) = default;

	inline bool operator==(_1a3122ac9_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3122ac9_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3123701_IsWhileNext(_1a312339e_WhileKind*);
struct _1a312339e_WhileKind {
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1ba1dbeab_Token> _field_NextToken = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a312339e_WhileKind(void) = default;

	inline bool operator==(_1a312339e_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a312339e_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a3123c40_RangeKind {
	jule::Ptr<_1ba1dbeab_Token> _field_InToken = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a31220b2_VarDecl> _field_KeyA = jule::Ptr<_1a31220b2_VarDecl>();
	jule::Ptr<_1a31220b2_VarDecl> _field_KeyB = jule::Ptr<_1a31220b2_VarDecl>();
	

	_1a3123c40_RangeKind(void) = default;

	inline bool operator==(_1a3123c40_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a3123c40_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a31240e7_BreakSt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_Label = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a31240e7_BreakSt(void) = default;

	inline bool operator==(_1a31240e7_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a31240e7_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a312449e_ContSt {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_Label = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a312449e_ContSt(void) = default;

	inline bool operator==(_1a312449e_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a312449e_ContSt _other) { return !this->operator==(_other); }


};
struct _1a3124922_If {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	

	_1a3124922_If(void) = default;

	inline bool operator==(_1a3124922_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3124922_If _other) { return !this->operator==(_other); }


};
struct _1a3124cc9_Else {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	

	_1a3124cc9_Else(void) = default;

	inline bool operator==(_1a3124cc9_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3124cc9_Else _other) { return !this->operator==(_other); }


};
struct _1a312524c_Conditional {
	jule::Ptr<_1a3124922_If> _field_Head = jule::Ptr<_1a3124922_If>();
	jule::Slice<jule::Ptr<_1a3124922_If>> _field_Tail = jule::Slice<jule::Ptr<_1a3124922_If>>();
	jule::Ptr<_1a3124cc9_Else> _field_Default = jule::Ptr<_1a3124cc9_Else>();
	

	_1a312524c_Conditional(void) = default;

	inline bool operator==(_1a312524c_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a312524c_Conditional _other) { return !this->operator==(_other); }


};
struct _1a3125923_TypeAliasDecl {
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a3125923_TypeAliasDecl(void) = default;

	inline bool operator==(_1a3125923_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3125923_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a3125d96_Case {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	

	_1a3125d96_Case(void) = default;

	inline bool operator==(_1a3125d96_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1a3125d96_Case _other) { return !this->operator==(_other); }


};
struct _1a312656c_MatchCase {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Slice<jule::Ptr<_1a3125d96_Case>> _field_Cases = jule::Slice<jule::Ptr<_1a3125d96_Case>>();
	jule::Ptr<_1a3124cc9_Else> _field_Default = jule::Ptr<_1a3124cc9_Else>();
	

	_1a312656c_MatchCase(void) = default;

	inline bool operator==(_1a312656c_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a312656c_MatchCase _other) { return !this->operator==(_other); }


};
struct _1a3126d0e_UseDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Selected = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_1a3126d0e_UseDecl(void) = default;

	inline bool operator==(_1a3126d0e_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_1a3126d0e_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a31275d4_AutoExpr(_1a3127282_EnumItemDecl*);
struct _1a3127282_EnumItemDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	

	_1a3127282_EnumItemDecl(void) = default;

	inline bool operator==(_1a3127282_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3127282_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a312833d_DefaultTyped(_1a3127caa_EnumDecl*);
struct _1a3127caa_EnumDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3127caa_EnumDecl(void) = default;

	inline bool operator==(_1a3127caa_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1a3127caa_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1a31287b1_TypeEnumItemDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a31287b1_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1a31287b1_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a31287b1_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a31289ae_TypeEnumDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a31289ae_TypeEnumDecl(void) = default;

	inline bool operator==(_1a31289ae_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1a31289ae_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1a312900e_FieldDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3109462_TypeDecl> _field_Kind = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a310d983_Expr> _field_Default = jule::Ptr<_1a310d983_Expr>();
	

	_1a312900e_FieldDecl(void) = default;

	inline bool operator==(_1a312900e_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a312900e_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a312986c_StructDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1a312900e_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_1a312900e_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>();
	

	_1a312986c_StructDecl(void) = default;

	inline bool operator==(_1a312986c_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1a312986c_StructDecl _other) { return !this->operator==(_other); }


};
struct _1a3129e77_TraitDecl {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_1a31210d3_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1a31210d3_FnDecl>>();
	

	_1a3129e77_TraitDecl(void) = default;

	inline bool operator==(_1a3129e77_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_1a3129e77_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a312a8e5_IsTraitImpl(_1a312a582_Impl*);
inline jule::Bool _1a312ab59_IsStructImpl(_1a312a582_Impl*);
struct _1a312a582_Impl {
	jule::Ptr<_1ba1dbeab_Token> _field_End = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Base = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Dest = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Slice<jule::Ptr<_1a31210d3_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1a31210d3_FnDecl>>();
	jule::Slice<jule::Ptr<_1a31220b2_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_1a31220b2_VarDecl>>();
	

	_1a312a582_Impl(void) = default;

	inline bool operator==(_1a312a582_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1a312a582_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a31618e8_Const> static__1a31b6970_NewI64(jule::I64);
inline jule::Ptr<_1a31618e8_Const> static__1a31b6aa2_NewU64(jule::U64);
inline jule::Ptr<_1a31618e8_Const> static__1a31b6c39_NewBool(jule::Bool);
inline jule::Ptr<_1a31618e8_Const> static__1a31b6ed1_NewStr(jule::Str);
inline jule::Ptr<_1a31618e8_Const> static__1a31b7278_NewF64(jule::F64);
inline jule::Ptr<_1a31618e8_Const> static__1a31b7476_NewNil(void);
inline jule::I64 _1a31b7a70_ReadI64(_1a31618e8_Const*);
inline jule::U64 _1a31b7cd4_ReadU64(_1a31618e8_Const*);
inline jule::Bool _1a31b8048_ReadBool(_1a31618e8_Const*);
inline jule::Str _1a31b82ac_ReadStr(_1a31618e8_Const*);
inline jule::F64 _1a31b8521_ReadF64(_1a31618e8_Const*);
inline jule::I64 _1a31b8785_AsI64(_1a31618e8_Const*);
inline jule::U64 _1a31b89e9_AsU64(_1a31618e8_Const*);
inline jule::F64 _1a31b8c5d_AsF64(_1a31618e8_Const*);
inline void _1a31b8ed3_SetI64(_1a31618e8_Const*, jule::I64);
inline void _1a31b9258_SetU64(_1a31618e8_Const*, jule::U64);
inline void _1a31b94cd_SetBool(_1a31618e8_Const*, jule::Bool);
inline void _1a31b9753_SetStr(_1a31618e8_Const*, jule::Str);
inline void _1a31b99c8_SetF64(_1a31618e8_Const*, jule::F64);
inline void _1a31b9ba4_SetNil(_1a31618e8_Const*);
inline jule::Bool _1a31b9e18_IsI64(_1a31618e8_Const*);
inline jule::Bool _1a31ba17c_IsU64(_1a31618e8_Const*);
inline jule::Bool _1a31ba3e1_IsBool(_1a31618e8_Const*);
inline jule::Bool _1a31ba655_IsStr(_1a31618e8_Const*);
inline jule::Bool _1a31ba8b9_IsF64(_1a31618e8_Const*);
inline jule::Bool _1a31bab2d_IsNil(_1a31618e8_Const*);
inline jule::Bool _1a31bae3b_AreSameTypes(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bb249_And(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bb557_Or(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bb865_Eq(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bbb73_Lt(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bbe81_LtEq(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bc28e_Gt(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bc59c_GtEq(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bc8aa_Add(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bcbb8_Sub(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bcec6_Mul(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bd2d4_Div(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bd5e2_Mod(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bd900_BitwiseAnd(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31bdc0d_BitwiseOr(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31be01b_Xor(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31be329_Lshift(_1a31618e8_Const*, _1a31618e8_Const);
inline jule::Bool _1a31be637_Rshift(_1a31618e8_Const*, _1a31618e8_Const);
struct _1a31618e8_Const {
	jule::Any _field_data = jule::Any();
	

	_1a31618e8_Const(void) = default;

	inline jule::Bool operator==(_1a31618e8_Const _other) { return _1a31bb865_Eq(this, _other); }

	inline bool operator!=(_1a31618e8_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a31618e8_Const _other) { return _1a31bc28e_Gt(this, _other); }

	inline jule::Bool operator>=(_1a31618e8_Const _other) { return _1a31bc59c_GtEq(this, _other); }

	inline jule::Bool operator<(_1a31618e8_Const _other) { return _1a31bbb73_Lt(this, _other); }

	inline jule::Bool operator<=(_1a31618e8_Const _other) { return _1a31bbe81_LtEq(this, _other); }


};
struct _1a39e1b3a_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1a39e1b3a_floatInfo(void) = default;

	inline bool operator==(_1a39e1b3a_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a39e1b3a_floatInfo _other) { return !this->operator==(_other); }


};
struct _1a38e393d_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1a38e393d_decimalSlice(void) = default;

	inline bool operator==(_1a38e393d_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1a38e393d_decimalSlice _other) { return !this->operator==(_other); }


};
struct _1a3e1c021_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1a3e1c021_leftCheat(void) = default;

	inline bool operator==(_1a3e1c021_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a3e1c021_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3c84ad1_set(_1a3e1c384_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1a3903b90_floatBits(_1a3e1c384_decimal*, _1a39e1b3a_floatInfo&);
inline void _1a3e1c571_assign(_1a3e1c384_decimal*, jule::U64);
inline void _1a3e1c6a3_shift(_1a3e1c384_decimal*, jule::I64);
inline void _1a3e1c7d5_roundDown(_1a3e1c384_decimal*, jule::I64);
inline void _1a3e1c917_roundUp(_1a3e1c384_decimal*, jule::I64);
inline void _1a3e1ca49_round(_1a3e1c384_decimal*, jule::I64);
inline jule::U64 _1a3e1cb7b_roundedInteger(_1a3e1c384_decimal*);
struct _1a3e1c384_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1a3e1c384_decimal(void) = default;

	inline bool operator==(_1a3e1c384_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a3e1c384_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3102306_FieldIns> _1a30cac5d_instance(jule::Ptr<_1a30dc038_Field>);
struct _1a30dc038_Field {
	jule::Ptr<_1a30e9b8e_Struct> _field_Owner = jule::Ptr<_1a30e9b8e_Struct>();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	jule::Ptr<_1a310d983_Expr> _field_Default = jule::Ptr<_1a310d983_Expr>();
	

	_1a30dc038_Field(void) = default;

	inline bool operator==(_1a30dc038_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a30dc038_Field _other) { return !this->operator==(_other); }


};
struct _1a30eb5b9_Operators {
	jule::Ptr<_1a31ca874_FnIns> _field_Eq = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Gt = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_GtEq = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Lt = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_LtEq = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Shl = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Shr = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Add = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Sub = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Div = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Mul = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Mod = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitAnd = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitOr = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitXor = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Neg = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_Pos = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitNot = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_AddAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_SubAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_DivAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_MulAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_ModAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_ShlAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_ShrAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitOrAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitAndAssign = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31ca874_FnIns> _field_BitXorAssign = jule::Ptr<_1a31ca874_FnIns>();
	

	_1a30eb5b9_Operators(void) = default;

	inline bool operator==(_1a30eb5b9_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a30eb5b9_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a312ad46_StructIns> _1a30d1d52_instance(jule::Ptr<_1a30e9b8e_Struct>);
inline jule::Ptr<_1a312ad46_StructIns> _1a30d60ba_appendInstance(_1a30e9b8e_Struct*, jule::Ptr<_1a312ad46_StructIns>&);
inline jule::Ptr<_1a31c7bc3_Fn> _1a30d8d6a_FindMethod(_1a30e9b8e_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e59e4e_Var> _1a30d9d7c_FindStatic(_1a30e9b8e_Struct*, jule::Str);
inline jule::Ptr<_1a30dc038_Field> _1a30d92bb_FindField(_1a30e9b8e_Struct*, jule::Str);
inline jule::Bool _1a30db6b9_IsImplements(_1a30e9b8e_Struct*, jule::Ptr<_1a31d9a81_Trait>);
inline jule::Bool _1a30da9a4_IsDerives(_1a30e9b8e_Struct*, jule::Str);
inline jule::Bool _1a30de997_IsUses(_1a30e9b8e_Struct*, jule::Ptr<_1a30e9b8e_Struct>);
inline jule::Bool _1a30e015c_HasRefAccessible(_1a30e9b8e_Struct*);
struct _1a30e9b8e_Struct {
	jule::Ptr<_1a3e3c1ea_Sema> _field_sema = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _field_Depends = jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>();
	jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _field_Uses = jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1a30dc038_Field>> _field_Fields = jule::Slice<jule::Ptr<_1a30dc038_Field>>();
	jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Statics = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a31d9a81_Trait>> _field_Implements = jule::Slice<jule::Ptr<_1a31d9a81_Trait>>();
	jule::Slice<jule::Ptr<_1a312ad46_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_1a312ad46_StructIns>>();
	

	_1a30e9b8e_Struct(void) = default;

	inline bool operator==(_1a30e9b8e_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1a30e9b8e_Struct _other) { return !this->operator==(_other); }


};
struct _1a3102306_FieldIns {
	jule::Ptr<_1a30dc038_Field> _field_Decl = jule::Ptr<_1a30dc038_Field>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3ea2e75_Data> _field_Default = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a3102306_FieldIns(void) = default;

	inline bool operator==(_1a3102306_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a3102306_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a31bee0c_OperandExprModel {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_1a31bee0c_OperandExprModel(void) = default;

	inline bool operator==(_1a31bee0c_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a31bee0c_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c00e9_BinopExprModel {
	jule::Ptr<_1a31bee0c_OperandExprModel> _field_Left = jule::Ptr<_1a31bee0c_OperandExprModel>();
	jule::Ptr<_1a31bee0c_OperandExprModel> _field_Right = jule::Ptr<_1a31bee0c_OperandExprModel>();
	jule::Ptr<_1ba1dbeab_Token> _field_Op = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a31c00e9_BinopExprModel(void) = default;

	inline bool operator==(_1a31c00e9_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a31c00e9_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c02d6_UnaryExprModel {
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1ba1dbeab_Token> _field_Op = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a31c02d6_UnaryExprModel(void) = default;

	inline bool operator==(_1a31c02d6_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a31c02d6_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c04c3_StructArgExprModel {
	jule::Ptr<_1a3102306_FieldIns> _field_Field = jule::Ptr<_1a3102306_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_1a31c04c3_StructArgExprModel(void) = default;

	inline bool operator==(_1a31c04c3_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c04c3_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c06b0_StructLitExprModel {
	jule::Ptr<_1a312ad46_StructIns> _field_Strct = jule::Ptr<_1a312ad46_StructIns>();
	jule::Slice<jule::Ptr<_1a31c04c3_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_1a31c04c3_StructArgExprModel>>();
	

	_1a31c06b0_StructLitExprModel(void) = default;

	inline bool operator==(_1a31c06b0_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1a31c06b0_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c089c_AllocStructLitExprModel {
	jule::Ptr<_1a31c06b0_StructLitExprModel> _field_Lit = jule::Ptr<_1a31c06b0_StructLitExprModel>();
	

	_1a31c089c_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1a31c089c_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a31c089c_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c0a89_CastingExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_ExprKind = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a31c0a89_CastingExprModel(void) = default;

	inline bool operator==(_1a31c0a89_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a31c0a89_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c0c76_FnCallExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a31ca874_FnIns> _field_Func = jule::Ptr<_1a31ca874_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_1a3e21344_Scope> _field_Except = jule::Ptr<_1a3e21344_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_1a31c0c76_FnCallExprModel(void) = default;

	inline bool operator==(_1a31c0c76_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_1a31c0c76_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c0e63_SliceExprModel {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_ElemKind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1a31c0e63_SliceExprModel(void) = default;

	inline bool operator==(_1a31c0e63_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a31c0e63_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c1150_IndexingExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1a3ea2e75_Data> _field_Index = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a31c1150_IndexingExprModel(void) = default;

	inline bool operator==(_1a31c1150_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a31c1150_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c133c_AnonFnExprModel {
	jule::Ptr<_1a31ca874_FnIns> _field_Func = jule::Ptr<_1a31ca874_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_1a31c133c_AnonFnExprModel(void) = default;

	inline bool operator==(_1a31c133c_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1a31c133c_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c1529_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_1a31c1529_KeyValPairExprModel(void) = default;

	inline bool operator==(_1a31c1529_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a31c1529_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c1716_MapExprModel {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_KeyKind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_ValKind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Slice<jule::Ptr<_1a31c1529_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_1a31c1529_KeyValPairExprModel>>();
	

	_1a31c1716_MapExprModel(void) = default;

	inline bool operator==(_1a31c1716_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_1a31c1716_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c1903_SlicingExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1a31c1903_SlicingExprModel(void) = default;

	inline bool operator==(_1a31c1903_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a31c1903_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c1ae0_TraitSubIdentExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a31c7bc3_Fn> _field_Method = jule::Ptr<_1a31c7bc3_Fn>();
	jule::Ptr<_1a31d9a81_Trait> _field_Trt = jule::Ptr<_1a31d9a81_Trait>();
	

	_1a31c1ae0_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1a31c1ae0_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a31c1ae0_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c200d_StructSubIdentExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_ExprKind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a31ca874_FnIns> _field_Method = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a3102306_FieldIns> _field_Field = jule::Ptr<_1a3102306_FieldIns>();
	jule::Ptr<_1a312ad46_StructIns> _field_Owner = jule::Ptr<_1a312ad46_StructIns>();
	

	_1a31c200d_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1a31c200d_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a31c200d_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c21ea_StructStaticIdentExprModel {
	jule::Ptr<_1a312ad46_StructIns> _field_Structure = jule::Ptr<_1a312ad46_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a31ca874_FnIns> _field_Method = jule::Ptr<_1a31ca874_FnIns>();
	

	_1a31c21ea_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1a31c21ea_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a31c21ea_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c23d7_ArrayExprModel {
	jule::Ptr<_1a3ed9a6c_Arr> _field_Kind = jule::Ptr<_1a3ed9a6c_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1a31c23d7_ArrayExprModel(void) = default;

	inline bool operator==(_1a31c23d7_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a31c23d7_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c25c4_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_1a31c25c4_CommonIdentExprModel(void) = default;

	inline bool operator==(_1a31c25c4_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a31c25c4_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c27b1_CommonSubIdentExprModel {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_ExprKind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1a31c27b1_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1a31c27b1_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a31c27b1_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c299d_TupleExprModel {
	jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _field_Datas = jule::Slice<jule::Ptr<_1a3ea2e75_Data>>();
	

	_1a31c299d_TupleExprModel(void) = default;

	inline bool operator==(_1a31c299d_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_1a31c299d_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c2b8a_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1a31c2b8a_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1a31c2b8a_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a31c2b8a_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c2d77_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1a31c2d77_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1a31c2d77_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a31c2d77_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c3064_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a31c3064_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1a31c3064_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c3064_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c3251_BuiltinNewCallExprModel {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_1a31c3251_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1a31c3251_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a31c3251_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c343d_BuiltinPanicCallExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_1a31c343d_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1a31c343d_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c343d_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c362a_BuiltinAssertCallExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_1a31c362a_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1a31c362a_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a31c362a_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c3817_BuiltinMakeCallExprModel {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_1a31c3817_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a31c3817_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a31c3817_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c3a04_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_1a31c3a04_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a31c3a04_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a31c3a04_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c3be1_BuiltinLenCallExprModel {
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a31c3be1_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1a31c3be1_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c3be1_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c3dcd_BuiltinCapCallExprModel {
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a31c3dcd_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1a31c3dcd_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c3dcd_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c1ccc_BuiltinCopyCallExprModel {
	jule::Ptr<_1a3ea2e75_Data> _field_Dest = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1a3ea2e75_Data> _field_Src = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a31c1ccc_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1a31c1ccc_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a31c1ccc_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c453d_BuiltinErrorCallExprModel {
	jule::Ptr<_1a31ca874_FnIns> _field_Func = jule::Ptr<_1a31ca874_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_1a31c453d_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a31c453d_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a31c453d_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c472a_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a31c472a_SizeofExprModel(void) = default;

	inline bool operator==(_1a31c472a_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c472a_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c4917_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a31c4917_AlignofExprModel(void) = default;

	inline bool operator==(_1a31c4917_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c4917_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c4b04_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_1a31c4b04_RuneExprModel(void) = default;

	inline bool operator==(_1a31c4b04_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a31c4b04_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c4ce1_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a31c4ce1_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a31c4ce1_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c4ce1_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c4ecd_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_1a31c4ecd_BackendEmitExprModel(void) = default;

	inline bool operator==(_1a31c4ecd_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1a31c4ecd_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c51ba_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a31c51ba_FreeExprModel(void) = default;

	inline bool operator==(_1a31c51ba_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a31c51ba_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a31c5b6b_RetType {
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Idents = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	

	_1a31c5b6b_RetType(void) = default;

	inline bool operator==(_1a31c5b6b_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1a31c5b6b_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a31c99a5_ParamIns> _1a31c674e_instance(jule::Ptr<_1a31c6386_Param>);
inline jule::Bool _1a31c69b3_IsSelf(_1a31c6386_Param*);
inline jule::Bool _1a31c6c27_IsRef(_1a31c6386_Param*);
struct _1a31c6386_Param {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_1a31c6386_Param(void) = default;

	inline bool operator==(_1a31c6386_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a31c6386_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a31c8135_IsVoid(_1a31c7bc3_Fn*);
inline jule::Bool _1a31c8399_IsMethod(_1a31c7bc3_Fn*);
inline jule::Bool _1a31c860d_IsEntryPoint(_1a31c7bc3_Fn*);
inline jule::Bool _1a31c8872_IsInit(_1a31c7bc3_Fn*);
inline jule::Bool _1a31c8ad6_IsAnon(_1a31c7bc3_Fn*);
inline jule::Bool _1a31c8d4a_AnyVar(_1a31c7bc3_Fn*);
inline jule::Ptr<_1a31ca874_FnIns> _1a31c90ae_instanceForce(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Ptr<_1a31ca874_FnIns> _1a31c9323_instance(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Ptr<_1a31ca874_FnIns> _1a31c95ed_appendInstance(_1a31c7bc3_Fn*, jule::Ptr<_1a31ca874_FnIns>&);
struct _1a31c7bc3_Fn {
	jule::Ptr<_1a3e3c1ea_Sema> _field_sema = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>();
	jule::Ptr<_1a31c5b6b_RetType> _field_Result = jule::Ptr<_1a31c5b6b_RetType>();
	jule::Slice<jule::Ptr<_1a31c6386_Param>> _field_Params = jule::Slice<jule::Ptr<_1a31c6386_Param>>();
	jule::Ptr<_1a30e9b8e_Struct> _field_Owner = jule::Ptr<_1a30e9b8e_Struct>();
	jule::Slice<jule::Ptr<_1a31ca874_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_1a31ca874_FnIns>>();
	

	_1a31c7bc3_Fn(void) = default;

	inline bool operator==(_1a31c7bc3_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1a31c7bc3_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1a31c9d7e_Str(_1a31c99a5_ParamIns*);
struct _1a31c99a5_ParamIns {
	jule::Ptr<_1a31c6386_Param> _field_Decl = jule::Ptr<_1a31c6386_Param>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a31c99a5_ParamIns(void) = default;

	inline bool operator==(_1a31c99a5_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a31c99a5_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a31caba4_Str(_1a31ca874_FnIns*);
inline jule::Bool _1a31caeb2_Equals(jule::Ptr<_1a31ca874_FnIns>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a31cb424_EqualsFn(jule::Ptr<_1a31ca874_FnIns>, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Bool _1a31cb732_equalsTrait(jule::Ptr<_1a31ca874_FnIns>, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _1a31cb996_Types(_1a31ca874_FnIns*);
inline jule::Bool _1a31cbc0a_IsBuiltin(_1a31ca874_FnIns*);
inline jule::Bool _1a31cbe6e_IsAnon(_1a31ca874_FnIns*);
inline jule::Bool _1a31cc27c_Same(_1a31ca874_FnIns*, jule::Ptr<_1a31ca874_FnIns>);
inline jule::Str _1a31cc58a_GetKindStr(_1a31ca874_FnIns*, jule::Bool);
struct _1a31ca874_FnIns {
	jule::Ptr<_1a312ad46_StructIns> _field_Owner = jule::Ptr<_1a312ad46_StructIns>();
	jule::Ptr<_1a31c7bc3_Fn> _field_Decl = jule::Ptr<_1a31c7bc3_Fn>();
	jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>>();
	jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Result = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	jule::Ptr<_1a31cd745_ReferenceStack> _field_Refers = jule::Ptr<_1a31cd745_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1a31ca874_FnIns(void) = default;

	inline bool operator==(_1a31ca874_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1a31ca874_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a31cd745_ReferenceStack> static__1a31cda31_new(void);
inline jule::I64 _1a31cddb6_Len(_1a31cd745_ReferenceStack*);
inline jule::Any _1a31ce1c4_At(_1a31cd745_ReferenceStack*, jule::I64);
inline void _1a31ce449_Push(_1a31cd745_ReferenceStack*, jule::Any);
inline jule::Bool _1a695b84e_Exist(_1a31cd745_ReferenceStack*, jule::Ptr<_1a31ca874_FnIns>);
inline jule::Bool _1a6971d81_Exist(_1a31cd745_ReferenceStack*, jule::Ptr<_1a3e59e4e_Var>);
inline jule::Bool _1a6a2047e_Exist(_1a31cd745_ReferenceStack*, jule::Ptr<_1a312ad46_StructIns>);
inline jule::Bool _1a6ca7c00_Exist(_1a31cd745_ReferenceStack*, jule::Ptr<_1a31d9a81_Trait>);
struct _1a31cd745_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1a31cd745_ReferenceStack(void) = default;

	inline bool operator==(_1a31cd745_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1a31cd745_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1a31ceb0e_Pass {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Text = jule::Str();
	

	_1a31ceb0e_Pass(void) = default;

	inline bool operator==(_1a31ceb0e_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a31ceb0e_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a31d40a8_symbolBuilder> _1a31d455e_getRoot(jule::Ptr<_1a31d40a8_symbolBuilder>);
inline void _1a31d4927_pushErr(_1a31d40a8_symbolBuilder*, jule::Ptr<_1ba1dbeab_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a31d4ce0_pushErrText(_1a31d40a8_symbolBuilder*, jule::Ptr<_1ba1dbeab_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a31d510e_pushSuggestion(_1a31d40a8_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a31d54b6_checkCppUseDeclPath(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a3126d0e_UseDecl>&, jule::Str);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d5791_buildCppHeaderImport(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d5a9e_buildStdImport(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d5dac_buildIdentImport(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d61ba_buildImport(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Bool _1a31d64c8_checkDuplicateUseDecl(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline void _1a31d67e7_implImportSelections(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a3e3409e_ImportInfo>&, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Str _1a31d6b05_getAsLinkPath(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Str);
inline void _1a31d6ebd_pushCycleError(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a31d40a8_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1a31d7386_pushCrossCycleError(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a31d40a8_symbolBuilder>&, jule::Ptr<_1a3e3409e_ImportInfo>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a31d773d_checkImportCycles(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a3e3409e_ImportInfo>, jule::Ptr<_1a3126d0e_UseDecl>&);
inline void _1a31d7b28_checkPackageAccessibility(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a3126d0e_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1a31d7ee1_importPackage(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a3e3409e_ImportInfo>&, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d82ee_importUseDecl(jule::Ptr<_1a31d40a8_symbolBuilder>, jule::Ptr<_1a3126d0e_UseDecl>&);
inline void _1a31d84ca_importUseDecls(jule::Ptr<_1a31d40a8_symbolBuilder>);
inline void _1a31d8750_appendNode(_1a31d40a8_symbolBuilder*, _1a30c562b_Node&);
inline void _1a31d892b_appendNodes(_1a31d40a8_symbolBuilder*);
inline void _1a31d8ba1_pushDirectivePass(_1a31d40a8_symbolBuilder*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a31d8d7c_appendTopDirectives(_1a31d40a8_symbolBuilder*);
inline void _1a31d9058_build(jule::Ptr<_1a31d40a8_symbolBuilder>);
struct _1a31d40a8_symbolBuilder {
	jule::Ptr<_1a31d40a8_symbolBuilder> _field_owner = jule::Ptr<_1a31d40a8_symbolBuilder>();
	jule::Trait<_1a3e31431_Importer> _field_importer = jule::Trait<_1a3e31431_Importer>();
	jule::Slice<_1b9db24ab_Log> _field_errors = jule::Slice<_1b9db24ab_Log>();
	jule::Ptr<_1a30c48a0_Ast> _field_ast = jule::Ptr<_1a30c48a0_Ast>();
	jule::Ptr<_1a3e9d14b_SymbolTable> _field_table = jule::Ptr<_1a3e9d14b_SymbolTable>();
	

	_1a31d40a8_symbolBuilder(void) = default;

	inline bool operator==(_1a31d40a8_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1a31d40a8_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a31d9e7c_Str(_1a31d9a81_Trait*);
inline jule::Bool _1a31da28a_Equals(jule::Ptr<_1a31d9a81_Trait>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a31da5ed_IsBuiltin(_1a31d9a81_Trait*);
inline jule::Ptr<_1a31c7bc3_Fn> _1a31da90b_FindMethod(_1a31d9a81_Trait*, jule::Str);
struct _1a31d9a81_Trait {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>();
	jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>();
	

	_1a31d9a81_Trait(void) = default;

	inline bool operator==(_1a31d9a81_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_1a31d9a81_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a31db5bb_AutoExpr(_1a31db1d1_EnumItem*);
struct _1a31db1d1_EnumItem {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3ea3eed_Value> _field_Value = jule::Ptr<_1a3ea3eed_Value>();
	

	_1a31db1d1_EnumItem(void) = default;

	inline bool operator==(_1a31db1d1_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a31db1d1_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a31dc039_Str(_1a31dbbc6_Enum*);
inline jule::Bool _1a31dc347_Equals(jule::Ptr<_1a31dbbc6_Enum>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Ptr<_1a31db1d1_EnumItem> _1a31dc787_FindItem(_1a31dbbc6_Enum*, jule::Str);
struct _1a31dbbc6_Enum {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>>();
	

	_1a31dbbc6_Enum(void) = default;

	inline bool operator==(_1a31dbbc6_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1a31dbbc6_Enum _other) { return !this->operator==(_other); }


};
struct _1a31dcc0a_TypeEnumItem {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	

	_1a31dcc0a_TypeEnumItem(void) = default;

	inline bool operator==(_1a31dcc0a_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a31dcc0a_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a31dd601_Str(_1a31dd2c1_TypeEnum*);
inline jule::Bool _1a31dd90e_Equals(jule::Ptr<_1a31dd2c1_TypeEnum>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Ptr<_1a31dcc0a_TypeEnumItem> _1a31ddd0a_FindItem(_1a31dd2c1_TypeEnum*, jule::Str);
struct _1a31dd2c1_TypeEnum {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>>();
	

	_1a31dd2c1_TypeEnum(void) = default;

	inline bool operator==(_1a31dd2c1_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1a31dd2c1_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1a3e3c1ea_Sema>&,jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&)> _1a321645e_readyFn(jule::Ptr<_1a3205e21_constraintChecker>);
inline jule::Bool _1a322d498_readyFi(jule::Ptr<_1a3205e21_constraintChecker>);
inline jule::Bool _1a3247d42_readySi(jule::Ptr<_1a3205e21_constraintChecker>);
inline jule::Bool _1a3249b8a_ready(jule::Ptr<_1a3205e21_constraintChecker>);
inline jule::Bool _1a324ad78_check(jule::Ptr<_1a3205e21_constraintChecker>);
struct _1a3205e21_constraintChecker {
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>>();
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>();
	jule::Ptr<_1a31ca874_FnIns> _field_fi = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a312ad46_StructIns> _field_si = jule::Ptr<_1a312ad46_StructIns>();
	jule::Ptr<_1ba1dbeab_Token> _field_et = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1a3205e21_constraintChecker(void) = default;

	inline bool operator==(_1a3205e21_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1a3205e21_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a324e3a9_IsTraitImpl(_1a326e41d_Impl*);
inline jule::Bool _1a324eb07_IsStructImpl(_1a326e41d_Impl*);
struct _1a326e41d_Impl {
	jule::Ptr<_1a3109462_TypeDecl> _field_Base = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a3109462_TypeDecl> _field_Dest = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Statics = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	

	_1a326e41d_Impl(void) = default;

	inline bool operator==(_1a326e41d_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1a326e41d_Impl _other) { return !this->operator==(_other); }


};
struct _1a3e21344_Scope {
	jule::Ptr<_1a3e21344_Scope> _field_Parent = jule::Ptr<_1a3e21344_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_1a3e21344_Scope(void) = default;

	inline bool operator==(_1a3e21344_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_1a3e21344_Scope _other) { return !this->operator==(_other); }


};
struct _1a3e21531_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	

	_1a3e21531_If(void) = default;

	inline bool operator==(_1a3e21531_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e21531_If _other) { return !this->operator==(_other); }


};
struct _1a3e2171d_Else {
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	

	_1a3e2171d_Else(void) = default;

	inline bool operator==(_1a3e2171d_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e2171d_Else _other) { return !this->operator==(_other); }


};
struct _1a3e2190a_Conditional {
	jule::Slice<jule::Ptr<_1a3e21531_If>> _field_Elifs = jule::Slice<jule::Ptr<_1a3e21531_If>>();
	jule::Ptr<_1a3e2171d_Else> _field_Default = jule::Ptr<_1a3e2171d_Else>();
	

	_1a3e2190a_Conditional(void) = default;

	inline bool operator==(_1a3e2190a_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a3e2190a_Conditional _other) { return !this->operator==(_other); }


};
struct _1a3e21ae7_InfIter {
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	

	_1a3e21ae7_InfIter(void) = default;

	inline bool operator==(_1a3e21ae7_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e21ae7_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3e21ec1_IsWhileNext(_1a3e21cd4_WhileIter*);
struct _1a3e21cd4_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	

	_1a3e21cd4_WhileIter(void) = default;

	inline bool operator==(_1a3e21cd4_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e21cd4_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a3e22103_RangeIter {
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	jule::Ptr<_1a3e59e4e_Var> _field_KeyA = jule::Ptr<_1a3e59e4e_Var>();
	jule::Ptr<_1a3e59e4e_Var> _field_KeyB = jule::Ptr<_1a3e59e4e_Var>();
	

	_1a3e22103_RangeIter(void) = default;

	inline bool operator==(_1a3e22103_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a3e22103_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a3e222e0_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_1a3e222e0_ContSt(void) = default;

	inline bool operator==(_1a3e222e0_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a3e222e0_ContSt _other) { return !this->operator==(_other); }


};
struct _1a3e224cc_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_1a3e224cc_BreakSt(void) = default;

	inline bool operator==(_1a3e224cc_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a3e224cc_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a3e226b9_Label {
	jule::Str _field_Ident = jule::Str();
	

	_1a3e226b9_Label(void) = default;

	inline bool operator==(_1a3e226b9_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3e226b9_Label _other) { return !this->operator==(_other); }


};
struct _1a3e228a6_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_1a3e228a6_GotoSt(void) = default;

	inline bool operator==(_1a3e228a6_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3e228a6_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a3e22a93_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_1a3e22a93_Postfix(void) = default;

	inline bool operator==(_1a3e22a93_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3e22a93_Postfix _other) { return !this->operator==(_other); }


};
struct _1a3e22c80_Assign {
	jule::Ptr<_1a31bee0c_OperandExprModel> _field_L = jule::Ptr<_1a31bee0c_OperandExprModel>();
	jule::Ptr<_1a31bee0c_OperandExprModel> _field_R = jule::Ptr<_1a31bee0c_OperandExprModel>();
	jule::Ptr<_1ba1dbeab_Token> _field_Op = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3e22c80_Assign(void) = default;

	inline bool operator==(_1a3e22c80_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3e22c80_Assign _other) { return !this->operator==(_other); }


};
struct _1a3e22e6c_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_1a3e22e6c_MultiAssign(void) = default;

	inline bool operator==(_1a3e22e6c_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_1a3e22e6c_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3e23577_IsGenericTypeMatch(_1a3e23159_Match*);
struct _1a3e23159_Match {
	jule::Ptr<_1a3ea2e75_Data> _field_Expr = jule::Ptr<_1a3ea2e75_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_1a3e236a9_Case>> _field_Cases = jule::Slice<jule::Ptr<_1a3e236a9_Case>>();
	jule::Ptr<_1a3e236a9_Case> _field_Default = jule::Ptr<_1a3e236a9_Case>();
	

	_1a3e23159_Match(void) = default;

	inline bool operator==(_1a3e23159_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a3e23159_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3e23896_isDefault(_1a3e236a9_Case*);
struct _1a3e236a9_Case {
	jule::Ptr<_1a3e23159_Match> _field_Owner = jule::Ptr<_1a3e23159_Match>();
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _field_Exprs = jule::Slice<jule::Ptr<_1a3ea2e75_Data>>();
	jule::Ptr<_1a3e236a9_Case> _field_Next = jule::Ptr<_1a3e236a9_Case>();
	

	_1a3e236a9_Case(void) = default;

	inline bool operator==(_1a3e236a9_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_1a3e236a9_Case _other) { return !this->operator==(_other); }


};
struct _1a3e239c8_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_1a3e239c8_FallSt(void) = default;

	inline bool operator==(_1a3e239c8_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a3e239c8_FallSt _other) { return !this->operator==(_other); }


};
struct _1a3e23bb5_RetSt {
	jule::Ptr<_1a31ca874_FnIns> _field_Func = jule::Ptr<_1a31ca874_FnIns>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Vars = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_1a3e23bb5_RetSt(void) = default;

	inline bool operator==(_1a3e23bb5_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e23bb5_RetSt _other) { return !this->operator==(_other); }


};
struct _1a3e23da2_scopeLabel {
	jule::Ptr<_1ba1dbeab_Token> _field_token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3e226b9_Label> _field_label = jule::Ptr<_1a3e226b9_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1a3e2427b_scopeChecker> _field_scope = jule::Ptr<_1a3e2427b_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1a3e23da2_scopeLabel(void) = default;

	inline bool operator==(_1a3e23da2_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a3e23da2_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a3e2408e_scopeGoto {
	jule::Ptr<_1a31172a5_GotoSt> _field_gt = jule::Ptr<_1a31172a5_GotoSt>();
	jule::Ptr<_1a3e2427b_scopeChecker> _field_scope = jule::Ptr<_1a3e2427b_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1a3e2408e_scopeGoto(void) = default;

	inline bool operator==(_1a3e2408e_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a3e2408e_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e24468_FindPackage(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e2459a_SelectPackage(_1a3e2427b_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>);
inline jule::Ptr<_1a3e59e4e_Var> _1a3e246cc_FindVar(_1a3e2427b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e2480e_FindTypeAlias(_1a3e2427b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3e24941_FindStruct(_1a3e2427b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31c7bc3_Fn> _1a3e24a73_FindFn(_1a3e2427b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31d9a81_Trait> _1a3e24ba5_FindTrait(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3e24cd7_FindEnum(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e24e19_FindTypeEnum(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Bool _1a3e2504b_isUnsafe(jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Bool _1a3e2517d_isRoot(_1a3e2427b_scopeChecker*);
inline void _1a3e252b0_stop(_1a3e2427b_scopeChecker*);
inline jule::Bool _1a3e253e2_stopped(_1a3e2427b_scopeChecker*);
inline jule::Bool _1a3e25524_isDeferred(jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Ptr<_1a3e2427b_scopeChecker> _1a3e25656_getRoot(jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Ptr<_1a3e2427b_scopeChecker> _1a3e25788_getHardRoot(jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Ptr<_1a3e226b9_Label> _1a3e258ba_findLabel(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Ptr<_1a3e23da2_scopeLabel> _1a3e259ec_findLabelScope(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Str);
inline jule::Ptr<_1a3e23da2_scopeLabel> _1a3e25b2e_findLabelAll(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Bool _1a3e25c61_isDuplicatedIdent(_1a3e2427b_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1a3e25d93_checkVarDecl(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31220b2_VarDecl>);
inline void _1a3e25ec5_checkTypeAliasDecl(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3125923_TypeAliasDecl>);
inline jule::Ptr<_1a3e21344_Scope> _1a3e26107_getChild(_1a3e2427b_scopeChecker*);
inline void _1a3e26239_checkChildSsc(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3119780_ScopeTree>&, jule::Ptr<_1a3e21344_Scope>&, jule::Ptr<_1a3e2427b_scopeChecker>&);
inline jule::Ptr<_1a3e21344_Scope> _1a3e2636b_checkChildSc(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3119780_ScopeTree>&, jule::Ptr<_1a3e2427b_scopeChecker>&);
inline jule::Ptr<_1a3e21344_Scope> _1a3e2649d_checkChild(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3119780_ScopeTree>&);
inline void _1a3e265d0_checkAnonScope(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3119780_ScopeTree>);
inline void _1a3e26712_processErrorCall(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>&, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3e26844_checkExpr(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a310d983_Expr>);
inline void _1a3e26976_checkCoExpr(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3110578_CoExpr>);
inline jule::Ptr<_1a3e21531_If> _1a3e26aa8_checkIf(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3124922_If>);
inline jule::Ptr<_1a3e2171d_Else> _1a3e26bda_checkElse(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3124cc9_Else>);
inline void _1a3e26d1c_checkConditional(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312524c_Conditional>);
inline void _1a3e26e4e_checkIterScopeSsc(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Uintptr, jule::Ptr<_1a3119780_ScopeTree>, jule::Ptr<_1a3e21344_Scope>&, jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Ptr<_1a3e21344_Scope> _1a3e27081_checkIterScopeSc(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Uintptr, jule::Ptr<_1a3119780_ScopeTree>, jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Ptr<_1a3e21344_Scope> _1a3e271b3_checkIterScope(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Uintptr, jule::Ptr<_1a3119780_ScopeTree>&);
inline void _1a3e272e5_checkInfIter(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3122ac9_Iter>&);
inline void _1a3e27427_checkWhileIter(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3122ac9_Iter>&);
inline void _1a3e27559_checkRangeIter(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3122ac9_Iter>&);
inline void _1a3e2768b_checkIter(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3122ac9_Iter>);
inline jule::Bool _1a3e277bd_checkValidContLabel(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Uintptr);
inline jule::Bool _1a3e27900_checkValidBreakLabel(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1a3e222e0_ContSt> _1a3e27a32_checkContValidScope(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312449e_ContSt>);
inline void _1a3e27b64_checkCont(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312449e_ContSt>);
inline void _1a3e27c96_checkLabel(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3116ded_LabelSt>);
inline void _1a3e27dc8_pushGoto(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31172a5_GotoSt>);
inline void _1a3e2800a_checkPostfix(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31181da_AssignSt>);
inline jule::Bool _1a3e2813c_isNewAssignIdent(_1a3e2427b_scopeChecker*, jule::Str);
inline jule::Bool _1a3e2826e_checkStructureAssignOp(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1a31181da_AssignSt>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3e283a1_checkSingleAssign(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31181da_AssignSt>&);
inline void _1a3e284d3_processEndPartOfMultiAssign(_1a3e2427b_scopeChecker*, jule::Ptr<_1a3e22e6c_MultiAssign>&, jule::Ptr<_1a31181da_AssignSt>&, jule::Ptr<_1a3117b9b_AssignLeft>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3e28615_checkMultiAssign(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31181da_AssignSt>&);
inline void _1a3e28747_checkAssignSt(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31181da_AssignSt>);
inline jule::Ptr<_1a3e21344_Scope> _1a3e28879_checkCaseScope(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3e236a9_Case>&, jule::Ptr<_1a3119780_ScopeTree>&);
inline jule::Ptr<_1a3e236a9_Case> _1a3e289ab_checkCase(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3e23159_Match>, jule::I64, jule::Ptr<_1a3125d96_Case>, jule::Ptr<_1a3ea2e75_Data>);
inline void _1a3e28add_checkCases(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312656c_MatchCase>&, jule::Ptr<_1a3e23159_Match>, jule::Ptr<_1a3ea2e75_Data>);
inline jule::Ptr<_1a3e236a9_Case> _1a3e28d0d_checkDefault(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3e23159_Match>, jule::Ptr<_1a3124cc9_Else>);
inline void _1a3e29083_checkComptimePanic(_1a3e2427b_scopeChecker*, jule::Ptr<_1a3e21344_Scope>&);
inline void _1a3e293a2_pushTypeMatch(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3e23159_Match>, jule::Ptr<_1a312656c_MatchCase>&);
inline void _1a3e29627_checkTypeMatch(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312656c_MatchCase>&);
inline void _1a3e2989c_checkCommonMatch(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312656c_MatchCase>&);
inline void _1a3e29b22_checkMatch(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a312656c_MatchCase>);
inline void _1a3e29d97_checkFall(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3117591_FallSt>);
inline jule::Ptr<_1a3e224cc_BreakSt> _1a3e2a1a5_checkBreakWithLabel(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31240e7_BreakSt>);
inline jule::Ptr<_1a3e224cc_BreakSt> _1a3e2a4b3_checkPlainBreak(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31240e7_BreakSt>);
inline void _1a3e2a738_checkBreak(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a31240e7_BreakSt>);
inline void _1a3e2a9ad_checkRet(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3122469_RetSt>);
inline void _1a3e2ac33_checkUseExpr(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a310e324_UseExpr>);
inline void _1a3e2aea8_checkNode(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Any&);
inline void _1a3e2b184_checkResult(jule::Ptr<_1a3e2427b_scopeChecker>);
inline void _1a3e2b360_checkTree(jule::Ptr<_1a3e2427b_scopeChecker>);
inline void _1a3e2b67e_checkGoto(_1a3e2427b_scopeChecker*, jule::Ptr<_1a3e2408e_scopeGoto>&, jule::Ptr<_1a3e23da2_scopeLabel>&);
inline void _1a3e2b85a_checkGotos(_1a3e2427b_scopeChecker*);
inline void _1a3e2ba36_checkLabels(_1a3e2427b_scopeChecker*);
inline void _1a3e2bc12_checkVars(_1a3e2427b_scopeChecker*);
inline void _1a3e2bddd_checkAliases(_1a3e2427b_scopeChecker*);
inline void _1a3e2c20c_check(jule::Ptr<_1a3e2427b_scopeChecker>, jule::Ptr<_1a3119780_ScopeTree>&, jule::Ptr<_1a3e21344_Scope>&);
inline jule::Ptr<_1a3e2427b_scopeChecker> _1a3e2c471_newChildChecker(jule::Ptr<_1a3e2427b_scopeChecker>);
struct _1a3e2427b_scopeChecker {
	jule::Ptr<_1ba1dbeab_Token> _field_calledFrom = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Ptr<_1a31ca874_FnIns> _field_owner = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a3e2427b_scopeChecker> _field_parent = jule::Ptr<_1a3e2427b_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_1a3e9d14b_SymbolTable> _field_table = jule::Ptr<_1a3e9d14b_SymbolTable>();
	jule::Ptr<_1a3e21344_Scope> _field_scope = jule::Ptr<_1a3e21344_Scope>();
	jule::Ptr<_1a3119780_ScopeTree> _field_tree = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Ptr<_1a31ca874_FnIns> _field_result = jule::Ptr<_1a31ca874_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e23da2_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a3e23da2_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e2408e_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a3e2408e_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1a3e2427b_scopeChecker(void) = default;

	inline bool operator==(_1a3e2427b_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a3e2427b_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1a3e2d461_checkCdef(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2d6d6_checkTypedef(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2d95b_checkDerive(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2dbd1_checkNamespace(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2de56_checkDeprecated(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2e1cb_checkTest(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2e451_checkDirective(_1a3e2d021_directiveChecker*, jule::Ptr<_1a30c5a27_Directive>&);
inline void _1a3e2e62c_check(_1a3e2d021_directiveChecker*);
struct _1a3e2d021_directiveChecker {
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a30c5a27_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1a30c5a27_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1a3e2d021_directiveChecker(void) = default;

	inline bool operator==(_1a3e2d021_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a3e2d021_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e345bb_FindPackage(_1a3e3409e_ImportInfo*, jule::Str);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e348c9_SelectPackage(_1a3e3409e_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>);
inline jule::Ptr<_1a3e59e4e_Var> _1a3e34c81_FindVar(_1a3e3409e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e35138_FindTypeAlias(_1a3e3409e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3e354e0_FindStruct(_1a3e3409e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31c7bc3_Fn> _1a3e35897_FindFn(_1a3e3409e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31d9a81_Trait> _1a3e35ba5_FindTrait(_1a3e3409e_ImportInfo*, jule::Str);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3e35eb3_FindEnum(_1a3e3409e_ImportInfo*, jule::Str);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e362c1_FindTypeEnum(_1a3e3409e_ImportInfo*, jule::Str);
inline jule::Bool _1a3e36667_isLookupable(_1a3e3409e_ImportInfo*, jule::Str);
inline jule::Bool _1a3e36975_existIdent(_1a3e3409e_ImportInfo*, jule::Str);
inline jule::Bool _1a3e36c0b_isAccessibleViaSelection(_1a3e3409e_ImportInfo*);
struct _1a3e3409e_ImportInfo {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_Selected = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Ptr<_1a3e37008_Package> _field_Package = jule::Ptr<_1a3e37008_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_1a3e3409e_ImportInfo(void) = default;

	inline bool operator==(_1a3e3409e_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_1a3e3409e_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e374d1_FindPackage(_1a3e37008_Package*, jule::Str);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e377de_SelectPackage(_1a3e37008_Package*, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>);
inline jule::Ptr<_1a3e59e4e_Var> _1a3e37b96_FindVar(_1a3e37008_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e3804d_FindTypeAlias(_1a3e37008_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3e38405_FindStruct(_1a3e37008_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31c7bc3_Fn> _1a3e387ac_FindFn(_1a3e37008_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31d9a81_Trait> _1a3e38aba_FindTrait(_1a3e37008_Package*, jule::Str);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3e38dc8_FindEnum(_1a3e37008_Package*, jule::Str);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e391d6_FindTypeEnum(_1a3e37008_Package*, jule::Str);
struct _1a3e37008_Package {
	jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>();
	

	_1a3e37008_Package(void) = default;

	inline bool operator==(_1a3e37008_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_1a3e37008_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e3c717_FindPackage(_1a3e3c1ea_Sema*, jule::Str);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e3ca25_SelectPackage(_1a3e3c1ea_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>);
inline jule::Ptr<_1a3e59e4e_Var> _1a3e3cdcc_FindVar(_1a3e3c1ea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e3d284_FindTypeAlias(_1a3e3c1ea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3e3d63b_FindStruct(_1a3e3c1ea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31c7bc3_Fn> _1a3e3d9e3_FindFn(_1a3e3c1ea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31d9a81_Trait> _1a3e3dd01_FindTrait(_1a3e3c1ea_Sema*, jule::Str);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3e3e10e_FindEnum(_1a3e3c1ea_Sema*, jule::Str);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e3e41c_FindTypeEnum(_1a3e3c1ea_Sema*, jule::Str);
inline jule::Bool _1a3e3e76e_isFlag(_1a3e3c1ea_Sema*, jule::I64);
inline void _1a3e3e9e4_setCurrentFile(_1a3e3c1ea_Sema*, jule::Ptr<_1a3e9d14b_SymbolTable>);
inline void _1a3e3edac_pushErr(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e401cb_pushSugggestion(_1a3e3c1ea_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e40583_isAccessibleDefine(_1a3e3c1ea_Sema*, jule::Bool, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a3e409d4_isDuplicatedIdent(_1a3e3c1ea_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1a3e40d03_checkDirectives(jule::Ptr<_1a3e3c1ea_Sema>, jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Any);
inline jule::Bool _1a3e41254_checkGenericQuantity(_1a3e3c1ea_Sema*, jule::I64, jule::I64, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a3e4162d_isDuplicatedImportSelection(_1a3e3c1ea_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1a3e419e6_getImportDef(_1a3e3c1ea_Sema*, jule::Str, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline jule::Bool _1a659053d_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a3e59e4e_Var>&);
inline jule::Bool _1a659494e_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a3ecd016_TypeAlias>&);
inline jule::Bool _1a6598d1b_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Bool _1a659d3d6_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a31d9a81_Trait>&);
inline jule::Bool _1a65a27a3_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a31dbbc6_Enum>&);
inline jule::Bool _1a65a6b70_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a31dd2c1_TypeEnum>&);
inline jule::Bool _1a65ab03c_checkImportSelection(_1a3e3c1ea_Sema*, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a31c7bc3_Fn>&);
inline jule::Bool _1a3e421cd_checkImportSelectedSelections(_1a3e3c1ea_Sema*, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline jule::Bool _1a65b0926_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a65b1d89_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a65b44da_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a65b8a2d_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a65ba502_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a31d9a81_Trait>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a65bd4a0_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a31dbbc6_Enum>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a65c144d_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a31dd2c1_TypeEnum>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a3e42909_checkImportAllSelections(_1a3e3c1ea_Sema*, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline jule::Bool _1a3e42c28_checkImportSelections(_1a3e3c1ea_Sema*, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline jule::Bool _1a3e43036_isUseAliasDuplication(_1a3e3c1ea_Sema*, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline jule::Bool _1a3e43344_checkImport(_1a3e3c1ea_Sema*, jule::Ptr<_1a3e3409e_ImportInfo>&);
inline void _1a3e43520_checkImports(_1a3e3c1ea_Sema*);
inline void _1a3e436eb_implFileImpls(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e438c7_implImpls(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e43aa3_checkEnums(jule::Ptr<_1a3e3c1ea_Sema>);
inline _1a3edc234_typeChecker _1a3e44004_typeChecker(jule::Ptr<_1a3e3c1ea_Sema>, jule::Trait<_1a3eee697_Lookup>, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>, jule::Ptr<_1a3edb420_referencer>);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e444ee_buildTypeWithRefers(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3109462_TypeDecl>&, jule::Trait<_1a3eee697_Lookup>, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>, jule::Ptr<_1a3edb420_referencer>);
inline jule::Bool _1a3e449e9_checkTypeWithRefers(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3ed2d62_TypeSymbol>&, jule::Trait<_1a3eee697_Lookup>, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>, jule::Ptr<_1a3edb420_referencer>);
inline jule::Ptr<_1a3205e21_constraintChecker> _1a3e44c5d_constraintChecker(jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Bool _1a3e45115_checkType(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3ed2d62_TypeSymbol>&, jule::Trait<_1a3eee697_Lookup>);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e45566_buildTypeWithGenerics(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3109462_TypeDecl>&, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>, jule::Ptr<_1a31cd745_ReferenceStack>);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e45874_buildType(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3109462_TypeDecl>&);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e45b82_selectType(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3109462_TypeDecl>&);
inline jule::Ptr<_1a3ea49e3_Eval> _1a3e460d3_evalpd(jule::Ptr<_1a3e3c1ea_Sema>, jule::Trait<_1a3eee697_Lookup>, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3e59e4e_Var>);
inline jule::Ptr<_1a3ea49e3_Eval> _1a3e4648a_evalp(jule::Ptr<_1a3e3c1ea_Sema>, jule::Trait<_1a3eee697_Lookup>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Ptr<_1a3ea49e3_Eval> _1a3e46798_eval(jule::Ptr<_1a3e3c1ea_Sema>, jule::Trait<_1a3eee697_Lookup>);
inline jule::Bool _1a3e46c93_checkAssignType(jule::Ptr<_1a3e3c1ea_Sema>, jule::Bool, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a3e471e4_checkTypeCompatibility(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e475bd_buildNonGenericTypeKind(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3109462_TypeDecl>&, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>&);
inline void _1a3e47876_buildFnNonGenericTypeKinds(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Ptr<_1a31ca874_FnIns> _1a3e47b95_getTraitCheckFnKind(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c7bc3_Fn>&);
inline jule::Bool _1a3e480e6_checkConstraintsFn(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31ca874_FnIns>&, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a31ca874_FnIns>);
inline jule::Bool _1a3e48547_checkConstraintsStruct(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a312ad46_StructIns>);
inline jule::Bool _1a3e488ee_fnEnvironment(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31ca874_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1a3e3c1ea_Sema>&,jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&)>);
inline void _1a3e48b74_checkFnParamKind(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c99a5_ParamIns>&);
inline jule::Bool _1a3e48e82_reloadFnInsTypes(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31ca874_FnIns>);
inline jule::Bool _1a3e49405_checkRefValidityForInitExpr(jule::Ptr<_1a3e3c1ea_Sema>, jule::Bool, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a3e499cc_checkValidityForInitExpr(jule::Ptr<_1a3e3c1ea_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a3e49d95_checkTypeAliasDeclKind(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3ecd016_TypeAlias>&, jule::Trait<_1a3eee697_Lookup>);
inline void _1a3e4a1b4_checkTypeAliasDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3ecd016_TypeAlias>&, jule::Trait<_1a3eee697_Lookup>);
inline void _1a3e4a439_checkTypeAliasDeclDup(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3ecd016_TypeAlias>&);
inline jule::Bool _1a3e4a69d_checkTypeAliasDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a6649839_checkEnumItemsDup(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>>);
inline void _1a6655922_checkEnumItemsDup(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>>);
inline void _1a3e4ab98_checkEnumItemsStr(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31dbbc6_Enum>&);
inline void _1a3e4ae1d_checkEnumItemsInt(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31dbbc6_Enum>&);
inline void _1a3e4b193_checkEnumDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31dbbc6_Enum>&);
inline void _1a3e4b418_checkTypeEnumDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31dd2c1_TypeEnum>&);
inline jule::Bool _1a3e4b67c_checkEnumDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Bool _1a3e4b8e1_checkTypeEnumDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Bool _1a3e4bbee_checkDeclGenerics(_1a3e3c1ea_Sema*, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>&);
inline jule::Bool _1a3e4c00c_checkFnDeclParamsDup(_1a3e3c1ea_Sema*, jule::Ptr<_1a31c7bc3_Fn>&);
inline jule::Bool _1a3e4c31a_checkFnDeclResultDup(_1a3e3c1ea_Sema*, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a3e4c590_checkFnDeclPrototype(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a3e4c815_checkTraitDeclMethod(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a3e4ca8a_checkTraitDeclMethods(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31d9a81_Trait>&);
inline void _1a3e4cd10_checkTraitDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31d9a81_Trait>&);
inline jule::Bool _1a3e4d074_checkTraitDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Bool _1a3e4d42b_checkTraitImplMethods(_1a3e3c1ea_Sema*, jule::Ptr<_1a31d9a81_Trait>&, jule::Ptr<_1a326e41d_Impl>&);
inline jule::Bool _1a3e4d7d3_implToStruct(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&, jule::Ptr<_1a326e41d_Impl>&);
inline void _1a3e4da58_implTrait(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a326e41d_Impl>&);
inline void _1a3e4dccd_implStruct(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a326e41d_Impl>&);
inline void _1a3e4e053_implImpl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a326e41d_Impl>&);
inline void _1a3e4e372_checkVarDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3e59e4e_Var>&, jule::Trait<_1a3eee697_Lookup>);
inline void _1a3e4e5e7_checkGlobalVarDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3e59e4e_Var>&);
inline jule::Bool _1a3e4e85b_checkGlobalDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Bool _1a3e4ec13_checkStructTraitImpl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&, jule::Ptr<_1a31d9a81_Trait>&);
inline jule::Bool _1a3e50021_checkStructImpls(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Bool _1a3e5032e_checkStructFields(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a3e505a4_checkStructDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Bool _1a3e50818_checkStructDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e50a8d_checkFnDecl(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c7bc3_Fn>&);
inline jule::Bool _1a3e50d02_checkFnDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e511ba_pushCycleError(_1a3e3c1ea_Sema*, jule::Ptr<_1a30e9b8e_Struct>&, jule::Ptr<_1a30e9b8e_Struct>&, jule::Str&);
inline jule::Bool _1a3e5161b_checkCrossCycle(_1a3e3c1ea_Sema*, jule::Ptr<_1a30e9b8e_Struct>&, jule::Ptr<_1a30e9b8e_Struct>&, jule::Str&);
inline jule::Bool _1a3e51a8e_checkStructDeriveIllegalCycles(_1a3e3c1ea_Sema*, jule::Str, jule::Ptr<_1a30e9b8e_Struct>&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e51dd0_checkStructInsDeriveClone(_1a3e3c1ea_Sema*, jule::Ptr<_1a312ad46_StructIns>);
inline void _1a3e520bc_checkPackageDecls(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e5240d_checkDataForTypeInference(_1a3e3c1ea_Sema*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>&);
inline void _1a3e52694_checkVar(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3e59e4e_Var>&);
inline void _1a3e529b3_checkTypeVar(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a3e59e4e_Var>&, jule::Trait<_1a3eee697_Lookup>);
inline void _1a3e52b8e_checkGlobalTypes(jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Ptr<_1a31ca874_FnIns> _1a3e53046_readyToCheckFn(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a3e53365_checkTypeMethod(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1a31c7bc3_Fn>&);
inline jule::Ptr<_1a31ca874_FnIns> _1a3e537b6_checkStructInsOp(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1a31c7bc3_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>);
inline jule::Bool _1a3e53b6d_checkStructEnv(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a3e54025_precheckStructIns(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3e5429a_checkStructIns(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a3e54520_checkTypeStruct(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a3e546eb_checkStructTypes(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e54993_checkStructInsOperators(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a312ad46_StructIns>);
inline void _1a3e54c29_precheckStructType(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a3e54e05_precheckStructTypes(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e5517a_checkRets(_1a3e3c1ea_Sema*, jule::Ptr<_1a31ca874_FnIns>&);
inline void _1a3e55499_checkFnInsSc(_1a3e3c1ea_Sema*, jule::Ptr<_1a31ca874_FnIns>&, jule::Ptr<_1a3e2427b_scopeChecker>&);
inline void _1a3e557b8_checkFnInsCaller(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31ca874_FnIns>&, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3e55a3d_checkFnIns(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31ca874_FnIns>&);
inline void _1a3e55cb3_checkTypeFn(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a3e56038_checkTestFn(_1a3e3c1ea_Sema*, jule::Ptr<_1a31ca874_FnIns>&);
inline void _1a3e562ad_precheckTypeFn(jule::Ptr<_1a3e3c1ea_Sema>, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a3e56489_precheckFnTypes(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e56665_checkFnTypes(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e56841_checkPackageTypes(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e56a1c_setFileSemaFields(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e56be8_setSemaFields(jule::Ptr<_1a3e3c1ea_Sema>);
inline void _1a3e56e6d_check(jule::Ptr<_1a3e3c1ea_Sema>, jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&);
struct _1a3e3c1ea_Sema {
	jule::Slice<_1b9db24ab_Log> _field_errors = jule::Slice<_1b9db24ab_Log>();
	jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>();
	jule::Ptr<_1a3e9d14b_SymbolTable> _field_file = jule::Ptr<_1a3e9d14b_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1a3e3c1ea_Sema(void) = default;

	inline bool operator==(_1a3e3c1ea_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a3e3c1ea_Sema _other) { return !this->operator==(_other); }


};
inline _1a3e57325_missingRetChecker static__1a3e576dd_new(void);
inline jule::Bool _1a3e579b8_checkConditional(_1a3e57325_missingRetChecker*, jule::Ptr<_1a3e2190a_Conditional>);
inline jule::Bool _1a3e57cc6_checkMatch(_1a3e57325_missingRetChecker*, jule::Ptr<_1a3e23159_Match>);
inline jule::Bool _1a3e580d4_checkInfIter(_1a3e57325_missingRetChecker*, jule::Ptr<_1a3e21ae7_InfIter>);
inline jule::Bool _1a3e583e2_checkScope(_1a3e57325_missingRetChecker*, jule::Ptr<_1a3e21344_Scope>);
inline jule::Bool _1a3e58700_check(_1a3e57325_missingRetChecker*, jule::Ptr<_1a3e21344_Scope>);
struct _1a3e57325_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1a3e57325_missingRetChecker(void) = default;

	inline bool operator==(_1a3e57325_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1a3e57325_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _1a3e58ed6_IterRelation {
	jule::Ptr<_1a3e59e4e_Var> _field_Range = jule::Ptr<_1a3e59e4e_Var>();
	

	_1a3e58ed6_IterRelation(void) = default;

	inline bool operator==(_1a3e58ed6_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1a3e58ed6_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3e5a317_IsInitialized(_1a3e59e4e_Var*);
inline jule::Bool _1a3e5a57b_IsTypeInferred(_1a3e59e4e_Var*);
inline jule::Bool _1a3e5a7e0_untypedConstant(_1a3e59e4e_Var*);
struct _1a3e59e4e_Var {
	jule::Ptr<_1a3e21344_Scope> _field_Scope = jule::Ptr<_1a3e21344_Scope>();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	jule::Ptr<_1a3ea3eed_Value> _field_Value = jule::Ptr<_1a3ea3eed_Value>();
	jule::Ptr<_1a31cd745_ReferenceStack> _field_Refers = jule::Ptr<_1a31cd745_ReferenceStack>();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Ptr<_1a3e58ed6_IterRelation> _field_IterRelation = jule::Ptr<_1a3e58ed6_IterRelation>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Depends = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	

	_1a3e59e4e_Var(void) = default;

	inline bool operator==(_1a3e59e4e_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_1a3e59e4e_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a3e5b36d_Dispose(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5b615_Str(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5b956_logical(jule::Ptr<_1a31c7bc3_Fn>&, jule::Str);
inline jule::Bool static__1a3e5bbed_Eq(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5be95_Gt(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5c23c_GtEq(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5c4d4_Lt(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5c77b_LtEq(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5cabc_result(jule::Ptr<_1a31c7bc3_Fn>&, jule::Str);
inline jule::Bool static__1a3e5cd64_Shl(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5d10b_Shr(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5d3a3_Add(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5d64a_Sub(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5d8e2_Div(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5db89_Mul(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5de31_Mod(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5e1c8_BitAnd(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5e470_BitOr(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5e717_BitXor(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e5ea58_unary(jule::Ptr<_1a31c7bc3_Fn>&, jule::Str);
inline jule::Bool static__1a3e5ed00_Neg(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e60097_Pos(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e6033e_BitNot(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e60680_assign(jule::Ptr<_1a31c7bc3_Fn>&, jule::Str);
inline jule::Bool static__1a3e60927_AddAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e60bbe_SubAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e60e66_DivAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e6120d_MulAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e614a5_ModAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e6174c_ShlAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e619e4_ShrAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e61c8b_BitOrAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e62033_BitAndAssign(jule::Ptr<_1a31c7bc3_Fn>);
inline jule::Bool static__1a3e622ca_BitXorAssign(jule::Ptr<_1a31c7bc3_Fn>);
struct _1a3e5abec_FuncPattern {
	

	_1a3e5abec_FuncPattern(void) = default;

	inline bool operator==(_1a3e5abec_FuncPattern _other) { return true; }

	inline bool operator!=(_1a3e5abec_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1a3e8c13a_pushErr(_1a3e8bb1d_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e8c39e_checkTrait(_1a3e8bb1d_typeCompatibilityChecker*);
inline jule::Bool _1a3e8c613_checkPtr(_1a3e8bb1d_typeCompatibilityChecker*);
inline jule::Bool _1a3e8c877_checkPrim(_1a3e8bb1d_typeCompatibilityChecker*);
inline jule::Bool _1a3e8cc2e_typeEnum(_1a3e8bb1d_typeCompatibilityChecker*, jule::Ptr<_1a31dd2c1_TypeEnum>&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e8ce93_checkTypeEnum(_1a3e8bb1d_typeCompatibilityChecker*);
inline jule::Bool _1a3e8d207_check(_1a3e8bb1d_typeCompatibilityChecker*);
struct _1a3e8bb1d_typeCompatibilityChecker {
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_dest = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_src = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3e8bb1d_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1a3e8bb1d_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a3e8bb1d_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a3e8dba8_pushErr(_1a3e8d746_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e8de1c_checkValidity(_1a3e8d746_assignTypeChecker*);
inline jule::Bool _1a3e8e181_checkConst(_1a3e8d746_assignTypeChecker*);
inline jule::Bool _1a3e8e3e5_isPrim(_1a3e8d746_assignTypeChecker*);
inline jule::Bool _1a3e8e659_checkCompatibility(_1a3e8d746_assignTypeChecker*);
inline jule::Bool _1a3e8e8bd_check(_1a3e8d746_assignTypeChecker*);
struct _1a3e8d746_assignTypeChecker {
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_dest = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3ea2e75_Data> _field_d = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3e8d746_assignTypeChecker(void) = default;

	inline bool operator==(_1a3e8d746_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a3e8d746_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6807057_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a68066b6_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a68089c6_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a680ee72_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e90a45_annotateConstraintMap(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e90d53_annotateConstraintTup(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e91161_annotateConstraintFn(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e91491_annotateConstraintIdent(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e917b0_annotateConstraint(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline void _1a3e91ace_pushGeneric(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::I64);
inline jule::Bool _1a3e91ddc_annotatePrim(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e921ea_annotateArr(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e92508_annotateSlc(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e928b0_checkMapKey(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e92bbd_annotateMap(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e92ecb_annotateFn(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e932d9_annotatePtr(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e935e7_annotateSptr(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e93905_annotateStruct(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e93c13_annotateAny(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e94021_annotateKind(_1a3e90160_dynamicTypeAnnotation*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3e94285_annotate(_1a3e90160_dynamicTypeAnnotation*);
struct _1a3e90160_dynamicTypeAnnotation {
	jule::Ptr<_1a3ea49e3_Eval> _field_e = jule::Ptr<_1a3ea49e3_Eval>();
	jule::Ptr<_1a31ca874_FnIns> _field_f = jule::Ptr<_1a31ca874_FnIns>();
	jule::Ptr<_1a31c99a5_ParamIns> _field_p = jule::Ptr<_1a31c99a5_ParamIns>();
	jule::Ptr<_1a3ea2e75_Data> _field_a = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a3ecdc09_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a3109462_TypeDecl> _field_c = jule::Ptr<_1a3109462_TypeDecl>();
	

	_1a3e90160_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_1a3e90160_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1a3e90160_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1a3e94eab_pushErrToken(_1a3e9495b_fnCallArgChecker*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e952ca_pushErr(_1a3e9495b_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>> _1a3e9553e_getParams(_1a3e9495b_fnCallArgChecker*);
inline jule::Bool _1a3e9584c_checkCounts(_1a3e9495b_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>&);
inline jule::Bool _1a3e95c9d_checkArg(_1a3e9495b_fnCallArgChecker*, jule::Ptr<_1a31c99a5_ParamIns>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Bool _1a3e96155_push(_1a3e9495b_fnCallArgChecker*, jule::Ptr<_1a31c99a5_ParamIns>&, jule::Ptr<_1a310d983_Expr>);
inline jule::Bool _1a3e9650c_pushVariadic(_1a3e9495b_fnCallArgChecker*, jule::Ptr<_1a31c99a5_ParamIns>&, jule::I64);
inline jule::Bool _1a3e9681a_checkArgs(_1a3e9495b_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>&);
inline jule::Bool _1a3e96aa1_checkDynamicTypeAnnotation(_1a3e9495b_fnCallArgChecker*);
inline jule::Bool _1a3e96d26_check(_1a3e9495b_fnCallArgChecker*);
struct _1a3e9495b_fnCallArgChecker {
	jule::Ptr<_1a3ea49e3_Eval> _field_e = jule::Ptr<_1a3ea49e3_Eval>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_args = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a31ca874_FnIns> _field_f = jule::Ptr<_1a31ca874_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_1a3e9495b_fnCallArgChecker(void) = default;

	inline bool operator==(_1a3e9495b_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_1a3e9495b_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1a3e97871_pushErr(_1a3e97365_structLitChecker*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e97b90_pushSugggestion(_1a3e97365_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e98058_pushMatch(_1a3e97365_structLitChecker*, jule::Ptr<_1a3102306_FieldIns>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>&);
inline void _1a3e98377_checkPair(_1a3e97365_structLitChecker*, jule::Ptr<_1a31136d0_FieldExprPair>&, jule::Slice<jule::Ptr<_1a310d983_Expr>>&);
inline jule::Bool _1a3e98685_readyExprs(_1a3e97365_structLitChecker*, jule::Slice<jule::Ptr<_1a310d983_Expr>>&);
inline void _1a3e9890a_check(_1a3e97365_structLitChecker*, jule::Slice<jule::Ptr<_1a310d983_Expr>>&);
struct _1a3e97365_structLitChecker {
	jule::Ptr<_1a3ea49e3_Eval> _field_e = jule::Ptr<_1a3ea49e3_Eval>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	jule::Ptr<_1a312ad46_StructIns> _field_s = jule::Ptr<_1a312ad46_StructIns>();
	jule::Slice<jule::Ptr<_1a31c04c3_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a31c04c3_StructArgExprModel>>();
	

	_1a3e97365_structLitChecker(void) = default;

	inline bool operator==(_1a3e97365_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a3e97365_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e59e4e_Var> _1a3e993de_buildVar(_1a3e98e49_rangeChecker*, jule::Ptr<_1a31220b2_VarDecl>&);
inline void _1a3e995ba_setSizeKey(_1a3e98e49_rangeChecker*);
inline void _1a3e99983_checkRangeExprValidity(_1a3e98e49_rangeChecker*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3e59e4e_Var>&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline void _1a3e99b5e_checkSlice(_1a3e98e49_rangeChecker*);
inline void _1a3e99d3a_checkArray(_1a3e98e49_rangeChecker*);
inline void _1a3e9a016_checkMapKeyA(_1a3e98e49_rangeChecker*);
inline void _1a3e9a1e2_checkMapKeyB(_1a3e98e49_rangeChecker*);
inline void _1a3e9a3bd_checkMap(_1a3e98e49_rangeChecker*);
inline void _1a3e9a599_checkStr(_1a3e98e49_rangeChecker*);
inline jule::Bool _1a3e9a80d_check(_1a3e98e49_rangeChecker*);
struct _1a3e98e49_rangeChecker {
	jule::Ptr<_1a3e2427b_scopeChecker> _field_sc = jule::Ptr<_1a3e2427b_scopeChecker>();
	jule::Ptr<_1a3123c40_RangeKind> _field_rang = jule::Ptr<_1a3123c40_RangeKind>();
	jule::Ptr<_1a3e22103_RangeIter> _field_Kind = jule::Ptr<_1a3e22103_RangeIter>();
	jule::Ptr<_1a3ea2e75_Data> _field_d = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a3e98e49_rangeChecker(void) = default;

	inline bool operator==(_1a3e98e49_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a3e98e49_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1a3e9b556_prepareTypes(_1a3e9b0a0_retTypeChecker*);
inline void _1a3e9b7cb_prepareExprs(_1a3e9b0a0_retTypeChecker*, jule::Ptr<_1a310d983_Expr>&);
inline void _1a3e9b9a7_retVars(_1a3e9b0a0_retTypeChecker*);
inline void _1a3e9bb83_checkExprs(_1a3e9b0a0_retTypeChecker*);
inline jule::Bool _1a3e9be91_check(_1a3e9b0a0_retTypeChecker*, jule::Ptr<_1a310d983_Expr>&);
struct _1a3e9b0a0_retTypeChecker {
	jule::Ptr<_1a3e2427b_scopeChecker> _field_sc = jule::Ptr<_1a3e2427b_scopeChecker>();
	jule::Ptr<_1a31ca874_FnIns> _field_f = jule::Ptr<_1a31ca874_FnIns>();
	jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>();
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1a310d983_Expr>>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_vars = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_model = jule::Any();
	

	_1a3e9b0a0_retTypeChecker(void) = default;

	inline bool operator==(_1a3e9b0a0_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a3e9b0a0_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e9d668_FindPackage(_1a3e9d14b_SymbolTable*, jule::Str);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e9d976_SelectPackage(_1a3e9d14b_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>);
inline jule::Ptr<_1a3e59e4e_Var> _1a3e9dd2d_FindVar(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e9e1d5_FindTypeAlias(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3e9e58c_FindStruct(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31c7bc3_Fn> _1a3e9e944_FindFn(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a31d9a81_Trait> _1a3e9ec52_FindTrait(_1a3e9d14b_SymbolTable*, jule::Str);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3ea0060_FindEnum(_1a3e9d14b_SymbolTable*, jule::Str);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3ea036d_FindTypeEnum(_1a3e9d14b_SymbolTable*, jule::Str);
inline jule::Ptr<_1a3e59e4e_Var> _1a3ea08e0_findVar(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3ea0d41_findTypeAlias(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1a3ea11e8_defByIdent(_1a3e9d14b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1a3ea1649_isDuplicatedIdent(_1a3e9d14b_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1a3e9d14b_SymbolTable {
	jule::Ptr<_1ba1e2346_File> _field_File = jule::Ptr<_1ba1e2346_File>();
	jule::Slice<_1a31ceb0e_Pass> _field_Passes = jule::Slice<_1a31ceb0e_Pass>();
	jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Vars = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>();
	jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>();
	jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>();
	jule::Slice<jule::Ptr<_1a31d9a81_Trait>> _field_Traits = jule::Slice<jule::Ptr<_1a31d9a81_Trait>>();
	jule::Slice<jule::Ptr<_1a31dbbc6_Enum>> _field_Enums = jule::Slice<jule::Ptr<_1a31dbbc6_Enum>>();
	jule::Slice<jule::Ptr<_1a31dd2c1_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_1a31dd2c1_TypeEnum>>();
	jule::Slice<jule::Ptr<_1a326e41d_Impl>> _field_Impls = jule::Slice<jule::Ptr<_1a326e41d_Impl>>();
	

	_1a3e9d14b_SymbolTable(void) = default;

	inline bool operator==(_1a3e9d14b_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_1a3e9d14b_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3ea3360_IsNil(_1a3ea2e75_Data*);
inline jule::Bool _1a3ea35c4_IsVoid(_1a3ea2e75_Data*);
inline jule::Bool _1a3ea3838_IsConst(_1a3ea2e75_Data*);
inline jule::Bool _1a3ea3b46_GoodOperand(_1a3ea2e75_Data*, jule::Ptr<_1a3ea2e75_Data>&);
struct _1a3ea2e75_Data {
	jule::Bool _field_untyped = jule::Bool();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_1a31618e8_Const> _field_Constant = jule::Ptr<_1a31618e8_Const>();
	

	_1a3ea2e75_Data(void) = default;

	inline bool operator==(_1a3ea2e75_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a3ea2e75_Data _other) { return !this->operator==(_other); }


};
struct _1a3ea3eed_Value {
	jule::Ptr<_1a310d983_Expr> _field_Expr = jule::Ptr<_1a310d983_Expr>();
	jule::Ptr<_1a3ea2e75_Data> _field_Data = jule::Ptr<_1a3ea2e75_Data>();
	

	_1a3ea3eed_Value(void) = default;

	inline bool operator==(_1a3ea3eed_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a3ea3eed_Value _other) { return !this->operator==(_other); }


};
inline void _1a3ea4eee_pushErr(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3ea531d_pushSugggestion(_1a3ea49e3_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1a3ea54e9_allowBuiltin(_1a3ea49e3_Eval*);
inline void _1a3ea56c5_disallowBuiltin(_1a3ea49e3_Eval*);
inline jule::Bool _1a3ea5939_isUnsafe(_1a3ea49e3_Eval*);
inline jule::Bool _1a3ea5b9d_isGlobal(_1a3ea49e3_Eval*);
inline jule::Bool _1a3ea5e78_applyNumericPrefix(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea61dc_litNil(_1a3ea49e3_Eval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea64ea_litStr(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea6808_litBool(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea6b16_litRune(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea6e24_litFloat(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea7232_litInt(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea7540_litNum(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea784d_evalLit(_1a3ea49e3_Eval*, jule::Ptr<_1a310e9b7_LitExpr>);
inline jule::Any _1a3ea7b5b_findBuiltins(_1a3ea49e3_Eval*, jule::Str);
inline jule::Any _1a3ea8013_getDef(_1a3ea49e3_Eval*, jule::Str, jule::Bool);
inline void _1a6958e23_pushReference(_1a3ea49e3_Eval*, jule::Ptr<_1a31ca874_FnIns>&);
inline void _1a696e642_pushReference(_1a3ea49e3_Eval*, jule::Ptr<_1a3e59e4e_Var>&);
inline void _1a6a1cb52_pushReference(_1a3ea49e3_Eval*, jule::Ptr<_1a312ad46_StructIns>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea8596__evalEnum(_1a3ea49e3_Eval*, jule::Ptr<_1a31dbbc6_Enum>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea894d_evalEnum(_1a3ea49e3_Eval*, jule::Ptr<_1a31dbbc6_Enum>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea8c5b__evalTypeEnum(_1a3ea49e3_Eval*, jule::Ptr<_1a31dd2c1_TypeEnum>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea9113_evalTypeEnum(_1a3ea49e3_Eval*, jule::Ptr<_1a31dd2c1_TypeEnum>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea9421__evalStruct(_1a3ea49e3_Eval*, jule::Ptr<_1a312ad46_StructIns>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea97c8_evalStruct(_1a3ea49e3_Eval*, jule::Ptr<_1a312ad46_StructIns>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ea9ad6_evalFnIns(_1a3ea49e3_Eval*, jule::Ptr<_1a31ca874_FnIns>);
inline void _1a3ea9e05_checkDeprecated(_1a3ea49e3_Eval*, jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eaa2ac_evalFn(_1a3ea49e3_Eval*, jule::Ptr<_1a31c7bc3_Fn>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eaa675_pushIllegalCycleError(_1a3ea49e3_Eval*, jule::Ptr<_1a3e59e4e_Var>&, jule::Ptr<_1a3e59e4e_Var>&, jule::Str&);
inline jule::Bool _1a3eaaa2c_checkCrossCycle(_1a3ea49e3_Eval*, jule::Ptr<_1a3e59e4e_Var>&, jule::Str&);
inline jule::Bool _1a3eaadd4_checkIllegalCycles(_1a3ea49e3_Eval*, jule::Ptr<_1a3e59e4e_Var>&, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eab28b_evalVar(_1a3ea49e3_Eval*, jule::Ptr<_1a3e59e4e_Var>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eab643_evalTypeAlias(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecd016_TypeAlias>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eab9ea_evalDef(_1a3ea49e3_Eval*, jule::Any, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eabd08_evalIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a31109eb_IdentExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eac116_evalUnary(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3111205_UnaryExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eac424_evalVariadic(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31115ac_VariadicExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eac732_evalUnsafe(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31101c1_UnsafeExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eaca40_evalArr(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a311533b_SliceExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eace91_evalExpSlc(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a311533b_SliceExpr>, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Any);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ead29e_evalSliceExpr(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a311533b_SliceExpr>);
inline void _1a3ead5e0_checkIntegerIndexingByData(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3ead9b9_indexingPtr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline void _1a3eadd82_indexingArr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline void _1a3eae24a_indexingSlc(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline void _1a3eae613_indexingMap(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline void _1a3eae9cb_indexingStr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline void _1a3eaed94_toIndexing(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline jule::Bool _1a3eb0317_pushGenericsFromExprSubIdent(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a311228e_SubIdentExpr>&, jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>&, jule::Ptr<_1a310d983_Expr>&);
inline jule::Bool _1a3eb06d0_pushGenericsFromData(jule::Ptr<_1a3ea49e3_Eval>, jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>&, jule::Ptr<_1a310d983_Expr>&);
inline void _1a3eb0a21_evalIdentDeclFromIndexing(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline jule::Bool _1a3eb0e83_checkGenericFn(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31ca874_FnIns>&, jule::Ptr<_1ba1dbeab_Token>&, jule::Any&);
inline void _1a3eb12c4_evalFnGenericFromIndexing(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3115bcc_IndexingExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb15e3_evalIndexing(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3115bcc_IndexingExpr>);
inline std::tuple<jule::Ptr<_1a3ea2e75_Data>,jule::Ptr<_1a3ea2e75_Data>> _1a3eb1901_evalSlicingExprs(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31162d7_SlicingExpr>&);
inline void _1a3eb1b76_slicingArr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eb203e_slicingStr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eb24a1_checkSlicing(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a31162d7_SlicingExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb27ae_evalSlicing(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31162d7_SlicingExpr>);
inline void _1a3eb2b77_castPtr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb3040_castStruct(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb3408_castRef(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb37c1_castSlc(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb3ae0_castStr(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb3ea8_castInt(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb4371_castNum(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb4739_castPrim(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb4a58_castConstant(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eb4e21_castTypeEnum(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb5372_evalCastByTypeNData(_1a3ea49e3_Eval*, jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb57c3_evalCastT(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a310d983_Expr>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb5ad1_evalCast(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3111964_CastExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb5dde_evalNsSelection(_1a3ea49e3_Eval*, jule::Ptr<_1a3111d1b_NsSelectionExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb6340_evalStructLitExplicit(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a312ad46_StructIns>, jule::Slice<jule::Ptr<_1a310d983_Expr>>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb664d_evalStructLit(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3113e2d_StructLit>);
inline _1a3edc234_typeChecker _1a3eb68b2_typeChecker(_1a3ea49e3_Eval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb6bc0_evalType(_1a3ea49e3_Eval*, jule::Ptr<_1a3109462_TypeDecl>);
inline void _1a3eb6ede_callTypeFn(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eb730d_callBuiltinFn(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eb764e_checkFnOfConcurrentCall(_1a3ea49e3_Eval*, jule::Ptr<_1a31ca874_FnIns>&, jule::Ptr<_1ba1dbeab_Token>);
inline void _1a3eb7a4a_processExceptionalHandler(_1a3ea49e3_Eval*, jule::Ptr<_1a31ca874_FnIns>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eb7d7a_callFn(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb8188_evalFnCall(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3112c51_FnCallExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb8540_evalEnumStatic(_1a3ea49e3_Eval*, jule::Ptr<_1a31dbbc6_Enum>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb88e7_evalTypeEnumStatic(_1a3ea49e3_Eval*, jule::Ptr<_1a31dd2c1_TypeEnum>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb8c9e_evalStructStatic(_1a3ea49e3_Eval*, jule::Ptr<_1a312ad46_StructIns>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb9200_evalTraitSubIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1a31d9a81_Trait>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb96ea_evalStructSubIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1a312ad46_StructIns>, jule::Ptr<_1a311228e_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb9aa2_evalSliceSubIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eb9e59_evalArraySubIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eba311_evalMapSubIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eba61e_evalIntTypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eba92c_evalUintTypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebac3a_evalI8TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb048_evalI16TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb356_evalI32TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb664_evalI64TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb972_evalU8TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebbc80_evalU16TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc08d_evalU32TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc39b_evalU64TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc6a9_evalF32TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc9b7_evalF64TypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebcd6e_evalPrimStatic(_1a3ea49e3_Eval*, jule::Str, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebd226_evalTypeStatic(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1a311228e_SubIdentExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebd5cd_evalObjSubIdent(_1a3ea49e3_Eval*, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1a311228e_SubIdentExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebd8db_evalSubIdent(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a311228e_SubIdentExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebdbe9_evalTuple(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a310e610_TupleExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe0a1_evalMap(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3ed8e78_Map>, jule::Ptr<_1a31143a1_BraceLit>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe3ae_evalBraceLit(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31143a1_BraceLit>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe6bc_evalAnonFn(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a31210d3_FnDecl>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe9ca_evalBinop(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a3112712_BinopExpr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ebecd8_evalExprKind(jule::Ptr<_1a3ea49e3_Eval>, jule::Any);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec00e6_eval(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a310d983_Expr>);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec0404_evalExpr(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1a310d983_Expr>);
struct _1a3ea49e3_Eval {
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Trait<_1a3eee697_Lookup> _field_lookup = jule::Trait<_1a3eee697_Lookup>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_prefix = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_1a3e59e4e_Var> _field_owner = jule::Ptr<_1a3e59e4e_Var>();
	jule::Ptr<_1a3102306_FieldIns> _field_field = jule::Ptr<_1a3102306_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1a3ea49e3_Eval(void) = default;

	inline bool operator==(_1a3ea49e3_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a3ea49e3_Eval _other) { return !this->operator==(_other); }


};
inline _1a3ec0877_unaryEval static__1a3ec0d2d_new(jule::Ptr<_1a3ea49e3_Eval>);
inline void _1a3ec1009_minus(_1a3ec0877_unaryEval*);
inline void _1a3ec11d5_plus(_1a3ec0877_unaryEval*);
inline void _1a3ec13b1_caret(_1a3ec0877_unaryEval*);
inline void _1a3ec158c_excl(_1a3ec0877_unaryEval*);
inline void _1a3ec1768_star(_1a3ec0877_unaryEval*);
inline void _1a3ec1944_amper(_1a3ec0877_unaryEval*);
inline void _1a3ec1b20_typeDecl(_1a3ec0877_unaryEval*);
inline void _1a3ec1ceb_evalData(_1a3ec0877_unaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec20c6_eval(_1a3ec0877_unaryEval*, jule::Ptr<_1a3111205_UnaryExpr>);
struct _1a3ec0877_unaryEval {
	jule::Ptr<_1a3ea49e3_Eval> _field_e = jule::Ptr<_1a3ea49e3_Eval>();
	jule::Ptr<_1a3ea2e75_Data> _field_d = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1a3111205_UnaryExpr> _field_u = jule::Ptr<_1a3111205_UnaryExpr>();
	

	_1a3ec0877_unaryEval(void) = default;

	inline bool operator==(_1a3ec0877_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a3ec0877_unaryEval _other) { return !this->operator==(_other); }


};
inline _1a3ec2615_binaryEval static__1a3ec2bcb_newPlain(jule::Ptr<_1a3ea49e3_Eval>);
inline _1a3ec2615_binaryEval static__1a3ec301c_new(jule::Ptr<_1a3ea49e3_Eval>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a3ec3281_checkTypeCompatibility(_1a3ec2615_binaryEval*);
inline jule::Bool _1a3ec3528_checkStructCommonOperatorCompatibility(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec37c0_evalNil(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec3a34_evalEnum(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec3c98_evalTypeEnum(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec400c_evalSptr(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4271_evalPtr(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec44d5_evalArr(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4749_evalSlc(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec49ad_evalFn(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4c22_evalStruct(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4e86_evalTrait(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec51ea_evalAny(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec545e_evalBool(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec56c3_evalStr(_1a3ec2615_binaryEval*);
inline void _1a3ec589e_setTypeToGreater(_1a3ec2615_binaryEval*);
inline void _1a3ec5ae1_checkModData(_1a3ec2615_binaryEval*, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ec5cbc_mod(_1a3ec2615_binaryEval*);
inline jule::Bool _1a3ec6174_numbersAreCompatibile(_1a3ec2615_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec63d8_evalFloat(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec664c_evalInt(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec68b1_evalPrim(_1a3ec2615_binaryEval*);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec6b25_evalOp(_1a3ec2615_binaryEval*);
inline void _1a3ec6d9a_evalConst(_1a3ec2615_binaryEval*, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ec7120_checkData(_1a3ec2615_binaryEval*, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ec72eb_checkDatas(_1a3ec2615_binaryEval*);
inline void _1a3ec7571_setModel(_1a3ec2615_binaryEval*, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ec77e6_postEval(_1a3ec2615_binaryEval*, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec7b9d_solveExplicit(_1a3ec2615_binaryEval*, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3ec7eab_eval(_1a3ec2615_binaryEval*, jule::Ptr<_1a3112712_BinopExpr>&);
struct _1a3ec2615_binaryEval {
	jule::Ptr<_1a3ea49e3_Eval> _field_e = jule::Ptr<_1a3ea49e3_Eval>();
	jule::Ptr<_1a3ea2e75_Data> _field_l = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1a3ea2e75_Data> _field_r = jule::Ptr<_1a3ea2e75_Data>();
	jule::Ptr<_1ba1dbeab_Token> _field_op = jule::Ptr<_1ba1dbeab_Token>();
	

	_1a3ec2615_binaryEval(void) = default;

	inline bool operator==(_1a3ec2615_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a3ec2615_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a3ecc4cc_InsGeneric {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>();
	

	_1a3ecc4cc_InsGeneric(void) = default;

	inline bool operator==(_1a3ecc4cc_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a3ecc4cc_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1a3ecd016_TypeAlias {
	jule::Ptr<_1a3119780_ScopeTree> _field_Scope = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a3ed2d62_TypeSymbol> _field_Kind = jule::Ptr<_1a3ed2d62_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>();
	

	_1a3ecd016_TypeAlias(void) = default;

	inline bool operator==(_1a3ecd016_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1a3ecd016_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ece105_Str(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3ece413_Equals(jule::Ptr<_1a3ecdc09_TypeKind>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a3ece8b9_CppLinked(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3eceb2d_IsNil(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3eced92_Void(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3ed0106_Mutable(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3ed036a_NilCompatible(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3ed05ce_PerformsRC(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3ed0843_SupportsCloning(_1a3ecdc09_TypeKind*);
inline jule::Bool _1a3ed0aa7_Variadicable(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3ed36d1_Prim> _1a3ed0d1b_Prim(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3ed6e65_Sptr> _1a3ed1080_Sptr(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3eda4c9_Ptr> _1a3ed12e4_Ptr(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3ed1558_Enum(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3ed17bc_TypeEnum(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3ed9a6c_Arr> _1a3ed1a31_Arr(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3ed78c2_Slc> _1a3ed1c95_Slc(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a31ca874_FnIns> _1a3ed2009_Fn(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a312ad46_StructIns> _1a3ed226d_Struct(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a31d9a81_Trait> _1a3ed24d2_Trait(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3ed8e78_Map> _1a3ed2746_Map(_1a3ecdc09_TypeKind*);
inline jule::Ptr<_1a3ed8450_Tuple> _1a3ed29aa_Tup(_1a3ecdc09_TypeKind*);
struct _1a3ecdc09_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_1a3ecd7ca_Kind> _field_Kind = jule::Trait<_1a3ecd7ca_Kind>();
	

	_1a3ecdc09_TypeKind(void) = default;

	inline bool operator==(_1a3ecdc09_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3ecdc09_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a3ed3219_checked(_1a3ed2d62_TypeSymbol*);
inline void _1a3ed33e5_removeKind(_1a3ed2d62_TypeSymbol*);
struct _1a3ed2d62_TypeSymbol {
	jule::Ptr<_1a3109462_TypeDecl> _field_Decl = jule::Ptr<_1a3109462_TypeDecl>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Kind = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a3ed2d62_TypeSymbol(void) = default;

	inline bool operator==(_1a3ed2d62_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3ed2d62_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ed3a44_Str(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed3d52_Equals(jule::Ptr<_1a3ed36d1_Prim>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a3ed42c5_IsConstraint(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed4539_IsI8(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed479d_IsI16(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed4a12_IsI32(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed4c76_IsI64(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed4eda_IsU8(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed524e_IsU16(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed54b3_IsU32(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed5727_IsU64(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed598b_IsF32(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed5c00_IsF64(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed5e64_IsInt(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed61c8_IsUint(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed643c_IsUintptr(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed66a1_IsBool(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed6915_IsStr(_1a3ed36d1_Prim*);
inline jule::Bool _1a3ed6b79_IsAny(_1a3ed36d1_Prim*);
struct _1a3ed36d1_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_1a3ed36d1_Prim(void) = default;

	inline bool operator==(_1a3ed36d1_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3ed36d1_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ed72c8_Str(_1a3ed6e65_Sptr*);
inline jule::Bool _1a3ed75d6_Equals(jule::Ptr<_1a3ed6e65_Sptr>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a3ed6e65_Sptr {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Elem = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a3ed6e65_Sptr(void) = default;

	inline bool operator==(_1a3ed6e65_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3ed6e65_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ed7dcd_Str(_1a3ed78c2_Slc*);
inline jule::Bool _1a3ed81db_Equals(jule::Ptr<_1a3ed78c2_Slc>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a3ed78c2_Slc {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Elem = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a3ed78c2_Slc(void) = default;

	inline bool operator==(_1a3ed78c2_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3ed78c2_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ed87b3_Str(_1a3ed8450_Tuple*);
inline jule::Bool _1a3ed8ac1_Equals(jule::Ptr<_1a3ed8450_Tuple>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a3ed8450_Tuple {
	jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>();
	

	_1a3ed8450_Tuple(void) = default;

	inline bool operator==(_1a3ed8450_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1a3ed8450_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ed92db_Str(_1a3ed8e78_Map*);
inline jule::Bool _1a3ed95e9_Equals(jule::Ptr<_1a3ed8e78_Map>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a3ed8e78_Map {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Key = jule::Ptr<_1a3ecdc09_TypeKind>();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Val = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a3ed8e78_Map(void) = default;

	inline bool operator==(_1a3ed8e78_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a3ed8e78_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3ed9dd0_Str(_1a3ed9a6c_Arr*);
inline jule::Bool _1a3eda1dd_Equals(jule::Ptr<_1a3ed9a6c_Arr>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a3ed9a6c_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Elem = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a3ed9a6c_Arr(void) = default;

	inline bool operator==(_1a3ed9a6c_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3ed9a6c_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a3eda83c_Str(_1a3eda4c9_Ptr*);
inline jule::Bool _1a3edab4a_Equals(jule::Ptr<_1a3eda4c9_Ptr>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a3edae9c_IsUnsafe(_1a3eda4c9_Ptr*);
struct _1a3eda4c9_Ptr {
	jule::Ptr<_1a3ecdc09_TypeKind> _field_Elem = jule::Ptr<_1a3ecdc09_TypeKind>();
	

	_1a3eda4c9_Ptr(void) = default;

	inline bool operator==(_1a3eda4c9_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3eda4c9_Ptr _other) { return !this->operator==(_other); }


};
struct _1a3edb420_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1a3edb420_referencer(void) = default;

	inline bool operator==(_1a3edb420_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a3edb420_referencer _other) { return !this->operator==(_other); }


};
inline void _1a3ee279a_pushErr(_1a3edc234_typeChecker*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3ee2976_allowBuiltin(_1a3edc234_typeChecker*);
inline void _1a3ee2b52_disallowBuiltin(_1a3edc234_typeChecker*);
inline jule::Ptr<_1a3ed36d1_Prim> _1a3ee2e60_buildPrim(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&);
inline void _1a6ca2ca5_pushReference(_1a3edc234_typeChecker*, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a6ca601c_pushReference(_1a3edc234_typeChecker*, jule::Ptr<_1a31d9a81_Trait>&);
inline void _1a3ee345a_pushReferenceByKind(_1a3edc234_typeChecker*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline void _1a3ee3823_pushCycleError(_1a3edc234_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1a3ee3bca_checkCrossCycle(_1a3edc234_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1a3ee4082_checkIllegalCycles(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee4439_fromTypeAlias(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Ptr<_1a3ecd016_TypeAlias>&);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3ee47e1_fromEnum(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Ptr<_1a31dbbc6_Enum>&);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3ee4b98_fromTypeEnum(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Ptr<_1a31dd2c1_TypeEnum>&);
inline jule::Ptr<_1a31d9a81_Trait> _1a3ee5050_fromTrait(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Ptr<_1a31d9a81_Trait>&);
inline jule::Bool _1a3ee5407_checkStructIns(_1a3edc234_typeChecker*, jule::Ptr<_1a312ad46_StructIns>&, jule::Ptr<_1ba1dbeab_Token>&);
inline void _1a3ee569e_appendUsedStructReference(_1a3edc234_typeChecker*, jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Ptr<_1a312ad46_StructIns> _1a3ee5a67_buildStructInstance(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Ptr<_1a312ad46_StructIns> _1a3ee5e1e_fromStruct(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&, jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee622c_getDef(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>&);
inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee653a_buildIdent(_1a3edc234_typeChecker*, jule::Ptr<_1a3109a28_IdentTypeDecl>);
inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee6848_buildSubIdent(_1a3edc234_typeChecker*, jule::Ptr<_1a310a177_SubIdentTypeDecl>);
inline jule::Ptr<_1a3ed6e65_Sptr> _1a3ee6b56_buildSptrFromType(_1a3edc234_typeChecker*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Ptr<_1a3ed6e65_Sptr> _1a3ee6e64_buildSptr(_1a3edc234_typeChecker*, jule::Ptr<_1a310a81a_SptrTypeDecl>);
inline jule::Ptr<_1a3eda4c9_Ptr> _1a3ee7272_buildPtrFromType(_1a3edc234_typeChecker*, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Ptr<_1a3eda4c9_Ptr> _1a3ee7580_buildPtr(_1a3edc234_typeChecker*, jule::Ptr<_1a310b2dd_PtrTypeDecl>);
inline jule::Ptr<_1a3ed78c2_Slc> _1a3ee788d_buildSlc(_1a3edc234_typeChecker*, jule::Ptr<_1a310ac16_SlcTypeDecl>);
inline jule::Ptr<_1a3ed9a6c_Arr> _1a3ee7b9b_buildArr(_1a3edc234_typeChecker*, jule::Ptr<_1a310b970_ArrTypeDecl>);
inline jule::Ptr<_1a3ed8e78_Map> _1a3ee7ea9_buildMap(_1a3edc234_typeChecker*, jule::Ptr<_1a310c1bd_MapTypeDecl>);
inline jule::Ptr<_1a3ed8450_Tuple> _1a3ee82b7_buildTuple(_1a3edc234_typeChecker*, jule::Ptr<_1a310b002_TupleTypeDecl>);
inline jule::Bool _1a3ee85c5_checkFnTypes(_1a3edc234_typeChecker*, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Ptr<_1a31ca874_FnIns> _1a3ee88d3_buildFn(_1a3edc234_typeChecker*, jule::Ptr<_1a31210d3_FnDecl>);
inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee8be1_buildByNamespace(_1a3edc234_typeChecker*, jule::Ptr<_1a310a52e_NamespaceTypeDecl>);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3ee8eee_build(_1a3edc234_typeChecker*, jule::Any&);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3ee930c_checkDecl(_1a3edc234_typeChecker*, jule::Ptr<_1a3109462_TypeDecl>&);
inline void _1a3ee9582_check(_1a3edc234_typeChecker*, jule::Ptr<_1a3ed2d62_TypeSymbol>&);
struct _1a3edc234_typeChecker {
	jule::Ptr<_1a3e3c1ea_Sema> _field_s = jule::Ptr<_1a3e3c1ea_Sema>();
	jule::Trait<_1a3eee697_Lookup> _field_rootLookup = jule::Trait<_1a3eee697_Lookup>();
	jule::Trait<_1a3eee697_Lookup> _field_lookup = jule::Trait<_1a3eee697_Lookup>();
	jule::Ptr<_1a3edb420_referencer> _field_referencer = jule::Ptr<_1a3edb420_referencer>();
	jule::Ptr<_1a31cd745_ReferenceStack> _field_refers = jule::Ptr<_1a31cd745_ReferenceStack>();
	jule::Ptr<_1ba1dbeab_Token> _field_errorToken = jule::Ptr<_1ba1dbeab_Token>();
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a3ecd016_TypeAlias> _field_ownerAlias = jule::Ptr<_1a3ecd016_TypeAlias>();
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1a3edc234_typeChecker(void) = default;

	inline bool operator==(_1a3edc234_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a3edc234_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a3ee9be2_identTypeDecl(jule::Str&, jule::Ptr<_1a3109a28_IdentTypeDecl>);
inline jule::Bool static__1a3eea033_exist(jule::Str&, jule::Any&);
struct _1a3ee97a2_identTypeLookup {
	

	_1a3ee97a2_identTypeLookup(void) = default;

	inline bool operator==(_1a3ee97a2_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a3ee97a2_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a46a7b0d_FileInfo {
	jule::Ptr<_1a30c48a0_Ast> _field_Ast = jule::Ptr<_1a30c48a0_Ast>();
	jule::Slice<_1b9db24ab_Log> _field_Errors = jule::Slice<_1b9db24ab_Log>();
	

	_1a46a7b0d_FileInfo(void) = default;

	inline bool operator==(_1a46a7b0d_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_1a46a7b0d_FileInfo _other) { return !this->operator==(_other); }


};
struct _1a47094de_stmt {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1a47094de_stmt(void) = default;

	inline bool operator==(_1a47094de_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1a47094de_stmt _other) { return !this->operator==(_other); }


};
inline void _1a470a49b_stop(_1a4709d19_scopeParser*);
inline jule::Bool _1a470a710_stopped(_1a4709d19_scopeParser*);
inline jule::Bool _1a470a974_finished(_1a4709d19_scopeParser*);
inline jule::Bool _1a470abd8_isLastSt(_1a4709d19_scopeParser*);
inline void _1a470b007_pushErr(_1a4709d19_scopeParser*, jule::Ptr<_1ba1dbeab_Token>, jule::Str);
inline void _1a470b326_pushSuggestion(_1a4709d19_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a470b59b_insertAsNext(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a47094de_stmt> _1a470b810_next(_1a4709d19_scopeParser*);
inline jule::Ptr<_1a3119780_ScopeTree> _1a470bbb7_buildScope(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a31220b2_VarDecl> _1a470bec5_buildVarSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3122469_RetSt> _1a470c2d3_buildRetSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3122ac9_Iter> _1a470c5e1_buildWhileNextIter(_1a4709d19_scopeParser*, jule::Ptr<_1a47094de_stmt>&);
inline jule::Ptr<_1a312339e_WhileKind> _1a470c8ee_buildWhileIterKind(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a470cc0c_getRangeKindKeysTokens(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31220b2_VarDecl> _1a470d01a_buildRangeKindKey(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1a31220b2_VarDecl>> _1a470d328_buildRangeKindKeys(_1a4709d19_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>&);
inline void _1a470d669_setupRangeKindKeysPlain(_1a4709d19_scopeParser*, jule::Ptr<_1a3123c40_RangeKind>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a470d9bb_setupRangeKindKeysExplicit(_1a4709d19_scopeParser*, jule::Ptr<_1a3123c40_RangeKind>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a470dceb_setupRangeKindKeys(_1a4709d19_scopeParser*, jule::Ptr<_1a3123c40_RangeKind>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3123c40_RangeKind> _1a470e24c_buildRangeIterKind(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Any _1a470e604_buildCommonIterKind(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Ptr<_1a3122ac9_Iter> _1a470e912_buildCommonIter(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3122ac9_Iter> _1a470ec20_buildIterSt(_1a4709d19_scopeParser*, jule::Ptr<_1a47094de_stmt>&);
inline jule::Ptr<_1a31240e7_BreakSt> _1a471002d_buildBreakSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a312449e_ContSt> _1a471033b_buildContSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3124922_If> _1a4710649_buildIf(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3124cc9_Else> _1a4710957_buildElse(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a312524c_Conditional> _1a4710c65_buildIfElseChain(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3110578_CoExpr> _1a4711073_buildCoCallSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a31172a5_GotoSt> _1a4711381_buildGotoSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3117591_FallSt> _1a471168e_buildFallSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3125923_TypeAliasDecl> _1a471199c_buildTypeAliasSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4711e0e_pushCaseExpr(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Ptr<_1ba1dbeab_Token>, jule::Bool, jule::Slice<jule::Ptr<_1a310d983_Expr>>&);
inline jule::Slice<jule::Ptr<_1a310d983_Expr>> _1a4712360_buildCaseExprs(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>&, jule::Bool);
inline jule::Ptr<_1a3119780_ScopeTree> _1a471266d_buildCaseScope(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline std::tuple<jule::Ptr<_1a3125d96_Case>,jule::Bool> _1a4712a25_buildCase(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1a3125d96_Case>>,jule::Ptr<_1a3124cc9_Else>> _1a4712dcc_buildCases(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Bool);
inline jule::Ptr<_1a312656c_MatchCase> _1a47131da_buildMatchCase(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3119780_ScopeTree> _1a47134e8_buildScopeSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3116ded_LabelSt> _1a4713806_buildLabelSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1a4713b14_buildIdSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a4722b34_assignInfo> _1a4713e22_buildAssignInfo(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3117b9b_AssignLeft> _1a4714230_buildAssignL(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1a3117b9b_AssignLeft>> _1a471453d_buildAssignLs(_1a4709d19_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>&);
inline std::tuple<jule::Ptr<_1a31181da_AssignSt>,jule::Bool> _1a471484b_buildPlainAssign(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline std::tuple<jule::Ptr<_1a31181da_AssignSt>,jule::Bool> _1a4714b59_buildDeclAssign(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline std::tuple<jule::Ptr<_1a31181da_AssignSt>,jule::Bool> _1a4714e67_buildAssignSt(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a310e324_UseExpr> _1a4715275_buildUseExpr(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a4715583_buildSt(_1a4709d19_scopeParser*, jule::Ptr<_1a47094de_stmt>&);
inline void _1a47158a2_build(_1a4709d19_scopeParser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1a3119780_ScopeTree>&);
struct _1a4709d19_scopeParser {
	jule::Ptr<_1a4726462_parser> _field_p = jule::Ptr<_1a4726462_parser>();
	jule::Ptr<_1a3119780_ScopeTree> _field_s = jule::Ptr<_1a3119780_ScopeTree>();
	jule::Slice<jule::Ptr<_1a47094de_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1a47094de_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1a4709d19_scopeParser(void) = default;

	inline bool operator==(_1a4709d19_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a4709d19_scopeParser _other) { return !this->operator==(_other); }


};
inline void _1a4716ac3_pushErr(_1a47162cb_exprBuilder*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a4716de2_pushSuggestion(_1a47162cb_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a310e610_TupleExpr> _1a4717200_buildTuple(_1a47162cb_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>&);
inline jule::Ptr<_1a310e9b7_LitExpr> _1a471750d_buildLit(_1a47162cb_exprBuilder*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a3109462_TypeDecl> _1a471781b_buildPrimitiveType(_1a47162cb_exprBuilder*, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Any _1a4717b29_buildSingle(_1a47162cb_exprBuilder*, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a31109eb_IdentExpr> _1a4717e37_buildCppLinkedIdent(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3111205_UnaryExpr> _1a4718245_buildUnary(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a311228e_SubIdentExpr> _1a4718553_buildObjSubIdent(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3111d1b_NsSelectionExpr> _1a4718861_buildNsSubIdent(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4718b6e_buildType(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a4718e7c_buildSubIdent(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31115ac_VariadicExpr> _1a471928a_buildVariadic(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Any _1a4719598_buildOpRight(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a310dc6e_RangeExpr> _1a47198c8_buildBetweenParentheses(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3111964_CastExpr> _1a4719be7_tryBuildCast(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a471a0b0_pushArg(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1a310d983_Expr>>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Slice<jule::Ptr<_1a310d983_Expr>> _1a471a3bd_buildArgs(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _1a471a6cb_buildCallGenerics(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3112c51_FnCallExpr> _1a471ab2c_buildFnCall(_1a47162cb_exprBuilder*, jule::Ptr<_1ba1dbeab_Token>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a471ae3a_buildParenthesesRange(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31101c1_UnsafeExpr> _1a471b248_buildUnsafeExpr(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a31210d3_FnDecl> _1a471b556_buildAnonFn(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a471b864_buildUnsafe(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a471bc2c_pushRangeLitPart(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Ptr<_1ba1dbeab_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a471c05c_getBraceRangeLitExprParts(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a31136d0_FieldExprPair> _1a471c37b_buildFieldExprPair(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a310d983_Expr> _1a471c689_buildStructLitExpr(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1a310d983_Expr>> _1a471c997_buildStructLitExprs(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3113e2d_StructLit> _1a471ccc7_buildTypedStructLiteral(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a310d983_Expr> _1a471d0e6_buildBraceLitPart(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31143a1_BraceLit> _1a471d404_buildBraceLit(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a471d712_buildBraceRange(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a471da20_getEnumerableParts(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a311533b_SliceExpr> _1a471dd2d_buildSlice(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3115bcc_IndexingExpr> _1a471e27e_buildIndexing(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Ptr<_1a31162d7_SlicingExpr> _1a471e823_buildSlicing(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Any _1a471eb31_buildBracketRange(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Any _1a471ee3e_buildData(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a47202e6_buildBinop(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64);
inline jule::Any _1a4720604_build(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a4720912_buildKind(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a310d983_Expr> _1a4720c20_buildFromTokens(_1a47162cb_exprBuilder*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
struct _1a47162cb_exprBuilder {
	jule::Ptr<_1a4726462_parser> _field_p = jule::Ptr<_1a4726462_parser>();
	

	_1a47162cb_exprBuilder(void) = default;

	inline bool operator==(_1a47162cb_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a47162cb_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a4722b34_assignInfo {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_l = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_r = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Ptr<_1ba1dbeab_Token> _field_setter = jule::Ptr<_1ba1dbeab_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1a4722b34_assignInfo(void) = default;

	inline bool operator==(_1a4722b34_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1a4722b34_assignInfo _other) { return !this->operator==(_other); }


};
inline void _1a4726792_stop(_1a4726462_parser*);
inline jule::Bool _1a4726a06_stopped(_1a4726462_parser*);
inline void _1a4726dbe_pushErr(_1a4726462_parser*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a47271dd_pushSuggestion(_1a4726462_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a310d983_Expr> _1a47274eb_buildExpr(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a30c5a27_Directive> _1a4727809_buildDirective(_1a4726462_parser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a4727a7e_pushDirective(_1a4726462_parser*, jule::Ptr<_1a30c5a27_Directive>);
inline jule::Ptr<_1a3119780_ScopeTree> _1a4727e36_buildScope(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>);
inline std::tuple<jule::Ptr<_1a3109462_TypeDecl>,jule::Bool> _1a4728387__buildType(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1a3109462_TypeDecl>,jule::Bool> _1a47287d8_buildType(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1a3125923_TypeAliasDecl> _1a4728ae6_buildTypeAliasDecl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4728e15_buildVarTypeAndExpr(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1a31220b2_VarDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4729234_buildVarCommon(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1a31220b2_VarDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a47295ec_buildVarBegin(_1a4726462_parser*, jule::Ptr<_1a31220b2_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31220b2_VarDecl> _1a472990a_buildVar(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3116a46_GenericDecl> _1a4729c18_buildGeneric(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _1a472a0c0_buildGenerics(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Ptr<_1ba1dbeab_Token>&);
inline jule::Ptr<_1a3119e56_ParamDecl> _1a472a3cd_buildSelfParam(_1a4726462_parser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a472a796_paramTypeBegin(_1a4726462_parser*, jule::Ptr<_1a3119e56_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a472aab5_buildParamType(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1a3119e56_ParamDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a472add4_buildParamBody(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1a3119e56_ParamDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3119e56_ParamDecl> _1a472b1e2_buildParam(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a472b467_checkParams(_1a4726462_parser*, jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>> _1a472b81e_buildParams(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1a310c575_RetTypeDecl>,jule::Bool> _1a472bbc6_buildMultiRetType(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1a310c575_RetTypeDecl>,jule::Bool> _1a472c07d_buildRetType(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64&);
inline jule::Ptr<_1a31210d3_FnDecl> _1a472c4ce_buildFnPrototype(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1a31210d3_FnDecl> _1a472c930_buildFn(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _1a472cc3d_getUseDeclSelectors(_1a4726462_parser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a472d05c_buildCppUseDecl(_1a4726462_parser*, jule::Ptr<_1a3126d0e_UseDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a472d37b_buildStdUseDecl(_1a4726462_parser*, jule::Ptr<_1a3126d0e_UseDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a472d69a_buildIdentUseDecl(_1a4726462_parser*, jule::Ptr<_1a3126d0e_UseDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline void _1a472d9b9_parseUseDecl(_1a4726462_parser*, jule::Ptr<_1a3126d0e_UseDecl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3126d0e_UseDecl> _1a472dd71_buildUseDecl(_1a4726462_parser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>, jule::Bool);
inline jule::Ptr<_1a3109462_TypeDecl> _1a472e228_buildTypeEnumItemKind(jule::Ptr<_1a4726462_parser>, jule::I64&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>> _1a472e536_buildTypeEnumItems(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31289ae_TypeEnumDecl> _1a472e844_buildTypeEnumDecl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a310d983_Expr> _1a472ebeb_buildEnumItemExpr(jule::Ptr<_1a4726462_parser>, jule::I64&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>> _1a4730009_buildEnumItems(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3127caa_EnumDecl> _1a4730317_buildEnumDecl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Any _1a4730625_buildNodeEnumDecl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a312900e_FieldDecl> _1a4730933_buildField(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Slice<jule::Ptr<_1a312900e_FieldDecl>> _1a4730c41_buildStructDeclFields(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a312986c_StructDecl> _1a473104e_buildStructDecl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a47312c4_checkMethodReceiver(_1a4726462_parser*, jule::Ptr<_1a31210d3_FnDecl>&);
inline jule::Slice<jule::Ptr<_1a31210d3_FnDecl>> _1a47315d2_buildTraitMethods(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3129e77_TraitDecl> _1a47318e0_buildTraitDecl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31210d3_FnDecl> _1a4731bed_buildCppLinkFn(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a31220b2_VarDecl> _1a473200b_buildCppLinkVar(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a312986c_StructDecl> _1a4732319_buildCppLinkStruct(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3125923_TypeAliasDecl> _1a4732627_buildCppLinkTypeAlias(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a3126d0e_UseDecl> _1a4732935_buildCppLinkUse(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Any _1a4732c43_buildCppLink(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31210d3_FnDecl> _1a4733051_getMethod(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4733370_parseImplBody(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1a312a582_Impl>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a312a582_Impl> _1a473367d_buildImpl(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Any _1a473398b_buildNodeData(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4733c11_applyFnMeta(_1a4726462_parser*, jule::Ptr<_1a31210d3_FnDecl>&);
inline void _1a4733e86_applyMeta(_1a4726462_parser*, _1a30c562b_Node&);
inline void _1a473420b_pushUseDecl(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1a3126d0e_UseDecl>&);
inline jule::Bool _1a4734519_pushMetaNodes(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline _1a30c562b_Node _1a4734827_parseNode(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4734a9c_appendNode(jule::Ptr<_1a4726462_parser>, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a473500e_removeRange(_1a4726462_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::I64>&);
inline void _1a47353c7_pushWrongOrderCloseErr(_1a4726462_parser*, jule::Ptr<_1ba1dbeab_Token>&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::I64>&);
inline void _1a4735839_pushRangeClose(_1a4726462_parser*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Slice<jule::I64>&);
inline void _1a4735aae_checkRanges(_1a4726462_parser*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline void _1a4735d34_parse(jule::Ptr<_1a4726462_parser>, jule::Ptr<_1ba1e2346_File>&);
struct _1a4726462_parser {
	jule::Ptr<_1a30c48a0_Ast> _field_ast = jule::Ptr<_1a30c48a0_Ast>();
	jule::Slice<jule::Ptr<_1a30c5a27_Directive>> _field_directives = jule::Slice<jule::Ptr<_1a30c5a27_Directive>>();
	jule::Slice<_1b9db24ab_Log> _field_errors = jule::Slice<_1b9db24ab_Log>();
	

	_1a4726462_parser(void) = default;

	inline bool operator==(_1a4726462_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a4726462_parser _other) { return !this->operator==(_other); }


};
inline void _1a473774d_pushErr(_1a4737176_typeBuilder*, jule::Ptr<_1ba1dbeab_Token>, jule::Str);
inline void _1a4737a6c_pushSuggestion(_1a4737176_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4737cd1_buildPrim(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4738045_buildNamespace(_1a4737176_typeBuilder*);
inline jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _1a47382a9_buildGenerics(_1a4737176_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a473851d_identGenerics(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4738782_buildIdent(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a47389e6_buildCppLink(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4738c5a_buildFn(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4738ebe_buildPtr(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4739233_buildSptr(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4739497_buildOp(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a473970b_buildSlc(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4739970_buildArr(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4739bd4_buildMap(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4739e48_buildEnumerable(_1a4737176_typeBuilder*);
inline jule::Ptr<_1a3109462_TypeDecl> _1a473a1ac_step(_1a4737176_typeBuilder*);
inline std::tuple<jule::Ptr<_1a3109462_TypeDecl>,jule::Bool> _1a473a421_build(_1a4737176_typeBuilder*);
struct _1a4737176_typeBuilder {
	jule::Ptr<_1a4726462_parser> _field_p = jule::Ptr<_1a4726462_parser>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1a4737176_typeBuilder(void) = default;

	inline bool operator==(_1a4737176_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a4737176_typeBuilder _other) { return !this->operator==(_other); }


};
struct _1c82a0836_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1c82a0836_CompileInfo(void) = default;

	inline bool operator==(_1c82a0836_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1c82a0836_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1c82a21d9_pushErr(_1c82a1b89_directiveEval*, jule::Ptr<_1ba1dbeab_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1c82a2591_splitOperans(_1c82a1b89_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Bool _1c82a289e_evalDirectiveIdent(_1c82a1b89_directiveEval*, jule::Str);
inline jule::Bool _1c82a2bac_evalDirectivePart(_1c82a1b89_directiveEval*, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Bool _1c82a2e21_eval(_1c82a1b89_directiveEval*);
struct _1c82a1b89_directiveEval {
	jule::Slice<_1b9db24ab_Log> _field_logs = jule::Slice<_1b9db24ab_Log>();
	jule::Ptr<_1a30c5a27_Directive> _field_d = jule::Ptr<_1a30c5a27_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c82a1b89_directiveEval(void) = default;

	inline bool operator==(_1c82a1b89_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c82a1b89_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4156cc7_JuleImporter> static__1a41b38a0_New(_1c82a0836_CompileInfo);
inline jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>> _1a41c5285_AllPackages(_1a4156cc7_JuleImporter*);
inline void _1a41d0a43_SetModPath(_1a4156cc7_JuleImporter*, jule::Str);
inline jule::Str _1a42067c2_GetModPath(_1a4156cc7_JuleImporter*);
inline jule::Str _1a42b9a83_ModById(_1a4156cc7_JuleImporter*, jule::I64);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a42cb358_GetImport(_1a4156cc7_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1a30c48a0_Ast>>,jule::Slice<_1b9db24ab_Log>> _1a42d6ece_ImportPackage(_1a4156cc7_JuleImporter*, jule::Str, jule::Bool);
inline void _1a4335cca_Imported(_1a4156cc7_JuleImporter*, jule::Ptr<_1a3e3409e_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1b9db24ab_Log>> _1a434898b_isPassBuildDirectives(_1a4156cc7_JuleImporter*, jule::Ptr<_1a30c48a0_Ast>&);
struct _1a4156cc7_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1a4156cc7_JuleImporter(void) = default;

	inline bool operator==(_1a4156cc7_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1a4156cc7_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1c8271c69_OrderedDefines {
	jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Globals = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	

	_1c8271c69_OrderedDefines(void) = default;

	inline bool operator==(_1c8271c69_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_1c8271c69_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a7398873_isCommonOrdered(jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>&, jule::Ptr<_1a30e9b8e_Struct>);
inline jule::Bool _1a73a2063_isCommonOrdered(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&, jule::Ptr<_1a3e59e4e_Var>);
inline void _1a739484c_orderCommon(jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>&);
inline void _1a7394cd1_orderCommon(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&);
inline void static__1a4517dbe_orderStructures(jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>&);
inline void static__1a451e139_orderVars(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&);
struct _1a46e5cd3_defineOrderer {
	

	_1a46e5cd3_defineOrderer(void) = default;

	inline bool operator==(_1a46e5cd3_defineOrderer _other) { return true; }

	inline bool operator!=(_1a46e5cd3_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a47eecee_liveTable {
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_vars = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	jule::Slice<jule::Ptr<_1a31ca874_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1a31ca874_FnIns>>();
	jule::Slice<jule::Ptr<_1a312ad46_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1a312ad46_StructIns>>();
	jule::Slice<jule::Ptr<_1a31d9a81_Trait>> _field_traits = jule::Slice<jule::Ptr<_1a31d9a81_Trait>>();
	

	_1a47eecee_liveTable(void) = default;

	inline bool operator==(_1a47eecee_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1a47eecee_liveTable _other) { return !this->operator==(_other); }


};
inline void _1a4839685_optimizeChild(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e21344_Scope>&);
inline void _1a483992c_optimizeBodyChildExceptional(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e21344_Scope>&);
inline void _1a4839bb3_optimizeBodyChild(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e21344_Scope>&);
inline void _1a4839e38_optimizeExprModel(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Any&);
inline void _1a483a114_eliminateFollowed(_1a48391ac_scopeDeadCode*);
inline void _1a483a389_pushGoto(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e228a6_GotoSt>);
inline void _1a483a60e_pushLabel(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e226b9_Label>);
inline void _1a483a884_optimizeRangeIter(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e22103_RangeIter>);
inline void _1a483ab09_optimizeWhileIter(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e21cd4_WhileIter>);
inline void _1a483ad7e_optimizeInfIter(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e21ae7_InfIter>);
inline void _1a483b104_optimizeConditional(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e2190a_Conditional>);
inline void _1a483b379_optimizeMatch(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e23159_Match>);
inline void _1a483b5ee_optimizeAssign(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e22c80_Assign>);
inline void _1a483b874_optimizeMultiAssign(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Ptr<_1a3e22e6c_MultiAssign>);
inline void _1a483bae9_optimizeStmt(jule::Ptr<_1a48391ac_scopeDeadCode>, jule::Any);
inline void _1a483bcc5_optimizeStmts(jule::Ptr<_1a48391ac_scopeDeadCode>);
struct _1a48391ac_scopeDeadCode {
	jule::Ptr<_1a48391ac_scopeDeadCode> _field_parent = jule::Ptr<_1a48391ac_scopeDeadCode>();
	jule::Ptr<_1a3e21344_Scope> _field_s = jule::Ptr<_1a3e21344_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e226b9_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a3e226b9_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e228a6_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a3e228a6_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1a48391ac_scopeDeadCode(void) = default;

	inline bool operator==(_1a48391ac_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a48391ac_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a483d117_exprDeadCode static__1a483d733_new(jule::Ptr<_1a48391ac_scopeDeadCode>&);
inline void _1a483d9a8_binary(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c00e9_BinopExprModel>);
inline void _1a483dc2d_unary(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c02d6_UnaryExprModel>);
inline void _1a483dea3_structureLit(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c06b0_StructLitExprModel>);
inline void _1a483e228_allocStructure(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c089c_AllocStructLitExprModel>);
inline void _1a483e49d_casting(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c0a89_CastingExprModel>);
inline void _1a483e723_args(_1a483d117_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1a483e998_funcCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c0c76_FnCallExprModel>);
inline void _1a483ec1d_slice(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c0e63_SliceExprModel>);
inline void _1a483ee93_array(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c23d7_ArrayExprModel>);
inline void _1a4840218_indexing(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c1150_IndexingExprModel>);
inline void _1a484048d_anonFunc(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c133c_AnonFnExprModel>);
inline void _1a4840713_mapExpr(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c1716_MapExprModel>);
inline void _1a4840988_slicing(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c1903_SlicingExprModel>);
inline void _1a4840c0d_traitSub(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>);
inline void _1a4840e83_structureSub(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c200d_StructSubIdentExprModel>);
inline void _1a4841208_commonSub(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>);
inline void _1a484147d_tuple(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c299d_TupleExprModel>);
inline void _1a4841703_newCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>);
inline void _1a4841978_outCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>);
inline void _1a4841bed_outlnCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>);
inline void _1a4841e73_panicCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>);
inline void _1a48421e8_assertCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>);
inline void _1a484246d_errorCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>);
inline void _1a48426e3_makeCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>);
inline void _1a4842968_appendCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>);
inline void _1a4842bdd_lenCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>);
inline void _1a4842e63_capCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>);
inline void _1a48431d8_cloneCall(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>);
inline void _1a484345d_sizeof(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c472a_SizeofExprModel>);
inline void _1a48436d3_alignof(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c4917_AlignofExprModel>);
inline void _1a4843958_integratedToStr(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>);
inline void _1a4843bcd_free(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c51ba_FreeExprModel>);
inline void _1a4843e53_backendEmit(_1a483d117_exprDeadCode*, jule::Ptr<_1a31c4ecd_BackendEmitExprModel>);
inline void _1a48441c8_optimize(_1a483d117_exprDeadCode*, jule::Any&);
struct _1a483d117_exprDeadCode {
	jule::Ptr<_1a48391ac_scopeDeadCode> _field_s = jule::Ptr<_1a48391ac_scopeDeadCode>();
	

	_1a483d117_exprDeadCode(void) = default;

	inline bool operator==(_1a483d117_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a483d117_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c8396388_UnsafeBinopExprModel {
	jule::Ptr<_1a31c00e9_BinopExprModel> _field_Node = jule::Ptr<_1a31c00e9_BinopExprModel>();
	

	_1c8396388_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1c8396388_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c8396388_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c846418c_UnsafeIndexingExprModel {
	jule::Ptr<_1a31c1150_IndexingExprModel> _field_Node = jule::Ptr<_1a31c1150_IndexingExprModel>();
	

	_1c846418c_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1c846418c_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c846418c_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c84705e9_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_1a31c0e63_SliceExprModel> _field_Elems = jule::Ptr<_1a31c0e63_SliceExprModel>();
	

	_1c84705e9_PushToSliceExprModel(void) = default;

	inline bool operator==(_1c84705e9_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c84705e9_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c8436a66_MutSlicingExprModel {
	jule::Ptr<_1ba1dbeab_Token> _field_Token = jule::Ptr<_1ba1dbeab_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1c8436a66_MutSlicingExprModel(void) = default;

	inline bool operator==(_1c8436a66_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c8436a66_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c8424180_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_1c8424180_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1c8424180_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c8424180_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c842436c_scopeOptimizer> static__1c83953ed_new(jule::Ptr<_1a3e21344_Scope>);
inline void _1c839b35a_setCurrentStmt(_1c842436c_scopeOptimizer*, jule::Any);
inline void _1c83c76e9_optimizeData(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3ea2e75_Data>);
inline void _1c841ad03_optimizeVar(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e59e4e_Var>);
inline void _1c83c74b8_optimizeConditional(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e2190a_Conditional>);
inline void _1c84465e2_buildDefaultConstatTrueCase(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e236a9_Case>, jule::I64&, jule::Ptr<_1a3e23159_Match>&);
inline void _1c844b51a_optimizeMatch(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e23159_Match>);
inline void _1c844be11_optimizeRangeIter(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e22103_RangeIter>);
inline void _1c844e61c_optimizeWhileIter(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e21cd4_WhileIter>);
inline jule::Bool _1c8453aa5_substr(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e22c80_Assign>);
inline jule::Bool _1c8471793_strInsert(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e22c80_Assign>);
inline jule::Bool _1a3015a00_strAssign(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e22c80_Assign>);
inline void _1a30272c5_optimizeAssign(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e22c80_Assign>);
inline void _1a303b54d_optimizeMultiAssign(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e22e6c_MultiAssign>);
inline void _1a306b281_optimizeRet(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e23bb5_RetSt>);
inline void _1c83d05c0_optimizeStmt(_1c842436c_scopeOptimizer*, jule::Any);
inline void _1c8400832_optimizeChild(_1c842436c_scopeOptimizer*, jule::Ptr<_1a3e21344_Scope>);
inline void _1c8394034_optimize(_1c842436c_scopeOptimizer*);
struct _1c842436c_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1a3e21344_Scope> _field_scope = jule::Ptr<_1a3e21344_Scope>();
	

	_1c842436c_scopeOptimizer(void) = default;

	inline bool operator==(_1c842436c_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c842436c_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1c8435603_optimize(jule::Any&);
inline jule::Bool _1c8395a4c_strCond(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c00e9_BinopExprModel>);
inline void _1c83be46b_binary(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c00e9_BinopExprModel>);
inline void _1c8407d01_unary(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c02d6_UnaryExprModel>);
inline void _1c83e4e31_structureLit(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c06b0_StructLitExprModel>);
inline void _1c8402a65_allocStructure(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c089c_AllocStructLitExprModel>);
inline void _1c8405062_casting(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c0a89_CastingExprModel>);
inline void _1a40974dc_args(_1a4097047_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1a409761e_scope(_1a4097047_exprOptimizer*, jule::Ptr<_1a3e21344_Scope>&);
inline void _1a4097751_funcCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c0c76_FnCallExprModel>);
inline void _1a4097883_slice(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c0e63_SliceExprModel>);
inline void _1a40979b5_array(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c23d7_ArrayExprModel>);
inline void _1a4097ae7_indexing(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c1150_IndexingExprModel>);
inline void _1a4097c29_anonFunc(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c133c_AnonFnExprModel>);
inline void _1a4097d5b_mapExpr(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c1716_MapExprModel>);
inline void _1a4097e8d_slicing(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c1903_SlicingExprModel>);
inline void _1a40980c0_traitSub(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>);
inline void _1a4098202_structureSub(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c200d_StructSubIdentExprModel>);
inline void _1a4098334_commonSub(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>);
inline void _1a4098466_tuple(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c299d_TupleExprModel>);
inline void _1a4098598_newCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>);
inline void _1a40986ca_outCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>);
inline void _1a409880c_outlnCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>);
inline void _1a409893e_panicCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>);
inline void _1a4098a71_assertCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>);
inline void _1a4098ba3_errorCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>);
inline void _1a4098cd5_makeCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>);
inline void _1a4098e17_appendCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>);
inline void _1a4099049_lenCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>);
inline void _1a409917b_capCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>);
inline void _1a40992ad_cloneCall(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>);
inline void _1a40993e0_sizeof(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c472a_SizeofExprModel>);
inline void _1a4099522_alignof(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c4917_AlignofExprModel>);
inline void _1a4099654_integratedToStr(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>);
inline void _1a4099786_free(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c51ba_FreeExprModel>);
inline void _1a40998b8_backendEmit(_1a4097047_exprOptimizer*, jule::Ptr<_1a31c4ecd_BackendEmitExprModel>);
inline void _1a40999ea_do(_1a4097047_exprOptimizer*);
struct _1a4097047_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1a4097047_exprOptimizer(void) = default;

	inline bool operator==(_1a4097047_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a4097047_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a480a337_Optimizer> static__1a475b4db_New(jule::Ptr<_1a4380b6b_IR>&);
inline void _1a475bdd2_optimizeGlobal(_1a480a337_Optimizer*, jule::Ptr<_1a3e59e4e_Var>&);
inline void _1a476a53e_optimizeFunction(_1a480a337_Optimizer*, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a473d644_optimizeStruct(_1a480a337_Optimizer*, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a47996b1_optimizeGlobals(_1a480a337_Optimizer*, jule::Ptr<_1a3e37008_Package>&);
inline void _1a4799a68_optimizeFunctions(_1a480a337_Optimizer*, jule::Ptr<_1a3e37008_Package>&);
inline void _1a479b4e8_optimizeStructs(_1a480a337_Optimizer*, jule::Ptr<_1a3e37008_Package>&);
inline void _1a47a280c_optimizePackage(_1a480a337_Optimizer*, jule::Ptr<_1a3e37008_Package>&);
inline void _1a47a9182_Optimize(_1a480a337_Optimizer*);
struct _1a480a337_Optimizer {
	jule::Ptr<_1a4380b6b_IR> _field_ir = jule::Ptr<_1a4380b6b_IR>();
	

	_1a480a337_Optimizer(void) = default;

	inline bool operator==(_1a480a337_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a480a337_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a4846d79_Reset(void);
inline void static__1a48480bc_Print(jule::Str, jule::Str);
struct _1a4847dd0_AnsiEscape {
	

	_1a4847dd0_AnsiEscape(void) = default;

	inline bool operator==(_1a4847dd0_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a4847dd0_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a4849772_LogFlat(_1b9db24ab_Log&);
inline void static__1a4849981_LogError(_1b9db24ab_Log&);
inline void static__1a4849b90_Log(_1b9db24ab_Log&);
inline void static__1a4849d9e_PrintLogs(jule::Slice<_1b9db24ab_Log>&);
struct _1a48494b9_Logger {
	

	_1a48494b9_Logger(void) = default;

	inline bool operator==(_1a48494b9_Logger _other) { return true; }

	inline bool operator!=(_1a48494b9_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a4e6a0d4_Unix(_1a4e69c2c_AbsTime*);
struct _1a4e69c2c_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1a4e69c2c_AbsTime(void) = default;

	inline bool operator==(_1a4e69c2c_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a4e69c2c_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a4e6a3c0_Time static__1a4e6a766_Unix(jule::U64);
inline _1a4e6a3c0_Time static__1a4e6a964_Now(void);
inline jule::U64 _1a4e6adb5_Unix(_1a4e6a3c0_Time*);
inline jule::U64 _1a4e6b129_Day(_1a4e6a3c0_Time*);
inline jule::U64 _1a4e6b38d_Month(_1a4e6a3c0_Time*);
inline jule::U64 _1a4e6b602_Year(_1a4e6a3c0_Time*);
inline jule::U64 _1a4e6b866_Second(_1a4e6a3c0_Time*);
inline jule::U64 _1a4e6baca_Minute(_1a4e6a3c0_Time*);
inline jule::U64 _1a4e6bd3e_Hour(_1a4e6a3c0_Time*);
inline _1a4e69c2c_AbsTime _1a4e6c0a3_Abs(_1a4e6a3c0_Time*);
struct _1a4e6a3c0_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1a4e6a3c0_Time(void) = default;

	inline bool operator==(_1a4e6a3c0_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a4e6a3c0_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4db554b_scopeCoder> static__1a4db5b23_new(jule::Ptr<_1a4e72619_ObjectCoder>&);
inline void _1a4db5d98_rangeIndexIter(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22103_RangeIter>&);
inline void _1a4db611d_rangeHashmapIter(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22103_RangeIter>&);
inline void _1a4db6393_ifCase(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e21531_If>);
inline void _1a4db6618_conditional(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e2190a_Conditional>);
inline void _1a4db688d_infIter(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e21ae7_InfIter>);
inline void _1a4db6b13_whileIter(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e21cd4_WhileIter>);
inline void _1a4db6d88_rangeIter(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22103_RangeIter>);
inline void _1a4db710d_cont(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e222e0_ContSt>);
inline void _1a4db7383_label(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e226b9_Label>);
inline void _1a4db7608_gotoSt(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e228a6_GotoSt>);
inline void _1a4db787d_postfix(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22a93_Postfix>);
inline void _1a4db7b03_assign(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22c80_Assign>);
inline void _1a4db7d78_mapLookupAssign(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22e6c_MultiAssign>&);
inline void _1a4db80ed_multiAssign(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e22e6c_MultiAssign>);
inline jule::Fn<void(void)> _1a4db840b_matchExpr(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23159_Match>);
inline void _1a4db872a_case(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23159_Match>, jule::Ptr<_1a3e236a9_Case>);
inline void _1a4db89a0_matchSt(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23159_Match>);
inline void _1a4db8c25_fallSt(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e239c8_FallSt>);
inline void _1a4db8e9a_breakSt(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e224cc_BreakSt>);
inline void _1a4db9220_retWithVars(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23bb5_RetSt>);
inline void _1a4db9495_retTuple(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23bb5_RetSt>);
inline void _1a4db971a_retWithExprs(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23bb5_RetSt>);
inline void _1a4db9990_retSt(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e23bb5_RetSt>);
inline void _1a4db9e8a_var(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e59e4e_Var>);
inline void _1a4dba210_st(jule::Ptr<_1a4db554b_scopeCoder>, jule::Any);
inline void _1a4dba485_scopeStmts(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e21344_Scope>&);
inline void _1a4dba70a_scope(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a3e21344_Scope>);
inline void _1a4dba980_funcScope(jule::Ptr<_1a4db554b_scopeCoder>, jule::Ptr<_1a31ca874_FnIns>);
struct _1a4db554b_scopeCoder {
	jule::Ptr<_1a4e72619_ObjectCoder> _field_oc = jule::Ptr<_1a4e72619_ObjectCoder>();
	

	_1a4db554b_scopeCoder(void) = default;

	inline bool operator==(_1a4db554b_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a4db554b_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4dbd2bd_exprCoder> static__1a4dbd6b9_new(jule::Ptr<_1a4e72619_ObjectCoder>&);
inline void _1a4dbd93e_string(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31618e8_Const>&);
inline void _1a4dbdbb4_boolean(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31618e8_Const>&);
inline void _1a4dbdd90_nilLit(jule::Ptr<_1a4dbd2bd_exprCoder>);
inline jule::Bool _1a4dbe19d_ftoaSpecialCases(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::F64&);
inline void _1a4dbe423_float32(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31618e8_Const>&);
inline void _1a4dbe698_float64(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31618e8_Const>&);
inline void _1a4dbe9b7_constant(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31618e8_Const>, jule::Bool);
inline void _1a4dbed80_divByZeroBinary(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1ba1dbeab_Token>&, jule::Ptr<_1a31bee0c_OperandExprModel>&, jule::Ptr<_1a31bee0c_OperandExprModel>&);
inline void _1a4dc0105_unsafeBinary(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c00e9_BinopExprModel>);
inline void _1a4dc037a_binary(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c00e9_BinopExprModel>);
inline void _1a4dc0600_var(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a3e59e4e_Var>);
inline void _1a4dc0875_structureIns(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a312ad46_StructIns>);
inline void _1a4dc0aea_unary(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c02d6_UnaryExprModel>);
inline void _1a4dc0d70_structureLit(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c06b0_StructLitExprModel>);
inline void _1a4dc10e5_allocStructure(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c089c_AllocStructLitExprModel>);
inline void _1a4dc136a_casting(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c0a89_CastingExprModel>);
inline void _1a4dc15e0_args(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Slice<jule::Any>);
inline void _1a4dc1865_modelForCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Any);
inline void _1a4dc1ada_pushCallInf(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c0c76_FnCallExprModel>&);
inline jule::Bool _1a4dc1de8_isWrapped(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c0c76_FnCallExprModel>&);
inline void _1a4dc216d_pureFuncCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c0c76_FnCallExprModel>&);
inline void _1a4dc23e3_funcCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c0c76_FnCallExprModel>);
inline void _1a4dc2668_slice(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c0e63_SliceExprModel>);
inline void _1a4dc28dd_indexing(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c1150_IndexingExprModel>);
inline void _1a4dc2b63_unsafeIndexing(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1c846418c_UnsafeIndexingExprModel>);
inline void _1a4dc2dd8_anonFunc(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c133c_AnonFnExprModel>);
inline void _1a4dc315d_mapExpr(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c1716_MapExprModel>);
inline void _1a4dc33d3_slicing(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c1903_SlicingExprModel>);
inline void _1a4dc3658_traitSub(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>);
inline void _1a4dc38cd_structureSub(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c200d_StructSubIdentExprModel>);
inline void _1a4dc3b53_commonIdent(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c25c4_CommonIdentExprModel>);
inline void _1a4dc3dc8_commonSub(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>);
inline void _1a4dc414d_array(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c23d7_ArrayExprModel>);
inline void _1a4dc43c3_funcInsCommon(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31ca874_FnIns>);
inline void _1a4dc4648_funcIns(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31ca874_FnIns>);
inline void _1a4dc48bd_tuple(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c299d_TupleExprModel>);
inline void _1a4dc4b43_newCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>);
inline void _1a4dc4db8_outCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>);
inline void _1a4dc513d_outlnCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>);
inline void _1a4dc53b3_panicCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>);
inline void _1a4dc5638_assertCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>);
inline void _1a4dc58ad_errorCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>);
inline void _1a4dc5b33_copyCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c1ccc_BuiltinCopyCallExprModel>);
inline void _1a4dc5da8_lenCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>);
inline void _1a4dc612d_capCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>);
inline void _1a4dc63a3_makeCallSlice(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>&);
inline void _1a4dc6628_makeCallStr(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>&);
inline void _1a4dc689d_makeCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>);
inline void _1a4dc6b23_pushToSlice(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1c84705e9_PushToSliceExprModel>);
inline void _1a4dc6d98_appendCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>);
inline void _1a4dc711d_cloneCall(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>);
inline void _1a4dc7393_sizeof(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c472a_SizeofExprModel>);
inline void _1a4dc7618_alignof(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c4917_AlignofExprModel>);
inline jule::Str _1a4dc7926_runeLit(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c4b04_RuneExprModel>);
inline void _1a4dc7b9b_structureStatic(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c21ea_StructStaticIdentExprModel>);
inline void _1a4dc7e21_integratedToStr(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>);
inline void _1a4dc8196_backendEmit(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c4ecd_BackendEmitExprModel>);
inline void _1a4dc841b_free(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a31c51ba_FreeExprModel>);
inline void _1a4dc8691_mutSlicing(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1c8436a66_MutSlicingExprModel>);
inline void _1a4dc8916_strInsertBegin(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1c8424180_StrInsertBeginExprModel>);
inline void _1a4dc8b8b_model(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Any);
inline void _1a4dc8e11_expr(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Any);
inline void _1a4dc9186_val(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a3ea3eed_Value>);
inline void _1a4dc940b_initExpr(jule::Ptr<_1a4dbd2bd_exprCoder>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a4dbd2bd_exprCoder {
	jule::Ptr<_1a4e72619_ObjectCoder> _field_oc = jule::Ptr<_1a4e72619_ObjectCoder>();
	

	_1a4dbd2bd_exprCoder(void) = default;

	inline bool operator==(_1a4dbd2bd_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a4dbd2bd_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a4dcbc16_cloneFuncDecl(jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Str static__1a4dcbead_cloneFuncDef(jule::Ptr<_1a30e9b8e_Struct>&);
struct _1a4dcb919_deriveCoder {
	

	_1a4dcb919_deriveCoder(void) = default;

	inline bool operator==(_1a4dcb919_deriveCoder _other) { return true; }

	inline bool operator!=(_1a4dcb919_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4dccd8d_TestCoder> static__1a4dcd311_New(jule::Ptr<_1a4e72619_ObjectCoder>&);
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a4dcd575_findTestingPackage(jule::Ptr<_1a4dccd8d_TestCoder>);
inline void _1a4dcd7ea_appendTest(jule::Ptr<_1a4dccd8d_TestCoder>, jule::Ptr<_1a31ca874_FnIns>);
inline void _1a4dcda70_appendPackageTests(jule::Ptr<_1a4dccd8d_TestCoder>, jule::Ptr<_1a3e37008_Package>&);
inline jule::Bool _1a4dcdcd4_readyTestingPackage(jule::Ptr<_1a4dccd8d_TestCoder>);
inline void _1a4dcdeb0_callTmReset(jule::Ptr<_1a4dccd8d_TestCoder>);
inline void _1a4dce18b_callTmFailed(jule::Ptr<_1a4dccd8d_TestCoder>);
inline void _1a4dce367_callTmSkipped(jule::Ptr<_1a4dccd8d_TestCoder>);
inline void _1a4dce543_Serialize(jule::Ptr<_1a4dccd8d_TestCoder>);
struct _1a4dccd8d_TestCoder {
	jule::Ptr<_1a312ad46_StructIns> _field_t = jule::Ptr<_1a312ad46_StructIns>();
	jule::Ptr<_1a31c7bc3_Fn> _field_tmReset = jule::Ptr<_1a31c7bc3_Fn>();
	jule::Ptr<_1a31c7bc3_Fn> _field_tmFailed = jule::Ptr<_1a31c7bc3_Fn>();
	jule::Ptr<_1a31c7bc3_Fn> _field_tmSkipped = jule::Ptr<_1a31c7bc3_Fn>();
	jule::Ptr<_1a4e72619_ObjectCoder> _field_oc = jule::Ptr<_1a4e72619_ObjectCoder>();
	

	_1a4dccd8d_TestCoder(void) = default;

	inline bool operator==(_1a4dccd8d_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a4dccd8d_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a4dd09ea_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1a4dd0dd5_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1a4dd117c_func(jule::Ptr<_1a31c7bc3_Fn>&);
inline jule::Str static__1a4dd1424_funcIns(jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Str static__1a4dd16bb_traitDecl(jule::Ptr<_1a31d9a81_Trait>);
inline jule::Str static__1a4dd1963_param(jule::Ptr<_1a31c6386_Param>&);
inline jule::Str static__1a4dd1c0a_structure(jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Str static__1a4dd1ea2_structureIns(jule::Ptr<_1a312ad46_StructIns>&);
inline jule::Str static__1a4dd2249_field(jule::Ptr<_1a30dc038_Field>&);
inline jule::Str static__1a4dd24e1_var(jule::Ptr<_1a3e59e4e_Var>);
inline jule::Str static__1a4dd2788_iterBegin(jule::Uintptr);
inline jule::Str static__1a4dd2a30_iterEnd(jule::Uintptr);
inline jule::Str static__1a4dd2cc7_iterNext(jule::Uintptr);
inline jule::Str static__1a4dd306e_label(jule::Str&);
inline jule::Str static__1a4dd3316_matchEnd(jule::Uintptr);
inline jule::Str static__1a4dd35ad_caseBegin(jule::Uintptr);
struct _1a4dd04de_identCoder {
	

	_1a4dd04de_identCoder(void) = default;

	inline bool operator==(_1a4dd04de_identCoder _other) { return true; }

	inline bool operator!=(_1a4dd04de_identCoder _other) { return !this->operator==(_other); }


};
struct _1a4dd833d_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1a4dd833d_SerializationInfo(void) = default;

	inline bool operator==(_1a4dd833d_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a4dd833d_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a4e7242c_traitHash {
	jule::Ptr<_1a31d9a81_Trait> _field_t = jule::Ptr<_1a31d9a81_Trait>();
	jule::Ptr<_1a312ad46_StructIns> _field_s = jule::Ptr<_1a312ad46_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1a4e7242c_traitHash(void) = default;

	inline bool operator==(_1a4e7242c_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a4e7242c_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a4e76893_Str(_1a4e765c9_customType*);
inline jule::Bool _1a4e76ba1_Equals(jule::Ptr<_1a4e765c9_customType>, jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a4e765c9_customType {
	jule::Str _field_kind = jule::Str();
	

	_1a4e765c9_customType(void) = default;

	inline bool operator==(_1a4e765c9_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a4e765c9_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a4e773ee_toType(jule::Str);
inline jule::Str static__1a4e77696_prim(jule::Ptr<_1a3ed36d1_Prim>);
inline jule::Str static__1a4e7793d_tuple(jule::Ptr<_1a3ed8450_Tuple>);
inline jule::Str static__1a4e77bd5_asSptr(jule::Str);
inline jule::Str static__1a4e77e7c_asPtr(jule::Str);
inline jule::Str static__1a4e78224_sptr(jule::Ptr<_1a3ed6e65_Sptr>);
inline jule::Str static__1a4e784bb_ptr(jule::Ptr<_1a3eda4c9_Ptr>);
inline jule::Str static__1a4e78763_enumDecl(jule::Ptr<_1a31dbbc6_Enum>);
inline jule::Str static__1a4e78a0a_typeEnumDecl(jule::Ptr<_1a31dd2c1_TypeEnum>);
inline jule::Str static__1a4e78ca2_asSlice(jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Str static__1a4e79049_slice(jule::Ptr<_1a3ed78c2_Slc>);
inline jule::Str static__1a4e792e1_mapType(jule::Ptr<_1a3ed8e78_Map>);
inline jule::Str static__1a4e79588_traitIdent(jule::Str);
inline jule::Str static__1a4e79830_traitDecl(jule::Ptr<_1a31d9a81_Trait>);
inline jule::Str static__1a4e79ac7_structure(jule::Ptr<_1a30e9b8e_Struct>);
inline jule::Str static__1a4e79d6e_structureIns(jule::Ptr<_1a312ad46_StructIns>);
inline jule::Str static__1a4e7a116_array(jule::Ptr<_1a3ed9a6c_Arr>);
inline jule::Str static__1a4e7a655_paramIns(jule::Ptr<_1a31c99a5_ParamIns>&);
inline jule::Str static__1a4e7ab94_funcInsResult(jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Str static__1a4e7ae3b_anonFunc(jule::Ptr<_1a31ca874_FnIns>);
inline jule::Str static__1a4e7b1d3_func(jule::Ptr<_1a31ca874_FnIns>);
inline jule::Str static__1a4e7b47a_kind(jule::Ptr<_1a3ecdc09_TypeKind>);
struct _1a4e76dc1_typeCoder {
	

	_1a4e76dc1_typeCoder(void) = default;

	inline bool operator==(_1a4e76dc1_typeCoder _other) { return true; }

	inline bool operator!=(_1a4e76dc1_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a7730d70_Name(_1a795951b_Flag*);
inline jule::Str _1a7730ea2_What(_1a795951b_Flag*);
inline void _1a795994a_Reset(_1a795951b_Flag*);
inline jule::I32 _1a7959a7c_Short(_1a795951b_Flag*);
struct _1a795951b_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_1a795951b_Flag(void) = default;

	inline bool operator==(_1a795951b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a795951b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a795cd7c_Name(_1a795d366_Flag*);
inline jule::Str _1a795d652_What(_1a795d366_Flag*);
inline void _1a795d784_Reset(_1a795d366_Flag*);
inline jule::I32 _1a795d8b6_Short(_1a795d366_Flag*);
struct _1a795d366_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_1a795d366_Flag(void) = default;

	inline bool operator==(_1a795d366_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a795d366_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a79619b8_Name(_1a7961ea2_Flag*);
inline jule::Str _1a796228d_What(_1a7961ea2_Flag*);
inline void _1a79623c0_Reset(_1a7961ea2_Flag*);
inline jule::I32 _1a7962502_Short(_1a7961ea2_Flag*);
struct _1a7961ea2_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_1a7961ea2_Flag(void) = default;

	inline bool operator==(_1a7961ea2_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a7961ea2_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a7965648_Name(_1a7965b32_Flag*);
inline jule::Str _1a7965e1d_What(_1a7965b32_Flag*);
inline void _1a7966050_Reset(_1a7965b32_Flag*);
inline jule::I32 _1a7966182_Short(_1a7965b32_Flag*);
struct _1a7965b32_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_1a7965b32_Flag(void) = default;

	inline bool operator==(_1a7965b32_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a7965b32_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a7969284_Name(_1a796976d_Flag*);
inline jule::Str _1a7969a59_What(_1a796976d_Flag*);
inline void _1a7969b8b_Reset(_1a796976d_Flag*);
inline jule::I32 _1a7969cbd_Short(_1a796976d_Flag*);
struct _1a796976d_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_1a796976d_Flag(void) = default;

	inline bool operator==(_1a796976d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a796976d_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4eac368_FlagSet> static__1a4eac654_New(void);
inline jule::Trait<_1a4cb984b_CommonFlag> _1a4eacad8_FindFlag(_1a4eac368_FlagSet*, jule::Str);
inline jule::Trait<_1a4cb984b_CommonFlag> _1a4eacde6_FindFlagShort(_1a4eac368_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a4cb984b_CommonFlag>> _1a4ead15a_Flags(_1a4eac368_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a4ead468_Parse(_1a4eac368_FlagSet*, jule::Slice<jule::Str>);
inline void _1a4ead644_Reset(_1a4eac368_FlagSet*);
inline jule::Ptr<_1a796976d_Flag> _1a79e0e87_addFlagCommon(_1a4eac368_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1a7965b32_Flag> _1a79e9de7_addFlagCommon(_1a4eac368_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1a79de23d_AddVar(_1a4eac368_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1a79e81d1_AddVar(_1a4eac368_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a4eac368_FlagSet {
	jule::Slice<jule::Trait<_1a4cb984b_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_1a4cb984b_CommonFlag>>();
	

	_1a4eac368_FlagSet(void) = default;

	inline bool operator==(_1a4eac368_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a4eac368_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1a4380b6b_IR>,jule::Slice<_1b9db24ab_Log>> static__1ba919ad4_Build(jule::Str, jule::I64);
inline void _1c78dc36e_appendStructs(_1a4380b6b_IR*, jule::Ptr<_1a3e37008_Package>&, jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>&);
inline jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _1c7ddb9c2_GetAllStructures(_1a4380b6b_IR*);
inline void _1c828959a_appendGlobals(_1a4380b6b_IR*, jule::Ptr<_1a3e37008_Package>&, jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&);
inline jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _1a435bd23_GetAllGlobals(_1a4380b6b_IR*);
inline void _1a4370aa1_Order(_1a4380b6b_IR*);
struct _1a4380b6b_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_1a3e37008_Package> _field_Main = jule::Ptr<_1a3e37008_Package>();
	jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>>();
	_1c8271c69_OrderedDefines _field_Ordered = _1c8271c69_OrderedDefines();
	

	_1a4380b6b_IR(void) = default;

	inline bool operator==(_1a4380b6b_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_1a4380b6b_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1a30eb872_Str(_1a312ad46_StructIns*);
inline jule::Bool _1a30ec9d8_Equals(jule::Ptr<_1a312ad46_StructIns>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a30eed3c_Same(_1a312ad46_StructIns*, jule::Ptr<_1a312ad46_StructIns>);
inline jule::Ptr<_1a31c7bc3_Fn> _1a310115c_FindMethod(_1a312ad46_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3102306_FieldIns> _1a3103b76_FindField(_1a312ad46_StructIns*, jule::Str);
inline jule::Ptr<_1a3e59e4e_Var> _1a30ca169_FindStatic(_1a312ad46_StructIns*, jule::Str);
struct _1a312ad46_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_1a30e9b8e_Struct> _field_Decl = jule::Ptr<_1a30e9b8e_Struct>();
	jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>>();
	jule::Slice<jule::Ptr<_1a3102306_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_1a3102306_FieldIns>>();
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _field_Statics = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>();
	jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_1a31cd745_ReferenceStack> _field_Refers = jule::Ptr<_1a31cd745_ReferenceStack>();
	_1a30eb5b9_Operators _field_Operators = _1a30eb5b9_Operators();
	

	_1a312ad46_StructIns(void) = default;

	inline bool operator==(_1a312ad46_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_1a312ad46_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a48000b8_ObjectDeadCode> static__1a4800519_new(jule::Ptr<_1a4380b6b_IR>&);
inline jule::Bool _1a73cd06c_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a31d9a81_Trait>&);
inline jule::Bool _1a73d3490_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Bool _1a73dcbd6_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a312ad46_StructIns>&);
inline jule::Bool _1a73e28ab_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a3e59e4e_Var>&);
inline void _1a73d1658_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a31d9a81_Trait>);
inline void _1a73d7829_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a31ca874_FnIns>);
inline void _1a73dab4b_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a312ad46_StructIns>);
inline void _1a73e63b5_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a3e59e4e_Var>);
inline void _1a48310e9_setReferencesAsLive(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a31cd745_ReferenceStack>&);
inline void _1a483136e_inits(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a3e37008_Package>&);
inline void _1a48315e4_collectLivePackage(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a3e37008_Package>&);
inline void _1a483664e_collectLive(jule::Ptr<_1a48000b8_ObjectDeadCode>);
inline void _1a48368a2_removeDeadGlobals(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&);
inline void _1a4836b27_removeDeadFns(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>&);
inline void _1a4836d9c_removeDeadStructs(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>&);
inline void _1a4837122_removeDeadTraits(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a31d9a81_Trait>>&);
inline void _1a4837397_removeDeadsFile(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a3e9d14b_SymbolTable>&);
inline void _1a483761c_removeDeadsPackage(jule::Ptr<_1a48000b8_ObjectDeadCode>, jule::Ptr<_1a3e37008_Package>&);
inline void _1a48377e8_removeDeads(jule::Ptr<_1a48000b8_ObjectDeadCode>);
inline void _1a48379c4_elimanate(jule::Ptr<_1a48000b8_ObjectDeadCode>);
struct _1a48000b8_ObjectDeadCode {
	_1a47eecee_liveTable _field_live = _1a47eecee_liveTable();
	jule::Ptr<_1a4380b6b_IR> _field_ir = jule::Ptr<_1a4380b6b_IR>();
	

	_1a48000b8_ObjectDeadCode(void) = default;

	inline bool operator==(_1a48000b8_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a48000b8_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4e72619_ObjectCoder> static__1a4e127da_New(jule::Ptr<_1a4380b6b_IR>&, _1a4dd833d_SerializationInfo);
inline void _1a4e16e3d_write(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Str);
inline void _1a4e49dd8_addIndent(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e4a7bd_doneIndent(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4dd7815_indent(jule::Ptr<_1a4e72619_ObjectCoder>);
inline jule::I64 _1a4e07c64_findTypeOffset(_1a4e72619_ObjectCoder*, jule::Ptr<_1a31d9a81_Trait>, jule::Ptr<_1a3ecdc09_TypeKind>);
inline void _1a4e47468_locInfo(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1ba1dbeab_Token>&);
inline void _1a4e47996_head(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4dd852a_links(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e0b592_prepareStructures(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e133ce_iterPackages(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>);
inline void _1a4e13962_buildTraitMap(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e14831_traitDecls(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e14ee6_structurePlainDecl(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a4e156ab_structurePlainDecls(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e50c68_fieldDecl(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a3102306_FieldIns>&);
inline void _1a4e15d71_structureDestructor(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e49943_structureDeriveDefsDecls(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e0c95b_structureOperatorEq(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Str&, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e72bad_structureOperatorNotEq(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Str&, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e72ce0_structureOperator(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Str&, jule::Ptr<_1a31ca874_FnIns>&, jule::Str);
inline void _1a4e72e22_structureOperators(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e73054_structureInsDecl(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e73186_structureDecl(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a4e732b8_structureDecls(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e733ea_paramsDecls(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>&);
inline void _1a4e7352c_funcHead(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a31ca874_FnIns>&, jule::Bool);
inline void _1a4e7365e_funcDecl(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a31c7bc3_Fn>&, jule::Bool);
inline void _1a4e73791_funcDecls(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e738c3_traitDataTypes(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e73a05_paramIns(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a31c99a5_ParamIns>&);
inline void _1a4e73b37_paramsIns(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>&);
inline void _1a4e73c69_varInitExpr(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a3e59e4e_Var>&, jule::Fn<void(void)>);
inline void _1a4e73d9b_var(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a3e59e4e_Var>);
inline void _1a4e73ecd_func(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a31c7bc3_Fn>&);
inline void _1a4e74110_traitWrappers(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e74242_traitDatas(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e74374_globals(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e744a6_decls(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e745d8_structureMethods(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e7471a_structureDeriveDefs(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e7484c_structureOstream(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e7497e_structureIns(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a312ad46_StructIns>&);
inline void _1a4e74ab1_structure(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a30e9b8e_Struct>&);
inline void _1a4e74be3_structures(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e74d25_funcs(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e74e57_pushInit(jule::Ptr<_1a4e72619_ObjectCoder>, jule::Ptr<_1a3e37008_Package>&);
inline void _1a4e75089_initCaller(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e751bb_end(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e752ed_serializeHead(jule::Ptr<_1a4e72619_ObjectCoder>);
inline void _1a4e75430_Serialize(jule::Ptr<_1a4e72619_ObjectCoder>);
struct _1a4e72619_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_1a4380b6b_IR> _field_ir = jule::Ptr<_1a4380b6b_IR>();
	_1a4dd833d_SerializationInfo _field_info = _1a4dd833d_SerializationInfo();
	jule::Slice<jule::Ptr<_1a4e7242c_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1a4e7242c_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1a4dbd2bd_exprCoder> _field_ec = jule::Ptr<_1a4dbd2bd_exprCoder>();
	jule::Ptr<_1a4db554b_scopeCoder> _field_sc = jule::Ptr<_1a4db554b_scopeCoder>();
	

	_1a4e72619_ObjectCoder(void) = default;

	inline bool operator==(_1a4e72619_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1a4e72619_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1a797e057_parseInteger(_1a4eaea41_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1a798733a_parseInteger(_1a4eaea41_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1a4eb0338_getData(_1a4eaea41_argParser*);
inline jule::VoidExceptional _1a4eb057a_processFlag(_1a4eaea41_argParser*, jule::Trait<_1a4cb984b_CommonFlag>&);
inline jule::VoidExceptional _1a4eb0800_singleDash(_1a4eaea41_argParser*, jule::Str&);
inline jule::VoidExceptional _1a4eb0a75_doubleDash(_1a4eaea41_argParser*, jule::Str&);
inline jule::VoidExceptional _1a4eb0c51_tryArg(_1a4eaea41_argParser*);
inline jule::VoidExceptional _1a4eb0e2c_parse(_1a4eaea41_argParser*);
struct _1a4eaea41_argParser {
	_1a4eac368_FlagSet _field_set = _1a4eac368_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1a4eaea41_argParser(void) = default;

	inline bool operator==(_1a4eaea41_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a4eaea41_argParser _other) { return !this->operator==(_other); }


};
inline void _1d37066ee_Free(void*);
inline jule::Str _1d3730d88_BytePtrToStr(jule::U8*);
inline jule::I64 _1d295a844_GetLastErrno(void);
inline jule::I64 _1d3737d6d_Stat(jule::U8*, struct stat*);
inline jule::I64 _1d3738258_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1d3738599_Getcwd(jule::U8*, jule::U64);
inline DIR* _1d3738a72_Opendir(jule::U8*);
inline struct dirent* _1d3738d19_Readdir(DIR*);
inline jule::I64 _1d37390b1_Closedir(DIR*);
inline jule::I64 _1d3739941_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _1d3739bd8_Rmdir(jule::U8*);
inline jule::I64 _1d3739e80_Unlink(jule::U8*);
inline jule::I64 _1d3740c99_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1d3741184_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1d3741508_Close(jule::I64);
inline jule::I64 _1d37418e3_Write(jule::I64, void*, jule::U64);
inline void _1d3741b02_Exit(jule::I64);
inline jule::I64 _1d388199a_getLastOsError(void);
inline jule::Slice<jule::Str> _1d38a82a7_Args(void);
inline jule::Exceptional<jule::Str> _1d38a872a_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1d38a90dd_getwd(void);
inline jule::Bool _1b9bc0709_IsLetter(jule::I32);
inline jule::Bool _1b9c47929_is16(jule::Slice<_1b9c45d67_Range16>, jule::U16);
inline jule::Bool _1b9c47c6a_is32(jule::Slice<_1b9c462da_Range32>, jule::U32);
inline jule::Bool _1b9c4850c_isExcludingLatin(jule::Ptr<_1b9c4675d_RangeTable>, jule::I32);
inline jule::Bool _1b9c487a4_IsUpper(jule::I32);
inline std::tuple<jule::I32,jule::I64> _1b9d0b2a1_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1b9d0b5c0_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _1b9d0b867_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1b9d0c615_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1b9d0c956_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1b9d0ce95_RuneCountStr(jule::Str);
inline jule::Bool _1b9d0d23c_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _1b9d2ac2c_Stobs(jule::Str&);
inline void _1b9d2b37b_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _1b9d2a15a_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1b9d2b788_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _1b9d1351c_Repeat(jule::Str, jule::I64);
inline jule::Bool _1b9d0e925_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1b9d2b8ed_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1b9d2baa7_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1b9d2bdb5_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1b9d2c2a0_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1b9d2cadb_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1b9d2ce2c_FindLast(jule::Str, jule::Str);
inline jule::I64 _1b9d2e1c5_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1b9d2ea11_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1b9d30825_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1b9d31051_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1b9d31392_Contains(jule::Str, jule::Str);
inline jule::Bool _1b9d31d65_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1b9d321a6_Count(jule::Str, jule::Str);
inline jule::Str _1b9d3263a_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1b9d2e69d_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1b9d336e6_TrimLeft(jule::Str, jule::Str);
inline void _1b9d3399e_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1b9d34131_Trim(jule::Str, jule::Str);
inline jule::Str _1b9d34472_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1b9d35808_Clean(jule::Str);
inline jule::Str _1b9d35d8b_FromSlash(jule::Str);
inline jule::Str _1b9d361aa_Join(jule::Slice<jule::Str>);
inline jule::Str _1b9d36452_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1b9d366e9_Abs(jule::Str);
inline jule::Str _1b9d36991_Base(jule::Str);
inline jule::Str _1b9d36d15_Dir(jule::Str);
inline jule::Str _1b9d370ac_VolumeName(jule::Str);
inline jule::Bool _1b9d37e9d_IsPathSep(jule::U8);
inline jule::Bool _1b9d38289_IsAbs(jule::Str);
inline jule::I64 _1b9d38531_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1b9d38850_abs(jule::Str);
inline jule::Str _1b9d38ae7_join(jule::Slice<jule::Str>);
inline jule::I64 _1d2977ee3_getLastFsError(void);
inline jule::I64 _1b9e0c4b2_getLastProcessError(void);
inline jule::Slice<char*> _1b9e10718_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _1b9e10b69_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1b9e11054_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1b9e11b6a_Exit(jule::I64);
inline jule::Str _1b9e11d68_Executable(void);
inline jule::Bool _1b9da5889_IsStdHeaderPath(jule::Str);
inline jule::Bool _1b9da59bb_IsValidHeaderExt(jule::Str);
inline jule::Bool _1b9da5c1e_IsValidCppExt(jule::Str);
inline jule::Str _1b9db28eb_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1b9db2bd7_argToStr(jule::Any);
inline jule::I64 _1b9db2e7e_findNextFmt(jule::Str);
inline jule::Str _1b9db3314_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9db43d1_IsTopDirective(jule::Str);
inline jule::Bool _1b9db5811_IsWindows(jule::Str);
inline jule::Bool _1b9db5ab9_IsDarwin(jule::Str);
inline jule::Bool _1b9db5d61_IsLinux(jule::Str);
inline jule::Bool _1b9db6180_IsI386(jule::Str);
inline jule::Bool _1b9db6427_IsAmd64(jule::Str);
inline jule::Bool _1b9db66be_IsArm64(jule::Str);
inline jule::Bool _1b9db6966_IsUnix(jule::Str);
inline jule::Bool _1b9db6cda_Is32Bit(jule::Str);
inline jule::Bool _1b9db7082_Is64Bit(jule::Str);
inline void _1b9dc419e_init(void);
inline jule::Bool _1ba1dc6b5_IsUnaryOp(jule::Str);
inline jule::Bool _1ba1dc9a1_IsBinOp(jule::Str);
inline jule::Bool _1ba1dd067_IsStr(jule::Str);
inline jule::Bool _1ba1dd30e_IsRawStr(jule::Str);
inline jule::Bool _1ba1dd5a6_IsRune(jule::Str);
inline jule::Bool _1ba1ddbc2_IsBool(jule::Str);
inline jule::Bool _1ba1dde69_IsFloat(jule::Str);
inline jule::Bool _1ba1de211_IsNum(jule::Str);
inline jule::Bool _1ba1de750_IsIgnoreIdent(jule::Str);
inline jule::Bool _1ba1de9e7_IsAnonIdent(jule::Str);
inline jule::Bool _1ba1e0036_IsSpace(jule::I32);
inline jule::Bool _1ba1e0487_IsLetter(jule::I32);
inline jule::Bool _1ba1e09c6_IsDecimal(jule::U8);
inline jule::Bool _1ba1e0c6d_IsBinary(jule::U8);
inline jule::Bool _1ba1e1015_IsOctal(jule::U8);
inline jule::Bool _1ba1e12ac_IsHex(jule::U8);
inline jule::Bool _1ba1e1554_IsAssign(jule::U64);
inline jule::Bool _1ba1e17eb_IsPostfixOp(jule::Str);
inline jule::Bool _1ba1e1a93_IsAssignOp(jule::Str);
inline jule::Ptr<_1ba1e2346_File> _1ba1e3875_NewFileSet(jule::Str);
inline _1b9db24ab_Log _1ba1e51a1_makeErr(jule::I64, jule::I64, jule::Ptr<_1ba1e2346_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ba1e5536_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1ba1e5877_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e5c0c_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e604d_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e638e_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e66d0_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e6b31_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e6dc8_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1ba1e7170_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1ba1e74b1_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1ba1e7802_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1ba1e7b43_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1ba1e7e84_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1ba1e82c5_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e8726_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1ba1e89bd_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1ba1e8d0e_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ba1e90a6_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1ba1e9370_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1ba1e9529_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1ba1e97b0_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_1b9db24ab_Log> _1ba1ee2a9_Lex(jule::Ptr<_1ba1e2346_File>, jule::I64);
inline void _1a31be99a_lshiftUnsig(_1a31618e8_Const&, _1a31618e8_Const&);
inline void _1a31bec97_rshiftUnsig(_1a31618e8_Const&, _1a31618e8_Const&);
inline jule::I64 _1a3dcb62e_LeadingZeros64(jule::U64);
inline jule::I64 _1a3dcc685_TrailingZeros(jule::U64);
inline jule::I64 _1a3dcd07b_TrailingZeros32(jule::U32);
inline jule::I64 _1a3dcd323_TrailingZeros64(jule::U64);
inline jule::I64 _1a3dd3a98_Len32(jule::U32);
inline jule::I64 _1a3dd3d40_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a3dd4a00_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a3dd6183_Mul64(jule::U64, jule::U64);
inline jule::U32 _1a3d02a0b_F32Bits(jule::F32);
inline jule::F32 _1a3d02ce7_F32FromBits(jule::U32);
inline jule::U64 _1a3d0308e_F64Bits(jule::F64);
inline jule::F64 _1a3d033ad_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1a3d059ba_Frexp(jule::F64);
inline jule::F64 _1a3d632ec_NaN(void);
inline jule::Bool _1a3d64232_IsNaN(jule::F64);
inline jule::F64 _1a3d65bc3_Inf(jule::I64);
inline jule::Bool _1a3d6b536_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1a3d6cb42_normalize(jule::F64);
inline jule::F64 _1a3d7cd0b_Log(jule::F64);
inline jule::F64 _1a3d895dc_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a3ddeeb1_Modf(jule::F64);
inline jule::F64 _1a3de0775_Log2(jule::F64);
inline jule::Str _1a384e3b0_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a3863a67_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a38bb6e6_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a39e1b3a_floatInfo&);
inline jule::Slice<jule::U8> _1a38e30e1_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1a38e393d_decimalSlice, jule::I64, jule::U8);
inline void _1a38e52ad_roundShortest(_1a3e1c384_decimal&, jule::U64, jule::I64, _1a39e1b3a_floatInfo&);
inline jule::Slice<jule::U8> _1a39043aa_fmtE(jule::Slice<jule::U8>, jule::Bool, _1a38e393d_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1a3904a5e_fmtF(jule::Slice<jule::U8>, jule::Bool, _1a38e393d_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1a39059e9_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1a39e1b3a_floatInfo&);
inline jule::Slice<jule::U8> _1a39be40e_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a39e1b3a_floatInfo&);
inline jule::I64 _1a39e2b91_min(jule::I64, jule::I64);
inline jule::I64 _1a39e8070_max(jule::I64, jule::I64);
inline jule::U8 _1a3a53ce0_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1a3a73c33_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1a3a962c7_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1a3b27cb5_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1a3840417_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a3be2e6d_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1a3ad83d5_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a3903321_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a3c36269_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1a3885ca9_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a38c989c_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1a39293e1_atofHex(jule::Str, _1a39e1b3a_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1a3a9c9b5_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a3b283d1_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a3b73d00_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1a3bb1a74_ParseFloat(jule::Str, jule::I64);
inline void _1a3c86770_ryuFtoaFixed32(_1a38e393d_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1a3cdd035_ryuFtoaFixed64(_1a38e393d_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1a3ce4877_formatDecimal(_1a38e393d_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1a38a977d_ryuFtoaShortest(_1a38e393d_decimalSlice&, jule::U64, jule::I64, _1a39e1b3a_floatInfo&);
inline jule::I64 _1a39928aa_mulByLog2Log10(jule::I64);
inline jule::I64 _1a3a1ea58_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a3e1b0b9_computeBounds(jule::U64, jule::I64, _1a39e1b3a_floatInfo&);
inline void _1a3e1b30b_ryuDigits(_1a38e393d_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1a3e1b43d_ryuDigits32(_1a38e393d_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a3e1b570_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a3e1b6a2_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1a3e1b7d4_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1a3e1b916_divmod1e9(jule::U64);
inline void _1a3e1cde0_trim(_1a3e1c384_decimal&);
inline void _1a3e1d022_rightShift(_1a3e1c384_decimal&, jule::U64);
inline jule::Bool _1a3e1d154_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1a3e1d286_leftShift(_1a3e1c384_decimal&, jule::U64);
inline jule::Bool _1a3e1d3b8_shouldRoundUp(_1a3e1c384_decimal&, jule::I64);
inline jule::Str _1a3e1de46_FmtUint(jule::U64, jule::I64);
inline jule::Str _1a3e1e078_FmtInt(jule::I64, jule::I64);
inline jule::Str _1a3e1e1aa_Itoa(jule::I64);
inline jule::Str _1a3e1e2dc_small(jule::I64);
inline jule::Bool _1a3e1e41e_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a3e1e551_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1a32e367e_RealKindOf(jule::Str);
inline jule::I64 _1a32e9db1_BitsizeOf(jule::Str);
inline jule::Str _1a331e149_IntFromBits(jule::I64);
inline jule::Str _1a333105c_UintFromBits(jule::I64);
inline jule::Str _1a335a4e8_FloatFromBits(jule::I64);
inline jule::Bool _1a3652801_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1a36724e1_BitsizeOfFloat(jule::F64);
inline jule::I64 _1a3728a1a_BitsizeOfInt(jule::I64);
inline jule::I64 _1a37417ad_BitsizeOfUint(jule::U64);
inline void _1a3741ed9_UpdateTarget(void);
inline void _1a374e59b_init(void);
inline jule::F64 _1a37c8b75_Min(jule::Str);
inline jule::F64 _1a37d19a2_Max(jule::Str);
inline jule::Bool _1a37dd5d5_IsI8Compatible(jule::Str);
inline jule::Bool _1a37e9d1c_IsI16Compatible(jule::Str);
inline jule::Bool _1a3820282_IsI32Compatible(jule::Str);
inline jule::Bool _1a382684e_IsI64Compatible(jule::Str);
inline jule::Bool _1a3271bb2_IsU8Compatible(jule::Str);
inline jule::Bool _1a32c0914_IsU16Compatible(jule::Str);
inline jule::Bool _1a3347da9_IsU32Compatible(jule::Str);
inline jule::Bool _1a3348926_IsU64Compatible(jule::Str);
inline jule::Bool _1a3693ec4_IsF32Compatible(jule::Str);
inline jule::Bool _1a3695107_IsF64Compatible(jule::Str);
inline jule::Bool _1a36a00bd_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1a36a5227_IsI16Greater(jule::Str);
inline jule::Bool _1a38206e4_IsI32Greater(jule::Str);
inline jule::Bool _1a32c29b0_IsI64Greater(jule::Str);
inline jule::Bool _1a365215d_IsU16Greater(jule::Str);
inline jule::Bool _1a3e20013_IsU32Greater(jule::Str);
inline jule::Bool _1a3e20145_IsU64Greater(jule::Str);
inline jule::Bool _1a3e20277_IsF32Greater(jule::Str);
inline jule::Bool _1a3e203a9_IsF64Greater(jule::Str);
inline jule::Bool _1a3e204db_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1a3e2092b_IsSigInt(jule::Str);
inline jule::Bool _1a3e20a5d_IsUnsigInt(jule::Str);
inline jule::Bool _1a3e20b90_IsInt(jule::Str);
inline jule::Bool _1a3e20cc2_IsFloat(jule::Str);
inline jule::Bool _1a3e20e04_IsNum(jule::Str);
inline jule::Bool _1a3e21036_IsSigNum(jule::Str);
inline jule::Bool _1a3e73495_IsAscii(jule::I32);
inline jule::I32 _1a3e735c7_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1a3e8aab7_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1a3e8ad70_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a3e8b117_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1a3e8b425_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1a3e8b766_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1a4086d17_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1a408cb0e_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _1a408cdb7_FmtByDefault(jule::Str&, jule::Any&);
inline void _1a408d291_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _1a408d68c_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _1a408d99a_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _1a408e094_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a31cc986_parameterUsesGenerics(jule::Ptr<_1a31c6386_Param>&, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>&);
inline jule::Ptr<_1a3ed2d62_TypeSymbol> _1a31cee61_buildType(jule::Ptr<_1a3109462_TypeDecl>);
inline jule::Ptr<_1a3ea3eed_Value> _1a31d024c_buildExpr(jule::Ptr<_1a310d983_Expr>);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a31d04e4_buildTypeAlias(jule::Ptr<_1a3125923_TypeAliasDecl>);
inline jule::Ptr<_1a30dc038_Field> _1a31d0813_buildField(jule::Ptr<_1a312900e_FieldDecl>);
inline jule::Slice<jule::Ptr<_1a30dc038_Field>> _1a31d0aaa_buildFields(jule::Slice<jule::Ptr<_1a312900e_FieldDecl>>&);
inline jule::Ptr<_1a30e9b8e_Struct> _1a31d0d52_buildStruct(jule::Ptr<_1a312986c_StructDecl>);
inline jule::Ptr<_1a31c6386_Param> _1a31d10e9_buildParam(jule::Ptr<_1a3119e56_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a31c6386_Param>> _1a31d146d_buildParams(jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>>&);
inline jule::Ptr<_1a31c5b6b_RetType> _1a31d1715_buildRetType(jule::Ptr<_1a310c575_RetTypeDecl>);
inline jule::Ptr<_1a31c7bc3_Fn> _1a31d19ac_buildFn(jule::Ptr<_1a31210d3_FnDecl>);
inline jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _1a31d1c54_buildMethods(jule::Slice<jule::Ptr<_1a31210d3_FnDecl>>&);
inline jule::Ptr<_1a31d9a81_Trait> _1a31d1eeb_buildTrait(jule::Ptr<_1a3129e77_TraitDecl>);
inline jule::Ptr<_1a31db1d1_EnumItem> _1a31d2293_buildEnumItem(jule::Ptr<_1a3127282_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>> _1a31d253a_buildEnumItems(jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>>&);
inline jule::Ptr<_1a31dbbc6_Enum> _1a31d27d2_buildEnum(jule::Ptr<_1a3127caa_EnumDecl>);
inline jule::Ptr<_1a31dcc0a_TypeEnumItem> _1a31d2c33_buildTypeEnumItem(jule::Ptr<_1a31287b1_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>> _1a31d2eca_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>>&);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a31d3272_buildTypeEnum(jule::Ptr<_1a31289ae_TypeEnumDecl>);
inline jule::Ptr<_1a3e59e4e_Var> _1a31d3519_buildVar(jule::Ptr<_1a31220b2_VarDecl>);
inline jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _1a31d37b1_buildVars(jule::Slice<jule::Ptr<_1a31220b2_VarDecl>>);
inline jule::Ptr<_1a326e41d_Impl> _1a31d3a58_buildImpl(jule::Ptr<_1a312a582_Impl>);
inline jule::Bool _1a324b5c6_matchConstraint(jule::Str&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a324d1bb_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1a3e2427b_scopeChecker> _1a325748e_newScopeCheckerBase(jule::Ptr<_1a3e3c1ea_Sema>&, jule::Ptr<_1a31ca874_FnIns>);
inline jule::Ptr<_1a3e2427b_scopeChecker> _1a325801c_newScopeChecker(jule::Ptr<_1a3e3c1ea_Sema>&, jule::Ptr<_1a31ca874_FnIns>);
inline jule::Ptr<_1a3e23da2_scopeLabel> _1a3258dca_findLabelParent(jule::Str, jule::Ptr<_1a3e2427b_scopeChecker>);
inline jule::Bool _1a324d023_modelIsGotoScope(jule::Any, jule::Ptr<_1a3e21344_Scope>&);
inline jule::Bool _1a3259d98_stmtIsGotoScope(jule::Any&, jule::Ptr<_1a3e21344_Scope>&);
inline jule::I64 _1a325ac56_countMatchType(jule::Ptr<_1a3e23159_Match>&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _1a3268a11_getDatasFromTupleData(jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a326c493_checkMut(jule::Ptr<_1a3e3c1ea_Sema>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a326d021_checkAssign(jule::Ptr<_1a3e3c1ea_Sema>&, jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a326868c_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1a321a496_isValidStForNextSt(jule::Any&);
inline jule::Bool _1a3256c52_stmtIsDef(jule::Any&);
inline jule::Ptr<_1a3e59e4e_Var> _1a3e317b6_findVarInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e31be5_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3e320d0_findStructInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a31c7bc3_Fn> _1a3e32542_findFnInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a31d9a81_Trait> _1a3e32850_findTraitInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1a31dbbc6_Enum> _1a3e32b91_findEnumInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e32ed2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str);
inline jule::Any _1a3e334cc_defByIdentPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _1a3e395d2_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1a3e3a33b_isValidModelForRef(jule::Any&);
inline _1b9db24ab_Log _1a3e3a7d1_compilerErr(jule::Ptr<_1ba1dbeab_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e3ab22_impIsLookupable(jule::Ptr<_1a3e3409e_ImportInfo>&, jule::Str);
inline void _1a3e3ae1e_appendRetVars(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&, jule::Ptr<_1a31ca874_FnIns>&);
inline void _1a3e3b1c7_appendParamVars(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>&, jule::Ptr<_1a31ca874_FnIns>&);
inline void _1a3e3b4a2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Ptr<_1a3e9d14b_SymbolTable> _1a3e3b804_findFile(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>&, jule::Ptr<_1ba1e2346_File>&);
inline void _1a3e3bc66_pushSugggestion(_1b9db24ab_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e7be3d_traitHasReferenceReceiver(jule::Ptr<_1a31d9a81_Trait>&);
inline jule::Bool _1a3e738b3_floatAssignable(jule::Str, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a3e739e5_sigAssignable(jule::Str, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a3e8a7a9_unsigAssignable(jule::Str, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a3e8a8db_intAssignable(jule::Str, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e9c1c2_lenKind(void);
inline jule::Ptr<_1a30c5a27_Directive> _1a3ec83a7_findDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Str);
inline jule::Any _1a3ec873c_findBuiltinsImport(jule::Str, jule::Ptr<_1a3e3409e_ImportInfo>);
inline void _1a3ec894b_fitBitsize(jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ec8c48_makeStructLitAlloc(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a31c06b0_StructLitExprModel>&);
inline jule::Ptr<_1a3e59e4e_Var> _1a3ec9089_buildErrorVar(jule::Ptr<_1a3e21344_Scope>&, jule::Ptr<_1a3112c51_FnCallExpr>&);
inline jule::Any _1a3ec93ca_findBuiltinsSema(jule::Str, jule::Ptr<_1a3e3c1ea_Sema>);
inline jule::Bool _1a3ec9672_isOkForShifting(jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a3ec9a29_isInstancedStruct(jule::Ptr<_1a312ad46_StructIns>);
inline jule::Bool _1a3ec9d8c_isPtrArithmeticCompatible(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3eca0ce_applyCastKindModel(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline void _1a3eca387_applyCastKind(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a3eca585_buildVoidData(void);
inline jule::Str _1a3eca84e_checkDataForIntegerIndexing(jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ecab18_applyCastModelByEnum(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a31dbbc6_Enum>);
inline void _1a3ecadc1_castConstByType(jule::Str&, jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a3ecb3cc_updateModelToGenericIns(jule::Any&, jule::Ptr<_1a31ca874_FnIns>&);
inline jule::Bool _1a3ecb61e_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1a310a177_SubIdentTypeDecl>&);
inline jule::Bool _1a3eea42e_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>&);
inline jule::Bool _1a3eea7b4_hasDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Str);
inline jule::Bool _1a3eeaa5b_canGetPtr(jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a3eead7a_isValidForSptrType(jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3eeb122_isValidForRef(jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Bool _1a3eeb3db_isBuiltinStrConvertable(jule::Ptr<_1a3ecdc09_TypeKind>&);
inline jule::Str _1a3eeb661_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a3ed36d1_Prim> _1a3eeba18_buildPrimType(jule::Str);
inline jule::Ptr<_1a30e9b8e_Struct> _1a3eebcb0_getStructFromKind(jule::Ptr<_1a3ecdc09_TypeKind>);
inline jule::Bool _1a3eec057_isPrim(jule::Str);
inline void _1a3eec310_applyImplicitCast(jule::Ptr<_1a3ecdc09_TypeKind>&, jule::Ptr<_1a3ea2e75_Data>&);
inline std::tuple<jule::Ptr<_1a3e9d14b_SymbolTable>,jule::Slice<_1b9db24ab_Log>> _1a4000379_buildSymbols(jule::Ptr<_1a30c48a0_Ast>&, jule::Trait<_1a3e31431_Importer>&, jule::Ptr<_1a31d40a8_symbolBuilder>);
inline std::tuple<jule::Ptr<_1a3e37008_Package>,jule::Slice<_1b9db24ab_Log>> _1a40007a8_analyzePackage(jule::Slice<jule::Ptr<_1a30c48a0_Ast>>&, jule::Trait<_1a3e31431_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1a3e37008_Package>,jule::Slice<_1b9db24ab_Log>> _1a4000b93_AnalyzePackage(jule::Slice<jule::Ptr<_1a30c48a0_Ast>>, jule::Trait<_1a3e31431_Importer>, jule::I64);
inline jule::Ptr<_1a31ca874_FnIns> _1a400bcc0_findBuiltinFn(jule::Str);
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a400e08b_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1a400eb4c_findBuiltinDef(jule::Str);
inline jule::Any _1a4010664_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1a4013403_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1a40125de_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1a4012787_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1a3ea2e75_Data> _1a408e25e_builtinCallerCommonPlain(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a408e5d3_builtinCallerCommon(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a408e9bd_builtinCallerCommonMut(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a408ed0e_builtinCallerError(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40901e9_builtinCallerOut(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40905d4_builtinCallerOutln(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40909be_builtinCallerNew(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4090da9_builtinCallerPanic(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40914c5_builtinCallerMake(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40918b0_builtinCallerAppend(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4091d44_callerCopySlice(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40922c8_callerCopyStr(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40926b3_builtinCallerCopy(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4092a04_callerLenSlice(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4092d45_callerLenMap(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4093186_callerLenArr(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40934c7_callerLenStr(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40938b2_builtinCallerLen(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4093c03_callerCapSlice(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4094044_callerCapStr(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a409442e_builtinCallerCap(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4094819_builtinCallerClone(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4094c04_builtinCallerAssert(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4095111_builtinCallerStdMemSizeOf(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40956e9_builtinCallerStdMemAlignOf(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4095a7e_builtinCallerStdMemFree(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4095ead_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a40963cb_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a409681b_builtinCallerStdDebugOut(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Ptr<_1a3ea2e75_Data> _1a4096c06_builtinCallerStdDebugOutln(jule::Ptr<_1a3ea49e3_Eval>&, jule::Ptr<_1a3112c51_FnCallExpr>&, jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1c82b1cdc_FindModuleFile(jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>&);
inline jule::Str _1c82b1e1e_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1b9db24ab_Log> _1c82b21a5_CheckModuleFile(jule::Str);
inline jule::Ptr<_1a46a7b0d_FileInfo> _1a46aa7d1_ParseFile(jule::Ptr<_1ba1e2346_File>);
inline std::tuple<jule::Ptr<_1a30c48a0_Ast>,jule::Slice<_1b9db24ab_Log>> _1a47079b5_parseFileset(jule::Ptr<_1ba1e2346_File>);
inline jule::Ptr<_1a3119780_ScopeTree> _1a47083bc_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _1a47086ca_isSt(jule::Ptr<_1ba1dbeab_Token>, jule::Ptr<_1ba1dbeab_Token>);
inline jule::Bool _1a4708a1b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1a4708da1_nextStPos(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::Bool> _1a47091e2_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Slice<jule::Ptr<_1a47094de_stmt>> _1a4709885_splitStmts(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Bool _1a4721072_isTypeOp(jule::Str&);
inline jule::Bool _1a472135d_isTypeRange(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _1a4721605_getBlockExpr(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a472198a_splitDelim(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::U64);
inline jule::I64 _1a4721c32_findLowestPrecOp(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Ptr<_1a31109eb_IdentExpr> _1a4721ec9_buildIdentExpr(jule::Ptr<_1ba1dbeab_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::I64> _1a4722271_getRangeExprTokens(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Bool _1a4722eca_checkAssignTokens(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline _1b9db24ab_Log _1a47241eb_makeErr(jule::I64, jule::I64, jule::Ptr<_1ba1e2346_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _1a47246c4_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a472496b_rangeLast(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>,jule::Slice<_1b9db24ab_Log>> _1a4724d56_partsKind(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>,jule::Slice<_1b9db24ab_Log>> _1a4725241_parts(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1a47254d8_getCloseKindOfBrace(jule::Str);
inline _1b9db24ab_Log _1a47258c3_compilerErr(jule::Ptr<_1ba1dbeab_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1a4725d02_pushSuggestion(_1b9db24ab_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a4726099_tokstoa(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>&);
inline jule::Bool _1a473610e_isPub(jule::Str&);
inline jule::Ptr<_1a3109462_TypeDecl> _1a473697d_buildVoidType(void);
inline jule::Ptr<_1a3109462_TypeDecl> _1a4736be2_buildPrimType(jule::Ptr<_1ba1dbeab_Token>);
inline std::tuple<jule::Bool,jule::Bool> _1c829c1d4_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1c828a9b9_checkArch(jule::Str);
inline jule::Bool _1ba8ebb3d_isPassFileAnnotation(jule::Str);
inline void _1c82a0b44_setOsVars(jule::Slice<jule::Str>&);
inline void _1c82a0d97_setArchVars(jule::Slice<jule::Str>&);
inline void _1c82a1150_initVars(jule::Slice<jule::Str>&, _1c82a0836_CompileInfo&);
inline jule::Slice<jule::U8> _1c837517a_readBuff(jule::Str);
inline _1b9db24ab_Log _1a4151365_flatCompilerErr(jule::Str);
inline void _1a4377778_pushPasses(jule::Ptr<_1a3e37008_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a44c8676_getAllUniquePasses(jule::Ptr<_1a3e37008_Package>&, jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>>);
inline _1c82a0836_CompileInfo _1a44d2e55_buildCompileInfo(void);
inline void _1a4837c8d_EliminateDefines(jule::Ptr<_1a4380b6b_IR>&);
inline jule::Ptr<_1a30c5a27_Directive> _1a4838123_findDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Str);
inline jule::Bool _1a4838464_hasDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Str);
inline void _1a483c0b1_eliminateDeadCodeOfScope(jule::Ptr<_1a3e21344_Scope>);
inline void _1a483c347_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>&);
inline void _1a483c589_eliminateFunctionsScopePackage(jule::Ptr<_1a3e37008_Package>&);
inline void _1a483c831_eliminateScopePackage(jule::Ptr<_1a3e37008_Package>&);
inline void _1a483ca40_EliminateScopes(jule::Ptr<_1a4380b6b_IR>&);
inline jule::Bool _1c8473b08_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1a3000ad9_isConstantValidConditionalCase(jule::Ptr<_1a3e21531_If>&);
inline jule::Bool _1c8476688_isUnreachableExpr(jule::Any&);
inline jule::Bool _1c844a0eb_isConstantValidMatchCase(jule::Ptr<_1a3e236a9_Case>&);
inline jule::Bool _1c83949d5_isUnreachableConditionalCase(jule::Ptr<_1a3e21531_If>&);
inline jule::Bool _1c8411b73_isUnreachableMatchCase(jule::Ptr<_1a3e236a9_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1a4099b2c_checkForBitShiftOpt(jule::Ptr<_1a31bee0c_OperandExprModel>&, jule::Ptr<_1a31bee0c_OperandExprModel>&);
inline void _1a409ab2d_PushOptLevel(jule::I64);
inline void _1a47b2531_detectEnabled(void);
inline void _1a484a81c_Throw(jule::Str);
inline jule::U64 _1a4e6c35b_unix(void);
inline jule::U64 _1a4e6c669_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1a4e6c9ee_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1a4dbacd2_isCopyOptimizable(jule::Ptr<_1a3ea2e75_Data>&);
inline jule::Bool _1a4dbb167_isIterCopyOptimizable(jule::Ptr<_1a3ea2e75_Data>&, jule::Ptr<_1a3e59e4e_Var>&);
inline jule::Str _1a4dc975d_decomposeCommonEsq(jule::U8);
inline jule::Str _1a4dc9a49_sbtoa(jule::U8);
inline jule::Str _1a4dc9ce1_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1a4dca110_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1a4dca41d_ftoa(jule::F64, jule::I64);
inline jule::Str _1a4dca6b5_itoa(jule::I64);
inline jule::Str _1a4dca95c_utoa(jule::U64);
inline jule::Bool _1a4dcad14_isForwarded(jule::Ptr<_1a3e21344_Scope>&);
inline jule::Bool _1a4dcb0cd_isBuiltinCallHasDebuginf(jule::Ptr<_1a31c0c76_FnCallExprModel>&);
inline jule::Bool _1a4dcb30e_isExprComesFromBind(jule::Ptr<_1a3ea2e75_Data>&);
inline void _1a4e75562_iterFiles(jule::Ptr<_1a3e37008_Package>&, jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>);
inline void _1a4e75694_prepareStructure(jule::Ptr<_1a30e9b8e_Struct>&);
inline jule::Str _1a4e758b4_concatAllParts(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>);
inline jule::Ptr<_1a30c5a27_Directive> _1a4e7dcda_findDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Str);
inline jule::Bool _1a4e7e170_hasDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>&, jule::Str);
inline void _1b9d81678_printErrorMessage(jule::Str);
inline void _1b9d94ceb_help(jule::Slice<jule::Str>&);
inline void _1b9d95549_version(jule::Slice<jule::Str>&);
inline void _1b9d96dec_toolDistos(void);
inline void _1b9d9764a_toolDistarch(void);
inline void _1b9d97d98_tool(jule::Slice<jule::Str>&);
inline void _1b9d8257a_julenv(jule::Slice<jule::Str>&);
inline void _1b9da4756_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1b9d988d2_processCommand(jule::Slice<jule::Str>&);
inline void _1b9e0b22a_showInfo(void);
void entry_point(void);
inline void _1a4b90414_init(void);
inline jule::Ptr<_1d29727a1_File> _1a4e82283_openOutput(jule::Str&);
inline void _1a4e83d34_clearObjects(void);
inline void _1a4e9001b_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a491a656_isCppSourceFile(jule::Str);
inline void _1a4b8c268_pushCompCmdClang(jule::Str&);
inline void _1a4e805e4_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1a4d90504_genCompileCmd(jule::Str, jule::Ptr<_1a4380b6b_IR>&);
inline jule::Str _1a4ea3e42_getCompilePath(void);
inline void _1a4d7b820_applyTargetIndependentOptimizations(jule::Ptr<_1a4380b6b_IR>&);
inline void _1a4ce4348_checkCompilerFlag(void);
inline void _1a4911d34_checkTargetArch(jule::Str);
inline void _1a4e8acc5_checkTargetOs(jule::Str);
inline void _1a4e7e846_checkTargetFlag(jule::Str&);
inline void _1a4e7e978_checkOptFlag(jule::Str&);
inline void _1a4eb137d_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a4eb14b0_checkFlags(jule::Slice<jule::Str>&);
inline void _1a4eb15e2_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1a4380b6b_IR> _1a4eb1724_buildIr(jule::Slice<jule::Str>&);
inline void _1a4eb1856_compileCommand(jule::Slice<jule::Str>&);


struct _1a3e31431_ImporterMptrData {
	void(*_1a3e30353_SetModPath)(jule::Trait<_1a3e31431_Importer>, jule::Str);
	jule::Str(*_1a3e30595_GetModPath)(jule::Trait<_1a3e31431_Importer>);
	jule::Str(*_1a3e308a3_ModById)(jule::Trait<_1a3e31431_Importer>, jule::I64);
	jule::Ptr<_1a3e3409e_ImportInfo>(*_1a3e30bb1_GetImport)(jule::Trait<_1a3e31431_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1a30c48a0_Ast>>,jule::Slice<_1b9db24ab_Log>>(*_1a3e31068_ImportPackage)(jule::Trait<_1a3e31431_Importer>, jule::Str, jule::Bool);
	void(*_1a3e312dd_Imported)(jule::Trait<_1a3e31431_Importer>, jule::Ptr<_1a3e3409e_ImportInfo>);
};

struct _1a3ecd7ca_KindMptrData {
	jule::Str(*_1a3ecd379_Str)(jule::Trait<_1a3ecd7ca_Kind>);
	jule::Bool(*_1a3ecd687_Equals)(jule::Trait<_1a3ecd7ca_Kind>, jule::Ptr<_1a3ecdc09_TypeKind>);
};

struct _1a3eee697_LookupMptrData {
	jule::Ptr<_1a3e3409e_ImportInfo>(*_1a3eec84e_FindPackage)(jule::Trait<_1a3eee697_Lookup>, jule::Str);
	jule::Ptr<_1a3e3409e_ImportInfo>(*_1a3eecb5c_SelectPackage)(jule::Trait<_1a3eee697_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>);
	jule::Ptr<_1a3e59e4e_Var>(*_1a3eed014_FindVar)(jule::Trait<_1a3eee697_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a3ecd016_TypeAlias>(*_1a3eed3bb_FindTypeAlias)(jule::Trait<_1a3eee697_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a30e9b8e_Struct>(*_1a3eed773_FindStruct)(jule::Trait<_1a3eee697_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a31c7bc3_Fn>(*_1a3eedb2a_FindFn)(jule::Trait<_1a3eee697_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a31d9a81_Trait>(*_1a3eede38_FindTrait)(jule::Trait<_1a3eee697_Lookup>, jule::Str);
	jule::Ptr<_1a31dbbc6_Enum>(*_1a3eee246_FindEnum)(jule::Trait<_1a3eee697_Lookup>, jule::Str);
	jule::Ptr<_1a31dd2c1_TypeEnum>(*_1a3eee554_FindTypeEnum)(jule::Trait<_1a3eee697_Lookup>, jule::Str);
};

struct _1a4cb984b_CommonFlagMptrData {
	jule::Str(*_1a4c89640_Name)(jule::Trait<_1a4cb984b_CommonFlag>);
	jule::I32(*_1a4cb9719_Short)(jule::Trait<_1a4cb984b_CommonFlag>);
	jule::Str(*_1a4eaa8d8_What)(jule::Trait<_1a4cb984b_CommonFlag>);
	void(*_1a4eaaa1a_Reset)(jule::Trait<_1a4cb984b_CommonFlag>);
};



inline void _1a3e30353_SetModPath_0(jule::Trait<_1a3e31431_Importer> _self_, jule::Str _1729_path) {
	_1a41d0a43_SetModPath(_self_.safe_ptr<_1a4156cc7_JuleImporter>(), _1729_path);
}
inline jule::Str _1a3e30595_GetModPath_0(jule::Trait<_1a3e31431_Importer> _self_) {
	return _1a42067c2_GetModPath(_self_.safe_ptr<_1a4156cc7_JuleImporter>());
}
inline jule::Str _1a3e308a3_ModById_0(jule::Trait<_1a3e31431_Importer> _self_, jule::I64 _2522_id) {
	return _1a42b9a83_ModById(_self_.safe_ptr<_1a4156cc7_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e30bb1_GetImport_0(jule::Trait<_1a3e31431_Importer> _self_, jule::Str _3128_path) {
	return _1a42cb358_GetImport(_self_.safe_ptr<_1a4156cc7_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1a30c48a0_Ast>>,jule::Slice<_1b9db24ab_Log>> _1a3e31068_ImportPackage_0(jule::Trait<_1a3e31431_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a42d6ece_ImportPackage(_self_.safe_ptr<_1a4156cc7_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1a3e312dd_Imported_0(jule::Trait<_1a3e31431_Importer> _self_, jule::Ptr<_1a3e3409e_ImportInfo> _4131__0) {
	_1a4335cca_Imported(_self_.safe_ptr<_1a4156cc7_JuleImporter>(), _4131__0);
}
inline jule::Str _1a3ecd379_Str_0(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a30eb872_Str(_self_.safe_ptr<_1a312ad46_StructIns>());
}
inline jule::Bool _1a3ecd687_Equals_0(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a30ec9d8_Equals(_self_.data.as<_1a312ad46_StructIns>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_1(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a31caba4_Str(_self_.safe_ptr<_1a31ca874_FnIns>());
}
inline jule::Bool _1a3ecd687_Equals_1(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a31caeb2_Equals(_self_.data.as<_1a31ca874_FnIns>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_2(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a31d9e7c_Str(_self_.safe_ptr<_1a31d9a81_Trait>());
}
inline jule::Bool _1a3ecd687_Equals_2(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a31da28a_Equals(_self_.data.as<_1a31d9a81_Trait>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_3(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a31dc039_Str(_self_.safe_ptr<_1a31dbbc6_Enum>());
}
inline jule::Bool _1a3ecd687_Equals_3(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a31dc347_Equals(_self_.data.as<_1a31dbbc6_Enum>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_4(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a31dd601_Str(_self_.safe_ptr<_1a31dd2c1_TypeEnum>());
}
inline jule::Bool _1a3ecd687_Equals_4(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a31dd90e_Equals(_self_.data.as<_1a31dd2c1_TypeEnum>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_5(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ece105_Str(_self_.safe_ptr<_1a3ecdc09_TypeKind>());
}
inline jule::Bool _1a3ecd687_Equals_5(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3ece413_Equals(_self_.data.as<_1a3ecdc09_TypeKind>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_6(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ed3a44_Str(_self_.safe_ptr<_1a3ed36d1_Prim>());
}
inline jule::Bool _1a3ecd687_Equals_6(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3ed3d52_Equals(_self_.data.as<_1a3ed36d1_Prim>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_7(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ed72c8_Str(_self_.safe_ptr<_1a3ed6e65_Sptr>());
}
inline jule::Bool _1a3ecd687_Equals_7(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3ed75d6_Equals(_self_.data.as<_1a3ed6e65_Sptr>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_8(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ed7dcd_Str(_self_.safe_ptr<_1a3ed78c2_Slc>());
}
inline jule::Bool _1a3ecd687_Equals_8(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3ed81db_Equals(_self_.data.as<_1a3ed78c2_Slc>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_9(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ed87b3_Str(_self_.safe_ptr<_1a3ed8450_Tuple>());
}
inline jule::Bool _1a3ecd687_Equals_9(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3ed8ac1_Equals(_self_.data.as<_1a3ed8450_Tuple>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_10(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ed92db_Str(_self_.safe_ptr<_1a3ed8e78_Map>());
}
inline jule::Bool _1a3ecd687_Equals_10(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3ed95e9_Equals(_self_.data.as<_1a3ed8e78_Map>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_11(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3ed9dd0_Str(_self_.safe_ptr<_1a3ed9a6c_Arr>());
}
inline jule::Bool _1a3ecd687_Equals_11(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3eda1dd_Equals(_self_.data.as<_1a3ed9a6c_Arr>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_12(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a3eda83c_Str(_self_.safe_ptr<_1a3eda4c9_Ptr>());
}
inline jule::Bool _1a3ecd687_Equals_12(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a3edab4a_Equals(_self_.data.as<_1a3eda4c9_Ptr>(), _5622_other);
}
inline jule::Str _1a3ecd379_Str_13(jule::Trait<_1a3ecd7ca_Kind> _self_) {
	return _1a4e76893_Str(_self_.safe_ptr<_1a4e765c9_customType>());
}
inline jule::Bool _1a3ecd687_Equals_13(jule::Trait<_1a3ecd7ca_Kind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _5622_other) {
	return _1a4e76ba1_Equals(_self_.data.as<_1a4e765c9_customType>(), _5622_other);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eec84e_FindPackage_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _930_ident) {
	return _1a3e24468_FindPackage(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eecb5c_SelectPackage_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _1332_selector) {
	return _1a3e2459a_SelectPackage(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1a3e59e4e_Var> _1a3eed014_FindVar_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a3e246cc_FindVar(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3eed3bb_FindTypeAlias_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a3e2480e_FindTypeAlias(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a30e9b8e_Struct> _1a3eed773_FindStruct_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a3e24941_FindStruct(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a31c7bc3_Fn> _1a3eedb2a_FindFn_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a3e24a73_FindFn(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a31d9a81_Trait> _1a3eede38_FindTrait_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3328_ident) {
	return _1a3e24ba5_FindTrait(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1a31dbbc6_Enum> _1a3eee246_FindEnum_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3727_ident) {
	return _1a3e24cd7_FindEnum(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3eee554_FindTypeEnum_0(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _4131_ident) {
	return _1a3e24e19_FindTypeEnum(_self_.safe_ptr<_1a3e2427b_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eec84e_FindPackage_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _930_ident) {
	return _1a3e345bb_FindPackage(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eecb5c_SelectPackage_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _1332_selector) {
	return _1a3e348c9_SelectPackage(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1a3e59e4e_Var> _1a3eed014_FindVar_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a3e34c81_FindVar(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3eed3bb_FindTypeAlias_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a3e35138_FindTypeAlias(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a30e9b8e_Struct> _1a3eed773_FindStruct_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a3e354e0_FindStruct(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a31c7bc3_Fn> _1a3eedb2a_FindFn_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a3e35897_FindFn(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a31d9a81_Trait> _1a3eede38_FindTrait_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3328_ident) {
	return _1a3e35ba5_FindTrait(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1a31dbbc6_Enum> _1a3eee246_FindEnum_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3727_ident) {
	return _1a3e35eb3_FindEnum(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3eee554_FindTypeEnum_1(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _4131_ident) {
	return _1a3e362c1_FindTypeEnum(_self_.safe_ptr<_1a3e3409e_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eec84e_FindPackage_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _930_ident) {
	return _1a3e374d1_FindPackage(_self_.safe_ptr<_1a3e37008_Package>(), _930_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eecb5c_SelectPackage_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _1332_selector) {
	return _1a3e377de_SelectPackage(_self_.safe_ptr<_1a3e37008_Package>(), _1332_selector);
}
inline jule::Ptr<_1a3e59e4e_Var> _1a3eed014_FindVar_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a3e37b96_FindVar(_self_.safe_ptr<_1a3e37008_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3eed3bb_FindTypeAlias_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a3e3804d_FindTypeAlias(_self_.safe_ptr<_1a3e37008_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a30e9b8e_Struct> _1a3eed773_FindStruct_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a3e38405_FindStruct(_self_.safe_ptr<_1a3e37008_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a31c7bc3_Fn> _1a3eedb2a_FindFn_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a3e387ac_FindFn(_self_.safe_ptr<_1a3e37008_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a31d9a81_Trait> _1a3eede38_FindTrait_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3328_ident) {
	return _1a3e38aba_FindTrait(_self_.safe_ptr<_1a3e37008_Package>(), _3328_ident);
}
inline jule::Ptr<_1a31dbbc6_Enum> _1a3eee246_FindEnum_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3727_ident) {
	return _1a3e38dc8_FindEnum(_self_.safe_ptr<_1a3e37008_Package>(), _3727_ident);
}
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3eee554_FindTypeEnum_2(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _4131_ident) {
	return _1a3e391d6_FindTypeEnum(_self_.safe_ptr<_1a3e37008_Package>(), _4131_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eec84e_FindPackage_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _930_ident) {
	return _1a3e3c717_FindPackage(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _930_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eecb5c_SelectPackage_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _1332_selector) {
	return _1a3e3ca25_SelectPackage(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _1332_selector);
}
inline jule::Ptr<_1a3e59e4e_Var> _1a3eed014_FindVar_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a3e3cdcc_FindVar(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3eed3bb_FindTypeAlias_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a3e3d284_FindTypeAlias(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a30e9b8e_Struct> _1a3eed773_FindStruct_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a3e3d63b_FindStruct(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a31c7bc3_Fn> _1a3eedb2a_FindFn_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a3e3d9e3_FindFn(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a31d9a81_Trait> _1a3eede38_FindTrait_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3328_ident) {
	return _1a3e3dd01_FindTrait(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _3328_ident);
}
inline jule::Ptr<_1a31dbbc6_Enum> _1a3eee246_FindEnum_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3727_ident) {
	return _1a3e3e10e_FindEnum(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _3727_ident);
}
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3eee554_FindTypeEnum_3(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _4131_ident) {
	return _1a3e3e41c_FindTypeEnum(_self_.safe_ptr<_1a3e3c1ea_Sema>(), _4131_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eec84e_FindPackage_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _930_ident) {
	return _1a3e9d668_FindPackage(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3eecb5c_SelectPackage_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _1332_selector) {
	return _1a3e9d976_SelectPackage(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1a3e59e4e_Var> _1a3eed014_FindVar_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a3e9dd2d_FindVar(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3eed3bb_FindTypeAlias_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a3e9e1d5_FindTypeAlias(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a30e9b8e_Struct> _1a3eed773_FindStruct_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a3e9e58c_FindStruct(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a31c7bc3_Fn> _1a3eedb2a_FindFn_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a3e9e944_FindFn(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a31d9a81_Trait> _1a3eede38_FindTrait_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3328_ident) {
	return _1a3e9ec52_FindTrait(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1a31dbbc6_Enum> _1a3eee246_FindEnum_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _3727_ident) {
	return _1a3ea0060_FindEnum(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3eee554_FindTypeEnum_4(jule::Trait<_1a3eee697_Lookup> _self_, jule::Str _4131_ident) {
	return _1a3ea036d_FindTypeEnum(_self_.safe_ptr<_1a3e9d14b_SymbolTable>(), _4131_ident);
}
inline jule::Str _1a4c89640_Name_0(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7730d70_Name(_self_.safe_ptr<_1a795951b_Flag>());
}
inline jule::I32 _1a4cb9719_Short_0(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7959a7c_Short(_self_.safe_ptr<_1a795951b_Flag>());
}
inline jule::Str _1a4eaa8d8_What_0(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7730ea2_What(_self_.safe_ptr<_1a795951b_Flag>());
}
inline void _1a4eaaa1a_Reset_0(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	_1a795994a_Reset(_self_.safe_ptr<_1a795951b_Flag>());
}
inline jule::Str _1a4c89640_Name_1(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a795cd7c_Name(_self_.safe_ptr<_1a795d366_Flag>());
}
inline jule::I32 _1a4cb9719_Short_1(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a795d8b6_Short(_self_.safe_ptr<_1a795d366_Flag>());
}
inline jule::Str _1a4eaa8d8_What_1(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a795d652_What(_self_.safe_ptr<_1a795d366_Flag>());
}
inline void _1a4eaaa1a_Reset_1(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	_1a795d784_Reset(_self_.safe_ptr<_1a795d366_Flag>());
}
inline jule::Str _1a4c89640_Name_2(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a79619b8_Name(_self_.safe_ptr<_1a7961ea2_Flag>());
}
inline jule::I32 _1a4cb9719_Short_2(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7962502_Short(_self_.safe_ptr<_1a7961ea2_Flag>());
}
inline jule::Str _1a4eaa8d8_What_2(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a796228d_What(_self_.safe_ptr<_1a7961ea2_Flag>());
}
inline void _1a4eaaa1a_Reset_2(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	_1a79623c0_Reset(_self_.safe_ptr<_1a7961ea2_Flag>());
}
inline jule::Str _1a4c89640_Name_3(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7965648_Name(_self_.safe_ptr<_1a7965b32_Flag>());
}
inline jule::I32 _1a4cb9719_Short_3(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7966182_Short(_self_.safe_ptr<_1a7965b32_Flag>());
}
inline jule::Str _1a4eaa8d8_What_3(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7965e1d_What(_self_.safe_ptr<_1a7965b32_Flag>());
}
inline void _1a4eaaa1a_Reset_3(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	_1a7966050_Reset(_self_.safe_ptr<_1a7965b32_Flag>());
}
inline jule::Str _1a4c89640_Name_4(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7969284_Name(_self_.safe_ptr<_1a796976d_Flag>());
}
inline jule::I32 _1a4cb9719_Short_4(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7969cbd_Short(_self_.safe_ptr<_1a796976d_Flag>());
}
inline jule::Str _1a4eaa8d8_What_4(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	return _1a7969a59_What(_self_.safe_ptr<_1a796976d_Flag>());
}
inline void _1a4eaaa1a_Reset_4(jule::Trait<_1a4cb984b_CommonFlag> _self_) {
	_1a7969b8b_Reset(_self_.safe_ptr<_1a796976d_Flag>());
}


static _1a3e31431_ImporterMptrData _1a3e31431_Importer_mptr_data[] = {
	{
		._1a3e30353_SetModPath=_1a3e30353_SetModPath_0,
		._1a3e30595_GetModPath=_1a3e30595_GetModPath_0,
		._1a3e308a3_ModById=_1a3e308a3_ModById_0,
		._1a3e30bb1_GetImport=_1a3e30bb1_GetImport_0,
		._1a3e31068_ImportPackage=_1a3e31068_ImportPackage_0,
		._1a3e312dd_Imported=_1a3e312dd_Imported_0,
	},
};
static _1a3ecd7ca_KindMptrData _1a3ecd7ca_Kind_mptr_data[] = {
	{
		._1a3ecd379_Str=_1a3ecd379_Str_0,
		._1a3ecd687_Equals=_1a3ecd687_Equals_0,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_1,
		._1a3ecd687_Equals=_1a3ecd687_Equals_1,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_2,
		._1a3ecd687_Equals=_1a3ecd687_Equals_2,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_3,
		._1a3ecd687_Equals=_1a3ecd687_Equals_3,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_4,
		._1a3ecd687_Equals=_1a3ecd687_Equals_4,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_5,
		._1a3ecd687_Equals=_1a3ecd687_Equals_5,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_6,
		._1a3ecd687_Equals=_1a3ecd687_Equals_6,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_7,
		._1a3ecd687_Equals=_1a3ecd687_Equals_7,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_8,
		._1a3ecd687_Equals=_1a3ecd687_Equals_8,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_9,
		._1a3ecd687_Equals=_1a3ecd687_Equals_9,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_10,
		._1a3ecd687_Equals=_1a3ecd687_Equals_10,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_11,
		._1a3ecd687_Equals=_1a3ecd687_Equals_11,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_12,
		._1a3ecd687_Equals=_1a3ecd687_Equals_12,
	},
	{
		._1a3ecd379_Str=_1a3ecd379_Str_13,
		._1a3ecd687_Equals=_1a3ecd687_Equals_13,
	},
};
static _1a3eee697_LookupMptrData _1a3eee697_Lookup_mptr_data[] = {
	{
		._1a3eec84e_FindPackage=_1a3eec84e_FindPackage_0,
		._1a3eecb5c_SelectPackage=_1a3eecb5c_SelectPackage_0,
		._1a3eed014_FindVar=_1a3eed014_FindVar_0,
		._1a3eed3bb_FindTypeAlias=_1a3eed3bb_FindTypeAlias_0,
		._1a3eed773_FindStruct=_1a3eed773_FindStruct_0,
		._1a3eedb2a_FindFn=_1a3eedb2a_FindFn_0,
		._1a3eede38_FindTrait=_1a3eede38_FindTrait_0,
		._1a3eee246_FindEnum=_1a3eee246_FindEnum_0,
		._1a3eee554_FindTypeEnum=_1a3eee554_FindTypeEnum_0,
	},
	{
		._1a3eec84e_FindPackage=_1a3eec84e_FindPackage_1,
		._1a3eecb5c_SelectPackage=_1a3eecb5c_SelectPackage_1,
		._1a3eed014_FindVar=_1a3eed014_FindVar_1,
		._1a3eed3bb_FindTypeAlias=_1a3eed3bb_FindTypeAlias_1,
		._1a3eed773_FindStruct=_1a3eed773_FindStruct_1,
		._1a3eedb2a_FindFn=_1a3eedb2a_FindFn_1,
		._1a3eede38_FindTrait=_1a3eede38_FindTrait_1,
		._1a3eee246_FindEnum=_1a3eee246_FindEnum_1,
		._1a3eee554_FindTypeEnum=_1a3eee554_FindTypeEnum_1,
	},
	{
		._1a3eec84e_FindPackage=_1a3eec84e_FindPackage_2,
		._1a3eecb5c_SelectPackage=_1a3eecb5c_SelectPackage_2,
		._1a3eed014_FindVar=_1a3eed014_FindVar_2,
		._1a3eed3bb_FindTypeAlias=_1a3eed3bb_FindTypeAlias_2,
		._1a3eed773_FindStruct=_1a3eed773_FindStruct_2,
		._1a3eedb2a_FindFn=_1a3eedb2a_FindFn_2,
		._1a3eede38_FindTrait=_1a3eede38_FindTrait_2,
		._1a3eee246_FindEnum=_1a3eee246_FindEnum_2,
		._1a3eee554_FindTypeEnum=_1a3eee554_FindTypeEnum_2,
	},
	{
		._1a3eec84e_FindPackage=_1a3eec84e_FindPackage_3,
		._1a3eecb5c_SelectPackage=_1a3eecb5c_SelectPackage_3,
		._1a3eed014_FindVar=_1a3eed014_FindVar_3,
		._1a3eed3bb_FindTypeAlias=_1a3eed3bb_FindTypeAlias_3,
		._1a3eed773_FindStruct=_1a3eed773_FindStruct_3,
		._1a3eedb2a_FindFn=_1a3eedb2a_FindFn_3,
		._1a3eede38_FindTrait=_1a3eede38_FindTrait_3,
		._1a3eee246_FindEnum=_1a3eee246_FindEnum_3,
		._1a3eee554_FindTypeEnum=_1a3eee554_FindTypeEnum_3,
	},
	{
		._1a3eec84e_FindPackage=_1a3eec84e_FindPackage_4,
		._1a3eecb5c_SelectPackage=_1a3eecb5c_SelectPackage_4,
		._1a3eed014_FindVar=_1a3eed014_FindVar_4,
		._1a3eed3bb_FindTypeAlias=_1a3eed3bb_FindTypeAlias_4,
		._1a3eed773_FindStruct=_1a3eed773_FindStruct_4,
		._1a3eedb2a_FindFn=_1a3eedb2a_FindFn_4,
		._1a3eede38_FindTrait=_1a3eede38_FindTrait_4,
		._1a3eee246_FindEnum=_1a3eee246_FindEnum_4,
		._1a3eee554_FindTypeEnum=_1a3eee554_FindTypeEnum_4,
	},
};
static _1a4cb984b_CommonFlagMptrData _1a4cb984b_CommonFlag_mptr_data[] = {
	{
		._1a4c89640_Name=_1a4c89640_Name_0,
		._1a4cb9719_Short=_1a4cb9719_Short_0,
		._1a4eaa8d8_What=_1a4eaa8d8_What_0,
		._1a4eaaa1a_Reset=_1a4eaaa1a_Reset_0,
	},
	{
		._1a4c89640_Name=_1a4c89640_Name_1,
		._1a4cb9719_Short=_1a4cb9719_Short_1,
		._1a4eaa8d8_What=_1a4eaa8d8_What_1,
		._1a4eaaa1a_Reset=_1a4eaaa1a_Reset_1,
	},
	{
		._1a4c89640_Name=_1a4c89640_Name_2,
		._1a4cb9719_Short=_1a4cb9719_Short_2,
		._1a4eaa8d8_What=_1a4eaa8d8_What_2,
		._1a4eaaa1a_Reset=_1a4eaaa1a_Reset_2,
	},
	{
		._1a4c89640_Name=_1a4c89640_Name_3,
		._1a4cb9719_Short=_1a4cb9719_Short_3,
		._1a4eaa8d8_What=_1a4eaa8d8_What_3,
		._1a4eaaa1a_Reset=_1a4eaaa1a_Reset_3,
	},
	{
		._1a4c89640_Name=_1a4c89640_Name_4,
		._1a4cb9719_Short=_1a4cb9719_Short_4,
		._1a4eaa8d8_What=_1a4eaa8d8_What_4,
		._1a4eaaa1a_Reset=_1a4eaaa1a_Reset_4,
	},
};


jule::Str _1a4c89211_OutDir = jule::Str("dist", 4);
jule::Str _1a4cb543a_OutName = jule::Str("ir.cpp", 6);
jule::Str _1a4e8003e_Out = jule::Str();
jule::Str _1d28c5946_Compiler = jule::Str();
jule::Str _1d28c5baa_CompilerPath = jule::Str();
jule::Str _1d28c5e1e_CppStd = jule::Str("cpp17", 5);
jule::Bool _1d28c6183_Shadowing = false;
jule::Bool _1d28c63e7_Transpilation = false;
jule::Bool _1d28c668e_Test = false;
jule::Bool _1d28c698b_RC = true;
jule::Bool _1d28c6da9_Safety = true;
jule::Bool _1d28c71b7_Production = false;
jule::Ptr<_1b9c4675d_RangeTable> _1b9bc295e__L = jule::new_ptr<_1b9c4675d_RangeTable>(_1b9c4675d_RangeTable{._field_R16=jule::Slice<_1b9c45d67_Range16>::make({_1b9c45d67_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1b9c45d67_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1b9c45d67_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1b9c45d67_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1b9c45d67_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1b9c45d67_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1b9c45d67_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1b9c45d67_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1b9c45d67_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1b9c45d67_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1b9c45d67_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1b9c45d67_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1b9c45d67_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1b9c45d67_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1b9c45d67_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1b9c45d67_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1b9c45d67_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1b9c45d67_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1b9c45d67_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1b9c45d67_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1b9c45d67_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1b9c45d67_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1b9c45d67_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1b9c45d67_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1b9c45d67_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1b9c45d67_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1b9c45d67_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1b9c45d67_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1b9c45d67_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1b9c45d67_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1b9c45d67_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1b9c45d67_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1b9c45d67_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1b9c45d67_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1b9c45d67_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1b9c45d67_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1b9c45d67_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1b9c45d67_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1b9c45d67_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1b9c45d67_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1b9c45d67_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1b9c45d67_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1b9c462da_Range32>::make({_1b9c462da_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1b9c462da_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1b9c462da_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1b9c462da_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1b9c462da_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1b9c462da_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1b9c462da_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1b9c462da_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1b9c462da_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1b9c462da_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1b9c462da_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1b9c462da_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1b9c462da_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1b9c462da_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1b9c462da_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1b9c462da_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1b9c462da_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1b9c462da_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1b9c462da_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1b9c462da_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1b9c462da_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1b9c462da_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1b9c462da_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1b9c462da_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1b9c4675d_RangeTable> _1b9bc3ab4__LU = jule::new_ptr<_1b9c4675d_RangeTable>(_1b9c4675d_RangeTable{._field_R16=jule::Slice<_1b9c45d67_Range16>::make({_1b9c45d67_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1b9c45d67_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1b9c45d67_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1b9c45d67_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1b9c45d67_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1b9c45d67_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1b9c45d67_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1b9c45d67_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1b9c45d67_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1b9c45d67_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1b9c45d67_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1b9c45d67_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1b9c462da_Range32>::make({_1b9c462da_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1b9c462da_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1b9c462da_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1b9c462da_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1b9c462da_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1b9c462da_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _1d28d0b3d_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1b9da426c_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1b9da579b_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1b9deb1d7_PathStdlib = jule::Str();
jule::Str _1b9ded096_PathExec = jule::Str();
jule::Str _1b9e00818_PathWd = jule::Str();
jule::Str _1b9e0b093_PathApi = jule::Str();
jule::Array<jule::I32,5> _1ba13e86a_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1ba13eace_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1ba13ee20_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1ba1d647d_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1ba1d67be_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1ba1e439d_kindPair,47> _1ba1e4832_keywords = jule::Array<_1ba1e439d_kindPair,47>({_1ba1e439d_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1ba1e439d_kindPair,39> _1ba1e4bb7_basicOps = jule::Array<_1ba1e439d_kindPair,39>({_1ba1e439d_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ba1e439d_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1a3dcbcd3__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1a3dcc432__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1a39e1b3a_floatInfo _1a383e339_f32info = _1a39e1b3a_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1a39e1b3a_floatInfo _1a38447c3_f64info = _1a39e1b3a_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1a38ce6c6_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1a39264ed_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1a393297c_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1a39496ec_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1a39e2124_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1a3e1c021_leftCheat> _1a39e3b5e_leftCheats = jule::Slice<_1a3e1c021_leftCheat>::make({_1a3e1c021_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1a3e1c021_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1a3e1c021_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1a3e1c021_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1a3e1c021_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1a3e1c021_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1a3e1c021_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1a3e1c021_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1a3e1c021_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1a3e1c021_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1a3e1c021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1a3e1c021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1a3e1c021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1a3e1c021_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1a3e1c021_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1a3e1c021_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1a3e1c021_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1a3e1c021_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1a3e1c021_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1a3e1c021_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1a3e1c021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1a3e1c021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1a3e1c021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1a3e1c021_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1a3e1c021_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1a3e1c021_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1a3e1c021_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1a3e1c021_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1a3e1c021_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1a3e1c021_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1a3e1c021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1a3e1c021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1a3e1c021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1a3e1c021_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1a3e1c021_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1a3e1c021_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1a3e1c021_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1a3e1c021_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1a3e1c021_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1a3e1c021_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1a3e1c021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1a3e1c021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1a3e1c021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1a3e1c021_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1a3e1c021_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1a3e1c021_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1a3e1c021_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1a3e1c021_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1a3e1c021_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1a3e1c021_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1a3e1c021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1a3e1c021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1a3e1c021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1a3e1c021_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1a3e1c021_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1a3e1c021_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1a3e1c021_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1a3e1c021_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1a3e1c021_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1a3e1c021_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1a3e1c021_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1a32c1739_BitSize = 0LL;
jule::Str _1a32c1c67_SysInt = jule::Str();
jule::Str _1a331633e_SysUint = jule::Str();
jule::Slice<jule::Str> _1a32067b2_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1c83c22c6_Copy = false;
jule::Bool _1c83c5d46_Deadcode = false;
jule::Bool _1c83e4727_Append = false;
jule::Bool _1c83e6361_Math = false;
jule::Bool _1c841523c_Access = false;
jule::Bool _1c84179c0_Inline = false;
jule::Bool _1c8435070_Ptr = false;
jule::Bool _1c8448418_Cond = false;
jule::Bool _1a473ce4b_exprEnabled = false;
jule::Bool _1a473e0a1_scopeEnabled = false;
jule::Array<jule::U64,12> _1a4e692c0_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_1b9c4675d_RangeTable> _1b9bca67b_Letter = _1b9bc295e__L;
jule::Ptr<_1b9c4675d_RangeTable> _1b9bd271b_Upper = _1b9bc3ab4__LU;
jule::Array<_1b9d0a6bd_acceptRange,16> _1b9d0aa31_acceptRanges = jule::Array<_1b9d0a6bd_acceptRange,16>({_1b9d0a6bd_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1b9d0a6bd_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1b9d0a6bd_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1b9d0a6bd_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1b9d0a6bd_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1b9d94180_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1b9e0b879_Os = jule::Str("linux", 5);
jule::Str _1b9dead52_Arch = jule::Str("arm64", 5);
jule::Array<jule::U8,256> _1b9c3ea53__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1b9d0a14b_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _1b9c45d67_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b9c462da_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b9c4675d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b9d0a6bd_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1b9d34ebc_index(_1b9d34a49_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1b9d35242_append(_1b9d34a49_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1b9d354a6_string(_1b9d34a49_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1b9d34a49_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2a84044_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>> static__1b9d3908c_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1d2a84044_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>();
	DIR* _1617_dir = _1d3738a72_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>>(_1d2977ee3_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _1d3738d19_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1a5780eb0;
			};
			jule::Str _2517_name = _1d3730d88_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_1d29915b1_Status> _2621_stat = ({
				auto except = static__1d299388d_Of(_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>>(except.error);
				} jule::Ptr<_1d29915b1_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_1d2a84044_DirEntry>(_1d2a84044_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1a5780eb0:;
	}
	_iter_end_1a5780eb0:;;
	_1d37390b1_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__1b9d3929b_Create(jule::Str _3922_path) {
	if ((_1d3739941_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_1d2977ee3_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1b9d394aa_Remove(jule::Str _5122_path) {
	if ((_1d3739bd8_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1d2977ee3_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d299198a_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d29727a1_File>> static__1d29782bd_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _1d3738258_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d29727a1_File>>(_1d2977ee3_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_1d29727a1_File>>(jule::Any(),static__1d299675e_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__1d297a28c_Remove(jule::Str _3022_path) {
	if ((_1d3739e80_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1d2977ee3_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d297ae4c_Write(_1d29727a1_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 _4441_n = jule::I64();
	if ((_4424_buff.len() == 0LL)) {
		_4441_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
	};
	_4441_n=static_cast<jule::I64>(_1d37418e3_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((_4441_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d2977ee3_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
}



inline jule::Exceptional<jule::I64> _1d297c569_Read(_1d29727a1_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 _6444_n = jule::I64();
	if ((_6427_buff.len() == 0LL)) {
		_6444_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
	};
	_6444_n=static_cast<jule::I64>(_1d3741184_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((_6444_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d2977ee3_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
}



inline jule::Ptr<_1d29727a1_File> static__1d299675e_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_1d29727a1_File>(_1d29727a1_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_1d29727a1_File>> static__1d2998453_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_1d29727a1_File>>(jule::Any(),({
		auto except = static__1d29782bd_Open(_5522_path,static_cast<jule::I64>(578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1d29727a1_File>>(except.error);
		} jule::Ptr<_1d29727a1_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d2999212_Read(jule::Str _6720_path) {
	jule::Ptr<_1d29915b1_Status> _6813_s = ({
		auto except = static__1d299388d_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d29915b1_Status>();});
	});;
	if ((!(_1d2a4d9d1_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_1d29727a1_File> _7817_f = ({
		auto except = static__1d29782bd_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d29727a1_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1d299c5ab_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _1d297c569_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1d299a048_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_1d29727a1_File> _9217_f = ({
		auto except = static__1d29782bd_Open(_9121_path,static_cast<jule::I64>(577LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1d29727a1_File>();});
	});;
	({
		auto except = _1d297ae4c_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d299c5ab_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d299bac7_Seek(_1d29727a1_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _1d3740c99_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d2977ee3_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1d299c5ab_Close(_1d29727a1_File* _self_) {
	if ((_1d3741508_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1d2977ee3_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d29727a1_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d29915b1_Status>> static__1d299388d_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1d29915b1_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _1d3737d6d_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d29915b1_Status>>(jule::Any(),jule::new_ptr<_1d29915b1_Status>(_1d29915b1_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_1d29915b1_Status>>(_1d2977ee3_getLastFsError());
}



inline jule::Bool _1d299dc3e_IsDir(_1d29915b1_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1d2a4d9d1_IsReg(_1d29915b1_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1d29915b1_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9e0cc43_Cmd> static__1b9e0d172_New(jule::Str _2019_path) {
	return jule::new_ptr<_1b9e0cc43_Cmd>(_1b9e0cc43_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _1b9e0d3d6_Spawn(_1b9e0cc43_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1b9e11340_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1b9e11340_spawn(_1b9e0cc43_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a57a63e2:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a57a5633:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_1b9e10b69_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_1b9e11054_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_1b9e11b6a_Exit(255LL);
			}
		}
		_match_end_1a57a638c:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1b9e0c4b2_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _1b9e0cc43_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b9db24ab_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ba1dc363_Prec(_1ba1dbeab_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a585ab8e:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a585a4c9:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a585a540:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a585a5a6:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a585a61c:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1a58597e7:;
			{
				return 0LLU;
			}
		}
		_match_end_1a585a474:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ba1dbeab_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ba1e2753_IsOk(_1ba1e2346_File* _self_) {
	({
		auto except = static__1d299388d_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_1d29915b1_Status>();});
	});
	return true;
}



inline void _1ba1e29c8_Fill(_1ba1e2346_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _1ba1e2c3c_Dir(_1ba1e2346_File* _self_) {
	return _1b9d36d15_Dir((*_self_)._field_Path);
}



inline jule::Str _1ba1e2ea1_Name(_1ba1e2346_File* _self_) {
	return _1b9d36991_Base((*_self_)._field_Path);
}



inline jule::Uintptr _1ba1e3215_Addr(_1ba1e2346_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1ba1e3523_GetRow(_1ba1e2346_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1a58658be;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a58658be:;
	}
	_iter_end_1a58658be:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1ba1e2346_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba1e439d_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ba1ea53b_pushErr(_1ba1e9e97_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ba1e51a1_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,jule::Any(_45839_args)));;
}



inline void _1ba1ea85a_pushErrTok(_1ba1e9e97_lex* _self_, jule::Ptr<_1ba1dbeab_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ba1e51a1_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _1ba1eaa36_lex(_1ba1e9e97_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1ba1eca38_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1ba1dbeab_Token> _47321_token = _1ba1eddad_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1a589e51d:;
	}
	_iter_end_1a589e51d:;;
}



inline jule::Str _1ba1ead44_id(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _1b9d0b2a1_DecodeRune(_48222_ln);
	if (((_48614_r != '_') && (!(_1ba1e0487_IsLetter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _1b9d0b2a1_DecodeRune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1ba1e09c6_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1ba1e0487_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1a58a2576:;
	}
	_iter_end_1a58a2576:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1ba1eb0a8_resume(_1ba1e9e97_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_1ba1e0036_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a58a6e3d:;
						{
							_1ba1eca38_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a58a6d2d:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a58a6a0e:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1a58a68aa:;
				};
				goto _iter_next_1a58a4aa6;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1a58a57dd;
					};
				}
			_iter_next_1a58a57dd:;
			}
			_iter_end_1a58a57dd:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);
		}
	_iter_next_1a58a4aa6:;
	}
	_iter_end_1a58a4aa6:;;
	return nullptr;
}



inline void _1ba1eb32d_lexLineComment(_1ba1e9e97_lex* _self_, jule::Ptr<_1ba1dbeab_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1a58a9c43;
			};
		}
	_iter_next_1a58a9c43:;
	}
	_iter_end_1a58a9c43:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _1ba1eb5a3_lexRangeComment(_1ba1e9e97_lex* _self_, jule::Ptr<_1ba1dbeab_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1a58ad3a6;
			};
			if ((_55417_r == '\n')) {
				_1ba1eca38_newLine(&(*_self_));
				goto _iter_next_1a58ad3a6;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a58ad3a6:;
	}
	_iter_end_1a58ad3a6:;;
	_1ba1ea53b_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1ba1eb8b1_num(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if ((_57823_txt[0LL] == '_')) {
		_57838_lit = jule::Str();
		return _57838_lit;
	};
	_57838_lit=_1ba1e89bd_hexNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1ba1e8726_octalNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1ba1e7170_binaryNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1ba1e6dc8_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57838_lit.len();
	return _57838_lit;
}



inline jule::Str _1ba1ebbbe_escapeSeq(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a58b8944:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a58b89aa:;
			{
				_60117_seq=_1ba1e90a6_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a58b8515:;
			{
				_60117_seq=_1ba1e9370_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a58b857b:;
			{
				_60117_seq=_1ba1e9529_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1a58b7c51:;
			{
				_60117_seq=_1ba1e97b0_byteEscape(_60029_txt);
			}
		}
		_match_end_1a58b83c2:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_1ba1ea53b_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;
}



inline jule::Str _1ba1ec076_getRune(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _1ba1ebbbe_escapeSeq(&(*_self_), _63027_txt);
	};
	jule::I32 _63414_r;;
	jule::I64 _63417_n;;
	std::tie(_63414_r,_63417_n) = _1b9d0b2a1_DecodeRune(_63027_txt);
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);
}



inline jule::Str _1ba1ec384_lexRune(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1a58c0a5b;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_1ba1ea53b_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1ba1eca38_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _1ba1ec076_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_1b9d0ce95_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1a58c0a5b;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1a58c0a5b:;
	}
	_iter_end_1a58c0a5b:;;
	if ((_64217_n == 0LL)) {
		_1ba1ea53b_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1ba1ea53b_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;
}



inline jule::Str _1ba1ec5e8_lexStr(_1ba1e9e97_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1a58c7139;
			};
			if ((_68717_ch == '\n')) {
				_1ba1eca38_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_1ba1ea53b_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _1ba1ec076_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_1b9d0ce95_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1a58c7139;
			};
		}
	_iter_next_1a58c7139:;
	}
	_iter_end_1a58c7139:;;
	return _67917_s;
}



inline jule::Bool _1ba1ec85c_isFirstTokenOfLine(_1ba1e9e97_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1ba1eca38_newLine(_1ba1e9e97_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1ba1ed033_isOp(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_1ba1dbeab_Token>& _72066_t) {
	if ((!(_1ba1e5536_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;
}



inline jule::Bool _1ba1ed3da_lexBasicOps(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1ba1dbeab_Token>& _73048_tok) {
	{
		auto &expr = _1ba1e4bb7_basicOps;
		auto it = expr.begin();
		_iter_begin_1a58cd97b:;
		if (it != expr.end()) {
			_1ba1e439d_kindPair &_73116_pair = *it;
			{
				if (_1ba1ed033_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;
				};
			}
			_iter_next_1a58cd97b:;
			++it;
			goto _iter_begin_1a58cd97b;
		}
		_iter_end_1a58cd97b:;
	};
	return false;
}



inline jule::Bool _1ba1ed792_lexId(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_1ba1dbeab_Token>& _74043_t) {
	jule::Str _74113_lex = _1ba1ead44_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1ba1edb49_lexNum(_1ba1e9e97_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_1ba1dbeab_Token>& _75044_t) {
	jule::Str _75113_lex = _1ba1eb8b1_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1ba1dbeab_Token> _1ba1eddad_token(_1ba1e9e97_lex* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _76217_t = jule::new_ptr<_1ba1dbeab_Token>(_1ba1dbeab_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1ba1eb0a8_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1ba1edb49_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1a58d58b7:;
			{
				goto _match_end_1a58d4388;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1a58d5114:;
			{
				_76217_t.get()._field_Kind=_1ba1ec384_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1a58d517a:;
			{
				_76217_t.get()._field_Kind=_1ba1ec5e8_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (_1ba1e5536_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1a58d51e1:;
			{
				_1ba1eb32d_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_1ba1e5536_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1a58d5d18:;
			{
				_1ba1eb5a3_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_1ba1ed033_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1ba1ed033_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1ba1ed033_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1ba1ed033_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1ba1ed033_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1ba1ed033_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1ba1ed3da_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1a58d5d7e:;
			{
				goto _match_end_1a58d4388;
			}
		}
		else if (_1ba1ed792_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1a58d5de5:;
			{
				{
					auto &expr = _1ba1e4832_keywords;
					auto it = expr.begin();
					_iter_begin_1a58db68c:;
					if (it != expr.end()) {
						_1ba1e439d_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1a58db68c;
							};
						}
						_iter_next_1a58db68c:;
						++it;
						goto _iter_begin_1a58db68c;
					}
					_iter_end_1a58db68c:;
				};
			}
		}
		else {
			_case_begin_1a58d44cb:;
			{
				jule::I32 _81218_r;;
				jule::I64 _81221_sz;;
				std::tie(_81218_r,_81221_sz) = _1b9d0b2a1_DecodeRune(_76713_txt);
				_1ba1ea53b_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;
			}
		}
		_match_end_1a58d4388:;
	};
	(*_self_)._field_column+=_1b9d0ce95_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba1e9e97_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a30c48a0_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a30c562b_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a30c5a27_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3109462_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3109d8b_IsPrim(_1a3109a28_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3109a28_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310a177_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310a52e_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310a81a_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310ac16_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310b002_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a310b640_IsUnsafe(_1a310b2dd_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a310b2dd_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a310bd49_AutoSized(_1a310b970_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a310b970_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310c1bd_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310c575_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310d983_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310dc6e_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310e324_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a310e610_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a310ed19_IsNil(_1a310e9b7_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a310e9b7_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31101c1_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3110578_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3110d4d_IsSelf(_1a31109eb_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1a31109eb_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3111205_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31115ac_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3111964_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3111d1b_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a311228e_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3112712_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a31130b4_Unhandled(_1a3112c51_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _1a3113328_Ignored(_1a3112c51_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3112c51_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3113a32_IsTargeted(_1a31136d0_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a31136d0_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3113e2d_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3114a22_IsEmpty(_1a31143a1_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1a31143a1_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3114db8_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a311568d_IsEmpty(_1a311533b_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1a311533b_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3115bcc_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31162d7_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31165c3_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3116a46_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3116ded_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31172a5_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3117591_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3117b9b_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31181da_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3119175_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3119780_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a311a2b9_IsSelf(_1a3119e56_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1a311a52d_IsRef(_1a3119e56_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3119e56_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3121435_IsAnon(_1a31210d3_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1a31210d3_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31220b2_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3122469_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3122e2b_IsInf(_1a3122ac9_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3122ac9_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3123701_IsWhileNext(_1a312339e_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a312339e_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3123c40_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31240e7_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a312449e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3124922_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3124cc9_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a312524c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3125923_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3125d96_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a312656c_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3126d0e_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a31275d4_AutoExpr(_1a3127282_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3127282_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a312833d_DefaultTyped(_1a3127caa_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3127caa_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31287b1_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31289ae_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a312900e_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a312986c_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3129e77_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a312a8e5_IsTraitImpl(_1a312a582_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1a312ab59_IsStructImpl(_1a312a582_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a312a582_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a31618e8_Const> static__1a31b6970_NewI64(jule::I64 _1322_x) {
	return jule::new_ptr<_1a31618e8_Const>(_1a31618e8_Const{._field_data=jule::Any(_1322_x)});
}



inline jule::Ptr<_1a31618e8_Const> static__1a31b6aa2_NewU64(jule::U64 _1622_x) {
	return jule::new_ptr<_1a31618e8_Const>(_1a31618e8_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_1a31618e8_Const> static__1a31b6c39_NewBool(jule::Bool _1923_x) {
	return jule::new_ptr<_1a31618e8_Const>(_1a31618e8_Const{._field_data=jule::Any(_1923_x)});
}



inline jule::Ptr<_1a31618e8_Const> static__1a31b6ed1_NewStr(jule::Str _2222_x) {
	return jule::new_ptr<_1a31618e8_Const>(_1a31618e8_Const{._field_data=jule::Any(_2222_x)});
}



inline jule::Ptr<_1a31618e8_Const> static__1a31b7278_NewF64(jule::F64 _2522_x) {
	return jule::new_ptr<_1a31618e8_Const>(_1a31618e8_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_1a31618e8_Const> static__1a31b7476_NewNil(void) {
	return jule::new_ptr<_1a31618e8_Const>(_1a31618e8_Const{._field_data=nullptr});
}



inline jule::I64 _1a31b7a70_ReadI64(_1a31618e8_Const* _self_) {
	if ((!(_1a31b9e18_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1a31b7cd4_ReadU64(_1a31618e8_Const* _self_) {
	if ((!(_1a31ba17c_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1a31b8048_ReadBool(_1a31618e8_Const* _self_) {
	if ((!(_1a31ba3e1_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1a31b82ac_ReadStr(_1a31618e8_Const* _self_) {
	if ((!(_1a31ba655_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1a31b8521_ReadF64(_1a31618e8_Const* _self_) {
	if ((!(_1a31ba8b9_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1a31b8785_AsI64(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a595024a:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a59502b1:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a594eb0c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a594ea63:;
			{
				return 0LL;
			}
		}
		_match_end_1a594ea0d:;
	};
}



inline jule::U64 _1a31b89e9_AsU64(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a5951d73:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a5951dd9:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a5951845:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a5950415:;
			{
				return 0LLU;
			}
		}
		_match_end_1a59512c3:;
	};
}



inline jule::F64 _1a31b8c5d_AsF64(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a595399b:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a5953a12:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a595344b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1a5951bdb:;
			{
				return 0LL;
			}
		}
		_match_end_1a59531a4:;
	};
}



inline void _1a31b8ed3_SetI64(_1a31618e8_Const* _self_, jule::I64 _13525_x) {
	(*_self_)._field_data=jule::Any(_13525_x);
}



inline void _1a31b9258_SetU64(_1a31618e8_Const* _self_, jule::U64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _1a31b94cd_SetBool(_1a31618e8_Const* _self_, jule::Bool _14126_x) {
	(*_self_)._field_data=jule::Any(_14126_x);
}



inline void _1a31b9753_SetStr(_1a31618e8_Const* _self_, jule::Str _14425_x) {
	(*_self_)._field_data=jule::Any(_14425_x);
}



inline void _1a31b99c8_SetF64(_1a31618e8_Const* _self_, jule::F64 _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _1a31b9ba4_SetNil(_1a31618e8_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1a31b9e18_IsI64(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a59579a0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a5957906:;
			{
				return false;
			}
		}
		_match_end_1a59578a1:;
	};
}



inline jule::Bool _1a31ba17c_IsU64(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a59585b6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a595830d:;
			{
				return false;
			}
		}
		_match_end_1a5958077:;
	};
}



inline jule::Bool _1a31ba3e1_IsBool(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a5959144:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a5958d8b:;
			{
				return false;
			}
		}
		_match_end_1a5958b27:;
	};
}



inline jule::Bool _1a31ba655_IsStr(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a5959bc2:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a5959919:;
			{
				return false;
			}
		}
		_match_end_1a59596a5:;
	};
}



inline jule::Bool _1a31ba8b9_IsF64(_1a31618e8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a595a750:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a595a497:;
			{
				return false;
			}
		}
		_match_end_1a595a233:;
	};
}



inline jule::Bool _1a31bab2d_IsNil(_1a31618e8_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1a31bae3b_AreSameTypes(_1a31618e8_Const* _self_, _1a31618e8_Const _21027_x) {
	{
		
		if ((_1a31b9e18_IsI64(&(*_self_)) == _1a31b9e18_IsI64(&_21027_x))) {
			_case_begin_1a595c19c:;
			{
				return true;
			}
		}
		else if ((_1a31ba17c_IsU64(&(*_self_)) == _1a31ba17c_IsU64(&_21027_x))) {
			_case_begin_1a595b92c:;
			{
				return true;
			}
		}
		else if ((_1a31ba8b9_IsF64(&(*_self_)) == _1a31ba8b9_IsF64(&_21027_x))) {
			_case_begin_1a595b9a4:;
			{
				return true;
			}
		}
		else if ((_1a31ba3e1_IsBool(&(*_self_)) == _1a31ba3e1_IsBool(&_21027_x))) {
			_case_begin_1a595ba2b:;
			{
				return true;
			}
		}
		else if ((_1a31ba655_IsStr(&(*_self_)) == _1a31ba655_IsStr(&_21027_x))) {
			_case_begin_1a595baa3:;
			{
				return true;
			}
		}
		else if ((_1a31bab2d_IsNil(&(*_self_)) == _1a31bab2d_IsNil(&_21027_x))) {
			_case_begin_1a595bd4a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a595b8b6:;
			{
				return false;
			}
		}
		_match_end_1a595b7d9:;
	};
}



inline jule::Bool _1a31bb249_And(_1a31618e8_Const* _self_, _1a31618e8_Const _23518_x) {
	{
		
		if ((_1a31ba3e1_IsBool(&(*_self_)) && _1a31ba3e1_IsBool(&_23518_x))) {
			_case_begin_1a5960821:;
			{
				return (_1a31b8048_ReadBool(&(*_self_)) && _1a31b8048_ReadBool(&_23518_x));
			}
		}
		else {
			_case_begin_1a5960106:;
			{
				return false;
			}
		}
		_match_end_1a595eaea:;
	};
}



inline jule::Bool _1a31bb557_Or(_1a31618e8_Const* _self_, _1a31618e8_Const _24617_x) {
	{
		
		if ((_1a31ba3e1_IsBool(&(*_self_)) && _1a31ba3e1_IsBool(&_24617_x))) {
			_case_begin_1a5961d1c:;
			{
				return (_1a31b8048_ReadBool(&(*_self_)) || _1a31b8048_ReadBool(&_24617_x));
			}
		}
		else {
			_case_begin_1a5960c1c:;
			{
				return false;
			}
		}
		_match_end_1a5960b40:;
	};
}



inline jule::Bool _1a31bb865_Eq(_1a31618e8_Const* _self_, _1a31618e8_Const _25717_x) {
	{
		
		if (_1a31bab2d_IsNil(&(*_self_))) {
			_case_begin_1a596336d:;
			{
				return _1a31bab2d_IsNil(&_25717_x);
			}
		}
		else if (_1a31ba3e1_IsBool(&(*_self_))) {
			_case_begin_1a5962b42:;
			{
				return (_1a31ba3e1_IsBool(&_25717_x) && (_1a31b8048_ReadBool(&(*_self_)) == _1a31b8048_ReadBool(&_25717_x)));
			}
		}
		else if (_1a31ba655_IsStr(&(*_self_))) {
			_case_begin_1a5962ba8:;
			{
				return (_1a31ba655_IsStr(&_25717_x) && (_1a31b82ac_ReadStr(&(*_self_)) == _1a31b82ac_ReadStr(&_25717_x)));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a5962c1e:;
			{
				return (_1a31b7a70_ReadI64(&(*_self_)) == _1a31b8785_AsI64(&_25717_x));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5962c96:;
			{
				return (_1a31b7cd4_ReadU64(&(*_self_)) == _1a31b89e9_AsU64(&_25717_x));
			}
		}
		else if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a596303d:;
			{
				return (_1a31b8521_ReadF64(&(*_self_)) == _1a31b8c5d_AsF64(&_25717_x));
			}
		}
		else {
			_case_begin_1a5962218:;
			{
				return false;
			}
		}
		_match_end_1a596213b:;
	};
}



inline jule::Bool _1a31bbb73_Lt(_1a31618e8_Const* _self_, _1a31618e8_Const _28417_x) {
	{
		
		if (_1a31ba655_IsStr(&(*_self_))) {
			_case_begin_1a596784a:;
			{
				return (_1a31ba655_IsStr(&_28417_x) && (_1a31b82ac_ReadStr(&(*_self_)) < _1a31b82ac_ReadStr(&_28417_x)));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a59671eb:;
			{
				return (_1a31b7a70_ReadI64(&(*_self_)) < _1a31b8785_AsI64(&_28417_x));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5967262:;
			{
				return (_1a31b7cd4_ReadU64(&(*_self_)) < _1a31b89e9_AsU64(&_28417_x));
			}
		}
		else if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a59672c8:;
			{
				return (_1a31b8521_ReadF64(&(*_self_)) < _1a31b8c5d_AsF64(&_28417_x));
			}
		}
		else {
			_case_begin_1a59636e2:;
			{
				return false;
			}
		}
		_match_end_1a5963637:;
	};
}



inline jule::Bool _1a31bbe81_LtEq(_1a31618e8_Const* _self_, _1a31618e8_Const _30719_x) {
	{
		
		if (_1a31ba655_IsStr(&(*_self_))) {
			_case_begin_1a596ab39:;
			{
				return (_1a31ba655_IsStr(&_30719_x) && (_1a31b82ac_ReadStr(&(*_self_)) <= _1a31b82ac_ReadStr(&_30719_x)));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a596a4da:;
			{
				return (_1a31b7a70_ReadI64(&(*_self_)) <= _1a31b8785_AsI64(&_30719_x));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a596a551:;
			{
				return (_1a31b7cd4_ReadU64(&(*_self_)) <= _1a31b89e9_AsU64(&_30719_x));
			}
		}
		else if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a596a5b7:;
			{
				return (_1a31b8521_ReadF64(&(*_self_)) <= _1a31b8c5d_AsF64(&_30719_x));
			}
		}
		else {
			_case_begin_1a5967a7b:;
			{
				return false;
			}
		}
		_match_end_1a596799e:;
	};
}



inline jule::Bool _1a31bc28e_Gt(_1a31618e8_Const* _self_, _1a31618e8_Const _33017_x) {
	{
		
		if (_1a31ba655_IsStr(&(*_self_))) {
			_case_begin_1a596de28:;
			{
				return (_1a31ba655_IsStr(&_33017_x) && (_1a31b82ac_ReadStr(&(*_self_)) > _1a31b82ac_ReadStr(&_33017_x)));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a596d7c9:;
			{
				return (_1a31b7a70_ReadI64(&(*_self_)) > _1a31b8785_AsI64(&_33017_x));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a596d840:;
			{
				return (_1a31b7cd4_ReadU64(&(*_self_)) > _1a31b89e9_AsU64(&_33017_x));
			}
		}
		else if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a596d8a6:;
			{
				return (_1a31b8521_ReadF64(&(*_self_)) > _1a31b8c5d_AsF64(&_33017_x));
			}
		}
		else {
			_case_begin_1a596ad6a:;
			{
				return false;
			}
		}
		_match_end_1a596ac8d:;
	};
}



inline jule::Bool _1a31bc59c_GtEq(_1a31618e8_Const* _self_, _1a31618e8_Const _35319_x) {
	{
		
		if (_1a31ba655_IsStr(&(*_self_))) {
			_case_begin_1a5972217:;
			{
				return (_1a31ba655_IsStr(&_35319_x) && (_1a31b82ac_ReadStr(&(*_self_)) >= _1a31b82ac_ReadStr(&_35319_x)));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a5971ab8:;
			{
				return (_1a31b7a70_ReadI64(&(*_self_)) >= _1a31b8785_AsI64(&_35319_x));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5971b2e:;
			{
				return (_1a31b7cd4_ReadU64(&(*_self_)) >= _1a31b89e9_AsU64(&_35319_x));
			}
		}
		else if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a5971b95:;
			{
				return (_1a31b8521_ReadF64(&(*_self_)) >= _1a31b8c5d_AsF64(&_35319_x));
			}
		}
		else {
			_case_begin_1a596e159:;
			{
				return false;
			}
		}
		_match_end_1a596e07c:;
	};
}



inline jule::Bool _1a31bc8aa_Add(_1a31618e8_Const* _self_, _1a31618e8_Const _37422_x) {
	{
		
		if (_1a31ba655_IsStr(&(*_self_))) {
			_case_begin_1a5975506:;
			{
				if ((!(_1a31ba655_IsStr(&_37422_x)))) {
					return false;
				};
				_1a31b9753_SetStr(&(*_self_), (_1a31b82ac_ReadStr(&(*_self_)) + _1a31b82ac_ReadStr(&_37422_x)));
			}
		}
		else if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a5974da7:;
			{
				_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8521_ReadF64(&(*_self_)) + _1a31b8c5d_AsF64(&_37422_x))));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a5974e1d:;
			{
				if (_1a31ba8b9_IsF64(&_37422_x)) {
					_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8c5d_AsF64(&(*_self_)) + _1a31b8521_ReadF64(&_37422_x))));
				} else {
					_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_1a31b7a70_ReadI64(&(*_self_)) + _1a31b8785_AsI64(&_37422_x))));
				};
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5974e84:;
			{
				if (_1a31ba8b9_IsF64(&_37422_x)) {
					_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8c5d_AsF64(&(*_self_)) + _1a31b8521_ReadF64(&_37422_x))));
				} else {
					_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>((_1a31b7cd4_ReadU64(&(*_self_)) + _1a31b89e9_AsU64(&_37422_x))));
				};
			}
		}
		else {
			_case_begin_1a5972448:;
			{
				return false;
			}
		}
		_match_end_1a597236b:;
	};
	return true;
}



inline jule::Bool _1a31bcbb8_Sub(_1a31618e8_Const* _self_, _1a31618e8_Const _40322_x) {
	{
		
		if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a597b265:;
			{
				_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8521_ReadF64(&(*_self_)) - _1a31b8c5d_AsF64(&_40322_x))));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a597aa28:;
			{
				if (_1a31ba8b9_IsF64(&_40322_x)) {
					_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8c5d_AsF64(&(*_self_)) - _1a31b8521_ReadF64(&_40322_x))));
				} else {
					_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_1a31b7a70_ReadI64(&(*_self_)) - _1a31b8785_AsI64(&_40322_x))));
				};
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a597aa8e:;
			{
				if (_1a31ba8b9_IsF64(&_40322_x)) {
					_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8c5d_AsF64(&(*_self_)) - _1a31b8521_ReadF64(&_40322_x))));
				} else {
					_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>((_1a31b7cd4_ReadU64(&(*_self_)) - _1a31b89e9_AsU64(&_40322_x))));
				};
			}
		}
		else {
			_case_begin_1a597a9b2:;
			{
				return false;
			}
		}
		_match_end_1a597a0bb:;
	};
	return true;
}



inline jule::Bool _1a31bcec6_Mul(_1a31618e8_Const* _self_, _1a31618e8_Const _42722_x) {
	{
		
		if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a5980d5d:;
			{
				_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8521_ReadF64(&(*_self_)) * _1a31b8c5d_AsF64(&_42722_x))));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a5980665:;
			{
				if (_1a31ba8b9_IsF64(&_42722_x)) {
					_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8c5d_AsF64(&(*_self_)) * _1a31b8521_ReadF64(&_42722_x))));
				} else {
					_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_1a31b7a70_ReadI64(&(*_self_)) * _1a31b8785_AsI64(&_42722_x))));
				};
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a59806cb:;
			{
				if (_1a31ba8b9_IsF64(&_42722_x)) {
					_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>((_1a31b8c5d_AsF64(&(*_self_)) * _1a31b8521_ReadF64(&_42722_x))));
				} else {
					_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>((_1a31b7cd4_ReadU64(&(*_self_)) * _1a31b89e9_AsU64(&_42722_x))));
				};
			}
		}
		else {
			_case_begin_1a59805ee:;
			{
				return false;
			}
		}
		_match_end_1a597ea3d:;
	};
	return true;
}



inline jule::Bool _1a31bd2d4_Div(_1a31618e8_Const* _self_, _1a31618e8_Const _45522_x) {
	{
		
		if (_1a31ba8b9_IsF64(&(*_self_))) {
			_case_begin_1a5985978:;
			{
				jule::F64 _45817_l = _1a31b8c5d_AsF64(&_45522_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1a31b8521_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a5985280:;
			{
				jule::F64 _46417_l = _1a31b8c5d_AsF64(&_45522_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1a31b8c5d_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a59852e6:;
			{
				jule::F64 _47017_l = _1a31b8c5d_AsF64(&_45522_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1a31b99c8_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1a31b8c5d_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1a5985219:;
			{
				return false;
			}
		}
		_match_end_1a5984658:;
	};
	return true;
}



inline jule::Bool _1a31bd5e2_Mod(_1a31618e8_Const* _self_, _1a31618e8_Const _48422_x) {
	{
		
		if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a598a4d8:;
			{
				jule::I64 _48717_l = _1a31b8785_AsI64(&_48422_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1a31b7a70_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5989cac:;
			{
				jule::U64 _49317_l = _1a31b89e9_AsU64(&_48422_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1a31b7cd4_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1a5989c46:;
			{
				return false;
			}
		}
		_match_end_1a5989b69:;
	};
	return true;
}



inline jule::Bool _1a31bd900_BitwiseAnd(_1a31618e8_Const* _self_, _1a31618e8_Const _50629_x) {
	{
		
		if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a598da08:;
			{
				_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_1a31b7a70_ReadI64(&(*_self_)) & _1a31b8785_AsI64(&_50629_x))));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a598d2cc:;
			{
				_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>((_1a31b7cd4_ReadU64(&(*_self_)) & _1a31b89e9_AsU64(&_50629_x))));
			}
		}
		else {
			_case_begin_1a598d266:;
			{
				return false;
			}
		}
		_match_end_1a598d189:;
	};
	return true;
}



inline jule::Bool _1a31bdc0d_BitwiseOr(_1a31618e8_Const* _self_, _1a31618e8_Const _52028_x) {
	{
		
		if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a5990d3a:;
			{
				_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_1a31b7a70_ReadI64(&(*_self_)) | _1a31b8785_AsI64(&_52028_x))));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a599060e:;
			{
				_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>((_1a31b7cd4_ReadU64(&(*_self_)) | _1a31b89e9_AsU64(&_52028_x))));
			}
		}
		else {
			_case_begin_1a5990598:;
			{
				return false;
			}
		}
		_match_end_1a59904bb:;
	};
	return true;
}



inline jule::Bool _1a31be01b_Xor(_1a31618e8_Const* _self_, _1a31618e8_Const _53422_x) {
	{
		
		if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a599316c:;
			{
				_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_1a31b7a70_ReadI64(&(*_self_)) ^ _1a31b8785_AsI64(&_53422_x))));
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5992941:;
			{
				_1a31b9258_SetU64(&(*_self_), static_cast<jule::U64>((_1a31b7cd4_ReadU64(&(*_self_)) ^ _1a31b89e9_AsU64(&_53422_x))));
			}
		}
		else {
			_case_begin_1a59928ca:;
			{
				return false;
			}
		}
		_match_end_1a59927ed:;
	};
	return true;
}



inline jule::Bool _1a31be329_Lshift(_1a31618e8_Const* _self_, _1a31618e8_Const _54825_x) {
	{
		
		if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a599549e:;
			{
				jule::I64 _55117_l = _1a31b8785_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1a31b89e9_AsU64(&_54825_x);;
					_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1a31be99a_lshiftUnsig((*_self_),_54825_x);
				};
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5994c73:;
			{
				_1a31be99a_lshiftUnsig((*_self_),_54825_x);
			}
		}
		else {
			_case_begin_1a5994c0c:;
			{
				return false;
			}
		}
		_match_end_1a5994b30:;
	};
	return true;
}



inline jule::Bool _1a31be637_Rshift(_1a31618e8_Const* _self_, _1a31618e8_Const _56825_x) {
	{
		
		if (_1a31b9e18_IsI64(&(*_self_))) {
			_case_begin_1a599812d:;
			{
				jule::I64 _57117_l = _1a31b8785_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1a31b89e9_AsU64(&_56825_x);;
					_1a31b8ed3_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1a31bec97_rshiftUnsig((*_self_),_56825_x);
				};
			}
		}
		else if (_1a31ba17c_IsU64(&(*_self_))) {
			_case_begin_1a5997902:;
			{
				_1a31bec97_rshiftUnsig((*_self_),_56825_x);
			}
		}
		else {
			_case_begin_1a599788b:;
			{
				return false;
			}
		}
		_match_end_1a59977ae:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31618e8_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a39e1b3a_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a38e393d_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e1c021_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3c84ad1_set(_1a3e1c384_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1a5e81429:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1a5e81490:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1a5e8123c:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1a5e837c2:;
					{
						goto _iter_next_1a5e82eec;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1a5e83849:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1a5e82eec;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1a5e838c1:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1a5e82eec;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1a5e82eec;
					}
				}
				_match_end_1a5e83690:;
			};
			goto _iter_end_1a5e82eec;
		}
	_iter_next_1a5e82eec:;
	}
	_iter_end_1a5e82eec:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1a3a53ce0_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1a5e8b742;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1a5e8b742:;
		}
		_iter_end_1a5e8b742:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1a3903b90_floatBits(_1a3e1c384_decimal* _self_, _1a39e1b3a_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1a39264ed_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1a39264ed_powtab[(*_self_)._field_dp];
			};
			_1a3e1c6a3_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1a5e93590:;
	}
	_iter_end_1a5e93590:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1a39264ed_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1a39264ed_powtab[(-((*_self_)._field_dp))];
			};
			_1a3e1c6a3_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1a5e93b89:;
	}
	_iter_end_1a5e93b89:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1a3e1c6a3_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1a3e1c6a3_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1a3e1cb7b_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _1a3e1c571_assign(_1a3e1c384_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1a5ea24b1:;
	}
	_iter_end_1a5ea24b1:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1a5ea2ba9:;
	}
	_iter_end_1a5ea2ba9:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1a3e1cde0_trim((*_self_));
}



inline void _1a3e1c6a3_shift(_1a3e1c384_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1a5ea52b6:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1a5ea533d:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1a3e1d286_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1a5ea60ca:;
				}
				_iter_end_1a5ea60ca:;;
				_1a3e1d286_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1a5ea53b5:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1a3e1d022_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1a5ea6064:;
				}
				_iter_end_1a5ea6064:;;
				_1a3e1d022_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1a5ea5184:;
	};
}



inline void _1a3e1c7d5_roundDown(_1a3e1c384_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1a3e1cde0_trim((*_self_));
}



inline void _1a3e1c917_roundUp(_1a3e1c384_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1a5ea9cb0:;
	}
	_iter_end_1a5ea9cb0:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1a3e1ca49_round(_1a3e1c384_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1a3e1d3b8_shouldRoundUp((*_self_),_41124_nd)) {
		_1a3e1c917_roundUp(&(*_self_), _41124_nd);
	} else {
		_1a3e1c7d5_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1a3e1cb7b_roundedInteger(_1a3e1c384_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1a5eace4a:;
	}
	_iter_end_1a5eace4a:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1a5eaec82:;
	}
	_iter_end_1a5eaec82:;;
	if (_1a3e1d3b8_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e1c384_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3102306_FieldIns> _1a30cac5d_instance(jule::Ptr<_1a30dc038_Field> _self_) {
	return jule::new_ptr<_1a3102306_FieldIns>(_1a3102306_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1a30dc038_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a30eb5b9_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a312ad46_StructIns> _1a30d1d52_instance(jule::Ptr<_1a30e9b8e_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_1a312ad46_StructIns> _9917_ins = jule::new_ptr<_1a312ad46_StructIns>(_1a312ad46_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a3102306_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a3e59e4e_Var>>::alloc(0LL,_self_.get()._field_Statics.len()), ._field_Refers=static__1a31cda31_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1a62a0b88:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1a3e59e4e_Var>((*(_10621_s))));;
			}
			_iter_next_1a62a0b88:;
			++it;
			goto _iter_begin_1a62a0b88;
		}
		_iter_end_1a62a0b88:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a62a1d32:;
		if (it != expr.end()) {
			jule::Ptr<_1a30dc038_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1a30cac5d_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1a3ed0106_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1a62a1d32:;
			++it;
			goto _iter_begin_1a62a1d32;
		}
		_iter_end_1a62a1d32:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1a62a4340:;
			if (it != expr.end()) {
				jule::Ptr<_1a31c7bc3_Fn> _12125_f = *it;
				{
					jule::Ptr<_1a31c7bc3_Fn> _12225_fins = jule::new_ptr<_1a31c7bc3_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1a62a4340:;
				++it;
				goto _iter_begin_1a62a4340;
			}
			_iter_end_1a62a4340:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1a312ad46_StructIns> _1a30d60ba_appendInstance(_1a30e9b8e_Struct* _self_, jule::Ptr<_1a312ad46_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a62a6e47:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _13921_ains = *it;
			{
				if (_1a30eed3c_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;
				};
			}
			_iter_next_1a62a6e47:;
			++it;
			goto _iter_begin_1a62a6e47;
		}
		_iter_end_1a62a6e47:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a30d8d6a_FindMethod(_1a30e9b8e_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a62a86eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;
				};
			}
			_iter_next_1a62a86eb:;
			++it;
			goto _iter_begin_1a62a86eb;
		}
		_iter_end_1a62a86eb:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a30d9d7c_FindStatic(_1a30e9b8e_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1a62a9851:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;
				};
			}
			_iter_next_1a62a9851:;
			++it;
			goto _iter_begin_1a62a9851;
		}
		_iter_end_1a62a9851:;
	};
	return nullptr;
}



inline jule::Ptr<_1a30dc038_Field> _1a30d92bb_FindField(_1a30e9b8e_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a62a9db2:;
		if (it != expr.end()) {
			jule::Ptr<_1a30dc038_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;
				};
			}
			_iter_next_1a62a9db2:;
			++it;
			goto _iter_begin_1a62a9db2;
		}
		_iter_end_1a62a9db2:;
	};
	return nullptr;
}



inline jule::Bool _1a30db6b9_IsImplements(_1a30e9b8e_Struct* _self_, jule::Ptr<_1a31d9a81_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1a62aadd5:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;
				};
			}
			_iter_next_1a62aadd5:;
			++it;
			goto _iter_begin_1a62aadd5;
		}
		_iter_end_1a62aadd5:;
	};
	return false;
}



inline jule::Bool _1a30da9a4_IsDerives(_1a30e9b8e_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1a62ac0c3:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;
					};
				};
			}
			_iter_next_1a62ac0c3:;
			++it;
			goto _iter_begin_1a62ac0c3;
		}
		_iter_end_1a62ac0c3:;
	};
	return false;
}



inline jule::Bool _1a30de997_IsUses(_1a30e9b8e_Struct* _self_, jule::Ptr<_1a30e9b8e_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1a62ae823:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;
					}
				_iter_next_1a62b00e8:;
				}
				_iter_end_1a62b00e8:;;
			}
			_iter_next_1a62ae823:;
			++it;
			goto _iter_begin_1a62ae823;
		}
		_iter_end_1a62ae823:;
	};
	return false;
}



inline jule::Bool _1a30e015c_HasRefAccessible(_1a30e9b8e_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a62b05d2:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _1a31c6c27_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1a62b05d2:;
			++it;
			goto _iter_begin_1a62b05d2;
		}
		_iter_end_1a62b05d2:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a30e9b8e_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3102306_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31bee0c_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c00e9_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c02d6_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c04c3_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c06b0_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c089c_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c0a89_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c0c76_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c0e63_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c1150_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c133c_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c1529_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c1716_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c1903_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c1ae0_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c200d_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c21ea_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c23d7_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c25c4_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c27b1_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c299d_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c2b8a_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c2d77_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c3064_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c3251_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c343d_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c362a_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c3817_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c3a04_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c3be1_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c3dcd_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c1ccc_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c453d_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c472a_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c4917_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c4b04_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c4ce1_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c4ecd_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c51ba_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c5b6b_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a31c99a5_ParamIns> _1a31c674e_instance(jule::Ptr<_1a31c6386_Param> _self_) {
	return jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _1a31c69b3_IsSelf(_1a31c6386_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1a31c6c27_IsRef(_1a31c6386_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c6386_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a31c8135_IsVoid(_1a31c7bc3_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _1a31c8399_IsMethod(_1a31c7bc3_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _1a31c860d_IsEntryPoint(_1a31c7bc3_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _1a31c8872_IsInit(_1a31c7bc3_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _1a31c8ad6_IsAnon(_1a31c7bc3_Fn* _self_) {
	return _1ba1de9e7_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _1a31c8d4a_AnyVar(_1a31c7bc3_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_1a31ca874_FnIns> _1a31c90ae_instanceForce(jule::Ptr<_1a31c7bc3_Fn> _self_) {
	jule::Ptr<_1a31ca874_FnIns> _10017_ins = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a3e21344_Scope>(), ._field_Refers=static__1a31cda31_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a62c5471:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c6386_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1a31c674e_instance(_10721_p));;
			}
			_iter_next_1a62c5471:;
			++it;
			goto _iter_begin_1a62c5471;
		}
		_iter_end_1a62c5471:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1a31ca874_FnIns> _1a31c9323_instance(jule::Ptr<_1a31c7bc3_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _1a31c90ae_instanceForce(_self_);
}



inline jule::Ptr<_1a31ca874_FnIns> _1a31c95ed_appendInstance(_1a31c7bc3_Fn* _self_, jule::Ptr<_1a31ca874_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a62ca6a7:;
		if (it != expr.end()) {
			jule::Ptr<_1a31ca874_FnIns> _14421_ains = *it;
			{
				if (_1a31cc27c_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1a62ca6a7:;
			++it;
			goto _iter_begin_1a62ca6a7;
		}
		_iter_end_1a62ca6a7:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c7bc3_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a31c9d7e_Str(_1a31c99a5_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1a31c69b3_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1a31c6c27_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1a3ece105_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31c99a5_ParamIns _Src) {
	_Stream << _1a31c9d7e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a31caba4_Str(_1a31ca874_FnIns* _self_) {
	;
	return _1a31cc58a_GetKindStr(&(*_self_), false);
}



inline jule::Bool _1a31caeb2_Equals(jule::Ptr<_1a31ca874_FnIns> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _21722_other) {
	jule::Ptr<_1a31ca874_FnIns> _21813_f = _1a3ed2009_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1a31cb424_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _1a31cb424_EqualsFn(jule::Ptr<_1a31ca874_FnIns> _self_, jule::Ptr<_1a31ca874_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_1a31c8135_IsVoid(_self_.get()._field_Decl.ptr()) != _1a31c8135_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1a31c99a5_ParamIns>,jule::Ptr<_1a31c99a5_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1a31c99a5_ParamIns>,jule::Ptr<_1a31c99a5_ParamIns>)>([=](jule::Ptr<_1a31c99a5_ParamIns> _23830_p1, jule::Ptr<_1a31c99a5_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_1a31c69b3_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1a31c69b3_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_1a31c6c27_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1a31c6c27_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _1a3ece413_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1a62d9265:;
	}
	_iter_end_1a62d9265:;;
	if ((!(_1a31c8135_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1a3ece413_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1a31cb732_equalsTrait(jule::Ptr<_1a31ca874_FnIns> _self_, jule::Ptr<_1a31ca874_FnIns>& _28728_other) {
	if ((!(_1a31cb424_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _1a31cb996_Types(_1a31ca874_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1a62dd3ac:;
			{
				return nullptr;
			}
		}
		else if ((_1a3ed29aa_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1a62dcbd6:;
			{
				return jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1a62dcb70:;
			{
				return _1a3ed29aa_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1a62dcab5:;
	};
}



inline jule::Bool _1a31cbc0a_IsBuiltin(_1a31ca874_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1a31cbe6e_IsAnon(_1a31ca874_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1a31c8ad6_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _1a31cc27c_Same(_1a31ca874_FnIns* _self_, jule::Ptr<_1a31ca874_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a62e18bb:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1a3ecc4cc_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1a3ece413_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1a62e18bb:;
			++it;
			_32913_i++;
			goto _iter_begin_1a62e18bb;
		}
		_iter_end_1a62e18bb:;
	};
	return true;
}



inline jule::Str _1a31cc58a_GetKindStr(_1a31ca874_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1a62e5a57:;
			if (it != expr.end()) {
				jule::Ptr<_1a31c99a5_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1a31c9d7e_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1a62e5a57:;
				++it;
				goto _iter_begin_1a62e5a57;
			}
			_iter_end_1a62e5a57:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1a31c8135_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1a3ece105_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31ca874_FnIns _Src) {
	_Stream << _1a31caba4_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a31cd745_ReferenceStack> static__1a31cda31_new(void) {
	return jule::new_ptr<_1a31cd745_ReferenceStack>(_1a31cd745_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1a31cddb6_Len(_1a31cd745_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1a31ce1c4_At(_1a31cd745_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _1a31ce449_Push(_1a31cd745_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _1a695b84e_Exist(_1a31cd745_ReferenceStack* _self_, jule::Ptr<_1a31ca874_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a695cb91:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1a695cb91:;
			++it;
			goto _iter_begin_1a695cb91;
		}
		_iter_end_1a695cb91:;
	};
	return false;
}

inline jule::Bool _1a6971d81_Exist(_1a31cd745_ReferenceStack* _self_, jule::Ptr<_1a3e59e4e_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a697317e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1a697317e:;
			++it;
			goto _iter_begin_1a697317e;
		}
		_iter_end_1a697317e:;
	};
	return false;
}

inline jule::Bool _1a6a2047e_Exist(_1a31cd745_ReferenceStack* _self_, jule::Ptr<_1a312ad46_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a6a217c1:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1a6a217c1:;
			++it;
			goto _iter_begin_1a6a217c1;
		}
		_iter_end_1a6a217c1:;
	};
	return false;
}

inline jule::Bool _1a6ca7c00_Exist(_1a31cd745_ReferenceStack* _self_, jule::Ptr<_1a31d9a81_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a6ca8ecb:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1a6ca8ecb:;
			++it;
			goto _iter_begin_1a6ca8ecb;
		}
		_iter_end_1a6ca8ecb:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31cd745_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31ceb0e_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a31d40a8_symbolBuilder> _1a31d455e_getRoot(jule::Ptr<_1a31d40a8_symbolBuilder> _self_) {
	jule::Ptr<_1a31d40a8_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1a631501b:;
	}
	_iter_end_1a631501b:;;
	return _31617_root;
}



inline void _1a31d4927_pushErr(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1ba1dbeab_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a3e3a7d1_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _1a31d4ce0_pushErrText(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1ba1dbeab_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a3e3a7d1_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _1a31d510e_pushSuggestion(_1a31d40a8_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1a3e3bc66_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _1a31d54b6_checkCppUseDeclPath(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _1b9d36452_Ext(_33655_path);;
	if (((!(_1b9da59bb_IsValidHeaderExt(_33713_ext))) && (!(_1b9da5c1e_IsValidCppExt(_33713_ext))))) {
		_1a31d4927_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_1d29915b1_Status> _34413_info = ({
		auto except = static__1d299388d_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1a31d4927_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_1d29915b1_Status>();});
	});;
	if (_1d299dc3e_IsDir(_34413_info.ptr())) {
		_1a31d4927_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d5791_buildCppHeaderImport(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_1b9da5889_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1ba1e2c3c_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1a31d54b6_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1b9d366e9_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_1a31d4927_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_1a3e3409e_ImportInfo>(_1a3e3409e_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d5a9e_buildStdImport(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_1b9d3263a_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1b9deb1d7_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1b9d366e9_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_1a31d4927_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1d29915b1_Status> _39513_info = ({
		auto except = static__1d299388d_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1a31d4927_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1d29915b1_Status>();});
	});;
	if ((!(_1d299dc3e_IsDir(_39513_info.ptr())))) {
		_1a31d4927_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_1b9d2ce2c_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1a3e3409e_ImportInfo>(_1a3e3409e_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1a3e37008_Package>(_1a3e37008_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d5dac_buildIdentImport(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a3126d0e_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30595_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1a31d4927_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1a31d510e_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_1b9d3263a_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_1b9d361aa_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1b9d366e9_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_1a31d4927_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1d29915b1_Status> _44213_info = ({
		auto except = static__1d299388d_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1a31d4927_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1d29915b1_Status>();});
	});;
	if ((!(_1d299dc3e_IsDir(_44213_info.ptr())))) {
		_1a31d4927_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_1b9d2ce2c_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1a3e3409e_ImportInfo>(_1a3e3409e_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1a3e37008_Package>(_1a3e37008_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d61ba_buildImport(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a3126d0e_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1a632e8e8:;
			{
				return _1a31d5791_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1a632eba1:;
			{
				return _1a31d5a9e_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1a632e178:;
			{
				return _1a31d5dac_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1a632e09b:;
	};
}



inline jule::Bool _1a31d64c8_checkDuplicateUseDecl(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_1a3e3409e_ImportInfo> _48313_lpkg = _1a3e9d976_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>([=](jule::Ptr<_1a3e3409e_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_1a31d4927_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_1a31d510e_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _1a31d67e7_implImportSelections(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _49544_imp, jule::Ptr<_1a3126d0e_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1a6333875:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1a6334535:;
					if (it != expr.end()) {
						jule::Ptr<_1ba1dbeab_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1a6334535;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1a31d4927_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_1a31d510e_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1a6334535;
							};
						}
						_iter_next_1a6334535:;
						++it;
						goto _iter_begin_1a6334535;
					}
					_iter_end_1a6334535:;
				};
			}
			_iter_next_1a6333875:;
			++it;
			goto _iter_begin_1a6333875;
		}
		_iter_end_1a6333875:;
	};
}



inline jule::Str _1a31d6b05_getAsLinkPath(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1b9d2b8ed_HasPrefix(_51037_path,_1b9deb1d7_PathStdlib)) {
		(_51037_path).mut_slice(_1b9deb1d7_PathStdlib.len());;
		return (jule::Str("std", 3) + _1b9d3263a_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1b9d366e9_Abs(_1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30595_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1b9d3263a_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1a31d6ebd_pushCycleError(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a31d40a8_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _1b9db28eb_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1a31d6b05_getAsLinkPath(_self_, _1ba1e2c3c_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_1a31d6b05_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_1b9d1351c_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1a31d7386_pushCrossCycleError(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a31d40a8_symbolBuilder>& _53340_target, jule::Ptr<_1a3e3409e_ImportInfo>& _53365_imp, jule::Ptr<_1ba1dbeab_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1a31d6ebd_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1a31d40a8_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1a31d40a8_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1a31d6ebd_pushCycleError(_self_, _53917_old.get()._field_owner,_1ba1e2c3c_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1a31d6ebd_pushCycleError(_self_, _53340_target,_1ba1e2c3c_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1a633b62a;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1a633b62a:;
	}
	_iter_end_1a633b62a:;;
	_1a31d4927_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _1a31d773d_checkImportCycles(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a3e3409e_ImportInfo> _55637_imp, jule::Ptr<_1a3126d0e_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1ba1e2c3c_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1a31d4927_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1a31d6b05_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1ba1e2c3c_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1a31d7386_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_1a31d40a8_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1ba1e2c3c_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1a31d7386_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1a31d7b28_checkPackageAccessibility(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1a3e31431_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1a3e30595_GetModPath((*_self_)._field_importer) != _59262_mod) && _1b9d31392_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1a31d4927_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a31d7ee1_importPackage(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _59838_imp, jule::Ptr<_1a3126d0e_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_1a3e3409e_ImportInfo> _60317_port = _1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30bb1_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30595_GetModPath(_self_.get()._field_importer);;
		_1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30353_SetModPath(_self_.get()._field_importer, _1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e308a3_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1a31d7b28_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30353_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1a31d773d_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30595_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30353_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e30353_SetModPath(_self_.get()._field_importer, _1b9deb1d7_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a30c48a0_Ast>> _62222_asts;;
		jule::Slice<_1b9db24ab_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e31068_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_1a31d7b28_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1a634ab34:;
			if (it != expr.end()) {
				jule::Ptr<_1a30c48a0_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1a3e9d14b_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _1a4000379_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_1a31d4ce0_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1a634ab34:;
				++it;
				goto _iter_begin_1a634ab34;
			}
			_iter_end_1a634ab34:;
		};
	};
	_1a31d67e7_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a31d82ee_importUseDecl(jule::Ptr<_1a31d40a8_symbolBuilder> _self_, jule::Ptr<_1a3126d0e_UseDecl>& _65038_decl) {
	jule::Ptr<_1a3e3409e_ImportInfo> _65117_imp = _1a31d61ba_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _1a31d64c8_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_1a31d7ee1_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_1a3e31431_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a3e312dd_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _1a31d84ca_importUseDecls(jule::Ptr<_1a31d40a8_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1a6353961:;
		if (it != expr.end()) {
			jule::Ptr<_1a3126d0e_UseDecl> _67221_decl = *it;
			{
				_1a31d82ee_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a6353961;
				};
			}
			_iter_next_1a6353961:;
			++it;
			goto _iter_begin_1a6353961;
		}
		_iter_end_1a6353961:;
	};
}



inline void _1a31d8750_appendNode(_1a31d40a8_symbolBuilder* _self_, _1a30c562b_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1a312a582_Impl>>()) {
			_case_begin_1a6355446:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1a31d3a58_buildImpl(_68134_node._field_Data.operator jule::Ptr<_1a312a582_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3125923_TypeAliasDecl>>()) {
			_case_begin_1a635416a:;
			{
				jule::Ptr<_1a3ecd016_TypeAlias> _68621_ta = _1a31d04e4_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_1a3125923_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a312986c_StructDecl>>()) {
			_case_begin_1a6355127:;
			{
				jule::Ptr<_1a30e9b8e_Struct> _68921_srct = _1a31d0d52_buildStruct(_68134_node._field_Data.operator jule::Ptr<_1a312986c_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31210d3_FnDecl>>()) {
			_case_begin_1a635518d:;
			{
				jule::Ptr<_1a31c7bc3_Fn> _69221_f = _1a31d19ac_buildFn(_68134_node._field_Data.operator jule::Ptr<_1a31210d3_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3129e77_TraitDecl>>()) {
			_case_begin_1a6355a0c:;
			{
				jule::Ptr<_1a31d9a81_Trait> _69521_t = _1a31d1eeb_buildTrait(_68134_node._field_Data.operator jule::Ptr<_1a3129e77_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31220b2_VarDecl>>()) {
			_case_begin_1a6355a73:;
			{
				jule::Ptr<_1a3e59e4e_Var> _69821_v = _1a31d3519_buildVar(_68134_node._field_Data.operator jule::Ptr<_1a31220b2_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3127caa_EnumDecl>>()) {
			_case_begin_1a6355ad9:;
			{
				jule::Ptr<_1a31dbbc6_Enum> _70121_e = _1a31d27d2_buildEnum(_68134_node._field_Data.operator jule::Ptr<_1a3127caa_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31289ae_TypeEnumDecl>>()) {
			_case_begin_1a6355b50:;
			{
				jule::Ptr<_1a31dd2c1_TypeEnum> _70421_e = _1a31d3272_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_1a31289ae_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_1a6354214:;
			{
				_1a31d4927_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6355017:;
	};
}



inline void _1a31d892b_appendNodes(_1a31d40a8_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1a635dd45:;
		if (it != expr.end()) {
			_1a30c562b_Node _71221_node = *it;
			{
				_1a31d8750_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_1a635dd45:;
			++it;
			goto _iter_begin_1a635dd45;
		}
		_iter_end_1a635dd45:;
	};
}



inline void _1a31d8ba1_pushDirectivePass(_1a31d40a8_symbolBuilder* _self_, jule::Ptr<_1a30c5a27_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_1a31d4927_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1ba1dbeab_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_1a31d4927_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ba1dbeab_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a31d4927_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_1a31d4927_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1a31ceb0e_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1a31d8d7c_appendTopDirectives(_1a31d40a8_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1a63644ee:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a636604a:;
						{
							_1a31d8ba1_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_1a6365c1a:;
				};
			}
			_iter_next_1a63644ee:;
			++it;
			goto _iter_begin_1a63644ee;
		}
		_iter_end_1a63644ee:;
	};
}



inline void _1a31d9058_build(jule::Ptr<_1a31d40a8_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a3e9d14b_SymbolTable>(_1a3e9d14b_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1a31d8d7c_appendTopDirectives(_self_.ptr());
	_1a31d84ca_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1a31d892b_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a31d40a8_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a31d9e7c_Str(_1a31d9a81_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1a31da28a_Equals(jule::Ptr<_1a31d9a81_Trait> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _2522_other) {
	jule::Ptr<_1a31d9a81_Trait> _2613_trt = _1a3ed24d2_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _1a31da5ed_IsBuiltin(_1a31d9a81_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a31da90b_FindMethod(_1a31d9a81_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a636a24c:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1a636a24c:;
			++it;
			goto _iter_begin_1a636a24c;
		}
		_iter_end_1a636a24c:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31d9a81_Trait _Src) {
	_Stream << _1a31d9e7c_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a31db5bb_AutoExpr(_1a31db1d1_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a31db1d1_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a31dc039_Str(_1a31dbbc6_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1a31dc347_Equals(jule::Ptr<_1a31dbbc6_Enum> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _3822_other) {
	jule::Ptr<_1a31dbbc6_Enum> _3913_enm = _1a3ed1558_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1a31db1d1_EnumItem> _1a31dc787_FindItem(_1a31dbbc6_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1a636cd21:;
		if (it != expr.end()) {
			jule::Ptr<_1a31db1d1_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1a636cd21:;
			++it;
			goto _iter_begin_1a636cd21;
		}
		_iter_end_1a636cd21:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31dbbc6_Enum _Src) {
	_Stream << _1a31dc039_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31dcc0a_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a31dd601_Str(_1a31dd2c1_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1a31dd90e_Equals(jule::Ptr<_1a31dd2c1_TypeEnum> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _8022_other) {
	jule::Ptr<_1a31dd2c1_TypeEnum> _8113_tenm = _1a3ed17bc_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1a31dcc0a_TypeEnumItem> _1a31ddd0a_FindItem(_1a31dd2c1_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1a6370186:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dcc0a_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1a6370186:;
			++it;
			goto _iter_begin_1a6370186;
		}
		_iter_end_1a6370186:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a31dd2c1_TypeEnum _Src) {
	_Stream << _1a31dd601_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1a3e3c1ea_Sema>&,jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&)> _1a321645e_readyFn(jule::Ptr<_1a3205e21_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1a3e3c1ea_Sema>&,jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&)>([=](jule::Ptr<_1a3e3c1ea_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1a637d33c:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1a3116a46_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1a3ecc4cc_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1a637d33c;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1a6380d78:;
						if (it != expr.end()) {
							jule::Ptr<_1a3109462_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1a3ecdc09_TypeKind> _7229_kind = _1a3e444ee_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1a3eee697_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_1a3109a28_IdentTypeDecl>>()) {
											_case_begin_1a6382a6c:;
											{
												jule::Ptr<_1a3109a28_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_1a3109a28_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1a324d1bb_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1a63829d4:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1a6380d78:;
							++it;
							goto _iter_begin_1a6380d78;
						}
						_iter_end_1a6380d78:;
					};
				}
				_iter_next_1a637d33c:;
				++it;
				_6418_i++;
				goto _iter_begin_1a637d33c;
			}
			_iter_end_1a637d33c:;
		};
		return true;
	});
}



inline jule::Bool _1a322d498_readyFi(jule::Ptr<_1a3205e21_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1a3e488ee_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1a321645e_readyFn(_self_)));
}



inline jule::Bool _1a3247d42_readySi(jule::Ptr<_1a3205e21_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1a321645e_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _1a3249b8a_ready(jule::Ptr<_1a3205e21_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1a322d498_readyFi(_self_);
	};
	return _1a3247d42_readySi(_self_);
}



inline jule::Bool _1a324ad78_check(jule::Ptr<_1a3205e21_constraintChecker> _self_) {
	if ((!(_1a3249b8a_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a638a080:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1a3ecc4cc_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1a638a080;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1a638acb7:;
					if (it != expr.end()) {
						jule::Ptr<_1a3ecdc09_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1a3ed36d1_Prim> _12425_prim = _1a3ed0d1b_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1a3ed42c5_IsConstraint(_12425_prim.ptr()))) {
								if (_1a324b5c6_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1a638a080;
								};
								goto _iter_next_1a638acb7;
							};
							if (_1a3ece413_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1a638a080;
							};
						}
						_iter_next_1a638acb7:;
						++it;
						goto _iter_begin_1a638acb7;
					}
					_iter_end_1a638acb7:;
				};
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1a638a080:;
			++it;
			_11914_i++;
			goto _iter_begin_1a638a080;
		}
		_iter_end_1a638a080:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3205e21_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a324e3a9_IsTraitImpl(_1a326e41d_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1a324eb07_IsStructImpl(_1a326e41d_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a326e41d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e21344_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e21531_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2171d_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2190a_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e21ae7_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3e21ec1_IsWhileNext(_1a3e21cd4_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e21cd4_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e22103_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e222e0_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e224cc_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e226b9_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e228a6_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e22a93_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e22c80_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e22e6c_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3e23577_IsGenericTypeMatch(_1a3e23159_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e23159_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3e23896_isDefault(_1a3e236a9_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e236a9_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e239c8_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e23bb5_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e23da2_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2408e_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e24468_FindPackage(_1a3e2427b_scopeChecker* _self_, jule::Str _45630_ident) {
	return _1a3e3c717_FindPackage((*_self_)._field_s.ptr(), _45630_ident);
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e2459a_SelectPackage(_1a3e2427b_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _46632_selector) {
	return _1a3e3ca25_SelectPackage((*_self_)._field_s.ptr(), _46632_selector);
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e246cc_FindVar(_1a3e2427b_scopeChecker* _self_, jule::Str _47726_ident, jule::Bool _47738_cpp_linked) {
	;
	jule::Ptr<_1a3e59e4e_Var> _48017_v = _1a3ea08e0_findVar((*_self_)._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1a3e2427b_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1a3ea08e0_findVar(_48517_parent.get()._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1a63b83bb:;
	}
	_iter_end_1a63b83bb:;;
	return _1a3e3cdcc_FindVar((*_self_)._field_s.ptr(), _47726_ident,_47738_cpp_linked);
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e2480e_FindTypeAlias(_1a3e2427b_scopeChecker* _self_, jule::Str _50432_ident, jule::Bool _50444_cppLinked) {
	;
	jule::Ptr<_1a3ecd016_TypeAlias> _50717_ta = _1a3ea0d41_findTypeAlias((*_self_)._field_table.ptr(), _50432_ident,_50444_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1a3e2427b_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1a3ea0d41_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50432_ident,_50444_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1a63bb3e1:;
	}
	_iter_end_1a63bb3e1:;;
	return _1a3e3d284_FindTypeAlias((*_self_)._field_s.ptr(), _50432_ident,_50444_cppLinked);
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3e24941_FindStruct(_1a3e2427b_scopeChecker* _self_, jule::Str _52929_ident, jule::Bool _52941_cppLinked) {
	return _1a3e3d63b_FindStruct((*_self_)._field_s.ptr(), _52929_ident,_52941_cppLinked);
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a3e24a73_FindFn(_1a3e2427b_scopeChecker* _self_, jule::Str _53825_ident, jule::Bool _53837_cppLinked) {
	return _1a3e3d9e3_FindFn((*_self_)._field_s.ptr(), _53825_ident,_53837_cppLinked);
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3e24ba5_FindTrait(_1a3e2427b_scopeChecker* _self_, jule::Str _54728_ident) {
	return _1a3e3dd01_FindTrait((*_self_)._field_s.ptr(), _54728_ident);
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3e24cd7_FindEnum(_1a3e2427b_scopeChecker* _self_, jule::Str _55627_ident) {
	return _1a3e3e10e_FindEnum((*_self_)._field_s.ptr(), _55627_ident);
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e24e19_FindTypeEnum(_1a3e2427b_scopeChecker* _self_, jule::Str _56531_ident) {
	return _1a3e3e41c_FindTypeEnum((*_self_)._field_s.ptr(), _56531_ident);
}



inline jule::Bool _1a3e2504b_isUnsafe(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	jule::Ptr<_1a3e2427b_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1a3e2517d_isRoot(_1a3e2427b_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1a3e252b0_stop(_1a3e2427b_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1a3e253e2_stopped(_1a3e2427b_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1a3e25524_isDeferred(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	jule::Ptr<_1a3e2427b_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1a3e2427b_scopeChecker> _1a3e25656_getRoot(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	jule::Ptr<_1a3e2427b_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1a63c6385:;
	}
	_iter_end_1a63c6385:;;
	return _62417_root;
}



inline jule::Ptr<_1a3e2427b_scopeChecker> _1a3e25788_getHardRoot(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	jule::Ptr<_1a3e2427b_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1a63c76d8:;
	}
	_iter_end_1a63c76d8:;;
	return _63417_root;
}



inline jule::Ptr<_1a3e226b9_Label> _1a3e258ba_findLabel(_1a3e2427b_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1a63c8387:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a3e226b9_Label>>()) {
						_case_begin_1a63c8d7c:;
						{
							jule::Ptr<_1a3e226b9_Label> _64825_label = _64521_st.operator jule::Ptr<_1a3e226b9_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1a63c8c6c:;
				};
			}
			_iter_next_1a63c8387:;
			++it;
			goto _iter_begin_1a63c8387;
		}
		_iter_end_1a63c8387:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e23da2_scopeLabel> _1a3e259ec_findLabelScope(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_1a3e23da2_scopeLabel> _66117_label = _1a3e25b2e_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e23da2_scopeLabel> _1a3e25b2e_findLabelAll(_1a3e2427b_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a63cb324:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e23da2_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1a63cb324:;
			++it;
			goto _iter_begin_1a63cb324;
		}
		_iter_end_1a63cb324:;
	};
	return nullptr;
}



inline jule::Bool _1a3e25c61_isDuplicatedIdent(_1a3e2427b_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_1a3e59e4e_Var> _68513_v = _1a3e246cc_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1a3e3e76e_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1a3ecd016_TypeAlias> _69313_ta = _1a3e2480e_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1a3e3e76e_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1a3e25d93_checkVarDecl(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31220b2_VarDecl> _70436_decl) {
	jule::Ptr<_1a3e59e4e_Var> _70517_v = _1a31d3519_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1a3e25c61_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a3e252b0_stop(_self_.ptr());
		return;;
	};
	_1a3e4e372_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_1a3eee697_Lookup>(_self_, 0));
	if (((!(_1a3e5a57b_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1a3e529b3_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_1a3eee697_Lookup>(_self_, 0));
}



inline void _1a3e25ec5_checkTypeAliasDecl(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3125923_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_1a3ecd016_TypeAlias> _72917_ta = _1a31d04e4_buildTypeAlias(_72842_decl);;
	if (_1a3e25c61_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a3e252b0_stop(_self_.ptr());
		return;;
	};
	_1a3e4a1b4_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_1a3eee697_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1a3e252b0_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1a3e21344_Scope> _1a3e26107_getChild(_1a3e2427b_scopeChecker* _self_) {
	return jule::new_ptr<_1a3e21344_Scope>(_1a3e21344_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _1a3e26239_checkChildSsc(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3119780_ScopeTree>& _75238_tree, jule::Ptr<_1a3e21344_Scope>& _75261_s, jule::Ptr<_1a3e2427b_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_1a3e2c20c_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_1a3e21344_Scope> _1a3e2636b_checkChildSc(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3119780_ScopeTree>& _75737_tree, jule::Ptr<_1a3e2427b_scopeChecker>& _75760_ssc) {
	jule::Ptr<_1a3e21344_Scope> _75817_s = _1a3e26107_getChild(_self_.ptr());;
	_1a3e26239_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_1a3e21344_Scope> _1a3e2649d_checkChild(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3119780_ScopeTree>& _76335_tree) {
	jule::Ptr<_1a3e2427b_scopeChecker> _76417_ssc = _1a3e2c471_newChildChecker(_self_);;
	return _1a3e2636b_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _1a3e265d0_checkAnonScope(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3119780_ScopeTree> _76838_tree) {
	jule::Ptr<_1a3e21344_Scope> _76917_s = _1a3e2649d_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1a3e26712_processErrorCall(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_1ba1dbeab_Token> _77372_err) {
	if (_1a3e25524_isDeferred(_self_)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3e2427b_scopeChecker> _77817_root = _1a3e25656_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _1a3e26844_checkExpr(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a310d983_Expr> _78633_expr) {
	jule::Ptr<_1a3ea49e3_Eval> _78717_eval = _1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1a3ea2e75_Data> _78917_d = _1a3ec0404_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a63e420a:;
			{
				jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>();;
				_1a3e26712_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ecd_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c1ccc_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c51ba_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a63e3b33:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1a63e3a12:;
			{
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a63e39ac:;
	};
}



inline void _1a3e26976_checkCoExpr(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3110578_CoExpr> _81535_expr) {
	jule::Ptr<_1a3ea49e3_Eval> _81617_eval = _1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1a3ea2e75_Data> _81817_d = _1a3ec0404_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a63e9364:;
			{
				jule::Ptr<_1a31c0c76_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_1a31c0c76_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_1a3eb764e_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1a63e9584:;
			{
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a63e952e:;
	};
}



inline jule::Ptr<_1a3e21531_If> _1a3e26aa8_checkIf(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3124922_If> _83931_i) {
	jule::Ptr<_1a3e21344_Scope> _84017_s = _1a3e2649d_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_1a3ea2e75_Data> _84217_d = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a3ed36d1_Prim> _84717_prim = _1a3ed0d1b_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1a3ed66a1_IsBool(_84717_prim.ptr()))))) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a3e21531_If>(_1a3e21531_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_1a3e2171d_Else> _1a3e26bda_checkElse(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3124cc9_Else> _85933_e) {
	return jule::new_ptr<_1a3e2171d_Else>(_1a3e2171d_Else{._field_Scope=_1a3e2649d_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _1a3e26d1c_checkConditional(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312524c_Conditional> _86540_conditional) {
	jule::Ptr<_1a3e2190a_Conditional> _86617_c = jule::new_ptr<_1a3e2190a_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1a3e21531_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1a3e26aa8_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1a640444b:;
		if (it != expr.end()) {
			jule::Ptr<_1a3124922_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1a3e26aa8_checkIf(_self_, _87221_elif));;
			}
			_iter_next_1a640444b:;
			++it;
			goto _iter_begin_1a640444b;
		}
		_iter_end_1a640444b:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_1a3e26bda_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _1a3e26e4e_checkIterScopeSsc(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_1a3119780_ScopeTree> _88154_tree, jule::Ptr<_1a3e21344_Scope>& _88177_s, jule::Ptr<_1a3e2427b_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_1a3e26239_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_1a3e21344_Scope> _1a3e27081_checkIterScopeSc(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_1a3119780_ScopeTree> _88653_tree, jule::Ptr<_1a3e2427b_scopeChecker> _88675_ssc) {
	jule::Ptr<_1a3e21344_Scope> _88717_scope = _1a3e26107_getChild(_self_.ptr());;
	_1a3e26e4e_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1a3e21344_Scope> _1a3e271b3_checkIterScope(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_1a3119780_ScopeTree>& _89252_tree) {
	jule::Ptr<_1a3e2427b_scopeChecker> _89317_ssc = _1a3e2c471_newChildChecker(_self_);;
	return _1a3e27081_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _1a3e272e5_checkInfIter(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3122ac9_Iter>& _89737_it) {
	jule::Ptr<_1a3e21ae7_InfIter> _89817_kind = jule::new_ptr<_1a3e21ae7_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_1a3e271b3_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _1a3e27427_checkWhileIter(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3122ac9_Iter>& _90339_it) {
	jule::Ptr<_1a312339e_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_1a312339e_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_1a3e272e5_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_1a3e21cd4_WhileIter> _91017_kind = jule::new_ptr<_1a3e21cd4_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_1a3e271b3_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1a3ea2e75_Data> _91521_d = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a3ed36d1_Prim> _92017_prim = _1a3ed0d1b_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a3ed66a1_IsBool(_92017_prim.ptr())))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_1a3123701_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_1a326868c_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1a3e2aea8_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_1a321a496_isValidStForNextSt(_94325_st)))) {
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _1a3e27559_checkRangeIter(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3122ac9_Iter>& _95339_it) {
	jule::Ptr<_1a3123c40_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_1a3123c40_RangeKind>();;
	jule::Ptr<_1a3ea2e75_Data> _95617_d = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3e22103_RangeIter> _96117_kind = jule::new_ptr<_1a3e22103_RangeIter>(_1a3e22103_RangeIter{._field_Expr=_95617_d, });;
	_1a3e98e49_rangeChecker _96517_rc = _1a3e98e49_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _1a3e9a80d_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_1a3e2427b_scopeChecker> _97817_ssc = _1a3e2c471_newChildChecker(_self_);;
	jule::Ptr<_1a3e21344_Scope> _97917_scope = _1a3e26107_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1a3e3e76e_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a3e25c61_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1a3e3e76e_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a3e25c61_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_1a3e26e4e_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _1a3e2768b_checkIter(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3122ac9_Iter> _100333_it) {
	if (_1a3122e2b_IsInf(_100333_it.ptr())) {
		_1a3e272e5_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a312339e_WhileKind>>()) {
			_case_begin_1a642247a:;
			{
				_1a3e27427_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3123c40_RangeKind>>()) {
			_case_begin_1a64217dc:;
			{
				_1a3e27559_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_1a6421d92:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a64216ee:;
	};
}



inline jule::Bool _1a3e277bd_checkValidContLabel(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_1a3e2427b_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1a3e27900_checkValidBreakLabel(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_1a3e2427b_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_1a3e236a9_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1a3e222e0_ContSt> _1a3e27a32_checkContValidScope(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312449e_ContSt> _105839_c) {
	if (_1a3e25524_isDeferred(_self_)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1a3e222e0_ContSt>();
	};
	jule::Ptr<_1a3e2427b_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_1a6429d67:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_1a6429dde:;
			{
				return jule::new_ptr<_1a3e222e0_ContSt>(_1a3e222e0_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_1a6429cac:;
	};
	_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a3e27b64_checkCont(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312449e_ContSt> _108229_c) {
	jule::Ptr<_1a3e222e0_ContSt> _108317_cont = _1a3e27a32_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1a3e23da2_scopeLabel> _108921_label = _1a3258dca_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
					_case_begin_1a64323ad:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1a3e21ae7_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a3e22103_RangeIter>>()) {
					_case_begin_1a6433ec5:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1a3e22103_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a3e21cd4_WhileIter>>()) {
					_case_begin_1a643403b:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1a3e21cd4_WhileIter>()));
					}
				}
				else {
					_case_begin_1a6433d82:;
					{
						_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1a6433c72:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_1a3e277bd_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _1a3e27c96_checkLabel(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3116ded_LabelSt> _112934_l) {
	if ((_1a3e258ba_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_1a3e226b9_Label> _113517_label = jule::new_ptr<_1a3e226b9_Label>(_1a3e226b9_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a3e23da2_scopeLabel>>::make({jule::new_ptr<_1a3e23da2_scopeLabel>(_1a3e23da2_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1a3e27dc8_pushGoto(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31172a5_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1a3e228a6_GotoSt>(_1a3e228a6_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a3e2408e_scopeGoto>>::make({jule::new_ptr<_1a3e2408e_scopeGoto>(_1a3e2408e_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1a3e2800a_checkPostfix(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31181da_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a310d983_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1a3ea2e75_Data> _116717_d = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_1a326d021_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_1a3ed12e4_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3eda4c9_Ptr> _117521_ptr = _1a3ed12e4_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_1a3edae9c_IsUnsafe(_117521_ptr.ptr())) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1a3ece105_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1a3ed0d1b_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a3e20e04_IsNum(_1a3ed0d1b_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1a3ece105_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1a3e22a93_Postfix>(_1a3e22a93_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _1a3e2813c_isNewAssignIdent(_1a3e2427b_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_1ba1de750_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_1a3ea11e8_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _1a3e2826e_checkStructureAssignOp(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312ad46_StructIns>& _120047_s, jule::Ptr<_1a31181da_AssignSt>& _120067_a, jule::Ptr<_1a3ea2e75_Data>& _120086_r) {
	jule::Ptr<_1a31ca874_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1a6447a44:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1a6447aaa:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1a6448a34:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1a6448a9a:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1a6448b11:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1a6448b77:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1a6448bdd:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1a6448c54:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1a6448cba:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1a6448d42:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a64477e1:;
			{
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1a30eb872_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_1a6447390:;
	};
	if ((_120317_overload == nullptr)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1a30eb872_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1a31c99a5_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _1a3e46c93_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _1a3e283a1_checkSingleAssign(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31181da_AssignSt>& _123942_a) {
	jule::Ptr<_1a3ea2e75_Data> _124017_l = nullptr;;
	if ((!(_1ba1de750_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1a310d983_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a3ea49e3_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_1a3e4648a_evalp(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_1a3e2504b_isUnsafe(_self_);
	jule::Ptr<_1a3ea2e75_Data> _125717_r = _1a3ec0404_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_1a3eced92_Void(_125717_r.get()._field_Kind.ptr())) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_1a326d021_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1a3ed29aa_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a31bee0c_OperandExprModel> _127917_lm = jule::new_ptr<_1a31bee0c_OperandExprModel>(_1a31bee0c_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_1a31bee0c_OperandExprModel> _128317_rm = jule::new_ptr<_1a31bee0c_OperandExprModel>(_1a31bee0c_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1a3e22c80_Assign>(_1a3e22c80_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1a312ad46_StructIns> _129021_strct = _1a3ed226d_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_1a3e2826e_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1a3ec2615_binaryEval _129721_solver = static__1a3ec301c_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_1a3ec7b9d_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1a3e8d746_assignTypeChecker _130617_checker = _1a3e8d746_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_1a3e8e8bd_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _1a3e284d3_processEndPartOfMultiAssign(_1a3e2427b_scopeChecker* _self_, jule::Ptr<_1a3e22e6c_MultiAssign>& _131851_st, jule::Ptr<_1a31181da_AssignSt>& _131914_a, jule::Ptr<_1a3117b9b_AssignLeft>& _131933_lexpr, jule::Ptr<_1a3ea2e75_Data>& _131958_l, jule::Ptr<_1a3ea2e75_Data>& _131973_r) {
	if (_1ba1de750_IsIgnoreIdent(_131933_lexpr.get()._field_Ident)) {
		if (_1a3eced92_Void(_131973_r.get()._field_Kind.ptr())) {
			_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _131914_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131851_st.get()._field_L = jule::alloc_for_append(_131851_st.get()._field_L,1);_131851_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131914_a.get()._field_Declarative && _1a3e2813c_isNewAssignIdent(&(*_self_), _131933_lexpr.get()._field_Ident))) {
		if (_1a3e25c61_isDuplicatedIdent(&(*_self_), 0LLU,_131933_lexpr.get()._field_Ident)) {
			_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _131933_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131933_lexpr.get()._field_Ident)}));
			_1a3e401cb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1a3e252b0_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1a3e59e4e_Var> _133721_v = jule::new_ptr<_1a3e59e4e_Var>(_1a3e59e4e_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131933_lexpr.get()._field_Token, ._field_Ident=_131933_lexpr.get()._field_Ident, ._field_Mutable=_131933_lexpr.get()._field_Mutable, ._field_Reference=_131933_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Expr=_131914_a.get()._field_Right, ._field_Data=_131973_r}), });;
		_1a3e52694_checkVar((*_self_)._field_s, _133721_v);
		_131851_st.get()._field_L = jule::alloc_for_append(_131851_st.get()._field_L,1);_131851_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131933_lexpr.get()._field_Mutable || _131933_lexpr.get()._field_Reference)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _131933_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131933_lexpr.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1a326d021_checkAssign((*_self_)._field_s,_131958_l,_131973_r,_131914_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1a3e499cc_checkValidityForInitExpr((*_self_)._field_s, _131958_l.get()._field_Mutable,false,_131958_l.get()._field_Kind,_131973_r,_131914_a.get()._field_Setter);
	_1a3e8d746_assignTypeChecker _137117_checker = _1a3e8d746_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131958_l.get()._field_Kind, ._field_d=_131973_r, ._field_errorToken=_131914_a.get()._field_Setter};;
	_1a3e8e8bd_check(&_137117_checker);
	_131851_st.get()._field_L = jule::alloc_for_append(_131851_st.get()._field_L,1);_131851_st.get()._field_L.__push(_131958_l.get()._field_Model);;
}



inline void _1a3e28615_checkMultiAssign(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31181da_AssignSt>& _138141_a) {
	jule::Ptr<_1a3ea2e75_Data> _138217_rd = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _138141_a.get()._field_Right);;
	if ((_138217_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _138617_right = _1a3268a11_getDatasFromTupleData(_138217_rd);;
	if ((_138617_right.len() == 1LL)) {
		{
			auto &_match_expr{ _138617_right[0LL].get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c1150_IndexingExprModel>>()) {
				_case_begin_1a6470c6a:;
				{
					jule::Ptr<_1a31c1150_IndexingExprModel> _139025_iem = _138617_right[0LL].get()._field_Model.operator jule::Ptr<_1a31c1150_IndexingExprModel>();;
					if ((_1a3ed2746_Map(_139025_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_138617_right=jule::Slice<jule::Ptr<_1a3ea2e75_Data>>::make({jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=_1a3ed2746_Map(_139025_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1a6470c15:;
		};
	};
	{
		
		if ((_138141_a.get()._field_Left.len() > _138617_right.len())) {
			_case_begin_1a64704ea:;
			{
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _138141_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138141_a.get()._field_Left.len() < _138617_right.len())) {
			_case_begin_1a64710ab:;
			{
				_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _138141_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a6473113:;
	};
	jule::Ptr<_1a3e22e6c_MultiAssign> _140917_st = jule::new_ptr<_1a3e22e6c_MultiAssign>(_1a3e22e6c_MultiAssign{._field_R=_138217_rd.get()._field_Model});;
	{
		auto &expr = _138141_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1a61a3074:;
		if (it != expr.end()) {
			jule::I64 _141213_i = it - expr.begin();
			{
				jule::Ptr<_1a3117b9b_AssignLeft> _141321_lexpr = _138141_a.get()._field_Left[_141213_i];;
				jule::Ptr<_1a3ea2e75_Data> _141421_l = nullptr;;
				if (((!(_1ba1de750_IsIgnoreIdent(_141321_lexpr.get()._field_Ident))) && ((!(_138141_a.get()._field_Declarative)) || (!(_1a3e2813c_isNewAssignIdent(_self_.ptr(), _141321_lexpr.get()._field_Ident)))))) {
					_141421_l=_1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _141321_lexpr.get()._field_Expr);
					if ((_141421_l == nullptr)) {
						goto _iter_next_1a61a3074;
					};
				};
				jule::Ptr<_1a3ea2e75_Data> _142221_r = _138617_right[_141213_i];;
				_1a3e284d3_processEndPartOfMultiAssign(_self_.ptr(), _140917_st,_138141_a,_141321_lexpr,_141421_l,_142221_r);
			}
			_iter_next_1a61a3074:;
			++it;
			_141213_i++;
			goto _iter_begin_1a61a3074;
		}
		_iter_end_1a61a3074:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140917_st));;
}



inline void _1a3e28747_checkAssignSt(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31181da_AssignSt> _142837_a) {
	{
		
		if (_1ba1e17eb_IsPostfixOp(_142837_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1a647a082:;
			{
				_1a3e2800a_checkPostfix(_self_, _142837_a);
			}
		}
		else if (((_142837_a.get()._field_Left.len() == 1LL) && (!(_142837_a.get()._field_Declarative)))) {
			_case_begin_1a6479e61:;
			{
				_1a3e283a1_checkSingleAssign(_self_, _142837_a);
			}
		}
		else {
			_case_begin_1a64795c0:;
			{
				_1a3e28615_checkMultiAssign(_self_, _142837_a);
			}
		}
		_match_end_1a64794e3:;
	};
}



inline jule::Ptr<_1a3e21344_Scope> _1a3e28879_checkCaseScope(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3e236a9_Case>& _143935_c, jule::Ptr<_1a3119780_ScopeTree>& _143950_tree) {
	jule::Ptr<_1a3e2427b_scopeChecker> _144017_ssc = _1a3e2c471_newChildChecker(_self_);;
	_144017_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_143935_c));
	return _1a3e2636b_checkChildSc(_self_, _143950_tree,_144017_ssc);
}



inline jule::Ptr<_1a3e236a9_Case> _1a3e289ab_checkCase(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3e23159_Match> _144533_m, jule::I64 _144544_i, jule::Ptr<_1a3125d96_Case> _144556_c, jule::Ptr<_1a3ea2e75_Data> _144575_expr) {
	jule::Ptr<_1a3e236a9_Case> _144617_case = _144533_m.get()._field_Cases[_144544_i];;
	_144617_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1a3ea2e75_Data>>::alloc(0LL,_144556_c.get()._field_Exprs.len());
	jule::Bool _144817_genericMatched = false;;
	jule::Ptr<_1a3ea49e3_Eval> _144917_eval = _1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0));;
	{
		auto &expr = _144556_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a6480131:;
		if (it != expr.end()) {
			jule::Ptr<_1a310d983_Expr> _145021_e = *it;
			{
				jule::Ptr<_1a3ea2e75_Data> _145121_d = _1a3ebecd8_evalExprKind(_144917_eval, _145021_e.get()._field_Kind);;
				if ((_145121_d == nullptr)) {
					goto _iter_next_1a6480131;
				};
				if (_144533_m.get()._field_TypeMatch) {
					_144617_case.get()._field_Exprs = jule::alloc_for_append(_144617_case.get()._field_Exprs,1);_144617_case.get()._field_Exprs.__push(_145121_d);;
					if ((_1a325ac56_countMatchType(_144533_m,_145121_d.get()._field_Kind) > 1LL)) {
						_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _145021_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_145121_d.get()._field_Kind.ptr()))}));
					};
					if (_144575_expr.get()._field_Kind.get()._field_Generic) {
						_144817_genericMatched=(_144817_genericMatched || _1a3ece413_Equals(_144575_expr.get()._field_Kind, _145121_d.get()._field_Kind));
					} else {
						if ((_1a3ed17bc_TypeEnum(_144575_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1a3e471e4_checkTypeCompatibility(_self_.get()._field_s, _144575_expr.get()._field_Kind,_145121_d.get()._field_Kind,_145021_e.get()._field_Token);
						} else {
							jule::Ptr<_1a31d9a81_Trait> _146629_trt = _1a3ed24d2_Trait(_144575_expr.get()._field_Kind.ptr());;
							if ((_146629_trt != nullptr)) {
								_1a3e471e4_checkTypeCompatibility(_self_.get()._field_s, _144575_expr.get()._field_Kind,_145121_d.get()._field_Kind,_145021_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1a6480131;
				};
				if (_145121_d.get()._field_Decl) {
					_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _145021_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1a6480131;
				};
				_144617_case.get()._field_Exprs = jule::alloc_for_append(_144617_case.get()._field_Exprs,1);_144617_case.get()._field_Exprs.__push(_145121_d);;
				_1a3e8d746_assignTypeChecker _148421_checker = _1a3e8d746_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_144575_expr.get()._field_Kind, ._field_d=_145121_d, ._field_errorToken=_145021_e.get()._field_Token};;
				_1a3e8e8bd_check(&_148421_checker);
			}
			_iter_next_1a6480131:;
			++it;
			goto _iter_begin_1a6480131;
		}
		_iter_end_1a6480131:;
	};
	if ((((!(_144533_m.get()._field_TypeMatch)) || (!(_144575_expr.get()._field_Kind.get()._field_Generic))) || _144817_genericMatched)) {
		_144617_case.get()._field_Scope=_1a3e28879_checkCaseScope(_self_, _144617_case,_144556_c.get()._field_Scope);
	};
	return _144617_case;
}



inline void _1a3e28add_checkCases(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312656c_MatchCase>& _149835_m, jule::Ptr<_1a3e23159_Match> _149854_rm, jule::Ptr<_1a3ea2e75_Data> _149870_expr) {
	_149854_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1a3e236a9_Case>>::alloc(0LL,_149835_m.get()._field_Cases.len());
	{
		auto &expr = _149835_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a6489822:;
		if (it != expr.end()) {
			jule::I64 _150013_i = it - expr.begin();
			{
				jule::Ptr<_1a3e236a9_Case> _150121_case = jule::new_ptr<_1a3e236a9_Case>(_1a3e236a9_Case{._field_Owner=_149854_rm, });;
				if ((_150013_i > 0LL)) {
					_149854_rm.get()._field_Cases[(_150013_i - 1LL)].get()._field_Next=_150121_case;
				};
				_149854_rm.get()._field_Cases = jule::alloc_for_append(_149854_rm.get()._field_Cases,1);_149854_rm.get()._field_Cases.__push(_150121_case);;
			}
			_iter_next_1a6489822:;
			++it;
			_150013_i++;
			goto _iter_begin_1a6489822;
		}
		_iter_end_1a6489822:;
	};
	if (((_149854_rm.get()._field_Default != nullptr) && (_149835_m.get()._field_Cases.len() > 0LL))) {
		_149854_rm.get()._field_Cases[(_149854_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_149854_rm.get()._field_Default;
	};
	{
		auto &expr = _149835_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a648cacd:;
		if (it != expr.end()) {
			jule::I64 _151414_i = it - expr.begin();
			jule::Ptr<_1a3125d96_Case> _151421_c = *it;
			{
				_1a3e289ab_checkCase(_self_, _149854_rm,_151414_i,_151421_c,_149870_expr);
			}
			_iter_next_1a648cacd:;
			++it;
			_151414_i++;
			goto _iter_begin_1a648cacd;
		}
		_iter_end_1a648cacd:;
	};
}



inline jule::Ptr<_1a3e236a9_Case> _1a3e28d0d_checkDefault(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3e23159_Match> _151936_m, jule::Ptr<_1a3124cc9_Else> _151951_d) {
	jule::Ptr<_1a3e236a9_Case> _152017_def = jule::new_ptr<_1a3e236a9_Case>(_1a3e236a9_Case{._field_Owner=_151936_m, });;
	_152017_def.get()._field_Scope=_1a3e28879_checkCaseScope(_self_, _152017_def,_151951_d.get()._field_Scope);
	return _152017_def;
}



inline void _1a3e29083_checkComptimePanic(_1a3e2427b_scopeChecker* _self_, jule::Ptr<_1a3e21344_Scope>& _152738_s) {
	if ((_152738_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _153213_stmt = _152738_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _153213_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a64910ba:;
			{
				jule::Ptr<_1a3ea2e75_Data> _153517_d = _153213_stmt.operator jule::Ptr<_1a3ea2e75_Data>();;
				{
					auto &_match_expr{ _153517_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a6491e56:;
						{
							jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel> _153821_m = _153517_d.get()._field_Model.operator jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _153821_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
									_case_begin_1a6492e9b:;
									{
										jule::Ptr<_1a31618e8_Const> _154125_c = _153821_m.get()._field_Expr.operator jule::Ptr<_1a31618e8_Const>();;
										if (_1a31ba655_IsStr(_154125_c.ptr())) {
											_1a3e3edac_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1a31b82ac_ReadStr(_154125_c.ptr()))}));
										};
									}
								}
								_match_end_1a6492c7b:;
							};
						}
					}
					_match_end_1a6491e01:;
				};
			}
		}
		_match_end_1a6491065:;
	};
}



inline void _1a3e293a2_pushTypeMatch(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3e23159_Match> _155037_tm, jule::Ptr<_1a312656c_MatchCase>& _155054_m) {
	if (_155037_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _155037_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1a6491560:;
			if (it != expr.end()) {
				jule::Ptr<_1a3e236a9_Case> _155425_c = *it;
				{
					if ((_155425_c.get()._field_Scope != nullptr)) {
						_1a3e29083_checkComptimePanic(_self_.ptr(), _155425_c.get()._field_Scope);
						_155037_tm.get()._field_Default=_155425_c;
						_155037_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1a6491560:;
				++it;
				goto _iter_begin_1a6491560;
			}
			_iter_end_1a6491560:;
		};
		if ((_155054_m.get()._field_Default != nullptr)) {
			_155037_tm.get()._field_Cases=nullptr;
			_155037_tm.get()._field_Default=_1a3e28d0d_checkDefault(_self_, _155037_tm,_155054_m.get()._field_Default);
			if ((_155037_tm.get()._field_Default != nullptr)) {
				_1a3e29083_checkComptimePanic(_self_.ptr(), _155037_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_155037_tm));;
}



inline void _1a3e29627_checkTypeMatch(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312656c_MatchCase>& _157439_m) {
	jule::Ptr<_1a3ea2e75_Data> _157517_d = _1a3ec00e6_eval(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _157439_m.get()._field_Expr);;
	if ((_157517_d == nullptr)) {
		return;;
	};
	if (((!(_157517_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1a3ed0d1b_Prim(_157517_d.get()._field_Kind.ptr()) != nullptr) && _1a3ed6b79_IsAny(_1a3ed0d1b_Prim(_157517_d.get()._field_Kind.ptr()).ptr())) || (_1a3ed24d2_Trait(_157517_d.get()._field_Kind.ptr()) != nullptr)) || (_1a3ed17bc_TypeEnum(_157517_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _157439_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3e23159_Match> _158617_tm = jule::new_ptr<_1a3e23159_Match>(_1a3e23159_Match{._field_Expr=_157517_d, ._field_TypeMatch=true, });;
	if (((!(_158617_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_157439_m.get()._field_Default != nullptr))) {
		_158617_tm.get()._field_Default=_1a3e28d0d_checkDefault(_self_, _158617_tm,_157439_m.get()._field_Default);
	};
	_1a3e28add_checkCases(_self_, _157439_m,_158617_tm,_157517_d);
	_1a3e293a2_pushTypeMatch(_self_, _158617_tm,_157439_m);
}



inline void _1a3e2989c_checkCommonMatch(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312656c_MatchCase>& _159941_m) {
	jule::Ptr<_1a3ea2e75_Data> _160017_d = nullptr;;
	if ((_159941_m.get()._field_Expr == nullptr)) {
		_160017_d=jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1a31b6c39_NewBool(true)});
		_160017_d.get()._field_Model=static_cast<jule::Any>(_160017_d.get()._field_Constant);
	} else {
		_160017_d=_1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _159941_m.get()._field_Expr);
		if ((_160017_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a3e23159_Match> _161417_mc = jule::new_ptr<_1a3e23159_Match>(_1a3e23159_Match{._field_Expr=_160017_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161417_mc));;
	if ((_159941_m.get()._field_Default != nullptr)) {
		_161417_mc.get()._field_Default=_1a3e28d0d_checkDefault(_self_, _161417_mc,_159941_m.get()._field_Default);
	};
	_1a3e28add_checkCases(_self_, _159941_m,_161417_mc,_160017_d);
}



inline void _1a3e29b22_checkMatch(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a312656c_MatchCase> _162634_m) {
	if (_162634_m.get()._field_TypeMatch) {
		_1a3e29627_checkTypeMatch(_self_, _162634_m);
		return;;
	};
	_1a3e2989c_checkCommonMatch(_self_, _162634_m);
}



inline void _1a3e29d97_checkFall(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3117591_FallSt> _163429_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1a3e25524_isDeferred(_self_))) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _163429_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1a3e236a9_Case* _164217_case = ((_1a3e236a9_Case*)(_self_.get()._field_cse));;
	if ((_164217_case->_field_Next == nullptr)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _163429_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1a3e239c8_FallSt>(_1a3e239c8_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_164217_case->_field_Next))})));;
}



inline jule::Ptr<_1a3e224cc_BreakSt> _1a3e2a1a5_checkBreakWithLabel(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31240e7_BreakSt> _165439_b) {
	jule::Ptr<_1a3e224cc_BreakSt> _165517_brk = _1a3e2a4b3_checkPlainBreak(_self_, _165439_b);;
	if ((_165517_brk == nullptr)) {
		return nullptr;
	};
	_165517_brk.get()._field_It=0LLU;
	_165517_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1a3e23da2_scopeLabel> _166517_label = _1a3258dca_findLabelParent(_165439_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_166517_label == nullptr)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _165439_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_165439_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_166517_label.get()._field_used=true;
	if (((_166517_label.get()._field_pos + 1LL) >= _166517_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _165439_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165439_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _167813_i = (_166517_label.get()._field_pos + 1LL);;
	if ((_167813_i >= _166517_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _165439_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165439_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _168221_st = _166517_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_167813_i];;
		{
			auto &_match_expr{ _168221_st };
			
			if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
				_case_begin_1a64ade2e:;
				{
					_165517_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168221_st.operator jule::Ptr<_1a3e21ae7_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a3e22103_RangeIter>>()) {
				_case_begin_1a64b0d76:;
				{
					_165517_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168221_st.operator jule::Ptr<_1a3e22103_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a3e21cd4_WhileIter>>()) {
				_case_begin_1a64b0ddc:;
				{
					_165517_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168221_st.operator jule::Ptr<_1a3e21cd4_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a3e23159_Match>>()) {
				_case_begin_1a64b0e53:;
				{
					_165517_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168221_st.operator jule::Ptr<_1a3e23159_Match>()));
				}
			}
			else {
				_case_begin_1a64b0c33:;
				{
					_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _165439_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165439_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1a64b0b23:;
		};
	};
	if ((_165517_brk.get()._field_It != 0LLU)) {
		if ((!(_1a3e27900_checkValidBreakLabel(_self_, _165517_brk.get()._field_It)))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _165439_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165439_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_165517_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1a3e27900_checkValidBreakLabel(_self_, _165517_brk.get()._field_Mtch)))) {
			_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _165439_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_165439_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _165517_brk;
}



inline jule::Ptr<_1a3e224cc_BreakSt> _1a3e2a4b3_checkPlainBreak(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31240e7_BreakSt> _171235_b) {
	if (_1a3e25524_isDeferred(_self_)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _171235_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3e2427b_scopeChecker> _171817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_171817_scope.get()._field_it == 0LLU) && (_171817_scope.get()._field_cse == 0LLU)) && (_171817_scope.get()._field_parent != nullptr)) && (_171817_scope.get()._field_owner == nullptr))) {
			_case_begin_1a64b770c:;
			{
				_171817_scope=_171817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_171817_scope.get()._field_it != 0LLU)) {
			_case_begin_1a64b7784:;
			{
				return jule::new_ptr<_1a3e224cc_BreakSt>(_1a3e224cc_BreakSt{._field_It=_171817_scope.get()._field_it, });
			}
		}
		else if ((_171817_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a64b780b:;
			{
				return jule::new_ptr<_1a3e224cc_BreakSt>(_1a3e224cc_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1a3e236a9_Case*)(_171817_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1a64b7641:;
	};
	_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _171235_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a3e2a738_checkBreak(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a31240e7_BreakSt> _173430_b) {
	if ((_173430_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1a3e224cc_BreakSt> _173621_brk = _1a3e2a1a5_checkBreakWithLabel(_self_, _173430_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_173621_brk));;
		return;;
	};
	jule::Ptr<_1a3e224cc_BreakSt> _174117_brk = _1a3e2a4b3_checkPlainBreak(_self_, _173430_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_174117_brk));;
}



inline void _1a3e2a9ad_checkRet(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3122469_RetSt> _174532_r) {
	if (_1a3e25524_isDeferred(_self_)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _174532_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3e23bb5_RetSt> _175017_rt = jule::new_ptr<_1a3e23bb5_RetSt>(_1a3e23bb5_RetSt{._field_Func=_1a3e25656_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_175017_rt));;
	jule::Ptr<_1a3e9b0a0_retTypeChecker> _175517_rtc = jule::new_ptr<_1a3e9b0a0_retTypeChecker>(_1a3e9b0a0_retTypeChecker{._field_sc=_self_, ._field_f=_175017_rt.get()._field_Func, ._field_errorToken=_174532_r.get()._field_Token, });;
	jule::Bool _176013_ok = _1a3e9be91_check(_175517_rtc.ptr(), _174532_r.get()._field_Expr);;
	if ((!(_176013_ok))) {
		return;;
	};
	if (((_174532_r.get()._field_Expr == nullptr) && (_175517_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_175017_rt.get()._field_Vars=_175517_rtc.get()._field_vars;
	if ((_174532_r.get()._field_Expr != nullptr)) {
		_175017_rt.get()._field_Expr=_175517_rtc.get()._field_model;
	};
}



inline void _1a3e2ac33_checkUseExpr(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a310e324_UseExpr> _177632_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _177632_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1a3e25524_isDeferred(_self_)) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _177632_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _177632_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1a3e2aea8_checkNode(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Any& _179234_node) {
	{
		auto &_match_expr{ _179234_node };
		
		if (_match_expr.type_is<jule::Ptr<_1a3119780_ScopeTree>>()) {
			_case_begin_1a64c68e7:;
			{
				_1a3e265d0_checkAnonScope(_self_, _179234_node.operator jule::Ptr<_1a3119780_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31220b2_VarDecl>>()) {
			_case_begin_1a64c62ba:;
			{
				_1a3e25d93_checkVarDecl(_self_, _179234_node.operator jule::Ptr<_1a31220b2_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3125923_TypeAliasDecl>>()) {
			_case_begin_1a64c66c7:;
			{
				_1a3e25ec5_checkTypeAliasDecl(_self_, _179234_node.operator jule::Ptr<_1a3125923_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310d983_Expr>>()) {
			_case_begin_1a64c6a3a:;
			{
				_1a3e26844_checkExpr(_self_, _179234_node.operator jule::Ptr<_1a310d983_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3110578_CoExpr>>()) {
			_case_begin_1a64c6aa1:;
			{
				_1a3e26976_checkCoExpr(_self_, _179234_node.operator jule::Ptr<_1a3110578_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a312524c_Conditional>>()) {
			_case_begin_1a64c6c16:;
			{
				_1a3e26d1c_checkConditional(_self_, _179234_node.operator jule::Ptr<_1a312524c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3122ac9_Iter>>()) {
			_case_begin_1a64c6c7c:;
			{
				_1a3e2768b_checkIter(_self_, _179234_node.operator jule::Ptr<_1a3122ac9_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a312449e_ContSt>>()) {
			_case_begin_1a64c6ce3:;
			{
				_1a3e27b64_checkCont(_self_, _179234_node.operator jule::Ptr<_1a312449e_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3116ded_LabelSt>>()) {
			_case_begin_1a64c6d59:;
			{
				_1a3e27c96_checkLabel(_self_, _179234_node.operator jule::Ptr<_1a3116ded_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31172a5_GotoSt>>()) {
			_case_begin_1a64c6dc0:;
			{
				_1a3e27dc8_pushGoto(_self_, _179234_node.operator jule::Ptr<_1a31172a5_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31181da_AssignSt>>()) {
			_case_begin_1a64c6e36:;
			{
				_1a3e28747_checkAssignSt(_self_, _179234_node.operator jule::Ptr<_1a31181da_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a312656c_MatchCase>>()) {
			_case_begin_1a64c6e9c:;
			{
				_1a3e29b22_checkMatch(_self_, _179234_node.operator jule::Ptr<_1a312656c_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3117591_FallSt>>()) {
			_case_begin_1a64c7024:;
			{
				_1a3e29d97_checkFall(_self_, _179234_node.operator jule::Ptr<_1a3117591_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31240e7_BreakSt>>()) {
			_case_begin_1a64c709b:;
			{
				_1a3e2a738_checkBreak(_self_, _179234_node.operator jule::Ptr<_1a31240e7_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3122469_RetSt>>()) {
			_case_begin_1a64c7123:;
			{
				_1a3e2a9ad_checkRet(_self_, _179234_node.operator jule::Ptr<_1a3122469_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310e324_UseExpr>>()) {
			_case_begin_1a64c719a:;
			{
				_1a3e2ac33_checkUseExpr(_self_, _179234_node.operator jule::Ptr<_1a310e324_UseExpr>());
			}
		}
		else {
			_case_begin_1a64c6452:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a64c6364:;
	};
}



inline void _1a3e2b184_checkResult(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	_1a3119175_Stmt _183217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _183217_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1a310e324_UseExpr>>()) {
			_case_begin_1a64d16e3:;
			{
				jule::Ptr<_1a310e324_UseExpr> _183521_ue = _183217_stmt._field_Data.operator jule::Ptr<_1a310e324_UseExpr>();;
				jule::Ptr<_1a3ea2e75_Data> _183621_d = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _183521_ue.get()._field_Expr);;
				if ((_183621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_183621_d));;
				jule::Ptr<_1a3e9b0a0_retTypeChecker> _184121_rtc = jule::new_ptr<_1a3e9b0a0_retTypeChecker>(_1a3e9b0a0_retTypeChecker{._field_sc=_self_, ._field_types=_1a31cb996_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_183521_ue.get()._field_Expr.get()._field_Token, });;
				_1a3e9be91_check(_184121_rtc.ptr(), _183521_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310d983_Expr>>()) {
			_case_begin_1a64d1759:;
			{
				jule::Ptr<_1a310d983_Expr> _184821_expr = _183217_stmt._field_Data.operator jule::Ptr<_1a310d983_Expr>();;
				jule::Ptr<_1a3ea2e75_Data> _184921_d = _1a3ec0404_evalExpr(_1a3e46798_eval(_self_.get()._field_s, jule::Trait<_1a3eee697_Lookup>(_self_, 0)), _184821_expr);;
				if ((_184921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _184921_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a64d62b9:;
						{
							jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel> _185525_m = _184921_d.get()._field_Model.operator jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>();;
							_1a3e26712_processErrorCall(_self_, _185525_m,_184821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_184921_d));;
						}
					}
					else {
						_case_begin_1a64d640c:;
						{
							return;;
						}
					}
					_match_end_1a64d6011:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31172a5_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1a31240e7_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1a312449e_ContSt>>() || _match_expr.type_is<jule::Ptr<_1a3122469_RetSt>>()) {
			_case_begin_1a64d0da7:;
			{
				_1a3e2aea8_checkNode(_self_, _183217_stmt._field_Data);
			}
		}
		else {
			_case_begin_1a64d0d41:;
			{
				_1a3e2aea8_checkNode(_self_, _183217_stmt._field_Data);
				return;;
			}
		}
		_match_end_1a64d0b32:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1a3e2b360_checkTree(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _187717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_187717_n)--;
	};
	for (; (_self_.get()._field_i < _187717_n); (_self_.get()._field_i)++) {
		{
			_1a3119175_Stmt _188521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1a3e2aea8_checkNode(_self_, _188521_stmt._field_Data);
			if (_1a3e253e2_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1a64d9ab4:;
	}
	_iter_end_1a64d9ab4:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1a3e2b184_checkResult(_self_);
	};
}



inline void _1a3e2b67e_checkGoto(_1a3e2427b_scopeChecker* _self_, jule::Ptr<_1a3e2408e_scopeGoto>& _189633_gt, jule::Ptr<_1a3e23da2_scopeLabel>& _189654_label) {
	jule::Ptr<_1a3e2427b_scopeChecker> _189717_gtsc = _189633_gt.get()._field_scope;;
	while (((_189717_gtsc.get()._field_childIndex - 1LL) > _189654_label.get()._field_scope.get()._field_childIndex)) {
		{
			_189717_gtsc=_189717_gtsc.get()._field_parent;
		}
	_iter_next_1a64dcd70:;
	}
	_iter_end_1a64dcd70:;;
	jule::I64 _190217_n = 0LL;;
	if ((_189717_gtsc.get()._field_scope == _189654_label.get()._field_scope.get()._field_scope)) {
		if ((_189633_gt.get()._field_pos > _189654_label.get()._field_pos)) {
			return;;
		};
		_190217_n=_189633_gt.get()._field_pos;
	};
	jule::I64 _191517_i = (_189654_label.get()._field_pos - 1LL);;
	if ((_190217_n == 0LL)) {
		{
			auto &expr = _189654_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1a64e067a:;
			if (it != expr.end()) {
				jule::I64 _191817_j = it - expr.begin();
				jule::Any _191820_stmt = *it;
				{
					if (_1a3259d98_stmtIsGotoScope(_191820_stmt,_189717_gtsc.get()._field_scope)) {
						_190217_n=_191817_j;
						goto _iter_end_1a64e067a;
					};
				}
				_iter_next_1a64e067a:;
				++it;
				_191817_j++;
				goto _iter_begin_1a64e067a;
			}
			_iter_end_1a64e067a:;
		};
	};
	for (; (_191517_i >= _190217_n); (_191517_i)--) {
		{
			jule::Any _192821_stmt = _189654_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_191517_i];;
			if (_1a3256c52_stmtIsDef(_192821_stmt)) {
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _189633_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_189633_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1a64e16e2:;
	}
	_iter_end_1a64e16e2:;;
}



inline void _1a3e2b85a_checkGotos(_1a3e2427b_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1a64e1318:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e2408e_scopeGoto> _193721_gt = *it;
			{
				jule::Ptr<_1a3e23da2_scopeLabel> _193821_label = _1a3e25b2e_findLabelAll(&(*_self_), _193721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_193821_label == nullptr)) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _193721_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_193721_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1a64e1318;
				};
				_193821_label.get()._field_used=true;
				_1a3e2b67e_checkGoto(&(*_self_), _193721_gt,_193821_label);
			}
			_iter_next_1a64e1318:;
			++it;
			goto _iter_begin_1a64e1318;
		}
		_iter_end_1a64e1318:;
	};
}



inline void _1a3e2ba36_checkLabels(_1a3e2427b_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a64e3a79:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e23da2_scopeLabel> _195016_l = *it;
			{
				if ((!(_195016_l.get()._field_used))) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _195016_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_195016_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1a64e3a79:;
			++it;
			goto _iter_begin_1a64e3a79;
		}
		_iter_end_1a64e3a79:;
	};
}



inline void _1a3e2bc12_checkVars(_1a3e2427b_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a64e6472:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _195816_v = *it;
			{
				if (((((!(_195816_v.get()._field_Used)) && (!(_1ba1de750_IsIgnoreIdent(_195816_v.get()._field_Ident)))) && (!(_1ba1de9e7_IsAnonIdent(_195816_v.get()._field_Ident)))) && (_195816_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _195816_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_195816_v.get()._field_Ident)}));
				};
			}
			_iter_next_1a64e6472:;
			++it;
			goto _iter_begin_1a64e6472;
		}
		_iter_end_1a64e6472:;
	};
}



inline void _1a3e2bddd_checkAliases(_1a3e2427b_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1a64e830e:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecd016_TypeAlias> _196616_a = *it;
			{
				if ((((!(_196616_a.get()._field_Used)) && (!(_1ba1de750_IsIgnoreIdent(_196616_a.get()._field_Ident)))) && (!(_1ba1de9e7_IsAnonIdent(_196616_a.get()._field_Ident))))) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _196616_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_196616_a.get()._field_Ident)}));
				};
			}
			_iter_next_1a64e830e:;
			++it;
			goto _iter_begin_1a64e830e;
		}
		_iter_end_1a64e830e:;
	};
}



inline void _1a3e2c20c_check(jule::Ptr<_1a3e2427b_scopeChecker> _self_, jule::Ptr<_1a3119780_ScopeTree>& _197430_tree, jule::Ptr<_1a3e21344_Scope>& _197453_s) {
	_197453_s.get()._field_Deferred=_197430_tree.get()._field_Deferred;
	_197453_s.get()._field_Unsafety=_197430_tree.get()._field_Unsafety;
	jule::I64 _197813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_197430_tree;
	_self_.get()._field_scope=_197453_s;
	_1a3e2b360_checkTree(_self_);
	if ((_197813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1a3e2bc12_checkVars(_self_.ptr());
		_1a3e2bddd_checkAliases(_self_.ptr());
		if (_1a3e2517d_isRoot(_self_.ptr())) {
			_1a3e2b85a_checkGotos(_self_.ptr());
			_1a3e2ba36_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1a3e2427b_scopeChecker> _1a3e2c471_newChildChecker(jule::Ptr<_1a3e2427b_scopeChecker> _self_) {
	jule::Ptr<_1a3e2427b_scopeChecker> _199817_base = _1a325748e_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_199817_base.get()._field_parent=_self_;
	_199817_base.get()._field_labels=_self_.get()._field_labels;
	_199817_base.get()._field_gotos=_self_.get()._field_gotos;
	_199817_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _199817_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2427b_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e2d461_checkCdef(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c7bc3_Fn>>()) {
			_case_begin_1a6501aa9:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a31c7bc3_Fn>().get()._field_CppLinked) {
					goto _match_end_1a6501504;
				};
				goto _case_begin_1a6501647;
			}
		}
		else {
			_case_begin_1a6501647:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1a6501504:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a3e2d6d6_checkTypedef(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a65045a1:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a30e9b8e_Struct>().get()._field_CppLinked) {
					goto _match_end_1a650410b;
				};
				goto _case_begin_1a6504161;
			}
		}
		else {
			_case_begin_1a6504161:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1a650410b:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a3e2d95b_checkDerive(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6507087:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a30e9b8e_Struct>().get()._field_CppLinked))) {
					goto _match_end_1a6506ae2;
				};
				goto _case_begin_1a6506b47;
			}
		}
		else {
			_case_begin_1a6506b47:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6506ae2:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a650a94d:;
		}
		else {
			_case_begin_1a6506c46:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1a650a50d:;
	};
}



inline void _1a3e2dbd1_checkNamespace(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a650bc6d:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a30e9b8e_Struct>().get()._field_CppLinked))) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c7bc3_Fn>>()) {
			_case_begin_1a650c048:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a31c7bc3_Fn>().get()._field_CppLinked))) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a650c0ae:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a3e59e4e_Var>().get()._field_CppLinked))) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1a650be6b:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1a650bd28:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ba1dbeab_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a65160a7:;
			{
				if ((_1a3ec83a7_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a30c5a27_Directive> _11625_typedef = jule::new_ptr<_1a30c5a27_Directive>(_1a30c5a27_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1a30c5a27_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1a65159ad:;
	};
}



inline void _1a3e2de56_checkDeprecated(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6516849:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a30e9b8e_Struct>().get()._field_CppLinked) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c7bc3_Fn>>()) {
			_case_begin_1a65184d8:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a31c7bc3_Fn>().get()._field_CppLinked) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a651854e:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a3e59e4e_Var>().get()._field_CppLinked) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1a6517d34:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1a6517b58:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ba1dbeab_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1a3e2e1cb_checkTest(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c7bc3_Fn>>()) {
			_case_begin_1a6522536:;
			{
				jule::Ptr<_1a31c7bc3_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1a31c7bc3_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1a31c8872_IsInit(_16717_f.ptr())))) && (!(_1a31c860d_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1a6521e1a;
				};
				if (_1a31c8399_IsMethod(_16717_f.ptr())) {
					_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1a6521e1a;
				};
				goto _case_begin_1a65220e6;
			}
		}
		else {
			_case_begin_1a65220e6:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1a6521e1a:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a3e2e451_checkDirective(_1a3e2d021_directiveChecker* _self_, jule::Ptr<_1a30c5a27_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a65267c1:;
			{
				_1a3e2d461_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a6526419:;
			{
				_1a3e2d6d6_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a6526491:;
			{
				_1a3e2d95b_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a6526518:;
			{
				_1a3e2dbd1_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a6527250:;
			{
				_1a3e2de56_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a65272b6:;
			{
				_1a3e2e1cb_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a652732c:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1a65263a3:;
			{
				_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1a65262e8:;
	};
}



inline void _1a3e2e62c_check(_1a3e2d021_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1a652785a:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _20821_d = *it;
			{
				_1a3e2e451_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1a652785a:;
			++it;
			goto _iter_begin_1a652785a;
		}
		_iter_end_1a652785a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e2d021_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e345bb_FindPackage(_1a3e3409e_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e348c9_SelectPackage(_1a3e3409e_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e34c81_FindVar(_1a3e3409e_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;
	};
	return _1a3e317b6_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e35138_FindTypeAlias(_1a3e3409e_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;
	};
	return _1a3e31be5_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3e354e0_FindStruct(_1a3e3409e_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;
	};
	return _1a3e320d0_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a3e35897_FindFn(_1a3e3409e_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;
	};
	return _1a3e32542_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3e35ba5_FindTrait(_1a3e3409e_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;
	};
	return _1a3e32850_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3e35eb3_FindEnum(_1a3e3409e_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;
	};
	return _1a3e32b91_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e362c1_FindTypeEnum(_1a3e3409e_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1a3e36667_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;
	};
	return _1a3e32ed2_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);
}



inline jule::Bool _1a3e36667_isLookupable(_1a3e3409e_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1a3e36975_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1a3e36975_existIdent(&(*_self_), _27027_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1a3e36975_existIdent(_1a3e3409e_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1a6541b2c:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;
				};
			}
			_iter_next_1a6541b2c:;
			++it;
			goto _iter_begin_1a6541b2c;
		}
		_iter_end_1a6541b2c:;
	};
	return false;
}



inline jule::Bool _1a3e36c0b_isAccessibleViaSelection(_1a3e3409e_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1a3e36975_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e3409e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e374d1_FindPackage(_1a3e37008_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e377de_SelectPackage(_1a3e37008_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e37b96_FindVar(_1a3e37008_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1a3e317b6_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e3804d_FindTypeAlias(_1a3e37008_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1a3e31be5_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3e38405_FindStruct(_1a3e37008_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1a3e320d0_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a3e387ac_FindFn(_1a3e37008_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1a3e32542_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3e38aba_FindTrait(_1a3e37008_Package* _self_, jule::Str _34428_ident) {
	return _1a3e32850_findTraitInPackage((*_self_)._field_Files,_34428_ident);
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3e38dc8_FindEnum(_1a3e37008_Package* _self_, jule::Str _35027_ident) {
	return _1a3e32b91_findEnumInPackage((*_self_)._field_Files,_35027_ident);
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e391d6_FindTypeEnum(_1a3e37008_Package* _self_, jule::Str _35631_ident) {
	return _1a3e32ed2_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e37008_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e3c717_FindPackage(_1a3e3c1ea_Sema* _self_, jule::Str _21930_ident) {
	return _1a3e9d668_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e3ca25_SelectPackage(_1a3e3c1ea_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _22932_selector) {
	return _1a3e9d976_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e3cdcc_FindVar(_1a3e3c1ea_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_1a3e59e4e_Var> _24117_v = _1a3e317b6_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a65660a2:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _24721_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_1a65660a2;
				};
				_24117_v=_1a3e34c81_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1a65660a2:;
			++it;
			goto _iter_begin_1a65660a2;
		}
		_iter_end_1a65660a2:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e3d284_FindTypeAlias(_1a3e3c1ea_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_1a3ecd016_TypeAlias> _26817_ta = _1a3e31be5_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a6568bba:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _27421_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_1a6568bba;
				};
				_26817_ta=_1a3e35138_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1a6568bba:;
			++it;
			goto _iter_begin_1a6568bba;
		}
		_iter_end_1a6568bba:;
	};
	return nullptr;
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3e3d63b_FindStruct(_1a3e3c1ea_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_1a30e9b8e_Struct> _29517_s = _1a3e320d0_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a656b7d3:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _30021_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_1a656b7d3;
				};
				_29517_s=_1a3e354e0_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1a656b7d3:;
			++it;
			goto _iter_begin_1a656b7d3;
		}
		_iter_end_1a656b7d3:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a3e3d9e3_FindFn(_1a3e3c1ea_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_1a31c7bc3_Fn> _32017_f = _1a3e32542_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a656e3eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _32621_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_1a656e3eb;
				};
				_32017_f=_1a3e35897_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1a656e3eb:;
			++it;
			goto _iter_begin_1a656e3eb;
		}
		_iter_end_1a656e3eb:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3e3dd01_FindTrait(_1a3e3c1ea_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_1a31d9a81_Trait> _34717_t = _1a3e32850_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a6572113:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _35321_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_1a6572113;
				};
				_34717_t=_1a3e35ba5_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1a6572113:;
			++it;
			goto _iter_begin_1a6572113;
		}
		_iter_end_1a6572113:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3e3e10e_FindEnum(_1a3e3c1ea_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_1a31dbbc6_Enum> _37417_e = _1a3e32b91_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a65745bb:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _38021_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_1a65745bb;
				};
				_37417_e=_1a3e35eb3_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1a65745bb:;
			++it;
			goto _iter_begin_1a65745bb;
		}
		_iter_end_1a65745bb:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e3e41c_FindTypeEnum(_1a3e3c1ea_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_1a31dd2c1_TypeEnum> _40117_e = _1a3e32ed2_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a6576e5e:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _40721_imp = *it;
			{
				if ((!(_1a3e3ab22_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_1a6576e5e;
				};
				_40117_e=_1a3e362c1_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _1a3e40583_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1a6576e5e:;
			++it;
			goto _iter_begin_1a6576e5e;
		}
		_iter_end_1a6576e5e:;
	};
	return nullptr;
}



inline jule::Bool _1a3e3e76e_isFlag(_1a3e3c1ea_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _1a3e3e9e4_setCurrentFile(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3e9d14b_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _1a3e3edac_pushErr(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a3e3a7d1_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _1a3e401cb_pushSugggestion(_1a3e3c1ea_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_1a3e3bc66_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _1a3e40583_isAccessibleDefine(_1a3e3c1ea_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_1ba1dbeab_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_1ba1e2c3c_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1ba1e2c3c_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _1a3e409d4_isDuplicatedIdent(_1a3e3c1ea_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a657e021:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> &_44516_f = *it;
			{
				if (_1a3ea1649_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1a657e97d:;
					if (it != expr.end()) {
						jule::Ptr<_1a3e3409e_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1a6580808:;
								if (it != expr.end()) {
									jule::Ptr<_1ba1dbeab_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1a6580808:;
									++it;
									goto _iter_begin_1a6580808;
								}
								_iter_end_1a6580808:;
							};
						}
						_iter_next_1a657e97d:;
						++it;
						goto _iter_begin_1a657e97d;
					}
					_iter_end_1a657e97d:;
				};
			}
			_iter_next_1a657e021:;
			++it;
			goto _iter_begin_1a657e021;
		}
		_iter_end_1a657e021:;
	};
	return false;
}



inline void _1a3e40d03_checkDirectives(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _46140_d, jule::Any _46166_o) {
	_1a3e2d021_directiveChecker _46217_dc = _1a3e2d021_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a30c5a27_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_1a3e2e62c_check(&_46217_dc);
}



inline jule::Bool _1a3e41254_checkGenericQuantity(_1a3e3c1ea_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_1ba1dbeab_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1a6583696:;
			{
				_1a3e3edac_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1a6583773:;
			{
				_1a3e3edac_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1a65837d9:;
			{
				_1a3e3edac_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1a65834ba:;
			{
				_1a3e3edac_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1a6583036:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1a6582e59:;
	};
}



inline jule::Bool _1a3e4162d_isDuplicatedImportSelection(_1a3e3c1ea_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a65868ec:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1a65868ec;
				};
				if (_1a3e36975_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1a65868ec:;
			++it;
			goto _iter_begin_1a65868ec;
		}
		_iter_end_1a65868ec:;
	};
	return false;
}



inline jule::Any _1a3e419e6_getImportDef(_1a3e3c1ea_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_1a3e3409e_ImportInfo>& _50244_imp) {
	if ((_1a4012787_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a658858b:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _1a3ea11e8_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1a658858b:;
			++it;
			goto _iter_begin_1a658858b;
		}
		_iter_end_1a658858b:;
	};
	return nullptr;
}



inline jule::Bool _1a659053d_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a3e59e4e_Var>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1a659494e_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a3ecd016_TypeAlias>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1a6598d1b_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a30e9b8e_Struct>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1a659d3d6_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a31d9a81_Trait>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1a65a27a3_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a31dbbc6_Enum>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1a65a6b70_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a31dd2c1_TypeEnum>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}

inline jule::Bool _1a65ab03c_checkImportSelection(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1ba1dbeab_Token>& _51743_ident, jule::Ptr<_1a31c7bc3_Fn>& _51759_s) {
	if ((!(_1a3e40583_isAccessibleDefine(&(*_self_), _51759_s.get()._field_Public,_51759_s.get()._field_Token)))) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51743_ident.get()._field_Kind)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;
	};
	;
	if ((_1a3e334cc_defByIdentPackage((*_self_)._field_files,_51759_s.get()._field_Ident,false) != nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _51743_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_51759_s.get()._field_Ident)}));
		return false;
	};
	return true;
}



inline jule::Bool _1a3e421cd_checkImportSelectedSelections(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _53153_imp) {
	jule::Bool _53173_ok = jule::Bool();
	_53173_ok=true;
	{
		auto &expr = _53153_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1a658a8ce:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> _53316_ident = *it;
			{
				if ((_53316_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1a658a8ce;
				};
				if (_1a3e4162d_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53153_imp)),_53316_ident.get()._field_Kind)) {
					_1a3e3edac_pushErr(&(*_self_), _53316_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
					_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_53173_ok=false;
					goto _iter_next_1a658a8ce;
				};
				jule::Any _54521_def = _1a3e419e6_getImportDef(&(*_self_), _53316_ident.get()._field_Kind,_53153_imp);;
				{
					auto &_match_expr{ _54521_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1a658d7b1:;
						{
							goto _iter_next_1a658a8ce;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
						_case_begin_1a658e031:;
						{
							jule::Ptr<_1a3e59e4e_Var> _55125_v = _54521_def.operator jule::Ptr<_1a3e59e4e_Var>();;
							_53173_ok=(_1a659053d_checkImportSelection(&(*_self_), _53316_ident,_55125_v) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
						_case_begin_1a658b1a4:;
						{
							jule::Ptr<_1a3ecd016_TypeAlias> _55425_ta = _54521_def.operator jule::Ptr<_1a3ecd016_TypeAlias>();;
							_53173_ok=(_1a659494e_checkImportSelection(&(*_self_), _53316_ident,_55425_ta) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
						_case_begin_1a658d5a2:;
						{
							jule::Ptr<_1a30e9b8e_Struct> _55725_s = _54521_def.operator jule::Ptr<_1a30e9b8e_Struct>();;
							_53173_ok=(_1a6598d1b_checkImportSelection(&(*_self_), _53316_ident,_55725_s) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a31d9a81_Trait>>()) {
						_case_begin_1a658d618:;
						{
							jule::Ptr<_1a31d9a81_Trait> _56025_t = _54521_def.operator jule::Ptr<_1a31d9a81_Trait>();;
							_53173_ok=(_1a659d3d6_checkImportSelection(&(*_self_), _53316_ident,_56025_t) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a31dbbc6_Enum>>()) {
						_case_begin_1a658e262:;
						{
							jule::Ptr<_1a31dbbc6_Enum> _56325_e = _54521_def.operator jule::Ptr<_1a31dbbc6_Enum>();;
							_53173_ok=(_1a65a27a3_checkImportSelection(&(*_self_), _53316_ident,_56325_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a31dd2c1_TypeEnum>>()) {
						_case_begin_1a658e2c8:;
						{
							jule::Ptr<_1a31dd2c1_TypeEnum> _56625_e = _54521_def.operator jule::Ptr<_1a31dd2c1_TypeEnum>();;
							_53173_ok=(_1a65a6b70_checkImportSelection(&(*_self_), _53316_ident,_56625_e) && _53173_ok);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a31c7bc3_Fn>>()) {
						_case_begin_1a658e33e:;
						{
							jule::Ptr<_1a31c7bc3_Fn> _56925_f = _54521_def.operator jule::Ptr<_1a31c7bc3_Fn>();;
							_53173_ok=(_1a65ab03c_checkImportSelection(&(*_self_), _53316_ident,_56925_f) && _53173_ok);
						}
					}
					else {
						_case_begin_1a658d393:;
						{
							_1a3e3edac_pushErr(&(*_self_), _53316_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53316_ident.get()._field_Kind)}));
							_53173_ok=false;
							goto _iter_next_1a658a8ce;
						}
					}
					_match_end_1a658d074:;
				};
			}
			_iter_next_1a658a8ce:;
			++it;
			goto _iter_begin_1a658a8ce;
		}
		_iter_end_1a658a8ce:;
	};
	return _53173_ok;
}



inline jule::Bool _1a65b0926_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65b2609:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a659053d_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65b2609:;
			++it;
			goto _iter_begin_1a65b2609;
		}
		_iter_end_1a65b2609:;
	};
	return _58117_ok;
}

inline jule::Bool _1a65b1d89_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65b561d:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecd016_TypeAlias> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a659494e_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65b561d:;
			++it;
			goto _iter_begin_1a65b561d;
		}
		_iter_end_1a65b561d:;
	};
	return _58117_ok;
}

inline jule::Bool _1a65b44da_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65b8610:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a6598d1b_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65b8610:;
			++it;
			goto _iter_begin_1a65b8610;
		}
		_iter_end_1a65b8610:;
	};
	return _58117_ok;
}

inline jule::Bool _1a65b8a2d_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65bb646:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a65ab03c_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65bb646:;
			++it;
			goto _iter_begin_1a65bb646;
		}
		_iter_end_1a65bb646:;
	};
	return _58117_ok;
}

inline jule::Bool _1a65ba502_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a31d9a81_Trait>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65be5e4:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a659d3d6_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65be5e4:;
			++it;
			goto _iter_begin_1a65be5e4;
		}
		_iter_end_1a65be5e4:;
	};
	return _58117_ok;
}

inline jule::Bool _1a65bd4a0_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a31dbbc6_Enum>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65c2592:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dbbc6_Enum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a65a27a3_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65c2592:;
			++it;
			goto _iter_begin_1a65c2592;
		}
		_iter_end_1a65c2592:;
	};
	return _58117_ok;
}

inline jule::Bool _1a65c144d_checkImportsAllSelectionsFromCollection(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a31dd2c1_TypeEnum>>& _58062_s, jule::Ptr<_1ba1dbeab_Token>& _58071_et) {
	jule::Bool _58117_ok = true;;
	{
		auto &expr = _58062_s;
		auto it = expr.begin();
		_iter_begin_1a65ca435:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dd2c1_TypeEnum> &_58216_d = *it;
			{
				if (_58216_d.get()._field_Public) {
					_58117_ok=(_1a65a6b70_checkImportSelection(&(*_self_), _58071_et,_58216_d) && _58117_ok);
				};
			}
			_iter_next_1a65ca435:;
			++it;
			goto _iter_begin_1a65ca435;
		}
		_iter_end_1a65ca435:;
	};
	return _58117_ok;
}



inline jule::Bool _1a3e42909_checkImportAllSelections(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _59044_imp) {
	jule::Bool _59064_ok = jule::Bool();
	_59064_ok=true;
	{
		auto &expr = _59044_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a65aeeec:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> &_59216_file = *it;
			{
				_59064_ok=(_1a65b0926_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Vars,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1a65b1d89_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeAliases,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1a65b44da_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Structs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1a65b8a2d_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Funcs,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1a65ba502_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Traits,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1a65bd4a0_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_Enums,_59044_imp.get()._field_Token) && _59064_ok);
				_59064_ok=(_1a65c144d_checkImportsAllSelectionsFromCollection(&(*_self_), _59216_file.get()._field_TypeEnums,_59044_imp.get()._field_Token) && _59064_ok);
			}
			_iter_next_1a65aeeec:;
			++it;
			goto _iter_begin_1a65aeeec;
		}
		_iter_end_1a65aeeec:;
	};
	return _59064_ok;
}



inline jule::Bool _1a3e42c28_checkImportSelections(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _60445_imp) {
	jule::Bool _60465_ok = jule::Bool();
	if ((_60445_imp.get()._field_Selected.len() > 0LL)) {
		_60465_ok = _1a3e421cd_checkImportSelectedSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	} else if (_60445_imp.get()._field_ImportAll) {
		_60465_ok = _1a3e42909_checkImportAllSelections(&(*_self_), _60445_imp);
		return _60465_ok;
	};
	_60465_ok = true;
	return _60465_ok;
}



inline jule::Bool _1a3e43036_isUseAliasDuplication(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _61341_imp) {
	if ((_61341_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a65cd6d0:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _61821_imp2 = *it;
			{
				if ((_61821_imp2 == _61341_imp)) {
					goto _iter_end_1a65cd6d0;
				};
				if ((_61821_imp2.get()._field_Alias == _61341_imp.get()._field_Alias)) {
					return true;
				};
				if (((_61821_imp2.get()._field_Ident == _61821_imp2.get()._field_LinkPath) && (_61821_imp2.get()._field_Ident == _61341_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1a65cd6d0:;
			++it;
			goto _iter_begin_1a65cd6d0;
		}
		_iter_end_1a65cd6d0:;
	};
	return false;
}



inline jule::Bool _1a3e43344_checkImport(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3e3409e_ImportInfo>& _63335_imp) {
	if ((_63335_imp.get()._field_CppLinked || (_63335_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_1a3e43036_isUseAliasDuplication(&(*_self_), _63335_imp)) {
		_1a3e3edac_pushErr(&(*_self_), _63335_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63335_imp.get()._field_Alias)}));
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63335_imp.get()._field_Duplicate))) {
		jule::Ptr<_1a3e3c1ea_Sema> _64421_sema = jule::new_ptr<_1a3e3c1ea_Sema>(_1a3e3c1ea_Sema{._field_flags=(*_self_)._field_flags});;
		_1a3e56e6d_check(_64421_sema, _63335_imp.get()._field_Package.get()._field_Files);
		if ((_64421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64421_sema.get()._field_errors);
			_64421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1a3e42c28_checkImportSelections(&(*_self_), _63335_imp);
}



inline void _1a3e43520_checkImports(_1a3e3c1ea_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a65d48d4:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _65821_file = *it;
			{
				_1a3e3e9e4_setCurrentFile(&(*_self_), _65821_file);
				{
					auto &expr = _65821_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1a65d5495:;
					if (it != expr.end()) {
						jule::Ptr<_1a3e3409e_ImportInfo> _66025_imp = *it;
						{
							jule::Bool _66121_ok = _1a3e43344_checkImport(&(*_self_), _66025_imp);;
							if ((!(_66121_ok))) {
								_1a3e3edac_pushErr(&(*_self_), _66025_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_66025_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_1a65d5495:;
						++it;
						goto _iter_begin_1a65d5495;
					}
					_iter_end_1a65d5495:;
				};
			}
			_iter_next_1a65d48d4:;
			++it;
			goto _iter_begin_1a65d48d4;
		}
		_iter_end_1a65d48d4:;
	};
}



inline void _1a3e436eb_implFileImpls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1a65d66a5:;
		if (it != expr.end()) {
			jule::Ptr<_1a326e41d_Impl> _67221_imp = *it;
			{
				_1a3e4e053_implImpl(_self_, _67221_imp);
			}
			_iter_next_1a65d66a5:;
			++it;
			goto _iter_begin_1a65d66a5;
		}
		_iter_end_1a65d66a5:;
	};
}



inline void _1a3e438c7_implImpls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a65d74ec:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _67821_file = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _67821_file);
				_1a3e436eb_implFileImpls(_self_);
			}
			_iter_next_1a65d74ec:;
			++it;
			goto _iter_begin_1a65d74ec;
		}
		_iter_end_1a65d74ec:;
	};
}



inline void _1a3e43aa3_checkEnums(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a65d8245:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _68521_file = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _68521_file);
				_1a3e4b67c_checkEnumDecls(_self_);
			}
			_iter_next_1a65d8245:;
			++it;
			goto _iter_begin_1a65d8245;
		}
		_iter_end_1a65d8245:;
	};
}



inline _1a3edc234_typeChecker _1a3e44004_typeChecker(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Trait<_1a3eee697_Lookup> _69135_l, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _69150_generics, jule::Ptr<_1a3edb420_referencer> _69213_referencer) {
	_1a3edc234_typeChecker _69317_tc = _1a3edc234_typeChecker{._field_s=_self_, ._field_rootLookup=_69135_l, ._field_lookup=_69135_l, ._field_referencer=_69213_referencer, ._field_useGenerics=_69150_generics, };;
	{
		auto &_match_expr{ _69135_l };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a65da797:;
			{
				jule::Ptr<_1a3e2427b_scopeChecker> _70221_hard = _1a3e25788_getHardRoot(_69135_l.operator jule::Ptr<_1a3e2427b_scopeChecker>());;
				_69317_tc._field_refers=_70221_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1a65da687:;
	};
	if (((_69213_referencer != nullptr) && (_69213_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69213_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
				_case_begin_1a65dac70:;
				{
					_69317_tc._field_ownerAlias=_69213_referencer.get()._field_owner.operator jule::Ptr<_1a3ecd016_TypeAlias>();
				}
			}
			_match_end_1a65da3bd:;
		};
	};
	return _69317_tc;
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e444ee_buildTypeWithRefers(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3109462_TypeDecl>& _71844_t, jule::Trait<_1a3eee697_Lookup> _71867_l, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _71913_generics, jule::Ptr<_1a3edb420_referencer> _71941_referencer) {
	return ({ auto _wrap_copy = _1a3e44004_typeChecker(_self_, _71867_l,_71913_generics,_71941_referencer); _1a3ee930c_checkDecl(&_wrap_copy, _71844_t); });
}



inline jule::Bool _1a3e449e9_checkTypeWithRefers(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3ed2d62_TypeSymbol>& _72544_t, jule::Trait<_1a3eee697_Lookup> _72564_l, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _72613_generics, jule::Ptr<_1a3edb420_referencer> _72641_referencer) {
	jule::Bool _72668_ok = jule::Bool();
	if (_1a3ed3219_checked(_72544_t.ptr())) {
		_72668_ok = true;
		return _72668_ok;
	};
	_72544_t.get()._field_Kind=_1a3e444ee_buildTypeWithRefers(_self_, _72544_t.get()._field_Decl,_72564_l,_72613_generics,_72641_referencer);
	_72668_ok = _1a3ed3219_checked(_72544_t.ptr());
	return _72668_ok;
}



inline jule::Ptr<_1a3205e21_constraintChecker> _1a3e44c5d_constraintChecker(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	return jule::new_ptr<_1a3205e21_constraintChecker>(_1a3205e21_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _1a3e45115_checkType(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3ed2d62_TypeSymbol>& _74034_t, jule::Trait<_1a3eee697_Lookup> _74054_l) {
	return _1a3e449e9_checkTypeWithRefers(_self_, _74034_t,_74054_l,nullptr,nullptr);
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e45566_buildTypeWithGenerics(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3109462_TypeDecl>& _74646_t, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _74713_generics, jule::Ptr<_1a31cd745_ReferenceStack> _74741_refers) {
	jule::Ptr<_1a3edc234_typeChecker> _74817_tc = jule::new_ptr<_1a3edc234_typeChecker>(_1a3edc234_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_refers=_74741_refers, ._field_useGenerics=_74713_generics, });;
	return _1a3ee930c_checkDecl(_74817_tc.ptr(), _74646_t);
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e45874_buildType(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3109462_TypeDecl>& _75934_t) {
	return _1a3e45566_buildTypeWithGenerics(_self_, _75934_t,nullptr,nullptr);
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e45b82_selectType(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3109462_TypeDecl>& _76435_t) {
	jule::Ptr<_1a3edc234_typeChecker> _76517_tc = jule::new_ptr<_1a3edc234_typeChecker>(_1a3edc234_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1a3ee930c_checkDecl(_76517_tc.ptr(), _76435_t);
}



inline jule::Ptr<_1a3ea49e3_Eval> _1a3e460d3_evalpd(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Trait<_1a3eee697_Lookup> _77630_l, jule::Ptr<_1a3ecdc09_TypeKind> _77645_p, jule::Ptr<_1a3e59e4e_Var> _77663_owner) {
	jule::Ptr<_1a3ea49e3_Eval> _77717_e = jule::new_ptr<_1a3ea49e3_Eval>(_1a3ea49e3_Eval{._field_s=_self_, ._field_lookup=_77630_l, ._field_owner=_77663_owner, });;
	{
		auto &_match_expr{ _77630_l };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a65e5939:;
			{
				_77717_e.get()._field_unsafety=_1a3e2504b_isUnsafe(_77630_l.operator jule::Ptr<_1a3e2427b_scopeChecker>());
			}
		}
		_match_end_1a65e5829:;
	};
	_77717_e.get()._field_prefix=_77645_p;
	return _77717_e;
}



inline jule::Ptr<_1a3ea49e3_Eval> _1a3e4648a_evalp(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Trait<_1a3eee697_Lookup> _79129_l, jule::Ptr<_1a3ecdc09_TypeKind> _79144_p) {
	return _1a3e460d3_evalpd(_self_, _79129_l,_79144_p,nullptr);
}



inline jule::Ptr<_1a3ea49e3_Eval> _1a3e46798_eval(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Trait<_1a3eee697_Lookup> _79628_l) {
	return _1a3e4648a_evalp(_self_, _79628_l,nullptr);
}



inline jule::Bool _1a3e46c93_checkAssignType(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Bool _80035_destIsRef, jule::Ptr<_1a3ecdc09_TypeKind>& _80057_dest, jule::Ptr<_1a3ea2e75_Data>& _80114_d, jule::Ptr<_1ba1dbeab_Token> _80128_errorToken) {
	if (_80114_d.get()._field_Decl) {
		_1a3e3edac_pushErr(_self_.ptr(), _80128_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_80035_destIsRef) {
		if ((!(_1a3ece413_Equals(_80057_dest, _80114_d.get()._field_Kind)))) {
			_1a3e3edac_pushErr(_self_.ptr(), _80128_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_80057_dest.ptr())),jule::Any(_1a3ece105_Str(_80114_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1a3e8d746_assignTypeChecker> _81221_atc = jule::new_ptr<_1a3e8d746_assignTypeChecker>(_1a3e8d746_assignTypeChecker{._field_s=_self_, ._field_dest=_80057_dest, ._field_d=_80114_d, ._field_errorToken=_80128_errorToken});;
		jule::Bool _81817_ok = _1a3e8e8bd_check(_81221_atc.ptr());;
		if ((!(_81817_ok))) {
			return false;
		};
	};
	if (((!(_1a3ea3838_IsConst(_80114_d.ptr()))) || (_1a3ed0d1b_Prim(_80057_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _82817_kind = _1a3ed0d1b_Prim(_80057_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1a3e2092b_IsSigInt(_82817_kind)) {
			_case_begin_1a65ec6cc:;
			{
				_1a31b8ed3_SetI64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1a3e20a5d_IsUnsigInt(_82817_kind)) {
			_case_begin_1a65ec754:;
			{
				_1a31b9258_SetU64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1a3e20cc2_IsFloat(_82817_kind)) {
			_case_begin_1a65ec7cb:;
			{
				_1a31b99c8_SetF64(_80114_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a31b8c5d_AsF64(_80114_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1a65ec611:;
	};
	return true;
}



inline jule::Bool _1a3e471e4_checkTypeCompatibility(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _84247_dest, jule::Ptr<_1a3ecdc09_TypeKind>& _84314_src, jule::Ptr<_1ba1dbeab_Token>& _84335_errorToken) {
	if ((_84314_src == nullptr)) {
		_1a3e3edac_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_84247_dest.ptr())),jule::Any(_1a3ece105_Str(_84314_src.ptr()))}));
		return false;
	};
	if ((_1a3ed29aa_Tup(_84314_src.ptr()) != nullptr)) {
		_1a3e3edac_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_84247_dest.ptr())),jule::Any(_1a3ece105_Str(_84314_src.ptr()))}));
		return false;
	};
	_1a3e8bb1d_typeCompatibilityChecker _85717_tcc = _1a3e8bb1d_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84247_dest, ._field_src=_84314_src, ._field_errorToken=_84335_errorToken};;
	if (_1a3e8d207_check(&_85717_tcc)) {
		return true;
	};
	_1a3e3edac_pushErr(_self_.ptr(), _84335_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_84247_dest.ptr())),jule::Any(_1a3ece105_Str(_84314_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e475bd_buildNonGenericTypeKind(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3109462_TypeDecl>& _87848_ast, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>& _87914_generics) {
	jule::Ptr<_1a3edc234_typeChecker> _88017_tc = jule::new_ptr<_1a3edc234_typeChecker>(_1a3edc234_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_ignoreGenerics=_87914_generics, });;
	return _1a3ee930c_checkDecl(_88017_tc.ptr(), _87848_ast);
}



inline void _1a3e47876_buildFnNonGenericTypeKinds(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31ca874_FnIns>& _88951_f) {
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _89017_generics = nullptr;;
	if (_1a31c8399_IsMethod(_88951_f.get()._field_Decl.ptr())) {
		_89017_generics=jule::append(_88951_f.get()._field_Decl.get()._field_Generics,_88951_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89017_generics=_88951_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _88951_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a6606076:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c99a5_ParamIns> _89721_p = *it;
			{
				if ((!(_1a31c69b3_IsSelf(_89721_p.get()._field_Decl.ptr())))) {
					_89721_p.get()._field_Kind=_1a3e475bd_buildNonGenericTypeKind(_self_, _89721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89017_generics);
				};
			}
			_iter_next_1a6606076:;
			++it;
			goto _iter_begin_1a6606076;
		}
		_iter_end_1a6606076:;
	};
	if ((!(_1a31c8135_IsVoid(_88951_f.get()._field_Decl.ptr())))) {
		_88951_f.get()._field_Result=_1a3e475bd_buildNonGenericTypeKind(_self_, _88951_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89017_generics);
	};
}



inline jule::Ptr<_1a31ca874_FnIns> _1a3e47b95_getTraitCheckFnKind(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c7bc3_Fn>& _90744_f) {
	if ((_90744_f.get()._field_Instances.len() == 1LL)) {
		return _90744_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_1a31ca874_FnIns> _91117_ins = _1a31c90ae_instanceForce(_90744_f);;
	jule::Ptr<_1a3edc234_typeChecker> _91317_tc = jule::new_ptr<_1a3edc234_typeChecker>(_1a3edc234_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a3eee697_Lookup>(_self_, 3), });;
	{
		auto &expr = _91117_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a660a50e:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c99a5_ParamIns> _91821_p = *it;
			{
				if ((!(_1a31c69b3_IsSelf(_91821_p.get()._field_Decl.ptr())))) {
					_91821_p.get()._field_Kind=_1a3ee930c_checkDecl(_91317_tc.ptr(), _91821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1a660a50e:;
			++it;
			goto _iter_begin_1a660a50e;
		}
		_iter_end_1a660a50e:;
	};
	if ((!(_1a31c8135_IsVoid(_90744_f.ptr())))) {
		_91117_ins.get()._field_Result=_1a3ee930c_checkDecl(_91317_tc.ptr(), _90744_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91117_ins;
}



inline jule::Bool _1a3e480e6_checkConstraintsFn(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31ca874_FnIns>& _93043_f, jule::Ptr<_1ba1dbeab_Token>& _93059_et, jule::Ptr<_1a31ca874_FnIns> _93075_exist) {
	jule::Ptr<_1a3205e21_constraintChecker> _93117_cc = _1a3e44c5d_constraintChecker(_self_);;
	_93117_cc.get()._field_et=_93059_et;
	_93117_cc.get()._field_fi=_93043_f;
	if ((_93075_exist != nullptr)) {
		{
			auto &expr = _93075_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1a660de2a:;
			if (it != expr.end()) {
				jule::I64 _93518_i = it - expr.begin();
				jule::Ptr<_1a3ecc4cc_InsGeneric> _93525_g = *it;
				{
					_93043_f.get()._field_Generics[_93518_i].get()._field_Constraint=_93525_g.get()._field_Constraint;
				}
				_iter_next_1a660de2a:;
				++it;
				_93518_i++;
				goto _iter_begin_1a660de2a;
			}
			_iter_end_1a660de2a:;
		};
	} else {
		_93117_cc.get()._field_uniq=true;
	};
	return _1a324ad78_check(_93117_cc);
}



inline jule::Bool _1a3e48547_checkConstraintsStruct(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _94447_s, jule::Ptr<_1ba1dbeab_Token>& _94467_et, jule::Ptr<_1a312ad46_StructIns> _94483_exist) {
	jule::Ptr<_1a3205e21_constraintChecker> _94517_cc = _1a3e44c5d_constraintChecker(_self_);;
	_94517_cc.get()._field_et=_94467_et;
	_94517_cc.get()._field_si=_94447_s;
	if ((_94483_exist != nullptr)) {
		{
			auto &expr = _94483_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1a6611b97:;
			if (it != expr.end()) {
				jule::I64 _94918_i = it - expr.begin();
				jule::Ptr<_1a3ecc4cc_InsGeneric> _94925_g = *it;
				{
					_94447_s.get()._field_Generics[_94918_i].get()._field_Constraint=_94925_g.get()._field_Constraint;
				}
				_iter_next_1a6611b97:;
				++it;
				_94918_i++;
				goto _iter_begin_1a6611b97;
			}
			_iter_end_1a6611b97:;
		};
	} else {
		_94517_cc.get()._field_uniq=true;
	};
	return _1a324ad78_check(_94517_cc);
}



inline jule::Bool _1a3e488ee_fnEnvironment(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31ca874_FnIns>& _96138_f, jule::Fn<jule::Bool(jule::Ptr<_1a3e3c1ea_Sema>&,jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&)> _96149_algo) {
	jule::Ptr<_1a3e3c1ea_Sema> _96217_sema = _96138_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1a3e9d14b_SymbolTable> _96317_old = _96138_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a3e3e9e4_setCurrentFile(_96138_f.get()._field_Decl.get()._field_sema.ptr(), _96317_old);
	});;
	jule::Ptr<_1a3e9d14b_SymbolTable> _96517_file = _1a3e3b804_findFile(_96138_f.get()._field_Decl.get()._field_sema.get()._field_files,_96138_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_96517_file != nullptr)) {
		_1a3e3e9e4_setCurrentFile(_96138_f.get()._field_Decl.get()._field_sema.ptr(), _96517_file);
	};
	jule::I64 _97017_size = _96138_f.get()._field_Generics.len();;
	if (((_96138_f.get()._field_Decl != nullptr) && (_96138_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97017_size+=_96138_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _97517_generics = jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>::alloc(0LL,_97017_size);;
	_1a3e3b4a2_appendGenericTypeAliases(_97517_generics,_96138_f);
	jule::Bool _97813_ok = _96149_algo(_96217_sema,_97517_generics);;
	if ((_96217_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_96217_sema.get()._field_errors);
		_96217_sema.get()._field_errors=nullptr;
	};
	return _97813_ok;
}



inline void _1a3e48b74_checkFnParamKind(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c99a5_ParamIns>& _98841_p) {
	_98841_p.get()._field_Kind.get()._field_Variadic=_98841_p.get()._field_Decl.get()._field_Variadic;
	if ((_98841_p.get()._field_Decl.get()._field_Reference && (!(_1a3eeb122_isValidForRef(_98841_p.get()._field_Kind))))) {
		_1a3e3edac_pushErr(_self_.ptr(), _98841_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_98841_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _1a3e48e82_reloadFnInsTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31ca874_FnIns> _99540_f) {
	if ((_1a31cbc0a_IsBuiltin(_99540_f.ptr()) || _1a31cbe6e_IsAnon(_99540_f.ptr()))) {
		return true;
	};
	return _1a3e488ee_fnEnvironment(_self_, _99540_f,jule::Fn<jule::Bool(jule::Ptr<_1a3e3c1ea_Sema>&,jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>&)>([=](jule::Ptr<_1a3e3c1ea_Sema>& _99943_sema, jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>& _99961_generics) mutable -> jule::Bool {
		jule::Bool _100021_ok = true;;
		{
			auto &expr = _99540_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1a661da2d:;
			if (it != expr.end()) {
				jule::Ptr<_1a31c99a5_ParamIns> _100125_p = *it;
				{
					if (_1a31c69b3_IsSelf(_100125_p.get()._field_Decl.ptr())) {
						if (_1a31c6c27_IsRef(_100125_p.get()._field_Decl.ptr())) {
							_100125_p.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed6e65_Sptr>(_1a3ed6e65_Sptr{._field_Elem=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_99540_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100125_p.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_99540_f.get()._field_Owner, 0)});
						};
					} else {
						_100125_p.get()._field_Kind=_1a3e45566_buildTypeWithGenerics(_99943_sema, _100125_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_99961_generics,_99540_f.get()._field_Refers);
						if ((_100125_p.get()._field_Kind != nullptr)) {
							_1a3e48b74_checkFnParamKind(_self_, _100125_p);
						} else {
							_100021_ok=false;
						};
					};
				}
				_iter_next_1a661da2d:;
				++it;
				goto _iter_begin_1a661da2d;
			}
			_iter_end_1a661da2d:;
		};
		if ((!(_1a31c8135_IsVoid(_99540_f.get()._field_Decl.ptr())))) {
			_99540_f.get()._field_Result=_1a3e45566_buildTypeWithGenerics(_99943_sema, _99540_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_99961_generics,_99540_f.get()._field_Refers);
			_100021_ok=((_99540_f.get()._field_Result != nullptr) && _100021_ok);
		};
		return _100021_ok;
	}));
}



inline jule::Bool _1a3e49405_checkRefValidityForInitExpr(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Bool _103147_leftMut, jule::Ptr<_1a3ea2e75_Data>& _103167_d, jule::Ptr<_1ba1dbeab_Token>& _103182_errorToken) {
	{
		auto &_match_expr{ _103167_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a6623bba:;
			{
				goto _match_end_1a661cd29;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>>()) {
			_case_begin_1a6623c31:;
			{
				jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel> _103621_model = _103167_d.get()._field_Model.operator jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>();;
				if ((!(_1a3e3a33b_isValidModelForRef(_103621_model.get()._field_Expr)))) {
					_1a3e3edac_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_103621_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a6623c97:;
			{
				jule::Ptr<_1a31c200d_StructSubIdentExprModel> _104221_model = _103167_d.get()._field_Model.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>();;
				if ((!(_1a3e3a33b_isValidModelForRef(_104221_model.get()._field_Expr.get()._field_Model)))) {
					_1a3e3edac_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104221_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c25c4_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>>()) {
			_case_begin_1a66244a1:;
			{
				_1a3e3edac_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c02d6_UnaryExprModel>>()) {
			_case_begin_1a6624517:;
			{
				jule::Ptr<_1a31c02d6_UnaryExprModel> _105221_unary = _103167_d.get()._field_Model.operator jule::Ptr<_1a31c02d6_UnaryExprModel>();;
				if ((_105221_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1a3e3a33b_isValidModelForRef(_103167_d.get()._field_Model)))) {
						_1a3e3edac_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1a661cd29;
				};
				goto _case_begin_1a6623a88;
			}
		}
		else {
			_case_begin_1a6623a88:;
			{
				_1a3e3edac_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a661cd29:;
	};
	if ((_103147_leftMut && (!(_103167_d.get()._field_Mutable)))) {
		_1a3e3edac_pushErr(_self_.ptr(), _103182_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1a3e499cc_checkValidityForInitExpr(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Bool _107244_leftMut, jule::Bool _107259_leftRef, jule::Ptr<_1a3ecdc09_TypeKind>& _107310_leftKind, jule::Ptr<_1a3ea2e75_Data>& _107336_d, jule::Ptr<_1ba1dbeab_Token>& _107351_errorToken) {
	if (((_107244_leftMut && (!(_107336_d.get()._field_Mutable))) && _1a3ed0106_Mutable(_107336_d.get()._field_Kind.ptr()))) {
		_1a3e3edac_pushErr(_self_.ptr(), _107351_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_107336_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_107259_leftRef) {
		if ((!(_1a3e49405_checkRefValidityForInitExpr(_self_, _107244_leftMut,_107336_d,_107351_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_1a3e8d746_assignTypeChecker> _108317_atc = jule::new_ptr<_1a3e8d746_assignTypeChecker>(_1a3e8d746_assignTypeChecker{._field_s=_self_, ._field_d=_107336_d, ._field_errorToken=_107351_errorToken});;
	return _1a3e8de1c_checkValidity(_108317_atc.ptr());
}



inline jule::Bool _1a3e49d95_checkTypeAliasDeclKind(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3ecd016_TypeAlias>& _109147_ta, jule::Trait<_1a3eee697_Lookup> _109167_l) {
	jule::Bool _109180_ok = jule::Bool();
	jule::Ptr<_1a3e9d14b_SymbolTable> _109217_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a3e3e9e4_setCurrentFile(_self_.ptr(), _109217_old);
	});;
	if ((_109147_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1a3e9d14b_SymbolTable> _109721_file = _1a3e3b804_findFile(_self_.get()._field_files,_109147_ta.get()._field_Token.get()._field_File);;
		if ((_109721_file != nullptr)) {
			_1a3e3e9e4_setCurrentFile(_self_.ptr(), _109721_file);
		};
	};
	_109180_ok=_1a3e449e9_checkTypeWithRefers(_self_, _109147_ta.get()._field_Kind,_109167_l,nullptr,jule::new_ptr<_1a3edb420_referencer>(_1a3edb420_referencer{._field_ident=_109147_ta.get()._field_Ident, ._field_owner=jule::Any(_109147_ta), ._field_refs=(&(_109147_ta.get()._field_Refers))}));
	if (((_109180_ok && (_1a3ed1a31_Arr(_109147_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1a3ed1a31_Arr(_109147_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1a3e3edac_pushErr(_self_.ptr(), _109147_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_109180_ok=false;
	};
	return _109180_ok;
}



inline void _1a3e4a1b4_checkTypeAliasDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3ecd016_TypeAlias>& _111443_ta, jule::Trait<_1a3eee697_Lookup> _111463_l) {
	if (_1ba1de750_IsIgnoreIdent(_111443_ta.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _111443_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a3e49d95_checkTypeAliasDeclKind(_self_, _111443_ta,_111463_l);
}



inline void _1a3e4a439_checkTypeAliasDeclDup(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3ecd016_TypeAlias>& _112246_ta) {
	if (_1ba1de750_IsIgnoreIdent(_112246_ta.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _112246_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112246_ta)),_112246_ta.get()._field_Ident,_112246_ta.get()._field_CppLinked)) {
		_1a3e3edac_pushErr(_self_.ptr(), _112246_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112246_ta.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a3e49d95_checkTypeAliasDeclKind(_self_, _112246_ta,jule::Trait<_1a3eee697_Lookup>(_self_, 3));
}



inline jule::Bool _1a3e4a69d_checkTypeAliasDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _113441_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1a6637629:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecd016_TypeAlias> _113521_ta = *it;
			{
				_1a3e4a439_checkTypeAliasDeclDup(_self_, _113521_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_113441_ok = false;
					return _113441_ok;
				};
			}
			_iter_next_1a6637629:;
			++it;
			goto _iter_begin_1a6637629;
		}
		_iter_end_1a6637629:;
	};
	_113441_ok = true;
	return _113441_ok;
}



inline void _1a6649839_checkEnumItemsDup(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>> _114639_items) {
	{
		auto &expr = _114639_items;
		auto it = expr.begin();
		_iter_begin_1a664ab37:;
		if (it != expr.end()) {
			jule::Ptr<_1a31db1d1_EnumItem> &_114716_item = *it;
			{
				if (_114716_item.get()._field_Ident.empty()) {
					goto _iter_next_1a664ab37;
				} else if (_1ba1de750_IsIgnoreIdent(_114716_item.get()._field_Ident)) {
					_1a3e3edac_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114639_items;
						auto it = expr.begin();
						_iter_begin_1a664bb6b:;
						if (it != expr.end()) {
							jule::Ptr<_1a31db1d1_EnumItem> &_115324_citem = *it;
							{
								if ((_114716_item == _115324_citem)) {
									goto _iter_end_1a664bb6b;
								} else if ((_114716_item.get()._field_Ident == _115324_citem.get()._field_Ident)) {
									_1a3e3edac_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114716_item.get()._field_Ident)}));
									_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1a664bb6b;
								};
							}
							_iter_next_1a664bb6b:;
							++it;
							goto _iter_begin_1a664bb6b;
						}
						_iter_end_1a664bb6b:;
					};
				};
			}
			_iter_next_1a664ab37:;
			++it;
			goto _iter_begin_1a664ab37;
		}
		_iter_end_1a664ab37:;
	};
}

inline void _1a6655922_checkEnumItemsDup(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>> _114639_items) {
	{
		auto &expr = _114639_items;
		auto it = expr.begin();
		_iter_begin_1a6656bcb:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dcc0a_TypeEnumItem> &_114716_item = *it;
			{
				if (_114716_item.get()._field_Ident.empty()) {
					goto _iter_next_1a6656bcb;
				} else if (_1ba1de750_IsIgnoreIdent(_114716_item.get()._field_Ident)) {
					_1a3e3edac_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114639_items;
						auto it = expr.begin();
						_iter_begin_1a6657c10:;
						if (it != expr.end()) {
							jule::Ptr<_1a31dcc0a_TypeEnumItem> &_115324_citem = *it;
							{
								if ((_114716_item == _115324_citem)) {
									goto _iter_end_1a6657c10;
								} else if ((_114716_item.get()._field_Ident == _115324_citem.get()._field_Ident)) {
									_1a3e3edac_pushErr(&(*_self_), _114716_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_114716_item.get()._field_Ident)}));
									_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1a6657c10;
								};
							}
							_iter_next_1a6657c10:;
							++it;
							goto _iter_begin_1a6657c10;
						}
						_iter_end_1a6657c10:;
					};
				};
			}
			_iter_next_1a6656bcb:;
			++it;
			goto _iter_begin_1a6656bcb;
		}
		_iter_end_1a6656bcb:;
	};
}



inline void _1a3e4ab98_checkEnumItemsStr(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31dbbc6_Enum>& _116642_e) {
	jule::Ptr<_1a3ea49e3_Eval> _116717_eval = _1a3e46798_eval(_self_, jule::Trait<_1a3eee697_Lookup>(_self_, 3));;
	{
		auto &expr = _116642_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1a663973b:;
		if (it != expr.end()) {
			jule::Ptr<_1a31db1d1_EnumItem> _116821_item = *it;
			{
				if (_1a31db5bb_AutoExpr(_116821_item.ptr())) {
					_116821_item.get()._field_Value=jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Data=jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Constant=static__1a31b6ed1_NewStr(_116821_item.get()._field_Ident)})});
					_116821_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116821_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1a3ea2e75_Data> _117725_d = _1a3ec0404_evalExpr(_116717_eval, _116821_item.get()._field_Value.get()._field_Expr);;
					if ((_117725_d == nullptr)) {
						goto _iter_next_1a663973b;
					};
					if ((!(_1a3ea3838_IsConst(_117725_d.ptr())))) {
						_1a3e3edac_pushErr(_self_.ptr(), _116821_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1a3e46c93_checkAssignType(_self_, false,_116642_e.get()._field_Kind.get()._field_Kind,_117725_d,_116821_item.get()._field_Token);
					_116821_item.get()._field_Value.get()._field_Data=_117725_d;
				};
			}
			_iter_next_1a663973b:;
			++it;
			goto _iter_begin_1a663973b;
		}
		_iter_end_1a663973b:;
	};
}



inline void _1a3e4ae1d_checkEnumItemsInt(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31dbbc6_Enum>& _119242_e) {
	jule::Ptr<_1a3ed36d1_Prim> _119313_prim = _1a3ed0d1b_Prim(_119242_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _119417_max = static_cast<jule::U64>(_1a37d19a2_Max(_1a3ed3a44_Str(_119313_prim.ptr())));;
	jule::Ptr<_1a3ea49e3_Eval> _119517_eval = _1a3e46798_eval(_self_, jule::Trait<_1a3eee697_Lookup>(_self_, 3));;
	{
		auto &expr = _119242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1a663ed5c:;
		if (it != expr.end()) {
			jule::I64 _119614_i = it - expr.begin();
			jule::Ptr<_1a31db1d1_EnumItem> _119621_item = *it;
			{
				if ((_119417_max == 0LLU)) {
					_1a3e3edac_pushErr(_self_.ptr(), _119621_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_119417_max)--;
				};
				if (_1a31db5bb_AutoExpr(_119621_item.ptr())) {
					_119621_item.get()._field_Value=jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Data=jule::new_ptr<_1a3ea2e75_Data>()});
					{
						
						if (_1a3e2092b_IsSigInt(_1a3ed3a44_Str(_119313_prim.ptr()))) {
							_case_begin_1a6642b1d:;
							{
								_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_119417_max - (_119417_max - static_cast<jule::U64>(_119614_i))))));
							}
						}
						else {
							_case_begin_1a6642249:;
							{
								_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1a31b6aa2_NewU64(static_cast<jule::U64>((_119417_max - (_119417_max - static_cast<jule::U64>(_119614_i)))));
							}
						}
						_match_end_1a66421e4:;
					};
					_119621_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_119621_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1a3ea2e75_Data> _121425_d = _1a3ec0404_evalExpr(_119517_eval, _119621_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_1a663ed5c;
					};
					if ((!(_1a3ea3838_IsConst(_121425_d.ptr())))) {
						_1a3e3edac_pushErr(_self_.ptr(), _119621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1a3e46c93_checkAssignType(_self_, false,_119242_e.get()._field_Kind.get()._field_Kind,_121425_d,_119621_item.get()._field_Token);
					_119621_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_1a663ed5c:;
			++it;
			_119614_i++;
			goto _iter_begin_1a663ed5c;
		}
		_iter_end_1a663ed5c:;
	};
}



inline void _1a3e4b193_checkEnumDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31dbbc6_Enum>& _122738_e) {
	if (_1ba1de750_IsIgnoreIdent(_122738_e.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122738_e)),_122738_e.get()._field_Ident,false)) {
		_1a3e3edac_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122738_e.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122738_e.get()._field_Items.len() == 0LL)) {
		_1a3e3edac_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122738_e.get()._field_Ident)}));
	};
	_1a6649839_checkEnumItemsDup(_self_.ptr(), _122738_e.get()._field_Items);
	if ((_122738_e.get()._field_Kind != nullptr)) {
		if ((!(_1a3e45115_checkType(_self_, _122738_e.get()._field_Kind,jule::Trait<_1a3eee697_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_122738_e.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1a3ed36d1_Prim> _125417_t = _1a3ed0d1b_Prim(_122738_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_125417_t == nullptr)) {
		_1a3e3edac_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a3ed6915_IsStr(_125417_t.ptr())) {
			_case_begin_1a6651511:;
			{
				_1a3e4ab98_checkEnumItemsStr(_self_, _122738_e);
			}
		}
		else if (_1a3e20b90_IsInt(_1a3ed3a44_Str(_125417_t.ptr()))) {
			_case_begin_1a66513e0:;
			{
				_1a3e4ae1d_checkEnumItemsInt(_self_, _122738_e);
			}
		}
		else {
			_case_begin_1a6650466:;
			{
				_1a3e3edac_pushErr(_self_.ptr(), _122738_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6650400:;
	};
}



inline void _1a3e4b418_checkTypeEnumDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31dd2c1_TypeEnum>& _127142_e) {
	if (_1ba1de750_IsIgnoreIdent(_127142_e.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127142_e)),_127142_e.get()._field_Ident,false)) {
		_1a3e3edac_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127142_e.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127142_e.get()._field_Items.len() == 0LL)) {
		_1a3e3edac_pushErr(_self_.ptr(), _127142_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127142_e.get()._field_Ident)}));
		return;;
	};
	_1a6655922_checkEnumItemsDup(_self_.ptr(), _127142_e.get()._field_Items);
	{
		auto &expr = _127142_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1a66569cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dcc0a_TypeEnumItem> _128521_item = *it;
			{
				if ((_128521_item.get()._field_Kind == nullptr)) {
					_1a3e3edac_pushErr(_self_.ptr(), _128521_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1a66569cd;
				};
				jule::Bool _129017_ok = _1a3e45115_checkType(_self_, _128521_item.get()._field_Kind,jule::Trait<_1a3eee697_Lookup>(_self_, 3));;
				if ((!(_129017_ok))) {
					goto _iter_next_1a66569cd;
				};
				jule::Ptr<_1a3ed36d1_Prim> _129417_p = _1a3ed0d1b_Prim(_128521_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_129417_p != nullptr) && _1a3ed6b79_IsAny(_129417_p.ptr()))) {
					_1a3e3edac_pushErr(_self_.ptr(), _128521_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a66569cd:;
			++it;
			goto _iter_begin_1a66569cd;
		}
		_iter_end_1a66569cd:;
	};
	if ((_127142_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1a31dcc0a_TypeEnumItem> _130021_item = _127142_e.get()._field_Items[0LL];;
		_1a3ecdc09_TypeKind _130117_tk = _1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_127142_e, 4)};;
		if (((_130021_item.get()._field_Kind.get()._field_Kind != nullptr) && _1a3ece413_Equals(_130021_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1a3ecdc09_TypeKind>)((&(_130117_tk))))))) {
			_1a3e3edac_pushErr(_self_.ptr(), _130021_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1a31dd601_Str(_127142_e.ptr()))}));
		};
	};
}



inline jule::Bool _1a3e4b67c_checkEnumDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _131136_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1a666082d:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dbbc6_Enum> _131221_e = *it;
			{
				_1a3e4b193_checkEnumDecl(_self_, _131221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_131136_ok = false;
					return _131136_ok;
				};
			}
			_iter_next_1a666082d:;
			++it;
			goto _iter_begin_1a666082d;
		}
		_iter_end_1a666082d:;
	};
	_131136_ok = true;
	return _131136_ok;
}



inline jule::Bool _1a3e4b8e1_checkTypeEnumDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _132340_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1a6662027:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dd2c1_TypeEnum> _132421_e = *it;
			{
				_1a3e4b418_checkTypeEnumDecl(_self_, _132421_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_132340_ok = false;
					return _132340_ok;
				};
			}
			_iter_next_1a6662027:;
			++it;
			goto _iter_begin_1a6662027;
		}
		_iter_end_1a6662027:;
	};
	_132340_ok = true;
	return _132340_ok;
}



inline jule::Bool _1a3e4bbee_checkDeclGenerics(_1a3e3c1ea_Sema* _self_, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>& _133437_generics) {
	jule::Bool _133470_ok = jule::Bool();
	_133470_ok=true;
	{
		auto &expr = _133437_generics;
		auto it = expr.begin();
		_iter_begin_1a6663a51:;
		if (it != expr.end()) {
			jule::I64 _133613_i = it - expr.begin();
			jule::Ptr<_1a3116a46_GenericDecl> &_133616_g = *it;
			{
				if (_1ba1de750_IsIgnoreIdent(_133616_g.get()._field_Ident)) {
					_1a3e3edac_pushErr(&(*_self_), _133616_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_133470_ok=false;
					goto _iter_next_1a6663a51;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _133437_generics;
					auto it = expr.begin();
					_iter_begin_1a6664b0c:;
					if (it != expr.end()) {
						jule::I64 _134517_j = it - expr.begin();
						jule::Ptr<_1a3116a46_GenericDecl> &_134520_ct = *it;
						{
							{
								
								if ((_134517_j >= _133613_i)) {
									_case_begin_1a6666504:;
									{
										goto _iter_end_1a6664b0c;
									}
								}
								else if ((_133616_g.get()._field_Ident == _134520_ct.get()._field_Ident)) {
									_case_begin_1a666657b:;
									{
										_1a3e3edac_pushErr(&(*_self_), _133616_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133616_g.get()._field_Ident)}));
										_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_133470_ok=false;
										goto _iter_end_1a6664b0c;
									}
								}
								_match_end_1a66663d3:;
							};
						}
						_iter_next_1a6664b0c:;
						++it;
						_134517_j++;
						goto _iter_begin_1a6664b0c;
					}
					_iter_end_1a6664b0c:;
				};
			}
			_iter_next_1a6663a51:;
			++it;
			_133613_i++;
			goto _iter_begin_1a6663a51;
		}
		_iter_end_1a6663a51:;
	};
	return _133470_ok;
}



inline jule::Bool _1a3e4c00c_checkFnDeclParamsDup(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a31c7bc3_Fn>& _136140_f) {
	jule::Bool _136150_ok = jule::Bool();
	_136150_ok=true;
	_julec_label_check:;
	{
		auto &expr = _136140_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a6668a78:;
		if (it != expr.end()) {
			jule::I64 _136413_i = it - expr.begin();
			jule::Ptr<_1a31c6386_Param> &_136416_p = *it;
			{
				{
					auto &expr = _136140_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1a6668957:;
					if (it != expr.end()) {
						jule::Ptr<_1a3116a46_GenericDecl> &_136620_g = *it;
						{
							if ((_136416_p.get()._field_Ident == _136620_g.get()._field_Ident)) {
								_136150_ok=false;
								_1a3e3edac_pushErr(&(*_self_), _136416_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136416_p.get()._field_Ident)}));
								_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1a6668a78;
							};
						}
						_iter_next_1a6668957:;
						++it;
						goto _iter_begin_1a6668957;
					}
					_iter_end_1a6668957:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136140_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1a666a272:;
					if (it != expr.end()) {
						jule::I64 _137617_j = it - expr.begin();
						jule::Ptr<_1a31c6386_Param> &_137620_jp = *it;
						{
							{
								
								if ((_137617_j >= _136413_i)) {
									_case_begin_1a666c20d:;
									{
										goto _iter_end_1a666a272;
									}
								}
								else if ((_1ba1de9e7_IsAnonIdent(_136416_p.get()._field_Ident) || _1ba1de9e7_IsAnonIdent(_137620_jp.get()._field_Ident))) {
									_case_begin_1a666c285:;
									{
										goto _iter_end_1a666a272;
									}
								}
								else if ((_136416_p.get()._field_Ident == _137620_jp.get()._field_Ident)) {
									_case_begin_1a666c30c:;
									{
										_136150_ok=false;
										_1a3e3edac_pushErr(&(*_self_), _136416_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136416_p.get()._field_Ident)}));
										_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1a6668a78;
									}
								}
								_match_end_1a666c0cb:;
							};
						}
						_iter_next_1a666a272:;
						++it;
						_137617_j++;
						goto _iter_begin_1a666a272;
					}
					_iter_end_1a666a272:;
				};
			}
			_iter_next_1a6668a78:;
			++it;
			_136413_i++;
			goto _iter_begin_1a6668a78;
		}
		_iter_end_1a6668a78:;
	};
	return _136150_ok;
}



inline jule::Bool _1a3e4c31a_checkFnDeclResultDup(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a31c7bc3_Fn>& _139540_f) {
	jule::Bool _139550_ok = jule::Bool();
	_139550_ok=true;
	if (_1a31c8135_IsVoid(_139540_f.ptr())) {
		return _139550_ok;
	};
	{
		auto &expr = _139540_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1a6670354:;
		if (it != expr.end()) {
			jule::I64 _140213_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> &_140216_v = *it;
			{
				if ((_1ba1de750_IsIgnoreIdent(_140216_v.get()._field_Kind) || _1ba1de9e7_IsAnonIdent(_140216_v.get()._field_Kind))) {
					goto _iter_next_1a6670354;
				};
				{
					auto &expr = _139540_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1a66718b6:;
					if (it != expr.end()) {
						jule::Ptr<_1a3116a46_GenericDecl> &_140720_g = *it;
						{
							if ((_140216_v.get()._field_Kind == _140720_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a66718b6:;
						++it;
						goto _iter_begin_1a66718b6;
					}
					_iter_end_1a66718b6:;
				};
				{
					auto &expr = _139540_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1a6672bb4:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c6386_Param> &_141320_p = *it;
						{
							if ((_140216_v.get()._field_Kind == _141320_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a6672bb4:;
						++it;
						goto _iter_begin_1a6672bb4;
					}
					_iter_end_1a6672bb4:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _139540_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1a6673ec3:;
					if (it != expr.end()) {
						jule::I64 _142117_j = it - expr.begin();
						jule::Ptr<_1ba1dbeab_Token> &_142120_jv = *it;
						{
							{
								
								if ((_142117_j >= _140213_i)) {
									_case_begin_1a6674cc6:;
									{
										goto _iter_end_1a6673ec3;
									}
								}
								else if ((_142120_jv.get()._field_Kind == _140216_v.get()._field_Kind)) {
									_case_begin_1a6674d4d:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a6674ba5:;
							};
						}
						_iter_next_1a6673ec3:;
						++it;
						_142117_j++;
						goto _iter_begin_1a6673ec3;
					}
					_iter_end_1a6673ec3:;
				};
				goto _iter_next_1a6670354;
				_julec_label_exist:;
				_1a3e3edac_pushErr(&(*_self_), _140216_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_140216_v.get()._field_Kind)}));
				_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_139550_ok=false;
			}
			_iter_next_1a6670354:;
			++it;
			_140213_i++;
			goto _iter_begin_1a6670354;
		}
		_iter_end_1a6670354:;
	};
	return _139550_ok;
}



inline void _1a3e4c590_checkFnDeclPrototype(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c7bc3_Fn>& _144245_f) {
	if ((_144245_f.get()._field_Exceptional && _144245_f.get()._field_CppLinked)) {
		_1a3e3edac_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_144245_f.get()._field_Exceptional) {
		if (_1a31c860d_IsEntryPoint(_144245_f.ptr())) {
			_1a3e3edac_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1a31c8872_IsInit(_144245_f.ptr())) {
			_1a3e3edac_pushErr(_self_.ptr(), _144245_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a3e4bbee_checkDeclGenerics(_self_.ptr(), _144245_f.get()._field_Generics)))) {
			_case_begin_1a66782d5:;
		}
		else if ((!(_1a3e4c00c_checkFnDeclParamsDup(_self_.ptr(), _144245_f)))) {
			_case_begin_1a667835c:;
		}
		else if ((!(_1a3e4c31a_checkFnDeclResultDup(_self_.ptr(), _144245_f)))) {
			_case_begin_1a6679836:;
		}
		_match_end_1a667812b:;
	};
}



inline void _1a3e4c815_checkTraitDeclMethod(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c7bc3_Fn>& _146345_f) {
	if (_1ba1de750_IsIgnoreIdent(_146345_f.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _146345_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_146345_f.get()._field_sema=_self_;
	_1a3e4c590_checkFnDeclPrototype(_self_, _146345_f);
	jule::Ptr<_1a31ca874_FnIns> _147017_ins = _1a31c9323_instance(_146345_f);;
	_1a3e48e82_reloadFnInsTypes(_self_, _147017_ins);
	_147017_ins.get()._field_reloaded=true;
	_1a31c95ed_appendInstance(_146345_f.ptr(), _147017_ins);
}



inline void _1a3e4ca8a_checkTraitDeclMethods(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31d9a81_Trait>& _147646_t) {
	{
		auto &expr = _147646_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a667d186:;
		if (it != expr.end()) {
			jule::I64 _147714_i = it - expr.begin();
			jule::Ptr<_1a31c7bc3_Fn> _147721_f = *it;
			{
				_1a3e4c815_checkTraitDeclMethod(_self_, _147721_f);
				_147646_t.get()._field_Mutable=(_147646_t.get()._field_Mutable || _147721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _147646_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1a6680122:;
					if (it != expr.end()) {
						jule::I64 _148817_j = it - expr.begin();
						jule::Ptr<_1a31c7bc3_Fn> _148820_jf = *it;
						{
							{
								
								if ((_148817_j >= _147714_i)) {
									_case_begin_1a6681222:;
									{
										goto _iter_end_1a6680122;
									}
								}
								else if ((_147721_f.get()._field_Ident == _148820_jf.get()._field_Ident)) {
									_case_begin_1a6681299:;
									{
										_1a3e3edac_pushErr(_self_.ptr(), _147721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147721_f.get()._field_Ident)}));
										_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1a6680122;
									}
								}
								_match_end_1a6681101:;
							};
						}
						_iter_next_1a6680122:;
						++it;
						_148817_j++;
						goto _iter_begin_1a6680122;
					}
					_iter_end_1a6680122:;
				};
			}
			_iter_next_1a667d186:;
			++it;
			_147714_i++;
			goto _iter_begin_1a667d186;
		}
		_iter_end_1a667d186:;
	};
}



inline void _1a3e4cd10_checkTraitDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31d9a81_Trait>& _150739_t) {
	if (_1ba1de750_IsIgnoreIdent(_150739_t.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _150739_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150739_t)),_150739_t.get()._field_Ident,false)) {
		_1a3e3edac_pushErr(_self_.ptr(), _150739_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_150739_t.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a3e4ca8a_checkTraitDeclMethods(_self_, _150739_t);
}



inline jule::Bool _1a3e4d074_checkTraitDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _151937_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1a6685578:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> _152021_t = *it;
			{
				_1a3e4cd10_checkTraitDecl(_self_, _152021_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_151937_ok = false;
					return _151937_ok;
				};
			}
			_iter_next_1a6685578:;
			++it;
			goto _iter_begin_1a6685578;
		}
		_iter_end_1a6685578:;
	};
	_151937_ok = true;
	return _151937_ok;
}



inline jule::Bool _1a3e4d42b_checkTraitImplMethods(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a31d9a81_Trait>& _153045_base, jule::Ptr<_1a326e41d_Impl>& _153060_ipl) {
	jule::Bool _153074_ok = jule::Bool();
	_153074_ok=true;
	{
		auto &expr = _153060_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a6687437:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> &_153216_f = *it;
			{
				if ((_1a31da90b_FindMethod(_153045_base.ptr(), _153216_f.get()._field_Ident) == nullptr)) {
					_1a3e3edac_pushErr(&(*_self_), _153216_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153045_base.get()._field_Ident),jule::Any(_153216_f.get()._field_Ident)}));
					_153074_ok=false;
				};
			}
			_iter_next_1a6687437:;
			++it;
			goto _iter_begin_1a6687437;
		}
		_iter_end_1a6687437:;
	};
	return _153074_ok;
}



inline jule::Bool _1a3e4d7d3_implToStruct(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _154137_dest, jule::Ptr<_1a326e41d_Impl>& _154157_ipl) {
	jule::Bool _154171_ok = jule::Bool();
	_154171_ok=true;
	{
		auto &expr = _154157_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a66898e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _154521_f = *it;
			{
				if (((_1a30d8d6a_FindMethod(_154137_dest.ptr(), _154521_f.get()._field_Ident,_154521_f.get()._field_Statically) != nullptr) || (_1a30d92bb_FindField(_154137_dest.ptr(), _154521_f.get()._field_Ident) != nullptr))) {
					_1a3e3edac_pushErr(_self_.ptr(), _154521_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154137_dest.get()._field_Ident),jule::Any(_154521_f.get()._field_Ident)}));
					_154171_ok=false;
					goto _iter_next_1a66898e0;
				};
				if (((_154137_dest.get()._field_Generics.len() > 0LL) && (_154521_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _154521_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1a668c162:;
						if (it != expr.end()) {
							jule::Ptr<_1a3116a46_GenericDecl> _155324_fg = *it;
							{
								{
									auto &expr = _154137_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1a668c9c0:;
									if (it != expr.end()) {
										jule::Ptr<_1a3116a46_GenericDecl> _155428_dg = *it;
										{
											if ((_155324_fg.get()._field_Ident == _155428_dg.get()._field_Ident)) {
												_1a3e3edac_pushErr(_self_.ptr(), _155324_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_154171_ok=false;
											};
										}
										_iter_next_1a668c9c0:;
										++it;
										goto _iter_begin_1a668c9c0;
									}
									_iter_end_1a668c9c0:;
								};
							}
							_iter_next_1a668c162:;
							++it;
							goto _iter_begin_1a668c162;
						}
						_iter_end_1a668c162:;
					};
				};
				_1a3e40d03_checkDirectives(_self_, _154521_f.get()._field_Directives,jule::Any(_154521_f));
				_154521_f.get()._field_sema=_self_;
				_154521_f.get()._field_Owner=_154137_dest;
				_154137_dest.get()._field_Methods = jule::alloc_for_append(_154137_dest.get()._field_Methods,1);_154137_dest.get()._field_Methods.__push(_154521_f);;
			}
			_iter_next_1a66898e0:;
			++it;
			goto _iter_begin_1a66898e0;
		}
		_iter_end_1a66898e0:;
	};
	{
		auto &expr = _154157_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1a668eac1:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _157021_v = *it;
			{
				;
				if (((_1a30d8d6a_FindMethod(_154137_dest.ptr(), _157021_v.get()._field_Ident,true) != nullptr) || (_1a30d9d7c_FindStatic(_154137_dest.ptr(), _157021_v.get()._field_Ident) != nullptr))) {
					_1a3e3edac_pushErr(_self_.ptr(), _157021_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154137_dest.get()._field_Ident),jule::Any(_157021_v.get()._field_Ident)}));
					_154171_ok=false;
					goto _iter_next_1a668eac1;
				};
				_154137_dest.get()._field_Statics = jule::alloc_for_append(_154137_dest.get()._field_Statics,1);_154137_dest.get()._field_Statics.__push(_157021_v);;
			}
			_iter_next_1a668eac1:;
			++it;
			goto _iter_begin_1a668eac1;
		}
		_iter_end_1a668eac1:;
	};
	return _154171_ok;
}



inline void _1a3e4da58_implTrait(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a326e41d_Impl>& _158334_decl) {
	jule::Ptr<_1a3ecdc09_TypeKind> _158417_base_t = _1a3e45b82_selectType(_self_, _158334_decl.get()._field_Base);;
	if ((_158417_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a31d9a81_Trait> _158817_base = _1a3ed24d2_Trait(_158417_base_t.ptr());;
	if ((_158817_base == nullptr)) {
		_1a3e3edac_pushErr(_self_.ptr(), _158334_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_158417_base_t.ptr()))}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _159517_destT = _1a3e45b82_selectType(_self_, _158334_decl.get()._field_Dest);;
	if ((_159517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a312ad46_StructIns> _159917_destS = _1a3ed226d_Struct(_159517_destT.ptr());;
	if ((_159917_destS == nullptr)) {
		_1a3e3edac_pushErr(_self_.ptr(), _158334_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_159517_destT.ptr()))}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a30e9b8e_Struct> _160617_dest = _159917_destS.get()._field_Decl;;
	if ((_1ba1e2c3c_Dir(_160617_dest.get()._field_Token.get()._field_File.ptr()) != _1ba1e2c3c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1a3e3edac_pushErr(_self_.ptr(), _158334_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_158817_base.get()._field_Implemented = jule::alloc_for_append(_158817_base.get()._field_Implemented,1);_158817_base.get()._field_Implemented.__push(_160617_dest);;
	_160617_dest.get()._field_Implements = jule::alloc_for_append(_160617_dest.get()._field_Implements,1);_160617_dest.get()._field_Implements.__push(_158817_base);;
	if ((_158334_decl.get()._field_Statics.len() > 0LL)) {
		_1a3e3edac_pushErr(_self_.ptr(), _158334_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a3e4d42b_checkTraitImplMethods(_self_.ptr(), _158817_base,_158334_decl)))) {
			_case_begin_1a669a659:;
			{
				return;;
			}
		}
		else if ((!(_1a3e4d7d3_implToStruct(_self_, _160617_dest,_158334_decl)))) {
			_case_begin_1a669a6c0:;
			{
				return;;
			}
		}
		_match_end_1a669a3b2:;
	};
}



inline void _1a3e4dccd_implStruct(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a326e41d_Impl>& _162835_decl) {
	jule::Ptr<_1a3ecdc09_TypeKind> _162917_destT = _1a3e45b82_selectType(_self_, _162835_decl.get()._field_Dest);;
	if ((_162917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a312ad46_StructIns> _163317_destS = _1a3ed226d_Struct(_162917_destT.ptr());;
	if ((_163317_destS == nullptr)) {
		_1a3e3edac_pushErr(_self_.ptr(), _162835_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_162917_destT.ptr()))}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a30e9b8e_Struct> _164017_dest = _163317_destS.get()._field_Decl;;
	if ((_1ba1e2c3c_Dir(_164017_dest.get()._field_Token.get()._field_File.ptr()) != _1ba1e2c3c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1a3e3edac_pushErr(_self_.ptr(), _162835_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a3e4d7d3_implToStruct(_self_, _164017_dest,_162835_decl)))) {
			_case_begin_1a66a061a:;
			{
				return;;
			}
		}
		_match_end_1a669edde:;
	};
}



inline void _1a3e4e053_implImpl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a326e41d_Impl>& _165333_decl) {
	{
		
		if (_1a324e3a9_IsTraitImpl(_165333_decl.ptr())) {
			_case_begin_1a66a1264:;
			{
				_1a3e4da58_implTrait(_self_, _165333_decl);
			}
		}
		else if (_1a324eb07_IsStructImpl(_165333_decl.ptr())) {
			_case_begin_1a66a12db:;
			{
				_1a3e4dccd_implStruct(_self_, _165333_decl);
			}
		}
		_match_end_1a66a1143:;
	};
}



inline void _1a3e4e372_checkVarDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3e59e4e_Var>& _166437_decl, jule::Trait<_1a3eee697_Lookup> _166453_l) {
	if (_1ba1de750_IsIgnoreIdent(_166437_decl.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1a3e5a57b_IsTypeInferred(_166437_decl.ptr())) {
		if ((!(_1a3e5a317_IsInitialized(_166437_decl.ptr())))) {
			_1a3e3edac_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1a3e45115_checkType(_self_, _166437_decl.get()._field_Kind,_166453_l);
	};
	if ((_166437_decl.get()._field_Constant && _166437_decl.get()._field_Reference)) {
		_1a3e3edac_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1a3e5a317_IsInitialized(_166437_decl.ptr())))) {
		if (_166437_decl.get()._field_Constant) {
			_1a3e3edac_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_166437_decl.get()._field_Statically) {
			_1a3e3edac_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_166437_decl.get()._field_Reference) {
			_1a3e3edac_pushErr(_self_.ptr(), _166437_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1a3e4e5e7_checkGlobalVarDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3e59e4e_Var>& _169643_decl) {
	if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169643_decl)),_169643_decl.get()._field_Ident,_169643_decl.get()._field_CppLinked)) {
		_1a3e3edac_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_169643_decl.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_169643_decl.get()._field_CppLinked && _169643_decl.get()._field_Constant)) {
		_1a3e3edac_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_169643_decl.get()._field_CppLinked)) && (!(_169643_decl.get()._field_Constant))) && (!(_169643_decl.get()._field_Statically)))) {
		_1a3e3edac_pushErr(_self_.ptr(), _169643_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1a3e40d03_checkDirectives(_self_, _169643_decl.get()._field_Directives,jule::Any(_169643_decl));
	_1a3e4e372_checkVarDecl(_self_, _169643_decl,jule::Trait<_1a3eee697_Lookup>(_self_, 3));
}



inline jule::Bool _1a3e4e85b_checkGlobalDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _171338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a66ab659:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _171421_decl = *it;
			{
				_1a3e4e5e7_checkGlobalVarDecl(_self_, _171421_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171338_ok = false;
					return _171338_ok;
				};
			}
			_iter_next_1a66ab659:;
			++it;
			goto _iter_begin_1a66ab659;
		}
		_iter_end_1a66ab659:;
	};
	_171338_ok = true;
	return _171338_ok;
}



inline jule::Bool _1a3e4ec13_checkStructTraitImpl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _172445_strct, jule::Ptr<_1a31d9a81_Trait>& _172466_trt) {
	jule::Bool _172481_ok = jule::Bool();
	{
		auto &expr = _172466_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a66ad46e:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _172521_tf = *it;
			{
				jule::Bool _172621_exist = false;;
				jule::Ptr<_1a31c7bc3_Fn> _172721_sf = _1a30d8d6a_FindMethod(_172445_strct.ptr(), _172521_tf.get()._field_Ident,_172521_tf.get()._field_Statically);;
				jule::Ptr<_1a31ca874_FnIns> _172817_tfK = _1a3e47b95_getTraitCheckFnKind(_self_, _172521_tf);;
				if ((_172721_sf != nullptr)) {
					jule::Ptr<_1a31ca874_FnIns> _173025_sfK = _1a3e47b95_getTraitCheckFnKind(_self_, _172721_sf);;
					_172621_exist=(((_172817_tfK.get()._field_Decl.get()._field_Public == _173025_sfK.get()._field_Decl.get()._field_Public) && (_172817_tfK.get()._field_Decl.get()._field_Ident == _173025_sfK.get()._field_Decl.get()._field_Ident)) && _1a31cb732_equalsTrait(_172817_tfK, _173025_sfK));
				};
				if (_172621_exist) {
					jule::Ptr<_1a30c5a27_Directive> _173621_d = _1a3ec83a7_findDirective(_172721_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_173621_d != nullptr)) {
						_1a3e3edac_pushErr(_self_.ptr(), _173621_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_172481_ok=false;
				} else {
					;
					jule::Str _174325_s = _1a31cc58a_GetKindStr(_172817_tfK.ptr(), true);;
					if (_172521_tf.get()._field_Public) {
						(_174325_s).buffer.insert(0, (jule::Str()));;
					};
					_1a3e3edac_pushErr(_self_.ptr(), _172445_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_172466_trt.get()._field_Ident),jule::Any(_174325_s)}));
					_172481_ok=false;
				};
			}
			_iter_next_1a66ad46e:;
			++it;
			goto _iter_begin_1a66ad46e;
		}
		_iter_end_1a66ad46e:;
	};
	return _172481_ok;
}



inline jule::Bool _1a3e50021_checkStructImpls(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _175441_s) {
	jule::Bool _175455_ok = jule::Bool();
	_175455_ok=true;
	{
		auto &expr = _175441_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1a66b5366:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> _175621_trt = *it;
			{
				_175455_ok=(_1a3e4ec13_checkStructTraitImpl(_self_, _175441_s,_175621_trt) && _175455_ok);
			}
			_iter_next_1a66b5366:;
			++it;
			goto _iter_begin_1a66b5366;
		}
		_iter_end_1a66b5366:;
	};
	return _175455_ok;
}



inline jule::Bool _1a3e5032e_checkStructFields(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _176242_st) {
	jule::Bool _176257_ok = jule::Bool();
	_176257_ok=true;
	{
		auto &expr = _176242_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a66b6840:;
		if (it != expr.end()) {
			jule::Ptr<_1a30dc038_Field> _176421_f = *it;
			{
				_176421_f.get()._field_Owner=_176242_st;
				{
					auto &expr = _176242_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1a66b727a:;
					if (it != expr.end()) {
						jule::Ptr<_1a30dc038_Field> _176620_cf = *it;
						{
							if ((_176421_f == _176620_cf)) {
								goto _iter_end_1a66b727a;
							} else if ((_176421_f.get()._field_Ident == _176620_cf.get()._field_Ident)) {
								_1a3e3edac_pushErr(_self_.ptr(), _176421_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176421_f.get()._field_Ident)}));
								_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_176257_ok=false;
							};
						}
						_iter_next_1a66b727a:;
						++it;
						goto _iter_begin_1a66b727a;
					}
					_iter_end_1a66b727a:;
				};
			}
			_iter_next_1a66b6840:;
			++it;
			goto _iter_begin_1a66b6840;
		}
		_iter_end_1a66b6840:;
	};
	return _176257_ok;
}



inline void _1a3e505a4_checkStructDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _177940_s) {
	if (_1ba1de750_IsIgnoreIdent(_177940_s.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _177940_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177940_s)),_177940_s.get()._field_Ident,_177940_s.get()._field_CppLinked)) {
		_1a3e3edac_pushErr(_self_.ptr(), _177940_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177940_s.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a3e40d03_checkDirectives(_self_, _177940_s.get()._field_Directives,jule::Any(_177940_s));
	{
		
		if ((!(_1a3e4bbee_checkDeclGenerics(_self_.ptr(), _177940_s.get()._field_Generics)))) {
			_case_begin_1a66bb724:;
		}
		else if ((!(_1a3e5032e_checkStructFields(_self_, _177940_s)))) {
			_case_begin_1a66bb78a:;
		}
		else if ((!(_1a3e50021_checkStructImpls(_self_, _177940_s)))) {
			_case_begin_1a66bb801:;
		}
		_match_end_1a66bb5d1:;
	};
}



inline jule::Bool _1a3e50818_checkStructDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _179738_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a66bcc0e:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _179821_s = *it;
			{
				_1a3e505a4_checkStructDecl(_self_, _179821_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179738_ok = false;
					return _179738_ok;
				};
			}
			_iter_next_1a66bcc0e:;
			++it;
			goto _iter_begin_1a66bcc0e;
		}
		_iter_end_1a66bcc0e:;
	};
	_179738_ok = true;
	return _179738_ok;
}



inline void _1a3e50a8d_checkFnDecl(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c7bc3_Fn>& _180836_f) {
	if (_1ba1de750_IsIgnoreIdent(_180836_f.get()._field_Ident)) {
		_1a3e3edac_pushErr(_self_.ptr(), _180836_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a3e40d03_checkDirectives(_self_, _180836_f.get()._field_Directives,jule::Any(_180836_f));
	_180836_f.get()._field_sema=_self_;
	_1a3e4c590_checkFnDeclPrototype(_self_, _180836_f);
	if (_1a3e409d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_180836_f)),_180836_f.get()._field_Ident,_180836_f.get()._field_CppLinked)) {
		if ((_180836_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1a31c7bc3_Fn> _182021_init = _1a3e3d9e3_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182021_init != nullptr)) {
				return;;
			};
		};
		_1a3e3edac_pushErr(_self_.ptr(), _180836_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_180836_f.get()._field_Ident)}));
		_1a3e401cb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a3e50d02_checkFnDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	jule::Bool _183134_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a66c330d:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _183221_f = *it;
			{
				_1a3e50a8d_checkFnDecl(_self_, _183221_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_183134_ok = false;
					return _183134_ok;
				};
			}
			_iter_next_1a66c330d:;
			++it;
			goto _iter_begin_1a66c330d;
		}
		_iter_end_1a66c330d:;
	};
	_183134_ok = true;
	return _183134_ok;
}



inline void _1a3e511ba_pushCycleError(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a30e9b8e_Struct>& _184230_st1, jule::Ptr<_1a30e9b8e_Struct>& _184245_st2, jule::Str& _184264_message) {
	;
	jule::Str _184413_refers_to = _1b9db28eb_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_184230_st1.get()._field_Ident),jule::Any(_184245_st2.get()._field_Ident)}));;
	(_184264_message).buffer.insert(0, (((_1b9d1351c_Repeat(jule::Str(" ", 1),4LL) + _184413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a3e5161b_checkCrossCycle(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a30e9b8e_Struct>& _184831_st1, jule::Ptr<_1a30e9b8e_Struct>& _184846_st2, jule::Str& _184865_message) {
	{
		auto &expr = _184846_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1a66c6c3a:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> &_184916_u = *it;
			{
				if ((_184916_u == _184831_st1)) {
					_1a3e511ba_pushCycleError(&(*_self_), _184846_st2,_184916_u,_184865_message);
					return false;
				};
				if ((!(_1a3e5161b_checkCrossCycle(&(*_self_), _184831_st1,_184916_u,_184865_message)))) {
					_1a3e511ba_pushCycleError(&(*_self_), _184846_st2,_184916_u,_184865_message);
					return false;
				};
			}
			_iter_next_1a66c6c3a:;
			++it;
			goto _iter_begin_1a66c6c3a;
		}
		_iter_end_1a66c6c3a:;
	};
	return true;
}



inline jule::Bool _1a3e51a8e_checkStructDeriveIllegalCycles(_1a3e3c1ea_Sema* _self_, jule::Str _186349_derive, jule::Ptr<_1a30e9b8e_Struct>& _186363_st1, jule::Ptr<_1a3ecdc09_TypeKind>& _186382_k) {
	jule::Bool _186398_ok = jule::Bool();
	jule::Ptr<_1a30e9b8e_Struct> _186417_st2 = _1a3eebcb0_getStructFromKind(_186382_k);;
	if ((_186417_st2 == nullptr)) {
		_186398_ok = true;
		return _186398_ok;
	};
	if ((_186363_st1 == _186417_st2)) {
		_1a3e3edac_pushErr(&(*_self_), _186363_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_186349_derive),jule::Any(_186363_st1.get()._field_Ident)}));
		_186398_ok = false;
		return _186398_ok;
	};
	jule::Str _187617_message = jule::Str();;
	if ((!(_1a3e5161b_checkCrossCycle(&(*_self_), _186363_st1,_186417_st2,_187617_message)))) {
		jule::Str _187821_errMsg = _187617_message;;
		_187617_message=jule::Str();
		_1a3e511ba_pushCycleError(&(*_self_), _186363_st1,_186417_st2,_187617_message);
		_187821_errMsg+=_187617_message;
		_1a3e3edac_pushErr(&(*_self_), _186363_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_186349_derive),jule::Any(_187821_errMsg)}));
		_186398_ok = false;
		return _186398_ok;
	};
	_186398_ok = true;
	return _186398_ok;
}



inline jule::Bool _1a3e51dd0_checkStructInsDeriveClone(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a312ad46_StructIns> _188848_st) {
	jule::Bool _188866_ok = jule::Bool();
	if ((!(_1a30da9a4_IsDerives(_188848_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_188866_ok = true;
		return _188866_ok;
	};
	{
		auto &expr = _188848_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a66ccbca:;
		if (it != expr.end()) {
			jule::Ptr<_1a3102306_FieldIns> _189221_f = *it;
			{
				if ((_189221_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1a66ccbca;
				};
				if ((!(_1a3ed0843_SupportsCloning(_189221_f.get()._field_Kind.ptr())))) {
					_1a3e3edac_pushErr(&(*_self_), _188848_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_189221_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188866_ok = false;
					return _188866_ok;
				};
				if ((!(_1a3e51a8e_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_188848_st.get()._field_Decl,_189221_f.get()._field_Kind)))) {
					_188866_ok = false;
					return _188866_ok;
				};
			}
			_iter_next_1a66ccbca:;
			++it;
			goto _iter_begin_1a66ccbca;
		}
		_iter_end_1a66ccbca:;
	};
	_188866_ok = true;
	return _188866_ok;
}



inline void _1a3e520bc_checkPackageDecls(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a66d0e53:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _191021_f = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _191021_f);
				if ((!(_1a3e4b8e1_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1a3e4a69d_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a66d0e53:;
			++it;
			goto _iter_begin_1a66d0e53;
		}
		_iter_end_1a66d0e53:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a66d244e:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _192021_f = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _192021_f);
				if ((!(_1a3e4d074_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a66d244e:;
			++it;
			goto _iter_begin_1a66d244e;
		}
		_iter_end_1a66d244e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a66d2581:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _192721_f = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _192721_f);
				if ((!(_1a3e4e85b_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a66d2581:;
			++it;
			goto _iter_begin_1a66d2581;
		}
		_iter_end_1a66d2581:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a66d4088:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _193421_f = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _193421_f);
				{
					
					if ((!(_1a3e50d02_checkFnDecls(_self_)))) {
						_case_begin_1a66d4ebd:;
					}
					else if ((!(_1a3e50818_checkStructDecls(_self_)))) {
						_case_begin_1a66d5034:;
					}
					else {
						_case_begin_1a66d4e57:;
						{
							goto _iter_next_1a66d4088;
						}
					}
					_match_end_1a66d4de1:;
				};
				return;;
			}
			_iter_next_1a66d4088:;
			++it;
			goto _iter_begin_1a66d4088;
		}
		_iter_end_1a66d4088:;
	};
}



inline void _1a3e5240d_checkDataForTypeInference(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a3ea2e75_Data>& _194645_d, jule::Ptr<_1ba1dbeab_Token>& _194656_err_token) {
	{
		
		if (_1a3ea3360_IsNil(_194645_d.ptr())) {
			_case_begin_1a66d60bd:;
			{
				_1a3e3edac_pushErr(&(*_self_), _194656_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1a3ea35c4_IsVoid(_194645_d.ptr())) {
			_case_begin_1a66d6145:;
			{
				_1a3e3edac_pushErr(&(*_self_), _194656_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194645_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a66d61bc:;
			{
				_1a3e3edac_pushErr(&(*_self_), _194656_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a66d5e8b:;
	};
}



inline void _1a3e52694_checkVar(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3e59e4e_Var>& _195733_v) {
	if (_195733_v.get()._field_CppLinked) {
		return;;
	};
	if (_1a3e5a57b_IsTypeInferred(_195733_v.ptr())) {
		_195733_v.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_195733_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1a3e5240d_checkDataForTypeInference(_self_.ptr(), _195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1a3e499cc_checkValidityForInitExpr(_self_, _195733_v.get()._field_Mutable,_195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1a3ed9a6c_Arr> _197421_arr = _1a3ed1a31_Arr(_195733_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_197421_arr != nullptr)) {
			if (_197421_arr.get()._field_Auto) {
				jule::Ptr<_1a3ed9a6c_Arr> _197725_dataArr = _1a3ed1a31_Arr(_195733_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_197725_dataArr != nullptr)) {
					_197421_arr.get()._field_N=_197725_dataArr.get()._field_N;
				};
			};
		};
		if (_1a3e46c93_checkAssignType(_self_, _195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1a3e499cc_checkValidityForInitExpr(_self_, _195733_v.get()._field_Mutable,_195733_v.get()._field_Reference,_195733_v.get()._field_Kind.get()._field_Kind,_195733_v.get()._field_Value.get()._field_Data,_195733_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_195733_v.get()._field_Reference && (!(_1a3eeb122_isValidForRef(_195733_v.get()._field_Kind.get()._field_Kind))))) {
		_1a3e3edac_pushErr(_self_.ptr(), _195733_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_195733_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_195733_v.get()._field_Constant) {
		if ((!(_1a3ea3838_IsConst(_195733_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1a3e3edac_pushErr(_self_.ptr(), _195733_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195733_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1a3ed29aa_Tup(_195733_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_195733_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1a3e529b3_checkTypeVar(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a3e59e4e_Var>& _201237_decl, jule::Trait<_1a3eee697_Lookup> _201253_l) {
	if ((_201237_decl.get()._field_CppLinked || (!(_1a3e5a317_IsInitialized(_201237_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a3ea49e3_Eval> _201717_eval = nullptr;;
	if ((_201237_decl.get()._field_Kind != nullptr)) {
		_201717_eval=_1a3e460d3_evalpd(_self_, _201253_l,_201237_decl.get()._field_Kind.get()._field_Kind,_201237_decl);
	} else {
		_201717_eval=_1a3e460d3_evalpd(_self_, _201253_l,nullptr,_201237_decl);
	};
	_201717_eval.get()._field_immutable=(!(_201237_decl.get()._field_Mutable));
	_201237_decl.get()._field_Value.get()._field_Data=_1a3ec0404_evalExpr(_201717_eval, _201237_decl.get()._field_Value.get()._field_Expr);
	if ((_201237_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1a3e52694_checkVar(_self_, _201237_decl);
}



inline void _1a3e52b8e_checkGlobalTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a66e6364:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _203321_decl = *it;
			{
				if (((_1a3e5a317_IsInitialized(_203321_decl.ptr()) && (_203321_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1a3e5a57b_IsTypeInferred(_203321_decl.ptr()) && (_203321_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1a3e529b3_checkTypeVar(_self_, _203321_decl,jule::Trait<_1a3eee697_Lookup>(_self_, 3));
				};
			}
			_iter_next_1a66e6364:;
			++it;
			goto _iter_begin_1a66e6364;
		}
		_iter_end_1a66e6364:;
	};
}



inline jule::Ptr<_1a31ca874_FnIns> _1a3e53046_readyToCheckFn(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _204439_s, jule::Ptr<_1a31c7bc3_Fn>& _204459_f) {
	jule::Ptr<_1a31ca874_FnIns> _204517_ins = _1a31c9323_instance(_204459_f);;
	if ((_204459_f.get()._field_Instances.len() != 0LL)) {
		return _204517_ins;
	};
	_204517_ins.get()._field_Owner=_204439_s;
	_1a31c95ed_appendInstance(_204459_f.ptr(), _204517_ins);
	_204517_ins.get()._field_reloaded=true;
	if (_1a3e48e82_reloadFnInsTypes(_self_, _204517_ins)) {
		return _204517_ins;
	};
	return nullptr;
}



inline void _1a3e53365_checkTypeMethod(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _205840_s, jule::Ptr<_1a31c7bc3_Fn>& _205860_f) {
	if ((_205860_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a31ca874_FnIns> _206317_ins = _205860_f.get()._field_Instances[0LL];;
	if ((_206317_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a3e55a3d_checkFnIns(_self_, _206317_ins);
}



inline jule::Ptr<_1a31ca874_FnIns> _1a3e537b6_checkStructInsOp(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _207141_s, jule::Ptr<_1a31c7bc3_Fn>& _207161_f, jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)> _207169_p) {
	if ((((_207161_f == nullptr) || (_207161_f.get()._field_Generics.len() > 0LL)) || (!(_207169_p(_207161_f))))) {
		return nullptr;
	};
	return _207161_f.get()._field_Instances[0LL];
}



inline jule::Bool _1a3e53b6d_checkStructEnv(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _208139_s, jule::Ptr<_1ba1dbeab_Token> _208158_errorToken) {
	jule::Bool _208180_ok = jule::Bool();
	_1a3edc234_typeChecker _208217_tc = _1a3edc234_typeChecker{._field_s=_208139_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1a3eee697_Lookup>(_208139_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1a3eee697_Lookup>(_208139_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1a3edb420_referencer>(_1a3edb420_referencer{._field_ident=_208139_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208139_s.get()._field_Decl), }), ._field_refers=_208139_s.get()._field_Refers, };;
	if ((_208139_s.get()._field_Generics.len() > 0LL)) {
		_208217_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>::alloc(0LL,_208139_s.get()._field_Generics.len());
		{
			auto &expr = _208139_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1a670101c:;
			if (it != expr.end()) {
				jule::I64 _209518_i = it - expr.begin();
				jule::Ptr<_1a3ecc4cc_InsGeneric> _209525_g = *it;
				{
					jule::Ptr<_1a3116a46_GenericDecl> _209625_decl = _208139_s.get()._field_Decl.get()._field_Generics[_209518_i];;
					_208217_tc._field_useGenerics = jule::alloc_for_append(_208217_tc._field_useGenerics,1);_208217_tc._field_useGenerics.__push(jule::new_ptr<_1a3ecd016_TypeAlias>(_1a3ecd016_TypeAlias{._field_Token=_209625_decl.get()._field_Token, ._field_Ident=_209625_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_209525_g.get()._field_Kind}), }));;
				}
				_iter_next_1a670101c:;
				++it;
				_209518_i++;
				goto _iter_begin_1a670101c;
			}
			_iter_end_1a670101c:;
		};
	};
	jule::Ptr<_1a3e9d14b_SymbolTable> _210517_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a3e3e9e4_setCurrentFile(_self_.ptr(), _210517_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208139_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1a3e9d14b_SymbolTable> _210921_file = _1a3e3b804_findFile(_self_.get()._field_files,_208139_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_210921_file != nullptr)) {
			_1a3e3e9e4_setCurrentFile(_self_.ptr(), _210921_file);
		};
	};
	if ((_208139_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a3205e21_constraintChecker> _211621_cc = _1a3e44c5d_constraintChecker(_self_);;
		_211621_cc.get()._field_et=_208158_errorToken;
		_211621_cc.get()._field_si=_208139_s;
		_211621_cc.get()._field_genericsA=_208217_tc._field_useGenerics;
		_211621_cc.get()._field_uniq=true;
		if ((!(_1a324ad78_check(_211621_cc)))) {
			return _208180_ok;
		};
	};
	_208180_ok=true;
	if ((_208139_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _212921_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_208217_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208139_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_1a6708bd4:;
			if (it != expr.end()) {
				jule::Ptr<_1a3e59e4e_Var> _213125_v = *it;
				{
					_1a3e4e372_checkVarDecl(_self_, _213125_v,jule::Trait<_1a3eee697_Lookup>(_self_, 3));
					_1a3e529b3_checkTypeVar(_self_, _213125_v,jule::Trait<_1a3eee697_Lookup>(_self_, 3));
					_208180_ok=(((_self_.get()._field_errors.len() - _212921_n) == 0LL) && _208180_ok);
				}
				_iter_next_1a6708bd4:;
				++it;
				goto _iter_begin_1a6708bd4;
			}
			_iter_end_1a6708bd4:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_208217_tc._field_useGenerics.len());
		if ((!(_208180_ok))) {
			_208180_ok = false;
			return _208180_ok;
		};
	};
	jule::Ptr<_1a3ea49e3_Eval> _214217_eval = _1a3e46798_eval(_self_, jule::Trait<_1a3eee697_Lookup>(_self_, 3));;
	{
		auto &expr = _208139_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a670b577:;
		if (it != expr.end()) {
			jule::Ptr<_1a3102306_FieldIns> _214321_f = *it;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _214421_kind = _1a3ee930c_checkDecl(&_208217_tc, _214321_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_208180_ok=((_214421_kind != nullptr) && _208180_ok);
				if ((_214421_kind == nullptr)) {
					if (((_self_ != _208139_s.get()._field_Decl.get()._field_sema) && (_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208139_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1a670b577;
				};
				_214321_f.get()._field_Kind=_214421_kind;
				_208139_s.get()._field_Mutable=(_208139_s.get()._field_Mutable || ((!(_214321_f.get()._field_Decl.get()._field_Mutable)) && _1a3ed0106_Mutable(_214321_f.get()._field_Kind.ptr())));
				_1a3e51dd0_checkStructInsDeriveClone(_self_.ptr(), _208139_s);
				if ((_214321_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1a670b577;
				};
				_214217_eval.get()._field_prefix=_214321_f.get()._field_Kind;
				_214217_eval.get()._field_field=_214321_f;
				_214321_f.get()._field_Default=_1a3ec0404_evalExpr(_214217_eval, _214321_f.get()._field_Decl.get()._field_Default);
				if ((_214321_f.get()._field_Default == nullptr)) {
					goto _iter_next_1a670b577;
				};
				;
				_1a3e46c93_checkAssignType(_self_, false,_214321_f.get()._field_Kind,_214321_f.get()._field_Default,_214321_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1a670b577:;
			++it;
			goto _iter_begin_1a670b577;
		}
		_iter_end_1a670b577:;
	};
	return _208180_ok;
}



inline jule::Bool _1a3e54025_precheckStructIns(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _217742_s, jule::Ptr<_1ba1dbeab_Token> _217761_errorToken) {
	jule::Bool _217783_ok = jule::Bool();
	_217783_ok=_1a3e53b6d_checkStructEnv(_self_, _217742_s,_217761_errorToken);
	if ((!(_217783_ok))) {
		_217783_ok = false;
		return _217783_ok;
	};
	{
		auto &expr = _217742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a6713c44:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _218221_f = *it;
			{
				if ((_218221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1a3e53046_readyToCheckFn(_self_, _217742_s,_218221_f) == nullptr)) {
						_217783_ok = false;
						return _217783_ok;
					};
				};
			}
			_iter_next_1a6713c44:;
			++it;
			goto _iter_begin_1a6713c44;
		}
		_iter_end_1a6713c44:;
	};
	_217783_ok = true;
	return _217783_ok;
}



inline void _1a3e5429a_checkStructIns(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns>& _219239_s) {
	{
		auto &expr = _219239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a67154a4:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _219321_f = *it;
			{
				_1a3e53365_checkTypeMethod(_self_, _219239_s,_219321_f);
			}
			_iter_next_1a67154a4:;
			++it;
			goto _iter_begin_1a67154a4;
		}
		_iter_end_1a67154a4:;
	};
}



inline void _1a3e54520_checkTypeStruct(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _219840_s) {
	if (_219840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_219840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _219840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a6717022:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _221121_ins = *it;
			{
				_1a3e5429a_checkStructIns(_self_, _221121_ins);
			}
			_iter_next_1a6717022:;
			++it;
			goto _iter_begin_1a6717022;
		}
		_iter_end_1a6717022:;
	};
}



inline void _1a3e546eb_checkStructTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a6717709:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _221721_s = *it;
			{
				_1a3e54520_checkTypeStruct(_self_, _221721_s);
			}
			_iter_next_1a6717709:;
			++it;
			goto _iter_begin_1a6717709;
		}
		_iter_end_1a6717709:;
	};
}



inline void _1a3e54993_checkStructInsOperators(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a312ad46_StructIns> _222247_s) {
	{
		auto &expr = _222247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a6718b4a:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _222321_m = *it;
			{
				{
					auto &_match_expr{ _222321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1a671993c:;
						{
							_222247_s.get()._field_Operators._field_Eq=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _222665_f) mutable -> jule::Bool {
								return static__1a3e5bbed_Eq(_222665_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1a67199b4:;
						{
							_222247_s.get()._field_Operators._field_Gt=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _222865_f) mutable -> jule::Bool {
								return static__1a3e5be95_Gt(_222865_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1a6719a3b:;
						{
							_222247_s.get()._field_Operators._field_GtEq=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _223067_f) mutable -> jule::Bool {
								return static__1a3e5c23c_GtEq(_223067_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1a6719ab3:;
						{
							_222247_s.get()._field_Operators._field_Lt=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _223265_f) mutable -> jule::Bool {
								return static__1a3e5c4d4_Lt(_223265_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1a6719b3a:;
						{
							_222247_s.get()._field_Operators._field_LtEq=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _223467_f) mutable -> jule::Bool {
								return static__1a3e5c77b_LtEq(_223467_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1a6719bb2:;
						{
							_222247_s.get()._field_Operators._field_Shl=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _223666_f) mutable -> jule::Bool {
								return static__1a3e5cd64_Shl(_223666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1a6719c39:;
						{
							_222247_s.get()._field_Operators._field_Shr=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _223866_f) mutable -> jule::Bool {
								return static__1a3e5d10b_Shr(_223866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1a6719cb1:;
						{
							_222247_s.get()._field_Operators._field_Add=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _224066_f) mutable -> jule::Bool {
								return static__1a3e5d3a3_Add(_224066_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1a6719d38:;
						{
							_222247_s.get()._field_Operators._field_Sub=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _224266_f) mutable -> jule::Bool {
								return static__1a3e5d64a_Sub(_224266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1a6719db0:;
						{
							_222247_s.get()._field_Operators._field_Div=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _224466_f) mutable -> jule::Bool {
								return static__1a3e5d8e2_Div(_224466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1a6719e37:;
						{
							_222247_s.get()._field_Operators._field_Mul=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _224666_f) mutable -> jule::Bool {
								return static__1a3e5db89_Mul(_224666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1a6719eae:;
						{
							_222247_s.get()._field_Operators._field_Mod=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _224866_f) mutable -> jule::Bool {
								return static__1a3e5de31_Mod(_224866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1a671a036:;
						{
							_222247_s.get()._field_Operators._field_BitAnd=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _225069_f) mutable -> jule::Bool {
								return static__1a3e5e1c8_BitAnd(_225069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1a671a0ad:;
						{
							_222247_s.get()._field_Operators._field_BitOr=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _225268_f) mutable -> jule::Bool {
								return static__1a3e5e470_BitOr(_225268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1a671a135:;
						{
							_222247_s.get()._field_Operators._field_BitXor=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _225469_f) mutable -> jule::Bool {
								return static__1a3e5e717_BitXor(_225469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1a671a1ac:;
						{
							_222247_s.get()._field_Operators._field_Neg=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _225666_f) mutable -> jule::Bool {
								return static__1a3e5ed00_Neg(_225666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1a671a234:;
						{
							_222247_s.get()._field_Operators._field_Pos=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _225866_f) mutable -> jule::Bool {
								return static__1a3e60097_Pos(_225866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1a671a2ab:;
						{
							_222247_s.get()._field_Operators._field_BitNot=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _226069_f) mutable -> jule::Bool {
								return static__1a3e6033e_BitNot(_226069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1a671a333:;
						{
							_222247_s.get()._field_Operators._field_AddAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _226272_f) mutable -> jule::Bool {
								return static__1a3e60927_AddAssign(_226272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1a671a3aa:;
						{
							_222247_s.get()._field_Operators._field_SubAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _226472_f) mutable -> jule::Bool {
								return static__1a3e60bbe_SubAssign(_226472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1a671a432:;
						{
							_222247_s.get()._field_Operators._field_DivAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _226672_f) mutable -> jule::Bool {
								return static__1a3e60e66_DivAssign(_226672_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1a671a4a9:;
						{
							_222247_s.get()._field_Operators._field_MulAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _226872_f) mutable -> jule::Bool {
								return static__1a3e6120d_MulAssign(_226872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1a671a531:;
						{
							_222247_s.get()._field_Operators._field_ModAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _227072_f) mutable -> jule::Bool {
								return static__1a3e614a5_ModAssign(_227072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1a671a5a8:;
						{
							_222247_s.get()._field_Operators._field_ShlAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _227272_f) mutable -> jule::Bool {
								return static__1a3e6174c_ShlAssign(_227272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1a671a630:;
						{
							_222247_s.get()._field_Operators._field_ShrAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _227472_f) mutable -> jule::Bool {
								return static__1a3e619e4_ShrAssign(_227472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1a671a6a7:;
						{
							_222247_s.get()._field_Operators._field_BitOrAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _227674_f) mutable -> jule::Bool {
								return static__1a3e61c8b_BitOrAssign(_227674_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1a671a72e:;
						{
							_222247_s.get()._field_Operators._field_BitAndAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _227875_f) mutable -> jule::Bool {
								return static__1a3e62033_BitAndAssign(_227875_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1a671a7a6:;
						{
							_222247_s.get()._field_Operators._field_BitXorAssign=_1a3e537b6_checkStructInsOp(_self_, _222247_s,_222321_m,jule::Fn<jule::Bool(jule::Ptr<_1a31c7bc3_Fn>)>([=](jule::Ptr<_1a31c7bc3_Fn> _228075_f) mutable -> jule::Bool {
								return static__1a3e622ca_BitXorAssign(_228075_f);
							}));
						}
					}
					_match_end_1a67194ec:;
				};
			}
			_iter_next_1a6718b4a:;
			++it;
			goto _iter_begin_1a6718b4a;
		}
		_iter_end_1a6718b4a:;
	};
}



inline void _1a3e54c29_precheckStructType(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a30e9b8e_Struct>& _228543_s) {
	if (_228543_s.get()._field_CppLinked) {
		return;;
	};
	if ((_228543_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_228543_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a312ad46_StructIns> _229621_ins = _1a30d1d52_instance(_228543_s);;
		_229621_ins.get()._field_Checked=true;
		_1a30d60ba_appendInstance(_228543_s.ptr(), _229621_ins);
		_1a3e54025_precheckStructIns(_self_, _229621_ins,nullptr);
	};
	_1a3e54993_checkStructInsOperators(_self_, _228543_s.get()._field_Instances[0LL]);
}



inline void _1a3e54e05_precheckStructTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a674b9b3:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _230621_s = *it;
			{
				_1a3e54c29_precheckStructType(_self_, _230621_s);
			}
			_iter_next_1a674b9b3:;
			++it;
			goto _iter_begin_1a674b9b3;
		}
		_iter_end_1a674b9b3:;
	};
}



inline void _1a3e5517a_checkRets(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a31ca874_FnIns>& _231133_f) {
	if (_1a31c8135_IsVoid(_231133_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1a3e57325_missingRetChecker _231513_mrc = static__1a3e576dd_new();;
	jule::Bool _231613_ok = _1a3e58700_check(&_231513_mrc, _231133_f.get()._field_Scope);;
	if ((!(_231613_ok))) {
		_1a3e3edac_pushErr(&(*_self_), _231133_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1a3e55499_checkFnInsSc(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a31ca874_FnIns>& _232236_f, jule::Ptr<_1a3e2427b_scopeChecker>& _232252_sc) {
	_1a3e3ae1e_appendRetVars(_232252_sc.get()._field_table.get()._field_Vars,_232236_f);
	_1a3e3b1c7_appendParamVars(_232252_sc.get()._field_table.get()._field_Vars,_232236_f);
	_1a3e3b4a2_appendGenericTypeAliases(_232252_sc.get()._field_table.get()._field_TypeAliases,_232236_f);
	_1a3e2c20c_check(_232252_sc, _232236_f.get()._field_Decl.get()._field_Scope,_232236_f.get()._field_Scope);
	if ((!(_1a3e253e2_stopped(_232252_sc.ptr())))) {
		_1a3e5517a_checkRets(&(*_self_), _232236_f);
	};
}



inline void _1a3e557b8_checkFnInsCaller(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31ca874_FnIns>& _233541_f, jule::Ptr<_1ba1dbeab_Token> _233556_caller) {
	if (_233541_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1a3e9d14b_SymbolTable> _234017_old = _233541_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a3e3e9e4_setCurrentFile(_233541_f.get()._field_Decl.get()._field_sema.ptr(), _234017_old);
	});;
	jule::Ptr<_1a3e9d14b_SymbolTable> _234217_file = _1a3e3b804_findFile(_233541_f.get()._field_Decl.get()._field_sema.get()._field_files,_233541_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_234217_file != nullptr)) {
		_1a3e3e9e4_setCurrentFile(_233541_f.get()._field_Decl.get()._field_sema.ptr(), _234217_file);
	};
	jule::Ptr<_1a3e2427b_scopeChecker> _234717_sc = _1a325801c_newScopeChecker(_233541_f.get()._field_Decl.get()._field_sema,_233541_f);;
	_234717_sc.get()._field_calledFrom=_233556_caller;
	_1a3e55499_checkFnInsSc(_self_.ptr(), _233541_f,_234717_sc);
	if ((_233541_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_233541_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_233541_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1a3e55a3d_checkFnIns(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31ca874_FnIns>& _235735_f) {
	_1a3e557b8_checkFnInsCaller(_self_, _235735_f,nullptr);
}



inline void _1a3e55cb3_checkTypeFn(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c7bc3_Fn>& _236136_f) {
	if (_236136_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236136_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _236136_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a6758085:;
		if (it != expr.end()) {
			jule::Ptr<_1a31ca874_FnIns> _237121_ins = *it;
			{
				_1a3e55a3d_checkFnIns(_self_, _237121_ins);
			}
			_iter_next_1a6758085:;
			++it;
			goto _iter_begin_1a6758085;
		}
		_iter_end_1a6758085:;
	};
}



inline void _1a3e56038_checkTestFn(_1a3e3c1ea_Sema* _self_, jule::Ptr<_1a31ca874_FnIns>& _237635_f) {
	if (_237635_f.get()._field_Decl.get()._field_Public) {
		_1a3e3edac_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_237635_f.get()._field_Params.len() != 1LL) || (_237635_f.get()._field_Result != nullptr))) {
		_1a3e3edac_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3ed6e65_Sptr> _238917_sptr = _1a3ed1080_Sptr(_237635_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_238917_sptr == nullptr)) {
		_1a3e3edac_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a312ad46_StructIns> _239613_s = _1a3ed226d_Struct(_238917_sptr.get()._field_Elem.ptr());;
	if (((_239613_s == nullptr) || (!(_1a3e395d2_isStdPackage(_239613_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1a3e3edac_pushErr(&(*_self_), _237635_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a3e401cb_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a3e562ad_precheckTypeFn(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Ptr<_1a31c7bc3_Fn>& _240439_f) {
	if (_240439_f.get()._field_CppLinked) {
		return;;
	};
	if ((_240439_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_240439_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a31ca874_FnIns> _241521_ins = _1a31c90ae_instanceForce(_240439_f);;
		_240439_f.get()._field_Instances = jule::alloc_for_append(_240439_f.get()._field_Instances,1);_240439_f.get()._field_Instances.__push(_241521_ins);;
		_1a3e48e82_reloadFnInsTypes(_self_, _241521_ins);
		_241521_ins.get()._field_reloaded=true;
		if (_1a3eea7b4_hasDirective(_240439_f.get()._field_Directives,jule::Str("test", 4))) {
			_1a3e56038_checkTestFn(_self_.ptr(), _241521_ins);
		};
	};
}



inline void _1a3e56489_precheckFnTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1a67626bb:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> _242821_decl = *it;
			{
				{
					auto &expr = _242821_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1a67638ed:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _242925_m = *it;
						{
							_1a3e562ad_precheckTypeFn(_self_, _242925_m);
						}
						_iter_next_1a67638ed:;
						++it;
						goto _iter_begin_1a67638ed;
					}
					_iter_end_1a67638ed:;
				};
			}
			_iter_next_1a67626bb:;
			++it;
			goto _iter_begin_1a67626bb;
		}
		_iter_end_1a67626bb:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a6763623:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _243321_decl = *it;
			{
				_1a3e562ad_precheckTypeFn(_self_, _243321_decl);
			}
			_iter_next_1a6763623:;
			++it;
			goto _iter_begin_1a6763623;
		}
		_iter_end_1a6763623:;
	};
}



inline void _1a3e56665_checkFnTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a676501a:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _244021_decl = *it;
			{
				_1a3e55cb3_checkTypeFn(_self_, _244021_decl);
			}
			_iter_next_1a676501a:;
			++it;
			goto _iter_begin_1a676501a;
		}
		_iter_end_1a676501a:;
	};
}



inline void _1a3e56841_checkPackageTypes(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a6765757:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _244821_f = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _244821_f);
				_1a3e52b8e_checkGlobalTypes(_self_);
				_1a3e56489_precheckFnTypes(_self_);
				_1a3e54e05_precheckStructTypes(_self_);
			}
			_iter_next_1a6765757:;
			++it;
			goto _iter_begin_1a6765757;
		}
		_iter_end_1a6765757:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a676778c:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _245921_f = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _245921_f);
				_1a3e56665_checkFnTypes(_self_);
				_1a3e546eb_checkStructTypes(_self_);
			}
			_iter_next_1a676778c:;
			++it;
			goto _iter_begin_1a676778c;
		}
		_iter_end_1a676778c:;
	};
}



inline void _1a3e56a1c_setFileSemaFields(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a6768b67:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _246721_f = *it;
			{
				_246721_f.get()._field_sema=_self_;
			}
			_iter_next_1a6768b67:;
			++it;
			goto _iter_begin_1a6768b67;
		}
		_iter_end_1a6768b67:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a6769096:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _247021_st = *it;
			{
				_247021_st.get()._field_sema=_self_;
			}
			_iter_next_1a6769096:;
			++it;
			goto _iter_begin_1a6769096;
		}
		_iter_end_1a6769096:;
	};
}



inline void _1a3e56be8_setSemaFields(jule::Ptr<_1a3e3c1ea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a6769b13:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _247621_file = *it;
			{
				_1a3e3e9e4_setCurrentFile(_self_.ptr(), _247621_file);
				_1a3e56a1c_setFileSemaFields(_self_);
			}
			_iter_next_1a6769b13:;
			++it;
			goto _iter_begin_1a6769b13;
		}
		_iter_end_1a6769b13:;
	};
}



inline void _1a3e56e6d_check(jule::Ptr<_1a3e3c1ea_Sema> _self_, jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _248230_files) {
	_self_.get()._field_files=_248230_files;
	_1a3e43520_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3e56be8_setSemaFields(_self_);
	_1a3e43aa3_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3e438c7_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3e520bc_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3e56841_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e3c1ea_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a3e57325_missingRetChecker static__1a3e576dd_new(void) {
	return _1a3e57325_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU), };
}



inline jule::Bool _1a3e579b8_checkConditional(_1a3e57325_missingRetChecker* _self_, jule::Ptr<_1a3e2190a_Conditional> _252535_c) {
	{
		auto &expr = _252535_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1a676eaa2:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e21531_If> _252621_elif = *it;
			{
				if ((_252621_elif == nullptr)) {
					return false;
				};
				if ((!(_1a3e583e2_checkScope(&(*_self_), _252621_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1a676eaa2:;
			++it;
			goto _iter_begin_1a676eaa2;
		}
		_iter_end_1a676eaa2:;
	};
	return ((_252535_c.get()._field_Default != nullptr) && _1a3e583e2_checkScope(&(*_self_), _252535_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1a3e57cc6_checkMatch(_1a3e57325_missingRetChecker* _self_, jule::Ptr<_1a3e23159_Match> _253729_m) {
	{
		auto &expr = _253729_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a67719c7:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e236a9_Case> _253821_c = *it;
			{
				if ((_253821_c == nullptr)) {
					return false;
				};
				jule::I64 _254217_n = (*_self_)._field_breaked.len();;
				jule::Bool _254317_ok = _1a3e583e2_checkScope(&(*_self_), _253821_c.get()._field_Scope);;
				{
					
					if ((_254217_n != (*_self_)._field_breaked.len())) {
						_case_begin_1a6773842:;
						{
							return false;
						}
					}
					else if ((!(_254317_ok))) {
						_case_begin_1a67738b9:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1a6773941;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1a6773941:;
						{
							(*_self_)._field_falled=false;
							if ((_253821_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1a67719c7;
						}
					}
					_match_end_1a67733be:;
				};
			}
			_iter_next_1a67719c7:;
			++it;
			goto _iter_begin_1a67719c7;
		}
		_iter_end_1a67719c7:;
	};
	return ((_253729_m.get()._field_Default != nullptr) && _1a3e583e2_checkScope(&(*_self_), _253729_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1a3e580d4_checkInfIter(_1a3e57325_missingRetChecker* _self_, jule::Ptr<_1a3e21ae7_InfIter> _256331_it) {
	jule::I64 _256413_n = (*_self_)._field_breaked.len();;
	if (_1a3e583e2_checkScope(&(*_self_), _256331_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
		return true;
	};
	if ((_256413_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _257017_itaddr = static_cast<jule::Uintptr>(_256331_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_256413_n);
			auto it = expr.begin();
			_iter_begin_1a6777b87:;
			if (it != expr.end()) {
				jule::Uintptr _257120_addr = *it;
				{
					if ((_257017_itaddr == _257120_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
						return false;
					};
				}
				_iter_next_1a6777b87:;
				++it;
				goto _iter_begin_1a6777b87;
			}
			_iter_end_1a6777b87:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_256413_n);
	};
	return true;
}



inline jule::Bool _1a3e583e2_checkScope(_1a3e57325_missingRetChecker* _self_, jule::Ptr<_1a3e21344_Scope> _258229_s) {
	if ((_258229_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _258229_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1a67797b0:;
		if (it != expr.end()) {
			jule::Any _258621_st = *it;
			{
				{
					auto &_match_expr{ _258621_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a3e239c8_FallSt>>()) {
						_case_begin_1a677a1d9:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e224cc_BreakSt>>()) {
						_case_begin_1a677a272:;
						{
							jule::Uintptr _259221_addr = _258621_st.operator jule::Ptr<_1a3e224cc_BreakSt>().get()._field_It;;
							if ((_259221_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_259221_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e222e0_ContSt>>()) {
						_case_begin_1a677a2d8:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
						_case_begin_1a677a34e:;
						{
							if (_1a3e580d4_checkInfIter(&(*_self_), _258621_st.operator jule::Ptr<_1a3e21ae7_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e23bb5_RetSt>>()) {
						_case_begin_1a677a3c6:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e21344_Scope>>()) {
						_case_begin_1a677a44d:;
						{
							if (_1a3e583e2_checkScope(&(*_self_), _258621_st.operator jule::Ptr<_1a3e21344_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
						_case_begin_1a677a4c5:;
						{
							{
								auto &_match_expr{ _258621_st.operator jule::Ptr<_1a3ea2e75_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
									_case_begin_1a677e2a9:;
									{
										return true;
									}
								}
								_match_end_1a677dee0:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e2190a_Conditional>>()) {
						_case_begin_1a677a54c:;
						{
							if (_1a3e579b8_checkConditional(&(*_self_), _258621_st.operator jule::Ptr<_1a3e2190a_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3e23159_Match>>()) {
						_case_begin_1a677a5c4:;
						{
							if (_1a3e57cc6_checkMatch(&(*_self_), _258621_st.operator jule::Ptr<_1a3e23159_Match>())) {
								return true;
							};
						}
					}
					_match_end_1a677a030:;
				};
			}
			_iter_next_1a67797b0:;
			++it;
			goto _iter_begin_1a67797b0;
		}
		_iter_end_1a67797b0:;
	};
	return false;
}



inline jule::Bool _1a3e58700_check(_1a3e57325_missingRetChecker* _self_, jule::Ptr<_1a3e21344_Scope> _262824_s) {
	return _1a3e583e2_checkScope(&(*_self_), _262824_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e57325_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e58ed6_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3e5a317_IsInitialized(_1a3e59e4e_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _1a3e5a57b_IsTypeInferred(_1a3e59e4e_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}



inline jule::Bool _1a3e5a7e0_untypedConstant(_1a3e59e4e_Var* _self_) {
	return (_1a3e5a57b_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e59e4e_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a3e5b36d_Dispose(jule::Ptr<_1a31c7bc3_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1a31c8135_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1a31c6c27_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__1a3e5b615_Str(jule::Ptr<_1a31c7bc3_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1a31c8135_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1a31c6c27_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a31ca874_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1a3ed36d1_Prim> _3913_prim = _1a3ed0d1b_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _1a3ed6915_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__1a3e5b956_logical(jule::Ptr<_1a31c7bc3_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1a31c8135_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1a31c6c27_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1a31ca874_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1a3ed36d1_Prim> _6413_prim = _1a3ed0d1b_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1a3ed66a1_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _1a3ed226d_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__1a3e5bbed_Eq(jule::Ptr<_1a31c7bc3_Fn> _7218_f) {
	return static__1a3e5b956_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__1a3e5be95_Gt(jule::Ptr<_1a31c7bc3_Fn> _7718_f) {
	return static__1a3e5b956_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__1a3e5c23c_GtEq(jule::Ptr<_1a31c7bc3_Fn> _8220_f) {
	return static__1a3e5b956_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__1a3e5c4d4_Lt(jule::Ptr<_1a31c7bc3_Fn> _8718_f) {
	return static__1a3e5b956_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__1a3e5c77b_LtEq(jule::Ptr<_1a31c7bc3_Fn> _9220_f) {
	return static__1a3e5b956_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__1a3e5cabc_result(jule::Ptr<_1a31c7bc3_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1a31c8135_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1a31c6c27_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1a31ca874_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1a3ed226d_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__1a3e5cd64_Shl(jule::Ptr<_1a31c7bc3_Fn> _11819_f) {
	return static__1a3e5cabc_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__1a3e5d10b_Shr(jule::Ptr<_1a31c7bc3_Fn> _12319_f) {
	return static__1a3e5cabc_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__1a3e5d3a3_Add(jule::Ptr<_1a31c7bc3_Fn> _12819_f) {
	return static__1a3e5cabc_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__1a3e5d64a_Sub(jule::Ptr<_1a31c7bc3_Fn> _13319_f) {
	return static__1a3e5cabc_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__1a3e5d8e2_Div(jule::Ptr<_1a31c7bc3_Fn> _13819_f) {
	return static__1a3e5cabc_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__1a3e5db89_Mul(jule::Ptr<_1a31c7bc3_Fn> _14319_f) {
	return static__1a3e5cabc_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__1a3e5de31_Mod(jule::Ptr<_1a31c7bc3_Fn> _14819_f) {
	return static__1a3e5cabc_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__1a3e5e1c8_BitAnd(jule::Ptr<_1a31c7bc3_Fn> _15322_f) {
	return static__1a3e5cabc_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__1a3e5e470_BitOr(jule::Ptr<_1a31c7bc3_Fn> _15821_f) {
	return static__1a3e5cabc_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__1a3e5e717_BitXor(jule::Ptr<_1a31c7bc3_Fn> _16322_f) {
	return static__1a3e5cabc_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__1a3e5ea58_unary(jule::Ptr<_1a31c7bc3_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1a31c8135_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1a31c6c27_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a31ca874_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1a3ed226d_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__1a3e5ed00_Neg(jule::Ptr<_1a31c7bc3_Fn> _18719_f) {
	return static__1a3e5ea58_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__1a3e60097_Pos(jule::Ptr<_1a31c7bc3_Fn> _19219_f) {
	return static__1a3e5ea58_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__1a3e6033e_BitNot(jule::Ptr<_1a31c7bc3_Fn> _19722_f) {
	return static__1a3e5ea58_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__1a3e60680_assign(jule::Ptr<_1a31c7bc3_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1a31c8135_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1a31c6c27_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1a3e60927_AddAssign(jule::Ptr<_1a31c7bc3_Fn> _22125_f) {
	return static__1a3e60680_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__1a3e60bbe_SubAssign(jule::Ptr<_1a31c7bc3_Fn> _22625_f) {
	return static__1a3e60680_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__1a3e60e66_DivAssign(jule::Ptr<_1a31c7bc3_Fn> _23125_f) {
	return static__1a3e60680_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__1a3e6120d_MulAssign(jule::Ptr<_1a31c7bc3_Fn> _23625_f) {
	return static__1a3e60680_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__1a3e614a5_ModAssign(jule::Ptr<_1a31c7bc3_Fn> _24125_f) {
	return static__1a3e60680_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__1a3e6174c_ShlAssign(jule::Ptr<_1a31c7bc3_Fn> _24625_f) {
	return static__1a3e60680_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__1a3e619e4_ShrAssign(jule::Ptr<_1a31c7bc3_Fn> _25125_f) {
	return static__1a3e60680_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__1a3e61c8b_BitOrAssign(jule::Ptr<_1a31c7bc3_Fn> _25627_f) {
	return static__1a3e60680_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__1a3e62033_BitAndAssign(jule::Ptr<_1a31c7bc3_Fn> _26128_f) {
	return static__1a3e60680_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__1a3e622ca_BitXorAssign(jule::Ptr<_1a31c7bc3_Fn> _26628_f) {
	return static__1a3e60680_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e5abec_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a3e8c13a_pushErr(_1a3e8bb1d_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1a3e3edac_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _1a3e8c39e_checkTrait(_1a3e8bb1d_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_1a3eceb2d_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_1a31d9a81_Trait> _12513_trt = _1a3ed24d2_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1a3ed1080_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a67bb2e6:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1a3ed1080_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1a3ed226d_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1a67bb3d4;
			}
		}
		else if ((_1a3ed226d_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a67bb3d4:;
			{
				jule::Ptr<_1a312ad46_StructIns> _13617_s = _1a3ed226d_Struct((*_self_)._field_src.ptr());;
				if ((!(_1a30db6b9_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _1a3e7be3d_traitHasReferenceReceiver(_12513_trt))) {
					_1a3e8c13a_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_1a3ed24d2_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a67bb44a:;
			{
				_12131_ok = (_12513_trt == _1a3ed24d2_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1a67bab86:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1a67bab31:;
	};
}



inline jule::Bool _1a3e8c613_checkPtr(_1a3e8bb1d_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_1a3eceb2d_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_1a3eda4c9_Ptr> _15617_dest = _1a3ed12e4_Ptr((*_self_)._field_dest.ptr());;
	if (_1a3edae9c_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _1a3ece413_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _1a3e8c877_checkPrim(_1a3e8bb1d_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1a3ed36d1_Prim> _16517_prim = _1a3ed0d1b_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1a3ed6b79_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _1a3ece413_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _1a3e8cc2e_typeEnum(_1a3e8bb1d_typeCompatibilityChecker* _self_, jule::Ptr<_1a31dd2c1_TypeEnum>& _17328_e, jule::Ptr<_1a3ecdc09_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1a67c4794:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dcc0a_TypeEnumItem> _17421_item = *it;
			{
				if (_1a3ece413_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_1a31dd2c1_TypeEnum> _17821_ke = _1a3ed17bc_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1a67c4794;
				};
				if (_1a3e8cc2e_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1a67c4794:;
			++it;
			goto _iter_begin_1a67c4794;
		}
		_iter_end_1a67c4794:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _1a3e8ce93_checkTypeEnum(_1a3e8bb1d_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_1a3ece413_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_1a31dd2c1_TypeEnum> _19317_e = _1a3ed17bc_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _1a3e8cc2e_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _1a3e8d207_check(_1a3e8bb1d_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1a3ed12e4_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1a3e8c613_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_1a3ed036a_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1a3eceb2d_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1a3ed0d1b_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a67c9da4:;
			{
				_19726_ok = _1a3e8c877_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1a3ed17bc_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a67c9e1a:;
			{
				_19726_ok = _1a3e8ce93_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1a3ed24d2_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a67ca24a:;
			{
				_19726_ok = _1a3e8c39e_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1a67c9810:;
			{
				_19726_ok = _1a3ece413_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1a67c9502:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e8bb1d_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e8dba8_pushErr(_1a3e8d746_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1a3e3edac_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _1a3e8de1c_checkValidity(_1a3e8d746_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1a3ed2009_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a67cd7e2:;
			{
				jule::Ptr<_1a31ca874_FnIns> _23717_f = _1a3ed2009_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1a31cbc0a_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1a67ceeca:;
						{
							_1a3e8dba8_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1a67d0052:;
						{
							_1a3e8dba8_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1a31c8399_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1a67d00c9:;
						{
							_1a3e8dba8_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1a67d0151:;
						{
							_1a3e8dba8_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1a3e401cb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1a67ceded:;
				};
			}
		}
		else if ((_1a3ed29aa_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a67cd869:;
			{
				_1a3e8dba8_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1a67cd737:;
	};
	return _23417_valid;
}



inline jule::Bool _1a3e8e181_checkConst(_1a3e8d746_assignTypeChecker* _self_) {
	if (((((!(_1a3ea3838_IsConst((*_self_)._field_d.ptr()))) || (_1a3ed0d1b_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1a3e20e04_IsNum(_1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _1a3ed0d1b_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1a3e20cc2_IsFloat(_27413_kind)) {
			_case_begin_1a67d7ed3:;
			{
				if ((!(_1a3e738b3_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1a3e8dba8_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1a3e20b90_IsInt(_27413_kind)) {
			_case_begin_1a67d77c9:;
			{
				if ((!(_1a3e8a8db_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1a3e8dba8_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1a67d7763:;
			{
				return false;
			}
		}
		_match_end_1a67d770d:;
	};
	return true;
}



inline jule::Bool _1a3e8e3e5_isPrim(_1a3e8d746_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_1a3ece8b9_CppLinked((*_self_)._field_dest.ptr()) || _1a3ece8b9_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_1a3ed0d1b_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _1a3e8e659_checkCompatibility(_1a3e8d746_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a67dbdd8:;
			{
				return false;
			}
		}
		else if ((!(_1a3e8de1c_checkValidity(&(*_self_))))) {
			_case_begin_1a67dbe4e:;
			{
				return false;
			}
		}
		else if (_1a3e8e181_checkConst(&(*_self_))) {
			_case_begin_1a67dbec6:;
			{
				return true;
			}
		}
		else if ((_1a3ed1558_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a67dc04d:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1a3ed1558_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1a3ed1558_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1a3ed0d1b_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a67dbcb7;
				};
				if (_1a36a00bd_TypesAreCompatible(_1a3ed0d1b_Prim(_1a3ed1558_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1a3ed0d1b_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_1a3e8e3e5_isPrim(&(*_self_))) {
			_case_begin_1a67dc0c5:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _32617_dest = _1a3ed0d1b_Prim((*_self_)._field_dest.ptr());;
				if (_1a3ed6b79_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1a3ed36d1_Prim> _33021_src = _1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1a36a00bd_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1a67dbcb7:;
	};
	return _1a3e471e4_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _1a3e8e8bd_check(_1a3e8d746_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1a3e8e659_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_1a3eec310_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e8d746_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6807057_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310b970_ArrTypeDecl>>()) {
			_case_begin_1a6808696:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1a68095a9:;
						{
							_36121_elem=_1a3ed1a31_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1a68094ee:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a310b970_ArrTypeDecl>().get()._field_Elem;
				return _1a3e917b0_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1a6808641:;
	};
	return false;
}

inline jule::Bool _1a68066b6_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310ac16_SlcTypeDecl>>()) {
			_case_begin_1a680c05c:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1a680d008:;
						{
							_36121_elem=_1a3ed1c95_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1a680cdb5:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a310ac16_SlcTypeDecl>().get()._field_Elem;
				return _1a3e917b0_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1a680c007:;
	};
	return false;
}

inline jule::Bool _1a68089c6_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310b2dd_PtrTypeDecl>>()) {
			_case_begin_1a6810978:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1a681198a:;
						{
							_36121_elem=_1a3ed12e4_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1a68117d1:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a310b2dd_PtrTypeDecl>().get()._field_Elem;
				return _1a3e917b0_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1a6810923:;
	};
	return false;
}

inline jule::Bool _1a680ee72_annotateConstraintElem(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310a81a_SptrTypeDecl>>()) {
			_case_begin_1a6813eed:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1a6815076:;
						{
							_36121_elem=_1a3ed1080_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1a6814d56:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a310a81a_SptrTypeDecl>().get()._field_Elem;
				return _1a3e917b0_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1a6813e98:;
	};
	return false;
}



inline jule::Bool _1a3e90a45_annotateConstraintMap(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310c1bd_MapTypeDecl>>()) {
			_case_begin_1a67e5133:;
			{
				jule::Ptr<_1a3ed8e78_Map> _38121_m = _1a3ed2746_Map(_37845_k.ptr());;
				jule::Ptr<_1a310c1bd_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a310c1bd_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_1a3e917b0_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _1a3e917b0_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_1a67e50cd:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _1a3e90d53_annotateConstraintTup(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310b002_TupleTypeDecl>>()) {
			_case_begin_1a67e7d8e:;
			{
				jule::Ptr<_1a310b002_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a310b002_TupleTypeDecl>();;
				jule::Ptr<_1a3ed8450_Tuple> _39721_tup2 = _1a3ed29aa_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1a67e9225:;
					if (it != expr.end()) {
						jule::Ptr<_1a3ecdc09_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1a67e8bd6:;
								if (it != expr.end()) {
									jule::Ptr<_1a3109462_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1a3e917b0_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_1a67e8bd6:;
									++it;
									goto _iter_begin_1a67e8bd6;
								}
								_iter_end_1a67e8bd6:;
							};
						}
						_iter_next_1a67e9225:;
						++it;
						goto _iter_begin_1a67e9225;
					}
					_iter_end_1a67e9225:;
				};
			}
		}
		_match_end_1a67e7d39:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _1a3e91161_annotateConstraintFn(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31210d3_FnDecl>>()) {
			_case_begin_1a67ea29d:;
			{
				jule::Ptr<_1a31210d3_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a31210d3_FnDecl>();;
				jule::Ptr<_1a31ca874_FnIns> _41421_f = _1a3ed2009_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1a67ec239:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1a31c99a5_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_1a3e917b0_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_1a67ec239:;
						++it;
						_41518_i++;
						goto _iter_begin_1a67ec239;
					}
					_iter_end_1a67ec239:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_1a3e917b0_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_1a67ea248:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _1a3e91491_annotateConstraintIdent(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _43147_k) {
	jule::Ptr<_1a3109a28_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1a3109a28_IdentTypeDecl>();;
	jule::Ptr<_1a312ad46_StructIns> _43317_s = _1a3ed226d_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a68009ce:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1a3116a46_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_1a3ecc4cc_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1a3e91ace_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1a68009ce;
				};
				jule::Ptr<_1a3109462_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1a6803916:;
					if (it != expr.end()) {
						jule::Ptr<_1a3109462_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1a680420d:;
								if (it != expr.end()) {
									jule::Ptr<_1a3ecc4cc_InsGeneric> _44929_sg = *it;
									{
										if (_1a3e917b0_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1a680420d:;
									++it;
									goto _iter_begin_1a680420d;
								}
								_iter_end_1a680420d:;
							};
						}
						_iter_next_1a6803916:;
						++it;
						goto _iter_begin_1a6803916;
					}
					_iter_end_1a6803916:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1a68009ce:;
			++it;
			_43413_i++;
			goto _iter_begin_1a68009ce;
		}
		_iter_end_1a68009ce:;
	};
	return false;
}



inline jule::Bool _1a3e917b0_annotateConstraint(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3109a28_IdentTypeDecl>>()) {
			_case_begin_1a6803d67:;
			{
				return _1a3e91491_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_1a6803d12:;
	};
	{
		
		if ((_1a3ed1a31_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a6805a4a:;
			{
				return _1a6807057_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a3ed1c95_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a68055c7:;
			{
				return _1a68066b6_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a3ed12e4_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a680563d:;
			{
				return _1a68089c6_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a3ed1080_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a68056b5:;
			{
				return _1a680ee72_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a3ed2746_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a6806001:;
			{
				return _1a3e90a45_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_1a3ed2009_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a6806078:;
			{
				return _1a3e91161_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_1a3ed29aa_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_1a6806100:;
			{
				return _1a3e90d53_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_1a680586e:;
			{
				return false;
			}
		}
		_match_end_1a6805e79:;
	};
}



inline void _1a3e91ace_pushGeneric(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_1a3ecc4cc_InsGeneric>(_1a3ecc4cc_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_1a3116a46_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1a3e917b0_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _1a3e91ddc_annotatePrim(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _1a3e93c13_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _1a3e921ea_annotateArr(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_1a3ed9a6c_Arr> _50017_parr = _1a3ed1a31_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_1a3ed9a6c_Arr> _50417_arr = _1a3ed1a31_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _1a3e94021_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _1a3e92508_annotateSlc(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_1a3ed78c2_Slc> _51017_pslc = _1a3ed1c95_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_1a3ed78c2_Slc> _51417_slc = _1a3ed1c95_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _1a3e94021_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _1a3e928b0_checkMapKey(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>* _51941_k, jule::Ptr<_1a3ecdc09_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_1a3ecdc09_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_1a3e94021_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _1a3e92bbd_annotateMap(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_1a3ed8e78_Map> _52817_pmap = _1a3ed2746_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_1a3ed8e78_Map> _53217_m = _1a3ed2746_Map(_52742_k.ptr());;
	_52758_ok = (_1a3e928b0_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _1a3e928b0_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _1a3e92ecb_annotateFn(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_1a31ca874_FnIns> _53817_pf = _1a3ed2009_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_1a31ca874_FnIns> _54217_f = _1a3ed2009_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_1a6824b8a:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_1a31c8135_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _1a31c8135_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_1a6824c01:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_1a6824b02:;
	};
	_53757_ok=true;
	jule::Ptr<_1a3ecdc09_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a6826780:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1a31c99a5_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_1a3e94021_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_1a6826780:;
			++it;
			_55214_i++;
			goto _iter_begin_1a6826780;
		}
		_iter_end_1a6826780:;
	};
	if ((!(_1a31c8135_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_1a3e94021_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _1a3e932d9_annotatePtr(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_1a3eda4c9_Ptr> _56717_pptr = _1a3ed12e4_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_1a3eda4c9_Ptr> _57117_ptr = _1a3ed12e4_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _1a3e94021_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _1a3e935e7_annotateSptr(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_1a3ed6e65_Sptr> _57717_ssptr = _1a3ed1080_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_1a3ed6e65_Sptr> _58117_sptr = _1a3ed1080_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _1a3e94021_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _1a3e93905_annotateStruct(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_1a312ad46_StructIns> _58717_s = _1a3ed226d_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_1a312ad46_StructIns> _59117_s2 = _1a3ed226d_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a6830866:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1a3ecc4cc_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1a3ecc4cc_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_1a3ece413_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_1a6830866;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_1a3e94021_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_1a6830866:;
			++it;
			_59514_i++;
			goto _iter_begin_1a6830866;
		}
		_iter_end_1a6830866:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _1a3e93c13_annotateAny(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _1a3ece105_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a6833a01:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1a3116a46_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_1a6833a01;
				};
				jule::Ptr<_1a3ecc4cc_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_1a6835706:;
						{
							_1a3e91ace_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_1a3ece413_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_1a683577d:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_1a6835591:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_1a6833a01:;
			++it;
			_61013_i++;
			goto _iter_begin_1a6833a01;
		}
		_iter_end_1a6833a01:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _1a3e94021_annotateKind(_1a3e90160_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_1a3e93c13_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_1a68389a1:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_1a3ed0d1b_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a6838a17:;
			{
				_63059_ok = _1a3e91ddc_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed1a31_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a68386b5:;
			{
				_63059_ok = _1a3e921ea_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed1c95_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a683872b:;
			{
				_63059_ok = _1a3e92508_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed2746_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a6838792:;
			{
				_63059_ok = _1a3e92bbd_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed2009_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a68382b9:;
			{
				_63059_ok = _1a3e92ecb_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed12e4_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a6838330:;
			{
				_63059_ok = _1a3e932d9_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed1080_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a6838396:;
			{
				_63059_ok = _1a3e935e7_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a3ed226d_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_1a683840c:;
			{
				_63059_ok = _1a3e93905_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_1a6838253:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_1a68381ed:;
	};
}



inline jule::Bool _1a3e94285_annotate(_1a3e90160_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _1a3e94021_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e90160_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e94eab_pushErrToken(_1a3e9495b_fnCallArgChecker* _self_, jule::Ptr<_1ba1dbeab_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_1a3e3edac_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _1a3e952ca_pushErr(_1a3e9495b_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_1a3e94eab_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>> _1a3e9553e_getParams(_1a3e9495b_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1a31c69b3_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _1a3e9584c_checkCounts(_1a3e9495b_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _1a31c69b3_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1a6845947:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1a68459ad:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_1a6845a35:;
			{
				_1a3e952ca_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_1a684589d:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1a6847c24:;
	}
	_iter_end_1a6847c24:;;
	(_70817_idents).mut_slice(2LL);;
	_1a3e952ca_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _1a3e95c9d_checkArg(_1a3e9495b_fnCallArgChecker* _self_, jule::Ptr<_1a31c99a5_ParamIns>& _71832_p, jule::Ptr<_1a3ea2e75_Data>& _71851_arg, jule::Ptr<_1ba1dbeab_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _1a31cc986_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_1a3e90160_dynamicTypeAnnotation _72225_dta = _1a3e90160_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_1a3e94285_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_1a3e94eab_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_1a3e499cc_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_1a3e46c93_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _1a3e96155_push(_1a3e9495b_fnCallArgChecker* _self_, jule::Ptr<_1a31c99a5_ParamIns>& _74528_p, jule::Ptr<_1a310d983_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1a3ecdc09_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1a3ea2e75_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1a3ebecd8_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1a3e95c9d_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _1a3e9650c_pushVariadic(_1a3e9495b_fnCallArgChecker* _self_, jule::Ptr<_1a31c99a5_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1a31c0e63_SliceExprModel> _77417_model = jule::new_ptr<_1a31c0e63_SliceExprModel>(_1a31c0e63_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_1a3ecdc09_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_1a310d983_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_1a31115ac_VariadicExpr>>()) {
					_case_begin_1a6857e98:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1a6857a9c:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_1a685788d:;
			};
			jule::Ptr<_1a3ea2e75_Data> _80321_d = _1a3ec00e6_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_1a685634d;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _1a3e95c9d_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a31c0e63_SliceExprModel>>()) {
						_case_begin_1a685b1bb:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_1a31c0e63_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1a685ac6a:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_1a685a110:;
				};
				(_77054_i)++;
				goto _iter_end_1a685634d;
			};
			_77064_ok=(_77064_ok && _1a3e95c9d_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_1a685634d:;
	}
	_iter_end_1a685634d:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1a3e94eab_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _1a3e9681a_checkArgs(_1a3e9495b_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _1a31c69b3_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_1a31c99a5_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1a6861ec4:;
					{
						_84656_ok=(_1a3e9650c_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_1a6860d19;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1a6862898:;
					{
						_84656_ok=false;
						goto _iter_end_1a6860d19;
					}
				}
				else {
					_case_begin_1a6862502:;
					{
						_84656_ok=(_1a3e96155_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_1a686248b:;
			};
			(_85117_i)++;
		}
	_iter_next_1a6860d19:;
	}
	_iter_end_1a6860d19:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _1a3e96aa1_checkDynamicTypeAnnotation(_1a3e9495b_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a6864acb:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecc4cc_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1a3e952ca_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_1a6864acb:;
			++it;
			goto _iter_begin_1a6864acb;
		}
		_iter_end_1a6864acb:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _1a3e96d26_check(_1a3e9495b_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>> _88817_params = _1a3e9553e_getParams(&(*_self_));;
	_88726_ok=_1a3e9584c_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1a3e9681a_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_1a3e96aa1_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e9495b_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e97871_pushErr(_1a3e97365_structLitChecker* _self_, jule::Ptr<_1ba1dbeab_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _1a3e97b90_pushSugggestion(_1a3e97365_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_1a3ea531d_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _1a3e98058_pushMatch(_1a3e97365_structLitChecker* _self_, jule::Ptr<_1a3102306_FieldIns>& _91833_f, jule::Ptr<_1a3ea2e75_Data>& _91852_d, jule::Ptr<_1ba1dbeab_Token>& _91867_errorToken) {
	;
	if (_1a3e499cc_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_1a3e46c93_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1a31c04c3_StructArgExprModel>(_1a31c04c3_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _1a3e98377_checkPair(_1a3e97365_structLitChecker* _self_, jule::Ptr<_1a31136d0_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_1a310d983_Expr>>& _93160_exprs) {
	jule::Ptr<_1a3102306_FieldIns> _93317_f = _1a3103b76_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_1a3e97871_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_1a3e97871_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_1a3e97b90_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_1a6870521:;
		if (it != expr.end()) {
			jule::Ptr<_1a310d983_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a31136d0_FieldExprPair>>()) {
						_case_begin_1a6870e39:;
						{
							jule::Ptr<_1a31136d0_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_1a31136d0_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_1a6871e29:;
									{
										goto _iter_end_1a6870521;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1a6871ea1:;
									{
										_1a3e97871_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1a6870521;
									}
								}
								_match_end_1a6871d6e:;
							};
						}
					}
					_match_end_1a6870c19:;
				};
			}
			_iter_next_1a6870521:;
			++it;
			goto _iter_begin_1a6870521;
		}
		_iter_end_1a6870521:;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_1a3ea2e75_Data> _96317_d = _1a3ebecd8_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_1a3e98058_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _1a3e98685_readyExprs(_1a3e97365_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a310d983_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_1a6875d0c:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_1a310d983_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a3114db8_KeyValPair>>()) {
						_case_begin_1a6876add:;
						{
							jule::Ptr<_1a3114db8_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_1a3114db8_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_1a31109eb_IdentExpr>>()) {
									_case_begin_1a68780ea:;
									{
										goto _match_end_1a6877b88;
									}
								}
								else {
									_case_begin_1a6877bdd:;
									{
										_1a3e97871_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_1a6875d0c;
									}
								}
								_match_end_1a6877b88:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a31136d0_FieldExprPair>(_1a31136d0_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_1a68768bd:;
				};
			}
			_iter_next_1a6875d0c:;
			++it;
			_97214_i++;
			goto _iter_begin_1a6875d0c;
		}
		_iter_end_1a6875d0c:;
	};
	return _97117_ok;
}



inline void _1a3e9890a_check(_1a3e97365_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a310d983_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1a3e98685_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_1a687a44e:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_1a310d983_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a31136d0_FieldExprPair>>()) {
						_case_begin_1a6881488:;
						{
							jule::Ptr<_1a31136d0_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_1a31136d0_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_1a3e97871_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_1a3e98377_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_1a687b186:;
						{
							if (_100117_paired) {
								_1a3e97871_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1a3e97871_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1a687a44e;
							};
							jule::Ptr<_1a3102306_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_1a3e97871_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1a3e97b90_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a3ecdc09_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_1a3ea2e75_Data> _103225_d = _1a3ebecd8_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_1a687a44e;
							};
							_1a3e98058_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_1a687aecc:;
				};
			}
			_iter_next_1a687a44e:;
			++it;
			_100214_i++;
			goto _iter_begin_1a687a44e;
		}
		_iter_end_1a687a44e:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_1a688436a:;
				{
					return;;
				}
			}
			_match_end_1a6884216:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1a6884cd8:;
		}
		_iter_end_1a6884cd8:;;
		(_105021_idents).mut_slice(2LL);;
		_1a3e97871_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e97365_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e993de_buildVar(_1a3e98e49_rangeChecker* _self_, jule::Ptr<_1a31220b2_VarDecl>& _106928_decl) {
	jule::Ptr<_1a3e59e4e_Var> _107017_v = _1a31d3519_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _1a3e995ba_setSizeKey(_1a3e98e49_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1ba1de750_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1a3e993de_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a6888d0e:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1a3e58ed6_IterRelation>(_1a3e58ed6_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1a3e59e4e_Var>()});
			}
		}
		_match_end_1a6886b97:;
	};
}



inline void _1a3e99983_checkRangeExprValidity(_1a3e98e49_rangeChecker* _self_, jule::Ptr<_1a3ea2e75_Data>& _110046_d, jule::Ptr<_1a3e59e4e_Var>& _110057_key, jule::Ptr<_1a3ecdc09_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_1a3ed0106_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_1a3e499cc_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1a3e99b5e_checkSlice(_1a3e98e49_rangeChecker* _self_) {
	_1a3e995ba_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1ba1de750_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3ed78c2_Slc> _111917_slc = _1a3ed1c95_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1a3e993de_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_1a3e99983_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _1a3e99d3a_checkArray(_1a3e98e49_rangeChecker* _self_) {
	_1a3e995ba_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1ba1de750_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3ed9a6c_Arr> _113217_arr = _1a3ed1a31_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1a3e993de_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_1a3e99983_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _1a3e9a016_checkMapKeyA(_1a3e98e49_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1ba1de750_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3ed8e78_Map> _114417_m = _1a3ed2746_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1a3e993de_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_1a3ea2e75_Data> _114817_d = jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_1a3e99983_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _1a3e9a1e2_checkMapKeyB(_1a3e98e49_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1ba1de750_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3ed8e78_Map> _115917_m = _1a3ed2746_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1a3e993de_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_1a3ea2e75_Data> _116317_d = jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_1a3e99983_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _1a3e9a3bd_checkMap(_1a3e98e49_rangeChecker* _self_) {
	_1a3e9a016_checkMapKeyA(&(*_self_));
	_1a3e9a1e2_checkMapKeyB(&(*_self_));
}



inline void _1a3e9a599_checkStr(_1a3e98e49_rangeChecker* _self_) {
	_1a3e995ba_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1ba1de750_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1a3e993de_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1a3e9a80d_check(_1a3e98e49_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a68a4599:;
		}
		else if ((_1a3ed1c95_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a68a3d29:;
			{
				_1a3e99b5e_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_1a3ed1a31_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a68a3d90:;
			{
				_1a3e99d3a_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_1a3ed2746_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a68a309d:;
			{
				_1a3e9a3bd_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1a68a3037:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _120117_prim = _1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _1a3ed6915_IsStr(_120117_prim.ptr()))) {
					_1a3e9a599_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1a68a2e5a:;
	};
	_1a3e3edac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e98e49_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e9b556_prepareTypes(_1a3e9b0a0_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a31cb996_Types((*_self_)._field_f.ptr());
	};
}



inline void _1a3e9b7cb_prepareExprs(_1a3e9b0a0_retTypeChecker* _self_, jule::Ptr<_1a310d983_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310e610_TupleExpr>>()) {
			_case_begin_1a68a94d3:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_1a310e610_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1a68a911a:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_1a68a8c1e:;
	};
}



inline void _1a3e9b9a7_retVars(_1a3e9b0a0_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1a31c8135_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1a3e59e4e_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_1a3e2427b_scopeChecker> _124817_rootScope = _1a3e25656_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1a68ac283:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _125116_ident = *it;
			{
				if (((!(_1ba1de750_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_1ba1de9e7_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1a3e59e4e_Var>(_1a3e59e4e_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_1a68ac283:;
			++it;
			_125113_i++;
			goto _iter_begin_1a68ac283;
		}
		_iter_end_1a68ac283:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1a3e9bb83_checkExprs(_1a3e9b0a0_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _127317_datas = jule::Slice<jule::Ptr<_1a3ea2e75_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a68b1441:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_1a310d983_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1a68b1441;
				};
				jule::Ptr<_1a3ecdc09_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_1a3ea2e75_Data> _128121_d = _1a3ec0404_evalExpr(_1a3e4648a_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a3eee697_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_1a68b1441;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _1a3ed0106_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_1a3e3edac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1a3e8d746_assignTypeChecker _129321_ac = _1a3e8d746_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1a3e8e8bd_check(&_129321_ac);
			}
			_iter_next_1a68b1441:;
			++it;
			_127414_i++;
			goto _iter_begin_1a68b1441;
		}
		_iter_end_1a68b1441:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1a31c299d_TupleExprModel>(_1a31c299d_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1a3e9be91_check(_1a3e9b0a0_retTypeChecker* _self_, jule::Ptr<_1a310d983_Expr>& _131229_e) {
	_1a3e9b556_prepareTypes(&(*_self_));
	_1a3e9b7cb_prepareExprs(&(*_self_), _131229_e);
	_1a3e9b9a7_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1a31c8d4a_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1a3e3edac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1a31c8135_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1a3e3edac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_1a3e3edac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_1a3e3edac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1a3e9bb83_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e9b0a0_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e9d668_FindPackage(_1a3e9d14b_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a68bd52a:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1a68bd52a:;
			++it;
			goto _iter_begin_1a68bd52a;
		}
		_iter_end_1a68bd52a:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a3e9d976_SelectPackage(_1a3e9d14b_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a68bda7a:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1a68bda7a:;
			++it;
			goto _iter_begin_1a68bda7a;
		}
		_iter_end_1a68bda7a:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e9dd2d_FindVar(_1a3e9d14b_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1a3ea08e0_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e9e1d5_FindTypeAlias(_1a3e9d14b_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1a3ea0d41_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3e9e58c_FindStruct(_1a3e9d14b_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a68c2386:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1a68c2386:;
			++it;
			goto _iter_begin_1a68c2386;
		}
		_iter_end_1a68c2386:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a3e9e944_FindFn(_1a3e9d14b_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a68c38d7:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1a68c38d7:;
			++it;
			goto _iter_begin_1a68c38d7;
		}
		_iter_end_1a68c38d7:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3e9ec52_FindTrait(_1a3e9d14b_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1a68c4a4d:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1a68c4a4d:;
			++it;
			goto _iter_begin_1a68c4a4d;
		}
		_iter_end_1a68c4a4d:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3ea0060_FindEnum(_1a3e9d14b_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1a68c50ae:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dbbc6_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1a68c50ae:;
			++it;
			goto _iter_begin_1a68c50ae;
		}
		_iter_end_1a68c50ae:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3ea036d_FindTypeEnum(_1a3e9d14b_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1a68c60d2:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dd2c1_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1a68c60d2:;
			++it;
			goto _iter_begin_1a68c60d2;
		}
		_iter_end_1a68c60d2:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3ea08e0_findVar(_1a3e9d14b_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1a3e59e4e_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1a68c8bea:;
		}
		_iter_end_1a68c8bea:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1a68ca24b:;
			if (it != expr.end()) {
				jule::Ptr<_1a3e59e4e_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1a68ca24b:;
				++it;
				goto _iter_begin_1a68ca24b;
			}
			_iter_end_1a68ca24b:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3ea0d41_findTypeAlias(_1a3e9d14b_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1a3ecd016_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1a68cc193:;
		}
		_iter_end_1a68cc193:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1a68cd6e4:;
			if (it != expr.end()) {
				jule::Ptr<_1a3ecd016_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1a68cd6e4:;
				++it;
				goto _iter_begin_1a68cd6e4;
			}
			_iter_end_1a68cd6e4:;
		};
	};
	return nullptr;
}



inline jule::Any _1a3ea11e8_defByIdent(_1a3e9d14b_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a68ce8c1:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1a68ce8c1:;
			++it;
			goto _iter_begin_1a68ce8c1;
		}
		_iter_end_1a68ce8c1:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1a68d098d:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecd016_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1a68d098d:;
			++it;
			goto _iter_begin_1a68d098d;
		}
		_iter_end_1a68d098d:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a68d1807:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1a68d1807:;
			++it;
			goto _iter_begin_1a68d1807;
		}
		_iter_end_1a68d1807:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a68d2709:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1a68d2709:;
			++it;
			goto _iter_begin_1a68d2709;
		}
		_iter_end_1a68d2709:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1a68d3892:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1a68d3892:;
			++it;
			goto _iter_begin_1a68d3892;
		}
		_iter_end_1a68d3892:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1a68d41cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dbbc6_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1a68d41cd:;
			++it;
			goto _iter_begin_1a68d41cd;
		}
		_iter_end_1a68d41cd:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1a68d5179:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dd2c1_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1a68d5179:;
			++it;
			goto _iter_begin_1a68d5179;
		}
		_iter_end_1a68d5179:;
	};
	return nullptr;
}



inline jule::Bool _1a3ea1649_isDuplicatedIdent(_1a3e9d14b_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a68d6114:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1a68d6114:;
			++it;
			goto _iter_begin_1a68d6114;
		}
		_iter_end_1a68d6114:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1a68d6c4c:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecd016_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1a68d6c4c:;
			++it;
			goto _iter_begin_1a68d6c4c;
		}
		_iter_end_1a68d6c4c:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a68d7016:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1a68d7016:;
			++it;
			goto _iter_begin_1a68d7016;
		}
		_iter_end_1a68d7016:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1a68d81d2:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1a68d81d2:;
			++it;
			goto _iter_begin_1a68d81d2;
		}
		_iter_end_1a68d81d2:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1a68dae82:;
		if (it != expr.end()) {
			jule::Ptr<_1a31d9a81_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1a68dae82:;
			++it;
			goto _iter_begin_1a68dae82;
		}
		_iter_end_1a68dae82:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1a68db47c:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dbbc6_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1a68db47c:;
			++it;
			goto _iter_begin_1a68db47c;
		}
		_iter_end_1a68db47c:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1a68dba87:;
		if (it != expr.end()) {
			jule::Ptr<_1a31dd2c1_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1a68dba87:;
			++it;
			goto _iter_begin_1a68dba87;
		}
		_iter_end_1a68dba87:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e9d14b_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3ea3360_IsNil(_1a3ea2e75_Data* _self_) {
	return _1a3eceb2d_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1a3ea35c4_IsVoid(_1a3ea2e75_Data* _self_) {
	return _1a3eced92_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1a3ea3838_IsConst(_1a3ea2e75_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _1a3ea3b46_GoodOperand(_1a3ea2e75_Data* _self_, jule::Ptr<_1a3ea2e75_Data>& _9831_other) {
	if ((_1a3ed17bc_TypeEnum(_9831_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1a3ed0d1b_Prim(_9831_other.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ed6b79_IsAny(_1a3ed0d1b_Prim(_9831_other.get()._field_Kind.ptr()).ptr())))) && (_1a3ed24d2_Trait(_9831_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1a3eceb2d_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ea2e75_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ea3eed_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a3ea4eee_pushErr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _12926_token, jule::Str _12941_fmt, jule::Slice<jule::Any> _12954_args) {
	_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _12926_token,_12941_fmt,jule::Any(_12954_args));
}



inline void _1a3ea531d_pushSugggestion(_1a3ea49e3_Eval* _self_, jule::Str _13434_fmt, jule::Slice<jule::Any> _13447_args) {
	_1a3e401cb_pushSugggestion((*_self_)._field_s.ptr(), _13434_fmt,jule::Any(_13447_args));
}



inline void _1a3ea54e9_allowBuiltin(_1a3ea49e3_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1a3ea56c5_disallowBuiltin(_1a3ea49e3_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1a3ea5939_isUnsafe(_1a3ea49e3_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a3ea5b9d_isGlobal(_1a3ea49e3_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e3c1ea_Sema>>()) {
			_case_begin_1a6920c31:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a692067b:;
			{
				return false;
			}
		}
		_match_end_1a6920b65:;
	};
}



inline jule::Bool _1a3ea5e78_applyNumericPrefix(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _16142_d) {
	if (((((_16142_d == nullptr) || (!(_1a3ea3838_IsConst(_16142_d.ptr())))) || (_1a3ed0d1b_Prim(_16142_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1a3ed36d1_Prim> _16813_prim = _1a3ed0d1b_Prim((*_self_)._field_prefix.ptr());;
	if ((_16813_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1a3e20cc2_IsFloat(_1a3ed3a44_Str(_16813_prim.ptr()))) {
			_case_begin_1a69237c2:;
			{
				_16142_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>((*((*_self_)._field_prefix)));
				_1a31b99c8_SetF64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a31b8c5d_AsF64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1a3e2092b_IsSigInt(_1a3ed3a44_Str(_16813_prim.ptr()))) {
			_case_begin_1a6923470:;
			{
				if ((!(_1a3e739e5_sigAssignable(_1a3ed3a44_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>((*((*_self_)._field_prefix)));
				_1a31b8ed3_SetI64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1a3e20a5d_IsUnsigInt(_1a3ed3a44_Str(_16813_prim.ptr()))) {
			_case_begin_1a69234e7:;
			{
				if ((!(_1a3e8a7a9_unsigAssignable(_1a3ed3a44_Str(_16813_prim.ptr()),_16142_d)))) {
					return false;
				};
				_16142_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>((*((*_self_)._field_prefix)));
				_1a31b9258_SetU64(_16142_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_16142_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1a6923926:;
	};
	return true;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea61dc_litNil(_1a3ea49e3_Eval* _self_) {
	jule::Ptr<_1a31618e8_Const> _19717_constant = static__1a31b7476_NewNil();;
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19717_constant), ._field_Constant=_19717_constant});
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea64ea_litStr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr>& _20522_l) {
	jule::Str _20617_s = _20522_l.get()._field_Value.slice(1LL,(_20522_l.get()._field_Value.len() - 1LL));;
	if (_1ba1dd30e_IsRawStr(_20522_l.get()._field_Value)) {
		_20617_s=_1a3e8aab7_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20617_s));
	} else {
		_20617_s=_1a3e8ad70_ToStr(static_cast<jule::Slice<jule::U8>>(_20617_s));
	};
	jule::Ptr<_1a31618e8_Const> _21217_constant = static__1a31b6ed1_NewStr(_20617_s);;
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21217_constant), ._field_Constant=_21217_constant});
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea6808_litBool(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr>& _22323_l) {
	jule::Ptr<_1a31618e8_Const> _22417_constant = static__1a31b6c39_NewBool((_22323_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22417_constant), ._field_Constant=_22417_constant});
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea6b16_litRune(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr>& _23423_l) {
	;
	;
	jule::Str _23913_lt = _23423_l.get()._field_Value.slice(1LL,(_23423_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24013_r = _1a3e735c7_ToRune(static_cast<jule::Slice<jule::U8>>(_23913_lt));;
	jule::Ptr<_1a3ea2e75_Data> _24117_data = jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Constant=static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24013_r)))});;
	jule::Bool _24513_isAscii = _1a3e73495_IsAscii(_24013_r);;
	if (_24513_isAscii) {
		_24117_data.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24117_data.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24117_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c4b04_RuneExprModel>(_1a31c4b04_RuneExprModel{._field_Code=_24013_r}));
	_24117_data.get()._field_IsRune=true;
	_24117_data.get()._field_untyped=true;
	return _24117_data;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea6e24_litFloat(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr>& _26224_l) {
	;
	jule::F64 _26413_f = ({
		auto except = _1a3bb1a74_ParseFloat(_26224_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a31618e8_Const> _26517_constant = static__1a31b7278_NewF64(_26413_f);;
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26517_constant), ._field_Constant=_26517_constant});
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea7232_litInt(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr>& _27626_l) {
	;
	jule::Str _27917_lit = _27626_l.get()._field_Value;;
	jule::I64 _28017_base = 0LL;;
	{
		
		if (_1b9d2b8ed_HasPrefix(_27917_lit,jule::Str("0x", 2))) {
			_case_begin_1a6935174:;
			{
				(_27917_lit).mut_slice(2LL);;
				_28017_base=16LLU;
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_27917_lit,jule::Str("0b", 2))) {
			_case_begin_1a69351da:;
			{
				(_27917_lit).mut_slice(2LL);;
				_28017_base=2LLU;
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_27917_lit,jule::Str("0o", 2))) {
			_case_begin_1a6935251:;
			{
				(_27917_lit).mut_slice(2LL);;
				_28017_base=8LLU;
			}
		}
		else if (((_27917_lit[0LL] == '0') && (_27917_lit.len() > 1LL))) {
			_case_begin_1a6934d66:;
			{
				(_27917_lit).mut_slice(1LL);;
				_28017_base=8LLU;
			}
		}
		else {
			_case_begin_1a6934d00:;
			{
				_28017_base=10LLU;
			}
		}
		_match_end_1a6934c9a:;
	};
	jule::Ptr<_1a3ea2e75_Data> _30017_d = jule::new_ptr<_1a3ea2e75_Data>();;
	jule::Bool _30217_ok = true;;
	jule::I64 _30313_sig = ({
		auto except = _1a3b27cb5_ParseInt(_27917_lit,_28017_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30217_ok=false;
			0LL;
		});
	});;
	if (_30217_ok) {
		_30017_d.get()._field_Constant=static__1a31b6970_NewI64(_30313_sig);
		_30017_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31317_unsig = ({
			auto except = _1a3a962c7_ParseUint(_27917_lit,_28017_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1a3ea4eee_pushErr(&(*_self_), _27626_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30017_d.get()._field_Constant=static__1a31b6aa2_NewU64(_31317_unsig);
		_30017_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30017_d.get()._field_Model=static_cast<jule::Any>(_30017_d.get()._field_Constant);
	if ((!(_1a3ea5e78_applyNumericPrefix(&(*_self_), _30017_d)))) {
		_1a3ec894b_fitBitsize(_30017_d);
	};
	_30017_d.get()._field_untyped=true;
	return _30017_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea7540_litNum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr>& _33526_l) {
	{
		
		if (_1ba1dde69_IsFloat(_33526_l.get()._field_Value)) {
			_case_begin_1a693d600:;
			{
				return _1a3ea6e24_litFloat(&(*_self_), _33526_l);
			}
		}
		else {
			_case_begin_1a693cd80:;
			{
				return _1a3ea7232_litInt(&(*_self_), _33526_l);
			}
		}
		_match_end_1a693ccb4:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea784d_evalLit(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a310e9b7_LitExpr> _34426_lit) {
	{
		
		if (_1a310ed19_IsNil(_34426_lit.ptr())) {
			_case_begin_1a693e887:;
			{
				return _1a3ea61dc_litNil(&(*_self_));
			}
		}
		else if (_1ba1dd067_IsStr(_34426_lit.get()._field_Value)) {
			_case_begin_1a693e249:;
			{
				return _1a3ea64ea_litStr(&(*_self_), _34426_lit);
			}
		}
		else if (_1ba1ddbc2_IsBool(_34426_lit.get()._field_Value)) {
			_case_begin_1a693e2b0:;
			{
				return _1a3ea6808_litBool(&(*_self_), _34426_lit);
			}
		}
		else if (_1ba1dd5a6_IsRune(_34426_lit.get()._field_Value)) {
			_case_begin_1a693e326:;
			{
				return _1a3ea6b16_litRune(&(*_self_), _34426_lit);
			}
		}
		else if (_1ba1de211_IsNum(_34426_lit.get()._field_Value)) {
			_case_begin_1a693e38c:;
			{
				return _1a3ea7540_litNum(&(*_self_), _34426_lit);
			}
		}
		else {
			_case_begin_1a693dbc7:;
			{
				return nullptr;
			}
		}
		_match_end_1a693daea:;
	};
}



inline jule::Any _1a3ea7b5b_findBuiltins(_1a3ea49e3_Eval* _self_, jule::Str _36131_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e3409e_ImportInfo>>()) {
			_case_begin_1a693eb95:;
			{
				jule::Any _36421_def = _1a3ec873c_findBuiltinsImport(_36131_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a3e3409e_ImportInfo>());;
				if ((_36421_def != nullptr)) {
					return jule::Any(_36421_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e3c1ea_Sema>>()) {
			_case_begin_1a694211a:;
			{
				jule::Any _36921_def = _1a3ec93ca_findBuiltinsSema(_36131_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a3e3c1ea_Sema>());;
				if ((_36921_def != nullptr)) {
					return jule::Any(_36921_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a6942181:;
			{
				jule::Any _37421_def = _1a3ec93ca_findBuiltinsSema(_36131_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>().get()._field_s);;
				if ((_37421_def != nullptr)) {
					return jule::Any(_37421_def);
				};
			}
		}
		_match_end_1a693eb40:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_1a400eb4c_findBuiltinDef(_36131_ident));
}



inline jule::Any _1a3ea8013_getDef(_1a3ea49e3_Eval* _self_, jule::Str _38525_ident, jule::Bool _38537_cppLinked) {
	jule::Ptr<_1a3e59e4e_Var> _39017_v = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eed014_FindVar((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_39017_v != nullptr)) {
		return jule::Any(_39017_v);
	};
	jule::Ptr<_1a3ecd016_TypeAlias> _39517_ta = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eed3bb_FindTypeAlias((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_39517_ta != nullptr)) {
		return jule::Any(_39517_ta);
	};
	if ((!(_38537_cppLinked))) {
		jule::Ptr<_1a31dbbc6_Enum> _40121_enm = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eee246_FindEnum((*_self_)._field_lookup, _38525_ident);;
		if ((_40121_enm != nullptr)) {
			return jule::Any(_40121_enm);
		};
		jule::Ptr<_1a31dd2c1_TypeEnum> _40621_tenm = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eee554_FindTypeEnum((*_self_)._field_lookup, _38525_ident);;
		if ((_40621_tenm != nullptr)) {
			return jule::Any(_40621_tenm);
		};
	};
	jule::Ptr<_1a31c7bc3_Fn> _41217_f = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eedb2a_FindFn((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_41217_f != nullptr)) {
		return jule::Any(_41217_f);
	};
	jule::Ptr<_1a30e9b8e_Struct> _41717_s = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eed773_FindStruct((*_self_)._field_lookup, _38525_ident,_38537_cppLinked);;
	if ((_41717_s != nullptr)) {
		return jule::Any(_41717_s);
	};
	return jule::Any(_1a3ea7b5b_findBuiltins(&(*_self_), _38525_ident));
}



inline void _1a6958e23_pushReference(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31ca874_FnIns>& _42540_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a695b3a9:;
			{
				jule::Ptr<_1a3e2427b_scopeChecker> _42821_sc = _1a3e25788_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>());;
				if ((!(_1a695b84e_Exist(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), _42540_ref)))) {
					_1a31ce449_Push(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		else {
			_case_begin_1a695a3ec:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a695b84e_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _42540_ref))))) {
					_1a31ce449_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		_match_end_1a695a397:;
	};
}

inline void _1a696e642_pushReference(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3e59e4e_Var>& _42540_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a69718db:;
			{
				jule::Ptr<_1a3e2427b_scopeChecker> _42821_sc = _1a3e25788_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>());;
				if ((!(_1a6971d81_Exist(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), _42540_ref)))) {
					_1a31ce449_Push(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		else {
			_case_begin_1a697092e:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a6971d81_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _42540_ref))))) {
					_1a31ce449_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		_match_end_1a69708c9:;
	};
}

inline void _1a6a1cb52_pushReference(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a312ad46_StructIns>& _42540_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a6a1eed9:;
			{
				jule::Ptr<_1a3e2427b_scopeChecker> _42821_sc = _1a3e25788_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>());;
				if ((!(_1a6a2047e_Exist(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), _42540_ref)))) {
					_1a31ce449_Push(_42821_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		else {
			_case_begin_1a6a1e02c:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a6a2047e_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _42540_ref))))) {
					_1a31ce449_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_42540_ref));
				};
			}
		}
		_match_end_1a6a1dec7:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea8596__evalEnum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31dbbc6_Enum> _43928_enm) {
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_43928_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea894d_evalEnum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31dbbc6_Enum> _44831_enm, jule::Ptr<_1ba1dbeab_Token> _44843_errorToken) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _44831_enm.get()._field_Public,_44831_enm.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _44843_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44831_enm.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1a3ea8596__evalEnum(&(*_self_), _44831_enm);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea8c5b__evalTypeEnum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31dd2c1_TypeEnum> _45732_enm) {
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_45732_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea9113_evalTypeEnum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31dd2c1_TypeEnum> _46635_enm, jule::Ptr<_1ba1dbeab_Token> _46651_errorToken) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _46635_enm.get()._field_Public,_46635_enm.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _46651_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46635_enm.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1a3ea8c5b__evalTypeEnum(&(*_self_), _46635_enm);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea9421__evalStruct(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a312ad46_StructIns> _47530_s) {
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_47530_s, 0)}), ._field_Model=static_cast<jule::Any>(_47530_s), ._field_Decl=true, });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea97c8_evalStruct(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a312ad46_StructIns> _48533_s, jule::Ptr<_1ba1dbeab_Token> _48548_errorToken) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public,_48533_s.get()._field_Decl.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _48548_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a3ea9e05_checkDeprecated(&(*_self_), _48533_s.get()._field_Decl.get()._field_Directives,_48548_errorToken);
	return _1a3ea9421__evalStruct(&(*_self_), _48533_s);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ea9ad6_evalFnIns(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31ca874_FnIns> _49528_f) {
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_49528_f, 1)}), ._field_Model=static_cast<jule::Any>(_49528_f), });
}



inline void _1a3ea9e05_checkDeprecated(_1a3ea49e3_Eval* _self_, jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _50439_directives, jule::Ptr<_1ba1dbeab_Token> _50470_tok) {
	if (_1a3ea5939_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1a30c5a27_Directive> _50913_d = _1a3ec83a7_findDirective(_50439_directives,jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_1a3ea4eee_pushErr(&(*_self_), _50470_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1a3ea4eee_pushErr(&(*_self_), _50470_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eaa2ac_evalFn(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31c7bc3_Fn> _52029_f, jule::Ptr<_1ba1dbeab_Token> _52037_errorToken) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _52029_f.get()._field_Public,_52029_f.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _52037_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a3ea9e05_checkDeprecated(&(*_self_), _52029_f.get()._field_Directives,_52037_errorToken);
	jule::Ptr<_1a31ca874_FnIns> _52917_ins = _1a31c9323_instance(_52029_f);;
	_1a6958e23_pushReference(&(*_self_), _52917_ins);
	return _1a3ea9ad6_evalFnIns(&(*_self_), _52917_ins);
}



inline void _1a3eaa675_pushIllegalCycleError(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3e59e4e_Var>& _53441_v1, jule::Ptr<_1a3e59e4e_Var>& _53452_v2, jule::Str& _53467_message) {
	;
	jule::Str _53613_refers_to = _1b9db28eb_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_53441_v1.get()._field_Ident),jule::Any(_53452_v2.get()._field_Ident)}));;
	(_53467_message).buffer.insert(0, (((_1b9d1351c_Repeat(jule::Str(" ", 1),4LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a3eaaa2c_checkCrossCycle(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3e59e4e_Var>& _54035_v, jule::Str& _54049_message) {
	{
		auto &expr = _54035_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1a6961d93:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> &_54116_d = *it;
			{
				if ((_54116_d == (*_self_)._field_owner)) {
					_1a3eaa675_pushIllegalCycleError(&(*_self_), _54035_v,_54116_d,_54049_message);
					return false;
				};
				if ((!(_1a3eaaa2c_checkCrossCycle(&(*_self_), _54116_d,_54049_message)))) {
					_1a3eaa675_pushIllegalCycleError(&(*_self_), _54035_v,_54116_d,_54049_message);
					return false;
				};
			}
			_iter_next_1a6961d93:;
			++it;
			goto _iter_begin_1a6961d93;
		}
		_iter_end_1a6961d93:;
	};
	return true;
}



inline jule::Bool _1a3eaadd4_checkIllegalCycles(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3e59e4e_Var>& _55942_v, jule::Ptr<_1ba1dbeab_Token> _55951_decl_token) {
	jule::Bool _55973_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55973_ok = true;
		return _55973_ok;
	};
	if (((*_self_)._field_owner == _55942_v)) {
		_1a3ea4eee_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55973_ok = false;
		return _55973_ok;
	};
	jule::Str _57117_message = jule::Str();;
	if ((!(_1a3eaaa2c_checkCrossCycle(&(*_self_), _55942_v,_57117_message)))) {
		jule::Str _57421_errMsg = _57117_message;;
		_57117_message=jule::Str();
		_1a3eaa675_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55942_v,_57117_message);
		_57421_errMsg+=_57117_message;
		_1a3ea4eee_pushErr(&(*_self_), _55951_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_57421_errMsg)}));
		_55973_ok = false;
		return _55973_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55942_v);;
	_55973_ok = true;
	return _55973_ok;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eab28b_evalVar(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3e59e4e_Var> _58630_v, jule::Ptr<_1ba1dbeab_Token> _58639_errorToken) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _58630_v.get()._field_Public,_58630_v.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _58639_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_58630_v.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a3ea9e05_checkDeprecated(&(*_self_), _58630_v.get()._field_Directives,_58639_errorToken);
	_58630_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e3c1ea_Sema>>()) {
			_case_begin_1a696a077:;
			{
				jule::Bool _60017_ok = _1a3eaadd4_checkIllegalCycles(&(*_self_), _58630_v,_58639_errorToken);;
				if ((!(_60017_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a696a121:;
			{
				if (((!(_58630_v.get()._field_Reference)) || _1a3ea5939_isUnsafe(&(*_self_)))) {
					goto _match_end_1a696a022;
				};
				jule::Ptr<_1a3e2427b_scopeChecker> _60821_s = (*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>();;
				while (((_60821_s.get()._field_owner == nullptr) && (_60821_s.get()._field_parent != nullptr))) {
					{
						_60821_s=_60821_s.get()._field_parent;
					}
				_iter_next_1a696c299:;
				}
				_iter_end_1a696c299:;;
				if ((((_60821_s.get()._field_owner != nullptr) && _60821_s.get()._field_owner.get()._field_Anon) && (_58630_v.get()._field_Scope != _60821_s.get()._field_owner.get()._field_Scope))) {
					_1a3ea4eee_pushErr(&(*_self_), _58639_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_58630_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1a696a022:;
	};
	if ((_58630_v.get()._field_Scope == nullptr)) {
		_1a696e642_pushReference(&(*_self_), _58630_v);
	};
	if (((!(_58630_v.get()._field_CppLinked)) && ((_58630_v.get()._field_Value == nullptr) || (_58630_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58630_v.get()._field_Constant) {
			_1a3e529b3_checkTypeVar((*_self_)._field_s, _58630_v,jule::Trait<_1a3eee697_Lookup>((*_self_)._field_s, 3));
			if ((_58630_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_58630_v.get()._field_Kind == nullptr) || (_58630_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58630_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_1a3e529b3_checkTypeVar((*_self_)._field_s, _58630_v,(*_self_)._field_lookup);
		if (((_58630_v.get()._field_Kind == nullptr) || (_58630_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1a3ea2e75_Data> _65117_d = jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=_58630_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58630_v.get()._field_Mutable, ._field_Reference=_58630_v.get()._field_Reference, ._field_Lvalue=(!(_58630_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_58630_v), });;
	if ((((!(_58630_v.get()._field_CppLinked)) && _1a3e5a317_IsInitialized(_58630_v.ptr())) && (_58630_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65117_d.get()._field_IsRune=_58630_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58630_v.get()._field_Constant && (_58630_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65117_d.get()._field_Constant=jule::new_ptr<_1a31618e8_Const>((*(_58630_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65117_d.get()._field_Model=static_cast<jule::Any>(_65117_d.get()._field_Constant);
		if (_1a3e5a7e0_untypedConstant(_58630_v.ptr())) {
			_1a3ea5e78_applyNumericPrefix(&(*_self_), _65117_d);
			_65117_d.get()._field_untyped=true;
		};
	};
	return _65117_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eab643_evalTypeAlias(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecd016_TypeAlias> _67536_ta, jule::Ptr<_1ba1dbeab_Token> _67552_errorToken) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _67536_ta.get()._field_Public,_67536_ta.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _67552_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_67536_ta.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_67536_ta.get()._field_Used=true;
	jule::Trait<_1a3ecd7ca_Kind> _68417_kind = _67536_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1a3ea2e75_Data> _68517_d = nullptr;;
	{
		auto &_match_expr{ _68417_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a312ad46_StructIns>>()) {
			_case_begin_1a6981500:;
			{
				_68517_d=_1a3ea9421__evalStruct(&(*_self_), _68417_kind.operator jule::Ptr<_1a312ad46_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31dbbc6_Enum>>()) {
			_case_begin_1a6982017:;
			{
				_68517_d=_1a3ea8596__evalEnum(&(*_self_), _68417_kind.operator jule::Ptr<_1a31dbbc6_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31dd2c1_TypeEnum>>()) {
			_case_begin_1a6980730:;
			{
				_68517_d=_1a3ea8c5b__evalTypeEnum(&(*_self_), _68417_kind.operator jule::Ptr<_1a31dd2c1_TypeEnum>());
			}
		}
		else {
			_case_begin_1a698060e:;
			{
				_68517_d=jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=_67536_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67536_ta.get()._field_CppLinked) {
					_68517_d.get()._field_Kind.get()._field_CppIdent=_67536_ta.get()._field_Ident;
				} else {
					_68517_d.get()._field_Kind.get()._field_CppIdent=_67536_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_68517_d.get()._field_Model=static_cast<jule::Any>(_68517_d.get()._field_Kind);
			}
		}
		_match_end_1a69805a9:;
	};
	_68517_d.get()._field_Kind.get()._field_Generic=_67536_ta.get()._field_Generic;
	return _68517_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eab9ea_evalDef(_1a3ea49e3_Eval* _self_, jule::Any _71130_def, jule::Ptr<_1ba1dbeab_Token> _71140_ident) {
	{
		auto &_match_expr{ _71130_def };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a69848cc:;
			{
				return _1a3eab28b_evalVar(&(*_self_), _71130_def.operator jule::Ptr<_1a3e59e4e_Var>(),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31dbbc6_Enum>>()) {
			_case_begin_1a6984943:;
			{
				return _1a3ea894d_evalEnum(&(*_self_), _71130_def.operator jule::Ptr<_1a31dbbc6_Enum>(),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31dd2c1_TypeEnum>>()) {
			_case_begin_1a69849a9:;
			{
				return _1a3ea9113_evalTypeEnum(&(*_self_), _71130_def.operator jule::Ptr<_1a31dd2c1_TypeEnum>(),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6984a20:;
			{
				return _1a3ea97c8_evalStruct(&(*_self_), _1a30d1d52_instance(_71130_def.operator jule::Ptr<_1a30e9b8e_Struct>()),_71140_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c7bc3_Fn>>()) {
			_case_begin_1a6984a97:;
			{
				jule::Ptr<_1a31c7bc3_Fn> _72221_f = _71130_def.operator jule::Ptr<_1a31c7bc3_Fn>();;
				if ((_72221_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1a3eaa2ac_evalFn(&(*_self_), _72221_f,_71140_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31ca874_FnIns>>()) {
			_case_begin_1a6984b1e:;
			{
				return _1a3ea9ad6_evalFnIns(&(*_self_), _71130_def.operator jule::Ptr<_1a31ca874_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
			_case_begin_1a6984b96:;
			{
				return _1a3eab643_evalTypeAlias(&(*_self_), _71130_def.operator jule::Ptr<_1a3ecd016_TypeAlias>(),_71140_ident);
			}
		}
		_match_end_1a69847cd:;
	};
	_1a3ea4eee_pushErr(&(*_self_), _71140_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71140_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eabd08_evalIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31109eb_IdentExpr> _73528_ident) {
	jule::Any _73617_def = _1a3ea8013_getDef(&(*_self_), _73528_ident.get()._field_Ident,_73528_ident.get()._field_CppLinked);;
	return _1a3eab9ea_evalDef(&(*_self_), jule::Any(_73617_def),_73528_ident.get()._field_Token);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eac116_evalUnary(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3111205_UnaryExpr> _74033_u) {
	_1a3ec0877_unaryEval _74117_unary = static__1a3ec0d2d_new(_self_);;
	return _1a3ec20c6_eval(&_74117_unary, _74033_u);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eac424_evalVariadic(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31115ac_VariadicExpr> _74536_v) {
	if ((_74536_v.get()._field_Expr == nullptr)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _74536_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _75117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75117_prefix;
	});;
	jule::Ptr<_1a3ea2e75_Data> _75517_d = _1a3ebecd8_evalExprKind(_self_, _74536_v.get()._field_Expr.get()._field_Kind);;
	if ((_75517_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a3ed0aa7_Variadicable(_75517_d.get()._field_Kind.ptr())))) {
		_1a3ea4eee_pushErr(_self_.ptr(), _74536_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_75517_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1a3ed78c2_Slc> _76513_slc = _1a3ed1c95_Slc(_75517_d.get()._field_Kind.ptr());;
	_75517_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_CppIdent=_76513_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_76513_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76513_slc.get()._field_Elem.get()._field_Kind});
	return _75517_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eac732_evalUnsafe(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31101c1_UnsafeExpr> _77534_u) {
	jule::Bool _77613_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a3ea2e75_Data> _77817_d = _1a3ebecd8_evalExprKind(_self_, _77534_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_77613_unsafety;
	return _77817_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eaca40_evalArr(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a311533b_SliceExpr> _78331_s) {
	jule::Ptr<_1a3ed9a6c_Arr> _78517_pt = _1a3ed1a31_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1a3ed9a6c_Arr> _78717_arr = jule::new_ptr<_1a3ed9a6c_Arr>(_1a3ed9a6c_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78517_pt.get()._field_Elem});;
	jule::Bool _79317_filled = false;;
	if ((_78331_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78331_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1a31115ac_VariadicExpr>>()) {
				_case_begin_1a6994c50:;
				{
					if ((_78331_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_1a31115ac_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1a6994bea;
					};
					if (_78517_pt.get()._field_Auto) {
						_1a3ea4eee_pushErr(_self_.ptr(), _78331_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_79317_filled=true;
					_78331_s.get()._field_Exprs=_78331_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1a6994bea:;
		};
	};
	_78717_arr.get()._field_N=static_cast<jule::I64>(_78331_s.get()._field_Exprs.len());
	if ((!(_78517_pt.get()._field_Auto))) {
		if ((_78717_arr.get()._field_N > _78517_pt.get()._field_N)) {
			_1a3ea4eee_pushErr(_self_.ptr(), _78331_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78717_arr.get()._field_N < _78517_pt.get()._field_N)) {
			_78717_arr.get()._field_N=_78517_pt.get()._field_N;
		};
	};
	jule::Ptr<_1a31c23d7_ArrayExprModel> _82217_model = jule::new_ptr<_1a31c23d7_ArrayExprModel>(_1a31c23d7_ArrayExprModel{._field_Kind=_78717_arr, });;
	if (_79317_filled) {
		_82217_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_82217_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_78331_s.get()._field_Exprs.len());
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _83117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78717_arr.get()._field_Elem;
	{
		auto &expr = _78331_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a699a371:;
		if (it != expr.end()) {
			jule::Ptr<_1a310d983_Expr> _83321_elem = *it;
			{
				jule::Ptr<_1a3ea2e75_Data> _83421_d = _1a3ebecd8_evalExprKind(_self_, _83321_elem.get()._field_Kind);;
				if ((_83421_d == nullptr)) {
					goto _iter_next_1a699a371;
				};
				_1a3e46c93_checkAssignType(_self_.get()._field_s, false,_78717_arr.get()._field_Elem,_83421_d,_78331_s.get()._field_Token);
				_82217_model.get()._field_Elems = jule::alloc_for_append(_82217_model.get()._field_Elems,1);_82217_model.get()._field_Elems.__push(_83421_d.get()._field_Model);;
			}
			_iter_next_1a699a371:;
			++it;
			goto _iter_begin_1a699a371;
		}
		_iter_end_1a699a371:;
	};
	_self_.get()._field_prefix=_83117_prefix;
	if (_79317_filled) {
		_82217_model.get()._field_Elems = jule::alloc_for_append(_82217_model.get()._field_Elems,1);_82217_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_78717_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_82217_model), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eace91_evalExpSlc(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a311533b_SliceExpr> _85834_s, jule::Ptr<_1a3ecdc09_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_1a3ed78c2_Slc> _85917_slc = jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=_85853_t});;
	jule::Ptr<_1a31c0e63_SliceExprModel> _86317_model = jule::new_ptr<_1a31c0e63_SliceExprModel>(_1a31c0e63_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85834_s.get()._field_Exprs.len())});;
	if ((_85871_first != nullptr)) {
		_86317_model.get()._field_Elems = jule::alloc_for_append(_86317_model.get()._field_Elems,1);_86317_model.get()._field_Elems.__push(_85871_first);;
		_85834_s.get()._field_Exprs=_85834_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _87217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto &expr = _85834_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a69a1003:;
		if (it != expr.end()) {
			jule::Ptr<_1a310d983_Expr> _87421_elem = *it;
			{
				jule::Ptr<_1a3ea2e75_Data> _87521_d = _1a3ebecd8_evalExprKind(_self_, _87421_elem.get()._field_Kind);;
				if ((_87521_d == nullptr)) {
					goto _iter_next_1a69a1003;
				};
				_1a3e46c93_checkAssignType(_self_.get()._field_s, false,_85917_slc.get()._field_Elem,_87521_d,_85834_s.get()._field_Token);
				_86317_model.get()._field_Elems = jule::alloc_for_append(_86317_model.get()._field_Elems,1);_86317_model.get()._field_Elems.__push(_87521_d.get()._field_Model);;
			}
			_iter_next_1a69a1003:;
			++it;
			goto _iter_begin_1a69a1003;
		}
		_iter_end_1a69a1003:;
	};
	_self_.get()._field_prefix=_87217_prefix;
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_85917_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_86317_model), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ead29e_evalSliceExpr(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a311533b_SliceExpr> _89337_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a3ed1a31_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a69a3d91:;
				{
					return _1a3eaca40_evalArr(_self_, _89337_s);
				}
			}
			else if ((_1a3ed1c95_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a69a3e18:;
				{
					jule::Ptr<_1a3ed78c2_Slc> _89925_pt = _1a3ed1c95_Slc(_self_.get()._field_prefix.ptr());;
					return _1a3eace91_evalExpSlc(_self_, _89337_s,_89925_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1a69a3c70:;
		};
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _90417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89337_s.get()._field_Exprs.len() == 0LL)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _89337_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _91217_first_elem = _1a3ebecd8_evalExprKind(_self_, _89337_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_91217_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _91717_d = _1a3eace91_evalExpSlc(_self_, _89337_s,_91217_first_elem.get()._field_Kind,_91217_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_90417_prefix;
	return _91717_d;
}



inline void _1a3ead5e0_checkIntegerIndexingByData(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _92350_d, jule::Ptr<_1ba1dbeab_Token> _92360_token) {
	jule::Str _92413_err_key = _1a3eca84e_checkDataForIntegerIndexing(_92350_d);;
	{
		auto &_match_expr{ _92413_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a69a9da8:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a69aa2b5:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _92360_token,_92413_err_key,jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_92350_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1a69a9979:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _92360_token,_92413_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1a69a988b:;
	};
}



inline void _1a3ead9b9_indexingPtr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _93535_d, jule::Ptr<_1a3ea2e75_Data>& _93550_index, jule::Ptr<_1a3115bcc_IndexingExpr>& _93565_i) {
	_1a3ead5e0_checkIntegerIndexingByData(&(*_self_), _93550_index,_93565_i.get()._field_Token);
	jule::Ptr<_1a3eda4c9_Ptr> _93817_ptr = _1a3ed12e4_Ptr(_93535_d.get()._field_Kind.ptr());;
	{
		
		if (_1a3edae9c_IsUnsafe(_93817_ptr.ptr())) {
			_case_begin_1a69ac5c5:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _93565_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a3ea5939_isUnsafe(&(*_self_))))) {
			_case_begin_1a69ac63b:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _93565_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a69ac471:;
	};
	_93535_d.get()._field_Kind=_93817_ptr.get()._field_Elem;
}



inline void _1a3eadd82_indexingArr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _95035_d, jule::Ptr<_1a3ea2e75_Data>& _95050_index, jule::Ptr<_1a3115bcc_IndexingExpr>& _95065_i) {
	jule::Ptr<_1a3ed9a6c_Arr> _95117_arr = _1a3ed1a31_Arr(_95035_d.get()._field_Kind.ptr());;
	_95035_d.get()._field_Kind=_95117_arr.get()._field_Elem;
	_1a3ead5e0_checkIntegerIndexingByData(&(*_self_), _95050_index,_95065_i.get()._field_Token);
	if ((_1a3ea3838_IsConst(_95050_index.ptr()) && (_1a31b8c5d_AsF64(_95050_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95117_arr.get()._field_N)))) {
		_1a3ea4eee_pushErr(&(*_self_), _95065_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a3eae24a_indexingSlc(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _95935_d, jule::Ptr<_1a3ea2e75_Data>& _95950_index, jule::Ptr<_1a3115bcc_IndexingExpr>& _95965_i) {
	jule::Ptr<_1a3ed78c2_Slc> _96017_slc = _1a3ed1c95_Slc(_95935_d.get()._field_Kind.ptr());;
	_95935_d.get()._field_Kind=_96017_slc.get()._field_Elem;
	_1a3ead5e0_checkIntegerIndexingByData(&(*_self_), _95950_index,_95965_i.get()._field_Token);
	if ((!(_1a3ea3838_IsConst(_95950_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95935_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c0e63_SliceExprModel>>()) {
			_case_begin_1a69b35a9:;
			{
				jule::Ptr<_1a31c0e63_SliceExprModel> _97021_m = _95935_d.get()._field_Model.operator jule::Ptr<_1a31c0e63_SliceExprModel>();;
				jule::F64 _97117_indx = _1a31b8c5d_AsF64(_95950_index.get()._field_Constant.ptr());;
				if ((_97117_indx >= static_cast<jule::F64>(_97021_m.get()._field_Elems.len()))) {
					_1a3ea4eee_pushErr(&(*_self_), _95965_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95935_d.get()._field_Model=_97021_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97117_indx))];
					_95935_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1a69b3554:;
	};
}



inline void _1a3eae613_indexingMap(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _98135_d, jule::Ptr<_1a3ea2e75_Data>& _98150_index, jule::Ptr<_1a3115bcc_IndexingExpr>& _98169_i) {
	if ((_98150_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3ed8e78_Map> _98517_m = _1a3ed2746_Map(_98135_d.get()._field_Kind.ptr());;
	_1a3e8d746_assignTypeChecker _98617_atc = _1a3e8d746_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_98517_m.get()._field_Key, ._field_d=_98150_index, ._field_errorToken=_98169_i.get()._field_Token};;
	_1a3e8e8bd_check(&_98617_atc);
	_98135_d.get()._field_Kind=_98517_m.get()._field_Val;
}



inline void _1a3eae9cb_indexingStr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _99635_d, jule::Ptr<_1a3ea2e75_Data>& _99650_index, jule::Ptr<_1a3115bcc_IndexingExpr>& _99665_i) {
	;
	_99635_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_99650_index == nullptr)) {
		return;;
	};
	_1a3ead5e0_checkIntegerIndexingByData(&(*_self_), _99650_index,_99665_i.get()._field_Token);
	if ((!(_1a3ea3838_IsConst(_99650_index.ptr())))) {
		_99635_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1a3ea3838_IsConst(_99635_d.ptr())) {
		jule::Ptr<_1ba1dbeab_Token> _101217_errorToken = _99665_i.get()._field_Token;;
		jule::I64 _101317_j = _1a31b8785_AsI64(_99650_index.get()._field_Constant.ptr());;
		jule::Str _101417_s = _1a31b82ac_ReadStr(_99635_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101317_j) >= _101417_s.len())) {
			_1a3ea4eee_pushErr(&(*_self_), _101217_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1a31b9258_SetU64(_99635_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		};
	};
}



inline void _1a3eaed94_toIndexing(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _102334_d, jule::Ptr<_1a3ea2e75_Data>& _102349_index, jule::Ptr<_1a3115bcc_IndexingExpr>& _102368_i) {
	{
		
		if ((_1a3ed12e4_Ptr(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a69bdbad:;
			{
				_1a3ead9b9_indexingPtr(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_1a3ed1a31_Arr(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a69bdc35:;
			{
				_1a3eadd82_indexingArr(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_1a3ed1c95_Slc(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a69bdcac:;
			{
				_1a3eae24a_indexingSlc(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_1a3ed2746_Map(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a69bdd34:;
			{
				_1a3eae613_indexingMap(&(*_self_), _102334_d,_102349_index,_102368_i);
				return;;
			}
		}
		else if ((_1a3ed0d1b_Prim(_102334_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a69bddab:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _103817_prim = _1a3ed0d1b_Prim(_102334_d.get()._field_Kind.ptr());;
				{
					
					if (_1a3ed6915_IsStr(_103817_prim.ptr())) {
						_case_begin_1a69c329a:;
						{
							_1a3eae9cb_indexingStr(&(*_self_), _102334_d,_102349_index,_102368_i);
							return;;
						}
					}
					_match_end_1a69c3201:;
				};
			}
		}
		_match_end_1a69bda59:;
	};
	_1a3ea4eee_pushErr(&(*_self_), _102368_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_102334_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _1a3eb0317_pushGenericsFromExprSubIdent(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a311228e_SubIdentExpr>& _104853_sexpr, jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>& _104914_generics, jule::Ptr<_1a310d983_Expr>& _104942_expr) {
	jule::Ptr<_1a310a177_SubIdentTypeDecl> _105017_t = jule::new_ptr<_1a310a177_SubIdentTypeDecl>();;
	if ((!(_1a3ecb61e_pushSubIdentFromExpr(static_cast<jule::Any>(_104853_sexpr),_105017_t)))) {
		_1a3ea4eee_pushErr(_self_.ptr(), _104942_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104914_generics = jule::alloc_for_append(_104914_generics,1);_104914_generics.__push(jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Kind=static_cast<jule::Any>(_105017_t)}));;
	return true;
}



inline jule::Bool _1a3eb06d0_pushGenericsFromData(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>& _105945_generics, jule::Ptr<_1a310d983_Expr>& _105973_expr) {
	{
		auto &_match_expr{ _105973_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3111205_UnaryExpr>>()) {
			_case_begin_1a69c69c9:;
			{
				jule::Ptr<_1a3ea2e75_Data> _106421_d = _1a3eac116_evalUnary(_self_, _105973_expr.get()._field_Kind.operator jule::Ptr<_1a3111205_UnaryExpr>());;
				if ((!(_106421_d.get()._field_Decl))) {
					_1a3ea4eee_pushErr(_self_.ptr(), _105973_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_105973_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_106421_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3109462_TypeDecl>>()) {
			_case_begin_1a69c6a40:;
			{
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(_105973_expr.get()._field_Kind.operator jule::Ptr<_1a3109462_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a311228e_SubIdentExpr>>()) {
			_case_begin_1a69c6aa6:;
			{
				jule::Ptr<_1a311228e_SubIdentExpr> _107621_sexpr = _105973_expr.get()._field_Kind.operator jule::Ptr<_1a311228e_SubIdentExpr>();;
				return _1a3eb0317_pushGenericsFromExprSubIdent(_self_, _107621_sexpr,_105945_generics,_105973_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31109eb_IdentExpr>>()) {
			_case_begin_1a69c73c0:;
			{
				jule::Ptr<_1a31109eb_IdentExpr> _107921_ident = _105973_expr.get()._field_Kind.operator jule::Ptr<_1a31109eb_IdentExpr>();;
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_107921_ident.get()._field_Token, ._field_Ident=_107921_ident.get()._field_Ident, ._field_CppLinked=_107921_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310e610_TupleExpr>>()) {
			_case_begin_1a69c7436:;
			{
				{
					auto &expr = _105973_expr.get()._field_Kind.operator jule::Ptr<_1a310e610_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1a69cb9ce:;
					if (it != expr.end()) {
						jule::Ptr<_1a310d983_Expr> _108825_texpr = *it;
						{
							if ((!(_1a3eb06d0_pushGenericsFromData(_self_, _105945_generics,_108825_texpr)))) {
								return false;
							};
						}
						_iter_next_1a69cb9ce:;
						++it;
						goto _iter_begin_1a69cb9ce;
					}
					_iter_end_1a69cb9ce:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3111d1b_NsSelectionExpr>>()) {
			_case_begin_1a69c749c:;
			{
				jule::Ptr<_1a3111d1b_NsSelectionExpr> _109421_ns = _105973_expr.get()._field_Kind.operator jule::Ptr<_1a3111d1b_NsSelectionExpr>();;
				jule::Ptr<_1a3109a28_IdentTypeDecl> _109521_decl = jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_109421_ns.get()._field_Ident, ._field_Ident=_109421_ns.get()._field_Ident.get()._field_Kind, });;
				_105945_generics = jule::alloc_for_append(_105945_generics,1);_105945_generics.__push(jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_109521_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310a52e_NamespaceTypeDecl>(_1a310a52e_NamespaceTypeDecl{._field_Idents=_109421_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_109521_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_109521_decl)})}))}));;
			}
		}
		else {
			_case_begin_1a69c6710:;
			{
				_1a3ea4eee_pushErr(_self_.ptr(), _105973_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a69c68db:;
	};
	return true;
}



inline void _1a3eb0a21_evalIdentDeclFromIndexing(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3ea2e75_Data>& _111650_d, jule::Ptr<_1a3115bcc_IndexingExpr>& _111665_i) {
	jule::Ptr<_1a312ad46_StructIns> _111717_s = _1a3ed226d_Struct(_111650_d.get()._field_Kind.ptr());;
	if ((_111717_s == nullptr)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _111665_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_111650_d.get()._field_Kind.ptr()))}));
		_111650_d=nullptr;
		return;;
	};
	jule::Ptr<_1a3109a28_IdentTypeDecl> _112417_decl = nullptr;;
	{
		auto &_match_expr{ _111665_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31109eb_IdentExpr>>()) {
			_case_begin_1a69d3464:;
			{
				jule::Ptr<_1a31109eb_IdentExpr> _112721_expr = _111665_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1a31109eb_IdentExpr>();;
				_112417_decl=jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_112721_expr.get()._field_Token, ._field_Ident=_112721_expr.get()._field_Ident, ._field_CppLinked=_112721_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3111d1b_NsSelectionExpr>>()) {
			_case_begin_1a69d1011:;
			{
				jule::Ptr<_1a3111d1b_NsSelectionExpr> _113421_expr = _111665_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1a3111d1b_NsSelectionExpr>();;
				_112417_decl=jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_113421_expr.get()._field_Ident, ._field_Ident=_113421_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1a69d2980:;
			{
				_1a3ea4eee_pushErr(_self_.ptr(), _111665_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_111650_d=nullptr;
				return;;
			}
		}
		_match_end_1a69d261c:;
	};
	if ((!(_1a3eb06d0_pushGenericsFromData(_self_, _112417_decl.get()._field_Generics,_111665_i.get()._field_Index)))) {
		_111650_d=nullptr;
		return;;
	};
	_111717_s=({ auto _wrap_copy = _1a3eb68b2_typeChecker(_self_.ptr()); _1a3ee5e1e_fromStruct(&_wrap_copy, _112417_decl,_111717_s.get()._field_Decl); });
	if ((_111717_s == nullptr)) {
		_111650_d=nullptr;
		return;;
	};
	_111650_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_111717_s, 0);
}



inline jule::Bool _1a3eb0e83_checkGenericFn(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31ca874_FnIns>& _115939_f, jule::Ptr<_1ba1dbeab_Token>& _115955_et, jule::Any& _115972_model) {
	jule::Bool _116013_ok = _1a3e48e82_reloadFnInsTypes(_self_.get()._field_s, _115939_f);;
	_115939_f.get()._field_reloaded=true;
	if ((!(_116013_ok))) {
		return false;
	};
	jule::Ptr<_1a31ca874_FnIns> _116517_existInstance = _1a31c95ed_appendInstance(_115939_f.get()._field_Decl.ptr(), _115939_f);;
	if ((!(_1a3e480e6_checkConstraintsFn(_self_.get()._field_s, _115939_f,_115955_et,_116517_existInstance)))) {
		return false;
	};
	if ((_116517_existInstance != nullptr)) {
		_115939_f=_116517_existInstance;
		_1a3ecb3cc_updateModelToGenericIns(_115972_model,_116517_existInstance);
	} else {
		_1a3e557b8_checkFnInsCaller(_self_.get()._field_s, _115939_f,_115955_et);
	};
	return true;
}



inline void _1a3eb12c4_evalFnGenericFromIndexing(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3ea2e75_Data>& _118450_d, jule::Ptr<_1a3115bcc_IndexingExpr>& _118465_i) {
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _118517_generics = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>::alloc(0LL,8LLU);;
	if ((!(_1a3eb06d0_pushGenericsFromData(_self_, _118517_generics,_118465_i.get()._field_Index)))) {
		_118450_d=nullptr;
		return;;
	};
	jule::Ptr<_1a31ca874_FnIns> _119117_f = _1a3ed2009_Fn(_118450_d.get()._field_Kind.ptr());;
	jule::I64 _119217_genericsLen = 0LL;;
	if ((_119117_f.get()._field_Decl != nullptr)) {
		_119217_genericsLen=static_cast<jule::I64>(_119117_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1a3e41254_checkGenericQuantity(_self_.get()._field_s.ptr(), _119217_genericsLen,static_cast<jule::I64>(_118517_generics.len()),_118465_i.get()._field_Expr.get()._field_Token)))) {
		_118450_d=nullptr;
		return;;
	};
	_119117_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>>::alloc(0LL,_119117_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _118517_generics;
		auto it = expr.begin();
		_iter_begin_1a69deabe:;
		if (it != expr.end()) {
			jule::Ptr<_1a3109462_TypeDecl> _120321_g = *it;
			{
				jule::Ptr<_1a3ea2e75_Data> _120421_k = _1a3eb6bc0_evalType(_self_.ptr(), _120321_g);;
				if ((_120421_k == nullptr)) {
					_118450_d=nullptr;
					return;;
				};
				_119117_f.get()._field_Generics = jule::alloc_for_append(_119117_f.get()._field_Generics,1);_119117_f.get()._field_Generics.__push(jule::new_ptr<_1a3ecc4cc_InsGeneric>(_1a3ecc4cc_InsGeneric{._field_Kind=_120421_k.get()._field_Kind, }));;
			}
			_iter_next_1a69deabe:;
			++it;
			goto _iter_begin_1a69deabe;
		}
		_iter_end_1a69deabe:;
	};
	if (_1a31cbc0a_IsBuiltin(_119117_f.ptr())) {
		return;;
	};
	if (_1a3eb0e83_checkGenericFn(_self_, _119117_f,_118465_i.get()._field_Expr.get()._field_Token,_118450_d.get()._field_Model)) {
		_118450_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_119117_f, 1);
	} else {
		_118450_d=nullptr;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb15e3_evalIndexing(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3115bcc_IndexingExpr> _122336_i) {
	jule::Ptr<_1a3ecdc09_TypeKind> _122417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_122417_prefix;
	});;
	jule::Ptr<_1a3ea2e75_Data> _122817_d = _1a3ebecd8_evalExprKind(_self_, _122336_i.get()._field_Expr.get()._field_Kind);;
	if ((_122817_d == nullptr)) {
		return nullptr;
	};
	if (_122817_d.get()._field_Decl) {
		_1a3eb0a21_evalIdentDeclFromIndexing(_self_, _122817_d,_122336_i);
		return _122817_d;
	};
	if ((_1a3ed2009_Fn(_122817_d.get()._field_Kind.ptr()) != nullptr)) {
		_1a3eb12c4_evalFnGenericFromIndexing(_self_, _122817_d,_122336_i);
		return _122817_d;
	};
	_1a3ea2e75_Data _124417_old_d = (*(_122817_d));;
	jule::Ptr<_1a3ea2e75_Data> _124617_index = _1a3ebecd8_evalExprKind(_self_, _122336_i.get()._field_Index.get()._field_Kind);;
	if ((_124617_index == nullptr)) {
		return nullptr;
	};
	_122817_d.get()._field_Decl=false;
	_1a3eaed94_toIndexing(_self_.ptr(), _122817_d,_124617_index,_122336_i);
	if (_1a3ea3838_IsConst(_122817_d.ptr())) {
		_122817_d.get()._field_Decl=false;
		_122817_d.get()._field_Model=static_cast<jule::Any>(_122817_d.get()._field_Constant);
	} else if (_122817_d.get()._field_Decl) {
		_122817_d.get()._field_Decl=false;
	} else {
		_122817_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c1150_IndexingExprModel>(_1a31c1150_IndexingExprModel{._field_Token=_122336_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1a3ea2e75_Data>(_124417_old_d), ._field_Index=_124617_index}));
	};
	return _122817_d;
}



inline std::tuple<jule::Ptr<_1a3ea2e75_Data>,jule::Ptr<_1a3ea2e75_Data>> _1a3eb1901_evalSlicingExprs(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31162d7_SlicingExpr>& _127741_s) {
	jule::Ptr<_1a3ecdc09_TypeKind> _127817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_127817_prefix;
	});;
	jule::Ptr<_1a3ea2e75_Data> _128217_l = nullptr;;
	jule::Ptr<_1a3ea2e75_Data> _128317_r = nullptr;;
	if ((_127741_s.get()._field_Start != nullptr)) {
		_128217_l=_1a3ebecd8_evalExprKind(_self_, _127741_s.get()._field_Start.get()._field_Kind);
		if ((_128217_l != nullptr)) {
			_1a3ead5e0_checkIntegerIndexingByData(_self_.ptr(), _128217_l,_127741_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_128217_l=jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1a31b6970_NewI64(0LL)});
		_128217_l.get()._field_Model=static_cast<jule::Any>(_128217_l.get()._field_Constant);
	};
	if ((_127741_s.get()._field_To != nullptr)) {
		_128317_r=_1a3ebecd8_evalExprKind(_self_, _127741_s.get()._field_To.get()._field_Kind);
		if ((_128317_r != nullptr)) {
			_1a3ead5e0_checkIntegerIndexingByData(_self_.ptr(), _128317_r,_127741_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_128217_l,_128317_r);
}



inline void _1a3eb1b76_slicingArr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _131230_d) {
	jule::Ptr<_1a3ecdc09_TypeKind> _131317_elemType = _1a3ed1a31_Arr(_131230_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_131230_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=_131317_elemType}), 8)});
	_131230_d.get()._field_Lvalue=false;
	_131230_d.get()._field_Mutable=(_131230_d.get()._field_Mutable || (!(_1a3ed0106_Mutable(_131317_elemType.ptr()))));
}



inline void _1a3eb203e_slicingStr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _132730_d, jule::Ptr<_1a3ea2e75_Data>& _132741_l, jule::Ptr<_1a3ea2e75_Data>& _132752_r) {
	_132730_d.get()._field_Lvalue=false;
	_132730_d.get()._field_Mutable=true;
	if ((!(_1a3ea3838_IsConst(_132730_d.ptr())))) {
		return;;
	};
	if (((_132741_l == nullptr) || (_132752_r == nullptr))) {
		_132730_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1a3ea3838_IsConst(_132741_l.ptr()) && _1a3ea3838_IsConst(_132752_r.ptr()))) {
		jule::I64 _134017_left = _1a31b8785_AsI64(_132741_l.get()._field_Constant.ptr());;
		if ((_134017_left < 0LL)) {
			return;;
		};
		jule::Str _134517_s = _1a31b82ac_ReadStr(_132730_d.get()._field_Constant.ptr());;
		jule::I64 _134621_right = 0LL;;
		if ((_132752_r == nullptr)) {
			_134621_right=static_cast<jule::I64>(static_cast<jule::I64>(_134517_s.len()));
		} else {
			_134621_right=static_cast<jule::I64>(_1a31b8785_AsI64(_132752_r.get()._field_Constant.ptr()));
		};
		if ((_134017_left > _134621_right)) {
			return;;
		};
		_1a31b9753_SetStr(_132730_d.get()._field_Constant.ptr(), _134517_s.slice(_134017_left,_134621_right));
		_132730_d.get()._field_Decl=true;
	} else {
		_132730_d.get()._field_Constant=nullptr;
	};
}



inline void _1a3eb24a1_checkSlicing(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data>& _136336_d, jule::Ptr<_1a3ea2e75_Data>& _136347_l, jule::Ptr<_1a3ea2e75_Data>& _136358_r, jule::Ptr<_1a31162d7_SlicingExpr>& _136369_s) {
	{
		
		if ((_1a3ed1a31_Arr(_136336_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6a0b954:;
			{
				_1a3eb1b76_slicingArr(&(*_self_), _136336_d);
				return;;
			}
		}
		else if ((_1a3ed1c95_Slc(_136336_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6a0b9cb:;
			{
				return;;
			}
		}
		else if ((_1a3ed0d1b_Prim(_136336_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6a0ba53:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _137117_prim = _1a3ed0d1b_Prim(_136336_d.get()._field_Kind.ptr());;
				{
					
					if (_1a3ed6915_IsStr(_137117_prim.ptr())) {
						_case_begin_1a6a0e1c6:;
						{
							_1a3eb203e_slicingStr(&(*_self_), _136336_d,_136347_l,_136358_r);
							return;;
						}
					}
					_match_end_1a6a0e12c:;
				};
			}
		}
		_match_end_1a6a0b822:;
	};
	_1a3ea4eee_pushErr(&(*_self_), _136369_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_136336_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb27ae_evalSlicing(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31162d7_SlicingExpr> _138235_s) {
	jule::Ptr<_1a3ea2e75_Data> _138317_d = _1a3ebecd8_evalExprKind(_self_, _138235_s.get()._field_Expr.get()._field_Kind);;
	if ((_138317_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _138818_l;;
	jule::Ptr<_1a3ea2e75_Data> _138825_r;;
	std::tie(_138818_l,_138825_r) = _1a3eb1901_evalSlicingExprs(_self_, _138235_s);
	if ((_138818_l == nullptr)) {
		return _138317_d;
	};
	_138317_d.get()._field_Decl=false;
	_1a3eb24a1_checkSlicing(_self_.ptr(), _138317_d,_138818_l,_138825_r,_138235_s);
	if (_1a3ea3838_IsConst(_138317_d.ptr())) {
		_138317_d.get()._field_Decl=false;
		_138317_d.get()._field_Model=static_cast<jule::Any>(_138317_d.get()._field_Constant);
	} else if (_138317_d.get()._field_Decl) {
		_138317_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1a31c1903_SlicingExprModel> _140621_model = jule::new_ptr<_1a31c1903_SlicingExprModel>(_1a31c1903_SlicingExprModel{._field_Token=_138235_s.get()._field_Token, ._field_Expr=_138317_d.get()._field_Model, ._field_Left=_138818_l.get()._field_Model, });;
		if ((_138825_r != nullptr)) {
			_140621_model.get()._field_Right=_138825_r.get()._field_Model;
		};
		_138317_d.get()._field_Model=static_cast<jule::Any>(_140621_model);
	};
	return _138317_d;
}



inline void _1a3eb2b77_castPtr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _141930_t, jule::Ptr<_1a3ea2e75_Data> _141948_d, jule::Ptr<_1ba1dbeab_Token> _141958_errorToken) {
	_141948_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a3ed6e65_Sptr> _142113_sptr = _1a3ed1080_Sptr(_141948_d.get()._field_Kind.ptr());;
	if ((_142113_sptr != nullptr)) {
		if ((!(_1a3ece413_Equals(_1a3ed12e4_Ptr(_141930_t.ptr()).get()._field_Elem, _142113_sptr.get()._field_Elem)))) {
			_1a3ea4eee_pushErr(&(*_self_), _141958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_141948_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_141930_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1a3ea5939_isUnsafe(&(*_self_))))) {
		_1a3ea4eee_pushErr(&(*_self_), _141958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3ed36d1_Prim> _143413_prim = _1a3ed0d1b_Prim(_141948_d.get()._field_Kind.ptr());;
	if (((_1a3ed12e4_Ptr(_141948_d.get()._field_Kind.ptr()) == nullptr) && ((_143413_prim == nullptr) || (!(_1a3e20b90_IsInt(_1a3ed3a44_Str(_143413_prim.ptr()))))))) {
		_1a3ea4eee_pushErr(&(*_self_), _141958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_141948_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_141930_t.ptr()))}));
	};
}



inline void _1a3eb3040_castStruct(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _144033_t, jule::Ptr<_1a3ea2e75_Data> _144051_d, jule::Ptr<_1ba1dbeab_Token> _144061_errorToken) {
	_144051_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a31d9a81_Trait> _144217_tr = _1a3ed24d2_Trait(_144051_d.get()._field_Kind.ptr());;
	if ((_144217_tr == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _144061_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_144051_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_144033_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1a312ad46_StructIns> _144817_s = _1a3ed226d_Struct(_144033_t.ptr());;
	_1a6a1cb52_pushReference(&(*_self_), _144817_s);
	if ((!(_1a30db6b9_IsImplements(_144817_s.get()._field_Decl.ptr(), _144217_tr)))) {
		_1a3ea4eee_pushErr(&(*_self_), _144061_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_144051_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_144033_t.ptr()))}));
	};
}



inline void _1a3eb3408_castRef(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _145630_t, jule::Ptr<_1a3ea2e75_Data> _145648_d, jule::Ptr<_1ba1dbeab_Token> _145658_errorToken) {
	_145648_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a3ed6e65_Sptr> _145817_sptr = _1a3ed1080_Sptr(_145630_t.ptr());;
	jule::Ptr<_1a3eda4c9_Ptr> _146017_ptr = _1a3ed12e4_Ptr(_145648_d.get()._field_Kind.ptr());;
	if (((_146017_ptr != nullptr) && _1a3ece413_Equals(_145817_sptr.get()._field_Elem, _146017_ptr.get()._field_Elem))) {
		if ((!(_1a3ea5939_isUnsafe(&(*_self_))))) {
			_1a3ea4eee_pushErr(&(*_self_), _145658_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a3ed226d_Struct(_145817_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1a3eb3040_castStruct(&(*_self_), _145817_sptr.get()._field_Elem,_145648_d,_145658_errorToken);
		return;;
	};
	_1a3ea4eee_pushErr(&(*_self_), _145658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_145648_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_145630_t.ptr()))}));
}



inline void _1a3eb37c1_castSlc(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _147830_t, jule::Ptr<_1a3ea2e75_Data> _147848_d, jule::Ptr<_1ba1dbeab_Token> _147858_errorToken) {
	_147848_d.get()._field_Constant=nullptr;
	if ((_1a3ed1558_Enum(_147848_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1a3ed0d1b_Prim(_1a3ed1558_Enum(_147848_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ed6915_IsStr(_1a3ed0d1b_Prim(_1a3ed1558_Enum(_147848_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1a3ea4eee_pushErr(&(*_self_), _147858_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_147848_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_147830_t.ptr()))}));
			return;;
		};
	} else if (((_1a3ed0d1b_Prim(_147848_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ed6915_IsStr(_1a3ed0d1b_Prim(_147848_d.get()._field_Kind.ptr()).ptr()))))) {
		_1a3ea4eee_pushErr(&(*_self_), _147858_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_147848_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_147830_t.ptr()))}));
		return;;
	};
	_147830_t=_1a3ed1c95_Slc(_147830_t.ptr()).get()._field_Elem;
	jule::Ptr<_1a3ed36d1_Prim> _149113_prim = _1a3ed0d1b_Prim(_147830_t.ptr());;
	if (((_149113_prim == nullptr) || ((!(_1a3ed4eda_IsU8(_149113_prim.ptr()))) && (!(_1a3ed4a12_IsI32(_149113_prim.ptr())))))) {
		_1a3ea4eee_pushErr(&(*_self_), _147858_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_147848_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_147830_t.ptr()))}));
	};
}



inline void _1a3eb3ae0_castStr(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _149730_d, jule::Ptr<_1ba1dbeab_Token> _149740_errorToken) {
	_149730_d.get()._field_Constant=nullptr;
	if ((_1a3ed1558_Enum(_149730_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a31dbbc6_Enum> _150021_e = _1a3ed1558_Enum(_149730_d.get()._field_Kind.ptr());;
		if (((_1a3ed0d1b_Prim(_150021_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1a3ed6915_IsStr(_1a3ed0d1b_Prim(_150021_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1a3ed0d1b_Prim(_149730_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3ed36d1_Prim> _150717_prim = _1a3ed0d1b_Prim(_149730_d.get()._field_Kind.ptr());;
		if (((!(_1a3ed4eda_IsU8(_150717_prim.ptr()))) && (!(_1a3ed4a12_IsI32(_150717_prim.ptr()))))) {
			_1a3ea4eee_pushErr(&(*_self_), _149740_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a3ece105_Str(_149730_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_1a3ed1c95_Slc(_149730_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _149740_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a3ece105_Str(_149730_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _151917_t = _1a3ed1c95_Slc(_149730_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1a3ed36d1_Prim> _152013_prim = _1a3ed0d1b_Prim(_151917_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_1a3ed4eda_IsU8(_152013_prim.ptr()))) && (!(_1a3ed4a12_IsI32(_152013_prim.ptr())))))) {
		_1a3ea4eee_pushErr(&(*_self_), _149740_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a3ece105_Str(_149730_d.get()._field_Kind.ptr()))}));
	};
}



inline void _1a3eb3ea8_castInt(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _152630_t, jule::Ptr<_1a3ea2e75_Data> _152648_d, jule::Ptr<_1ba1dbeab_Token> _152658_errorToken) {
	if (_1a3ea3838_IsConst(_152648_d.ptr())) {
		jule::Ptr<_1a3ed36d1_Prim> _152817_prim = _1a3ed0d1b_Prim(_152630_t.ptr());;
		{
			
			if (_1a3e2092b_IsSigInt(_152817_prim.get()._field_Kind)) {
				_case_begin_1a6a39553:;
				{
					_1a31b8ed3_SetI64(_152648_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_152648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a3e20a5d_IsUnsigInt(_152817_prim.get()._field_Kind)) {
				_case_begin_1a6a395ca:;
				{
					_1a31b9258_SetU64(_152648_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_152648_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a6a39498:;
		};
	} else {
		_152648_d.get()._field_Constant=nullptr;
	};
	if ((_1a3ed1558_Enum(_152648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a31dbbc6_Enum> _154017_e = _1a3ed1558_Enum(_152648_d.get()._field_Kind.ptr());;
		if (_1a3e20e04_IsNum(_1a3ece105_Str(_154017_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a3ed1080_Sptr(_152648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3ed36d1_Prim> _154717_prim = _1a3ed0d1b_Prim(_152630_t.ptr());;
		if ((!(_1a3ed643c_IsUintptr(_154717_prim.ptr())))) {
			_1a3ea4eee_pushErr(&(*_self_), _152658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_152648_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_152630_t.ptr()))}));
		};
		return;;
	};
	if ((_1a3ed12e4_Ptr(_152648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3ed36d1_Prim> _155417_prim = _1a3ed0d1b_Prim(_152630_t.ptr());;
		if (_1a3ed643c_IsUintptr(_155417_prim.ptr())) {
		} else if ((!(_1a3ea5939_isUnsafe(&(*_self_))))) {
			_1a3ea4eee_pushErr(&(*_self_), _152658_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a3ed36d1_Prim> _156313_prim = _1a3ed0d1b_Prim(_152648_d.get()._field_Kind.ptr());;
	if (((_156313_prim != nullptr) && _1a3e20e04_IsNum(_1a3ed3a44_Str(_156313_prim.ptr())))) {
		return;;
	};
	_1a3ea4eee_pushErr(&(*_self_), _152658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_152648_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_152630_t.ptr()))}));
}



inline void _1a3eb4371_castNum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _157130_t, jule::Ptr<_1a3ea2e75_Data> _157148_d, jule::Ptr<_1ba1dbeab_Token> _157158_errorToken) {
	if (_1a3ea3838_IsConst(_157148_d.ptr())) {
		jule::Ptr<_1a3ed36d1_Prim> _157317_prim = _1a3ed0d1b_Prim(_157130_t.ptr());;
		{
			
			if (_1a3e20cc2_IsFloat(_157317_prim.get()._field_Kind)) {
				_case_begin_1a6a43d65:;
				{
					_1a31b99c8_SetF64(_157148_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a31b8c5d_AsF64(_157148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a3e2092b_IsSigInt(_157317_prim.get()._field_Kind)) {
				_case_begin_1a6a43ddc:;
				{
					_1a31b8ed3_SetI64(_157148_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_157148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a3e20a5d_IsUnsigInt(_157317_prim.get()._field_Kind)) {
				_case_begin_1a6a43e64:;
				{
					_1a31b9258_SetU64(_157148_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_157148_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a6a43c99:;
		};
	} else {
		_157148_d.get()._field_Constant=nullptr;
	};
	if ((_1a3ed1558_Enum(_157148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a31dbbc6_Enum> _158717_e = _1a3ed1558_Enum(_157148_d.get()._field_Kind.ptr());;
		if (_1a3e20e04_IsNum(_1a3ece105_Str(_158717_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a3ed36d1_Prim> _159313_prim = _1a3ed0d1b_Prim(_157148_d.get()._field_Kind.ptr());;
	if (((_159313_prim != nullptr) && _1a3e20e04_IsNum(_1a3ed3a44_Str(_159313_prim.ptr())))) {
		return;;
	};
	_1a3ea4eee_pushErr(&(*_self_), _157158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_157148_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_157130_t.ptr()))}));
}



inline void _1a3eb4739_castPrim(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _160131_t, jule::Ptr<_1a3ea2e75_Data> _160149_d, jule::Ptr<_1ba1dbeab_Token> _160159_errorToken) {
	jule::Ptr<_1a3ed36d1_Prim> _160213_prim = _1a3ed0d1b_Prim(_160131_t.ptr());;
	{
		
		if (_1a3ed6b79_IsAny(_160213_prim.ptr())) {
			_case_begin_1a6a4a1e0:;
			{
				_160149_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1a3ed6915_IsStr(_160213_prim.ptr())) {
			_case_begin_1a6a4a7a6:;
			{
				_1a3eb3ae0_castStr(&(*_self_), _160149_d,_160159_errorToken);
			}
		}
		else if (_1a3e20b90_IsInt(_1a3ed3a44_Str(_160213_prim.ptr()))) {
			_case_begin_1a6a4a81c:;
			{
				_1a3eb3ea8_castInt(&(*_self_), _160131_t,_160149_d,_160159_errorToken);
			}
		}
		else if (_1a3e20e04_IsNum(_1a3ed3a44_Str(_160213_prim.ptr()))) {
			_case_begin_1a6a4a883:;
			{
				_1a3eb4371_castNum(&(*_self_), _160131_t,_160149_d,_160159_errorToken);
			}
		}
		else {
			_case_begin_1a6a4a740:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _160159_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_160131_t.ptr()))}));
			}
		}
		_match_end_1a6a4a6c9:;
	};
}



inline void _1a3eb4a58_castConstant(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _161836_t, jule::Ptr<_1a3ea2e75_Data>& _161855_d) {
	if (((_161855_d == nullptr) || (!(_1a3ea3838_IsConst(_161855_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a3ed36d1_Prim> _162213_prim = _1a3ed0d1b_Prim(_161836_t.ptr());;
	_1a3ecadc1_castConstByType(_162213_prim.get()._field_Kind,_161855_d);
	_161855_d.get()._field_Model=static_cast<jule::Any>(_161855_d.get()._field_Constant);
}



inline void _1a3eb4e21_castTypeEnum(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _162736_t, jule::Ptr<_1a3ea2e75_Data>& _162755_d, jule::Ptr<_1ba1dbeab_Token>& _162770_errorToken) {
	jule::I64 _162813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1a3e471e4_checkTypeCompatibility((*_self_)._field_s, _162755_d.get()._field_Kind,_162736_t,_162770_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_162813_n);
		_1a3ea4eee_pushErr(&(*_self_), _162770_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_162755_d.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_162736_t.ptr()))}));
	};
	_162755_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb5372_evalCastByTypeNData(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ecdc09_TypeKind> _163642_t, jule::Ptr<_1a3ea2e75_Data> _163660_d, jule::Ptr<_1ba1dbeab_Token> _163674_errorToken) {
	if (((_163660_d != nullptr) && _163660_d.get()._field_Decl)) {
		_1a3ea4eee_pushErr(&(*_self_), _163674_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1a3ed0d1b_Prim(_163660_d.get()._field_Kind.ptr()) != nullptr) && _1a3ed6b79_IsAny(_1a3ed0d1b_Prim(_163660_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6a54480:;
			{
				if ((_1a3ed1558_Enum(_163642_t.ptr()) != nullptr)) {
					_1a3ea4eee_pushErr(&(*_self_), _163674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1a3ed17bc_TypeEnum(_163642_t.ptr()) != nullptr)) {
					_1a3ea4eee_pushErr(&(*_self_), _163674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_163660_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1a3ed17bc_TypeEnum(_163660_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6a54c77:;
			{
				_1a3eb4e21_castTypeEnum(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_1a3ed12e4_Ptr(_163642_t.ptr()) != nullptr)) {
			_case_begin_1a6a5401d:;
			{
				_1a3eb2b77_castPtr(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_1a3ed1080_Sptr(_163642_t.ptr()) != nullptr)) {
			_case_begin_1a6a54084:;
			{
				_1a3eb3408_castRef(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_1a3ed1c95_Slc(_163642_t.ptr()) != nullptr)) {
			_case_begin_1a6a5410b:;
			{
				_1a3eb37c1_castSlc(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_1a3ed226d_Struct(_163642_t.ptr()) != nullptr)) {
			_case_begin_1a6a54183:;
			{
				_1a3eb3040_castStruct(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
			}
		}
		else if ((_1a3ed0d1b_Prim(_163642_t.ptr()) != nullptr)) {
			_case_begin_1a6a54ded:;
			{
				_1a3eb4739_castPrim(&(*_self_), _163642_t,_163660_d,_163674_errorToken);
				_1a3eb4a58_castConstant(&(*_self_), _163642_t,_163660_d);
			}
		}
		else {
			_case_begin_1a6a53ea7:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _163674_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_163642_t.ptr()))}));
				_163660_d=nullptr;
			}
		}
		_match_end_1a6a5335d:;
	};
	if ((_163660_d == nullptr)) {
		return nullptr;
	};
	_163660_d.get()._field_Mutable=(_163660_d.get()._field_Mutable || ((!(_1a3ed0106_Mutable(_163660_d.get()._field_Kind.ptr()))) && _1a3ed0106_Mutable(_163642_t.ptr())));
	_163660_d.get()._field_Lvalue=false;
	_163660_d.get()._field_Decl=false;
	if (((_1a3ed1558_Enum(_163660_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ece413_Equals(_1a3ed1558_Enum(_163660_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _163642_t))))) {
		_1a3eca387_applyCastKind(_163660_d,_163642_t);
		_163660_d.get()._field_Model.operator jule::Ptr<_1a31c0a89_CastingExprModel>().get()._field_Token=_163674_errorToken;
	} else {
		_163660_d.get()._field_Kind=_163642_t;
	};
	_163660_d.get()._field_untyped=false;
	return _163660_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb57c3_evalCastT(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _169134_t, jule::Ptr<_1a310d983_Expr>& _169153_e, jule::Ptr<_1ba1dbeab_Token>& _169168_et) {
	jule::Ptr<_1a3ecdc09_TypeKind> _169217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_169217_prefix;
	});;
	if ((_1a3ed1c95_Slc(_169134_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _169153_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1a311533b_SliceExpr>>()) {
				_case_begin_1a6a6124a:;
				{
					_self_.get()._field_prefix=_169134_t;
				}
			}
			_match_end_1a6a6029e:;
		};
	};
	jule::Ptr<_1a3ea2e75_Data> _170117_d = _1a3ebecd8_evalExprKind(_self_, _169153_e.get()._field_Kind);;
	if (((_170117_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _170117_d;
	};
	return _1a3eb5372_evalCastByTypeNData(_self_.ptr(), _169134_t,_170117_d,_169168_et);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb5ad1_evalCast(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3111964_CastExpr> _170832_c) {
	jule::Ptr<_1a3ed2d62_TypeSymbol> _170917_t = _1a31cee61_buildType(_170832_c.get()._field_Kind);;
	jule::Bool _171013_ok = _1a3e45115_checkType(_self_.get()._field_s, _170917_t,_self_.get()._field_lookup);;
	if ((!(_171013_ok))) {
		return nullptr;
	};
	return _1a3eb57c3_evalCastT(_self_, _170917_t.get()._field_Kind,_170832_c.get()._field_Expr,_170832_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb5dde_evalNsSelection(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3111d1b_NsSelectionExpr> _171734_s) {
	jule::Str _171813_path = _1a3eeb661_buildLinkPathByTokens(_171734_s.get()._field_Ns);;
	jule::Ptr<_1a3e3409e_ImportInfo> _171917_imp = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eecb5c_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>([=](jule::Ptr<_1a3e3409e_ImportInfo> _171952_imp) mutable -> jule::Bool {
		if (((_171734_s.get()._field_Ns.len() == 1LL) && (_171952_imp.get()._field_Alias == _171813_path))) {
			return true;
		};
		return ((_171952_imp.get()._field_LinkPath == _171813_path) && _1a3e36c0b_isAccessibleViaSelection(_171952_imp.ptr()));
	}));;
	if ((_171917_imp == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _171734_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_171813_path)}));
		return nullptr;
	};
	jule::Trait<_1a3eee697_Lookup> _173117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1a3eee697_Lookup>(_171917_imp, 1);
	;
	_1a3ea56c5_disallowBuiltin(&(*_self_));
	jule::Any _173617_def = _1a3ea8013_getDef(&(*_self_), _171734_s.get()._field_Ident.get()._field_Kind,false);;
	_1a3ea54e9_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_173117_lookup;
	jule::Ptr<_1a3ea2e75_Data> _173917_d = _1a3eab9ea_evalDef(&(*_self_), jule::Any(_173617_def),_171734_s.get()._field_Ident);;
	return _173917_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb6340_evalStructLitExplicit(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a312ad46_StructIns> _174345_s, jule::Slice<jule::Ptr<_1a310d983_Expr>> _174413_exprs, jule::Ptr<_1ba1dbeab_Token> _174433_errorToken) {
	jule::Bool _174513_ok = _1a3e41254_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_174345_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_174345_s.get()._field_Generics.len()),_174433_errorToken);;
	if ((!(_174513_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _174345_s.get()._field_Decl))) {
		_1a3ea4eee_pushErr(_self_.ptr(), _174433_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_174345_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1a6a1cb52_pushReference(_self_.ptr(), _174345_s);
	_1a3ea9e05_checkDeprecated(_self_.ptr(), _174345_s.get()._field_Decl.get()._field_Directives,_174433_errorToken);
	_1a3e97365_structLitChecker _175817_slc = _1a3e97365_structLitChecker{._field_e=_self_, ._field_errorToken=_174433_errorToken, ._field_s=_174345_s, };;
	_1a3e9890a_check(&_175817_slc, _174413_exprs);
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_174345_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c06b0_StructLitExprModel>(_1a31c06b0_StructLitExprModel{._field_Strct=_174345_s, ._field_Args=_175817_slc._field_args})), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb664d_evalStructLit(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3113e2d_StructLit> _177737_lit) {
	jule::Ptr<_1a3ed2d62_TypeSymbol> _177817_t = _1a31cee61_buildType(_177737_lit.get()._field_Kind);;
	jule::Bool _177913_ok = _1a3e45115_checkType(_self_.get()._field_s, _177817_t,_self_.get()._field_lookup);;
	if ((!(_177913_ok))) {
		return nullptr;
	};
	jule::Ptr<_1a312ad46_StructIns> _178417_s = _1a3ed226d_Struct(_177817_t.get()._field_Kind.ptr());;
	if ((_178417_s == nullptr)) {
		if ((_1a3ed1080_Sptr(_177817_t.get()._field_Kind.ptr()) != nullptr)) {
			_178417_s=_1a3ed226d_Struct(_1a3ed1080_Sptr(_177817_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_178417_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1a3ea4eee_pushErr(_self_.ptr(), _177737_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1a3ea2e75_Data> _179717_d = _1a3eb6340_evalStructLitExplicit(_self_, _178417_s,_177737_lit.get()._field_Exprs,_177737_lit.get()._field_Kind.get()._field_Token);;
	if ((_1a3ed1080_Sptr(_177817_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a31c06b0_StructLitExprModel> _179921_model = _179717_d.get()._field_Model.operator jule::Ptr<_1a31c06b0_StructLitExprModel>();;
		_1a3ec8c48_makeStructLitAlloc(_179717_d,_179921_model);
	};
	return _179717_d;
}



inline _1a3edc234_typeChecker _1a3eb68b2_typeChecker(_1a3ea49e3_Eval* _self_) {
	return _1a3e44004_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb6bc0_evalType(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3109462_TypeDecl> _180931_t) {
	jule::Ptr<_1a3ed2d62_TypeSymbol> _181017_tk = _1a31cee61_buildType(_180931_t);;
	jule::Bool _181113_ok = _1a3e45115_checkType((*_self_)._field_s, _181017_tk,(*_self_)._field_lookup);;
	if ((!(_181113_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=_181017_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_181017_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _1a3eb6ede_callTypeFn(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3112c51_FnCallExpr>& _182235_fc, jule::Ptr<_1a3ea2e75_Data>& _182257_d) {
	if ((_182235_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _182235_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_182235_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _182235_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_182235_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1a310d983_Expr> _183021_arg = _182235_fc.get()._field_Args[0LL];;
		_182257_d=_1a3eb57c3_evalCastT(_self_, _182257_d.get()._field_Kind,_183021_arg,_183021_arg.get()._field_Token);
		return;;
	};
	if ((_182257_d != nullptr)) {
		_182257_d.get()._field_Decl=false;
	};
}



inline void _1a3eb730d_callBuiltinFn(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3112c51_FnCallExpr>& _184038_fc, jule::Ptr<_1a3ea2e75_Data>& _184060_d) {
	_184060_d=_1a3ed2009_Fn(_184060_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_184038_fc,_184060_d);
	if ((_184060_d == nullptr)) {
		return;;
	};
	_184060_d.get()._field_Mutable=true;
}



inline void _1a3eb764e_checkFnOfConcurrentCall(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31ca874_FnIns>& _184843_f, jule::Ptr<_1ba1dbeab_Token> _184854_errorToken) {
	if (_1a3ea5939_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _184843_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a6a812c0:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c99a5_ParamIns> &_185216_p = *it;
			{
				if (_185216_p.get()._field_Decl.get()._field_Reference) {
					_1a3ea4eee_pushErr(&(*_self_), _184854_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a6a812c0:;
			++it;
			goto _iter_begin_1a6a812c0;
		}
		_iter_end_1a6a812c0:;
	};
}



inline void _1a3eb7a4a_processExceptionalHandler(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31ca874_FnIns>& _186049_f, jule::Ptr<_1a3112c51_FnCallExpr>& _186065_fc, jule::Ptr<_1a3ea2e75_Data>& _186087_d) {
	jule::Bool _186113_resultNeeded = ((!(_1a31c8135_IsVoid(_186049_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1a3e2427b_scopeChecker> _186217_csc = nullptr;;
	jule::Ptr<_1a3e21344_Scope> _186317_ch = nullptr;;
	jule::Ptr<_1a31c0c76_FnCallExprModel> _186517_model = _186087_d.get()._field_Model.operator jule::Ptr<_1a31c0c76_FnCallExprModel>();;
	jule::Ptr<_1a3e2427b_scopeChecker> _186917_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>();;
	_186217_csc=_1a3e2c471_newChildChecker(_186917_sc);
	if (_186113_resultNeeded) {
		_186217_csc.get()._field_result=_186049_f;
	};
	_186317_ch=_1a3e26107_getChild(_186917_sc.ptr());
	_186065_fc.get()._field_Exception.get()._field_Parent=_186917_sc.get()._field_tree;
	_186217_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_186217_csc.get()._field_table.get()._field_Vars,1);_186217_csc.get()._field_table.get()._field_Vars.__push(_1a3ec9089_buildErrorVar(_186317_ch,_186065_fc));;
	_1a3e26239_checkChildSsc(_186917_sc, _186065_fc.get()._field_Exception,_186317_ch,_186217_csc);
	_186517_model.get()._field_Assigned=_186113_resultNeeded;
	_186517_model.get()._field_Except=_186317_ch;
	if ((_186113_resultNeeded && (_186217_csc.get()._field_result != nullptr))) {
		_1a3ea4eee_pushErr(&(*_self_), _186065_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a3eb7d7a_callFn(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3112c51_FnCallExpr>& _188731_fc, jule::Ptr<_1a3ea2e75_Data>& _188753_d) {
	jule::Ptr<_1a31ca874_FnIns> _188817_f = _1a3ed2009_Fn(_188753_d.get()._field_Kind.ptr());;
	if (_1a31cbc0a_IsBuiltin(_188817_f.ptr())) {
		_1a3eb730d_callBuiltinFn(_self_, _188731_fc,_188753_d);
		return;;
	};
	if ((_1a3ea5b9d_isGlobal(_self_.ptr()) && _188817_f.get()._field_Decl.get()._field_Exceptional)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _188731_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1a3ea531d_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_188753_d=nullptr;
		return;;
	};
	if (((!(_1a31c8399_IsMethod(_188817_f.get()._field_Decl.ptr()))) && _1a3eea7b4_hasDirective(_188817_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1a3ea4eee_pushErr(_self_.ptr(), _188731_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_188753_d=nullptr;
		return;;
	};
	if (((((!(_188753_d.get()._field_Mutable)) && _1a31c8399_IsMethod(_188817_f.get()._field_Decl.ptr())) && (!(_188817_f.get()._field_Decl.get()._field_Statically))) && _188817_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _188731_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1a3ea5939_isUnsafe(_self_.ptr()))) && _188817_f.get()._field_Decl.get()._field_Unsafety)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _188731_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _191217_dynamicAnnotation = (((_188817_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_188817_f.get()._field_Generics.len() == 0LL)) && (_188817_f.get()._field_Params.len() > 0LL));;
	if (_191217_dynamicAnnotation) {
		_188817_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>>::alloc(_188817_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_188817_f.get()._field_Generics.len() != _188817_f.get()._field_Decl.get()._field_Generics.len())) {
		_1a3e41254_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_188817_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_188817_f.get()._field_Generics.len()),_188731_fc.get()._field_Token);
		_188753_d=nullptr;
		return;;
	};
	jule::Ptr<_1a3e3c1ea_Sema> _192117_old = _self_.get()._field_s;;
	if ((_188817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_188817_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_192117_old != _self_.get()._field_s)) {
			_192117_old.get()._field_errors=jule::append(_192117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_192117_old;
	});;
	if ((!(_191217_dynamicAnnotation))) {
		if ((!(_188817_f.get()._field_reloaded))) {
			jule::Bool _193621_ok = _1a3e48e82_reloadFnInsTypes(_self_.get()._field_s, _188817_f);;
			_188817_f.get()._field_reloaded=true;
			if ((!(_193621_ok))) {
				_188753_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a31ca874_FnIns> _194321_existInstance = _1a31c95ed_appendInstance(_188817_f.get()._field_Decl.ptr(), _188817_f);;
		if ((_194321_existInstance != nullptr)) {
			_188817_f=_194321_existInstance;
		};
	} else {
		_1a3e47876_buildFnNonGenericTypeKinds(_self_.get()._field_s, _188817_f);
	};
	_1a3e9495b_fnCallArgChecker _195117_fcac = _1a3e9495b_fnCallArgChecker{._field_e=_self_, ._field_args=_188731_fc.get()._field_Args, ._field_errorToken=_188731_fc.get()._field_Token, ._field_f=_188817_f, ._field_dynamicAnnotation=_191217_dynamicAnnotation, };;
	jule::Bool _195817_ok = false;;
	if ((_188817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_192117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_192117_old);
		_195817_ok=_1a3e96d26_check(&_195117_fcac);
		std::tie(_192117_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_192117_old);
	} else {
		_195817_ok=_1a3e96d26_check(&_195117_fcac);
	};
	if (_191217_dynamicAnnotation) {
		if ((!(_195817_ok))) {
			_188753_d=nullptr;
			return;;
		};
		if ((!(_1a3eb0e83_checkGenericFn(_self_, _188817_f,_188731_fc.get()._field_Token,_188753_d.get()._field_Model)))) {
			_188753_d=nullptr;
			return;;
		};
	};
	jule::Any _197817_callModel = _188753_d.get()._field_Model;;
	if (_1a31c8135_IsVoid(_188817_f.get()._field_Decl.ptr())) {
		_188753_d=_1a3eca585_buildVoidData();
	} else {
		_188753_d.get()._field_Kind=_188817_f.get()._field_Result;
		_188753_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1a31c0c76_FnCallExprModel> _198717_model = jule::new_ptr<_1a31c0c76_FnCallExprModel>(_1a31c0c76_FnCallExprModel{._field_Token=_188731_fc.get()._field_Token, ._field_Func=_188817_f, ._field_Expr=_197817_callModel, ._field_Args=_195117_fcac._field_argModels, });;
	_188753_d.get()._field_Model=static_cast<jule::Any>(_198717_model);
	_188753_d.get()._field_Mutable=true;
	if (_188817_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_1a31130b4_Unhandled(_188731_fc.ptr())) {
				_case_begin_1a6a9ce9b:;
				{
					_1a3ea4eee_pushErr(_self_.ptr(), _188731_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1a3ea531d_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1a3113328_Ignored(_188731_fc.ptr())) {
				_case_begin_1a6a9cd7a:;
				{
					goto _match_end_1a6a9c8e6;
				}
			}
			else {
				_case_begin_1a6a9c9c3:;
				{
					_1a3eb7a4a_processExceptionalHandler(_self_.ptr(), _188817_f,_188731_fc,_188753_d);
				}
			}
			_match_end_1a6a9c8e6:;
		};
	} else if ((!(_1a31130b4_Unhandled(_188731_fc.ptr())))) {
		_1a3ea4eee_pushErr(_self_.ptr(), _188731_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb8188_evalFnCall(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3112c51_FnCallExpr> _201334_fc) {
	jule::Ptr<_1a3ecdc09_TypeKind> _201417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_201417_prefix;
	});;
	{
		auto &_match_expr{ _201334_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31109eb_IdentExpr>>()) {
			_case_begin_1a6aa0795:;
			{
				if ((_201334_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1a408ed0e_builtinCallerError(_self_,_201334_fc);
				};
			}
		}
		_match_end_1a6aa0b5d:;
	};
	jule::Ptr<_1a3ea2e75_Data> _202717_d = _1a3ebecd8_evalExprKind(_self_, _201334_fc.get()._field_Expr.get()._field_Kind);;
	if ((_202717_d == nullptr)) {
		return nullptr;
	};
	if (_202717_d.get()._field_Decl) {
		_1a3eb6ede_callTypeFn(_self_, _201334_fc,_202717_d);
		return _202717_d;
	};
	if ((_1a3ed2009_Fn(_202717_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a3ea4eee_pushErr(_self_.ptr(), _201334_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a3eb7d7a_callFn(_self_, _201334_fc,_202717_d);
	return _202717_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb8540_evalEnumStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31dbbc6_Enum> _204637_enm, jule::Ptr<_1ba1dbeab_Token> _204649_ident) {
	jule::Ptr<_1a3ea2e75_Data> _204717_d = jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_204637_enm, 3)}), });;
	jule::Ptr<_1a31db1d1_EnumItem> _205317_item = _1a31dc787_FindItem(_204637_enm.ptr(), _204649_ident.get()._field_Kind);;
	if ((_205317_item == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _204649_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_204637_enm.get()._field_Ident),jule::Any(_204649_ident.get()._field_Kind)}));
	} else {
		_204717_d.get()._field_Constant=jule::new_ptr<_1a31618e8_Const>((*(_205317_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_204717_d.get()._field_Model=static_cast<jule::Any>(_204717_d.get()._field_Constant);
		_1a3ecab18_applyCastModelByEnum(_204717_d,_204637_enm);
	};
	return _204717_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb88e7_evalTypeEnumStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a31dd2c1_TypeEnum> _206541_enm, jule::Ptr<_1ba1dbeab_Token> _206557_ident) {
	jule::Ptr<_1a31dcc0a_TypeEnumItem> _206617_item = _1a31ddd0a_FindItem(_206541_enm.ptr(), _206557_ident.get()._field_Kind);;
	if ((_206617_item == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _206557_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206541_enm.get()._field_Ident),jule::Any(_206557_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_1a3ed1558_Enum(_206617_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6aa923d:;
			{
				return _1a3ea8596__evalEnum(&(*_self_), _1a3ed1558_Enum(_206617_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1a3ed17bc_TypeEnum(_206617_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6aa9a79:;
			{
				return _1a3ea8c5b__evalTypeEnum(&(*_self_), _1a3ed17bc_TypeEnum(_206617_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1a3ed226d_Struct(_206617_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6aa8c10:;
			{
				return _1a3ea9421__evalStruct(&(*_self_), _1a3ed226d_Struct(_206617_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1a6aa8b55:;
			{
				jule::Ptr<_1a3ea2e75_Data> _207921_d = jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=_206617_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_207921_d.get()._field_Model=static_cast<jule::Any>(_207921_d.get()._field_Kind);
				return _207921_d;
			}
		}
		_match_end_1a6aa7d74:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb8c9e_evalStructStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a312ad46_StructIns> _208839_s, jule::Ptr<_1ba1dbeab_Token> _208854_ident) {
	jule::Ptr<_1a3ea2e75_Data> _208917_d = jule::new_ptr<_1a3ea2e75_Data>();;
	;
	jule::Ptr<_1a31c7bc3_Fn> _209317_method = _1a310115c_FindMethod(_208839_s.ptr(), _208854_ident.get()._field_Kind,true);;
	if ((_209317_method != nullptr)) {
		if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _209317_method.get()._field_Public,_209317_method.get()._field_Token)))) {
			_1a3ea4eee_pushErr(&(*_self_), _208854_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_208854_ident.get()._field_Kind)}));
			_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a31ca874_FnIns> _210021_ins = _1a31c9323_instance(_209317_method);;
		_210021_ins.get()._field_Owner=_208839_s;
		_1a6958e23_pushReference(&(*_self_), _210021_ins);
		_208917_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c21ea_StructStaticIdentExprModel>(_1a31c21ea_StructStaticIdentExprModel{._field_Structure=_208839_s, ._field_Expr=_208917_d.get()._field_Model, ._field_Method=_210021_ins}));
		_208917_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_210021_ins, 1)});
		return _208917_d;
	};
	jule::Ptr<_1a3e59e4e_Var> _211417_sttc = _1a30ca169_FindStatic(_208839_s.ptr(), _208854_ident.get()._field_Kind);;
	if ((_211417_sttc != nullptr)) {
		return _1a3eab28b_evalVar(&(*_self_), _211417_sttc,_208854_ident);
	};
	_1a3ea4eee_pushErr(&(*_self_), _208854_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_208839_s.get()._field_Decl.get()._field_Ident),jule::Any(_208854_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb9200_evalTraitSubIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _212340_d, jule::Ptr<_1a31d9a81_Trait> _212354_trt, jule::Ptr<_1ba1dbeab_Token> _212371_ident) {
	jule::Ptr<_1a31c7bc3_Fn> _212417_f = _1a31da90b_FindMethod(_212354_trt.ptr(), _212371_ident.get()._field_Kind);;
	if ((_212417_f == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _212371_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212354_trt.get()._field_Ident),jule::Any(_212371_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a31c9323_instance(_212417_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c1ae0_TraitSubIdentExprModel>(_1a31c1ae0_TraitSubIdentExprModel{._field_Token=_212371_ident, ._field_Expr=_212340_d.get()._field_Model, ._field_Method=_212417_f, ._field_Trt=_212354_trt})), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb96ea_evalStructSubIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _214241_d, jule::Ptr<_1a312ad46_StructIns> _214255_s, jule::Ptr<_1a311228e_SubIdentExpr> _214274_si, jule::Bool _214293_ref) {
	jule::Ptr<_1a3102306_FieldIns> _214317_f = _1a3103b76_FindField(_214255_s.ptr(), _214274_si.get()._field_Ident.get()._field_Kind);;
	if ((_214317_f != nullptr)) {
		if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _214317_f.get()._field_Decl.get()._field_Public,_214317_f.get()._field_Decl.get()._field_Token)))) {
			_1a3ea4eee_pushErr(&(*_self_), _214274_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_214317_f.get()._field_Decl.get()._field_Ident)}));
			_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a31c200d_StructSubIdentExprModel> _215021_model = jule::new_ptr<_1a31c200d_StructSubIdentExprModel>(_1a31c200d_StructSubIdentExprModel{._field_Token=_214274_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*(_214241_d))), ._field_ExprKind=_214241_d.get()._field_Kind, ._field_Field=_214317_f, ._field_Owner=_214255_s});;
		_214241_d.get()._field_Model=static_cast<jule::Any>(_215021_model);
		_214241_d.get()._field_Kind=_214317_f.get()._field_Kind;
		_214241_d.get()._field_Lvalue=true;
		if ((_214317_f.get()._field_Decl.get()._field_Mutable && (!(_214241_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
					_case_begin_1a6abb56e:;
					{
						jule::Ptr<_1a3e2427b_scopeChecker> _216525_scope = _1a3e25656_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>());;
						_214241_d.get()._field_Mutable=((_216525_scope.get()._field_owner != nullptr) && (_216525_scope.get()._field_owner.get()._field_Owner == _214255_s));
					}
				}
				_match_end_1a6abb519:;
			};
		};
		return _214241_d;
	};
	;
	jule::Ptr<_1a31c7bc3_Fn> _217417_m = _1a310115c_FindMethod(_214255_s.ptr(), _214274_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_217417_m == nullptr)) {
		_1a3ea4eee_pushErr(&(*_self_), _214274_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214255_s.get()._field_Decl.get()._field_Ident),jule::Any(_214274_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _217417_m.get()._field_Public,_217417_m.get()._field_Token)))) {
		_1a3ea4eee_pushErr(&(*_self_), _214274_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_217417_m.get()._field_Ident)}));
		_1a3ea531d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1a31c6c27_IsRef(_217417_m.get()._field_Params[0LL].ptr()) && (!(_214293_ref)))) {
		_1a3ea4eee_pushErr(&(*_self_), _214274_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1a3ea9e05_checkDeprecated(&(*_self_), _217417_m.get()._field_Directives,_214274_si.get()._field_Ident);
	jule::Ptr<_1a31ca874_FnIns> _219017_ins = _1a31c9323_instance(_217417_m);;
	_219017_ins.get()._field_Owner=_214255_s;
	_1a6958e23_pushReference(&(*_self_), _219017_ins);
	jule::Ptr<_1a3ea2e75_Data> _219317_model = jule::new_ptr<_1a3ea2e75_Data>((*(_214241_d)));;
	_214241_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c200d_StructSubIdentExprModel>(_1a31c200d_StructSubIdentExprModel{._field_Token=_214274_si.get()._field_Ident, ._field_Expr=_219317_model, ._field_ExprKind=_214241_d.get()._field_Kind, ._field_Method=_219017_ins, ._field_Owner=_214255_s}));
	_214241_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_219017_ins, 1)});
	return _214241_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb9aa2_evalSliceSubIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _220540_d, jule::Ptr<_1ba1dbeab_Token> _220554_ident) {
	{
		auto &_match_expr{ _220554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a6ac5875:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>::make({jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e9bd_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_220540_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_220540_d.get()._field_Kind, ._field_Expr=_220540_d.get()._field_Model, ._field_Token=_220554_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1a6ac580e:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _220554_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_220540_d.get()._field_Kind.ptr())),jule::Any(_220554_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ac5798:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eb9e59_evalArraySubIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _224240_d, jule::Ptr<_1ba1dbeab_Token> _224254_ident) {
	{
		auto &_match_expr{ _224254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a6ac8dd9:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>::make({jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e9bd_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_224240_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_224240_d.get()._field_Kind, ._field_Expr=_224240_d.get()._field_Model, ._field_Token=_224254_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1a6ac8d73:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _224254_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_224240_d.get()._field_Kind.ptr())),jule::Any(_224254_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ac8c96:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eba311_evalMapSubIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _227938_d, jule::Ptr<_1ba1dbeab_Token> _227952_ident) {
	jule::Ptr<_1a3ed8e78_Map> _228017_mapKind = _1a3ed2746_Map(_227938_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _227952_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1a6accb02:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e9bd_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1a6accb68:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Result=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=_228017_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e9bd_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1a6accbce:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Result=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=_228017_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e9bd_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1a6acd817:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>::make({jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e9bd_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1a6acca36:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _227952_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a3ed92db_Str(_228017_mapKind.ptr())),jule::Any(_227952_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6acc827:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eba61e_evalIntTypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _236736_ident) {
	;
	{
		auto &_match_expr{ _236736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6ad4851:;
			{
				jule::Ptr<_1a31618e8_Const> _237121_c = static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a37d19a2_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_237121_c), ._field_Constant=_237121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6ad48b7:;
			{
				jule::Ptr<_1a31618e8_Const> _237821_c = static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a37c8b75_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_237821_c), ._field_Constant=_237821_c});
			}
		}
		else {
			_case_begin_1a6ad460e:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _236736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_236736_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ad47da:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eba92c_evalUintTypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _239037_ident) {
	;
	{
		auto &_match_expr{ _239037_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6ad83c1:;
			{
				jule::Ptr<_1a31618e8_Const> _239421_c = static__1a31b6aa2_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1a37d19a2_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_239421_c), ._field_Constant=_239421_c});
			}
		}
		else {
			_case_begin_1a6ad835a:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _239037_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_239037_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ad82e4:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebac3a_evalI8TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _240635_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _240635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6adb44b:;
			{
				jule::Ptr<_1a31618e8_Const> _241221_c = static__1a31b6970_NewI64(127LL);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_241221_c), ._field_Constant=_241221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6adb4b2:;
			{
				jule::Ptr<_1a31618e8_Const> _241921_c = static__1a31b6970_NewI64(-128LL);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_241921_c), ._field_Constant=_241921_c});
			}
		}
		else {
			_case_begin_1a6adb3d5:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _240635_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_240635_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ad923a:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb048_evalI16TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _243136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6ae0263:;
			{
				jule::Ptr<_1a31618e8_Const> _243721_c = static__1a31b6970_NewI64(32767LL);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_243721_c), ._field_Constant=_243721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6ae02c9:;
			{
				jule::Ptr<_1a31618e8_Const> _244421_c = static__1a31b6970_NewI64(-32768LL);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_244421_c), ._field_Constant=_244421_c});
			}
		}
		else {
			_case_begin_1a6ae01ec:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _243136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_243136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6adc35e:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb356_evalI32TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _245636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6ae407a:;
			{
				jule::Ptr<_1a31618e8_Const> _246221_c = static__1a31b6970_NewI64(2147483647LL);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246221_c), ._field_Constant=_246221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6ae40e1:;
			{
				jule::Ptr<_1a31618e8_Const> _246921_c = static__1a31b6970_NewI64(-2147483648LL);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246921_c), ._field_Constant=_246921_c});
			}
		}
		else {
			_case_begin_1a6ae4014:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _245636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_245636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ae1176:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb664_evalI64TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _248136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6ae7d92:;
			{
				jule::Ptr<_1a31618e8_Const> _248721_c = static__1a31b6970_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_248721_c), ._field_Constant=_248721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6ae7e08:;
			{
				jule::Ptr<_1a31618e8_Const> _249421_c = static__1a31b6970_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_249421_c), ._field_Constant=_249421_c});
			}
		}
		else {
			_case_begin_1a6ae7d2b:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _248136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_248136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6ae4e8d:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebb972_evalU8TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _250635_ident) {
	;
	;
	{
		auto &_match_expr{ _250635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6aebe95:;
			{
				jule::Ptr<_1a31618e8_Const> _251121_c = static__1a31b6aa2_NewU64(255LLU);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_251121_c), ._field_Constant=_251121_c});
			}
		}
		else {
			_case_begin_1a6aeb307:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _250635_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_250635_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6aeb5d2:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebbc80_evalU16TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _252336_ident) {
	;
	;
	{
		auto &_match_expr{ _252336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6aee948:;
			{
				jule::Ptr<_1a31618e8_Const> _252821_c = static__1a31b6aa2_NewU64(65535LLU);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252821_c), ._field_Constant=_252821_c});
			}
		}
		else {
			_case_begin_1a6aedcaa:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _252336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_252336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6aee085:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc08d_evalU32TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ _254036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6b023eb:;
			{
				jule::Ptr<_1a31618e8_Const> _254521_c = static__1a31b6aa2_NewU64(4294967295LLU);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254521_c), ._field_Constant=_254521_c});
			}
		}
		else {
			_case_begin_1a6b0175d:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _254036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_254036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6b01a38:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc39b_evalU64TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _255736_ident) {
	;
	;
	{
		auto &_match_expr{ _255736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6b04d9e:;
			{
				jule::Ptr<_1a31618e8_Const> _256221_c = static__1a31b6aa2_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256221_c), ._field_Constant=_256221_c});
			}
		}
		else {
			_case_begin_1a6b04211:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _255736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_255736_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6b044db:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc6a9_evalF32TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _257436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6b078b8:;
			{
				jule::Ptr<_1a31618e8_Const> _258121_c = static__1a31b7278_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258121_c), ._field_Constant=_258121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6b0792e:;
			{
				jule::Ptr<_1a31618e8_Const> _258821_c = static__1a31b7278_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258821_c), ._field_Constant=_258821_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a6b07995:;
			{
				jule::Ptr<_1a31618e8_Const> _259521_c = static__1a31b7278_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_259521_c), ._field_Constant=_259521_c});
			}
		}
		else {
			_case_begin_1a6b07852:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _257436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_257436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6b077db:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebc9b7_evalF64TypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1ba1dbeab_Token> _260736_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _260736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a6b0c99a:;
			{
				jule::Ptr<_1a31618e8_Const> _261421_c = static__1a31b7278_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_261421_c), ._field_Constant=_261421_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a6b0ca11:;
			{
				jule::Ptr<_1a31618e8_Const> _262121_c = static__1a31b7278_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262121_c), ._field_Constant=_262121_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a6b0ca77:;
			{
				jule::Ptr<_1a31618e8_Const> _262821_c = static__1a31b7278_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262821_c), ._field_Constant=_262821_c});
			}
		}
		else {
			_case_begin_1a6b0c934:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _260736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_260736_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6b0c8bd:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebcd6e_evalPrimStatic(_1a3ea49e3_Eval* _self_, jule::Str _264033_kind, jule::Ptr<_1ba1dbeab_Token> _264044_ident) {
	{
		auto &_match_expr{ _264033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a6b11ac0:;
			{
				return _1a3eba61e_evalIntTypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a6b11b36:;
			{
				return _1a3eba92c_evalUintTypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a6b12582:;
			{
				return _1a3ebac3a_evalI8TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a6b125e8:;
			{
				return _1a3ebb048_evalI16TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a6b1265e:;
			{
				return _1a3ebb356_evalI32TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a6b126c5:;
			{
				return _1a3ebb664_evalI64TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a6b1273b:;
			{
				return _1a3ebb972_evalU8TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a6b127d5:;
			{
				return _1a3ebbc80_evalU16TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a6b1284b:;
			{
				return _1a3ebc08d_evalU32TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a6b128b2:;
			{
				return _1a3ebc39b_evalU64TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a6b12928:;
			{
				return _1a3ebc6a9_evalF32TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a6b1298e:;
			{
				return _1a3ebc9b7_evalF64TypeStatic(&(*_self_), _264044_ident);
			}
		}
		else {
			_case_begin_1a6b110ec:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _264044_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_264033_kind),jule::Any(_264044_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6b1196b:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebd226_evalTypeStatic(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _267237_d, jule::Ptr<_1a311228e_SubIdentExpr> _267251_si) {
	{
		
		if ((_1a3ed0d1b_Prim(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b17224:;
			{
				return _1a3ebcd6e_evalPrimStatic(&(*_self_), _1a3ed3a44_Str(_1a3ed0d1b_Prim(_267237_d.get()._field_Kind.ptr()).ptr()),_267251_si.get()._field_Ident);
			}
		}
		else if ((_1a3ed1558_Enum(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b1728a:;
			{
				return _1a3eb8540_evalEnumStatic(&(*_self_), _1a3ed1558_Enum(_267237_d.get()._field_Kind.ptr()),_267251_si.get()._field_Ident);
			}
		}
		else if ((_1a3ed17bc_TypeEnum(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b17301:;
			{
				return _1a3eb88e7_evalTypeEnumStatic(&(*_self_), _1a3ed17bc_TypeEnum(_267237_d.get()._field_Kind.ptr()),_267251_si.get()._field_Ident);
			}
		}
		else if ((_1a3ed226d_Struct(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b1807c:;
			{
				return _1a3eb8c9e_evalStructStatic(&(*_self_), _1a3ed226d_Struct(_267237_d.get()._field_Kind.ptr()),_267251_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1a6b17158:;
			{
				_1a3ea4eee_pushErr(&(*_self_), _267251_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_267237_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6b1707b:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebd5cd_evalObjSubIdent(_1a3ea49e3_Eval* _self_, jule::Ptr<_1a3ea2e75_Data> _268838_d, jule::Ptr<_1a311228e_SubIdentExpr> _268852_si) {
	if (_1ba1de750_IsIgnoreIdent(_268852_si.get()._field_Ident.get()._field_Kind)) {
		_1a3ea4eee_pushErr(&(*_self_), _268852_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _269417_kind = _268838_d.get()._field_Kind;;
	{
		
		if ((_1a3ed12e4_Ptr(_268838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b1d439:;
			{
				jule::Ptr<_1a3eda4c9_Ptr> _269717_ptr = _1a3ed12e4_Ptr(_268838_d.get()._field_Kind.ptr());;
				if (_1a3edae9c_IsUnsafe(_269717_ptr.ptr())) {
					goto _match_end_1a6b1d2d5;
				};
				if (((!(_268852_si.get()._field_IsSelf)) && (!(_1a3ea5939_isUnsafe(&(*_self_)))))) {
					_1a3ea4eee_pushErr(&(*_self_), _268852_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_269417_kind=_1a3ed12e4_Ptr(_268838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1a3ed1080_Sptr(_268838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b1d4a0:;
			{
				_269417_kind=_1a3ed1080_Sptr(_268838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1a6b1d2d5:;
	};
	{
		
		if ((_1a3ed24d2_Trait(_268838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b21173:;
			{
				return _1a3eb9200_evalTraitSubIdent(&(*_self_), _268838_d,_1a3ed24d2_Trait(_268838_d.get()._field_Kind.ptr()),_268852_si.get()._field_Ident);
			}
		}
		else if ((_1a3ed226d_Struct(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1a6b211ea:;
			{
				jule::Ptr<_1a312ad46_StructIns> _271317_s = _1a3ed226d_Struct(_269417_kind.ptr());;
				if (_1a3ec9a29_isInstancedStruct(_271317_s)) {
					jule::Bool _271525_usedReferenceElem = (_1a3ed1080_Sptr(_268838_d.get()._field_Kind.ptr()) != nullptr);;
					return _1a3eb96ea_evalStructSubIdent(&(*_self_), _268838_d,_1a3ed226d_Struct(_269417_kind.ptr()),_268852_si,_271525_usedReferenceElem);
				};
			}
		}
		else if ((_1a3ed1c95_Slc(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1a6b21272:;
			{
				return _1a3eb9aa2_evalSliceSubIdent(&(*_self_), _268838_d,_268852_si.get()._field_Ident);
			}
		}
		else if ((_1a3ed1a31_Arr(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1a6b212e9:;
			{
				return _1a3eb9e59_evalArraySubIdent(&(*_self_), _268838_d,_268852_si.get()._field_Ident);
			}
		}
		else if ((_1a3ed2746_Map(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1a6b218e3:;
			{
				return _1a3eba311_evalMapSubIdent(&(*_self_), _268838_d,_268852_si.get()._field_Ident);
			}
		}
		_match_end_1a6b21085:;
	};
	_1a3ea4eee_pushErr(&(*_self_), _268852_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_268838_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebd8db_evalSubIdent(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a311228e_SubIdentExpr> _272936_si) {
	jule::Ptr<_1a3ecdc09_TypeKind> _273017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273017_prefix;
	});;
	jule::Ptr<_1a3ea2e75_Data> _273417_d = _1a3ebecd8_evalExprKind(_self_, _272936_si.get()._field_Expr.get()._field_Kind);;
	if ((_273417_d == nullptr)) {
		return nullptr;
	};
	if (_273417_d.get()._field_Decl) {
		return _1a3ebd226_evalTypeStatic(_self_.ptr(), _273417_d,_272936_si);
	};
	return _1a3ebd5cd_evalObjSubIdent(_self_.ptr(), _273417_d,_272936_si);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebdbe9_evalTuple(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a310e610_TupleExpr> _274633_tup) {
	jule::Ptr<_1a3ed8450_Tuple> _274717_tupT = jule::new_ptr<_1a3ed8450_Tuple>();;
	_274717_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>::alloc(0LL,_274633_tup.get()._field_Expr.len());
	jule::Ptr<_1a31c299d_TupleExprModel> _275017_model = jule::new_ptr<_1a31c299d_TupleExprModel>(_1a31c299d_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a3ea2e75_Data>>::alloc(0LL,_274633_tup.get()._field_Expr.len())});;
	jule::Bool _275417_ok = true;;
	{
		auto &expr = _274633_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1a6b2b5e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a310d983_Expr> _275521_expr = *it;
			{
				jule::Ptr<_1a3ea2e75_Data> _275621_d = _1a3ebecd8_evalExprKind(_self_, _275521_expr.get()._field_Kind);;
				if ((_275621_d == nullptr)) {
					_275417_ok=false;
					goto _iter_next_1a6b2b5e0;
				};
				_274717_tupT.get()._field_Types = jule::alloc_for_append(_274717_tupT.get()._field_Types,1);_274717_tupT.get()._field_Types.__push(_275621_d.get()._field_Kind);;
				_275017_model.get()._field_Datas = jule::alloc_for_append(_275017_model.get()._field_Datas,1);_275017_model.get()._field_Datas.__push(_275621_d);;
			}
			_iter_next_1a6b2b5e0:;
			++it;
			goto _iter_begin_1a6b2b5e0;
		}
		_iter_end_1a6b2b5e0:;
	};
	if ((!(_275417_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_274717_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_275017_model), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe0a1_evalMap(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3ed8e78_Map> _277531_m, jule::Ptr<_1a31143a1_BraceLit> _277544_lit) {
	jule::Ptr<_1a31c1716_MapExprModel> _277617_model = jule::new_ptr<_1a31c1716_MapExprModel>(_1a31c1716_MapExprModel{._field_KeyKind=_277531_m.get()._field_Key, ._field_ValKind=_277531_m.get()._field_Val, });;
	{
		auto &expr = _277544_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a6b2eb76:;
		if (it != expr.end()) {
			jule::Ptr<_1a310d983_Expr> _278121_expr = *it;
			{
				{
					auto &_match_expr{ _278121_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1a3114db8_KeyValPair>>()) {
						_case_begin_1a6b306e3:;
						{
							goto _match_end_1a6b304c3;
						}
					}
					else {
						_case_begin_1a6b3067c:;
						{
							_1a3ea4eee_pushErr(_self_.ptr(), _277544_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1a6b304c3:;
				};
				jule::Ptr<_1a3114db8_KeyValPair> _279121_pair = _278121_expr.get()._field_Kind.operator jule::Ptr<_1a3114db8_KeyValPair>();;
				jule::Ptr<_1a3ea2e75_Data> _279321_key = _1a3ebecd8_evalExprKind(_self_, _279121_pair.get()._field_Key.get()._field_Kind);;
				if ((_279321_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1a3ea2e75_Data> _279821_val = _1a3ebecd8_evalExprKind(_self_, _279121_pair.get()._field_Val.get()._field_Kind);;
				if ((_279821_val == nullptr)) {
					return nullptr;
				};
				_1a3e46c93_checkAssignType(_self_.get()._field_s, false,_277531_m.get()._field_Key,_279321_key,_279121_pair.get()._field_Colon);
				_1a3e46c93_checkAssignType(_self_.get()._field_s, false,_277531_m.get()._field_Val,_279821_val,_279121_pair.get()._field_Colon);
				_277617_model.get()._field_Entries = jule::alloc_for_append(_277617_model.get()._field_Entries,1);_277617_model.get()._field_Entries.__push(jule::new_ptr<_1a31c1529_KeyValPairExprModel>(_1a31c1529_KeyValPairExprModel{._field_Key=_279321_key.get()._field_Model, ._field_Val=_279821_val.get()._field_Model}));;
			}
			_iter_next_1a6b2eb76:;
			++it;
			goto _iter_begin_1a6b2eb76;
		}
		_iter_end_1a6b2eb76:;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_277531_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_277617_model), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe3ae_evalBraceLit(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31143a1_BraceLit> _281936_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1a6b35396:;
			{
				_1a3ea4eee_pushErr(_self_.ptr(), _281936_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a3ed2746_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a6b3540c:;
			{
				return _1a3ebe0a1_evalMap(_self_, _1a3ed2746_Map(_self_.get()._field_prefix.ptr()),_281936_lit);
			}
		}
		else if ((_1a3ed226d_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a6b35473:;
			{
				return _1a3eb6340_evalStructLitExplicit(_self_, _1a3ed226d_Struct(_self_.get()._field_prefix.ptr()),_281936_lit.get()._field_Exprs,_281936_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1a6b352db:;
			{
				_1a3ea4eee_pushErr(_self_.ptr(), _281936_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6b35220:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe6bc_evalAnonFn(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a31210d3_FnDecl> _283434_decl) {
	_1a3edc234_typeChecker _283517_tc = _1a3edc234_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1a31ca874_FnIns> _284017_ins = _1a3ee88d3_buildFn(&_283517_tc, _283434_decl);;
	if ((_284017_ins == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
			_case_begin_1a6b3a555:;
			{
				jule::Ptr<_1a3e2427b_scopeChecker> _284621_sc = _self_.get()._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>();;
				jule::Ptr<_1a3e2427b_scopeChecker> _284721_scc = _1a3e2c471_newChildChecker(_284621_sc);;
				_284721_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e23da2_scopeLabel>>>(nullptr);
				_284721_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e2408e_scopeGoto>>>(nullptr);
				_284721_scc.get()._field_owner=nullptr;
				_284721_scc.get()._field_childIndex=0LL;
				_284721_scc.get()._field_it=0LLU;
				_284721_scc.get()._field_cse=0LLU;
				_284721_scc.get()._field_owner=_284017_ins;
				_1a3e55499_checkFnInsSc(_self_.get()._field_s.ptr(), _284017_ins,_284721_scc);
			}
		}
		else {
			_case_begin_1a6b39c80:;
			{
				_1a3e55a3d_checkFnIns(_self_.get()._field_s, _284017_ins);
			}
		}
		_match_end_1a6b3a137:;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_284017_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c133c_AnonFnExprModel>(_1a31c133c_AnonFnExprModel{._field_Func=_284017_ins, ._field_Global=_1a3ea5b9d_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebe9ca_evalBinop(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a3112712_BinopExpr> _286933_op) {
	_1a3ec2615_binaryEval _287017_bs = static__1a3ec2bcb_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a3ed36d1_Prim> _287317_prim = _1a3ed0d1b_Prim(_self_.get()._field_prefix.ptr());;
		if (((_287317_prim == nullptr) || (!(_1a3e20e04_IsNum(_1a3ed3a44_Str(_287317_prim.ptr())))))) {
			jule::Ptr<_1a3ecdc09_TypeKind> _287525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_287525_prefix;
			});;
			return _1a3ec7eab_eval(&_287017_bs, _286933_op);
		};
	};
	return _1a3ec7eab_eval(&_287017_bs, _286933_op);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ebecd8_evalExprKind(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Any _288436_kind) {
	{
		auto &_match_expr{ _288436_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a310dc6e_RangeExpr>>()) {
			_case_begin_1a6b426e4:;
			{
				jule::Ptr<_1a310dc6e_RangeExpr> _288721_e = _288436_kind.operator jule::Ptr<_1a310dc6e_RangeExpr>();;
				return _1a3ebecd8_evalExprKind(_self_, _288721_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310e9b7_LitExpr>>()) {
			_case_begin_1a6b42914:;
			{
				return _1a3ea784d_evalLit(_self_.ptr(), _288436_kind.operator jule::Ptr<_1a310e9b7_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31109eb_IdentExpr>>()) {
			_case_begin_1a6b4297a:;
			{
				return _1a3eabd08_evalIdent(_self_.ptr(), _288436_kind.operator jule::Ptr<_1a31109eb_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3111205_UnaryExpr>>()) {
			_case_begin_1a6b429e1:;
			{
				return _1a3eac116_evalUnary(_self_, _288436_kind.operator jule::Ptr<_1a3111205_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31115ac_VariadicExpr>>()) {
			_case_begin_1a6b42a57:;
			{
				return _1a3eac424_evalVariadic(_self_, _288436_kind.operator jule::Ptr<_1a31115ac_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31101c1_UnsafeExpr>>()) {
			_case_begin_1a6b42abd:;
			{
				return _1a3eac732_evalUnsafe(_self_, _288436_kind.operator jule::Ptr<_1a31101c1_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a311533b_SliceExpr>>()) {
			_case_begin_1a6b42b34:;
			{
				return _1a3ead29e_evalSliceExpr(_self_, _288436_kind.operator jule::Ptr<_1a311533b_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3115bcc_IndexingExpr>>()) {
			_case_begin_1a6b42bbc:;
			{
				return _1a3eb15e3_evalIndexing(_self_, _288436_kind.operator jule::Ptr<_1a3115bcc_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31162d7_SlicingExpr>>()) {
			_case_begin_1a6b42c33:;
			{
				return _1a3eb27ae_evalSlicing(_self_, _288436_kind.operator jule::Ptr<_1a31162d7_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3111964_CastExpr>>()) {
			_case_begin_1a6b42c99:;
			{
				return _1a3eb5ad1_evalCast(_self_, _288436_kind.operator jule::Ptr<_1a3111964_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3111d1b_NsSelectionExpr>>()) {
			_case_begin_1a6b42d10:;
			{
				return _1a3eb5dde_evalNsSelection(_self_.ptr(), _288436_kind.operator jule::Ptr<_1a3111d1b_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3113e2d_StructLit>>()) {
			_case_begin_1a6b42d76:;
			{
				return _1a3eb664d_evalStructLit(_self_, _288436_kind.operator jule::Ptr<_1a3113e2d_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3109462_TypeDecl>>()) {
			_case_begin_1a6b42ded:;
			{
				return _1a3eb6bc0_evalType(_self_.ptr(), _288436_kind.operator jule::Ptr<_1a3109462_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3112c51_FnCallExpr>>()) {
			_case_begin_1a6b42e75:;
			{
				return _1a3eb8188_evalFnCall(_self_, _288436_kind.operator jule::Ptr<_1a3112c51_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a311228e_SubIdentExpr>>()) {
			_case_begin_1a6b42eec:;
			{
				return _1a3ebd8db_evalSubIdent(_self_, _288436_kind.operator jule::Ptr<_1a311228e_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310e610_TupleExpr>>()) {
			_case_begin_1a6b43074:;
			{
				return _1a3ebdbe9_evalTuple(_self_, _288436_kind.operator jule::Ptr<_1a310e610_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31143a1_BraceLit>>()) {
			_case_begin_1a6b430eb:;
			{
				return _1a3ebe3ae_evalBraceLit(_self_, _288436_kind.operator jule::Ptr<_1a31143a1_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31210d3_FnDecl>>()) {
			_case_begin_1a6b43173:;
			{
				return _1a3ebe6bc_evalAnonFn(_self_, _288436_kind.operator jule::Ptr<_1a31210d3_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3112712_BinopExpr>>()) {
			_case_begin_1a6b431ea:;
			{
				return _1a3ebe9ca_evalBinop(_self_, _288436_kind.operator jule::Ptr<_1a3112712_BinopExpr>());
			}
		}
		else {
			_case_begin_1a6b424a2:;
			{
				return nullptr;
			}
		}
		_match_end_1a6b4244c:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec00e6_eval(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a310d983_Expr> _293228_expr) {
	jule::Ptr<_1a3ea2e75_Data> _293317_d = _1a3ebecd8_evalExprKind(_self_, _293228_expr.get()._field_Kind);;
	if (((_293317_d == nullptr) || (_293317_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1a3ed2009_Fn(_293317_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b4d4ad:;
			{
				jule::Ptr<_1a31ca874_FnIns> _294021_f = _1a3ed2009_Fn(_293317_d.get()._field_Kind.ptr());;
				if (_1a31cbc0a_IsBuiltin(_294021_f.ptr())) {
					goto _match_end_1a6b4d359;
				};
				if ((_294021_f.get()._field_Generics.len() != _294021_f.get()._field_Decl.get()._field_Generics.len())) {
					_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _293228_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_294021_f.get()._field_Decl.get()._field_Statically)) && _1a31c8399_IsMethod(_294021_f.get()._field_Decl.ptr()))) {
					_1a3e3edac_pushErr(_self_.get()._field_s.ptr(), _293228_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1a6b4d359:;
	};
	return _293317_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec0404_evalExpr(jule::Ptr<_1a3ea49e3_Eval> _self_, jule::Ptr<_1a310d983_Expr> _295832_expr) {
	jule::Ptr<_1a3ea2e75_Data> _295917_d = _1a3ec00e6_eval(_self_, _295832_expr);;
	{
		
		if ((_295917_d == nullptr)) {
			_case_begin_1a6b524c3:;
			{
				return nullptr;
			}
		}
		else if (_295917_d.get()._field_Decl) {
			_case_begin_1a6b5254a:;
			{
				_1a3ea4eee_pushErr(_self_.ptr(), _295832_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1a6b5243a:;
			{
				return _295917_d;
			}
		}
		_match_end_1a6b523c4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ea49e3_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a3ec0877_unaryEval static__1a3ec0d2d_new(jule::Ptr<_1a3ea49e3_Eval> _297923_e) {
	return _1a3ec0877_unaryEval{._field_e=_297923_e, };
}



inline void _1a3ec1009_minus(_1a3ec0877_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a6b59035:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b594b9:;
			{
				if ((!(_1a3e20e04_IsNum(_1a3ece105_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a3ed226d_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b59530:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a6b58ba0:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a6b587d7:;
	};
	if (_1a3ea3838_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a31ba8b9_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b5c9ea:;
				{
					_1a31b99c8_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1a31b8521_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a31b9e18_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b5ca72:;
				{
					_1a31b8ed3_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a31b7a70_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a31ba17c_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b5cae9:;
				{
					_1a31b8ed3_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a31b8785_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a6b5c8c9:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a3ec11d5_plus(_1a3ec0877_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a6b62659:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b62add:;
			{
				if ((!(_1a3e20e04_IsNum(_1a3ece105_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a3ed226d_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b62b54:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a6b622b3:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a6b621d6:;
	};
	if (_1a3ea3838_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a31ba8b9_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b6611e:;
				{
					_1a31b99c8_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1a31b8521_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a31b9e18_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b66196:;
				{
					_1a31b8ed3_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a31b7a70_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a31ba17c_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b6621d:;
				{
					_1a31b8ed3_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a31b8785_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a6b65eed:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a3ec13b1_caret(_1a3ec0877_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a6b6ac7d:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b6b212:;
			{
				if ((!(_1a3e20b90_IsInt(_1a3ece105_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a3ed226d_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b6b278:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a6b6a8d7:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a6b6a80a:;
	};
	if (_1a3ea3838_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a31b9e18_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b6e732:;
				{
					_1a31b8ed3_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1a31b7a70_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a31ba17c_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b6e7a9:;
				{
					_1a31b9258_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1a31b7cd4_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a6b6e622:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a3ec158c_excl(_1a3ec0877_unaryEval* _self_) {
	jule::Ptr<_1a3ed36d1_Prim> _309813_t = _1a3ed0d1b_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_309813_t == nullptr) || (!(_1a3ed66a1_IsBool(_309813_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1a3ea3838_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a31ba3e1_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a6b7469e:;
				{
					_1a31b94cd_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1a31b8048_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1a6b7458e:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a3ec1768_star(_1a3ec0877_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_1a3ed12e4_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b7795a:;
			{
				if ((!(_1a3ea5939_isUnsafe((*_self_)._field_e.ptr())))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a3eda4c9_Ptr> _313021_t = _1a3ed12e4_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1a3edae9c_IsUnsafe(_313021_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_313021_t.get()._field_Elem;
			}
		}
		else if ((_1a3ed1080_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6b77dde:;
			{
				(*_self_)._field_d.get()._field_Kind=_1a3ed1080_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1a6b775b4:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a6b7755e:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1a3ec1944_amper(_1a3ec0877_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c06b0_StructLitExprModel>>()) {
			_case_begin_1a6b7da4e:;
			{
				jule::Ptr<_1a31c06b0_StructLitExprModel> _315021_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1a31c06b0_StructLitExprModel>();;
				_1a3ec8c48_makeStructLitAlloc((*_self_)._field_d,_315021_lit);
			}
		}
		else {
			_case_begin_1a6b7c344:;
			{
				{
					
					if (_1a3eeaa5b_canGetPtr((*_self_)._field_d)) {
						_case_begin_1a6b7ceb0:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3eda4c9_Ptr>(_1a3eda4c9_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1a6b7c8d8:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1a6b7c80b:;
				};
			}
		}
		_match_end_1a6b7c2de:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1a3ec1b20_typeDecl(_1a3ec0877_unaryEval* _self_) {
	_1a3edc234_typeChecker _317417_tc = _1a3edc234_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6b83bb9:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3ee7272_buildPtrFromType(&_317417_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6b813e2:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3ee6b56_buildSptrFromType(&_317417_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1a6b82569:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a6b82514:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1a3ec1ceb_evalData(_1a3ec0877_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a6b86518:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _319721_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a3ebecd8_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_319721_prefix;
			}
		}
		else {
			_case_begin_1a6b8611c:;
			{
				(*_self_)._field_d=_1a3ebecd8_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1a6b86062:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec20c6_eval(_1a3ec0877_unaryEval* _self_, jule::Ptr<_1a3111205_UnaryExpr> _320627_u) {
	(*_self_)._field_u=_320627_u;
	_1a3ec1ceb_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1a3ec1b20_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _321713_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a6b8abc1:;
			{
				_1a3ec1009_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a6b8ad69:;
			{
				_1a3ec11d5_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a6b8a83b:;
			{
				_1a3ec13b1_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a6b8a8a2:;
			{
				_1a3ec158c_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6b8a918:;
			{
				_1a3ec1768_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6b8a990:;
			{
				_1a3ec1944_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1a6b8a7c5:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1a6b8a770:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a6b8b034:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1a3ece105_Str(_321713_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1a3ea3838_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1a6b8b364:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1a6b8cee2:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ec0877_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a3ec2615_binaryEval static__1a3ec2bcb_newPlain(jule::Ptr<_1a3ea49e3_Eval> _325528_e) {
	return _1a3ec2615_binaryEval{._field_e=_325528_e, };
}



inline _1a3ec2615_binaryEval static__1a3ec301c_new(jule::Ptr<_1a3ea49e3_Eval> _326123_e, jule::Ptr<_1ba1dbeab_Token> _326137_op) {
	return _1a3ec2615_binaryEval{._field_e=_326123_e, ._field_op=_326137_op};
}



inline jule::Bool _1a3ec3281_checkTypeCompatibility(_1a3ec2615_binaryEval* _self_) {
	return _1a3e471e4_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _1a3ec3528_checkStructCommonOperatorCompatibility(_1a3ec2615_binaryEval* _self_) {
	jule::Ptr<_1a31ca874_FnIns> _327517_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a6b92e4d:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a6b92eb4:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a6b940b4:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a6b9412a:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a6b94191:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6b94207:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6b9426d:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6b942d4:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a6b9434a:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a6b943c2:;
			{
				_327517_overload=_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a6b92d1b:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1a6b92cb6:;
	};
	if ((_327517_overload == nullptr)) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1a31c99a5_ParamIns> _330717_p = _327517_overload.get()._field_Params[1LL];;
	return _1a3e46c93_checkAssignType((*_self_)._field_e.get()._field_s, _330717_p.get()._field_Decl.get()._field_Reference,_330717_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec37c0_evalNil(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ed036a_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1a3ece105_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6b9e113:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6b9e09c:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1a6b9dbb2:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec3a34_evalEnum(_1a3ec2615_binaryEval* _self_) {
	jule::Ptr<_1a31dbbc6_Enum> _333217_enm = _1a3ed1558_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6ba1489:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _333621_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1a3ed1558_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_333621_rkind=_1a3ed1558_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1a3e471e4_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _333217_enm.get()._field_Kind.get()._field_Kind,_333621_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a6ba1434:;
	};
	if (((_1a3ed1558_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_333217_enm != _1a3ed1558_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_333217_enm.get()._field_Ident),jule::Any(_1a3ece105_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6ba5dc8:;
			{
				if ((!(_1a3e20e04_IsNum(_1a3ece105_Str(_333217_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_333217_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a6ba5e3e:;
			{
				if (((_1a3ed0d1b_Prim(_333217_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a3e20b90_IsInt(_1a3ed3a44_Str(_1a3ed0d1b_Prim(_333217_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_333217_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a6ba5d62:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_333217_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1a6ba5ca7:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec3c98_evalTypeEnum(_1a3ec2615_binaryEval* _self_) {
	jule::Ptr<_1a31dd2c1_TypeEnum> _338317_enm = _1a3ed17bc_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bac451:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6baba8d:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a31dd601_Str(_338317_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bac297:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec400c_evalSptr(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bae62e:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bae354:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bad9a2:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4271_evalPtr(_1a3ec2615_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6bb16b9:;
			{
				if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a6bb1730:;
			{
				if ((_1a3ed12e4_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1a3edae9c_IsUnsafe(_1a3ed12e4_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_1a3ec9d8c_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a6bb0e7c:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bb0a4d:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec44d5_evalArr(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bb8193:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bb812c:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bb326a:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4749_evalSlc(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bba591:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bba2b6:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bb9914:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec49ad_evalFn(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bbc9d3:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bbc708:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bbbd56:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4c22_evalStruct(_1a3ec2615_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a6bbe397:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6bbe40d:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a6bbea6d:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6bbead4:;
			{
				if ((_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bbeb4a:;
			{
				if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a6bbde02:;
	};
	if ((!(_1a3ec3528_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec4e86_evalTrait(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bc9a56:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bc99e0:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bc97ae:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec51ea_evalAny(_1a3ec2615_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6bcba7a:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bcb33d:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1a6bcae0e:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec545e_evalBool(_1a3ec2615_binaryEval* _self_) {
	if ((!(_1a3ec3281_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a6bcda9e:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a6bcd7c4:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a3ece105_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a6bcce22:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec56c3_evalStr(_1a3ec2615_binaryEval* _self_) {
	jule::Str _362517_rk = _1a3ece105_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_362517_rk != jule::Str("str", 3))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_362517_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a6bd207a:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6bd20e1:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a6bd1e15:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1a6bd0e8b:;
	};
}



inline void _1a3ec589e_setTypeToGreater(_1a3ec2615_binaryEval* _self_) {
	if (_1a3ea3838_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1a3ea3838_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1a3ea3838_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	};
	jule::Ptr<_1a3ed36d1_Prim> _366813_lp = _1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1a3ed36d1_Prim> _366913_rp = _1a3ed0d1b_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_1a3e204db_IsGreater(_366913_rp.get()._field_Kind,_366813_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _1a3ec5ae1_checkModData(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3ea2e75_Data>& _367536_d) {
	if ((!(_1a3ea3838_IsConst(_367536_d.ptr())))) {
		if (((_1a3ed0d1b_Prim(_367536_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a3e20b90_IsInt(_1a3ed0d1b_Prim(_367536_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a3e739e5_sigAssignable(jule::Str("i64", 3),_367536_d)) {
			_case_begin_1a6bdb194:;
			{
				_1a31b8ed3_SetI64(_367536_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_367536_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1a3e8a7a9_unsigAssignable(jule::Str("u64", 3),_367536_d)) {
			_case_begin_1a6bdad97:;
			{
				_1a31b9258_SetU64(_367536_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_367536_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1a6bdad31:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6bd94c2:;
	};
}



inline void _1a3ec5cbc_mod(_1a3ec2615_binaryEval* _self_) {
	_1a3ec5ae1_checkModData(&(*_self_), (*_self_)._field_l);
	_1a3ec5ae1_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a3ec6174_numbersAreCompatibile(_1a3ec2615_binaryEval* _self_, jule::Str& _369737_lk, jule::Str& _369747_rk) {
	if ((!(_1a3e20e04_IsNum(_369747_rk)))) {
		return false;
	};
	if ((_1a3ea3838_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;
	};
	if ((_369737_lk == jule::Str("f32", 3))) {
		if ((_1a3ea3838_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_369747_rk == jule::Str("f32", 3));
	};
	if ((_369737_lk == jule::Str("f64", 3))) {
		if ((_1a3ea3838_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;
		};
		return (_369747_rk == jule::Str("f64", 3));
	};
	if ((_1a3ea3838_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;
	};
	return (_369737_lk == _369747_rk);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec63d8_evalFloat(_1a3ec2615_binaryEval* _self_) {
	jule::Str _372313_lk = _1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _372413_rk = _1a3ed0d1b_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1a3ec6174_numbersAreCompatibile(&(*_self_), _372313_lk,_372413_rk)))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372313_lk),jule::Any(_372413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a6be4d07:;
			{
				if (((!(_1a3ea3838_IsConst((*_self_)._field_l.ptr()))) || (!(_1a3e8a8db_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372313_lk),jule::Any(_372413_rk)}));
					return nullptr;
				};
				if (((!(_1a3ea3838_IsConst((*_self_)._field_r.ptr()))) || (!(_1a3e8a8db_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372313_lk),jule::Any(_372413_rk)}));
					return nullptr;
				};
				_1a31b8ed3_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1a31b9258_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1a3ec9672_isOkForShifting((*_self_)._field_r)))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1a6be4be7:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6be5368:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a627b3c2:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a6bea758:;
			{
				_1a3ec589e_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6bea7be:;
			{
				if ((!(_1a3e20b90_IsInt(_372413_rk)))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372313_lk),jule::Any(_372413_rk)}));
					return nullptr;
				};
				_1a3ec5cbc_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1a6beaa88:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6beb2b4:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec664c_evalInt(_1a3ec2615_binaryEval* _self_) {
	jule::Str _378713_lk = _1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _378813_rk = _1a3ed0d1b_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a6bec2e8:;
			{
				if (((!(_1a3e20b90_IsInt(_378713_lk))) || (!(_1a3e20b90_IsInt(_378813_rk))))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_378713_lk),jule::Any(_378813_rk)}));
					return nullptr;
				};
				if ((!(_1a3ec9672_isOkForShifting((*_self_)._field_r)))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1a6beee11:;
	};
	if ((!(_1a3ec6174_numbersAreCompatibile(&(*_self_), _378713_lk,_378813_rk)))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_378713_lk),jule::Any(_378813_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6c037b6:;
			{
				return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a6c03761:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a6c04157:;
			{
				_1a3ec589e_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6c041bd:;
			{
				_1a3ec5cbc_mod(&(*_self_));
				_1a3ec589e_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a6c04487:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1a6c04bb3:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec68b1_evalPrim(_1a3ec2615_binaryEval* _self_) {
	jule::Ptr<_1a3ed36d1_Prim> _384613_prim = _1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1a3ed66a1_IsBool(_384613_prim.ptr())) {
			_case_begin_1a6c07bc7:;
			{
				return _1a3ec545e_evalBool(&(*_self_));
			}
		}
		else if (_1a3ed6915_IsStr(_384613_prim.ptr())) {
			_case_begin_1a6c07c4e:;
			{
				return _1a3ec56c3_evalStr(&(*_self_));
			}
		}
		_match_end_1a6c07b1c:;
	};
	if ((_1a3ed0d1b_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ed3a44_Str(_384613_prim.ptr())),jule::Any(_1a3ece105_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1a3e20cc2_IsFloat(_384613_prim.get()._field_Kind)) {
			_case_begin_1a6c0a889:;
			{
				return _1a3ec63d8_evalFloat(&(*_self_));
			}
		}
		else if (_1a3e20b90_IsInt(_384613_prim.get()._field_Kind)) {
			_case_begin_1a6c0a1a2:;
			{
				return _1a3ec664c_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1a6c0818e:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c08128:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec6b25_evalOp(_1a3ec2615_binaryEval* _self_) {
	{
		
		if (_1a3eced92_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a6c0ab75:;
			{
				_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1a3ed0d1b_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1a3ed6b79_IsAny(_1a3ed0d1b_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6c0bea6:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a6c0bc0e;
			}
		}
		else if (((_1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1a3ed6b79_IsAny(_1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6c0bc0e:;
			{
				return _1a3ec51ea_evalAny(&(*_self_));
			}
		}
		else if ((_1a3ed17bc_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0bc75:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a6c0bcdb;
			}
		}
		else if ((_1a3ed17bc_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0bcdb:;
			{
				return _1a3ec3c98_evalTypeEnum(&(*_self_));
			}
		}
		else if (_1a3eceb2d_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a6c0bd52:;
			{
				return _1a3ec37c0_evalNil(&(*_self_));
			}
		}
		else if ((_1a3ed1558_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0bdb8:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a6c0c083;
			}
		}
		else if ((_1a3ed1558_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c083:;
			{
				return _1a3ec3a34_evalEnum(&(*_self_));
			}
		}
		else if ((_1a3ed1080_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c0e9:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a6c0c160;
			}
		}
		else if ((_1a3ed1080_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c160:;
			{
				return _1a3ec400c_evalSptr(&(*_self_));
			}
		}
		else if ((_1a3ed12e4_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c1c6:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a6c0c24d;
			}
		}
		else if ((_1a3ed12e4_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c24d:;
			{
				return _1a3ec4271_evalPtr(&(*_self_));
			}
		}
		else if ((_1a3ed1a31_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c2c5:;
			{
				return _1a3ec44d5_evalArr(&(*_self_));
			}
		}
		else if ((_1a3ed1c95_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c34c:;
			{
				return _1a3ec4749_evalSlc(&(*_self_));
			}
		}
		else if ((_1a3ed2009_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c3c4:;
			{
				return _1a3ec49ad_evalFn(&(*_self_));
			}
		}
		else if ((_1a3ed24d2_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c44b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a6c0c4c3;
			}
		}
		else if ((_1a3ed24d2_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c4c3:;
			{
				return _1a3ec4e86_evalTrait(&(*_self_));
			}
		}
		else if ((_1a3ed226d_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c54a:;
			{
				return _1a3ec4c22_evalStruct(&(*_self_));
			}
		}
		else if ((_1a3ed0d1b_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6c0c5c2:;
			{
				return _1a3ec68b1_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1a6c0a988:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c0b648:;
	};
}



inline void _1a3ec6d9a_evalConst(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3ea2e75_Data>& _392133_d) {
	{
		
		if ((_392133_d == nullptr)) {
			_case_begin_1a6c1caaa:;
			{
				return;;
			}
		}
		else if ((!(_1a3ea3838_IsConst((*_self_)._field_l.ptr()))) || (!(_1a3ea3838_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1a6c1cb21:;
			{
				_392133_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1a6c1c35c:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a6c1e2d7:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bb865_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a6c1e34d:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool((!(_1a31bb865_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a6c1e3b4:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bb557_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a6c1e42a:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bb249_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a6c1e491:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bc28e_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a6c1e507:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bbb73_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6c1e56d:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bc59c_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a6c1e5d4:;
			{
				_392133_d.get()._field_Constant=static__1a31b6c39_NewBool(_1a31bbe81_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a6c1e64a:;
			{
				_1a31bc8aa_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a6c1e6c2:;
			{
				_1a31bcbb8_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a6c1e749:;
			{
				_1a31bcec6_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a6c1e7c1:;
			{
				jule::Bool _395817_ok = _1a31bd2d4_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_395817_ok)) && (_1a31b8c5d_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1a3ed36d1_Prim> _396321_prim = _1a3ed0d1b_Prim(_392133_d.get()._field_Kind.ptr());;
				{
					
					if (_1a3e2092b_IsSigInt(_396321_prim.get()._field_Kind)) {
						_case_begin_1a6c2c229:;
						{
							_1a31b8ed3_SetI64(_392133_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_392133_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1a3e20a5d_IsUnsigInt(_396321_prim.get()._field_Kind)) {
						_case_begin_1a6c2c2a1:;
						{
							_1a31b9258_SetU64(_392133_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_392133_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1a6c2c16e:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a6c1e848:;
			{
				jule::Bool _397117_ok = _1a31bd5e2_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_397117_ok)) && (_1a31b8c5d_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a6c1e8c0:;
			{
				_1a31bdc0d_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a6c1e947:;
			{
				_1a31bd900_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a6c1e9be:;
			{
				_1a31be01b_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a6c1ea46:;
			{
				_1a31be329_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a6c1eabd:;
			{
				_1a31be637_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_392133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1a6c1da9a:;
	};
	_392133_d.get()._field_Model=static_cast<jule::Any>(_392133_d.get()._field_Constant);
	_1a3ecab18_applyCastModelByEnum(_392133_d,_1a3ed1558_Enum(_392133_d.get()._field_Kind.ptr()));
}



inline void _1a3ec7120_checkData(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3ea2e75_Data>& _399633_d) {
	jule::Ptr<_1a31ca874_FnIns> _399713_f = _1a3ed2009_Fn(_399633_d.get()._field_Kind.ptr());;
	if ((((_399713_f != nullptr) && (_399713_f.get()._field_Decl != nullptr)) && _1a31c8399_IsMethod(_399713_f.get()._field_Decl.ptr()))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1a3ec72eb_checkDatas(_1a3ec2615_binaryEval* _self_) {
	_1a3ec7120_checkData(&(*_self_), (*_self_)._field_l);
	_1a3ec7120_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1a3ec7571_setModel(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3ea2e75_Data>& _400832_d) {
	if (_1a3ea3838_IsConst(_400832_d.ptr())) {
		if ((_1a3ea3838_IsConst((*_self_)._field_l.ptr()) && _1a3ea3838_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a3ea2e75_Data> _401618_l = (*_self_)._field_l;;
	jule::Ptr<_1a3ea2e75_Data> _401625_r = (*_self_)._field_r;;
	std::tie(_401618_l,_401625_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1a3ea3b46_GoodOperand(_401618_l.ptr(), _401625_r)))) {
		std::tie(_401618_l,_401625_r) = std::make_tuple(_401625_r,_401618_l);
	};
	_400832_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c00e9_BinopExprModel>(_1a31c00e9_BinopExprModel{._field_Left=jule::new_ptr<_1a31bee0c_OperandExprModel>(_1a31bee0c_OperandExprModel{._field_Kind=_401618_l.get()._field_Kind, ._field_Model=_401618_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1a31bee0c_OperandExprModel>(_1a31bee0c_OperandExprModel{._field_Kind=_401625_r.get()._field_Kind, ._field_Model=_401625_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _1a3ec77e6_postEval(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3ea2e75_Data>& _403432_d) {
	_403432_d.get()._field_Lvalue=false;
	_1a3ec7571_setModel(&(*_self_), _403432_d);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec7b9d_solveExplicit(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3ea2e75_Data>& _403937_l, jule::Ptr<_1a3ea2e75_Data>& _403952_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403937_l,_403952_r);
	_1a3ec72eb_checkDatas(&(*_self_));
	jule::Ptr<_1a3ea2e75_Data> _404417_d = _1a3ec6b25_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403937_l,_403952_r);
	_1a3ec6d9a_evalConst(&(*_self_), _404417_d);
	if ((_404417_d != nullptr)) {
		_404417_d.get()._field_Mutable=true;
		_1a3ec77e6_postEval(&(*_self_), _404417_d);
	};
	return _404417_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3ec7eab_eval(_1a3ec2615_binaryEval* _self_, jule::Ptr<_1a3112712_BinopExpr>& _405928_op) {
	if ((_405928_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1a3ea4eee_pushErr((*_self_)._field_e.ptr(), _405928_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1a3ea531d_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _406617_l = _1a3ebecd8_evalExprKind((*_self_)._field_e, _405928_op.get()._field_Left.get()._field_Kind);;
	if (((_406617_l == nullptr) || (_406617_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _407117_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_406617_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_407117_prefix;
	});;
	jule::Ptr<_1a3ea2e75_Data> _407417_r = _1a3ebecd8_evalExprKind((*_self_)._field_e, _405928_op.get()._field_Right.get()._field_Kind);;
	if (((_407417_r == nullptr) || (_407417_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405928_op.get()._field_Op;
	jule::Ptr<_1a3ea2e75_Data> _408117_d = _1a3ec7b9d_solveExplicit(&(*_self_), _406617_l,_407417_r);;
	if ((((_408117_d != nullptr) && _406617_l.get()._field_IsRune) && _407417_r.get()._field_IsRune)) {
		_408117_d.get()._field_IsRune=true;
	};
	return _408117_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ec2615_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ecc4cc_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ecd016_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3ece105_Str(_1a3ecdc09_TypeKind* _self_) {
	if (_1a3eceb2d_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1a3ece8b9_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1a3ecd7ca_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1a3ecd379_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _1a3ece413_Equals(jule::Ptr<_1a3ecdc09_TypeKind> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _9022_other) {
	if (_1a3eceb2d_IsNil(_self_.ptr())) {
		return _1a3eceb2d_IsNil(_9022_other.ptr());
	};
	if (_1a3ece8b9_CppLinked(_self_.ptr())) {
		return (_1a3ece8b9_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _1a3ecd7ca_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1a3ecd687_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _1a3ece8b9_CppLinked(_1a3ecdc09_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _1a3eceb2d_IsNil(_1a3ecdc09_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _1a3eced92_Void(_1a3ecdc09_TypeKind* _self_) {
	jule::Ptr<_1a3ed36d1_Prim> _11113_prim = _1a3ed0d1b_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _1a3ed0106_Mutable(_1a3ecdc09_TypeKind* _self_) {
	{
		_1a3ecdc09_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1a3ed226d_Struct(_11821__self) != nullptr)) {
			return _1a3ed226d_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_1a3ed24d2_Trait(_11821__self) != nullptr)) {
			return _1a3ed24d2_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_1a3ed0d1b_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_1a3ed36d1_Prim> _12721_p = _1a3ed0d1b_Prim(_11821__self);;
			return _1a3ed6b79_IsAny(_12721_p.ptr());
		};
		if ((_1a3ed1a31_Arr(_11821__self) != nullptr)) {
			return _1a3ed0106_Mutable(_1a3ed1a31_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_1a3ed1c95_Slc(_11821__self) != nullptr) || (_1a3ed12e4_Ptr(_11821__self) != nullptr)) || (_1a3ed1080_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _1a3ed036a_NilCompatible(_1a3ecdc09_TypeKind* _self_) {
	{
		_1a3ecdc09_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_1a3ed36d1_Prim> _14417_prim = _1a3ed0d1b_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _1a3ed6b79_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_1a3eceb2d_IsNil(_14221__self) || (_1a3ed2009_Fn(_14221__self) != nullptr)) || (_1a3ed1080_Sptr(_14221__self) != nullptr)) || (_1a3ed12e4_Ptr(_14221__self) != nullptr)) || (_1a3ed24d2_Trait(_14221__self) != nullptr)) || (_1a3ed1c95_Slc(_14221__self) != nullptr)) || (_1a3ed2746_Map(_14221__self) != nullptr)) || (_1a3ed17bc_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _1a3ed05ce_PerformsRC(_1a3ecdc09_TypeKind* _self_) {
	{
		_1a3ecdc09_TypeKind* _16321__self = (&((*_self_)));;
		return (((_1a3ed1080_Sptr(_16321__self) != nullptr) || (_1a3ed1c95_Slc(_16321__self) != nullptr)) || (_1a3ed24d2_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _1a3ed0843_SupportsCloning(_1a3ecdc09_TypeKind* _self_) {
	{
		_1a3ecdc09_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_1a3ed0d1b_Prim(_17121__self) != nullptr)) {
				_case_begin_1a6c6c29c:;
				{
					return (!(_1a3ed6b79_IsAny(_1a3ed0d1b_Prim(_17121__self).ptr())));
				}
			}
			else if ((_1a3ed1558_Enum(_17121__self) != nullptr)) {
				_case_begin_1a6c6c313:;
				{
					return true;
				}
			}
			else if ((_1a3ed2009_Fn(_17121__self) != nullptr)) {
				_case_begin_1a6c6c610:;
				{
					return true;
				}
			}
			else if ((_1a3ed12e4_Ptr(_17121__self) != nullptr)) {
				_case_begin_1a6c6c676:;
				{
					return true;
				}
			}
			else if ((_1a3ed1c95_Slc(_17121__self) != nullptr)) {
				_case_begin_1a6c6c6dc:;
				{
					return _1a3ed0843_SupportsCloning(_1a3ed1c95_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1a3ed2746_Map(_17121__self) != nullptr)) {
				_case_begin_1a6c6c753:;
				{
					jule::Ptr<_1a3ed8e78_Map> _18421_m = _1a3ed2746_Map(_17121__self);;
					return (_1a3ed0843_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _1a3ed0843_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_1a3ed1a31_Arr(_17121__self) != nullptr)) {
				_case_begin_1a6c6c7b9:;
				{
					return _1a3ed0843_SupportsCloning(_1a3ed1a31_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1a3ed1080_Sptr(_17121__self) != nullptr)) {
				_case_begin_1a6c6c830:;
				{
					return _1a3ed0843_SupportsCloning(_1a3ed1080_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1a3ed226d_Struct(_17121__self) != nullptr)) {
				_case_begin_1a6c6c8a7:;
				{
					jule::Ptr<_1a312ad46_StructIns> _19125_s = _1a3ed226d_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _1a30da9a4_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1a6c6c17b:;
				{
					return false;
				}
			}
			_match_end_1a6c6c115:;
		};
	};
}



inline jule::Bool _1a3ed0aa7_Variadicable(_1a3ecdc09_TypeKind* _self_) {
	{
		_1a3ecdc09_TypeKind* _20421__self = (&((*_self_)));;
		return (_1a3ed1c95_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_1a3ed36d1_Prim> _1a3ed0d1b_Prim(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ed36d1_Prim>>()) {
			_case_begin_1a6c755b3:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3ed36d1_Prim>();
			}
		}
		else {
			_case_begin_1a6c74e31:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c74dcb:;
	};
}



inline jule::Ptr<_1a3ed6e65_Sptr> _1a3ed1080_Sptr(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ed6e65_Sptr>>()) {
			_case_begin_1a6c762c8:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3ed6e65_Sptr>();
			}
		}
		else {
			_case_begin_1a6c75d00:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c75a03:;
	};
}



inline jule::Ptr<_1a3eda4c9_Ptr> _1a3ed12e4_Ptr(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3eda4c9_Ptr>>()) {
			_case_begin_1a6c77098:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3eda4c9_Ptr>();
			}
		}
		else {
			_case_begin_1a6c76ac0:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c767c3:;
	};
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3ed1558_Enum(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31dbbc6_Enum>>()) {
			_case_begin_1a6c77d68:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a31dbbc6_Enum>();
			}
		}
		else {
			_case_begin_1a6c77890:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c77593:;
	};
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3ed17bc_TypeEnum(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31dd2c1_TypeEnum>>()) {
			_case_begin_1a6c78b38:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a31dd2c1_TypeEnum>();
			}
		}
		else {
			_case_begin_1a6c78660:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c78363:;
	};
}



inline jule::Ptr<_1a3ed9a6c_Arr> _1a3ed1a31_Arr(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ed9a6c_Arr>>()) {
			_case_begin_1a6c79908:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3ed9a6c_Arr>();
			}
		}
		else {
			_case_begin_1a6c79430:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c79133:;
	};
}



inline jule::Ptr<_1a3ed78c2_Slc> _1a3ed1c95_Slc(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ed78c2_Slc>>()) {
			_case_begin_1a6c7a6c8:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3ed78c2_Slc>();
			}
		}
		else {
			_case_begin_1a6c7a200:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c79e03:;
	};
}



inline jule::Ptr<_1a31ca874_FnIns> _1a3ed2009_Fn(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31ca874_FnIns>>()) {
			_case_begin_1a6c7b498:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a31ca874_FnIns>();
			}
		}
		else {
			_case_begin_1a6c7aec0:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c7abc3:;
	};
}



inline jule::Ptr<_1a312ad46_StructIns> _1a3ed226d_Struct(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a312ad46_StructIns>>()) {
			_case_begin_1a6c7c268:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a312ad46_StructIns>();
			}
		}
		else {
			_case_begin_1a6c7bc90:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c7b993:;
	};
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3ed24d2_Trait(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a31d9a81_Trait>>()) {
			_case_begin_1a6c7d038:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a31d9a81_Trait>();
			}
		}
		else {
			_case_begin_1a6c7ca60:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c7c763:;
	};
}



inline jule::Ptr<_1a3ed8e78_Map> _1a3ed2746_Map(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ed8e78_Map>>()) {
			_case_begin_1a6c7dd08:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3ed8e78_Map>();
			}
		}
		else {
			_case_begin_1a6c7d830:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c7d533:;
	};
}



inline jule::Ptr<_1a3ed8450_Tuple> _1a3ed29aa_Tup(_1a3ecdc09_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ed8450_Tuple>>()) {
			_case_begin_1a6c7eac8:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a3ed8450_Tuple>();
			}
		}
		else {
			_case_begin_1a6c7e600:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c7e303:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ecdc09_TypeKind _Src) {
	_Stream << _1a3ece105_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a3ed3219_checked(_1a3ed2d62_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _1a3ed33e5_removeKind(_1a3ed2d62_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed2d62_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3ed3a44_Str(_1a3ed36d1_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _1a3ed3d52_Equals(jule::Ptr<_1a3ed36d1_Prim> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _35722_other) {
	jule::Ptr<_1a3ed36d1_Prim> _35813_prim = _1a3ed0d1b_Prim(_35722_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _1a3ed42c5_IsConstraint(_1a3ed36d1_Prim* _self_) {
	return ((((!(_1a3ed6915_IsStr(&(*_self_)))) && (!(_1a3ed6b79_IsAny(&(*_self_))))) && (!(_1a3ed66a1_IsBool(&(*_self_))))) && (!(_1a3e20e04_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _1a3ed4539_IsI8(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _1a3ed479d_IsI16(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _1a3ed4a12_IsI32(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _1a3ed4c76_IsI64(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _1a3ed4eda_IsU8(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _1a3ed524e_IsU16(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _1a3ed54b3_IsU32(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _1a3ed5727_IsU64(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _1a3ed598b_IsF32(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _1a3ed5c00_IsF64(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _1a3ed5e64_IsInt(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _1a3ed61c8_IsUint(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _1a3ed643c_IsUintptr(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a3ed66a1_IsBool(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _1a3ed6915_IsStr(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _1a3ed6b79_IsAny(_1a3ed36d1_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed36d1_Prim _Src) {
	_Stream << _1a3ed3a44_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3ed72c8_Str(_1a3ed6e65_Sptr* _self_) {
	return (jule::Str("&", 1) + _1a3ece105_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1a3ed75d6_Equals(jule::Ptr<_1a3ed6e65_Sptr> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _43422_other) {
	jule::Ptr<_1a3ed6e65_Sptr> _43513_sptr = _1a3ed1080_Sptr(_43422_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _1a3ece413_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed6e65_Sptr _Src) {
	_Stream << _1a3ed72c8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3ed7dcd_Str(_1a3ed78c2_Slc* _self_) {
	return (jule::Str("[]", 2) + _1a3ece105_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1a3ed81db_Equals(jule::Ptr<_1a3ed78c2_Slc> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _45322_other) {
	jule::Ptr<_1a3ed78c2_Slc> _45413_slc = _1a3ed1c95_Slc(_45322_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _1a3ece413_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed78c2_Slc _Src) {
	_Stream << _1a3ed7dcd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3ed87b3_Str(_1a3ed8450_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_1a3ece105_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a6c8e3e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecdc09_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_1a3ece105_Str(_47216_t.ptr());
			}
			_iter_next_1a6c8e3e0:;
			++it;
			goto _iter_begin_1a6c8e3e0;
		}
		_iter_end_1a6c8e3e0:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _1a3ed8ac1_Equals(jule::Ptr<_1a3ed8450_Tuple> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _48122_other) {
	jule::Ptr<_1a3ed8450_Tuple> _48213_tup = _1a3ed29aa_Tup(_48122_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_1a3ece413_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_1a6c92921:;
	}
	_iter_end_1a6c92921:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed8450_Tuple _Src) {
	_Stream << _1a3ed87b3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3ed92db_Str(_1a3ed8e78_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_1a3ece105_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_1a3ece105_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _1a3ed95e9_Equals(jule::Ptr<_1a3ed8e78_Map> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _51822_other) {
	jule::Ptr<_1a3ed8e78_Map> _51913_m = _1a3ed2746_Map(_51822_other.ptr());;
	if ((_51913_m == nullptr)) {
		return false;
	};
	return (_1a3ece413_Equals(_self_.get()._field_Key, _51913_m.get()._field_Key) && _1a3ece413_Equals(_self_.get()._field_Val, _51913_m.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed8e78_Map _Src) {
	_Stream << _1a3ed92db_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3ed9dd0_Str(_1a3ed9a6c_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_1a3e1e1aa_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_1a3ece105_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _1a3eda1dd_Equals(jule::Ptr<_1a3ed9a6c_Arr> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _54522_other) {
	jule::Ptr<_1a3ed9a6c_Arr> _54613_arr = _1a3ed1a31_Arr(_54522_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _1a3ece413_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ed9a6c_Arr _Src) {
	_Stream << _1a3ed9dd0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3eda83c_Str(_1a3eda4c9_Ptr* _self_) {
	if (_1a3edae9c_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1a3ece105_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1a3edab4a_Equals(jule::Ptr<_1a3eda4c9_Ptr> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _56922_other) {
	jule::Ptr<_1a3eda4c9_Ptr> _57013_ptr = _1a3ed12e4_Ptr(_56922_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _1a3ece413_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _1a3edae9c_IsUnsafe(_1a3eda4c9_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a3eda4c9_Ptr _Src) {
	_Stream << _1a3eda83c_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3edb420_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a3ee279a_pushErr(_1a3edc234_typeChecker* _self_, jule::Ptr<_1ba1dbeab_Token> _65226_token, jule::Str _65241_fmt, jule::Slice<jule::Any> _65254_args) {
	_1a3e3edac_pushErr((*_self_)._field_s.ptr(), _65226_token,_65241_fmt,jule::Any(_65254_args));
}



inline void _1a3ee2976_allowBuiltin(_1a3edc234_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1a3ee2b52_disallowBuiltin(_1a3edc234_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1a3ed36d1_Prim> _1a3ee2e60_buildPrim(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _66429_decl) {
	if ((!(_1a3eec057_isPrim(_66429_decl.get()._field_Ident)))) {
		_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66429_decl.get()._field_Generics.len() > 0LL)) {
		_1a3ee279a_pushErr(&(*_self_), _66429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66429_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _1a3eeba18_buildPrimType(_66429_decl.get()._field_Ident);
}



inline void _1a6ca2ca5_pushReference(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a312ad46_StructIns>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1a6a2047e_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_1a31ce449_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}

inline void _1a6ca601c_pushReference(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a31d9a81_Trait>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1a6ca7c00_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_1a31ce449_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}



inline void _1a3ee345a_pushReferenceByKind(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _68843_k) {
	{
		
		if ((_1a3ed226d_Struct(_68843_k.ptr()) != nullptr)) {
			_case_begin_1a6ca18b9:;
			{
				jule::Ptr<_1a312ad46_StructIns> _69121_t = _1a3ed226d_Struct(_68843_k.ptr());;
				_1a6ca2ca5_pushReference(&(*_self_), _69121_t);
			}
		}
		else if ((_1a3ed24d2_Trait(_68843_k.ptr()) != nullptr)) {
			_case_begin_1a6ca1941:;
			{
				jule::Ptr<_1a31d9a81_Trait> _69421_t = _1a3ed24d2_Trait(_68843_k.ptr());;
				_1a6ca601c_pushReference(&(*_self_), _69421_t);
			}
		}
		_match_end_1a6ca1798:;
	};
}



inline void _1a3ee3823_pushCycleError(_1a3edc234_typeChecker* _self_, jule::Any _69929_def1, jule::Any _69940_def2, jule::Str& _69956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70128_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
				_case_begin_1a6cab1ba:;
				{
					return _70128_def.operator jule::Ptr<_1a3ecd016_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
				_case_begin_1a6cab231:;
				{
					return _70128_def.operator jule::Ptr<_1a30e9b8e_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1a6cab044:;
				{
					return jule::Str();
				}
			}
			_match_end_1a6caae56:;
		};
	});;
	jule::Str _71113_def1Ident = _70113_getIdent(_69929_def1);;
	jule::Str _71213_def2Ident = _70113_getIdent(_69940_def2);;
	jule::Str _71313_refersTo = _1b9db28eb_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71113_def1Ident),jule::Any(_71213_def2Ident)}));;
	(_69956_message).buffer.insert(0, (((_1b9d1351c_Repeat(jule::Str(" ", 1),4LL) + _71313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a3ee3bca_checkCrossCycle(_1a3edc234_typeChecker* _self_, jule::Any _71730_decl, jule::Str& _71746_message) {
	{
		auto &_match_expr{ _71730_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
			_case_begin_1a6cb3975:;
			{
				jule::Ptr<_1a3ecd016_TypeAlias> _72017_ta = _71730_decl.operator jule::Ptr<_1a3ecd016_TypeAlias>();;
				{
					auto &expr = _72017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1a6cb4745:;
					if (it != expr.end()) {
						jule::Any &_72120_d = *it;
						{
							{
								
								if ((_72120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1a6cb5218:;
									{
										_1a3ee3823_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								else if ((!(_1a3ee3bca_checkCrossCycle(&(*_self_), jule::Any(_72120_d),_71746_message)))) {
									_case_begin_1a6cb5290:;
									{
										_1a3ee3823_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								_match_end_1a6cb50e7:;
							};
						}
						_iter_next_1a6cb4745:;
						++it;
						goto _iter_begin_1a6cb4745;
					}
					_iter_end_1a6cb4745:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6cb39db:;
			{
				jule::Ptr<_1a30e9b8e_Struct> _73217_s = _71730_decl.operator jule::Ptr<_1a30e9b8e_Struct>();;
				{
					auto &expr = _73217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1a6cb6e40:;
					if (it != expr.end()) {
						jule::Ptr<_1a30e9b8e_Struct> &_73320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73320_d)) {
									_case_begin_1a6cb7979:;
									{
										_1a3ee3823_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								else if ((!(_1a3ee3bca_checkCrossCycle(&(*_self_), jule::Any(_73320_d),_71746_message)))) {
									_case_begin_1a6cb7a01:;
									{
										_1a3ee3823_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								_match_end_1a6cb7858:;
							};
						}
						_iter_next_1a6cb6e40:;
						++it;
						goto _iter_begin_1a6cb6e40;
					}
					_iter_end_1a6cb6e40:;
				};
			}
		}
		_match_end_1a6ca998d:;
	};
	return true;
}



inline jule::Bool _1a3ee4082_checkIllegalCycles(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _75138_ident, jule::Any _75165_decl) {
	jule::Bool _75178_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75178_ok = true;
		return _75178_ok;
	};
	{
		auto &_match_expr{ _75165_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6cb9717:;
			{
				if (((*_self_)._field_notPlain || _75165_decl.operator jule::Ptr<_1a30e9b8e_Struct>().get()._field_CppLinked)) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
			_case_begin_1a6cb952a:;
			{
				if (_75165_decl.operator jule::Ptr<_1a3ecd016_TypeAlias>().get()._field_CppLinked) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		_match_end_1a6cb9c01:;
	};
	if ((_75165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1a3ee279a_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75178_ok = false;
		return _75178_ok;
	};
	jule::Str _77417_message = jule::Str();;
	if ((!(_1a3ee3bca_checkCrossCycle(&(*_self_), jule::Any(_75165_decl),_77417_message)))) {
		jule::Str _77721_errMsg = _77417_message;;
		_77417_message=jule::Str();
		_1a3ee3823_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75165_decl),_77417_message);
		_77721_errMsg+=_77417_message;
		_1a3ee279a_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77721_errMsg)}));
		_75178_ok = false;
		return _75178_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ecd016_TypeAlias>>()) {
			_case_begin_1a6cbe2bb:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75165_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6cbe332:;
			{
				{
					auto &_match_expr{ _75165_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
						_case_begin_1a6cbeb07:;
						{
							jule::Ptr<_1a30e9b8e_Struct> _79325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a30e9b8e_Struct>();;
							_79325_s.get()._field_Depends = jule::alloc_for_append(_79325_s.get()._field_Depends,1);_79325_s.get()._field_Depends.__push(_75165_decl.operator jule::Ptr<_1a30e9b8e_Struct>());;
						}
					}
					_match_end_1a6cbea08:;
				};
			}
		}
		_match_end_1a6cbc64e:;
	};
	_75178_ok = true;
	return _75178_ok;
}



inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee4439_fromTypeAlias(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _80133_decl, jule::Ptr<_1a3ecd016_TypeAlias>& _80160_ta) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _80160_ta.get()._field_Public,_80160_ta.get()._field_Token)))) {
		_1a3ee279a_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80160_ta.get()._field_Used=true;
	if ((_80133_decl.get()._field_Generics.len() > 0LL)) {
		_1a3ee279a_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1a6cc4898:;
			if (it != expr.end()) {
				jule::Ptr<_1a3ecd016_TypeAlias> _81820_bg = *it;
				{
					if (((_81820_bg == _80160_ta) || ((_80160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1a3ece413_Equals(_80160_ta.get()._field_Kind.get()._field_Kind, _81820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1a6cc4898;
					};
				}
				_iter_next_1a6cc4898:;
				++it;
				goto _iter_begin_1a6cc4898;
			}
			_iter_end_1a6cc4898:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1a6cc6878:;
			if (it != expr.end()) {
				jule::Ptr<_1a3ecd016_TypeAlias> _82920_bg = *it;
				{
					if ((_82920_bg == _80160_ta)) {
						_1a3ee279a_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1a6cc72d5:;
						if (it != expr.end()) {
							jule::Ptr<_1a3ecd016_TypeAlias> _83424_dg = *it;
							{
								if ((_82920_bg == _83424_dg)) {
									_1a3ee279a_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1a6cc72d5:;
							++it;
							goto _iter_begin_1a6cc72d5;
						}
						_iter_end_1a6cc72d5:;
					};
				}
				_iter_next_1a6cc6878:;
				++it;
				goto _iter_begin_1a6cc6878;
			}
			_iter_end_1a6cc6878:;
		};
	};
	jule::Bool _84317_ok = _1a3ee4082_checkIllegalCycles(&(*_self_), _80133_decl,jule::Any(_80160_ta));;
	if ((!(_84317_ok))) {
		return nullptr;
	};
	_84317_ok=_1a3e49d95_checkTypeAliasDeclKind((*_self_)._field_s, _80160_ta,(*_self_)._field_lookup);
	if ((!(_84317_ok))) {
		return nullptr;
	};
	if ((_80160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80160_ta);;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _86017_tk = jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Generic=_80160_ta.get()._field_Generic, ._field_Kind=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1a3ee345a_pushReferenceByKind(&(*_self_), _86017_tk);
	if (_80160_ta.get()._field_CppLinked) {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Ident;
	} else {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1a3ecd7ca_Kind>(_86017_tk, 5);
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3ee47e1_fromEnum(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _87328_decl, jule::Ptr<_1a31dbbc6_Enum>& _87355_e) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _87355_e.get()._field_Public,_87355_e.get()._field_Token)))) {
		_1a3ee279a_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87328_decl.get()._field_Generics.len() > 0LL)) {
		_1a3ee279a_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87355_e;
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3ee4b98_fromTypeEnum(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _88532_decl, jule::Ptr<_1a31dd2c1_TypeEnum>& _88559_e) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _88559_e.get()._field_Public,_88559_e.get()._field_Token)))) {
		_1a3ee279a_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88532_decl.get()._field_Generics.len() > 0LL)) {
		_1a3ee279a_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88559_e;
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3ee5050_fromTrait(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _89729_decl, jule::Ptr<_1a31d9a81_Trait>& _89756_t) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _89756_t.get()._field_Public,_89756_t.get()._field_Token)))) {
		_1a3ee279a_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89729_decl.get()._field_Generics.len() > 0LL)) {
		_1a3ee279a_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1a6ca601c_pushReference(&(*_self_), _89756_t);
	return _89756_t;
}



inline jule::Bool _1a3ee5407_checkStructIns(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a312ad46_StructIns>& _91038_ins, jule::Ptr<_1ba1dbeab_Token>& _91060_errorToken) {
	jule::Bool _91082_ok = jule::Bool();
	if (_91038_ins.get()._field_Checked) {
		_91082_ok = true;
		return _91082_ok;
	};
	_91038_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91038_ins.get()._field_Decl))) {
		_91082_ok = true;
		return _91082_ok;
	};
	if ((!(_1a3e54025_precheckStructIns((*_self_)._field_s, _91038_ins,_91060_errorToken)))) {
		_91082_ok = false;
		return _91082_ok;
	};
	if ((_91038_ins.get()._field_Generics.len() > 0LL)) {
		_1a3e54993_checkStructInsOperators((*_self_)._field_s, _91038_ins);
		_1a3e5429a_checkStructIns((*_self_)._field_s, _91038_ins);
	};
	_91082_ok = true;
	return _91082_ok;
}



inline void _1a3ee569e_appendUsedStructReference(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a30e9b8e_Struct>& _93149_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a30e9b8e_Struct>>()) {
			_case_begin_1a6cd9627:;
			{
				jule::Ptr<_1a30e9b8e_Struct> _93721_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a30e9b8e_Struct>();;
				if ((!(_1a30de997_IsUses(_93721_refS.ptr(), _93149_s)))) {
					_93721_refS.get()._field_Uses = jule::alloc_for_append(_93721_refS.get()._field_Uses,1);_93721_refS.get()._field_Uses.__push(_93149_s);;
				};
			}
		}
		_match_end_1a6cd8d52:;
	};
}



inline jule::Ptr<_1a312ad46_StructIns> _1a3ee5a67_buildStructInstance(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _94443_decl, jule::Ptr<_1a30e9b8e_Struct>& _94470_s) {
	jule::Ptr<_1a3edb420_referencer> _94617_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>> _94817_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1a3e2427b_scopeChecker>>()) {
				_case_begin_1a6cdc51a:;
				{
					jule::Ptr<_1a3e2427b_scopeChecker> _95525_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a3e2427b_scopeChecker>();;
					jule::Ptr<_1a3e2427b_scopeChecker> _95625_hard = _1a3e25788_getHardRoot(_95525_sc);;
					if (((_95625_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95625_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94470_s))) {
						goto _match_end_1a6cdb4b4;
					};
					jule::I64 _96021_n = (_95625_hard.get()._field_owner.get()._field_Generics.len() + _95625_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95625_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96021_n);
				}
			}
			_match_end_1a6cdb4b4:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_1a3eee697_Lookup> _97017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_1a312ad46_StructIns> _97417_ins = _1a30d1d52_instance(_94470_s);;
	_97417_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1a3ecc4cc_InsGeneric>>::alloc(0LL,_94443_decl.get()._field_Generics.len());
	{
		auto &expr = _94443_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a6ce1c39:;
		if (it != expr.end()) {
			jule::Ptr<_1a3109462_TypeDecl> _97621_g = *it;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _97721_kind = _1a3ee8eee_build(&(*_self_), _97621_g.get()._field_Kind);;
				if ((_97721_kind == nullptr)) {
					return nullptr;
				};
				_97417_ins.get()._field_Generics = jule::alloc_for_append(_97417_ins.get()._field_Generics,1);_97417_ins.get()._field_Generics.__push(jule::new_ptr<_1a3ecc4cc_InsGeneric>(_1a3ecc4cc_InsGeneric{._field_Kind=_97721_kind, }));;
			}
			_iter_next_1a6ce1c39:;
			++it;
			goto _iter_begin_1a6ce1c39;
		}
		_iter_end_1a6ce1c39:;
	};
	(*_self_)._field_lookup=_97017_lookup;
	(*_self_)._field_bannedGenerics=_94817_bannedGenerics;
	(*_self_)._field_referencer=_94617_referencer;
	return _97417_ins;
}



inline jule::Ptr<_1a312ad46_StructIns> _1a3ee5e1e_fromStruct(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _99234_decl, jule::Ptr<_1a30e9b8e_Struct>& _99261_s) {
	if ((!(_1a3e40583_isAccessibleDefine((*_self_)._field_s.ptr(), _99261_s.get()._field_Public,_99261_s.get()._field_Token)))) {
		_1a3ee279a_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99234_decl.get()._field_Generics.len() > 0LL)) {
			_1a3ee279a_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1a312ad46_StructIns>(_1a312ad46_StructIns{._field_Decl=_99261_s, });
	};
	jule::Bool _101017_ok = ((*_self_)._field_notPlain || _1a3ee4082_checkIllegalCycles(&(*_self_), _99234_decl,jule::Any(_99261_s)));;
	if ((!(_101017_ok))) {
		return nullptr;
	};
	_1a3ee569e_appendUsedStructReference(&(*_self_), _99261_s);
	jule::Ptr<_1a312ad46_StructIns> _101617_ins = _1a3ee5a67_buildStructInstance(&(*_self_), _99234_decl,_99261_s);;
	if ((_101617_ins == nullptr)) {
		return nullptr;
	};
	_101017_ok=_1a3e41254_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_101617_ins.get()._field_Generics.len()),_99234_decl.get()._field_Token);
	if ((!(_101017_ok))) {
		return nullptr;
	};
	jule::Ptr<_1a312ad46_StructIns> _102617_existInstance = _1a30d60ba_appendInstance(_99261_s.ptr(), _101617_ins);;
	if ((_102617_existInstance != nullptr)) {
		if ((!(_1a3e48547_checkConstraintsStruct((*_self_)._field_s, _101617_ins,_99234_decl.get()._field_Token,_102617_existInstance)))) {
			return nullptr;
		};
		_1a6ca2ca5_pushReference(&(*_self_), _102617_existInstance);
		return _102617_existInstance;
	};
	if ((!(_1a3ee5407_checkStructIns(&(*_self_), _101617_ins,_99234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1a6ca2ca5_pushReference(&(*_self_), _101617_ins);
	return _101617_ins;
}



inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee622c_getDef(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl>& _105030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1a6cec3e8:;
		if (it != expr.end()) {
			jule::Ptr<_1a3116a46_GenericDecl> _105116_g = *it;
			{
				if ((_105116_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					return jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(_105116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1a6cec3e8:;
			++it;
			goto _iter_begin_1a6cec3e8;
		}
		_iter_end_1a6cec3e8:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1a6cecd55:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecd016_TypeAlias> _105721_g = *it;
			{
				if ((_105721_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					if ((_105030_decl.get()._field_Generics.len() > 0LL)) {
						_1a3ee279a_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_1a312ad46_StructIns> _106325_st = _1a3ed226d_Struct(_105721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106325_st != nullptr)) {
						jule::Bool _106525_ok = _1a3ee4082_checkIllegalCycles(&(*_self_), _105030_decl,jule::Any(_106325_st.get()._field_Decl));;
						if ((!(_106525_ok))) {
							return nullptr;
						};
					};
					return _105721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1a6cecd55:;
			++it;
			goto _iter_begin_1a6cecd55;
		}
		_iter_end_1a6cecd55:;
	};
	if ((!(_105030_decl.get()._field_CppLinked))) {
		jule::Ptr<_1a31dbbc6_Enum> _107521_e = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eee246_FindEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_107521_e != nullptr)) {
			return jule::Trait<_1a3ecd7ca_Kind>(_1a3ee47e1_fromEnum(&(*_self_), _105030_decl,_107521_e), 3);
		};
		jule::Ptr<_1a31dd2c1_TypeEnum> _108021_te = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eee554_FindTypeEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108021_te != nullptr)) {
			return jule::Trait<_1a3ecd7ca_Kind>(_1a3ee4b98_fromTypeEnum(&(*_self_), _105030_decl,_108021_te), 4);
		};
		jule::Ptr<_1a31d9a81_Trait> _108521_t = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eede38_FindTrait((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108521_t != nullptr)) {
			return jule::Trait<_1a3ecd7ca_Kind>(_1a3ee5050_fromTrait(&(*_self_), _105030_decl,_108521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1a3ee279a_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a30e9b8e_Struct> _109417_s = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eed773_FindStruct((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_1a3ecd7ca_Kind>(_1a3ee5e1e_fromStruct(&(*_self_), _105030_decl,_109417_s), 0);
	};
	jule::Ptr<_1a3ecd016_TypeAlias> _109917_ta = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eed3bb_FindTypeAlias((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_109917_ta=_1a400e08b_findBuiltinTypeAlias(_105030_decl.get()._field_Ident);
	};
	if ((_109917_ta != nullptr)) {
		return _1a3ee4439_fromTypeAlias(&(*_self_), _105030_decl,_109917_ta);
	};
	_1a3ee279a_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee653a_buildIdent(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109a28_IdentTypeDecl> _111133_decl) {
	{
		
		if (_1a3eec057_isPrim(_111133_decl.get()._field_Ident)) {
			_case_begin_1a6d0912a:;
			{
				return jule::Trait<_1a3ecd7ca_Kind>(_1a3ee2e60_buildPrim(&(*_self_), _111133_decl), 6);
			}
		}
		else {
			_case_begin_1a6d088aa:;
			{
				return _1a3ee622c_getDef(&(*_self_), _111133_decl);
			}
		}
		_match_end_1a6d087cd:;
	};
}



inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee6848_buildSubIdent(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310a177_SubIdentTypeDecl> _112036_decl) {
	jule::Trait<_1a3ecd7ca_Kind> _112117_ident = _1a3ee653a_buildIdent(&(*_self_), _112036_decl.get()._field_Idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1a31dd2c1_TypeEnum>>()) {
			_case_begin_1a6d0ac42:;
			{
				goto _match_end_1a6d0a978;
			}
		}
		else {
			_case_begin_1a6d0a9cd:;
			{
				_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6d0a978:;
	};
	jule::Ptr<_1a31dd2c1_TypeEnum> _113217_t = _112117_ident.operator jule::Ptr<_1a31dd2c1_TypeEnum>();;
	jule::Slice<jule::Ptr<_1a3109a28_IdentTypeDecl>> _113317_idents = _112036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113317_idents;
		auto it = expr.begin();
		_iter_begin_1a6d0c172:;
		if (it != expr.end()) {
			jule::I64 _113413_i = it - expr.begin();
			jule::Ptr<_1a3109a28_IdentTypeDecl> _113416_id = *it;
			{
				jule::Ptr<_1a31dcc0a_TypeEnumItem> _113521_item = _1a31ddd0a_FindItem(_113217_t.ptr(), _113416_id.get()._field_Ident);;
				if ((_113521_item == nullptr)) {
					_1a3ee279a_pushErr(&(*_self_), _113416_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113217_t.get()._field_Ident),jule::Any(_113416_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113317_idents.len() - _113413_i) == 1LL)) {
					_1a3ee345a_pushReferenceByKind(&(*_self_), _113521_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1a3ecd7ca_Kind>(_113521_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113217_t=_1a3ed17bc_TypeEnum(_113521_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113217_t == nullptr)) {
					_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1a6d0c172:;
			++it;
			_113413_i++;
			goto _iter_begin_1a6d0c172;
		}
		_iter_end_1a6d0c172:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3ed6e65_Sptr> _1a3ee6b56_buildSptrFromType(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _115441_elem) {
	{
		
		if ((_115441_elem == nullptr)) {
			_case_begin_1a6d0cb23:;
			{
				return nullptr;
			}
		}
		else if ((_1a3ed226d_Struct(_115441_elem.ptr()) != nullptr)) {
			_case_begin_1a6d0cb9a:;
			{
				jule::Ptr<_1a312ad46_StructIns> _116017_s = _1a3ed226d_Struct(_115441_elem.ptr());;
				if (((_116017_s.get()._field_Decl != nullptr) && _116017_s.get()._field_Decl.get()._field_CppLinked)) {
					_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1a3ed1a31_Arr(_115441_elem.ptr()) != nullptr) && _1a3ed1a31_Arr(_115441_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a6d1162c:;
			{
				_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6d0ca24:;
	};
	return jule::new_ptr<_1a3ed6e65_Sptr>(_1a3ed6e65_Sptr{._field_Elem=_115441_elem});
}



inline jule::Ptr<_1a3ed6e65_Sptr> _1a3ee6e64_buildSptr(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310a81a_SptrTypeDecl> _117432_decl) {
	jule::Bool _117513_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117513_notPlain;
	});;
	jule::Ptr<_1a3ecdc09_TypeKind> _117917_elem = _1a3ee930c_checkDecl(&(*_self_), _117432_decl.get()._field_Elem);;
	return _1a3ee6b56_buildSptrFromType(&(*_self_), _117917_elem);
}



inline jule::Ptr<_1a3eda4c9_Ptr> _1a3ee7272_buildPtrFromType(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3ecdc09_TypeKind>& _118340_elem) {
	{
		
		if ((_118340_elem == nullptr)) {
			_case_begin_1a6d168b8:;
			{
				return nullptr;
			}
		}
		else if (((_1a3ed1a31_Arr(_118340_elem.ptr()) != nullptr) && _1a3ed1a31_Arr(_118340_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a6d16940:;
			{
				_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a3eda4c9_Ptr>();
			}
		}
		_match_end_1a6d16797:;
	};
	return jule::new_ptr<_1a3eda4c9_Ptr>(_1a3eda4c9_Ptr{._field_Elem=_118340_elem});
}



inline jule::Ptr<_1a3eda4c9_Ptr> _1a3ee7580_buildPtr(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310b2dd_PtrTypeDecl> _119831_decl) {
	jule::Bool _119913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119913_notPlain;
	});;
	jule::Ptr<_1a3ecdc09_TypeKind> _120317_elem = nullptr;;
	if ((!(_1a310b640_IsUnsafe(_119831_decl.ptr())))) {
		_120317_elem=_1a3ee930c_checkDecl(&(*_self_), _119831_decl.get()._field_Elem);
		return _1a3ee7272_buildPtrFromType(&(*_self_), _120317_elem);
	};
	return jule::new_ptr<_1a3eda4c9_Ptr>(_1a3eda4c9_Ptr{._field_Elem=_120317_elem});
}



inline jule::Ptr<_1a3ed78c2_Slc> _1a3ee788d_buildSlc(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310ac16_SlcTypeDecl> _121531_decl) {
	jule::Bool _121613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121613_notPlain;
	});;
	jule::Ptr<_1a3ecdc09_TypeKind> _122017_elem = _1a3ee930c_checkDecl(&(*_self_), _121531_decl.get()._field_Elem);;
	{
		
		if ((_122017_elem == nullptr)) {
			_case_begin_1a6d1beb7:;
			{
				return nullptr;
			}
		}
		else if (((_1a3ed1a31_Arr(_122017_elem.ptr()) != nullptr) && _1a3ed1a31_Arr(_122017_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a6d1c03e:;
			{
				_1a3ee279a_pushErr(&(*_self_), _121531_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6d1be0c:;
	};
	return jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=_122017_elem});
}



inline jule::Ptr<_1a3ed9a6c_Arr> _1a3ee7b9b_buildArr(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310b970_ArrTypeDecl> _123631_decl) {
	jule::Bool _123713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123713_notPlain;
	});;
	jule::I64 _124117_n = 0LL;;
	if ((!(_1a310bd49_AutoSized(_123631_decl.ptr())))) {
		jule::Ptr<_1a3ea2e75_Data> _124421_size = _1a3ec0404_evalExpr(_1a3e46798_eval((*_self_)._field_s, (*_self_)._field_lookup), _123631_decl.get()._field_Size);;
		if ((_124421_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1a3ea3838_IsConst(_124421_size.ptr())))) {
			_1a3ee279a_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a3ed0d1b_Prim(_124421_size.get()._field_Kind.ptr()) == nullptr) || (!(_1a3e20b90_IsInt(_1a3ed0d1b_Prim(_124421_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a3ee279a_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124117_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a31b8785_AsI64(_124421_size.get()._field_Constant.ptr())));
		if ((_124117_n < 0LL)) {
			_1a3ee279a_pushErr(&(*_self_), _123631_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a32c1739_BitSize != 64LL) && (static_cast<jule::F64>(_124117_n) > _1a37d19a2_Max(jule::Str("int", 3))))) {
			_1a3ee279a_pushErr(&(*_self_), _123631_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _126717_elem = _1a3ee930c_checkDecl(&(*_self_), _123631_decl.get()._field_Elem);;
	{
		
		if ((_126717_elem == nullptr)) {
			_case_begin_1a6d26158:;
			{
				return nullptr;
			}
		}
		else if (((_1a3ed1a31_Arr(_126717_elem.ptr()) != nullptr) && _1a3ed1a31_Arr(_126717_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a6d261be:;
			{
				_1a3ee279a_pushErr(&(*_self_), _123631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6d25dd3:;
	};
	return jule::new_ptr<_1a3ed9a6c_Arr>(_1a3ed9a6c_Arr{._field_Auto=_1a310bd49_AutoSized(_123631_decl.ptr()), ._field_N=_124117_n, ._field_Elem=_126717_elem});
}



inline jule::Ptr<_1a3ed8e78_Map> _1a3ee7ea9_buildMap(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310c1bd_MapTypeDecl> _128531_decl) {
	jule::Bool _128613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_128613_notPlain;
	});;
	jule::Ptr<_1a3ecdc09_TypeKind> _129017_key = _1a3ee930c_checkDecl(&(*_self_), _128531_decl.get()._field_Key);;
	if ((_129017_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _129517_val = _1a3ee930c_checkDecl(&(*_self_), _128531_decl.get()._field_Val);;
	if ((_129517_val == nullptr)) {
		return nullptr;
	};
	if ((_1a3ed1558_Enum(_129517_val.ptr()) != nullptr)) {
		_1a3ee279a_pushErr(&(*_self_), _128531_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a3ed8e78_Map>(_1a3ed8e78_Map{._field_Key=_129017_key, ._field_Val=_129517_val});
}



inline jule::Ptr<_1a3ed8450_Tuple> _1a3ee82b7_buildTuple(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310b002_TupleTypeDecl> _130933_decl) {
	jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _131017_types = jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>>::alloc(0LL,_130933_decl.get()._field_Types.len());;
	{
		auto &expr = _130933_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1a6d2bd1d:;
		if (it != expr.end()) {
			jule::Ptr<_1a3109462_TypeDecl> _131121_t = *it;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _131221_kind = _1a3ee930c_checkDecl(&(*_self_), _131121_t);;
				if ((_131221_kind == nullptr)) {
					return nullptr;
				};
				_131017_types = jule::alloc_for_append(_131017_types,1);_131017_types.__push(_131221_kind);;
			}
			_iter_next_1a6d2bd1d:;
			++it;
			goto _iter_begin_1a6d2bd1d;
		}
		_iter_end_1a6d2bd1d:;
	};
	return jule::new_ptr<_1a3ed8450_Tuple>(_1a3ed8450_Tuple{._field_Types=_131017_types});
}



inline jule::Bool _1a3ee85c5_checkFnTypes(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a31ca874_FnIns>& _132236_f) {
	jule::Bool _132249_ok = jule::Bool();
	{
		auto &expr = _132236_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a6d2dd64:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c99a5_ParamIns> _132321_p = *it;
			{
				_132321_p.get()._field_Kind=_1a3ee8eee_build(&(*_self_), _132321_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132249_ok=(_132321_p.get()._field_Kind != nullptr);
				if ((!(_132249_ok))) {
					_132249_ok = false;
					return _132249_ok;
				};
				_1a3e48b74_checkFnParamKind((*_self_)._field_s, _132321_p);
			}
			_iter_next_1a6d2dd64:;
			++it;
			goto _iter_begin_1a6d2dd64;
		}
		_iter_end_1a6d2dd64:;
	};
	if ((!(_1a31c8135_IsVoid(_132236_f.get()._field_Decl.ptr())))) {
		_132236_f.get()._field_Result=_1a3ee8eee_build(&(*_self_), _132236_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132249_ok = (_132236_f.get()._field_Result != nullptr);
		return _132249_ok;
	};
	_132249_ok = true;
	return _132249_ok;
}



inline jule::Ptr<_1a31ca874_FnIns> _1a3ee88d3_buildFn(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a31210d3_FnDecl> _134030_decl) {
	if ((_134030_decl.get()._field_Generics.len() > 0LL)) {
		_1a3ee279a_pushErr(&(*_self_), _134030_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a31c7bc3_Fn> _134617_f = _1a31d19ac_buildFn(_134030_decl);;
	jule::I64 _134813_n = (*_self_)._field_s.get()._field_errors.len();;
	_1a3e50a8d_checkFnDecl((*_self_)._field_s, _134617_f);
	if ((_134813_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1a31ca874_FnIns> _135417_ins = _1a31c90ae_instanceForce(_134617_f);;
	_135417_ins.get()._field_Anon=true;
	jule::Bool _135713_ok = _1a3ee85c5_checkFnTypes(&(*_self_), _135417_ins);;
	if ((!(_135713_ok))) {
		return nullptr;
	};
	return _135417_ins;
}



inline jule::Trait<_1a3ecd7ca_Kind> _1a3ee8be1_buildByNamespace(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a310a52e_NamespaceTypeDecl> _136539_decl) {
	jule::Str _136613_path = _1a3eeb661_buildLinkPathByTokens(_136539_decl.get()._field_Idents);;
	jule::Ptr<_1a3e3409e_ImportInfo> _136717_imp = _1a3eee697_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a3eecb5c_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a3e3409e_ImportInfo>)>([=](jule::Ptr<_1a3e3409e_ImportInfo> _136752_imp) mutable -> jule::Bool {
		if (((_136539_decl.get()._field_Idents.len() == 1LL) && (_136752_imp.get()._field_Alias == _136613_path))) {
			return true;
		};
		return ((_136752_imp.get()._field_LinkPath == _136613_path) && _1a3e36c0b_isAccessibleViaSelection(_136752_imp.ptr()));
	}));;
	if (((_136717_imp == nullptr) || (!(_1a3e36667_isLookupable(_136717_imp.ptr(), jule::Str("self", 4)))))) {
		_1a3ee279a_pushErr(&(*_self_), _136539_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136613_path)}));
		return nullptr;
	};
	_1a3ee2b52_disallowBuiltin(&(*_self_));
	jule::Trait<_1a3eee697_Lookup> _138017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1a3eee697_Lookup>(_136717_imp, 1);
	jule::Ptr<_1a3ecdc09_TypeKind> _138217_kind = _1a3ee930c_checkDecl(&(*_self_), _136539_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138017_lookup;
	_1a3ee2976_allowBuiltin(&(*_self_));
	return jule::Trait<_1a3ecd7ca_Kind>(_138217_kind, 5);
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3ee8eee_build(_1a3edc234_typeChecker* _self_, jule::Any& _138829_declKind) {
	jule::Trait<_1a3ecd7ca_Kind> _138917_kind = nullptr;;
	{
		auto &_match_expr{ _138829_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3109a28_IdentTypeDecl>>()) {
			_case_begin_1a6d3e2a3:;
			{
				jule::Trait<_1a3ecd7ca_Kind> _139221_t = _1a3ee653a_buildIdent(&(*_self_), _138829_declKind.operator jule::Ptr<_1a3109a28_IdentTypeDecl>());;
				if ((_139221_t != nullptr)) {
					_138917_kind=_139221_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a177_SubIdentTypeDecl>>()) {
			_case_begin_1a6d3e4e5:;
			{
				jule::Trait<_1a3ecd7ca_Kind> _139721_t = _1a3ee6848_buildSubIdent(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310a177_SubIdentTypeDecl>());;
				if ((_139721_t != nullptr)) {
					_138917_kind=_139721_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a81a_SptrTypeDecl>>()) {
			_case_begin_1a6d3e182:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a3ed6e65_Sptr> _140321_t = _1a3ee6e64_buildSptr(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310a81a_SptrTypeDecl>());;
				if ((_140321_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_140321_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310b2dd_PtrTypeDecl>>()) {
			_case_begin_1a6d3cea5:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a3eda4c9_Ptr> _140921_t = _1a3ee7580_buildPtr(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310b2dd_PtrTypeDecl>());;
				if ((_140921_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_140921_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310ac16_SlcTypeDecl>>()) {
			_case_begin_1a6d3c16e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a3ed78c2_Slc> _141521_t = _1a3ee788d_buildSlc(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310ac16_SlcTypeDecl>());;
				if ((_141521_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_141521_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310b970_ArrTypeDecl>>()) {
			_case_begin_1a6d3c1d5:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a3ed9a6c_Arr> _142121_t = _1a3ee7b9b_buildArr(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310b970_ArrTypeDecl>());;
				if ((_142121_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_142121_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310c1bd_MapTypeDecl>>()) {
			_case_begin_1a6d3c24b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a3ed8e78_Map> _142721_t = _1a3ee7ea9_buildMap(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310c1bd_MapTypeDecl>());;
				if ((_142721_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_142721_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310b002_TupleTypeDecl>>()) {
			_case_begin_1a6d3c2b2:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a3ed8450_Tuple> _143321_t = _1a3ee82b7_buildTuple(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310b002_TupleTypeDecl>());;
				if ((_143321_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_143321_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31210d3_FnDecl>>()) {
			_case_begin_1a6d3da44:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a31ca874_FnIns> _143921_t = _1a3ee88d3_buildFn(&(*_self_), _138829_declKind.operator jule::Ptr<_1a31210d3_FnDecl>());;
				if ((_143921_t != nullptr)) {
					_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_143921_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a52e_NamespaceTypeDecl>>()) {
			_case_begin_1a6d3daaa:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a3ecd7ca_Kind> _144521_t = _1a3ee8be1_buildByNamespace(&(*_self_), _138829_declKind.operator jule::Ptr<_1a310a52e_NamespaceTypeDecl>());;
				if ((_144521_t != nullptr)) {
					_138917_kind=_144521_t;
				};
			}
		}
		else {
			_case_begin_1a6d3bec6:;
			{
				jule::Any _145021_udeclKind = (*(((jule::Any*)((&(_138829_declKind))))));;
				{
					auto &_match_expr{ _145021_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_1a3ed6e65_Sptr>>()) {
						_case_begin_1a6d3cdc8:;
						{
							_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_145021_udeclKind.operator jule::Ptr<_1a3ed6e65_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a3eda4c9_Ptr>>()) {
						_case_begin_1a6d3ce3e:;
						{
							_138917_kind=jule::Trait<_1a3ecd7ca_Kind>(_145021_udeclKind.operator jule::Ptr<_1a3eda4c9_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1a6d3cc85:;
						{
							_1a3ee279a_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1a6d3cb86:;
				};
			}
		}
		_match_end_1a6d3be71:;
	};
	if ((_138917_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ecdc09_TypeKind>>()) {
			_case_begin_1a6d4b4be:;
			{
				return _138917_kind.operator jule::Ptr<_1a3ecdc09_TypeKind>();
			}
		}
		else {
			_case_begin_1a6d4ad1a:;
			{
				return jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=_138917_kind});
			}
		}
		_match_end_1a6d4a831:;
	};
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3ee930c_checkDecl(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3109462_TypeDecl>& _147433_decl) {
	jule::Ptr<_1ba1dbeab_Token> _147617_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147433_decl.get()._field_Token;
	jule::Ptr<_1a3ecdc09_TypeKind> _147917_kind = _1a3ee8eee_build(&(*_self_), _147433_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_147617_errorToken;
	return _147917_kind;
}



inline void _1a3ee9582_check(_1a3edc234_typeChecker* _self_, jule::Ptr<_1a3ed2d62_TypeSymbol>& _148529_t) {
	if ((_148529_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3ecdc09_TypeKind> _148917_kind = _1a3ee930c_checkDecl(&(*_self_), _148529_t.get()._field_Decl);;
	if ((_148917_kind == nullptr)) {
		_1a3ed33e5_removeKind(_148529_t.ptr());
		return;;
	};
	_148529_t.get()._field_Kind=_148917_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3edc234_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a3ee9be2_identTypeDecl(jule::Str& _150130_ident, jule::Ptr<_1a3109a28_IdentTypeDecl> _150142_t) {
	if ((_150142_t.get()._field_Ident == _150130_ident)) {
		return true;
	};
	{
		auto &expr = _150142_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a6d500d8:;
		if (it != expr.end()) {
			jule::Ptr<_1a3109462_TypeDecl> &_150516_g = *it;
			{
				if (static__1a3eea033_exist(_150130_ident,_150516_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1a6d500d8:;
			++it;
			goto _iter_begin_1a6d500d8;
		}
		_iter_end_1a6d500d8:;
	};
	return false;
}



inline jule::Bool static__1a3eea033_exist(jule::Str& _151322_ident, jule::Any& _151335_k) {
	{
		auto &_match_expr{ _151335_k };
		
		if (_match_expr.type_is<jule::Ptr<_1a3109a28_IdentTypeDecl>>()) {
			_case_begin_1a6d513c5:;
			{
				return static__1a3ee9be2_identTypeDecl(_151322_ident,_151335_k.operator jule::Ptr<_1a3109a28_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a177_SubIdentTypeDecl>>()) {
			_case_begin_1a6d5143b:;
			{
				jule::Ptr<_1a310a177_SubIdentTypeDecl> _151817_sit = _151335_k.operator jule::Ptr<_1a310a177_SubIdentTypeDecl>();;
				{
					auto &expr = _151817_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1a6d52c89:;
					if (it != expr.end()) {
						jule::Ptr<_1a3109a28_IdentTypeDecl> &_151920_id = *it;
						{
							if (static__1a3ee9be2_identTypeDecl(_151322_ident,_151920_id)) {
								return true;
							};
						}
						_iter_next_1a6d52c89:;
						++it;
						goto _iter_begin_1a6d52c89;
					}
					_iter_end_1a6d52c89:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a81a_SptrTypeDecl>>()) {
			_case_begin_1a6d51628:;
			{
				jule::Ptr<_1a310a81a_SptrTypeDecl> _152617_sptr = _151335_k.operator jule::Ptr<_1a310a81a_SptrTypeDecl>();;
				return static__1a3eea033_exist(_151322_ident,_152617_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310b2dd_PtrTypeDecl>>()) {
			_case_begin_1a6d5168e:;
			{
				jule::Ptr<_1a310b2dd_PtrTypeDecl> _152917_ptr = _151335_k.operator jule::Ptr<_1a310b2dd_PtrTypeDecl>();;
				return static__1a3eea033_exist(_151322_ident,_152917_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310ac16_SlcTypeDecl>>()) {
			_case_begin_1a6d51705:;
			{
				jule::Ptr<_1a310ac16_SlcTypeDecl> _153217_slc = _151335_k.operator jule::Ptr<_1a310ac16_SlcTypeDecl>();;
				return static__1a3eea033_exist(_151322_ident,_153217_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310b970_ArrTypeDecl>>()) {
			_case_begin_1a6d5176b:;
			{
				jule::Ptr<_1a310b970_ArrTypeDecl> _153517_arr = _151335_k.operator jule::Ptr<_1a310b970_ArrTypeDecl>();;
				return static__1a3eea033_exist(_151322_ident,_153517_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310c1bd_MapTypeDecl>>()) {
			_case_begin_1a6d517d2:;
			{
				jule::Ptr<_1a310c1bd_MapTypeDecl> _153817_m = _151335_k.operator jule::Ptr<_1a310c1bd_MapTypeDecl>();;
				return (static__1a3eea033_exist(_151322_ident,_153817_m.get()._field_Key.get()._field_Kind) || static__1a3eea033_exist(_151322_ident,_153817_m.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31210d3_FnDecl>>()) {
			_case_begin_1a6d51859:;
			{
				jule::Ptr<_1a31210d3_FnDecl> _154217_f = _151335_k.operator jule::Ptr<_1a31210d3_FnDecl>();;
				{
					auto &expr = _154217_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1a6d583ee:;
					if (it != expr.end()) {
						jule::Ptr<_1a3119e56_ParamDecl> &_154320_p = *it;
						{
							if (_1a311a2b9_IsSelf(_154320_p.ptr())) {
								goto _iter_next_1a6d583ee;
							};
							if (static__1a3eea033_exist(_151322_ident,_154320_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1a6d583ee:;
						++it;
						goto _iter_begin_1a6d583ee;
					}
					_iter_end_1a6d583ee:;
				};
				if ((_154217_f.get()._field_Result != nullptr)) {
					return static__1a3eea033_exist(_151322_ident,_154217_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310b002_TupleTypeDecl>>()) {
			_case_begin_1a6d518d1:;
			{
				jule::Ptr<_1a310b002_TupleTypeDecl> _155617_tup = _151335_k.operator jule::Ptr<_1a310b002_TupleTypeDecl>();;
				{
					auto &expr = _155617_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1a6d5a90c:;
					if (it != expr.end()) {
						jule::Ptr<_1a3109462_TypeDecl> &_155720_t = *it;
						{
							if (static__1a3eea033_exist(_151322_ident,_155720_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1a6d5a90c:;
						++it;
						goto _iter_begin_1a6d5a90c;
					}
					_iter_end_1a6d5a90c:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a52e_NamespaceTypeDecl>>()) {
			_case_begin_1a6d51969:;
			{
				jule::Ptr<_1a310a52e_NamespaceTypeDecl> _156417_ns = _151335_k.operator jule::Ptr<_1a310a52e_NamespaceTypeDecl>();;
				return static__1a3eea033_exist(_151322_ident,_156417_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1a6d51172:;
			{
				return false;
			}
		}
		_match_end_1a6d5076a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3ee97a2_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a46a7b0d_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a47094de_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a470a49b_stop(_1a4709d19_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1a470a710_stopped(_1a4709d19_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1a470a974_finished(_1a4709d19_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1a470abd8_isLastSt(_1a4709d19_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1a470b007_pushErr(_1a4709d19_scopeParser* _self_, jule::Ptr<_1ba1dbeab_Token> _19226_token, jule::Str _19241_fmt) {
	_1a4726dbe_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _1a470b326_pushSuggestion(_1a4709d19_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_1a47271dd_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _1a470b59b_insertAsNext(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1a47094de_stmt>(_1a47094de_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_1a47094de_stmt> _1a470b810_next(_1a4709d19_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1a3119780_ScopeTree> _1a470bbb7_buildScope(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _21134_tokens, jule::Ptr<_1ba1dbeab_Token> _21156_end) {
	jule::Ptr<_1a3119780_ScopeTree> _21217_s = _1a47083bc_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_1a4709d19_scopeParser _21517_ssp = _1a4709d19_scopeParser{._field_p=(*_self_)._field_p, };;
	_1a47158a2_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1a31220b2_VarDecl> _1a470bec5_buildVarSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _22234_tokens) {
	jule::Ptr<_1a31220b2_VarDecl> _22317_v = _1a472990a_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1a3122469_RetSt> _1a470c2d3_buildRetSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _22833_tokens) {
	jule::Ptr<_1a3122469_RetSt> _22917_st = jule::new_ptr<_1a3122469_RetSt>(_1a3122469_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1a3122ac9_Iter> _1a470c5e1_buildWhileNextIter(_1a4709d19_scopeParser* _self_, jule::Ptr<_1a47094de_stmt>& _23942_s) {
	jule::Ptr<_1a3122ac9_Iter> _24017_it = jule::new_ptr<_1a3122ac9_Iter>(_1a3122ac9_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1a312339e_WhileKind> _24417_kind = jule::new_ptr<_1a312339e_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_1a470abd8_isLastSt(&(*_self_))) {
		_1a470b007_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1a470b810_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _25617_stTokens = _1a4721605_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_1a47094de_stmt> _25821_stmt = jule::new_ptr<_1a47094de_stmt>(_1a47094de_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_1a4715583_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _26717_blockTokens = _1a47246c4_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_1a470a49b_stop(&(*_self_));
		_1a470b007_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1a470b007_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_1a470bbb7_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1a312339e_WhileKind> _1a470c8ee_buildWhileIterKind(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _28442_tokens) {
	return jule::new_ptr<_1a312339e_WhileKind>(_1a312339e_WhileKind{._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a470cc0c_getRangeKindKeysTokens(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _29118_vars;;
	jule::Slice<_1b9db24ab_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1a4725241_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1a31220b2_VarDecl> _1a470d01a_buildRangeKindKey(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1a31220b2_VarDecl> _30017_key = jule::new_ptr<_1a31220b2_VarDecl>(_1a31220b2_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_1a470b007_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_1a470b007_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a470b007_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1a31220b2_VarDecl>> _1a470d328_buildRangeKindKeys(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_1a31220b2_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_1a6edb73b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1a470d01a_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_1a6edb73b:;
			++it;
			goto _iter_begin_1a6edb73b;
		}
		_iter_end_1a6edb73b:;
	};
	return _32217_keys;
}



inline void _1a470d669_setupRangeKindKeysPlain(_1a4709d19_scopeParser* _self_, jule::Ptr<_1a3123c40_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _33017_keyTokens = _1a470cc0c_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_1a470b007_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a31220b2_VarDecl>> _33717_keys = _1a470d328_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _1a470d9bb_setupRangeKindKeysExplicit(_1a4709d19_scopeParser* _self_, jule::Ptr<_1a3123c40_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _34617_rang = _1a47246c4_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_1a470b007_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1a470d669_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _1a470dceb_setupRangeKindKeys(_1a4709d19_scopeParser* _self_, jule::Ptr<_1a3123c40_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1a470b007_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1a470d9bb_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_1a470d669_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_1a3123c40_RangeKind> _1a470e24c_buildRangeIterKind(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _36614_exprTokens, jule::Ptr<_1ba1dbeab_Token>& _36641_inToken) {
	jule::Ptr<_1a3123c40_RangeKind> _36717_rng = jule::new_ptr<_1a3123c40_RangeKind>(_1a3123c40_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_1a470b007_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_1a470dceb_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1a470e604_buildCommonIterKind(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _38143_tokens, jule::Ptr<_1ba1dbeab_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_1a6ee7a22:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6ee89e0:;
							{
								(_38217_braceN)++;
								goto _iter_next_1a6ee7a22;
							}
						}
						else {
							_case_begin_1a6ee8ccb:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_1a6ee8aab:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_1a6ee7a22;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1a6ee9a35:;
						{
							jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1a470e24c_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_1a6ee8748:;
				};
			}
			_iter_next_1a6ee7a22:;
			++it;
			_38314_i++;
			goto _iter_begin_1a6ee7a22;
		}
		_iter_end_1a6ee7a22:;
	};
	return static_cast<jule::Any>(_1a470c8ee_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_1a3122ac9_Iter> _1a470e912_buildCommonIter(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _40838_tokens) {
	jule::Ptr<_1a3122ac9_Iter> _40917_it = jule::new_ptr<_1a3122ac9_Iter>(_1a3122ac9_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_1a470a49b_stop(&(*_self_));
		_1a470b007_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _41917_exprTokens = _1a4721605_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_1a470e604_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _42417_scopeTokens = _1a47246c4_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_1a470a49b_stop(&(*_self_));
		_1a470b007_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_1a470b007_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_1a470bbb7_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1a3122ac9_Iter> _1a470ec20_buildIterSt(_1a4709d19_scopeParser* _self_, jule::Ptr<_1a47094de_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _1a470c5e1_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _1a470e912_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_1a31240e7_BreakSt> _1a471002d_buildBreakSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _44536_tokens) {
	jule::Ptr<_1a31240e7_BreakSt> _44617_brk = jule::new_ptr<_1a31240e7_BreakSt>(_1a31240e7_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1a470b007_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_1a470b326_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_1a470b007_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1a312449e_ContSt> _1a471033b_buildContSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _46335_tokens) {
	jule::Ptr<_1a312449e_ContSt> _46417_cont = jule::new_ptr<_1a312449e_ContSt>(_1a312449e_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1a470b007_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_1a470b326_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_1a470b007_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1a3124922_If> _1a4710649_buildIf(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _48131_tokens) {
	jule::Ptr<_1a3124922_If> _48217_model = jule::new_ptr<_1a3124922_If>(_1a3124922_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _48617_exprTokens = _1a4721605_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_1a470b007_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _49317_scopeTokens = _1a47246c4_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_1a470a49b_stop(&(*_self_));
		_1a470b007_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ba1dbeab_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_1a470b007_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_1a470bbb7_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1a3124cc9_Else> _1a4710957_buildElse(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _51433_tokens) {
	jule::Ptr<_1a3124cc9_Else> _51517_els = jule::new_ptr<_1a3124cc9_Else>(_1a3124cc9_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _52017_scopeTokens = _1a47246c4_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_1a470b007_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1a470a49b_stop(&(*_self_));
			_1a470b007_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1a470b326_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_1a470b007_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_1a470bbb7_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1a312524c_Conditional> _1a4710c65_buildIfElseChain(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _53839_tokens) {
	jule::Ptr<_1a312524c_Conditional> _53917_chain = jule::new_ptr<_1a312524c_Conditional>(_1a312524c_Conditional{._field_Head=_1a4710649_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1a7016887;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_1a3124922_If> _55125_elif = _1a4710649_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_1a7016887;
			};
			_53917_chain.get()._field_Default=_1a4710957_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_1a7016887;
		}
	_iter_next_1a7016887:;
	}
	_iter_end_1a7016887:;;
	return _53917_chain;
}



inline jule::Ptr<_1a3110578_CoExpr> _1a4711073_buildCoCallSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _56136_tokens) {
	jule::Ptr<_1a3110578_CoExpr> _56217_c = jule::new_ptr<_1a3110578_CoExpr>(_1a3110578_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_1a31172a5_GotoSt> _1a4711381_buildGotoSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _57035_tokens) {
	jule::Ptr<_1a31172a5_GotoSt> _57117_gt = jule::new_ptr<_1a31172a5_GotoSt>(_1a31172a5_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_1a470b007_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_1a470b007_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ba1dbeab_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a470b007_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_1a3117591_FallSt> _1a471168e_buildFallSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _59035_tokens) {
	jule::Ptr<_1a3117591_FallSt> _59117_fll = jule::new_ptr<_1a3117591_FallSt>(_1a3117591_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_1a470b007_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1a3125923_TypeAliasDecl> _1a471199c_buildTypeAliasSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _60040_tokens) {
	jule::Ptr<_1a3125923_TypeAliasDecl> _60117_tad = _1a4728ae6_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1a4711e0e_pushCaseExpr(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _60635_tokens, jule::Ptr<_1ba1dbeab_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1a310d983_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1a3109462_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1a47287d8_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_1a310d983_Expr>(_1a310d983_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_1a470b007_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_1a47274eb_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_1a310d983_Expr>> _1a4712360_buildCaseExprs(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _63038_tokens, jule::Ptr<_1ba1dbeab_Token>& _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1a310d983_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_1a70274ad:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a70285be:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_1a70288aa:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_1a702868a:;
					};
					goto _iter_next_1a70274ad;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_1a70274ad;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1a702848c:;
						{
							jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_1a470b007_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1a4711e0e_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63076_typeMatch,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1a70296e1:;
						{
							_63061_colon=_63521_tok;
							_1a4711e0e_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63076_typeMatch,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1a7029625:;
				};
			}
			_iter_next_1a70274ad:;
			++it;
			_63514_i++;
			goto _iter_begin_1a70274ad;
		}
		_iter_end_1a70274ad:;
	};
	_1a470b007_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1a3119780_ScopeTree> _1a471266d_buildCaseScope(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _67038_tokens) {
	jule::I64 _67117_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67321_i = 0LL;;
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _67422_next;;
			std::tie(_67422_next,std::ignore) = _1a47091e2_skipSt(_67321_i,_67038_tokens.slice(_67117_n));
			if ((_67422_next.len() == 0LL)) {
				goto _iter_end_1a702d42b;
			};
			jule::Ptr<_1ba1dbeab_Token> _67817_tok = _67422_next[0LL];;
			if (((_67817_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67817_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67117_n+=_67321_i;
				goto _iter_next_1a702d42b;
			};
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _68321_scopeTokens = _67038_tokens.slice(0LL,_67117_n);;
			jule::Ptr<_1a3119780_ScopeTree> _68421_scope = _1a470bbb7_buildScope(&(*_self_), _68321_scopeTokens,_67038_tokens[_67117_n]);;
			_67038_tokens=_67038_tokens.slice(_67117_n);
			return _68421_scope;
		}
	_iter_next_1a702d42b:;
	}
	_iter_end_1a702d42b:;;
	jule::Ptr<_1ba1dbeab_Token> _68817_end = jule::Ptr<_1ba1dbeab_Token>();;
	if ((_67038_tokens.len() > 0LL)) {
		_68817_end=_67038_tokens[(_67038_tokens.len() - 1LL)];
	};
	jule::Ptr<_1a3119780_ScopeTree> _69217_scope = _1a470bbb7_buildScope(&(*_self_), _67038_tokens,_68817_end);;
	_67038_tokens=nullptr;
	return _69217_scope;
}



inline std::tuple<jule::Ptr<_1a3125d96_Case>,jule::Bool> _1a4712a25_buildCase(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _69733_tokens, jule::Bool _69751_typeMatch) {
	jule::Ptr<_1a3125d96_Case> _69817_c = jule::new_ptr<_1a3125d96_Case>(_1a3125d96_Case{._field_Token=_69733_tokens[0LL], });;
	_69733_tokens=_69733_tokens.slice(1LL);
	jule::Ptr<_1ba1dbeab_Token> _70217_colon = nullptr;;
	_69817_c.get()._field_Exprs=_1a4712360_buildCaseExprs(&(*_self_), _69733_tokens,_70217_colon,_69751_typeMatch);
	_69817_c.get()._field_Scope=_1a471266d_buildCaseScope(&(*_self_), _69733_tokens);
	if ((_69817_c.get()._field_Scope.get()._field_End == nullptr)) {
		_69817_c.get()._field_Scope.get()._field_End=_70217_colon;
	};
	jule::Bool _70813_isDefault = (_69817_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69817_c,_70813_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_1a3125d96_Case>>,jule::Ptr<_1a3124cc9_Else>> _1a4712dcc_buildCases(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _71233_tokens, jule::Bool _71251_typeMatch) {
	jule::Slice<jule::Ptr<_1a3125d96_Case>> _71317_cases = nullptr;;
	jule::Ptr<_1a3124cc9_Else> _71417_def = nullptr;;
	jule::Bool _71517_defNotLast = false;;
	while ((_71233_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ba1dbeab_Token> _71721_tok = _71233_tokens[0LL];;
			if (((_71721_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71721_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1a470b007_pushErr(&(*_self_), _71721_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1a7037556;
			};
			jule::Ptr<_1a3125d96_Case> _72222_c;;
			jule::Bool _72225_isDefault;;
			std::tie(_72222_c,_72225_isDefault) = _1a4712a25_buildCase(&(*_self_), _71233_tokens,_71251_typeMatch);
			if (_72225_isDefault) {
				_72222_c.get()._field_Token=_71721_tok;
				if ((_71417_def == nullptr)) {
					_71417_def=jule::new_ptr<_1a3124cc9_Else>(_1a3124cc9_Else{._field_Token=_72222_c.get()._field_Token, ._field_Scope=_72222_c.get()._field_Scope});
				} else {
					_1a470b007_pushErr(&(*_self_), _71721_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71517_defNotLast=(_71517_defNotLast || (_71417_def != nullptr));
				_71317_cases = jule::alloc_for_append(_71317_cases,1);_71317_cases.__push(_72222_c);;
			};
		}
	_iter_next_1a7037556:;
	}
	_iter_end_1a7037556:;;
	if (_71517_defNotLast) {
		_1a470b007_pushErr(&(*_self_), _71417_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_71317_cases,_71417_def);
}



inline jule::Ptr<_1a312656c_MatchCase> _1a47131da_buildMatchCase(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _74637_tokens) {
	jule::Ptr<_1a312656c_MatchCase> _74717_m = jule::new_ptr<_1a312656c_MatchCase>(_1a312656c_MatchCase{._field_Token=_74637_tokens[0LL], });;
	_74637_tokens=_74637_tokens.slice(1LL);
	if (((_74637_tokens.len() > 0LL) && (_74637_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74717_m.get()._field_TypeMatch=true;
		_74637_tokens=_74637_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _75717_exprTokens = _1a4721605_getBlockExpr(_74637_tokens);;
	if ((_75717_exprTokens.len() > 0LL)) {
		_74717_m.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _75717_exprTokens);
	} else if (_74717_m.get()._field_TypeMatch) {
		_1a470b007_pushErr(&(*_self_), _74717_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _76417_i = _75717_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _76517_blockToks = _1a47246c4_range(_76417_i,jule::Str("{", 1),jule::Str("}", 1),_74637_tokens);;
	if ((_76517_blockToks == nullptr)) {
		_1a470a49b_stop(&(*_self_));
		_1a470b007_pushErr(&(*_self_), _74717_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1a470b326_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_76417_i < _74637_tokens.len())) {
		_1a470b007_pushErr(&(*_self_), _74637_tokens[_76417_i],jule::Str("invalid syntax", 14));
	};
	_74717_m.get()._field_End=_74637_tokens[(_76417_i - 1LL)];
	std::tie(_74717_m.get()._field_Cases,_74717_m.get()._field_Default) = _1a4712dcc_buildCases(&(*_self_), _76517_blockToks,_74717_m.get()._field_TypeMatch);
	return _74717_m;
}



inline jule::Ptr<_1a3119780_ScopeTree> _1a47134e8_buildScopeSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _77935_tokens) {
	jule::Bool _78017_isUnsafe = false;;
	jule::Bool _78117_isDeferred = false;;
	jule::Ptr<_1ba1dbeab_Token> _78217_token = _77935_tokens[0LL];;
	if ((_78217_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78017_isUnsafe=true;
		_77935_tokens=_77935_tokens.slice(1LL);
		if ((_77935_tokens.len() == 0LL)) {
			_1a470b007_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_78217_token=_77935_tokens[0LL];
		if ((_78217_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78117_isDeferred=true;
			_77935_tokens=_77935_tokens.slice(1LL);
			if ((_77935_tokens.len() == 0LL)) {
				_1a470b007_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_78217_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78117_isDeferred=true;
		_77935_tokens=_77935_tokens.slice(1LL);
		if ((_77935_tokens.len() == 0LL)) {
			_1a470b007_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80817_i = 0LL;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _80917_scopeTokens = _1a47246c4_range(_80817_i,jule::Str("{", 1),jule::Str("}", 1),_77935_tokens);;
	if ((_80917_scopeTokens == nullptr)) {
		_1a470b007_pushErr(&(*_self_), _78217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80817_i < _77935_tokens.len())) {
		_1a470b007_pushErr(&(*_self_), _77935_tokens[_80817_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a3119780_ScopeTree> _81617_scope = _1a470bbb7_buildScope(&(*_self_), _80917_scopeTokens,_77935_tokens[(_80817_i - 1LL)]);;
	_81617_scope.get()._field_Unsafety=_78017_isUnsafe;
	_81617_scope.get()._field_Deferred=_78117_isDeferred;
	return _81617_scope;
}



inline jule::Ptr<_1a3116ded_LabelSt> _1a4713806_buildLabelSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _82236_tokens) {
	jule::Ptr<_1a3116ded_LabelSt> _82317_lbl = jule::new_ptr<_1a3116ded_LabelSt>(_1a3116ded_LabelSt{._field_Token=_82236_tokens[0LL], ._field_Ident=_82236_tokens[0LL].get()._field_Kind});;
	if ((_82236_tokens.len() > 2LL)) {
		_82236_tokens=_82236_tokens.slice(2LL);
		_1a470b59b_insertAsNext(&(*_self_), _82236_tokens);
	};
	return _82317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1a4713b14_buildIdSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _83733_tokens) {
	jule::Bool _83763_ok = jule::Bool();
	if ((_83733_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83763_ok);
	};
	jule::Ptr<_1ba1dbeab_Token> _84217_token = _83733_tokens[1LL];;
	{
		auto &_match_expr{ _84217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a704ddca:;
			{
				_83763_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1a4713806_buildLabelSt(&(*_self_), _83733_tokens)),_83763_ok);
			}
		}
		_match_end_1a704eaac:;
	};
	return std::make_tuple(jule::Any(),_83763_ok);
}



inline jule::Ptr<_1a4722b34_assignInfo> _1a4713e22_buildAssignInfo(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _85139_tokens) {
	jule::Ptr<_1a4722b34_assignInfo> _85217_info = jule::new_ptr<_1a4722b34_assignInfo>(_1a4722b34_assignInfo{._field_ok=true});;
	jule::I64 _85517_braceN = 0LL;;
	{
		auto &expr = _85139_tokens;
		auto it = expr.begin();
		_iter_begin_1a7051a15:;
		if (it != expr.end()) {
			jule::I64 _85614_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _85621_token = *it;
			{
				if ((_85621_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85621_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7052a16:;
							{
								(_85517_braceN)++;
							}
						}
						else {
							_case_begin_1a7052d02:;
							{
								(_85517_braceN)--;
							}
						}
						_match_end_1a7052ad2:;
					};
				};
				{
					
					if ((_85517_braceN > 0LL)) {
						_case_begin_1a70526c5:;
						{
							goto _iter_next_1a7051a15;
						}
					}
					else if ((_85621_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1a705273b:;
						{
							goto _iter_next_1a7051a15;
						}
					}
					else if ((!(_1ba1e1a93_IsAssignOp(_85621_token.get()._field_Kind)))) {
						_case_begin_1a70527a2:;
						{
							goto _iter_next_1a7051a15;
						}
					}
					_match_end_1a70535d8:;
				};
				_85217_info.get()._field_l=_85139_tokens.slice(0LL,_85614_i);
				if ((_85217_info.get()._field_l.len() == 0LL)) {
					_85217_info.get()._field_ok=false;
				};
				_85217_info.get()._field_setter=_85621_token;
				if (((_85614_i + 1LL) >= _85139_tokens.len())) {
					_85217_info.get()._field_r=nullptr;
					_85217_info.get()._field_ok=_1ba1e17eb_IsPostfixOp(_85217_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1a7051a15;
				};
				_85217_info.get()._field_r=_85139_tokens.slice((_85614_i + 1LL));
				if (_1ba1e17eb_IsPostfixOp(_85217_info.get()._field_setter.get()._field_Kind)) {
					if ((_85217_info.get()._field_r.len() > 0LL)) {
						_1a470b007_pushErr(&(*_self_), _85217_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85217_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1a7051a15;
			}
			_iter_next_1a7051a15:;
			++it;
			_85614_i++;
			goto _iter_begin_1a7051a15;
		}
		_iter_end_1a7051a15:;
	};
	return _85217_info;
}



inline jule::Ptr<_1a3117b9b_AssignLeft> _1a4714230_buildAssignL(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _89936_tokens) {
	jule::Ptr<_1a3117b9b_AssignLeft> _90017_l = jule::new_ptr<_1a3117b9b_AssignLeft>(_1a3117b9b_AssignLeft{._field_Token=_89936_tokens[0LL], });;
	if ((_89936_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _89936_tokens);
	return _90017_l;
}



inline jule::Slice<jule::Ptr<_1a3117b9b_AssignLeft>> _1a471453d_buildAssignLs(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>& _91037_parts) {
	jule::Slice<jule::Ptr<_1a3117b9b_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto &expr = _91037_parts;
		auto it = expr.begin();
		_iter_begin_1a705a7aa:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _91221_part = *it;
			{
				jule::Ptr<_1a3117b9b_AssignLeft> _91321_l = _1a4714230_buildAssignL(&(*_self_), _91221_part);;
				_91117_lefts = jule::alloc_for_append(_91117_lefts,1);_91117_lefts.__push(_91321_l);;
			}
			_iter_next_1a705a7aa:;
			++it;
			goto _iter_begin_1a705a7aa;
		}
		_iter_end_1a705a7aa:;
	};
	return _91117_lefts;
}



inline std::tuple<jule::Ptr<_1a31181da_AssignSt>,jule::Bool> _1a471484b_buildPlainAssign(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _92040_tokens) {
	jule::Ptr<_1a4722b34_assignInfo> _92117_info = _1a4713e22_buildAssignInfo(&(*_self_), _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1a31181da_AssignSt> _92617_assign = jule::new_ptr<_1a31181da_AssignSt>(_1a31181da_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _93018_parts;;
	jule::Slice<_1b9db24ab_Log> _93025_errs;;
	std::tie(_93018_parts,_93025_errs) = _1a4725241_parts(_92117_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_93025_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93025_errs);
		return std::make_tuple(nullptr,false);
	};
	_92617_assign.get()._field_Left=_1a471453d_buildAssignLs(&(*_self_), _93018_parts);
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_1a47274eb_buildExpr((*_self_)._field_p, _92117_info.get()._field_r);
	};
	return std::make_tuple(_92617_assign,true);
}



inline std::tuple<jule::Ptr<_1a31181da_AssignSt>,jule::Bool> _1a4714b59_buildDeclAssign(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _94438_tokens) {
	if ((_94438_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94438_tokens=_94438_tokens.slice(1LL);
	jule::Ptr<_1ba1dbeab_Token> _95017_token = _94438_tokens[0LL];;
	if (((_95017_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95017_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1a31181da_AssignSt> _95517_assign = jule::new_ptr<_1a31181da_AssignSt>(_1a31181da_AssignSt{._field_Declarative=true, });;
	jule::I64 _95917_i = 0LL;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _96017_rang = _1a47246c4_range(_95917_i,jule::Str("(", 1),jule::Str(")", 1),_94438_tokens);;
	if ((_96017_rang == nullptr)) {
		_1a470b007_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95917_i + 1LL) < _94438_tokens.len())) {
		_95517_assign.get()._field_Setter=_94438_tokens[_95917_i];
		(_95917_i)++;
		jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _96721_exprTokens = _94438_tokens.slice(_95917_i);;
		_95517_assign.get()._field_Right=_1a47274eb_buildExpr((*_self_)._field_p, _96721_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _97218_parts;;
	jule::Slice<_1b9db24ab_Log> _97225_errs;;
	std::tie(_97218_parts,_97225_errs) = _1a4725241_parts(_96017_rang,static_cast<jule::U64>(8LLU),true);
	if ((_97225_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97225_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _97218_parts;
		auto it = expr.begin();
		_iter_begin_1a7066d38:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _97821_part = *it;
			{
				jule::Bool _97921_isMut = false;;
				jule::Bool _98021_isRef = false;;
				_95017_token=_97821_part[0LL];
				if ((_95017_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_97921_isMut=true;
					_97821_part=_97821_part.slice(1LL);
					if ((_97821_part.len() == 0LL)) {
						_1a470b007_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a7066d38;
					};
				};
				if (((_97821_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97821_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98021_isRef=true;
					_97821_part=_97821_part.slice(1LL);
					if ((_97821_part.len() == 0LL)) {
						_1a470b007_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a7066d38;
					};
				};
				if ((((_97821_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97821_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97821_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1a470b007_pushErr(&(*_self_), _95017_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1a7066d38;
				};
				jule::Ptr<_1a3117b9b_AssignLeft> _100821_l = _1a4714230_buildAssignL(&(*_self_), _97821_part);;
				_100821_l.get()._field_Mutable=_97921_isMut;
				_100821_l.get()._field_Reference=_98021_isRef;
				_95517_assign.get()._field_Left = jule::alloc_for_append(_95517_assign.get()._field_Left,1);_95517_assign.get()._field_Left.__push(_100821_l);;
			}
			_iter_next_1a7066d38:;
			++it;
			goto _iter_begin_1a7066d38;
		}
		_iter_end_1a7066d38:;
	};
	return std::make_tuple(_95517_assign,true);
}



inline std::tuple<jule::Ptr<_1a31181da_AssignSt>,jule::Bool> _1a4714e67_buildAssignSt(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _101737_tokens) {
	jule::Ptr<_1a31181da_AssignSt> _101757_st = jule::Ptr<_1a31181da_AssignSt>();
	jule::Bool _101772_ok = jule::Bool();
	if ((!(_1a4722eca_checkAssignTokens(_101737_tokens)))) {
		_101757_st = nullptr;
		_101772_ok = false;
		return std::make_tuple(_101757_st,_101772_ok);
	};
	{
		auto &_match_expr{ _101737_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a707110b:;
			{
				std::tie(_101757_st,_101772_ok) = _1a4714b59_buildDeclAssign(&(*_self_), _101737_tokens);
			}
		}
		else {
			_case_begin_1a7070bee:;
			{
				std::tie(_101757_st,_101772_ok) = _1a471484b_buildPlainAssign(&(*_self_), _101737_tokens);
			}
		}
		_match_end_1a7070b99:;
	};
	return std::make_tuple(_101757_st,_101772_ok);
}



inline jule::Ptr<_1a310e324_UseExpr> _1a4715275_buildUseExpr(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _103236_tokens) {
	if ((_103236_tokens.len() == 1LL)) {
		_1a470b007_pushErr(&(*_self_), _103236_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1a310e324_UseExpr> _103717_ue = jule::new_ptr<_1a310e324_UseExpr>(_1a310e324_UseExpr{._field_Token=_103236_tokens[0LL], });;
	_103236_tokens=_103236_tokens.slice(1LL);
	_103717_ue.get()._field_Expr=_1a47274eb_buildExpr((*_self_)._field_p, _103236_tokens);
	return _103717_ue;
}



inline jule::Any _1a4715583_buildSt(_1a4709d19_scopeParser* _self_, jule::Ptr<_1a47094de_stmt>& _104531_st) {
	jule::Ptr<_1ba1dbeab_Token> _104617_token = _104531_st.get()._field_tokens[0LL];;
	if ((_104617_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104822_s;;
		jule::Bool _104825_ok;;
		std::tie(_104822_s,_104825_ok) = _1a4713b14_buildIdSt(&(*_self_), _104531_st.get()._field_tokens);
		if (_104825_ok) {
			return _104822_s;
		};
	};
	jule::Ptr<_1a31181da_AssignSt> _105418_s;;
	jule::Bool _105421_ok;;
	std::tie(_105418_s,_105421_ok) = _1a4714e67_buildAssignSt(&(*_self_), _104531_st.get()._field_tokens);
	if (_105421_ok) {
		return static_cast<jule::Any>(_105418_s);
	};
	{
		auto &_match_expr{ _104617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a707b3d0:;
			{
				return static_cast<jule::Any>(_1a4715275_buildUseExpr(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a707b19e:;
			{
				return static_cast<jule::Any>(_1a470bec5_buildVarSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a707b688:;
			{
				return static_cast<jule::Any>(_1a470c2d3_buildRetSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1a707b6ee:;
			{
				return static_cast<jule::Any>(_1a470ec20_buildIterSt(&(*_self_), _104531_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a707b897:;
			{
				return static_cast<jule::Any>(_1a471002d_buildBreakSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1a707b90d:;
			{
				return static_cast<jule::Any>(_1a471033b_buildContSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a707b974:;
			{
				return static_cast<jule::Any>(_1a4710c65_buildIfElseChain(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a707b9da:;
			{
				return static_cast<jule::Any>(_1a4711073_buildCoCallSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a707ba51:;
			{
				return static_cast<jule::Any>(_1a4711381_buildGotoSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a707bab7:;
			{
				return static_cast<jule::Any>(_1a471168e_buildFallSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a707bb2d:;
			{
				return static_cast<jule::Any>(_1a471199c_buildTypeAliasSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a707bb94:;
			{
				return static_cast<jule::Any>(_1a47131da_buildMatchCase(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a707bc0a:;
			{
				return static_cast<jule::Any>(_1a47134e8_buildScopeSt(&(*_self_), _104531_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a707bc71:;
			{
				if ((_104617_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1a47134e8_buildScopeSt(&(*_self_), _104531_st.get()._field_tokens));
				};
			}
		}
		_match_end_1a707b501:;
	};
	jule::Ptr<_1a310d983_Expr> _109517_expr = _1a47274eb_buildExpr((*_self_)._field_p, _104531_st.get()._field_tokens);;
	if ((_109517_expr != nullptr)) {
		return static_cast<jule::Any>(_109517_expr);
	};
	_1a470b007_pushErr(&(*_self_), _104617_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1a47158a2_build(_1a4709d19_scopeParser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _110329_tokens, jule::Ptr<_1a3119780_ScopeTree>& _110352_s) {
	if ((_110352_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1a4709885_splitStmts(_110329_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110352_s;
	while (((!(_1a470abd8_isLastSt(&(*_self_)))) && (!(_1a470a974_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1a47094de_stmt> _111121_st = _1a470b810_next(&(*_self_));;
			jule::Any _111221_data = _1a4715583_buildSt(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1a3119175_Stmt{._field_Token=_111121_st.get()._field_tokens[0LL], ._field_Data=_111221_data});;
			};
			if (_1a470a710_stopped(&(*_self_))) {
				goto _iter_end_1a7085890;
			};
		}
	_iter_next_1a7085890:;
	}
	_iter_end_1a7085890:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4709d19_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a4716ac3_pushErr(_1a47162cb_exprBuilder* _self_, jule::Ptr<_1ba1dbeab_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1a4726dbe_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _1a4716de2_pushSuggestion(_1a47162cb_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1a47271dd_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_1a310e610_TupleExpr> _1a4717200_buildTuple(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>& _5334_parts) {
	jule::Ptr<_1a310e610_TupleExpr> _5417_tuple = jule::new_ptr<_1a310e610_TupleExpr>(_1a310e610_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a310d983_Expr>>::alloc(0LL,_5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1a70a72c9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1a4720c20_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1a70a72c9:;
			++it;
			goto _iter_begin_1a70a72c9;
		}
		_iter_end_1a70a72c9:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_1a310e9b7_LitExpr> _1a471750d_buildLit(_1a47162cb_exprBuilder* _self_, jule::Ptr<_1ba1dbeab_Token> _6327_token) {
	return jule::new_ptr<_1a310e9b7_LitExpr>(_1a310e9b7_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a471781b_buildPrimitiveType(_1a47162cb_exprBuilder* _self_, jule::Ptr<_1ba1dbeab_Token>& _7038_token) {
	return _1a4736be2_buildPrimType(_7038_token);
}



inline jule::Any _1a4717b29_buildSingle(_1a47162cb_exprBuilder* _self_, jule::Ptr<_1ba1dbeab_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a70a9144:;
			{
				return static_cast<jule::Any>(_1a471750d_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a70a91aa:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1a31115ac_VariadicExpr>(_1a31115ac_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a70a9221:;
			{
				return static_cast<jule::Any>(_1a4721ec9_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a70a9287:;
			{
				return static_cast<jule::Any>(_1a471781b_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_1a70a8099:;
	};
	_1a4716ac3_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a31109eb_IdentExpr> _1a4717e37_buildCppLinkedIdent(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1a4716ac3_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ba1dbeab_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4716ac3_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a31109eb_IdentExpr> _10917_expr = _1a4721ec9_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_1a3111205_UnaryExpr> _1a4718245_buildUnary(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _11433_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1a4716ac3_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1ba1dc6b5_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1a4716ac3_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1a3111205_UnaryExpr>(_1a3111205_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_1a311228e_SubIdentExpr> _1a4718553_buildObjSubIdent(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1ba1dbeab_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a311228e_SubIdentExpr>(_1a311228e_SubIdentExpr{._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_1a3111d1b_NsSelectionExpr> _1a4718861_buildNsSubIdent(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _15039_tokens) {
	jule::Ptr<_1a3111d1b_NsSelectionExpr> _15117_ns = jule::new_ptr<_1a3111d1b_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1a70b5e86:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1a4716ac3_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1a4716de2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4716ac3_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1a4716de2_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a70b5e86:;
			++it;
			_15214_i++;
			goto _iter_begin_1a70b5e86;
		}
		_iter_end_1a70b5e86:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4718b6e_buildType(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1a3109462_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _1a47287d8_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_1a4716ac3_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1a4716ac3_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _1a4718e7c_buildSubIdent(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_1ba1dbeab_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a70bd8d9:;
			{
				return static_cast<jule::Any>(_1a4718553_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a70bde5b:;
			{
				return static_cast<jule::Any>(_1a4718861_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a70bdec2:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1a4718b6e_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_1a70bdcc4:;
	};
	_1a4716ac3_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a31115ac_VariadicExpr> _1a471928a_buildVariadic(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _20136_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1a31115ac_VariadicExpr>(_1a31115ac_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _1a4719598_buildOpRight(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _21036_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a70c33a0:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1a4720604_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_1a3112c51_FnCallExpr>>()) {
						_case_begin_1a70c4846:;
						{
							_21521_d.operator jule::Ptr<_1a3112c51_FnCallExpr>().get()._field_Exception=jule::new_ptr<_1a3119780_ScopeTree>(_1a3119780_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_1a70c479c:;
				};
			}
		}
		_match_end_1a70c3339:;
	};
	_1a4716ac3_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1a310dc6e_RangeExpr> _1a47198c8_buildBetweenParentheses(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1a4716ac3_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1a310dc6e_RangeExpr>(_1a310dc6e_RangeExpr{._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_1a3111964_CastExpr> _1a4719be7_tryBuildCast(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1a70c81da:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a70c910e:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1a70c81da;
							}
						}
						else {
							_case_begin_1a70c93ea:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1a70c91ca:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1a70c81da;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1ba1dbeab_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1a3111964_CastExpr> _27721_cast = jule::new_ptr<_1a3111964_CastExpr>(_1a3111964_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1a4716ac3_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1a4716de2_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1a4716ac3_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1a4716de2_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1a3109462_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _1a47287d8_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1a4716ac3_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1a47246c4_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_1a70c81da:;
			++it;
			_24513_i++;
			goto _iter_begin_1a70c81da;
		}
		_iter_end_1a70c81da:;
	};
	return nullptr;
}



inline void _1a471a0b0_pushArg(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a310d983_Expr>>& _31731_args, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _31750_tokens, jule::Ptr<_1ba1dbeab_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1a4720c20_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1a310d983_Expr>> _1a471a3bd_buildArgs(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1a70d7ea8:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a70d8c23:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1a70d900e:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1a70d8cde:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a70d7ea8;
				};
				_1a471a0b0_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1a70d7ea8:;
			++it;
			_33613_i++;
			goto _iter_begin_1a70d7ea8;
		}
		_iter_end_1a70d7ea8:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1a471a0b0_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1a471a0b0_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _1a471a6cb_buildCallGenerics(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _37418_parts;;
	jule::Slice<_1b9db24ab_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _1a4725241_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>::alloc(0LL,_37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1a70dc760:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1a70dc760;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1a3109462_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _1a47287d8_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_1a4716ac3_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1a70dc760:;
			++it;
			goto _iter_begin_1a70dc760;
		}
		_iter_end_1a70dc760:;
	};
	return _37517_generics;
}



inline jule::Ptr<_1a3112c51_FnCallExpr> _1a471ab2c_buildFnCall(_1a47162cb_exprBuilder* _self_, jule::Ptr<_1ba1dbeab_Token>& _39235_token, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _39255_expr, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _39276_args) {
	return jule::new_ptr<_1a3112c51_FnCallExpr>(_1a3112c51_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1a471a3bd_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _1a471ae3a_buildParenthesesRange(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _40045_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a70e3c94:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a70e45ad:;
						{
							jule::Ptr<_1a3111964_CastExpr> _40625_expr = _1a4719be7_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_1a70e43c1:;
				};
			}
		}
		_match_end_1a70e3c2d:;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _1a472496b_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1a47198c8_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_1a471ab2c_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_1a31101c1_UnsafeExpr> _1a471b248_buildUnsafeExpr(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _42138_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _42517_rangeTokens = _1a47246c4_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a31101c1_UnsafeExpr>(_1a31101c1_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_1a31210d3_FnDecl> _1a471b556_buildAnonFn(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _43635_tokens) {
	jule::Ptr<_1a31210d3_FnDecl> _43717_f = _1a472c930_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_1a3121435_IsAnon(_43717_f.ptr())))) {
		_1a4716ac3_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _1a471b864_buildUnsafe(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a70ebb26:;
			{
				return static_cast<jule::Any>(_1a471b556_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_1a70eb43e:;
			{
				return static_cast<jule::Any>(_1a471b248_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_1a70eb384:;
	};
}



inline void _1a471bc2c_pushRangeLitPart(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _45539_part, jule::Ptr<_1ba1dbeab_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a471c05c_getBraceRangeLitExprParts(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1a7100d28:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7101a93:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1a7101d7e:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1a7101b5e:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a7100d28;
				};
				_1a471bc2c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1a7100d28:;
			++it;
			_47713_i++;
			goto _iter_begin_1a7100d28;
		}
		_iter_end_1a7100d28:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1a471bc2c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1a471bc2c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_1a31136d0_FieldExprPair> _1a471c37b_buildFieldExprPair(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a31136d0_FieldExprPair> _51317_pair = jule::new_ptr<_1a31136d0_FieldExprPair>(_1a31136d0_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_1a310d983_Expr> _1a471c689_buildStructLitExpr(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _52142_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1a310d983_Expr>(_1a310d983_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1a471c37b_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _1a4720c20_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_1a310d983_Expr>> _1a471c997_buildStructLitExprs(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _53717_parts = _1a471c05c_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a310d983_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1a310d983_Expr>>::alloc(0LL,_53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1a710b95a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1a471c689_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1a710b95a:;
			++it;
			goto _iter_begin_1a710b95a;
		}
		_iter_end_1a710b95a:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_1a3113e2d_StructLit> _1a471ccc7_buildTypedStructLiteral(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1a3109462_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _1a47287d8_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1a4716ac3_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1ba1dbeab_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1a4716ac3_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a3113e2d_StructLit>(_1a3113e2d_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1a471c997_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_1a310d983_Expr> _1a471d0e6_buildBraceLitPart(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _1a472198a_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1a310d983_Expr>(_1a310d983_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a3114db8_KeyValPair>(_1a3114db8_KeyValPair{._field_Key=_1a4720c20_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1a4720c20_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _1a4720c20_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_1a31143a1_BraceLit> _1a471d404_buildBraceLit(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _59037_tokens) {
	jule::Ptr<_1a31143a1_BraceLit> _59117_lit = jule::new_ptr<_1a31143a1_BraceLit>(_1a31143a1_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _59617_parts = _1a471c05c_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1a310d983_Expr>>::alloc(0LL,_59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1a7115ea3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1a471d0e6_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1a7115ea3:;
			++it;
			goto _iter_begin_1a7115ea3;
		}
		_iter_end_1a7115ea3:;
	};
	return _59117_lit;
}



inline jule::Any _1a471d712_buildBraceRange(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _1a4722271_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1a7117a43:;
			{
				return static_cast<jule::Any>(_1a471d404_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1a7117aba:;
			{
				_1a4716ac3_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a71179aa:;
	};
	jule::Ptr<_1ba1dbeab_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1a4720604_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_1a3112c51_FnCallExpr>>()) {
				_case_begin_1a711b23e:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _63225_rangeTokens = _1a47246c4_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_1a3112c51_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_1a3112c51_FnCallExpr>();;
					if (_1a3113328_Ignored(_63325_model.ptr())) {
						_1a4716ac3_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1a4716de2_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1a4727e36_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_1a711ac55:;
				{
					_1a4716ac3_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1a711ab56:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a7120430:;
			{
				return _1a471b864_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a7120496:;
			{
				return static_cast<jule::Any>(_1a471b556_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a712050c:;
			{
				return static_cast<jule::Any>(_1a471ccc7_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_1a711d609:;
			{
				_1a4716ac3_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a71201bb:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a471da20_getEnumerableParts(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _66318_parts;;
	jule::Slice<_1b9db24ab_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _1a4725241_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_1a311533b_SliceExpr> _1a471dd2d_buildSlice(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _66833_tokens) {
	jule::Ptr<_1a311533b_SliceExpr> _66917_slc = jule::new_ptr<_1a311533b_SliceExpr>(_1a311533b_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _67417_parts = _1a471da20_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1a310d983_Expr>>::alloc(0LL,_67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1a712614a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1a712614a;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1a4720c20_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1a712614a:;
			++it;
			goto _iter_begin_1a712614a;
		}
		_iter_end_1a712614a:;
	};
	return _66917_slc;
}



inline jule::Ptr<_1a3115bcc_IndexingExpr> _1a471e27e_buildIndexing(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _69113_tokens, jule::Ptr<_1ba1dbeab_Token> _69135_errorToken) {
	jule::Ptr<_1ba1dbeab_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a310d983_Expr> _69817_expr = _1a4720c20_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a310d983_Expr> _70217_index = _1a4720c20_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a3115bcc_IndexingExpr>(_1a3115bcc_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_1a31162d7_SlicingExpr> _1a471e823_buildSlicing(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _71463_start, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _71514_to, jule::Ptr<_1ba1dbeab_Token>& _71533_errorToken, jule::Ptr<_1ba1dbeab_Token> _71557_end) {
	jule::Ptr<_1a31162d7_SlicingExpr> _71617_slc = jule::new_ptr<_1a31162d7_SlicingExpr>(_1a31162d7_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1a4720c20_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1a4720c20_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1a4720c20_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _1a471eb31_buildBracketRange(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _73040_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _1a4722271_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1a471dd2d_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _1a472198a_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_1a471e823_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1a471e27e_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _1a471ee3e_buildData(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a713361e:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a7133685:;
			{
				return _1a4717b29_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a71336eb:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_1a4717e37_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_1a7133388:;
	};
	jule::Ptr<_1ba1dbeab_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1a471928a_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a7136ac8:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_1a4718b6e_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_1a4718245_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a7136c2c:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1a7136bb6;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_1ba1dbeab_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1a7136bb6;
					};
				};
				jule::Ptr<_1ba1dbeab_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1a7136bb6;
				};
				return static_cast<jule::Any>(_1a4718b6e_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_1a7136bb6:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a7135ec3:;
			{
				return _1a4718e7c_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a713cb45:;
			{
				return static_cast<jule::Any>(_1a4718b6e_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a713cbab:;
			{
				return _1a4719598_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a713cc22:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a713e62a:;
						{
							return _1a471ae3a_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a713e6a2:;
						{
							return _1a471d712_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a713e729:;
						{
							return _1a471eb31_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_1a713e086:;
				};
			}
		}
		_match_end_1a7137238:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_1a4718b6e_buildType(&(*_self_), _75533_tokens));
	};
	_1a4716ac3_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _1a47202e6_buildBinop(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_1ba1dbeab_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_1a4721072_isTypeOp(_83217_op.get()._field_Kind) && _1a472135d_isTypeRange(_83317_leftTokens))) {
		return static_cast<jule::Any>(_1a4718b6e_buildType(&(*_self_), _83134_tokens));
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1a4716ac3_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a4716de2_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_1a3112712_BinopExpr>(_1a3112712_BinopExpr{._field_Left=_1a4720c20_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_1a4720c20_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}));
}



inline jule::Any _1a4720604_build(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _1a4721c32_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1a471ee3e_buildData(&(*_self_), _85629_tokens);
	};
	return _1a47202e6_buildBinop(&(*_self_), _85629_tokens,_85713_i);
}



inline jule::Any _1a4720912_buildKind(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _86518_parts;;
	jule::Slice<_1b9db24ab_Log> _86525_errors;;
	std::tie(_86518_parts,_86525_errors) = _1a4725241_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;
	} else if ((_86518_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1a4717200_buildTuple(&(*_self_), _86518_parts));
	};
	return _1a4720604_build(&(*_self_), _86433_tokens);
}



inline jule::Ptr<_1a310d983_Expr> _1a4720c20_buildFromTokens(_1a47162cb_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1a310d983_Expr>(_1a310d983_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1a4720912_buildKind(&(*_self_), _87538_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1a47162cb_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4722b34_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a4726792_stop(_1a4726462_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1a4726a06_stopped(_1a4726462_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1a4726dbe_pushErr(_1a4726462_parser* _self_, jule::Ptr<_1ba1dbeab_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a47258c3_compilerErr(_28126_token,_28141_fmt,jule::Any(_28154_args)));;
}



inline void _1a47271dd_pushSuggestion(_1a4726462_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1a4725d02_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,jule::Any(_28646_args));
	};
}



inline jule::Ptr<_1a310d983_Expr> _1a47274eb_buildExpr(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _29034_tokens) {
	jule::Ptr<_1a47162cb_exprBuilder> _29117_ep = jule::new_ptr<_1a47162cb_exprBuilder>(_1a47162cb_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1a310d983_Expr> _29417_expr = _1a4720c20_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;
}



inline jule::Ptr<_1a30c5a27_Directive> _1a4727809_buildDirective(_1a4726462_parser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1a4726dbe_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1a4726dbe_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a30c5a27_Directive>(_1a30c5a27_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});
}



inline void _1a4727a7e_pushDirective(_1a4726462_parser* _self_, jule::Ptr<_1a30c5a27_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a7176772:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a7176772:;
			++it;
			goto _iter_begin_1a7176772;
		}
		_iter_end_1a7176772:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1a3119780_ScopeTree> _1a4727e36_buildScope(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _32635_tokens, jule::Ptr<_1ba1dbeab_Token> _32657_end) {
	jule::Ptr<_1a3119780_ScopeTree> _32717_s = _1a47083bc_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1a4709d19_scopeParser _32917_sp = _1a4709d19_scopeParser{._field_p=_self_, };;
	_1a47158a2_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;
}



inline std::tuple<jule::Ptr<_1a3109462_TypeDecl>,jule::Bool> _1a4728387__buildType(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	_1a4737176_typeBuilder _33817_tb = _1a4737176_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1a3109462_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok;;
	std::tie(_34418_decl,_34424_ok) = _1a473a421_build(&_33817_tb);
	return std::make_tuple(_34418_decl,_34424_ok);
}



inline std::tuple<jule::Ptr<_1a3109462_TypeDecl>,jule::Bool> _1a47287d8_buildType(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	jule::Ptr<_1ba1dbeab_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_1a3109462_TypeDecl> _35218_t;;
	jule::Bool _35221_ok;;
	std::tie(_35218_t,_35221_ok) = _1a4728387__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
	if ((_35022_err && (!(_35221_ok)))) {
		_1a4726dbe_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35218_t,_35221_ok);
}



inline jule::Ptr<_1a3125923_TypeAliasDecl> _1a4728ae6_buildTypeAliasDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3125923_TypeAliasDecl> _36517_tad = jule::new_ptr<_1a3125923_TypeAliasDecl>(_1a3125923_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1ba1dbeab_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;
	};
	jule::Ptr<_1a3109462_TypeDecl> _39018_t;;
	jule::Bool _39021_ok;;
	std::tie(_39018_t,_39021_ok) = _1a47287d8_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_1a4726dbe_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1a473610e_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;
}



inline void _1a4728e15_buildVarTypeAndExpr(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1a31220b2_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_1ba1dbeab_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1a4726dbe_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a3109462_TypeDecl> _40922_t;;
		jule::Bool _40925_ok;;
		std::tie(_40922_t,_40925_ok) = _1a47287d8_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1a4726dbe_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1a4726dbe_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_1a47274eb_buildExpr(_self_, _42421_exprTokens);
	} else {
		_1a4726dbe_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a4729234_buildVarCommon(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1a31220b2_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_1a473610e_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1a4728e15_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _1a47295ec_buildVarBegin(_1a4726462_parser* _self_, jule::Ptr<_1a31220b2_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _45164_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a7191c32:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_1a7192b78;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a7192b78:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_1a4726dbe_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a7192bde:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1a719221b:;
			{
				_1a4726dbe_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a71921a5:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_1a4726dbe_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a31220b2_VarDecl> _1a472990a_buildVar(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_1a31220b2_VarDecl> _48317_v = jule::new_ptr<_1a31220b2_VarDecl>(_1a31220b2_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1a47295ec_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1a4729234_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;
}



inline jule::Ptr<_1a3116a46_GenericDecl> _1a4729c18_buildGeneric(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _50337_tokens) {
	jule::Ptr<_1a3116a46_GenericDecl> _50417_g = jule::new_ptr<_1a3116a46_GenericDecl>(_1a3116a46_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1a4726dbe_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_1a4726dbe_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _52222_parts;;
		jule::Slice<_1b9db24ab_Log> _52229_errors;;
		std::tie(_52222_parts,_52229_errors) = _1a4724d56_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1a31165c3_Constraint>(_1a31165c3_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>::alloc(0LL,_52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_1a719edc7:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_1a3109462_TypeDecl> _53026_kind;;
					std::tie(_53026_kind,std::ignore) = _1a47287d8_buildType(_self_, _52825_part,(&(_52925_i)),true);
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1a4726dbe_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a719edc7:;
				++it;
				goto _iter_begin_1a719edc7;
			}
			_iter_end_1a719edc7:;
		};
	};
	return _50417_g;
}



inline jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _1a472a0c0_buildGenerics(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _54038_tokens, jule::Ptr<_1ba1dbeab_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _54618_parts;;
	jule::Slice<_1b9db24ab_Log> _54625_errors;;
	std::tie(_54618_parts,_54625_errors) = _1a4725241_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>::alloc(0LL,_54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_1a71a563b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1a4729c18_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_1a71a563b:;
			++it;
			goto _iter_begin_1a71a563b;
		}
		_iter_end_1a71a563b:;
	};
	return _55217_generics;
}



inline jule::Ptr<_1a3119e56_ParamDecl> _1a472a3cd_buildSelfParam(_1a4726462_parser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1a3119e56_ParamDecl> _56517_param = jule::new_ptr<_1a3119e56_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1a4726dbe_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1a4726dbe_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1a4726dbe_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;
}



inline void _1a472a796_paramTypeBegin(_1a4726462_parser* _self_, jule::Ptr<_1a3119e56_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_1a4726dbe_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1a71ac3ce;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_1a71ac3ce:;
	}
	_iter_end_1a71ac3ce:;;
}



inline void _1a472aab5_buildParamType(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1a3119e56_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1a472a796_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	std::tie(_61639_param.get()._field_Kind,std::ignore) = _1a47287d8_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
	if ((_61717_i < _61663_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a472add4_buildParamBody(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1a3119e56_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _62962_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1a472aab5_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_1a472aab5_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_1a3119e56_ParamDecl> _1a472b1e2_buildParam(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _64734_tokens) {
	jule::Ptr<_1a3119e56_ParamDecl> _64817_param = jule::new_ptr<_1a3119e56_ParamDecl>(_1a3119e56_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1a4726dbe_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1a4726dbe_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a472aab5_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_1a472add4_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;
}



inline void _1a472b467_checkParams(_1a4726462_parser* _self_, jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_1a71bc2ac:;
		if (it != expr.end()) {
			jule::Ptr<_1a3119e56_ParamDecl> _69121_param = *it;
			{
				if ((_1a311a2b9_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1a71bc2ac;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1a4726dbe_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }))});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1a71bc2ac:;
			++it;
			goto _iter_begin_1a71bc2ac;
		}
		_iter_end_1a71bc2ac:;
	};
}



inline jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>> _1a472b81e_buildParams(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _71118_parts;;
	jule::Slice<_1b9db24ab_Log> _71125_errs;;
	std::tie(_71118_parts,_71125_errs) = _1a4725241_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1a3119e56_ParamDecl> _71921_param = _1a472a3cd_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1a311a2b9_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_1a71c1de9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _72621_part = *it;
			{
				jule::Ptr<_1a3119e56_ParamDecl> _72721_param = _1a472b1e2_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1a71c1de9:;
			++it;
			goto _iter_begin_1a71c1de9;
		}
		_iter_end_1a71c1de9:;
	};
	_1a472b467_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;
}



inline std::tuple<jule::Ptr<_1a310c575_RetTypeDecl>,jule::Bool> _1a472bbc6_buildMultiRetType(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _73742_tokens, jule::I64& _73765_i) {
	jule::Ptr<_1a310c575_RetTypeDecl> _73775_t = jule::Ptr<_1a310c575_RetTypeDecl>();
	jule::Bool _73792_ok = jule::Bool();
	_73775_t=jule::new_ptr<_1a310c575_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		std::tie(_73775_t.get()._field_Kind,_73792_ok) = _1a47287d8_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
		return std::make_tuple(_73775_t,_73792_ok);
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _74717_rangeTokens = _1a47246c4_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _74918_parts;;
	jule::Slice<_1b9db24ab_Log> _74925_errs;;
	std::tie(_74918_parts,_74925_errs) = _1a4725241_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return std::make_tuple(_73775_t,_73792_ok);
	};
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>::alloc(0LL,_74918_parts.len());;
	_73775_t.get()._field_Idents=jule::Slice<jule::Ptr<_1ba1dbeab_Token>>::alloc(0LL,_74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_1a71c8be2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _75721_part = *it;
			{
				jule::Ptr<_1ba1dbeab_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1a4726dbe_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1a71c8be2;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_1ba1dbeab_Token> _77525_newToken = jule::new_ptr<_1ba1dbeab_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_77525_newToken);;
				} else {
					_73775_t.get()._field_Idents = jule::alloc_for_append(_73775_t.get()._field_Idents,1);_73775_t.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_1a3109462_TypeDecl> _78222_tk;;
				std::tie(_78222_tk,std::ignore) = _1a47287d8_buildType(_self_, _75721_part,(&(_75921_offset)),true);
				if ((_75921_offset < _75721_part.len())) {
					_1a4726dbe_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1a71c8be2:;
			++it;
			goto _iter_begin_1a71c8be2;
		}
		_iter_end_1a71c8be2:;
	};
	if ((_75517_types.len() > 1LL)) {
		_73775_t.get()._field_Kind=jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310b002_TupleTypeDecl>(_1a310b002_TupleTypeDecl{._field_Types=_75517_types}))});
	} else {
		_73775_t.get()._field_Kind=_75517_types[0LL];
	};
	_73792_ok=true;
	return std::make_tuple(_73775_t,_73792_ok);
}



inline std::tuple<jule::Ptr<_1a310c575_RetTypeDecl>,jule::Bool> _1a472c07d_buildRetType(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _80537_tokens, jule::I64& _80560_i) {
	jule::Ptr<_1a310c575_RetTypeDecl> _80570_t = jule::Ptr<_1a310c575_RetTypeDecl>();
	jule::Bool _80587_ok = jule::Bool();
	_80570_t=jule::new_ptr<_1a310c575_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return std::make_tuple(_80570_t,_80587_ok);
	};
	jule::Ptr<_1ba1dbeab_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a71d7294:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a71d7629:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_80570_t,_80587_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a71d76a1:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_1a4726dbe_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_80570_t,_80587_ok);
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a71da330:;
							{
								std::tie(_80570_t,_80587_ok) = _1a472bbc6_buildMultiRetType(_self_, _80537_tokens,_80560_i);
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a71da3a7:;
							{
								_1a4726dbe_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_80570_t,_80587_ok);
							}
						}
						_match_end_1a71da132:;
					};
				};
				std::tie(_80570_t.get()._field_Kind,_80587_ok) = _1a47287d8_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
				return std::make_tuple(_80570_t,_80587_ok);
			}
		}
		_match_end_1a71d6914:;
	};
	(_80560_i)++;
	_1a4726dbe_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_80570_t,_80587_ok);
}



inline jule::Ptr<_1a31210d3_FnDecl> _1a472c4ce_buildFnPrototype(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1a31210d3_FnDecl> _85117_f = jule::new_ptr<_1a31210d3_FnDecl>(_1a31210d3_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ba1dbeab_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1ba1dbeab_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _89717_genericsTokens = _1a47246c4_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1a472a0c0_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_1a4726dbe_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _90717_paramsToks = _1a47246c4_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1a472b81e_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_1ba1dbeab_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_1a473610e_isPub(_85117_f.get()._field_Ident);
	std::tie(_85117_f.get()._field_Result,std::ignore) = _1a472c07d_buildRetType(_self_, _85041_tokens,_85064_i);
	return _85117_f;
}



inline jule::Ptr<_1a31210d3_FnDecl> _1a472c930_buildFn(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1a31210d3_FnDecl> _92917_f = _1a472c4ce_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _94517_blockTokens = _1a47246c4_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1a4727e36_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _92917_f;
}



inline jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _1a472cc3d_getUseDeclSelectors(_1a4726462_parser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1a47246c4_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _96418_parts;;
	jule::Slice<_1b9db24ab_Log> _96425_errs;;
	std::tie(_96418_parts,_96425_errs) = _1a4725241_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _97017_selectors = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>::alloc(0LL,_96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_1a7202b72:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1a4726dbe_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ba1dbeab_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1a4726dbe_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1a47271dd_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1a7202b72;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1a7202b72:;
			++it;
			goto _iter_begin_1a7202b72;
		}
		_iter_end_1a7202b72:;
	};
	return _97017_selectors;
}



inline void _1a472d05c_buildCppUseDecl(_1a4726462_parser* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_1a4726dbe_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ba1dbeab_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1a4726dbe_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1a472d37b_buildStdUseDecl(_1a4726462_parser* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_1ba1dbeab_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a720bd57:;
			{
				_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a720bdce:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _101921_selectors = nullptr;;
				std::tie(_99959_tokens,_101921_selectors) = _1a472496b_rangeLast(_99959_tokens);
				_99939_decl.get()._field_Selected=_1a472cc3d_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a720be56:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_1a720bcd0:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1a4726099_tokstoa(_99959_tokens));
}



inline void _1a472d69a_buildIdentUseDecl(_1a4726462_parser* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_1ba1dbeab_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a7216d84:;
			{
				_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a7217659:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _107521_selectors = nullptr;;
				std::tie(_106161_tokens,_107521_selectors) = _1a472496b_rangeLast(_106161_tokens);
				_106141_decl.get()._field_Selected=_1a472cc3d_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a72176c0:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1a4726dbe_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_1a721734b:;
	};
	_106141_decl.get()._field_LinkPath=_1a4726099_tokstoa(_106161_tokens);
}



inline void _1a472d9b9_parseUseDecl(_1a4726462_parser* _self_, jule::Ptr<_1a3126d0e_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_1a472d05c_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_1ba1dbeab_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1a4726dbe_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1a47271dd_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1a72244ac:;
			{
				_1a472d37b_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_1a72266bd:;
			{
				_1a472d69a_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_1a7226657:;
	};
}



inline jule::Ptr<_1a3126d0e_UseDecl> _1a472dd71_buildUseDecl(_1a4726462_parser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_1a3126d0e_UseDecl> _115917_decl = jule::new_ptr<_1a3126d0e_UseDecl>(_1a3126d0e_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1a4726dbe_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1a472d9b9_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a472e228_buildTypeEnumItemKind(jule::Ptr<_1a4726462_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a722ae0e:;
						{
							(_117317_braceN)++;
							goto _iter_next_1a722a749;
						}
					}
					else {
						_case_begin_1a722b816:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1a722b5e6:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1a722a749;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1a3109462_TypeDecl> _119926_kind;;
				std::tie(_119926_kind,std::ignore) = _1a47287d8_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
				if ((_119825_j < _119225_kindTokens.len())) {
					_1a4726dbe_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;
			};
		}
	_iter_next_1a722a749:;
	}
	_iter_end_1a722a749:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>> _1a472e536_buildTypeEnumItems(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_1a31287b1_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1a31287b1_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1a4726dbe_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1a72319a3;
					};
				};
			};
			_121421_item.get()._field_Kind=_1a472e228_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1a72319a3:;
	}
	_iter_end_1a72319a3:;;
	return _121017_items;
}



inline jule::Ptr<_1a31289ae_TypeEnumDecl> _1a472e844_buildTypeEnumDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1a31289ae_TypeEnumDecl> _123517_e = jule::new_ptr<_1a31289ae_TypeEnumDecl>(_1a31289ae_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _124517_itemTokens = _1a47246c4_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;
	} else if ((_123417_i < _123342_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1a473610e_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1a472e536_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;
}



inline jule::Ptr<_1a310d983_Expr> _1a472ebeb_buildEnumItemExpr(jule::Ptr<_1a4726462_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a723cdee:;
						{
							(_126117_braceN)++;
							goto _iter_next_1a723c739;
						}
					}
					else {
						_case_begin_1a723d806:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1a723d5d6:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1a723c739;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1a47274eb_buildExpr(_self_, _128025_exprTokens);
			};
		}
	_iter_next_1a723c739:;
	}
	_iter_end_1a723c739:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>> _1a4730009_buildEnumItems(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_1a3127282_EnumItemDecl> _129721_item = jule::new_ptr<_1a3127282_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1a4726dbe_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1a7242442;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1a4726dbe_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1a7242442;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1a4726dbe_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1a7242442;
			};
			_129721_item.get()._field_Expr=_1a472ebeb_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1a7242442:;
	}
	_iter_end_1a7242442:;;
	return _129317_items;
}



inline jule::Ptr<_1a3127caa_EnumDecl> _1a4730317_buildEnumDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3127caa_EnumDecl> _133417_e = jule::new_ptr<_1a3127caa_EnumDecl>(_1a3127caa_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;
		};
		std::tie(_133417_e.get()._field_Kind,std::ignore) = _1a47287d8_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
		if ((_134217_i >= _132938_tokens.len())) {
			_1a4726792_stop(_self_.ptr());
			_1a4726dbe_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _135917_itemTokens = _1a47246c4_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1a473610e_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1a4730009_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;
}



inline jule::Any _1a4730625_buildNodeEnumDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1a472e844_buildTypeEnumDecl(_self_, _137442_tokens));
		};
	};
	return static_cast<jule::Any>(_1a4730317_buildEnumDecl(_self_, _137442_tokens));
}



inline jule::Ptr<_1a312900e_FieldDecl> _1a4730933_buildField(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _138334_tokens) {
	jule::Ptr<_1a312900e_FieldDecl> _138417_f = jule::new_ptr<_1a312900e_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1a4726dbe_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	std::tie(_138417_f.get()._field_Kind,std::ignore) = _1a47287d8_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_1ba1dbeab_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1a4726dbe_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1a47274eb_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_1a473610e_isPub(_138417_f.get()._field_Ident);
	return _138417_f;
}



inline jule::Slice<jule::Ptr<_1a312900e_FieldDecl>> _1a4730c41_buildStructDeclFields(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1a312900e_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a47094de_stmt>> _143417_stmts = _1a4709885_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_1a7260905:;
		if (it != expr.end()) {
			jule::Ptr<_1a47094de_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1a312900e_FieldDecl> _143721_f = _1a4730933_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1a7260905:;
			++it;
			goto _iter_begin_1a7260905;
		}
		_iter_end_1a7260905:;
	};
	return _143317_fields;
}



inline jule::Ptr<_1a312986c_StructDecl> _1a473104e_buildStructDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1a312986c_StructDecl> _145017_s = jule::new_ptr<_1a312986c_StructDecl>(_1a312986c_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1ba1dbeab_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _146517_genericsTokens = _1a47246c4_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1a472a0c0_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _147517_bodyTokens = _1a47246c4_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1a473610e_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_1a4730c41_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;
}



inline void _1a47312c4_checkMethodReceiver(_1a4726462_parser* _self_, jule::Ptr<_1a31210d3_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _1a311a2b9_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_1a4726dbe_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_1a4726dbe_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3119e56_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_1a311a2b9_IsSelf(_150313_param.ptr())))) {
		_1a4726dbe_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1a31210d3_FnDecl>> _1a47315d2_buildTraitMethods(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_1a31210d3_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_1a47094de_stmt>> _151217_stmts = _1a4709885_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_1a7270b68:;
		if (it != expr.end()) {
			jule::Ptr<_1a47094de_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1a7270b68;
				};
				jule::Ptr<_1a31210d3_FnDecl> _151821_f = _1a472c930_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_1a3121435_IsAnon(_151821_f.ptr())) {
						_1a4726dbe_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1a47312c4_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_1a4726dbe_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1a7270b68:;
			++it;
			goto _iter_begin_1a7270b68;
		}
		_iter_end_1a7270b68:;
	};
	return _151117_methods;
}



inline jule::Ptr<_1a3129e77_TraitDecl> _1a47318e0_buildTraitDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3129e77_TraitDecl> _153817_t = jule::new_ptr<_1a3129e77_TraitDecl>(_1a3129e77_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _154717_bodyTokens = _1a47246c4_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_1a473610e_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_1a47315d2_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;
}



inline jule::Ptr<_1a31210d3_FnDecl> _1a4731bed_buildCppLinkFn(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_1a31210d3_FnDecl> _156517_f = _1a472c930_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_1a3121435_IsAnon(_156517_f.ptr())) {
			_1a4726dbe_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;
}



inline jule::Ptr<_1a31220b2_VarDecl> _1a473200b_buildCppLinkVar(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_1a31220b2_VarDecl> _157817_v = _1a472990a_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_1a4726dbe_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;
}



inline jule::Ptr<_1a312986c_StructDecl> _1a4732319_buildCppLinkStruct(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_1a312986c_StructDecl> _159117_s = _1a473104e_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1a728131b:;
			if (it != expr.end()) {
				jule::Ptr<_1a312900e_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1a728131b:;
				++it;
				goto _iter_begin_1a728131b;
			}
			_iter_end_1a728131b:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;
}



inline jule::Ptr<_1a3125923_TypeAliasDecl> _1a4732627_buildCppLinkTypeAlias(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_1a3125923_TypeAliasDecl> _160517_t = _1a4728ae6_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;
}



inline jule::Ptr<_1a3126d0e_UseDecl> _1a4732935_buildCppLinkUse(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _1a472dd71_buildUseDecl(_self_.ptr(), _161339_tokens,true);
}



inline jule::Any _1a4732c43_buildCppLink(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _162437_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a7285ee1:;
			{
				return static_cast<jule::Any>(_1a4731bed_buildCppLinkFn(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a7287102:;
			{
				return static_cast<jule::Any>(_1a473200b_buildCppLinkVar(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a7287168:;
			{
				return static_cast<jule::Any>(_1a4732319_buildCppLinkStruct(_self_, _162437_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a72871ce:;
			{
				return static_cast<jule::Any>(_1a4732627_buildCppLinkTypeAlias(_self_, _162437_tokens));
			}
		}
		else {
			_case_begin_1a7286e8c:;
			{
				_1a4726dbe_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7285aa1:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31210d3_FnDecl> _1a4733051_getMethod(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_1ba1dbeab_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1a4726dbe_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1a4726dbe_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a31210d3_FnDecl> _167417_f = _1a472c930_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _1a3121435_IsAnon(_167417_f.ptr()))) {
		_1a4726dbe_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;
}



inline void _1a4733370_parseImplBody(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1a312a582_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_1a47094de_stmt>> _168217_stmts = _1a4709885_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_1a72908e1:;
		if (it != expr.end()) {
			jule::Ptr<_1a47094de_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_1ba1dbeab_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1a729124e:;
						{
							_1a4727a7e_pushDirective(_self_.ptr(), _1a4727809_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_1a72908e1;
						}
					}
					_match_end_1a7291b23:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1a7292c45:;
						{
							jule::Ptr<_1a31220b2_VarDecl> _169425_v = _1a472990a_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1a7291ccc:;
						{
							jule::Ptr<_1a31210d3_FnDecl> _170125_f = _1a4733051_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_1a47312c4_checkMethodReceiver(_self_.ptr(), _170125_f);
								_1a4733c11_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1a7292151:;
						{
							_1a4726dbe_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1a72908e1;
						}
					}
					_match_end_1a729233d:;
				};
			}
			_iter_next_1a72908e1:;
			++it;
			goto _iter_begin_1a72908e1;
		}
		_iter_end_1a72908e1:;
	};
}



inline jule::Ptr<_1a312a582_Impl> _1a473367d_buildImpl(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _171433_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_1a3109462_TypeDecl> _172318_base;;
	jule::Bool _172328_ok;;
	std::tie(_172318_base,_172328_ok) = _1a47287d8_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a312a582_Impl> _173217_ipl = jule::new_ptr<_1a312a582_Impl>(_1a312a582_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173217_ipl.get()._field_Base,_173217_ipl.get()._field_Dest) = std::make_tuple(_173217_ipl.get()._field_Dest,_173217_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173217_ipl.get()._field_Dest,_172328_ok) = _1a47287d8_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
	if ((!(_172328_ok))) {
		return nullptr;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _177017_bodyTokens = _1a47246c4_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_1a4726792_stop(_self_.ptr());
		_1a4726dbe_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_1a4726dbe_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_1a4733370_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;
}



inline jule::Any _1a473398b_buildNodeData(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _178538_tokens) {
	jule::Ptr<_1ba1dbeab_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a72a3cab:;
			{
				jule::Ptr<_1a31210d3_FnDecl> _179021_f = _1a472c930_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_1a3121435_IsAnon(_179021_f.ptr())) {
						_1a4726dbe_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a72a3d22:;
			{
				return static_cast<jule::Any>(_1a472990a_buildVar(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a72a455e:;
			{
				return static_cast<jule::Any>(_1a4728ae6_buildTypeAliasDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a72a45c5:;
			{
				return _1a4730625_buildNodeEnumDecl(_self_, _178538_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a72a463b:;
			{
				return static_cast<jule::Any>(_1a473104e_buildStructDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1a72a46a2:;
			{
				return static_cast<jule::Any>(_1a47318e0_buildTraitDecl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a72a4718:;
			{
				return static_cast<jule::Any>(_1a473367d_buildImpl(_self_, _178538_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a72a47c3:;
			{
				return _1a4732c43_buildCppLink(_self_, _178538_tokens);
			}
		}
		else {
			_case_begin_1a72a3b9b:;
			{
				_1a4726dbe_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a72a3b35:;
	};
}



inline void _1a4733c11_applyFnMeta(_1a4726462_parser* _self_, jule::Ptr<_1a31210d3_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1a4733e86_applyMeta(_1a4726462_parser* _self_, _1a30c562b_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1a31220b2_VarDecl>>()) {
			_case_begin_1a72aa5dc:;
			{
				jule::Ptr<_1a31220b2_VarDecl> _182921_v = _182633_node._field_Data.operator jule::Ptr<_1a31220b2_VarDecl>();;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31210d3_FnDecl>>()) {
			_case_begin_1a72aa664:;
			{
				jule::Ptr<_1a31210d3_FnDecl> _183621_f = _182633_node._field_Data.operator jule::Ptr<_1a31210d3_FnDecl>();;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_1a4733c11_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a312986c_StructDecl>>()) {
			_case_begin_1a72aa6db:;
			{
				jule::Ptr<_1a312986c_StructDecl> _184221_sd = _182633_node._field_Data.operator jule::Ptr<_1a312986c_StructDecl>();;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1a72aa3cd:;
	};
}



inline void _1a473420b_pushUseDecl(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1a3126d0e_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1a47271dd_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a4734519_pushMetaNodes(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a72b1747:;
			{
				;
				jule::Ptr<_1a3126d0e_UseDecl> _186321_decl = _1a472dd71_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_1a473420b_pushUseDecl(_self_, _186321_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a72b17ad:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1a3126d0e_UseDecl> _186825_decl = _1a4732935_buildCppLinkUse(_self_, _185938_tokens);;
					_1a473420b_pushUseDecl(_self_, _186825_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a72b1835:;
			{
				_1a4727a7e_pushDirective(_self_.ptr(), _1a4727809_buildDirective(_self_.ptr(), _185938_tokens));
				return true;
			}
		}
		_match_end_1a72b1648:;
	};
	return false;
}



inline _1a30c562b_Node _1a4734827_parseNode(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _187934_st) {
	_1a30c562b_Node _188017_node = _1a30c562b_Node{._field_Token=_187934_st[0LL], };;
	if (_1a4734519_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;
	};
	jule::Any _188817_data = _1a473398b_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;
	};
	_188017_node._field_Data=_188817_data;
	_1a4733e86_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;
}



inline void _1a4734a9c_appendNode(jule::Ptr<_1a4726462_parser> _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_1a30c562b_Node _190717_node = _1a4734827_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _1a4726a06_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _1a473500e_removeRange(_1a4726462_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _1a47254d8_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_1ba1dbeab_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1a72bb840;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_1a72bb840;
		}
	_iter_next_1a72bb840:;
	}
	_iter_end_1a72bb840:;;
}



inline void _1a47353c7_pushWrongOrderCloseErr(_1a4726462_parser* _self_, jule::Ptr<_1ba1dbeab_Token>& _192642_t, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a72bdaea:;
			{
				_1a4726dbe_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a72bdb72:;
			{
				_1a4726dbe_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a72bdbe9:;
			{
				_1a4726dbe_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a72bd9b8:;
	};
}



inline void _1a4735839_pushRangeClose(_1a4726462_parser* _self_, jule::Ptr<_1ba1dbeab_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a72c1922:;
				{
					_1a4726dbe_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a72c1999:;
				{
					_1a4726dbe_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a72c1a21:;
				{
					_1a4726dbe_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1a72c1867:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_1a47353c7_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_1a473500e_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _1a4735aae_checkRanges(_1a4726462_parser* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_1a72c4e42:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1a72c4e42;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a72c62d9:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a72c6350:;
						{
							_1a4735839_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a72c63b6:;
						{
							_1a4735839_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a72c642c:;
						{
							_1a4735839_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_1a72c5b02:;
				};
			}
			_iter_next_1a72c4e42:;
			++it;
			_195813_i++;
			goto _iter_begin_1a72c4e42;
		}
		_iter_end_1a72c4e42:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_1a72c4dcb:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_1ba1dbeab_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a72c8c04:;
						{
							_1a4726dbe_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a72c8c6a:;
						{
							_1a4726dbe_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a72c8ce2:;
						{
							_1a4726dbe_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1a72c8b7c:;
				};
			}
			_iter_next_1a72c4dcb:;
			++it;
			goto _iter_begin_1a72c4dcb;
		}
		_iter_end_1a72c4dcb:;
	};
}



inline void _1a4735d34_parse(jule::Ptr<_1a4726462_parser> _self_, jule::Ptr<_1ba1e2346_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_1a30c48a0_Ast>(_1a30c48a0_Ast{._field_File=_198930_f, });
	_1a4735aae_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a47094de_stmt>> _199917_stmts = _1a4709885_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1a47094de_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1a72cc09d;
			};
			if ((!(_1b9db43d1_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1a72cc09d;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1a4727809_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1a72cc09d:;
	}
	_iter_end_1a72cc09d:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1a47094de_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_1a4734a9c_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_1a4726a06_stopped(_self_.ptr())) {
				goto _iter_end_1a72d038c;
			};
		}
	_iter_next_1a72d038c:;
	}
	_iter_end_1a72d038c:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a4726dbe_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a4726462_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1a473774d_pushErr(_1a4737176_typeBuilder* _self_, jule::Ptr<_1ba1dbeab_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_1a4726dbe_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1a4737a6c_pushSuggestion(_1a4737176_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_1a47271dd_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,jule::Any(_4846_args));
	};
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4737cd1_buildPrim(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1a3109462_TypeDecl> _5517_t = _1a4736be2_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4738045_buildNamespace(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1a3109462_TypeDecl> _6117_t = jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1a310a52e_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1a310a52e_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1a473774d_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_1a4737a6c_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1a72d674a;
			};
			(_6617_n)++;
		}
	_iter_next_1a72d674a:;
	}
	_iter_end_1a72d674a:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_1a4738782_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=static_cast<jule::Any>(_6517_nst);
	return _6117_t;
}



inline jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _1a47382a9_buildGenerics(_1a4737176_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1ba1dbeab_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _9917_parts = _1a473851d_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_1a473774d_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a3109462_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1a3109462_TypeDecl>>::alloc(0LL,_9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_1a72ddee4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_1a3109462_TypeDecl> _10822_t;;
				std::tie(_10822_t,std::ignore) = _1a47287d8_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
				if ((_10721_j < _10621_part.len())) {
					_1a473774d_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1a72ddee4:;
			++it;
			goto _iter_begin_1a72ddee4;
		}
		_iter_end_1a72ddee4:;
	};
	return _10517_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a473851d_identGenerics(_1a4737176_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a72e3878:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a72e3900:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1a72e3614:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1a72e2426;
			};
		}
	_iter_next_1a72e2426:;
	}
	_iter_end_1a72e2426:;;
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _13618_parts;;
	jule::Slice<_1b9db24ab_Log> _13625_errors;;
	std::tie(_13618_parts,_13625_errors) = _1a4725241_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4738782_buildIdent(_1a4737176_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1a4738045_buildNamespace(&(*_self_));
	};
	jule::Ptr<_1ba1dbeab_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1a3109a28_IdentTypeDecl> _14917_it = jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1a3109462_TypeDecl> _15517_itd = jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_14917_it)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1a47382a9_buildGenerics(&(*_self_));
		return _15517_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1a473774d_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a473774d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;
	};
	jule::Ptr<_1a310a177_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1a310a177_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1a3109462_TypeDecl> _17417_ident = _1a4738782_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a3109a28_IdentTypeDecl>>()) {
			_case_begin_1a72ee4ee:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.operator jule::Ptr<_1a3109a28_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310a177_SubIdentTypeDecl>>()) {
			_case_begin_1a72ee565:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.operator jule::Ptr<_1a310a177_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1a72ee466:;
	};
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_17217_sit)});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a47389e6_buildCppLink(_1a4737176_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1a473774d_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1a3109462_TypeDecl> _19317_t = _1a4738782_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.operator jule::Ptr<_1a3109a28_IdentTypeDecl>().get()._field_CppLinked=true;
	return _19317_t;
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4738c5a_buildFn(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1a31210d3_FnDecl> _20017_f = _1a472c4ce_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1a3121435_IsAnon(_20017_f.ptr())))) {
		_1a473774d_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_19917_token, ._field_Kind=static_cast<jule::Any>(_20017_f)});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4738ebe_buildPtr(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1a473774d_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310b2dd_PtrTypeDecl>(_1a310b2dd_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_1a3109462_TypeDecl> _23117_elem = _1a473a1ac_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310b2dd_PtrTypeDecl>(_1a310b2dd_PtrTypeDecl{._field_Elem=_23117_elem}))});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4739233_buildSptr(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1a473774d_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1a3109462_TypeDecl> _25217_elem = _1a473a1ac_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_24517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310a81a_SptrTypeDecl>(_1a310a81a_SptrTypeDecl{._field_Elem=_25217_elem}))});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4739497_buildOp(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a730d61d:;
			{
				return _1a4738ebe_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a730d684:;
			{
				return _1a4739233_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a730d6ea:;
			{
				return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310a81a_SptrTypeDecl>(_1a310a81a_SptrTypeDecl{._field_Elem=_1a4739233_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1a730d5a7:;
			{
				_1a473774d_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a730d541:;
	};
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a473970b_buildSlc(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1a3109462_TypeDecl> _28717_elem = _1a473a1ac_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_28517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a310ac16_SlcTypeDecl>(_1a310ac16_SlcTypeDecl{._field_Elem=_28717_elem}))});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4739970_buildArr(_1a4737176_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _30017_exprTokens = _1a47246c4_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1a473774d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1a3109462_TypeDecl> _30617_elem = _1a473a1ac_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a310b970_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1a310b970_ArrTypeDecl>(_1a310b970_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_1ba1dbeab_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1a47274eb_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_31517_token, ._field_Kind=static_cast<jule::Any>(_31117_arrt)});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4739bd4_buildMap(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1a473774d_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _33717_keyTokens = _1a47246c4_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1a473774d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1a473774d_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1a310c1bd_MapTypeDecl> _34617_mapt = jule::new_ptr<_1a310c1bd_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_1a3109462_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok;;
	std::tie(_34818_keyt,_34828_ok) = _1a47287d8_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1a473774d_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1a3109462_TypeDecl> _35618_valt;;
	std::tie(_35618_valt,_34828_ok) = _1a47287d8_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_34828_ok))) {
		return nullptr;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=static_cast<jule::Any>(_34617_mapt)});
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4739e48_buildEnumerable(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1a473774d_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1a473970b_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	return _1a4739970_buildArr(&(*_self_));
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a473a1ac_step(_1a4737176_typeBuilder* _self_) {
	jule::Ptr<_1ba1dbeab_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a7323ed5:;
			{
				return _1a4737cd1_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a7323842:;
			{
				return _1a4738782_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a73238a8:;
			{
				return _1a47389e6_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a732391e:;
			{
				return _1a4738c5a_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a732436a:;
			{
				return _1a4739497_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a73243d1:;
			{
				return _1a4739e48_buildEnumerable(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a7324447:;
			{
				return _1a4739bd4_buildMap(&(*_self_));
			}
		}
		else {
			_case_begin_1a7323743:;
			{
				((*((*_self_)._field_i)))++;
				_1a473774d_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a73236cc:;
	};
}



inline std::tuple<jule::Ptr<_1a3109462_TypeDecl>,jule::Bool> _1a473a421_build(_1a4737176_typeBuilder* _self_) {
	jule::Bool _41044_ok = jule::Bool();
	jule::Ptr<_1a3109462_TypeDecl> _41117_root = _1a473a1ac_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		_41044_ok = false;
		return std::make_tuple(_1a473697d_buildVoidType(),_41044_ok);
	};
	_41044_ok = true;
	return std::make_tuple(_41117_root,_41044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1a4737176_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c82a0836_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c82a21d9_pushErr(_1c82a1b89_directiveEval* _self_, jule::Ptr<_1ba1dbeab_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1b9db28eb_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1c82a2591_splitOperans(_1c82a1b89_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a735172c:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1a73505c7;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a73517a4:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1a7351562:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1a73505c7;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1a73505c7:;
	}
	_iter_end_1a73505c7:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1c82a21d9_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1c82a289e_evalDirectiveIdent(_1c82a1b89_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a73549e9:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1a73549e9:;
			++it;
			goto _iter_begin_1a73549e9;
		}
		_iter_end_1a73549e9:;
	};
	return false;
}



inline jule::Bool _1c82a2bac_evalDirectivePart(_1c82a1b89_directiveEval* _self_, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1c82a21d9_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1c82a289e_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1c82a2e21_eval(_1c82a1b89_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1c82a21d9_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _11317_logicalOrParts = _1c82a2591_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1a735b050:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _12021_logicalAndParts = _1c82a2591_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1a735c7d2:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1ba1dbeab_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1ba1dbeab_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1c82a21d9_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1c82a2bac_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1a735c7d2:;
						++it;
						goto _iter_begin_1a735c7d2;
					}
					_iter_end_1a735c7d2:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1a735b050:;
			++it;
			goto _iter_begin_1a735b050;
		}
		_iter_end_1a735b050:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1c82a1b89_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4156cc7_JuleImporter> static__1a41b38a0_New(_1c82a0836_CompileInfo _5819_info) {
	jule::Ptr<_1a4156cc7_JuleImporter> _5917_imp = jule::new_ptr<_1a4156cc7_JuleImporter>(_1a4156cc7_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1b9deb1d7_PathStdlib}), });;
	_1c82a1150_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>> _1a41c5285_AllPackages(_1a4156cc7_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1a41d0a43_SetModPath(_1a4156cc7_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1a42067c2_GetModPath(_1a4156cc7_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1a42b9a83_ModById(_1a4156cc7_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a42cb358_GetImport(_1a4156cc7_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1a7365367:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_1a7365367:;
			++it;
			goto _iter_begin_1a7365367;
		}
		_iter_end_1a7365367:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1a30c48a0_Ast>>,jule::Slice<_1b9db24ab_Log>> _1a42d6ece_ImportPackage(_1a4156cc7_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_1d2a84044_DirEntry>> _9717_dirents = ({
		auto except = static__1b9d3908c_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1b9db24ab_Log>::make({_1a4151365_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1c82b1e1e_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_1b9db24ab_Log> _10525_errs = _1c82b21a5_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1a30c48a0_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1a30c48a0_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1a73699cb:;
		if (it != expr.end()) {
			jule::Ptr<_1d2a84044_DirEntry> _11316_dirent = *it;
			{
				if ((_1d299dc3e_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1b9d2bdb5_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1a73699cb;
				};
				jule::Str _11917__path = _1b9d361aa_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1ba1e2346_File> _12021_file = _1ba1e3875_NewFileSet(_11917__path);;
				_1ba1e29c8_Fill(_12021_file.ptr(), _1c837517a_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1b9db24ab_Log> _12221_errors = _1ba1ee2a9_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1a46a7b0d_FileInfo> _12721_finfo = _1a46aa7d1_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_1ba8ebb3d_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1a73699cb;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1b9db24ab_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1a434898b_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1a73699cb;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1a73699cb:;
			++it;
			goto _iter_begin_1a73699cb;
		}
		_iter_end_1a73699cb:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1a4335cca_Imported(_1a4156cc7_JuleImporter* _self_, jule::Ptr<_1a3e3409e_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1a7369da5:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1a7369da5:;
			++it;
			goto _iter_begin_1a7369da5;
		}
		_iter_end_1a7369da5:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1a73720ee:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1a73720ee:;
				++it;
				_16217_i++;
				goto _iter_begin_1a73720ee;
			}
			_iter_end_1a73720ee:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1b9db24ab_Log>> _1a434898b_isPassBuildDirectives(_1a4156cc7_JuleImporter* _self_, jule::Ptr<_1a30c48a0_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1a7375575:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1a7375575;
				};
				_1c82a1b89_directiveEval _18421_de = _1c82a1b89_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1c82a2e21_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1a7375575:;
			++it;
			goto _iter_begin_1a7375575;
		}
		_iter_end_1a7375575:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a4156cc7_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c8271c69_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7398873_isCommonOrdered(jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>& _1835_s, jule::Ptr<_1a30e9b8e_Struct> _1844_t) {
	jule::Ptr<_1a30e9b8e_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1a30e9b8e_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1a739b568:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1a739b568;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1a739b568:;
			++it;
			goto _iter_begin_1a739b568;
		}
		_iter_end_1a739b568:;
	};
	return false;
}

inline jule::Bool _1a73a2063_isCommonOrdered(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _1835_s, jule::Ptr<_1a3e59e4e_Var> _1844_t) {
	jule::Ptr<_1a3e59e4e_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1a3e59e4e_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1a73a4c14:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1a73a4c14;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1a73a4c14:;
			++it;
			goto _iter_begin_1a73a4c14;
		}
		_iter_end_1a73a4c14:;
	};
	return false;
}



inline void _1a739484c_orderCommon(jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1a7395b4a:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1a30e9b8e_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1a7395b4a:;
			++it;
			_4114_j++;
			goto _iter_begin_1a7395b4a;
		}
		_iter_end_1a7395b4a:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1a7398873_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1a7398279:;
			}
			_iter_end_1a7398279:;;
		}
	_iter_next_1a7395ac3:;
	}
	_iter_end_1a7395ac3:;;
}

inline void _1a7394cd1_orderCommon(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1a739e33a:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1a3e59e4e_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1a739e33a:;
			++it;
			_4114_j++;
			goto _iter_begin_1a739e33a;
		}
		_iter_end_1a739e33a:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1a73a2063_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1a73a1969:;
			}
			_iter_end_1a73a1969:;;
		}
	_iter_next_1a739e2b3:;
	}
	_iter_end_1a739e2b3:;;
}



inline void static__1a4517dbe_orderStructures(jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>& _6136_structs) {
	_1a739484c_orderCommon(_6136_structs);
}



inline void static__1a451e139_orderVars(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _6730_vars) {
	_1a7394cd1_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a46e5cd3_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a47eecee_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a4839685_optimizeChild(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e21344_Scope>& _3938_s) {
	jule::Ptr<_1a48391ac_scopeDeadCode> _4017_sdc = jule::new_ptr<_1a48391ac_scopeDeadCode>(_1a48391ac_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a483bcc5_optimizeStmts(_4017_sdc);
	};
}



inline void _1a483992c_optimizeBodyChildExceptional(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e21344_Scope>& _5053_s) {
	jule::Ptr<_1a48391ac_scopeDeadCode> _5117_sdc = jule::new_ptr<_1a48391ac_scopeDeadCode>(_1a48391ac_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1a483bcc5_optimizeStmts(_5117_sdc);
	};
}



inline void _1a4839bb3_optimizeBodyChild(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e21344_Scope>& _6142_s) {
	jule::Ptr<_1a48391ac_scopeDeadCode> _6217_sdc = jule::new_ptr<_1a48391ac_scopeDeadCode>(_1a48391ac_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a483bcc5_optimizeStmts(_6217_sdc);
	};
}



inline void _1a4839e38_optimizeExprModel(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1a483d117_exprDeadCode _7213_edc = static__1a483d733_new(_self_);;
	_1a48441c8_optimize(&_7213_edc, _7142_model);
}



inline void _1a483a114_eliminateFollowed(_1a48391ac_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1a48391ac_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1a742868e:;
	}
	_iter_end_1a742868e:;;
}



inline void _1a483a389_pushGoto(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e228a6_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1a742b384:;
	}
	_iter_end_1a742b384:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a3e228a6_GotoSt>>::make({_9232_gt}));
}



inline void _1a483a60e_pushLabel(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e226b9_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1a742cd03;
			};
			(_10317_i)++;
		}
	_iter_next_1a742cd03:;
	}
	_iter_end_1a742cd03:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a3e226b9_Label>>::make({_10233_l}));
}



inline void _1a483a884_optimizeRangeIter(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e22103_RangeIter> _11541_it) {
	_1a4839e38_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1a4839bb3_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1a483ab09_optimizeWhileIter(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e21cd4_WhileIter> _12041_it) {
	_1a4839e38_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1a483bae9_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1a4839bb3_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1a483ad7e_optimizeInfIter(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e21ae7_InfIter> _12839_it) {
	_1a4839bb3_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1a483b104_optimizeConditional(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e2190a_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1a7434634:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e21531_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a4839e38_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1a4839bb3_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1a7434634:;
			++it;
			goto _iter_begin_1a7434634;
		}
		_iter_end_1a7434634:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1a4839685_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1a4839bb3_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1a483b379_optimizeMatch(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e23159_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a74374e4:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e236a9_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1a7437db8:;
					if (it != expr.end()) {
						jule::Ptr<_1a3ea2e75_Data> _15225_expr = *it;
						{
							_1a4839e38_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1a7437db8:;
						++it;
						goto _iter_begin_1a7437db8;
					}
					_iter_end_1a7437db8:;
				};
				_1a4839bb3_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1a74374e4:;
			++it;
			goto _iter_begin_1a74374e4;
		}
		_iter_end_1a74374e4:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1a4839685_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1a4839bb3_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1a483b5ee_optimizeAssign(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e22c80_Assign> _16838_assign) {
	_1a4839e38_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1a4839e38_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1a483b874_optimizeMultiAssign(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Ptr<_1a3e22e6c_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1a743b707:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a4839e38_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1a743b707:;
			++it;
			goto _iter_begin_1a743b707;
		}
		_iter_end_1a743b707:;
	};
	_1a4839e38_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1a483bae9_optimizeStmt(jule::Ptr<_1a48391ac_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e21344_Scope>>()) {
			_case_begin_1a743cdce:;
			{
				jule::Ptr<_1a3e21344_Scope> _18521_scope = _18236_st.operator jule::Ptr<_1a3e21344_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1a483c0b1_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1a4839685_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22103_RangeIter>>()) {
			_case_begin_1a743d044:;
			{
				_1a483a884_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_1a3e22103_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21cd4_WhileIter>>()) {
			_case_begin_1a743d0aa:;
			{
				_1a483ab09_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_1a3e21cd4_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
			_case_begin_1a743d132:;
			{
				_1a483ad7e_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_1a3e21ae7_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e2190a_Conditional>>()) {
			_case_begin_1a743d1a9:;
			{
				_1a483b104_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_1a3e2190a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23159_Match>>()) {
			_case_begin_1a743d231:;
			{
				_1a483b379_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_1a3e23159_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22c80_Assign>>()) {
			_case_begin_1a743d2a8:;
			{
				_1a483b5ee_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_1a3e22c80_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22e6c_MultiAssign>>()) {
			_case_begin_1a743d330:;
			{
				_1a483b874_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_1a3e22e6c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a743d3a7:;
			{
				jule::Ptr<_1a3ea2e75_Data> _20621_d = _18236_st.operator jule::Ptr<_1a3ea2e75_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1a743cede;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a7444600:;
						{
							_1a483a114_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1a7443d3b:;
						{
							_1a4839e38_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1a7443cd6:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23bb5_RetSt>>()) {
			_case_begin_1a743d42e:;
			{
				_1a483a114_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e228a6_GotoSt>>()) {
			_case_begin_1a743d4a6:;
			{
				_1a483a389_pushGoto(_self_, _18236_st.operator jule::Ptr<_1a3e228a6_GotoSt>());
				_1a483a114_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e226b9_Label>>()) {
			_case_begin_1a743d52d:;
			{
				_1a483a60e_pushLabel(_self_, _18236_st.operator jule::Ptr<_1a3e226b9_Label>());
			}
		}
		_match_end_1a743cede:;
	};
}



inline void _1a483bcc5_optimizeStmts(jule::Ptr<_1a48391ac_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1a483bae9_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1a7446536:;
	}
	_iter_end_1a7446536:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48391ac_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a483d117_exprDeadCode static__1a483d733_new(jule::Ptr<_1a48391ac_scopeDeadCode>& _4924_s) {
	return _1a483d117_exprDeadCode{._field_s=_4924_s};
}



inline void _1a483d9a8_binary(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c00e9_BinopExprModel> _5525_m) {
	_1a48441c8_optimize(&(*_self_), _5525_m.get()._field_Left.get()._field_Model);
	_1a48441c8_optimize(&(*_self_), _5525_m.get()._field_Right.get()._field_Model);
}



inline void _1a483dc2d_unary(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c02d6_UnaryExprModel> _6024_m) {
	_1a48441c8_optimize(&(*_self_), _6024_m.get()._field_Expr.get()._field_Model);
}



inline void _1a483dea3_structureLit(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c06b0_StructLitExprModel> _6431_m) {
	{
		auto &expr = _6431_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1a7449a89:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c04c3_StructArgExprModel> _6521_arg = *it;
			{
				_1a48441c8_optimize(&(*_self_), _6521_arg.get()._field_Expr);
			}
			_iter_next_1a7449a89:;
			++it;
			goto _iter_begin_1a7449a89;
		}
		_iter_end_1a7449a89:;
	};
}



inline void _1a483e228_allocStructure(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c089c_AllocStructLitExprModel> _7033_m) {
	_1a483dea3_structureLit(&(*_self_), _7033_m.get()._field_Lit);
}



inline void _1a483e49d_casting(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c0a89_CastingExprModel> _7426_m) {
	_1a48441c8_optimize(&(*_self_), _7426_m.get()._field_Expr);
}



inline void _1a483e723_args(_1a483d117_exprDeadCode* _self_, jule::Slice<jule::Any>& _7824_args) {
	{
		auto &expr = _7824_args;
		auto it = expr.begin();
		_iter_begin_1a744be65:;
		if (it != expr.end()) {
			jule::Any _7921_arg = *it;
			{
				_1a48441c8_optimize(&(*_self_), _7921_arg);
			}
			_iter_next_1a744be65:;
			++it;
			goto _iter_begin_1a744be65;
		}
		_iter_end_1a744be65:;
	};
}



inline void _1a483e998_funcCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c0c76_FnCallExprModel> _8427_m) {
	_1a48441c8_optimize(&(*_self_), _8427_m.get()._field_Expr);
	_1a483e723_args(&(*_self_), _8427_m.get()._field_Args);
	if ((_8427_m.get()._field_Except != nullptr)) {
		_1a483992c_optimizeBodyChildExceptional((*_self_)._field_s, _8427_m.get()._field_Except);
	};
}



inline void _1a483ec1d_slice(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c0e63_SliceExprModel> _9224_m) {
	_1a483e723_args(&(*_self_), _9224_m.get()._field_Elems);
}



inline void _1a483ee93_array(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c23d7_ArrayExprModel> _9624_m) {
	if (((_9624_m.get()._field_Elems.len() == 2LL) && (_9624_m.get()._field_Elems[1LL] == nullptr))) {
		_1a48441c8_optimize(&(*_self_), _9624_m.get()._field_Elems[0LL]);
	};
	_1a483e723_args(&(*_self_), _9624_m.get()._field_Elems);
}



inline void _1a4840218_indexing(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c1150_IndexingExprModel> _10327_m) {
	_1a48441c8_optimize(&(*_self_), _10327_m.get()._field_Expr.get()._field_Model);
	_1a48441c8_optimize(&(*_self_), _10327_m.get()._field_Index.get()._field_Model);
}



inline void _1a484048d_anonFunc(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c133c_AnonFnExprModel> _10827_m) {
	_1a483c0b1_eliminateDeadCodeOfScope(_10827_m.get()._field_Func.get()._field_Scope);
}



inline void _1a4840713_mapExpr(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c1716_MapExprModel> _11226_m) {
	{
		auto &expr = _11226_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1a74534aa:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c1529_KeyValPairExprModel> _11321_pair = *it;
			{
				_1a48441c8_optimize(&(*_self_), _11321_pair.get()._field_Key);
				_1a48441c8_optimize(&(*_self_), _11321_pair.get()._field_Val);
			}
			_iter_next_1a74534aa:;
			++it;
			goto _iter_begin_1a74534aa;
		}
		_iter_end_1a74534aa:;
	};
}



inline void _1a4840988_slicing(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c1903_SlicingExprModel> _11926_m) {
	_1a48441c8_optimize(&(*_self_), _11926_m.get()._field_Expr);
	_1a48441c8_optimize(&(*_self_), _11926_m.get()._field_Left);
	if ((_11926_m.get()._field_Right != nullptr)) {
		_1a48441c8_optimize(&(*_self_), _11926_m.get()._field_Right);
	};
}



inline void _1a4840c0d_traitSub(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel> _12727_m) {
	_1a48441c8_optimize(&(*_self_), _12727_m.get()._field_Expr);
}



inline void _1a4840e83_structureSub(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c200d_StructSubIdentExprModel> _13131_m) {
	_1a48441c8_optimize(&(*_self_), _13131_m.get()._field_Expr.get()._field_Model);
}



inline void _1a4841208_commonSub(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c27b1_CommonSubIdentExprModel> _13528_m) {
	_1a48441c8_optimize(&(*_self_), _13528_m.get()._field_Expr);
}



inline void _1a484147d_tuple(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c299d_TupleExprModel> _13924_m) {
	{
		auto &expr = _13924_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1a7457da5:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ea2e75_Data> _14021_d = *it;
			{
				_1a48441c8_optimize(&(*_self_), _14021_d.get()._field_Model);
			}
			_iter_next_1a7457da5:;
			++it;
			goto _iter_begin_1a7457da5;
		}
		_iter_end_1a7457da5:;
	};
}



inline void _1a4841703_newCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c3251_BuiltinNewCallExprModel> _14526_m) {
	if ((_14526_m.get()._field_Init != nullptr)) {
		_1a48441c8_optimize(&(*_self_), _14526_m.get()._field_Init);
	};
}



inline void _1a4841978_outCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel> _15126_m) {
	_1a48441c8_optimize(&(*_self_), _15126_m.get()._field_Expr);
}



inline void _1a4841bed_outlnCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel> _15528_m) {
	_1a48441c8_optimize(&(*_self_), _15528_m.get()._field_Expr);
}



inline void _1a4841e73_panicCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel> _15928_m) {
	_1a48441c8_optimize(&(*_self_), _15928_m.get()._field_Expr);
}



inline void _1a48421e8_assertCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel> _16329_m) {
	_1a48441c8_optimize(&(*_self_), _16329_m.get()._field_Expr);
}



inline void _1a484246d_errorCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel> _16728_m) {
	_1a48441c8_optimize(&(*_self_), _16728_m.get()._field_Err);
}



inline void _1a48426e3_makeCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel> _17127_m) {
	if ((_17127_m.get()._field_Len != nullptr)) {
		_1a48441c8_optimize(&(*_self_), _17127_m.get()._field_Len);
	};
	if ((_17127_m.get()._field_Cap != nullptr)) {
		_1a48441c8_optimize(&(*_self_), _17127_m.get()._field_Cap);
	};
}



inline void _1a4842968_appendCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel> _18029_m) {
	_1a48441c8_optimize(&(*_self_), _18029_m.get()._field_Dest);
	_1a48441c8_optimize(&(*_self_), _18029_m.get()._field_Elements);
}



inline void _1a4842bdd_lenCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel> _18526_m) {
	_1a48441c8_optimize(&(*_self_), _18526_m.get()._field_Expr.get()._field_Model);
}



inline void _1a4842e63_capCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel> _18926_m) {
	_1a48441c8_optimize(&(*_self_), _18926_m.get()._field_Expr.get()._field_Model);
}



inline void _1a48431d8_cloneCall(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel> _19328_m) {
	_1a48441c8_optimize(&(*_self_), _19328_m.get()._field_Expr);
}



inline void _1a484345d_sizeof(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c472a_SizeofExprModel> _19725_m) {
	_1a48441c8_optimize(&(*_self_), _19725_m.get()._field_Expr);
}



inline void _1a48436d3_alignof(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c4917_AlignofExprModel> _20126_m) {
	_1a48441c8_optimize(&(*_self_), _20126_m.get()._field_Expr);
}



inline void _1a4843958_integratedToStr(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel> _20534_m) {
	_1a48441c8_optimize(&(*_self_), _20534_m.get()._field_Expr);
}



inline void _1a4843bcd_free(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c51ba_FreeExprModel> _20923_m) {
	_1a48441c8_optimize(&(*_self_), _20923_m.get()._field_Expr);
}



inline void _1a4843e53_backendEmit(_1a483d117_exprDeadCode* _self_, jule::Ptr<_1a31c4ecd_BackendEmitExprModel> _21330_m) {
	_1a483e723_args(&(*_self_), _21330_m.get()._field_Exprs);
}



inline void _1a48441c8_optimize(_1a483d117_exprDeadCode* _self_, jule::Any& _21728_model) {
	{
		auto &_match_expr{ _21728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c00e9_BinopExprModel>>()) {
			_case_begin_1a7464dd4:;
			{
				_1a483d9a8_binary(&(*_self_), _21728_model.operator jule::Ptr<_1a31c00e9_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c02d6_UnaryExprModel>>()) {
			_case_begin_1a7464e5b:;
			{
				_1a483dc2d_unary(&(*_self_), _21728_model.operator jule::Ptr<_1a31c02d6_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c06b0_StructLitExprModel>>()) {
			_case_begin_1a7464ed3:;
			{
				_1a483dea3_structureLit(&(*_self_), _21728_model.operator jule::Ptr<_1a31c06b0_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c089c_AllocStructLitExprModel>>()) {
			_case_begin_1a746538a:;
			{
				_1a483e228_allocStructure(&(*_self_), _21728_model.operator jule::Ptr<_1a31c089c_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0a89_CastingExprModel>>()) {
			_case_begin_1a7465412:;
			{
				_1a483e49d_casting(&(*_self_), _21728_model.operator jule::Ptr<_1a31c0a89_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a7465489:;
			{
				_1a483e998_funcCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c0c76_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0e63_SliceExprModel>>()) {
			_case_begin_1a7465511:;
			{
				_1a483ec1d_slice(&(*_self_), _21728_model.operator jule::Ptr<_1a31c0e63_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c23d7_ArrayExprModel>>()) {
			_case_begin_1a7465588:;
			{
				_1a483ee93_array(&(*_self_), _21728_model.operator jule::Ptr<_1a31c23d7_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1150_IndexingExprModel>>()) {
			_case_begin_1a7465610:;
			{
				_1a4840218_indexing(&(*_self_), _21728_model.operator jule::Ptr<_1a31c1150_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c133c_AnonFnExprModel>>()) {
			_case_begin_1a7465687:;
			{
				_1a484048d_anonFunc(&(*_self_), _21728_model.operator jule::Ptr<_1a31c133c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1716_MapExprModel>>()) {
			_case_begin_1a746570e:;
			{
				_1a4840713_mapExpr(&(*_self_), _21728_model.operator jule::Ptr<_1a31c1716_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1903_SlicingExprModel>>()) {
			_case_begin_1a7465786:;
			{
				_1a4840988_slicing(&(*_self_), _21728_model.operator jule::Ptr<_1a31c1903_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>>()) {
			_case_begin_1a746580d:;
			{
				_1a4840c0d_traitSub(&(*_self_), _21728_model.operator jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a7465885:;
			{
				_1a4840e83_structureSub(&(*_self_), _21728_model.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>>()) {
			_case_begin_1a746590c:;
			{
				_1a4841208_commonSub(&(*_self_), _21728_model.operator jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c299d_TupleExprModel>>()) {
			_case_begin_1a7465984:;
			{
				_1a484147d_tuple(&(*_self_), _21728_model.operator jule::Ptr<_1a31c299d_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>>()) {
			_case_begin_1a7465a0b:;
			{
				_1a4841978_outCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1a7465a83:;
			{
				_1a4841bed_outlnCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>>()) {
			_case_begin_1a7465b0a:;
			{
				_1a4841703_newCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1a7465b82:;
			{
				_1a4841e73_panicCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1a7465c09:;
			{
				_1a48421e8_assertCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a7465c81:;
			{
				_1a484246d_errorCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>>()) {
			_case_begin_1a7465d08:;
			{
				_1a48426e3_makeCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>>()) {
			_case_begin_1a7465d80:;
			{
				_1a4842968_appendCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>>()) {
			_case_begin_1a7465e07:;
			{
				_1a4842bdd_lenCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>>()) {
			_case_begin_1a7465e7e:;
			{
				_1a4842e63_capCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>>()) {
			_case_begin_1a7466006:;
			{
				_1a48431d8_cloneCall(&(*_self_), _21728_model.operator jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c472a_SizeofExprModel>>()) {
			_case_begin_1a746607d:;
			{
				_1a484345d_sizeof(&(*_self_), _21728_model.operator jule::Ptr<_1a31c472a_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4917_AlignofExprModel>>()) {
			_case_begin_1a7466105:;
			{
				_1a48436d3_alignof(&(*_self_), _21728_model.operator jule::Ptr<_1a31c4917_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>>()) {
			_case_begin_1a746617c:;
			{
				_1a4843958_integratedToStr(&(*_self_), _21728_model.operator jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c51ba_FreeExprModel>>()) {
			_case_begin_1a7466204:;
			{
				_1a4843bcd_free(&(*_self_), _21728_model.operator jule::Ptr<_1a31c51ba_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ecd_BackendEmitExprModel>>()) {
			_case_begin_1a746627b:;
			{
				_1a4843e53_backendEmit(&(*_self_), _21728_model.operator jule::Ptr<_1a31c4ecd_BackendEmitExprModel>());
			}
		}
		_match_end_1a74650d2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a483d117_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c8396388_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c846418c_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c84705e9_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c8436a66_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c8424180_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c842436c_scopeOptimizer> static__1c83953ed_new(jule::Ptr<_1a3e21344_Scope> _4523_scope) {
	return jule::new_ptr<_1c842436c_scopeOptimizer>(_1c842436c_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _1c839b35a_setCurrentStmt(_1c842436c_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1c83c76e9_optimizeData(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3ea2e75_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a74a8664:;
			{
				jule::Ptr<_1a31c0c76_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_1a31c0c76_FnCallExprModel>();;
				if (_1d28c71b7_Production) {
					if (((!(_1a31cbc0a_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1c8473b08_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1c839b35a_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1a74a8455:;
	};
	static__1c8435603_optimize(_5535_d.get()._field_Model);
}



inline void _1c841ad03_optimizeVar(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e59e4e_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1c8435603_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1c83c74b8_optimizeConditional(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e2190a_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1a74aae08:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e21531_If> _7721_elif = *it;
			{
				static__1c8435603_optimize(_7721_elif.get()._field_Expr);
				_1c8400832_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1a74aae08:;
			++it;
			goto _iter_begin_1a74aae08;
		}
		_iter_end_1a74aae08:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1c8400832_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1c8448418_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1a74adb53:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1a3e21531_If> _9221_elif = *it;
			{
				if ((!(_1a3000ad9_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1a74adb53;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1a3e2171d_Else>(_1a3e2171d_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1a74adb53;
			}
			_iter_next_1a74adb53:;
			++it;
			_9214_i++;
			goto _iter_begin_1a74adb53;
		}
		_iter_end_1a74adb53:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a3e21531_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1a3e21531_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1c83949d5_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1a74b21b7:;
	}
	_iter_end_1a74b21b7:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1a74b39c1:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1a3e21531_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1a74b39c1:;
			++it;
			_12913_j++;
			goto _iter_begin_1a74b39c1;
		}
		_iter_end_1a74b39c1:;
	};
	if ((_12817_only != -1LL)) {
		_1c839b35a_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _1c84465e2_buildDefaultConstatTrueCase(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e236a9_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1a3e23159_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a74b62ed;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1a3e239c8_FallSt>>()) {
					_case_begin_1a74b6bc2:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1a74b62ed;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1a74b8399:;
					{
						goto _iter_end_1a74b62ed;
					}
				}
				_match_end_1a74b829a:;
			};
		}
	_iter_next_1a74b62ed:;
	}
	_iter_end_1a74b62ed:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1c844b51a_optimizeMatch(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e23159_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a74ba7db:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e236a9_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1a74baee5:;
					if (it != expr.end()) {
						jule::Ptr<_1a3ea2e75_Data> _17325_expr = *it;
						{
							static__1c8435603_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1a74baee5:;
						++it;
						goto _iter_begin_1a74baee5;
					}
					_iter_end_1a74baee5:;
				};
				_1c8400832_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1a74ba7db:;
			++it;
			goto _iter_begin_1a74ba7db;
		}
		_iter_end_1a74ba7db:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1c8400832_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1c8448418_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a74bce09:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1a3e236a9_Case> _18925_case = *it;
			{
				if ((!(_1c844a0eb_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1a74bce09;
				};
				_18617_constCase=true;
				_1c84465e2_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1a74bce09;
			}
			_iter_next_1a74bce09:;
			++it;
			_18918_i++;
			goto _iter_begin_1a74bce09;
		}
		_iter_end_1a74bce09:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a3e236a9_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1a3e236a9_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1c8411b73_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1a74c0e95:;
	}
	_iter_end_1a74c0e95:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a74c2194:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1a3e236a9_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1a74c2194:;
			++it;
			_21913_j++;
			goto _iter_begin_1a74c2194;
		}
		_iter_end_1a74c2194:;
	};
	if ((_21817_only != -1LL)) {
		_1c839b35a_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _1c844be11_optimizeRangeIter(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e22103_RangeIter> _23540_it) {
	static__1c8435603_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1c8400832_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1c844e61c_optimizeWhileIter(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e21cd4_WhileIter> _24040_it) {
	static__1c8435603_optimize(_24040_it.get()._field_Expr);
	_1c83d05c0_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1c8400832_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1c8453aa5_substr(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e22c80_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c1903_SlicingExprModel>>()) {
			_case_begin_1a74c6693:;
			{
				jule::Ptr<_1a31c1903_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1a31c1903_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1c839b35a_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1c8436a66_MutSlicingExprModel>(_1c8436a66_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1a74c663d:;
	};
	return false;
}



inline jule::Bool _1c8471793_strInsert(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e22c80_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c00e9_BinopExprModel>>()) {
			_case_begin_1a74c8cc2:;
			{
				jule::Ptr<_1a31c00e9_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1a31c00e9_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1c839b35a_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1c8424180_StrInsertBeginExprModel>(_1c8424180_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1a74c8c6c:;
	};
	return false;
}



inline jule::Bool _1a3015a00_strAssign(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e22c80_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1a3ed36d1_Prim> _28213_lp = _1a3ed0d1b_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1a3ed6915_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1c8453aa5_substr(&(*_self_), _27832_a) || _1c8471793_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1a74cca2e:;
			{
				return true;
			}
		}
		_match_end_1a74cc9a7:;
	};
	return false;
}



inline void _1a30272c5_optimizeAssign(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e22c80_Assign> _29437_assign) {
	if ((_1c83c22c6_Copy && _1a3015a00_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1c8435603_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1c8435603_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a74cec1d:;
			{
				if ((_1c83e6361_Math && (_1a3ed226d_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1a31c00e9_BinopExprModel>(_1a31c00e9_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__1c8435603_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1a31c00e9_BinopExprModel>>()) {
							_case_begin_1a74d211b:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1a31bee0c_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1a74d200b:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1a74cebb8:;
	};
	if (_1c83e4727_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>>()) {
				_case_begin_1a74d40eb:;
				{
					jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_1a31c0e63_SliceExprModel>>()) {
							_case_begin_1a74d522e:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>() || _match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
										_case_begin_1a74d5a8c:;
										{
											_1c839b35a_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1c84705e9_PushToSliceExprModel>(_1c84705e9_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_1a31c0e63_SliceExprModel>()})));
										}
									}
									_match_end_1a74d5a26:;
								};
							}
						}
						_match_end_1a74d5020:;
					};
				}
			}
			_match_end_1a74d07ac:;
		};
	};
}



inline void _1a303b54d_optimizeMultiAssign(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e22e6c_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1a74d014c:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1c8435603_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1a74d014c:;
			++it;
			_34514_i++;
			goto _iter_begin_1a74d014c;
		}
		_iter_end_1a74d014c:;
	};
	static__1c8435603_optimize(_34442_assign.get()._field_R);
}



inline void _1a306b281_optimizeRet(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e23bb5_RetSt> _35434_r) {
	static__1c8435603_optimize(_35434_r.get()._field_Expr);
}



inline void _1c83d05c0_optimizeStmt(_1c842436c_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e21344_Scope>>()) {
			_case_begin_1a74d88d6:;
			{
				_1c8400832_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e21344_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a74d894c:;
			{
				_1c83c76e9_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3ea2e75_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a74d89b3:;
			{
				_1c841ad03_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e59e4e_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e2190a_Conditional>>()) {
			_case_begin_1a74d8a29:;
			{
				_1c83c74b8_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e2190a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22103_RangeIter>>()) {
			_case_begin_1a74d8a90:;
			{
				_1c844be11_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e22103_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21cd4_WhileIter>>()) {
			_case_begin_1a74d8b06:;
			{
				_1c844e61c_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e21cd4_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
			_case_begin_1a74d8b6c:;
			{
				_1c8400832_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e21ae7_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22c80_Assign>>()) {
			_case_begin_1a74d8be4:;
			{
				_1a30272c5_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e22c80_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22e6c_MultiAssign>>()) {
			_case_begin_1a74d8c6b:;
			{
				_1a303b54d_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e22e6c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23159_Match>>()) {
			_case_begin_1a74d8ce3:;
			{
				_1c844b51a_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e23159_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23bb5_RetSt>>()) {
			_case_begin_1a74d8d6a:;
			{
				_1a306b281_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_1a3e23bb5_RetSt>());
			}
		}
		_match_end_1a74d8793:;
	};
}



inline void _1c8400832_optimizeChild(_1c842436c_scopeOptimizer* _self_, jule::Ptr<_1a3e21344_Scope> _38536_child) {
	jule::Ptr<_1c842436c_scopeOptimizer> _38617_so = static__1c83953ed_new(_38536_child);;
	_1c8394034_optimize(_38617_so.ptr());
}



inline void _1c8394034_optimize(_1c842436c_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1a74e0129:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1c83d05c0_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1a74e0129:;
			++it;
			_39214_i++;
			goto _iter_begin_1a74e0129;
		}
		_iter_end_1a74e0129:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c842436c_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1c8435603_optimize(jule::Any& _5729_model) {
	if (_1a473ce4b_exprEnabled) {
		jule::Ptr<_1a4097047_exprOptimizer> _6021_exop = jule::new_ptr<_1a4097047_exprOptimizer>(_1a4097047_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5729_model))))});;
		_1a40999ea_do(_6021_exop.ptr());
	};
}



inline jule::Bool _1c8395a4c_strCond(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c00e9_BinopExprModel> _6726_m) {
	jule::Ptr<_1a3ed36d1_Prim> _6813_lp = _1a3ed0d1b_Prim(_6726_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6813_lp == nullptr) || (!(_1a3ed6915_IsStr(_6813_lp.ptr()))))) {
		return false;
	};
	if (((_6726_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6726_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6726_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a74e9c9e:;
			{
				std::tie(_6726_m.get()._field_Left,_6726_m.get()._field_Right) = std::make_tuple(_6726_m.get()._field_Right,_6726_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1a74e9c49:;
	};
	{
		auto &_match_expr{ _6726_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a74eae6a:;
			{
				goto _match_end_1a74ea9a3;
			}
		}
		else {
			_case_begin_1a74eae04:;
			{
				return true;
			}
		}
		_match_end_1a74ea9a3:;
	};
	_julec_label_opt:;
	jule::Ptr<_1a31618e8_Const> _8713_c = _6726_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a31618e8_Const>();;
	if ((!(_1a31b82ac_ReadStr(_8713_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6726_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a74ec785:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_6726_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6726_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a74ec7eb:;
			{
				jule::Ptr<_1ba1dbeab_Token> _9921_op = _6726_m.get()._field_Op;;
				_9921_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1a31c02d6_UnaryExprModel>(_1a31c02d6_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c27b1_CommonSubIdentExprModel>(_1a31c27b1_CommonSubIdentExprModel{._field_ExprKind=_6726_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6726_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9921_op}));
			}
		}
		_match_end_1a74ec004:;
	};
	return true;
}



inline void _1c83be46b_binary(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c00e9_BinopExprModel> _11525_m) {
	static__1c8435603_optimize(_11525_m.get()._field_Left.get()._field_Model);
	static__1c8435603_optimize(_11525_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11525_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a74e8d7a:;
			{
				goto _match_end_1a7501547;
			}
		}
		else {
			_case_begin_1a750168a:;
			{
				return;;
			}
		}
		_match_end_1a7501547:;
	};
	if ((_1c8448418_Cond && _1c8395a4c_strCond(&(*_self_), _11525_m))) {
		return;;
	};
	if ((!(_1c83e6361_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11525_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a7502856:;
			{
				jule::Bool _13518_ok;;
				jule::U64 _13522_x;;
				std::tie(_13518_ok,_13522_x) = _1a4099b2c_checkForBitShiftOpt(_11525_m.get()._field_Left,_11525_m.get()._field_Right);
				if (_13518_ok) {
					_11525_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1a31618e8_Const> _13825_c = _11525_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a31618e8_Const>();;
					_1a31b9258_SetU64(_13825_c.ptr(), _13522_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a75028cd:;
			{
				jule::Bool _14318_ok;;
				jule::U64 _14322_x;;
				std::tie(_14318_ok,_14322_x) = _1a4099b2c_checkForBitShiftOpt(_11525_m.get()._field_Left,_11525_m.get()._field_Right);
				if (_14318_ok) {
					_11525_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1a31618e8_Const> _14625_c = _11525_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a31618e8_Const>();;
					_1a31b9258_SetU64(_14625_c.ptr(), _14322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a7502955:;
			{
				jule::Ptr<_1a31618e8_Const> _15121_c = _11525_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a31618e8_Const>();;
				jule::F64 _15217_d = _1a31b8c5d_AsF64(_15121_c.ptr());;
				if ((_15217_d == 2LL)) {
					_11525_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1a31b8ed3_SetI64(_15121_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1a750267a:;
	};
	jule::Any _15817_model = jule::Any(jule::new_ptr<_1c8396388_UnsafeBinopExprModel>(_1c8396388_UnsafeBinopExprModel{._field_Node=_11525_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15817_model))))));
}



inline void _1c8407d01_unary(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c02d6_UnaryExprModel> _16224_m) {
	static__1c8435603_optimize(_16224_m.get()._field_Expr.get()._field_Model);
	if ((_1c8435070_Ptr && (_16224_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16224_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c02d6_UnaryExprModel>>()) {
				_case_begin_1a750a1ee:;
				{
					jule::Ptr<_1a31c02d6_UnaryExprModel> _16725_um = _16224_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1a31c02d6_UnaryExprModel>();;
					if ((_16725_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16725_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1a750a199:;
		};
	};
}



inline void _1c83e4e31_structureLit(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c06b0_StructLitExprModel> _17531_m) {
	{
		auto &expr = _17531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1a750be26:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c04c3_StructArgExprModel> _17621_arg = *it;
			{
				static__1c8435603_optimize(_17621_arg.get()._field_Expr);
			}
			_iter_next_1a750be26:;
			++it;
			goto _iter_begin_1a750be26;
		}
		_iter_end_1a750be26:;
	};
}



inline void _1c8402a65_allocStructure(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c089c_AllocStructLitExprModel> _18133_m) {
	_1c83e4e31_structureLit(&(*_self_), _18133_m.get()._field_Lit);
}



inline void _1c8405062_casting(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c0a89_CastingExprModel> _18526_m) {
	static__1c8435603_optimize(_18526_m.get()._field_Expr);
}



inline void _1a40974dc_args(_1a4097047_exprOptimizer* _self_, jule::Slice<jule::Any>& _18924_args) {
	{
		auto &expr = _18924_args;
		auto it = expr.begin();
		_iter_begin_1a750daa4:;
		if (it != expr.end()) {
			jule::I64 _19014_i = it - expr.begin();
			jule::Any _19021_arg = *it;
			{
				static__1c8435603_optimize(_19021_arg);
				_18924_args[_19014_i]=_19021_arg;
			}
			_iter_next_1a750daa4:;
			++it;
			_19014_i++;
			goto _iter_begin_1a750daa4;
		}
		_iter_end_1a750daa4:;
	};
}



inline void _1a409761e_scope(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a3e21344_Scope>& _19625_s) {
	jule::Ptr<_1c842436c_scopeOptimizer> _19717_scopt = static__1c83953ed_new(_19625_s);;
	_1c8394034_optimize(_19717_scopt.ptr());
}



inline void _1a4097751_funcCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c0c76_FnCallExprModel> _20127_m) {
	static__1c8435603_optimize(_20127_m.get()._field_Expr);
	_1a40974dc_args(&(*_self_), _20127_m.get()._field_Args);
	if ((_20127_m.get()._field_Except != nullptr)) {
		_1a409761e_scope(&(*_self_), _20127_m.get()._field_Except);
	};
}



inline void _1a4097883_slice(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c0e63_SliceExprModel> _20924_m) {
	_1a40974dc_args(&(*_self_), _20924_m.get()._field_Elems);
}



inline void _1a40979b5_array(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c23d7_ArrayExprModel> _21324_m) {
	if (((_21324_m.get()._field_Elems.len() == 2LL) && (_21324_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21521_elem = _21324_m.get()._field_Elems[0LL];;
		static__1c8435603_optimize(_21521_elem);
		_21324_m.get()._field_Elems[0LL]=_21521_elem;
	};
	_1a40974dc_args(&(*_self_), _21324_m.get()._field_Elems);
}



inline void _1a4097ae7_indexing(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c1150_IndexingExprModel> _22227_m) {
	static__1c8435603_optimize(_22227_m.get()._field_Expr.get()._field_Model);
	static__1c8435603_optimize(_22227_m.get()._field_Index.get()._field_Model);
	if ((!(_1c841523c_Access))) {
		return;;
	};
	jule::Bool _22813_array = (_1a3ed1a31_Arr(_22227_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22813_array && _1a3ea3838_IsConst(_22227_m.get()._field_Index.ptr()))) {
		jule::Any _23121_model = jule::Any(jule::new_ptr<_1c846418c_UnsafeIndexingExprModel>(_1c846418c_UnsafeIndexingExprModel{._field_Node=_22227_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23121_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22227_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a7517d44:;
			{
				jule::Ptr<_1a3e59e4e_Var> _23717_i = _22227_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_1a3e59e4e_Var>();;
				if ((_23717_i.get()._field_Mutable || (_23717_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1a7517cde;
				};
				{
					auto &_match_expr{ _22227_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
						_case_begin_1a751972a:;
						{
							jule::Ptr<_1a3e59e4e_Var> _24321_r = _22227_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1a3e59e4e_Var>();;
							if ((_23717_i.get()._field_IterRelation.get()._field_Range == _24321_r)) {
								jule::Any _24629_model = jule::Any(jule::new_ptr<_1c846418c_UnsafeIndexingExprModel>(_1c846418c_UnsafeIndexingExprModel{._field_Node=_22227_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24629_model))))));
							};
						}
					}
					_match_end_1a75196c5:;
				};
			}
		}
		_match_end_1a7517cde:;
	};
}



inline void _1a4097c29_anonFunc(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c133c_AnonFnExprModel> _25327_m) {
	_1a409761e_scope(&(*_self_), _25327_m.get()._field_Func.get()._field_Scope);
}



inline void _1a4097d5b_mapExpr(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c1716_MapExprModel> _25726_m) {
	{
		auto &expr = _25726_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1a751c08a:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c1529_KeyValPairExprModel> _25821_pair = *it;
			{
				static__1c8435603_optimize(_25821_pair.get()._field_Key);
				static__1c8435603_optimize(_25821_pair.get()._field_Val);
			}
			_iter_next_1a751c08a:;
			++it;
			goto _iter_begin_1a751c08a;
		}
		_iter_end_1a751c08a:;
	};
}



inline void _1a4097e8d_slicing(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c1903_SlicingExprModel> _26426_m) {
	static__1c8435603_optimize(_26426_m.get()._field_Expr);
	static__1c8435603_optimize(_26426_m.get()._field_Left);
	if ((_26426_m.get()._field_Right != nullptr)) {
		static__1c8435603_optimize(_26426_m.get()._field_Right);
	};
}



inline void _1a40980c0_traitSub(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel> _27227_m) {
	static__1c8435603_optimize(_27227_m.get()._field_Expr);
}



inline void _1a4098202_structureSub(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c200d_StructSubIdentExprModel> _27631_m) {
	static__1c8435603_optimize(_27631_m.get()._field_Expr.get()._field_Model);
}



inline void _1a4098334_commonSub(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c27b1_CommonSubIdentExprModel> _28028_m) {
	static__1c8435603_optimize(_28028_m.get()._field_Expr);
}



inline void _1a4098466_tuple(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c299d_TupleExprModel> _28424_m) {
	{
		auto &expr = _28424_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1a75207b9:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ea2e75_Data> _28521_d = *it;
			{
				static__1c8435603_optimize(_28521_d.get()._field_Model);
			}
			_iter_next_1a75207b9:;
			++it;
			goto _iter_begin_1a75207b9;
		}
		_iter_end_1a75207b9:;
	};
}



inline void _1a4098598_newCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c3251_BuiltinNewCallExprModel> _29026_m) {
	if ((_29026_m.get()._field_Init != nullptr)) {
		static__1c8435603_optimize(_29026_m.get()._field_Init);
	};
}



inline void _1a40986ca_outCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel> _29626_m) {
	static__1c8435603_optimize(_29626_m.get()._field_Expr);
}



inline void _1a409880c_outlnCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel> _30028_m) {
	static__1c8435603_optimize(_30028_m.get()._field_Expr);
}



inline void _1a409893e_panicCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel> _30428_m) {
	static__1c8435603_optimize(_30428_m.get()._field_Expr);
}



inline void _1a4098a71_assertCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel> _30829_m) {
	static__1c8435603_optimize(_30829_m.get()._field_Expr);
}



inline void _1a4098ba3_errorCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel> _31228_m) {
	static__1c8435603_optimize(_31228_m.get()._field_Err);
}



inline void _1a4098cd5_makeCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel> _31627_m) {
	if ((_31627_m.get()._field_Len != nullptr)) {
		static__1c8435603_optimize(_31627_m.get()._field_Len);
	};
	if ((_31627_m.get()._field_Cap != nullptr)) {
		static__1c8435603_optimize(_31627_m.get()._field_Cap);
	};
}



inline void _1a4098e17_appendCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel> _32529_m) {
	static__1c8435603_optimize(_32529_m.get()._field_Dest);
	static__1c8435603_optimize(_32529_m.get()._field_Elements);
}



inline void _1a4099049_lenCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel> _33026_m) {
	static__1c8435603_optimize(_33026_m.get()._field_Expr.get()._field_Model);
}



inline void _1a409917b_capCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel> _33426_m) {
	static__1c8435603_optimize(_33426_m.get()._field_Expr.get()._field_Model);
}



inline void _1a40992ad_cloneCall(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel> _33828_m) {
	static__1c8435603_optimize(_33828_m.get()._field_Expr);
}



inline void _1a40993e0_sizeof(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c472a_SizeofExprModel> _34225_m) {
	static__1c8435603_optimize(_34225_m.get()._field_Expr);
}



inline void _1a4099522_alignof(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c4917_AlignofExprModel> _34626_m) {
	static__1c8435603_optimize(_34626_m.get()._field_Expr);
}



inline void _1a4099654_integratedToStr(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel> _35034_m) {
	static__1c8435603_optimize(_35034_m.get()._field_Expr);
}



inline void _1a4099786_free(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c51ba_FreeExprModel> _35423_m) {
	static__1c8435603_optimize(_35423_m.get()._field_Expr);
}



inline void _1a40998b8_backendEmit(_1a4097047_exprOptimizer* _self_, jule::Ptr<_1a31c4ecd_BackendEmitExprModel> _35830_m) {
	_1a40974dc_args(&(*_self_), _35830_m.get()._field_Exprs);
}



inline void _1a40999ea_do(_1a4097047_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c00e9_BinopExprModel>>()) {
			_case_begin_1a75297d4:;
			{
				_1c83be46b_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c00e9_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c02d6_UnaryExprModel>>()) {
			_case_begin_1a752984a:;
			{
				_1c8407d01_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c02d6_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c06b0_StructLitExprModel>>()) {
			_case_begin_1a75298b1:;
			{
				_1c83e4e31_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c06b0_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c089c_AllocStructLitExprModel>>()) {
			_case_begin_1a7529927:;
			{
				_1c8402a65_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c089c_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0a89_CastingExprModel>>()) {
			_case_begin_1a752998d:;
			{
				_1c8405062_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c0a89_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a7529a04:;
			{
				_1a4097751_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c0c76_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0e63_SliceExprModel>>()) {
			_case_begin_1a7529a6a:;
			{
				_1a4097883_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c0e63_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c23d7_ArrayExprModel>>()) {
			_case_begin_1a7529ae2:;
			{
				_1a40979b5_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c23d7_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1150_IndexingExprModel>>()) {
			_case_begin_1a7529b69:;
			{
				_1a4097ae7_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c1150_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c133c_AnonFnExprModel>>()) {
			_case_begin_1a7529be1:;
			{
				_1a4097c29_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c133c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1716_MapExprModel>>()) {
			_case_begin_1a7529c68:;
			{
				_1a4097d5b_mapExpr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c1716_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1903_SlicingExprModel>>()) {
			_case_begin_1a7529ce0:;
			{
				_1a4097e8d_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c1903_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>>()) {
			_case_begin_1a7529d67:;
			{
				_1a40980c0_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a7529dde:;
			{
				_1a4098202_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>>()) {
			_case_begin_1a7529e66:;
			{
				_1a4098334_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c299d_TupleExprModel>>()) {
			_case_begin_1a7529edd:;
			{
				_1a4098466_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c299d_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>>()) {
			_case_begin_1a752a065:;
			{
				_1a40986ca_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1a752a0dc:;
			{
				_1a409880c_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>>()) {
			_case_begin_1a752a164:;
			{
				_1a4098598_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1a752a1db:;
			{
				_1a409893e_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1a752a263:;
			{
				_1a4098a71_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a752a2da:;
			{
				_1a4098ba3_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>>()) {
			_case_begin_1a752a362:;
			{
				_1a4098cd5_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>>()) {
			_case_begin_1a752a3d9:;
			{
				_1a4098e17_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>>()) {
			_case_begin_1a752a461:;
			{
				_1a4099049_lenCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>>()) {
			_case_begin_1a752a4d8:;
			{
				_1a409917b_capCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>>()) {
			_case_begin_1a752a560:;
			{
				_1a40992ad_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c472a_SizeofExprModel>>()) {
			_case_begin_1a752a5d7:;
			{
				_1a40993e0_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c472a_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4917_AlignofExprModel>>()) {
			_case_begin_1a752a65e:;
			{
				_1a4099522_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c4917_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>>()) {
			_case_begin_1a752a6d6:;
			{
				_1a4099654_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c51ba_FreeExprModel>>()) {
			_case_begin_1a752a75d:;
			{
				_1a4099786_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c51ba_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ecd_BackendEmitExprModel>>()) {
			_case_begin_1a752a7d5:;
			{
				_1a40998b8_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a31c4ecd_BackendEmitExprModel>());
			}
		}
		_match_end_1a75294d7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a4097047_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a480a337_Optimizer> static__1a475b4db_New(jule::Ptr<_1a4380b6b_IR>& _2524_ir) {
	return jule::new_ptr<_1a480a337_Optimizer>(_1a480a337_Optimizer{._field_ir=_2524_ir});
}



inline void _1a475bdd2_optimizeGlobal(_1a480a337_Optimizer* _self_, jule::Ptr<_1a3e59e4e_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1c8435603_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1a476a53e_optimizeFunction(_1a480a337_Optimizer* _self_, jule::Ptr<_1a31c7bc3_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a75439b8:;
		if (it != expr.end()) {
			jule::Ptr<_1a31ca874_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1c842436c_scopeOptimizer> _4221_so = static__1c83953ed_new(_4121_ins.get()._field_Scope);;
				_1c8394034_optimize(_4221_so.ptr());
			}
			_iter_next_1a75439b8:;
			++it;
			goto _iter_begin_1a75439b8;
		}
		_iter_end_1a75439b8:;
	};
}



inline void _1a473d644_optimizeStruct(_1a480a337_Optimizer* _self_, jule::Ptr<_1a30e9b8e_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a7544d2c:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1a7545668:;
					if (it != expr.end()) {
						jule::Ptr<_1a3102306_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1c8435603_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1a7545668:;
						++it;
						goto _iter_begin_1a7545668;
					}
					_iter_end_1a7545668:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1a754627e:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _5725_m = *it;
						{
							_1a476a53e_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1a754627e:;
						++it;
						goto _iter_begin_1a754627e;
					}
					_iter_end_1a754627e:;
				};
			}
			_iter_next_1a7544d2c:;
			++it;
			goto _iter_begin_1a7544d2c;
		}
		_iter_end_1a7544d2c:;
	};
}



inline void _1a47996b1_optimizeGlobals(_1a480a337_Optimizer* _self_, jule::Ptr<_1a3e37008_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a7546c63:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1a7547a33:;
					if (it != expr.end()) {
						jule::Ptr<_1a3e59e4e_Var> _6525_v = *it;
						{
							_1a475bdd2_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1a7547a33:;
						++it;
						goto _iter_begin_1a7547a33;
					}
					_iter_end_1a7547a33:;
				};
			}
			_iter_next_1a7546c63:;
			++it;
			goto _iter_begin_1a7546c63;
		}
		_iter_end_1a7546c63:;
	};
}



inline void _1a4799a68_optimizeFunctions(_1a480a337_Optimizer* _self_, jule::Ptr<_1a3e37008_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a75481a4:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1a7548e85:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _7325_func = *it;
						{
							_1a476a53e_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1a7548e85:;
						++it;
						goto _iter_begin_1a7548e85;
					}
					_iter_end_1a7548e85:;
				};
			}
			_iter_next_1a75481a4:;
			++it;
			goto _iter_begin_1a75481a4;
		}
		_iter_end_1a75481a4:;
	};
}



inline void _1a479b4e8_optimizeStructs(_1a480a337_Optimizer* _self_, jule::Ptr<_1a3e37008_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a7549606:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1a754a3d7:;
					if (it != expr.end()) {
						jule::Ptr<_1a30e9b8e_Struct> _8125_s = *it;
						{
							_1a473d644_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1a754a3d7:;
						++it;
						goto _iter_begin_1a754a3d7;
					}
					_iter_end_1a754a3d7:;
				};
			}
			_iter_next_1a7549606:;
			++it;
			goto _iter_begin_1a7549606;
		}
		_iter_end_1a7549606:;
	};
}



inline void _1a47a280c_optimizePackage(_1a480a337_Optimizer* _self_, jule::Ptr<_1a3e37008_Package>& _8739_p) {
	_1a47996b1_optimizeGlobals(&(*_self_), _8739_p);
	_1a4799a68_optimizeFunctions(&(*_self_), _8739_p);
	_1a479b4e8_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1a47a9182_Optimize(_1a480a337_Optimizer* _self_) {
	_1a47b2531_detectEnabled();
	if (_1c83c5d46_Deadcode) {
		_1a4837c8d_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1a473e0a1_scopeEnabled || _1a473ce4b_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1a754beaa:;
			if (it != expr.end()) {
				jule::Ptr<_1a3e3409e_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1a47a280c_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1a754beaa:;
				++it;
				goto _iter_begin_1a754beaa;
			}
			_iter_end_1a754beaa:;
		};
		_1a47a280c_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1c83c5d46_Deadcode) {
		_1a483ca40_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a480a337_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a4846d79_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a48480bc_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a4846d79_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a4847dd0_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a4849772_LogFlat(_1b9db24ab_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1a4849981_LogError(_1b9db24ab_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1a4846d79_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a3e1e1aa_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a3e1e1aa_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1b9d336e6_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1b9d336e6_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a3e1e1aa_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1b9d1351c_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1b9d1351c_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1b9d1351c_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a48480bc_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a4849b90_Log(_1b9db24ab_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a755d5d7:;
			{
				static__1a4849772_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a755d64d:;
			{
				static__1a4849981_LogError(_6520_l);
			}
		}
		_match_end_1a755d4e9:;
	};
}



inline void static__1a4849d9e_PrintLogs(jule::Slice<_1b9db24ab_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1a755767a:;
		if (it != expr.end()) {
			_1b9db24ab_Log &_7616_l = *it;
			{
				static__1a4849b90_Log(_7616_l);
			}
			_iter_next_1a755767a:;
			++it;
			goto _iter_begin_1a755767a;
		}
		_iter_end_1a755767a:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a3e1e1aa_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a48494b9_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a4e6a0d4_Unix(_1a4e69c2c_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a4e6c669_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1a4e6c9ee_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e69c2c_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a4e6a3c0_Time static__1a4e6a766_Unix(jule::U64 _9120_sec) {
	return _1a4e6a3c0_Time{._field_sec=_9120_sec};
}



inline _1a4e6a3c0_Time static__1a4e6a964_Now(void) {
	return static__1a4e6a766_Unix(static_cast<jule::U64>(_1a4e6c35b_unix()));
}



inline jule::U64 _1a4e6adb5_Unix(_1a4e6a3c0_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1a4e6b129_Day(_1a4e6a3c0_Time* _self_) {
	return _1a4e6c0a3_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1a4e6b38d_Month(_1a4e6a3c0_Time* _self_) {
	return _1a4e6c0a3_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1a4e6b602_Year(_1a4e6a3c0_Time* _self_) {
	return _1a4e6c0a3_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1a4e6b866_Second(_1a4e6a3c0_Time* _self_) {
	return _1a4e6c0a3_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1a4e6baca_Minute(_1a4e6a3c0_Time* _self_) {
	return _1a4e6c0a3_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1a4e6bd3e_Hour(_1a4e6a3c0_Time* _self_) {
	return _1a4e6c0a3_Abs(&(*_self_))._field_Hour;
}



inline _1a4e69c2c_AbsTime _1a4e6c0a3_Abs(_1a4e6a3c0_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a4e692c0_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1a4e692c0_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1a7590dbc:;
	}
	_iter_end_1a7590dbc:;;
	_1a4e69c2c_AbsTime _17417_t = _1a4e69c2c_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e6a3c0_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4db554b_scopeCoder> static__1a4db5b23_new(jule::Ptr<_1a4e72619_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1a4db554b_scopeCoder>(_1a4db554b_scopeCoder{._field_oc=_5524_oc});
}



inline void _1a4db5d98_rangeIndexIter(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22103_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1a4dd2788_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1a4dd2cc7_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1c83c22c6_Copy && _1a4dbacd2_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a4dc8b8b_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, _6213_begin);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1a4e73c69_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a4dd7815_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_1c83c22c6_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1a4dbb167_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1a4e73c69_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a4dd7815_indent(_self_.get()._field_oc);
	};
	_1a4dba70a_scope(_self_, _6139_it.get()._field_Scope);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, _6313_next);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a4dd7815_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd24e1_var(_6139_it.get()._field_KeyA));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a4dd7815_indent(_self_.get()._field_oc);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a4e16e3d_write(_self_.get()._field_oc, _6213_begin);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2a30_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4db611d_rangeHashmapIter(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22103_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1a4dd2788_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1a4dd2cc7_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1c83c22c6_Copy && _1a4dbacd2_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a4dc8b8b_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, _13013_begin);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_1c83c22c6_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1a4dbb167_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1a4e73c69_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a4dd7815_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_1c83c22c6_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1a4dbb167_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1a4e73c69_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a4dd7815_indent(_self_.get()._field_oc);
	};
	_1a4dba70a_scope(_self_, _12941_it.get()._field_Scope);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, _13113_next);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a4e16e3d_write(_self_.get()._field_oc, _13013_begin);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2a30_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4db6393_ifCase(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e21531_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a4dba70a_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1a4db6618_conditional(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e2190a_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1a7654aa7:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e21531_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1a7654aa7;
				};
				if (_20517_writed) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1a4db6393_ifCase(_self_, _20621_elif);
			}
			_iter_next_1a7654aa7:;
			++it;
			goto _iter_begin_1a7654aa7;
		}
		_iter_end_1a7654aa7:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a4dba70a_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1a4db688d_infIter(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e21ae7_InfIter> _22431_it) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4dba70a_scope(_self_, _22431_it.get()._field_Scope);
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2cc7_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2a30_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a4db6b13_whileIter(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e21cd4_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1a4dba210_st(_self_, _24133_it.get()._field_Next);
		};
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4dba70a_scope(_self_, _24133_it.get()._field_Scope);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2cc7_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2a30_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a4db6d88_rangeIter(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22103_RangeIter> _27433_it) {
	{
		
		if ((_1a3ed1c95_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a766614b:;
			{
				_1a4db5d98_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1a3ed1a31_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7665d1b:;
			{
				_1a4db5d98_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1a3ed2746_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7665d82:;
			{
				_1a4db611d_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1a7665ca5:;
			{
				_1a4db5d98_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1a7665bc8:;
	};
}



inline void _1a4db710d_cont(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e222e0_ContSt> _28724_c) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2cc7_iterNext(_28724_c.get()._field_It));
}



inline void _1a4db7383_label(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e226b9_Label> _29225_l) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd306e_label(_29225_l.get()._field_Ident));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a4db7608_gotoSt(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e228a6_GotoSt> _29726_gt) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd306e_label(_29726_gt.get()._field_Ident));
}



inline void _1a4db787d_postfix(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22a93_Postfix> _30231_p) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a4e16e3d_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1a4db7b03_assign(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22c80_Assign> _30930_a) {
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1a4db7d78_mapLookupAssign(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22e6c_MultiAssign>& _31540_a) {
	jule::Ptr<_1a31c1150_IndexingExprModel> _31617_iem = _31540_a.get()._field_R.operator jule::Ptr<_1a31c1150_IndexingExprModel>();;
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Expr.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _31617_iem.get()._field_Index.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_31540_a.get()._field_L[0LL] != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[0LL]);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_31540_a.get()._field_L[1LL] != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _31540_a.get()._field_L[1LL]);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4db80ed_multiAssign(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e22e6c_MultiAssign> _33835_a) {
	{
		auto &_match_expr{ _33835_a.get()._field_R };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c1150_IndexingExprModel>>()) {
			_case_begin_1a76779ba:;
			{
				_1a4db7d78_mapLookupAssign(_self_, _33835_a);
				return;;
			}
		}
		_match_end_1a76777ab:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _33835_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1a767889a:;
		if (it != expr.end()) {
			jule::I64 _34714_i = it - expr.begin();
			jule::Any _34721_l = *it;
			{
				if ((_34721_l == nullptr)) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _34721_l);
				};
				if (((_33835_a.get()._field_L.len() - _34714_i) > 1LL)) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a767889a:;
			++it;
			_34714_i++;
			goto _iter_begin_1a767889a;
		}
		_iter_end_1a767889a:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _33835_a.get()._field_R);
}



inline jule::Fn<void(void)> _1a4db840b_matchExpr(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23159_Match> _36133_m) {
	if ((!(_1a3ea3838_IsConst(_36133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1a31ba3e1_IsBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1a31b8048_ReadBool(_36133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4dc8b8b_model(_self_.get()._field_oc.get()._field_ec, _36133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1a4db872a_case(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23159_Match> _37128_m, jule::Ptr<_1a3e236a9_Case> _37143_c) {
	if (((_37143_c.get()._field_Exprs.len() != 0LL) && (!(_1a3e23577_IsGenericTypeMatch(_37128_m.ptr()))))) {
		if (((_37128_m.get()._field_Cases.len() > 0LL) && (_37128_m.get()._field_Cases[0LL] == _37143_c))) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _37143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1a7681793:;
			if (it != expr.end()) {
				jule::I64 _37818_i = it - expr.begin();
				jule::Ptr<_1a3ea2e75_Data> _37825_expr = *it;
				{
					{
						
						if ((!(_37128_m.get()._field_TypeMatch))) {
							_case_begin_1a76830be:;
							{
								jule::Fn<void(void)> _38125_caseExpr = _1a4db840b_matchExpr(_self_, _37128_m);;
								if (_1a3ea3b46_GoodOperand(_37128_m.get()._field_Expr.ptr(), _37825_expr)) {
									if ((_38125_caseExpr != nullptr)) {
										_38125_caseExpr();
										_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								} else {
									_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
									if ((_38125_caseExpr != nullptr)) {
										_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_38125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1a7682ae6:;
							{
								_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _37825_expr.get()._field_Model);
								_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1a7682a19:;
					};
					if (((_37143_c.get()._field_Exprs.len() - _37818_i) > 1LL)) {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1a7681793:;
				++it;
				_37818_i++;
				goto _iter_begin_1a7681793;
			}
			_iter_end_1a7681793:;
		};
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_37128_m.get()._field_Default == _37143_c) && (_37128_m.get()._field_Cases.len() != 0LL))) {
		_1a4dd7815_indent(_self_.get()._field_oc);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd35ad_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37143_c))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_37143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1a4dd7815_indent(_self_.get()._field_oc);
		_1a4dba70a_scope(_self_, _37143_c.get()._field_Scope);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4db89a0_matchSt(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23159_Match> _43031_m) {
	if (((_43031_m.get()._field_Cases.len() == 0LL) && (_43031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _43513_genericTypeMatch = _1a3e23577_IsGenericTypeMatch(_43031_m.ptr());;
	if ((_43513_genericTypeMatch && ((_43031_m.get()._field_Default == nullptr) || (_43031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	if (((!(_43513_genericTypeMatch)) && (!(_1a3ea3838_IsConst(_43031_m.get()._field_Expr.ptr()))))) {
		if ((_1c83c22c6_Copy && _1a4dbacd2_isCopyOptimizable(_43031_m.get()._field_Expr))) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _43031_m.get()._field_Expr.get()._field_Model);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a4dd7815_indent(_self_.get()._field_oc);
	};
	if ((_43031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _43031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1a7694cc3:;
			if (it != expr.end()) {
				jule::Ptr<_1a3e236a9_Case> _45925_c = *it;
				{
					if ((_45925_c == nullptr)) {
						goto _iter_next_1a7694cc3;
					};
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a4dd7815_indent(_self_.get()._field_oc);
					_1a4db872a_case(_self_, _43031_m,_45925_c);
				}
				_iter_next_1a7694cc3:;
				++it;
				goto _iter_begin_1a7694cc3;
			}
			_iter_end_1a7694cc3:;
		};
	};
	if ((_43031_m.get()._field_Default != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a4db872a_case(_self_, _43031_m,_43031_m.get()._field_Default);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd3316_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43031_m))));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4db8c25_fallSt(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e239c8_FallSt> _48626_f) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd35ad_caseBegin(_48626_f.get()._field_DestCase));
}



inline void _1a4db8e9a_breakSt(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e224cc_BreakSt> _49127_b) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_49127_b.get()._field_It != 0LLU)) {
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2a30_iterEnd(_49127_b.get()._field_It));
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd3316_matchEnd(_49127_b.get()._field_Mtch));
	};
}



inline void _1a4db9220_retWithVars(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23bb5_RetSt> _50035_r) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_50035_r.get()._field_Func.get()._field_Result));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _50035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a76a053c:;
		if (it != expr.end()) {
			jule::I64 _51014_i = it - expr.begin();
			jule::Ptr<_1a3e59e4e_Var> _51021_v = *it;
			{
				if (_1ba1de750_IsIgnoreIdent(_51021_v.get()._field_Ident)) {
					_1a4dc940b_initExpr(_self_.get()._field_oc.get()._field_ec, _51021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd24e1_var(_51021_v));
				};
				if (((_50035_r.get()._field_Vars.len() - _51014_i) > 1LL)) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a76a053c:;
			++it;
			_51014_i++;
			goto _iter_begin_1a76a053c;
		}
		_iter_end_1a76a053c:;
	};
	if ((_50035_r.get()._field_Vars.len() > 1LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_50035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a4db9495_retTuple(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23bb5_RetSt> _53032_r) {
	jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _53117_datas = _53032_r.get()._field_Expr.operator jule::Ptr<_1a31c299d_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _53032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1a76a58b6:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1a3e59e4e_Var> _53221_v = *it;
			{
				if (_1ba1de750_IsIgnoreIdent(_53221_v.get()._field_Ident)) {
					goto _iter_next_1a76a58b6;
				};
				jule::Any _53621_model = _53117_datas[_53214_i].get()._field_Model;;
				if ((_53621_model == _53221_v)) {
					goto _iter_next_1a76a58b6;
				};
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd24e1_var(_53221_v));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _53621_model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a4dd7815_indent(_self_.get()._field_oc);
			}
			_iter_next_1a76a58b6:;
			++it;
			_53214_i++;
			goto _iter_begin_1a76a58b6;
		}
		_iter_end_1a76a58b6:;
	};
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_53032_r.get()._field_Func.get()._field_Result));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _53117_datas;
		auto it = expr.begin();
		_iter_begin_1a76aae3d:;
		if (it != expr.end()) {
			jule::I64 _55714_i = it - expr.begin();
			jule::Ptr<_1a3ea2e75_Data> _55721_d = *it;
			{
				jule::Ptr<_1a3e59e4e_Var> _55821_v = _53032_r.get()._field_Vars[_55714_i];;
				if (_1ba1de750_IsIgnoreIdent(_55821_v.get()._field_Ident)) {
					_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _55721_d.get()._field_Model);
				} else {
					_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd24e1_var(_55821_v));
				};
				if (((_53117_datas.len() - _55714_i) > 1LL)) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a76aae3d:;
			++it;
			_55714_i++;
			goto _iter_begin_1a76aae3d;
		}
		_iter_end_1a76aae3d:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_53032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a4db971a_retWithExprs(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23bb5_RetSt> _57536_r) {
	if ((_57536_r.get()._field_Vars.len() > 1LL)) {
		_1a4db9495_retTuple(_self_, _57536_r);
		return;;
	};
	if ((_57536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_1a3e59e4e_Var> _58321_v = _57536_r.get()._field_Vars[0LL];;
		if (((!(_1ba1de750_IsIgnoreIdent(_58321_v.get()._field_Ident))) && (_57536_r.get()._field_Expr != _58321_v))) {
			jule::Str _58521_ident = static__1a4dd24e1_var(_58321_v);;
			_1a4e16e3d_write(_self_.get()._field_oc, _58521_ident);
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1a4dd7815_indent(_self_.get()._field_oc);
			if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_57536_r.get()._field_Func.get()._field_Result));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1a4e16e3d_write(_self_.get()._field_oc, _58521_ident);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1a4e16e3d_write(_self_.get()._field_oc, _58521_ident);
			};
			return;;
		};
	};
	if (_57536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_57536_r.get()._field_Func.get()._field_Result));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _57536_r.get()._field_Expr);
	return;;
}



inline void _1a4db9990_retSt(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e23bb5_RetSt> _61929_r) {
	if (((_61929_r.get()._field_Expr == nullptr) && (_61929_r.get()._field_Vars.len() == 0LL))) {
		if (_61929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_61929_r.get()._field_Expr == nullptr)) {
		_1a4db9220_retWithVars(_self_, _61929_r);
		return;;
	};
	_1a4db971a_retWithExprs(_self_, _61929_r);
}



inline void _1a4db9e8a_var(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e59e4e_Var> _65427_v) {
	if ((!(_65427_v.get()._field_Constant))) {
		_1a4e73d9b_var(_self_.get()._field_oc, _65427_v);
	};
}



inline void _1a4dba210_st(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Any _66126_st) {
	if ((_66126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _66126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e21344_Scope>>()) {
			_case_begin_1a76c39c2:;
			{
				_1a4dba70a_scope(_self_, _66126_st.operator jule::Ptr<_1a3e21344_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a76c3829:;
			{
				_1a4db9e8a_var(_self_, _66126_st.operator jule::Ptr<_1a3e59e4e_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a76c34e9:;
			{
				_1a4dc8e11_expr(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_1a3ea2e75_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e2190a_Conditional>>()) {
			_case_begin_1a76c4000:;
			{
				_1a4db6618_conditional(_self_, _66126_st.operator jule::Ptr<_1a3e2190a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
			_case_begin_1a76c4066:;
			{
				_1a4db688d_infIter(_self_, _66126_st.operator jule::Ptr<_1a3e21ae7_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21cd4_WhileIter>>()) {
			_case_begin_1a76c40cc:;
			{
				_1a4db6b13_whileIter(_self_, _66126_st.operator jule::Ptr<_1a3e21cd4_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22103_RangeIter>>()) {
			_case_begin_1a76c4143:;
			{
				_1a4db6d88_rangeIter(_self_, _66126_st.operator jule::Ptr<_1a3e22103_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e222e0_ContSt>>()) {
			_case_begin_1a76c41a9:;
			{
				_1a4db710d_cont(_self_, _66126_st.operator jule::Ptr<_1a3e222e0_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e226b9_Label>>()) {
			_case_begin_1a76c4220:;
			{
				_1a4db7383_label(_self_, _66126_st.operator jule::Ptr<_1a3e226b9_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e228a6_GotoSt>>()) {
			_case_begin_1a76c4297:;
			{
				_1a4db7608_gotoSt(_self_, _66126_st.operator jule::Ptr<_1a3e228a6_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22a93_Postfix>>()) {
			_case_begin_1a76c431e:;
			{
				_1a4db787d_postfix(_self_, _66126_st.operator jule::Ptr<_1a3e22a93_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22c80_Assign>>()) {
			_case_begin_1a76c4396:;
			{
				_1a4db7b03_assign(_self_, _66126_st.operator jule::Ptr<_1a3e22c80_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22e6c_MultiAssign>>()) {
			_case_begin_1a76c441d:;
			{
				_1a4db80ed_multiAssign(_self_, _66126_st.operator jule::Ptr<_1a3e22e6c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23159_Match>>()) {
			_case_begin_1a76c4495:;
			{
				_1a4db89a0_matchSt(_self_, _66126_st.operator jule::Ptr<_1a3e23159_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e239c8_FallSt>>()) {
			_case_begin_1a76c451c:;
			{
				_1a4db8c25_fallSt(_self_, _66126_st.operator jule::Ptr<_1a3e239c8_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e224cc_BreakSt>>()) {
			_case_begin_1a76c4594:;
			{
				_1a4db8e9a_breakSt(_self_, _66126_st.operator jule::Ptr<_1a3e224cc_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23bb5_RetSt>>()) {
			_case_begin_1a76c461b:;
			{
				_1a4db9990_retSt(_self_, _66126_st.operator jule::Ptr<_1a3e23bb5_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c84705e9_PushToSliceExprModel>>()) {
			_case_begin_1a76c4693:;
			{
				_1a4dc6b23_pushToSlice(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_1c84705e9_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c8436a66_MutSlicingExprModel>>()) {
			_case_begin_1a76c471a:;
			{
				_1a4dc8691_mutSlicing(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_1c8436a66_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c8424180_StrInsertBeginExprModel>>()) {
			_case_begin_1a76c4792:;
			{
				_1a4dc8916_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _66126_st.operator jule::Ptr<_1c8424180_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1a76c3252:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1a76c31ec:;
	};
}



inline void _1a4dba485_scopeStmts(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e21344_Scope>& _71135_s) {
	{
		auto &expr = _71135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1a76cee0c:;
		if (it != expr.end()) {
			jule::Any _71221_st = *it;
			{
				_1a4dd7815_indent(_self_.get()._field_oc);
				_1a4dba210_st(_self_, _71221_st);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a76cee0c:;
			++it;
			goto _iter_begin_1a76cee0c;
		}
		_iter_end_1a76cee0c:;
	};
}



inline void _1a4dba70a_scope(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a3e21344_Scope> _72029_s) {
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	if (_72029_s.get()._field_Deferred) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4dba485_scopeStmts(_self_, _72029_s);
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_72029_s.get()._field_Deferred) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a4dba980_funcScope(jule::Ptr<_1a4db554b_scopeCoder> _self_, jule::Ptr<_1a31ca874_FnIns> _73633_f) {
	if ((_73633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	if ((!(_1a31c8135_IsVoid(_73633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _74321_types = _1a31cb996_Types(_73633_f.ptr());;
		{
			auto &expr = _73633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1a76d6276:;
			if (it != expr.end()) {
				jule::I64 _74417_i = it - expr.begin();
				jule::Ptr<_1ba1dbeab_Token> _74420_ident = *it;
				{
					if ((_1ba1de750_IsIgnoreIdent(_74420_ident.get()._field_Kind) || _1ba1de9e7_IsAnonIdent(_74420_ident.get()._field_Kind))) {
						goto _iter_next_1a76d6276;
					};
					_1a4dd7815_indent(_self_.get()._field_oc);
					_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_74321_types[_74417_i]));
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd0dd5_toLocal(_74420_ident.get()._field_Row,_74420_ident.get()._field_Column,_74420_ident.get()._field_Kind));
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1a4dc940b_initExpr(_self_.get()._field_oc.get()._field_ec, _74321_types[_74417_i]);
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1a76d6276:;
				++it;
				_74417_i++;
				goto _iter_begin_1a76d6276;
			}
			_iter_end_1a76d6276:;
		};
	};
	_1a4dba485_scopeStmts(_self_, _73633_f.get()._field_Scope);
	if ((_73633_f.get()._field_Decl.get()._field_Exceptional && _1a31c8135_IsVoid(_73633_f.get()._field_Decl.ptr()))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a4db554b_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4dbd2bd_exprCoder> static__1a4dbd6b9_new(jule::Ptr<_1a4e72619_ObjectCoder>& _9924_oc) {
	return jule::new_ptr<_1a4dbd2bd_exprCoder>(_1a4dbd2bd_exprCoder{._field_oc=_9924_oc});
}



inline void _1a4dbd93e_string(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31618e8_Const>& _10527_c) {
	jule::Str _10613_content = _1a31b82ac_ReadStr(_10527_c.ptr());;
	if ((_10613_content.len() == 0LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11113_bytes = static_cast<jule::Slice<jule::U8>>(_10613_content);;
	jule::Str _11213_len = _1a3e1e078_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11113_bytes.len())),10LL);;
	jule::Str _11313_lit = _1a4dca110_cstrLit(_11113_bytes);;
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4e16e3d_write(_self_.get()._field_oc, _11313_lit);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a4e16e3d_write(_self_.get()._field_oc, _11213_len);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dbdbb4_boolean(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31618e8_Const>& _12228_c) {
	if (_1a31b8048_ReadBool(_12228_c.ptr())) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1a4dbdd90_nilLit(jule::Ptr<_1a4dbd2bd_exprCoder> _self_) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a4dbe19d_ftoaSpecialCases(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::F64& _13437_x) {
	{
		
		if (_1a3d64232_IsNaN(_13437_x)) {
			_case_begin_1a770860b:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1a3d6b536_IsInf(_13437_x,1LL)) {
			_case_begin_1a7707dbe:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1a3d6b536_IsInf(_13437_x,-1LL)) {
			_case_begin_1a7707e35:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1a7707d58:;
			{
				return false;
			}
		}
		_match_end_1a7707c7b:;
	};
	return true;
}



inline void _1a4dbe423_float32(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31618e8_Const>& _14828_c) {
	jule::F64 _14913_x = _1a31b8c5d_AsF64(_14828_c.ptr());;
	if (_1a4dbe19d_ftoaSpecialCases(_self_, _14913_x)) {
		return;;
	};
	{
		
		if ((_14913_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a770b3de:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14913_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a770b2bd:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1a770abd5:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, _1a4dca41d_ftoa(_14913_x,32LL));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1a770aa09:;
	};
}



inline void _1a4dbe698_float64(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31618e8_Const>& _16728_c) {
	jule::F64 _16813_x = _1a31b8c5d_AsF64(_16728_c.ptr());;
	if (_1a4dbe19d_ftoaSpecialCases(_self_, _16813_x)) {
		return;;
	};
	{
		
		if ((_16813_x == jule::MAX_F64)) {
			_case_begin_1a770e656:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16813_x == jule::MIN_F64)) {
			_case_begin_1a770ec61:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1a770de4c:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, _1a4dca41d_ftoa(_16813_x,64LL));
			}
		}
		_match_end_1a770dc71:;
	};
}



inline void _1a4dbe9b7_constant(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31618e8_Const> _18632_c, jule::Bool _18643_fx32) {
	{
		
		if (_1a31ba655_IsStr(_18632_c.ptr())) {
			_case_begin_1a7711a76:;
			{
				_1a4dbd93e_string(_self_, _18632_c);
			}
		}
		else if (_1a31ba3e1_IsBool(_18632_c.ptr())) {
			_case_begin_1a7711614:;
			{
				_1a4dbdbb4_boolean(_self_, _18632_c);
			}
		}
		else if (_1a31ba8b9_IsF64(_18632_c.ptr())) {
			_case_begin_1a771167a:;
			{
				{
					
					if (_18643_fx32) {
						_case_begin_1a7713a56:;
						{
							_1a4dbe423_float32(_self_, _18632_c);
						}
					}
					else {
						_case_begin_1a77136b0:;
						{
							_1a4dbe698_float64(_self_, _18632_c);
						}
					}
					_match_end_1a77135d3:;
				};
			}
		}
		else if (_1a31b9e18_IsI64(_18632_c.ptr())) {
			_case_begin_1a77116e1:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, _1a4dca6b5_itoa(static_cast<jule::I64>(_1a31b7a70_ReadI64(_18632_c.ptr()))));
			}
		}
		else if (_1a31ba17c_IsU64(_18632_c.ptr())) {
			_case_begin_1a7711757:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, _1a4dca95c_utoa(static_cast<jule::U64>(_1a31b7cd4_ReadU64(_18632_c.ptr()))));
			}
		}
		else if (_1a31bab2d_IsNil(_18632_c.ptr())) {
			_case_begin_1a771211a:;
			{
				_1a4dbdd90_nilLit(_self_);
			}
		}
		else {
			_case_begin_1a771159d:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1a77114c1:;
	};
}



inline void _1a4dbed80_divByZeroBinary(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1ba1dbeab_Token>& _21036_op, jule::Ptr<_1a31bee0c_OperandExprModel>& _21053_l, jule::Ptr<_1a31bee0c_OperandExprModel>& _21080_r) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21036_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1a7716e66:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a7716ecc:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1a7716d89:;
	};
	if ((!(_1d28c71b7_Production))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a4e47468_locInfo(_self_.get()._field_oc, _21036_op);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a4dc8e11_expr(_self_, _21053_l.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a4dc8e11_expr(_self_, _21080_r.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc0105_unsafeBinary(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c00e9_BinopExprModel> _23236_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4dc8b8b_model(_self_, _23236_m.get()._field_Left.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a4e16e3d_write(_self_.get()._field_oc, _23236_m.get()._field_Op.get()._field_Kind);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a4dc8b8b_model(_self_, _23236_m.get()._field_Right.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc037a_binary(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c00e9_BinopExprModel> _24230_m) {
	{
		auto &_match_expr{ _24230_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1a771dce7:;
			{
				if ((_1a3ed226d_Struct(_24230_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1a4dbed80_divByZeroBinary(_self_, _24230_m.get()._field_Op,_24230_m.get()._field_Left,_24230_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1a771dc2b:;
	};
	_1a4dc0105_unsafeBinary(_self_, _24230_m);
}



inline void _1a4dc0600_var(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a3e59e4e_Var> _25427_m) {
	if (_25427_m.get()._field_CppLinked) {
		jule::Ptr<_1a30c5a27_Directive> _25617_d = _1a4e7dcda_findDirective(_25427_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25617_d != nullptr)) {
			_1a4e16e3d_write(_self_.get()._field_oc, _1a4e758b4_concatAllParts(_25617_d.get()._field_Args));
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd24e1_var(_25427_m));
}



inline void _1a4dc0875_structureIns(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a312ad46_StructIns> _26536_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e79d6e_structureIns(_26536_m));
}



inline void _1a4dc0aea_unary(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c02d6_UnaryExprModel> _26929_m) {
	{
		auto &_match_expr{ _26929_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a7723ca8:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a4dc8e11_expr(_self_, _26929_m.get()._field_Expr.get()._field_Model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a7723d30:;
			{
				if ((_1d28c71b7_Production || (_1a3ed1080_Sptr(_26929_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1a7723bcb;
				};
				_1a4dc8e11_expr(_self_, _26929_m.get()._field_Expr.get()._field_Model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a4e47468_locInfo(_self_.get()._field_oc, _26929_m.get()._field_Op);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1a7723bcb:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4e16e3d_write(_self_.get()._field_oc, _26929_m.get()._field_Op.get()._field_Kind);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4dc8e11_expr(_self_, _26929_m.get()._field_Expr.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a4dc0d70_structureLit(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c06b0_StructLitExprModel> _29336_m) {
	if (_29336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd1ea2_structureIns(_29336_m.get()._field_Strct));
	if (_29336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29336_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29336_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1a772ba91:;
			if (it != expr.end()) {
				jule::I64 _30617_i = it - expr.begin();
				jule::Ptr<_1a3102306_FieldIns> _30620_f = *it;
				{
					{
						auto &expr = _29336_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1a772c883:;
						if (it != expr.end()) {
							jule::Ptr<_1a31c04c3_StructArgExprModel> _30729_arg = *it;
							{
								if ((_30729_arg.get()._field_Field == _30620_f)) {
									_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2249_field(_30729_arg.get()._field_Field.get()._field_Decl));
									_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a4dc8e11_expr(_self_, _30729_arg.get()._field_Expr);
									if (((_29336_m.get()._field_Strct.get()._field_Fields.len() - _30617_i) > 1LL)) {
										_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1a772ba91;
								};
							}
							_iter_next_1a772c883:;
							++it;
							goto _iter_begin_1a772c883;
						}
						_iter_end_1a772c883:;
					};
				}
				_iter_next_1a772ba91:;
				++it;
				_30617_i++;
				goto _iter_begin_1a772ba91;
			}
			_iter_end_1a772ba91:;
		};
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a4dc10e5_allocStructure(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c089c_AllocStructLitExprModel> _32438_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd1ea2_structureIns(_32438_m.get()._field_Lit.get()._field_Strct));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a4dc0d70_structureLit(_self_, _32438_m.get()._field_Lit);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc136a_casting(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c0a89_CastingExprModel> _33231_m) {
	{
		
		if (((_1a3ed0d1b_Prim(_33231_m.get()._field_Kind.ptr()) != nullptr) && _1a3ed6b79_IsAny(_1a3ed0d1b_Prim(_33231_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a7733e50:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_33231_m.get()._field_Kind));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a4dc8b8b_model(_self_, _33231_m.get()._field_Expr);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a3ed12e4_Ptr(_33231_m.get()._field_ExprKind.ptr()) != nullptr) || (_1a3ed12e4_Ptr(_33231_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7733d1d:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_33231_m.get()._field_Kind));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a4dc8e11_expr(_self_, _33231_m.get()._field_Expr);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1a3ed24d2_Trait(_33231_m.get()._field_ExprKind.ptr()) != nullptr) || ((_1a3ed0d1b_Prim(_33231_m.get()._field_ExprKind.ptr()) != nullptr) && _1a3ed6b79_IsAny(_1a3ed0d1b_Prim(_33231_m.get()._field_ExprKind.ptr()).ptr())) || (_1a3ed17bc_TypeEnum(_33231_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a77339dd:;
			{
				_1a4dc8b8b_model(_self_, _33231_m.get()._field_Expr);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1d28c71b7_Production) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_33231_m.get()._field_Kind));
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1a3ed1080_Sptr(_33231_m.get()._field_Kind.ptr()) != nullptr)) {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_1a3ed1080_Sptr(_33231_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_33231_m.get()._field_Kind));
					};
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1a4e47468_locInfo(_self_.get()._field_oc, _33231_m.get()._field_Token);
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1a3ed24d2_Trait(_33231_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7733a54:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_33231_m.get()._field_Kind));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a4dc8e11_expr(_self_, _33231_m.get()._field_Expr);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a4e16e3d_write(_self_.get()._field_oc, _1a3e1e1aa_Itoa(static_cast<jule::I64>(_1a4e07c64_findTypeOffset(_self_.get()._field_oc.ptr(), _1a3ed24d2_Trait(_33231_m.get()._field_Kind.ptr()),_33231_m.get()._field_ExprKind))));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1a7733977:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_33231_m.get()._field_Kind));
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1a4dc8e11_expr(_self_, _33231_m.get()._field_Expr);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a773389a:;
	};
}



inline void _1a4dc15e0_args(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Slice<jule::Any> _38328_args) {
	if ((_38328_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38328_args;
		auto it = expr.begin();
		_iter_begin_1a7745505:;
		if (it != expr.end()) {
			jule::I64 _38714_i = it - expr.begin();
			jule::Any _38721_a = *it;
			{
				_1a4dc8e11_expr(_self_, _38721_a);
				if (((_38328_args.len() - _38714_i) > 1LL)) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a7745505:;
			++it;
			_38714_i++;
			goto _iter_begin_1a7745505;
		}
		_iter_end_1a7745505:;
	};
}



inline void _1a4dc1865_modelForCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Any _39536_expr) {
	{
		auto &_match_expr{ _39536_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a31ca874_FnIns>>()) {
			_case_begin_1a7747727:;
			{
				_1a4dc4648_funcIns(_self_, _39536_expr.operator jule::Ptr<_1a31ca874_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a774779e:;
			{
				jule::Ptr<_1a31c200d_StructSubIdentExprModel> _40121_ssie = _39536_expr.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>();;
				if ((_40121_ssie.get()._field_Method != nullptr)) {
					_1a4dc4648_funcIns(_self_, _40121_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1a7747617:;
	};
	_1a4dc8b8b_model(_self_, _39536_expr);
}



inline void _1a4dc1ada_pushCallInf(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c0c76_FnCallExprModel>& _41032_m) {
	if ((_1d28c71b7_Production || ((!(_41032_m.get()._field_Func.get()._field_Anon)) && (!(_1a4dcb0cd_isBuiltinCallHasDebuginf(_41032_m)))))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_41032_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _41032_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
				_case_begin_1a774b462:;
				{
					if (_41032_m.get()._field_Expr.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1a774b044;
				}
			}
			else {
				_case_begin_1a774b044:;
				{
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1a774adce:;
		};
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a4e47468_locInfo(_self_.get()._field_oc, _41032_m.get()._field_Token);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_41032_m.get()._field_Args.len() != 0LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1a4dc1de8_isWrapped(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c0c76_FnCallExprModel>& _43534_m) {
	if ((((!(_1a31cbc0a_IsBuiltin(_43534_m.get()._field_Func.ptr()))) && (_43534_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a31c69b3_IsSelf(_43534_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43534_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
				_case_begin_1a774ee49:;
				{
					jule::Ptr<_1a31c200d_StructSubIdentExprModel> _43925_ssie = _43534_m.get()._field_Expr.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>();;
					{
						
						if (_1a31c6c27_IsRef(_43534_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1a3ed1080_Sptr(_43925_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1a77515dd:;
							{
								goto _match_end_1a7750d90;
							}
						}
						else {
							_case_begin_1a7750e06:;
							{
								if ((_1a3ed226d_Struct(_43925_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43925_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a4dc8b8b_model(_self_, _43925_ssie.get()._field_Expr.get()._field_Model);
										_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1a7750d90:;
					};
				}
			}
			_match_end_1a774ec3a:;
		};
	};
	return false;
}



inline void _1a4dc216d_pureFuncCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c0c76_FnCallExprModel>& _45937_m) {
	jule::Bool _46013_wrapped = _1a4dc1de8_isWrapped(_self_, _45937_m);;
	if (_45937_m.get()._field_IsCo) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1a4dc1865_modelForCall(_self_, _45937_m.get()._field_Expr);
	if ((!(_1a31cbc0a_IsBuiltin(_45937_m.get()._field_Func.ptr())))) {
		if ((_45937_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45937_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1a4e7e170_hasDirective(_45937_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45937_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1a775755b:;
					if (it != expr.end()) {
						jule::I64 _46926_i = it - expr.begin();
						jule::Ptr<_1a3ecc4cc_InsGeneric> _46933_g = *it;
						{
							_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_46933_g.get()._field_Kind));
							if (((_45937_m.get()._field_Func.get()._field_Generics.len() - _46926_i) > 1LL)) {
								_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1a775755b:;
						++it;
						_46926_i++;
						goto _iter_begin_1a775755b;
					}
					_iter_end_1a775755b:;
				};
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a4dc1ada_pushCallInf(_self_, _45937_m);
	jule::Bool _48017_locinfo = false;;
	if ((((!(_1a31cbc0a_IsBuiltin(_45937_m.get()._field_Func.ptr()))) && (_45937_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a31c69b3_IsSelf(_45937_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45937_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
				_case_begin_1a775b62b:;
				{
					jule::Ptr<_1a31c200d_StructSubIdentExprModel> _48425_ssie = _45937_m.get()._field_Expr.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>();;
					{
						
						if (_1a31c6c27_IsRef(_45937_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1a7764007:;
							{
								_1a4dc8b8b_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1a3ed1080_Sptr(_48425_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1a776406d:;
							{
								_1a4dc8b8b_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1d28c71b7_Production))) {
									_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a4e47468_locInfo(_self_.get()._field_oc, _45937_m.get()._field_Token);
									_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1a775c63d:;
							{
								if ((_1a3ed226d_Struct(_48425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_46013_wrapped) {
									_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a4dc8b8b_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1a775c5c7:;
					};
					if ((_45937_m.get()._field_Args.len() > 0LL)) {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>>()) {
				_case_begin_1a775b692:;
				{
					_1a4dc8b8b_model(_self_, _45937_m.get()._field_Expr.operator jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_1d28c71b7_Production))) {
						_48017_locinfo=true;
					};
					if ((_45937_m.get()._field_Args.len() > 0LL)) {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1a775b4c7:;
		};
	};
	_1a4dc15e0_args(_self_, _45937_m.get()._field_Args);
	if (_48017_locinfo) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a4e47468_locInfo(_self_.get()._field_oc, _45937_m.get()._field_Token);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_46013_wrapped) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45937_m.get()._field_IsCo) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a4dc23e3_funcCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c0c76_FnCallExprModel> _53832_m) {
	if (((_1a31cbc0a_IsBuiltin(_53832_m.get()._field_Func.ptr()) || (!(_53832_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53832_m.get()._field_Except != nullptr) && (_53832_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1a4dc216d_pureFuncCall(_self_, _53832_m);
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a4dc216d_pureFuncCall(_self_, _53832_m);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	if ((_53832_m.get()._field_Except != nullptr)) {
		if (((_53832_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53832_m.get()._field_Assigned)))) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a4dba70a_scope(_self_.get()._field_oc.get()._field_sc, _53832_m.get()._field_Except);
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _56021_forwarded = _1a4dcad14_isForwarded(_53832_m.get()._field_Except);;
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_56021_forwarded) {
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1a4dba70a_scope(_self_.get()._field_oc.get()._field_sc, _53832_m.get()._field_Except);
			if (_56021_forwarded) {
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a4dc940b_initExpr(_self_, _53832_m.get()._field_Func.get()._field_Result);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a4e47468_locInfo(_self_.get()._field_oc, _53832_m.get()._field_Token);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1a31c8135_IsVoid(_53832_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1a4dd7815_indent(_self_.get()._field_oc);
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	};
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a4dc2668_slice(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c0e63_SliceExprModel> _58929_m) {
	if ((_58929_m.get()._field_Elems.len() == 0LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e78ca2_asSlice(_58929_m.get()._field_ElemKind));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e78ca2_asSlice(_58929_m.get()._field_ElemKind));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a4dc15e0_args(_self_, _58929_m.get()._field_Elems);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a4dc28dd_indexing(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c1150_IndexingExprModel> _60132_m) {
	_1a4dc8b8b_model(_self_, _60132_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1d28c71b7_Production || (_1a3ed12e4_Ptr(_60132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a3ed2746_Map(_60132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1a4dcb30e_isExprComesFromBind(_60132_m.get()._field_Expr)) {
			_case_begin_1a777ebe3:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a4dc8e11_expr(_self_, _60132_m.get()._field_Index.get()._field_Model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a777e7a3:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a4e47468_locInfo(_self_.get()._field_oc, _60132_m.get()._field_Token);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1a4dc8e11_expr(_self_, _60132_m.get()._field_Index.get()._field_Model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a777e73c:;
	};
}



inline void _1a4dc2b63_unsafeIndexing(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1c846418c_UnsafeIndexingExprModel> _62138_m) {
	_1a4dc8b8b_model(_self_, _62138_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1d28c71b7_Production || (_1a3ed12e4_Ptr(_62138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a3ed2746_Map(_62138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a77849b7:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a4dc8e11_expr(_self_, _62138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a7784577:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a4dc8e11_expr(_self_, _62138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a7784511:;
	};
}



inline void _1a4dc2dd8_anonFunc(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c133c_AnonFnExprModel> _63832_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b1d3_func(_63832_m.get()._field_Func));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a4e73b37_paramsIns(_self_.get()._field_oc, _63832_m.get()._field_Func.get()._field_Params);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7ab94_funcInsResult(_63832_m.get()._field_Func));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a4dba980_funcScope(_self_.get()._field_oc.get()._field_sc, _63832_m.get()._field_Func);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc315d_mapExpr(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c1716_MapExprModel> _64931_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_64931_m.get()._field_KeyKind));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_64931_m.get()._field_ValKind));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64931_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64931_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1a778dc35:;
			if (it != expr.end()) {
				jule::I64 _65618_i = it - expr.begin();
				jule::Ptr<_1a31c1529_KeyValPairExprModel> _65625_pair = *it;
				{
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a4dc8e11_expr(_self_, _65625_pair.get()._field_Key);
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a4dc8e11_expr(_self_, _65625_pair.get()._field_Val);
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64931_m.get()._field_Entries.len() - _65618_i) > 1LL)) {
						_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1a778dc35:;
				++it;
				_65618_i++;
				goto _iter_begin_1a778dc35;
			}
			_iter_end_1a778dc35:;
		};
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a4dc33d3_slicing(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c1903_SlicingExprModel> _67031_m) {
	_1a4dc8b8b_model(_self_, _67031_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1d28c71b7_Production))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a4e47468_locInfo(_self_.get()._field_oc, _67031_m.get()._field_Token);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a4dc8e11_expr(_self_, _67031_m.get()._field_Left);
	if ((_67031_m.get()._field_Right != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a4dc8e11_expr(_self_, _67031_m.get()._field_Right);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc3658_traitSub(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel> _68632_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd16bb_traitDecl(_68632_m.get()._field_Trt));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a4dc8b8b_model(_self_, _68632_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd117c_func(_68632_m.get()._field_Method));
}



inline void _1a4dc38cd_structureSub(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c200d_StructSubIdentExprModel> _69536_m) {
	_1a4dc8b8b_model(_self_, _69536_m.get()._field_Expr.get()._field_Model);
	if ((_69536_m.get()._field_Field != nullptr)) {
		if ((_1a3ed12e4_Ptr(_69536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1a3ed1080_Sptr(_69536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1d28c71b7_Production))) {
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1a4e47468_locInfo(_self_.get()._field_oc, _69536_m.get()._field_Token);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd2249_field(_69536_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1a4dc3b53_commonIdent(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c25c4_CommonIdentExprModel> _71531_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, _71531_m.get()._field_Ident);
}



inline void _1a4dc3dc8_commonSub(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c27b1_CommonSubIdentExprModel> _71933_m) {
	_1a4dc8b8b_model(_self_, _71933_m.get()._field_Expr);
	{
		
		if ((_1a3ed12e4_Ptr(_71933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a779ea7b:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1a3ed1080_Sptr(_71933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a779de21:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1d28c71b7_Production))) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a4e47468_locInfo(_self_.get()._field_oc, _71933_m.get()._field_Token);
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1a779e63b:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1a779e5c5:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, _71933_m.get()._field_Ident);
}



inline void _1a4dc414d_array(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c23d7_ArrayExprModel> _73829_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7a116_array(_73829_m.get()._field_Kind));
	if ((_73829_m.get()._field_Elems.len() == 0LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73829_m.get()._field_Elems.len() == 2LL) && (_73829_m.get()._field_Elems[1LL] == nullptr))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a4dc8e11_expr(_self_, _73829_m.get()._field_Elems[0LL]);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a4dc15e0_args(_self_, _73829_m.get()._field_Elems);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a4dc43c3_funcInsCommon(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31ca874_FnIns> _76137_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b1d3_func(_76137_m));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4dc4648_funcIns(_self_, _76137_m);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc4648_funcIns(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31ca874_FnIns> _76831_m) {
	if (((_76831_m.get()._field_Decl != nullptr) && _76831_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1a30c5a27_Directive> _77017_d = _1a4e7dcda_findDirective(_76831_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_77017_d != nullptr)) {
			_1a4e16e3d_write(_self_.get()._field_oc, _1a4e758b4_concatAllParts(_77017_d.get()._field_Args));
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd1424_funcIns(_76831_m));
}



inline void _1a4dc48bd_tuple(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c299d_TupleExprModel> _77929_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77929_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1a77aca12:;
		if (it != expr.end()) {
			jule::I64 _78114_i = it - expr.begin();
			jule::Ptr<_1a3ea2e75_Data> _78121_d = *it;
			{
				_1a4dc8e11_expr(_self_, _78121_d.get()._field_Model);
				if (((_77929_m.get()._field_Datas.len() - _78114_i) > 1LL)) {
					_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a77aca12:;
			++it;
			_78114_i++;
			goto _iter_begin_1a77aca12;
		}
		_iter_end_1a77aca12:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc4b43_newCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3251_BuiltinNewCallExprModel> _79031_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_79031_m.get()._field_Kind));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_79031_m.get()._field_Init != nullptr)) {
		_1a4dc8e11_expr(_self_, _79031_m.get()._field_Init);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc4db8_outCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel> _80031_m) {
	if ((_80031_m.get()._field_Debug && _1d28c71b7_Production)) {
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a4dc8e11_expr(_self_, _80031_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc513d_outlnCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel> _80933_m) {
	if ((_80933_m.get()._field_Debug && _1d28c71b7_Production)) {
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a4dc8e11_expr(_self_, _80933_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc53b3_panicCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel> _81833_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a4dc8e11_expr(_self_, _81833_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a4e47468_locInfo(_self_.get()._field_oc, _81833_m.get()._field_Token);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a4dc5638_assertCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel> _82634_m) {
	if (_1d28c71b7_Production) {
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a4dc8e11_expr(_self_, _82634_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a4e16e3d_write(_self_.get()._field_oc, _1a4dca110_cstrLit(static_cast<jule::Slice<jule::U8>>(_82634_m.get()._field_Log)));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a4e47468_locInfo(_self_.get()._field_oc, _82634_m.get()._field_Token);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a4dc58ad_errorCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel> _83933_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1a31c8135_IsVoid(_83933_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_83933_m.get()._field_Func.get()._field_Result));
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1a4dc8e11_expr(_self_, _83933_m.get()._field_Err);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc5b33_copyCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c1ccc_BuiltinCopyCallExprModel> _85232_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a4dc8b8b_model(_self_, _85232_m.get()._field_Dest.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a3ed0d1b_Prim(_85232_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a4dc8b8b_model(_self_, _85232_m.get()._field_Src.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a3ed0d1b_Prim(_85232_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc5da8_lenCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel> _86831_m) {
	_1a4dc8b8b_model(_self_, _86831_m.get()._field_Expr.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1a4dc612d_capCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel> _87331_m) {
	_1a4dc8b8b_model(_self_, _87331_m.get()._field_Expr.get()._field_Model);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1a4dc63a3_makeCallSlice(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>& _87838_m) {
	jule::Ptr<_1a3ed78c2_Slc> _87917_slice = _1a3ed1c95_Slc(_87838_m.get()._field_Kind.ptr());;
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_87838_m.get()._field_Kind));
	if ((_1a3ed1558_Enum(_87917_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_87838_m.get()._field_Cap != nullptr)) {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1a4dc8e11_expr(_self_, _87838_m.get()._field_Len);
	if ((_87838_m.get()._field_Cap != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a4dc8e11_expr(_self_, _87838_m.get()._field_Cap);
	};
	if ((_1a3ed1558_Enum(_87917_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a4dc940b_initExpr(_self_, _87917_slice.get()._field_Elem);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc6628_makeCallStr(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>& _90436_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a4dc8e11_expr(_self_, _90436_m.get()._field_Len);
	if ((_90436_m.get()._field_Cap != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a4dc8e11_expr(_self_, _90436_m.get()._field_Cap);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc689d_makeCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel> _91532_m) {
	if ((_1a3ed1c95_Slc(_91532_m.get()._field_Kind.ptr()) != nullptr)) {
		_1a4dc63a3_makeCallSlice(_self_, _91532_m);
		return;;
	};
	_1a4dc6628_makeCallStr(_self_, _91532_m);
}



inline void _1a4dc6b23_pushToSlice(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1c84705e9_PushToSliceExprModel> _92335_m) {
	jule::I64 _92413_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1a4dc8b8b_model(_self_, _92335_m.get()._field_Dest);
	jule::Str _92613_dest = _self_.get()._field_oc.get()._field_Obj.slice(_92413_n);;
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1a4e16e3d_write(_self_.get()._field_oc, _92613_dest);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a4e16e3d_write(_self_.get()._field_oc, _1a3e1e1aa_Itoa(static_cast<jule::I64>(_92335_m.get()._field_Elems.get()._field_Elems.len())));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _92335_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1a77d285b:;
		if (it != expr.end()) {
			jule::Any _93321_e = *it;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, _92613_dest);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1a4dc8b8b_model(_self_, _93321_e);
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1a77d285b:;
			++it;
			goto _iter_begin_1a77d285b;
		}
		_iter_end_1a77d285b:;
	};
}



inline void _1a4dc6d98_appendCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel> _94234_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a4dc8b8b_model(_self_, _94234_m.get()._field_Dest);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a4dc8b8b_model(_self_, _94234_m.get()._field_Elements);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc711d_cloneCall(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel> _95033_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a4dc8b8b_model(_self_, _95033_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc7393_sizeof(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c472a_SizeofExprModel> _95630_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a4dc8b8b_model(_self_, _95630_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc7618_alignof(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c4917_AlignofExprModel> _96231_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a4dc8b8b_model(_self_, _96231_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a4dc7926_runeLit(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c4b04_RuneExprModel> _96827_m) {
	if ((_96827_m.get()._field_Code <= 127LL)) {
		jule::Str _97021_b = _1a4dc9a49_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_96827_m.get()._field_Code)));;
		if ((_97021_b == jule::Str("'", 1))) {
			_97021_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _97021_b) + jule::Str("'", 1));
	};
	return _1a4dca6b5_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_96827_m.get()._field_Code)));
}



inline void _1a4dc7b9b_structureStatic(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c21ea_StructStaticIdentExprModel> _97939_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd1424_funcIns(_97939_m.get()._field_Method));
}



inline void _1a4dc7e21_integratedToStr(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel> _98339_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a4dc8b8b_model(_self_, _98339_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a4dc8196_backendEmit(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c4ecd_BackendEmitExprModel> _98935_m) {
	if ((_98935_m.get()._field_Exprs.len() == 0LL)) {
		_1a4e16e3d_write(_self_.get()._field_oc, _98935_m.get()._field_Code);
		return;;
	};
	jule::I64 _99413_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _99517_args = jule::Slice<jule::Any>::alloc(_98935_m.get()._field_Exprs.len());;
	{
		auto &expr = _98935_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a77e10ea:;
		if (it != expr.end()) {
			jule::I64 _99614_i = it - expr.begin();
			jule::Any _99621_expr = *it;
			{
				_1a4dc8e11_expr(_self_, _99621_expr);
				_99517_args[_99614_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_99413_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_99413_n);
			}
			_iter_next_1a77e10ea:;
			++it;
			_99614_i++;
			goto _iter_begin_1a77e10ea;
		}
		_iter_end_1a77e10ea:;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, _1a408e094_Format(_98935_m.get()._field_Code,jule::Any(_99517_args)));
}



inline void _1a4dc841b_free(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a31c51ba_FreeExprModel> _100428_m) {
	_1a4dc8e11_expr(_self_, _100428_m.get()._field_Expr);
	if (_1d28c698b_RC) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a4dc8691_mutSlicing(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1c8436a66_MutSlicingExprModel> _101334_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4dc8b8b_model(_self_, _101334_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1d28c71b7_Production))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a4e47468_locInfo(_self_.get()._field_oc, _101334_m.get()._field_Token);
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a4dc8e11_expr(_self_, _101334_m.get()._field_Left);
	if ((_101334_m.get()._field_Right != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a4dc8e11_expr(_self_, _101334_m.get()._field_Right);
	};
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a4dc8916_strInsertBegin(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1c8424180_StrInsertBeginExprModel> _103038_m) {
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a4dc8b8b_model(_self_, _103038_m.get()._field_Dest);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a4dc8b8b_model(_self_, _103038_m.get()._field_Expr);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a4dc8b8b_model(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Any _103829_m) {
	{
		auto &_match_expr{ _103829_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ecdc09_TypeKind>>()) {
			_case_begin_1a77eaed4:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_103829_m.operator jule::Ptr<_1a3ecdc09_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a77ea90c:;
			{
				_1a4dbe9b7_constant(_self_, _103829_m.operator jule::Ptr<_1a31618e8_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a77eabd7:;
			{
				_1a4dc0600_var(_self_, _103829_m.operator jule::Ptr<_1a3e59e4e_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a312ad46_StructIns>>()) {
			_case_begin_1a77eac4d:;
			{
				_1a4dc0875_structureIns(_self_, _103829_m.operator jule::Ptr<_1a312ad46_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31ca874_FnIns>>()) {
			_case_begin_1a77eacb4:;
			{
				_1a4dc43c3_funcInsCommon(_self_, _103829_m.operator jule::Ptr<_1a31ca874_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c8396388_UnsafeBinopExprModel>>()) {
			_case_begin_1a77ead2a:;
			{
				_1a4dc0105_unsafeBinary(_self_, _103829_m.operator jule::Ptr<_1c8396388_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c00e9_BinopExprModel>>()) {
			_case_begin_1a77eb8db:;
			{
				_1a4dc037a_binary(_self_, _103829_m.operator jule::Ptr<_1a31c00e9_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c02d6_UnaryExprModel>>()) {
			_case_begin_1a77eb952:;
			{
				_1a4dc0aea_unary(_self_, _103829_m.operator jule::Ptr<_1a31c02d6_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c06b0_StructLitExprModel>>()) {
			_case_begin_1a77eb9b8:;
			{
				_1a4dc0d70_structureLit(_self_, _103829_m.operator jule::Ptr<_1a31c06b0_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c089c_AllocStructLitExprModel>>()) {
			_case_begin_1a77eba2e:;
			{
				_1a4dc10e5_allocStructure(_self_, _103829_m.operator jule::Ptr<_1a31c089c_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0a89_CastingExprModel>>()) {
			_case_begin_1a77eba95:;
			{
				_1a4dc136a_casting(_self_, _103829_m.operator jule::Ptr<_1a31c0a89_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a77ebb0b:;
			{
				_1a4dc23e3_funcCall(_self_, _103829_m.operator jule::Ptr<_1a31c0c76_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c0e63_SliceExprModel>>()) {
			_case_begin_1a77ebb72:;
			{
				_1a4dc2668_slice(_self_, _103829_m.operator jule::Ptr<_1a31c0e63_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c23d7_ArrayExprModel>>()) {
			_case_begin_1a77ebbd8:;
			{
				_1a4dc414d_array(_self_, _103829_m.operator jule::Ptr<_1a31c23d7_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c846418c_UnsafeIndexingExprModel>>()) {
			_case_begin_1a77ebc4e:;
			{
				_1a4dc2b63_unsafeIndexing(_self_, _103829_m.operator jule::Ptr<_1c846418c_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1150_IndexingExprModel>>()) {
			_case_begin_1a77ebcc6:;
			{
				_1a4dc28dd_indexing(_self_, _103829_m.operator jule::Ptr<_1a31c1150_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c133c_AnonFnExprModel>>()) {
			_case_begin_1a77ebd4d:;
			{
				_1a4dc2dd8_anonFunc(_self_, _103829_m.operator jule::Ptr<_1a31c133c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1716_MapExprModel>>()) {
			_case_begin_1a77ebdc5:;
			{
				_1a4dc315d_mapExpr(_self_, _103829_m.operator jule::Ptr<_1a31c1716_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1903_SlicingExprModel>>()) {
			_case_begin_1a77ebe4c:;
			{
				_1a4dc33d3_slicing(_self_, _103829_m.operator jule::Ptr<_1a31c1903_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>>()) {
			_case_begin_1a77ebec4:;
			{
				_1a4dc3658_traitSub(_self_, _103829_m.operator jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a77ec04b:;
			{
				_1a4dc38cd_structureSub(_self_, _103829_m.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c25c4_CommonIdentExprModel>>()) {
			_case_begin_1a77ec0c3:;
			{
				_1a4dc3b53_commonIdent(_self_, _103829_m.operator jule::Ptr<_1a31c25c4_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>>()) {
			_case_begin_1a77ec14a:;
			{
				_1a4dc3dc8_commonSub(_self_, _103829_m.operator jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c299d_TupleExprModel>>()) {
			_case_begin_1a77ec1c2:;
			{
				_1a4dc48bd_tuple(_self_, _103829_m.operator jule::Ptr<_1a31c299d_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>>()) {
			_case_begin_1a77ec249:;
			{
				_1a4dc4db8_outCall(_self_, _103829_m.operator jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1a77ec2c1:;
			{
				_1a4dc513d_outlnCall(_self_, _103829_m.operator jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>>()) {
			_case_begin_1a77ec348:;
			{
				_1a4dc4b43_newCall(_self_, _103829_m.operator jule::Ptr<_1a31c3251_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1a77ec3c0:;
			{
				_1a4dc53b3_panicCall(_self_, _103829_m.operator jule::Ptr<_1a31c343d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1a77ec447:;
			{
				_1a4dc5638_assertCall(_self_, _103829_m.operator jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a77ec4be:;
			{
				_1a4dc58ad_errorCall(_self_, _103829_m.operator jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>>()) {
			_case_begin_1a77ec546:;
			{
				_1a4dc689d_makeCall(_self_, _103829_m.operator jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>>()) {
			_case_begin_1a77ec5bd:;
			{
				_1a4dc6d98_appendCall(_self_, _103829_m.operator jule::Ptr<_1a31c3a04_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>>()) {
			_case_begin_1a77ec645:;
			{
				_1a4dc711d_cloneCall(_self_, _103829_m.operator jule::Ptr<_1a31c3064_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1ccc_BuiltinCopyCallExprModel>>()) {
			_case_begin_1a77ec6bc:;
			{
				_1a4dc5b33_copyCall(_self_, _103829_m.operator jule::Ptr<_1a31c1ccc_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>>()) {
			_case_begin_1a77ec744:;
			{
				_1a4dc5da8_lenCall(_self_, _103829_m.operator jule::Ptr<_1a31c3be1_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>>()) {
			_case_begin_1a77ec7bb:;
			{
				_1a4dc612d_capCall(_self_, _103829_m.operator jule::Ptr<_1a31c3dcd_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c472a_SizeofExprModel>>()) {
			_case_begin_1a77ec843:;
			{
				_1a4dc7393_sizeof(_self_, _103829_m.operator jule::Ptr<_1a31c472a_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4917_AlignofExprModel>>()) {
			_case_begin_1a77ec8ba:;
			{
				_1a4dc7618_alignof(_self_, _103829_m.operator jule::Ptr<_1a31c4917_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4b04_RuneExprModel>>()) {
			_case_begin_1a77ec942:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, _1a4dc7926_runeLit(_self_, _103829_m.operator jule::Ptr<_1a31c4b04_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c21ea_StructStaticIdentExprModel>>()) {
			_case_begin_1a77ec9b9:;
			{
				_1a4dc7b9b_structureStatic(_self_, _103829_m.operator jule::Ptr<_1a31c21ea_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>>()) {
			_case_begin_1a77eca41:;
			{
				_1a4dc7e21_integratedToStr(_self_, _103829_m.operator jule::Ptr<_1a31c4ce1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c4ecd_BackendEmitExprModel>>()) {
			_case_begin_1a77ecab8:;
			{
				_1a4dc8196_backendEmit(_self_, _103829_m.operator jule::Ptr<_1a31c4ecd_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c51ba_FreeExprModel>>()) {
			_case_begin_1a77ecb40:;
			{
				_1a4dc841b_free(_self_, _103829_m.operator jule::Ptr<_1a31c51ba_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c8436a66_MutSlicingExprModel>>()) {
			_case_begin_1a77ecbb7:;
			{
				_1a4dc8691_mutSlicing(_self_, _103829_m.operator jule::Ptr<_1c8436a66_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c8424180_StrInsertBeginExprModel>>()) {
			_case_begin_1a77ecc3e:;
			{
				_1a4dc8916_strInsertBegin(_self_, _103829_m.operator jule::Ptr<_1c8424180_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1a77eaa94:;
			{
				_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1a77ea9a6:;
	};
}



inline void _1a4dc8e11_expr(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Any _113528_e) {
	_1a4dc8b8b_model(_self_, _113528_e);
}



inline void _1a4dc9186_val(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a3ea3eed_Value> _113927_v) {
	if (_1a3ea3838_IsConst(_113927_v.get()._field_Data.ptr())) {
		_1a4dbe9b7_constant(_self_, _113927_v.get()._field_Data.get()._field_Constant,((_113927_v.get()._field_Data.get()._field_Kind != nullptr) && _1a3ed598b_IsF32(_1a3ed0d1b_Prim(_113927_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_1a4dc8e11_expr(_self_, _113927_v.get()._field_Data.get()._field_Model);
}



inline void _1a4dc940b_initExpr(jule::Ptr<_1a4dbd2bd_exprCoder> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _114732_t) {
	if ((_1a3ed12e4_Ptr(_114732_t.ptr()) != nullptr)) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1a31dbbc6_Enum> _115217_enm = _1a3ed1558_Enum(_114732_t.ptr());;
	if ((_115217_enm != nullptr)) {
		_1a4dc9186_val(_self_, _115217_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e7b47a_kind(_114732_t));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a4dbd2bd_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a4dcbc16_cloneFuncDecl(jule::Ptr<_1a30e9b8e_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1a4e79ac7_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1a4dcbead_cloneFuncDef(jule::Ptr<_1a30e9b8e_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1a4e79ac7_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4dcb919_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4dccd8d_TestCoder> static__1a4dcd311_New(jule::Ptr<_1a4e72619_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1a4dccd8d_TestCoder>(_1a4dccd8d_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_1a3e3409e_ImportInfo> _1a4dcd575_findTestingPackage(jule::Ptr<_1a4dccd8d_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1a781c18c:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1a781c18c:;
			++it;
			goto _iter_begin_1a781c18c;
		}
		_iter_end_1a781c18c:;
	};
	return nullptr;
}



inline void _1a4dcd7ea_appendTest(jule::Ptr<_1a4dccd8d_TestCoder> _self_, jule::Ptr<_1a31ca874_FnIns> _4334_f) {
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4dcdeb0_callTmReset(_self_);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a4e16e3d_write(_self_.get()._field_oc, _1a4dca110_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd1424_funcIns(_4334_f));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a4dcda70_appendPackageTests(jule::Ptr<_1a4dccd8d_TestCoder> _self_, jule::Ptr<_1a3e37008_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a78235b1:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1a7823e85:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _6225_f = *it;
						{
							if (_1a4e7e170_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1a4dcd7ea_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1a7823e85:;
						++it;
						goto _iter_begin_1a7823e85;
					}
					_iter_end_1a7823e85:;
				};
			}
			_iter_next_1a78235b1:;
			++it;
			goto _iter_begin_1a78235b1;
		}
		_iter_end_1a78235b1:;
	};
}



inline jule::Bool _1a4dcdcd4_readyTestingPackage(jule::Ptr<_1a4dccd8d_TestCoder> _self_) {
	jule::Ptr<_1a3e3409e_ImportInfo> _7117_p = _1a4dcd575_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1a3e354e0_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1a310115c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1a310115c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1a310115c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1a4dcdeb0_callTmReset(jule::Ptr<_1a4dccd8d_TestCoder> _self_) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd117c_func(_self_.get()._field_tmReset));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a4dce18b_callTmFailed(jule::Ptr<_1a4dccd8d_TestCoder> _self_) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd117c_func(_self_.get()._field_tmFailed));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a4dce367_callTmSkipped(jule::Ptr<_1a4dccd8d_TestCoder> _self_) {
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4dd117c_func(_self_.get()._field_tmSkipped));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a4dce543_Serialize(jule::Ptr<_1a4dccd8d_TestCoder> _self_) {
	_1a4e752ed_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a4e751bb_end(_self_.get()._field_oc);
	});;
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	if ((!(_1a4dcdcd4_readyTestingPackage(_self_)))) {
		_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e77bd5_asSptr(static__1a4e79d6e_structureIns(_self_.get()._field_t)));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a4e16e3d_write(_self_.get()._field_oc, static__1a4e79d6e_structureIns(_self_.get()._field_t));
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a4e49dd8_addIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a4dce18b_callTmFailed(_self_);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a4dce367_callTmSkipped(_self_);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a4dcda70_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a4e4a7bd_doneIndent(_self_.get()._field_oc);
	_1a4dd7815_indent(_self_.get()._field_oc);
	_1a4e16e3d_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a4dccd8d_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a4dd09ea_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1a4dd0dd5_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1a3e1e1aa_Itoa(_5423_row);
	_5517_obj+=_1a3e1e1aa_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1a4dd117c_func(jule::Ptr<_1a31c7bc3_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1a783cb19:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1a783d037:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1a31c8399_IsMethod(_6521_f.ptr())) {
			_case_begin_1a783d09d:;
			{
				jule::Str _7221_obj = static__1a4dd09ea_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1a783c311:;
			{
				return static__1a4dd09ea_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1a783c256:;
	};
}



inline jule::Str static__1a4dd1424_funcIns(jule::Ptr<_1a31ca874_FnIns>& _8424_f) {
	if (_1a31cbc0a_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1a4dd117c_func(_8424_f.get()._field_Decl);
	};
	return static__1a4dd09ea_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1a4dd16bb_traitDecl(jule::Ptr<_1a31d9a81_Trait> _9525_t) {
	if (_1a31da5ed_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1a4dd09ea_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1a4dd1963_param(jule::Ptr<_1a31c6386_Param>& _10322_p) {
	if ((_1ba1de9e7_IsAnonIdent(_10322_p.get()._field_Ident) || _1ba1de750_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_1a31c69b3_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1a4dd0dd5_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1a4dd0dd5_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1a4dd1c0a_structure(jule::Ptr<_1a30e9b8e_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1a4e7e170_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1a4dd09ea_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1a4dd1ea2_structureIns(jule::Ptr<_1a312ad46_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1a4dd1c0a_structure(_12829_s.get()._field_Decl);
	};
	return static__1a4dd09ea_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1a4dd2249_field(jule::Ptr<_1a30dc038_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1a4dd24e1_var(jule::Ptr<_1a3e59e4e_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1a784865d:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1a7848a7b:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1a7848ae2:;
			{
				if ((_1a3ed1080_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1a7847daa:;
			{
				return static__1a4dd0dd5_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1a7847d44:;
			{
				return static__1a4dd09ea_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1a7847c89:;
	};
}



inline jule::Str static__1a4dd2788_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(0LL, 30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1a4dd2a30_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(0LL, 30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1a4dd2cc7_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(0LL, 30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1a4dd306e_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(0LL, 30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1a4dd3316_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(0LL, 30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1a4dd35ad_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(0LL, 30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4dd04de_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4dd833d_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e7242c_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a4e76893_Str(_1a4e765c9_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a4e76ba1_Equals(jule::Ptr<_1a4e765c9_customType> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e765c9_customType _Src) {
	_Stream << _1a4e76893_Str(&_Src);
	return _Stream;
}



inline jule::Str static__1a4e773ee_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1a32e367e_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1a4e77696_prim(jule::Ptr<_1a3ed36d1_Prim> _7120_p) {
	return static__1a4e773ee_toType(_1a3ed3a44_Str(_7120_p.ptr()));
}



inline jule::Str static__1a4e7793d_tuple(jule::Ptr<_1a3ed8450_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1a7934eb9:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ecdc09_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1a4e7b47a_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1a7934eb9:;
			++it;
			goto _iter_begin_1a7934eb9;
		}
		_iter_end_1a7934eb9:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1a4e77bd5_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1a4e77e7c_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1a4e78224_sptr(jule::Ptr<_1a3ed6e65_Sptr> _10124_sptr) {
	return static__1a4e77bd5_asSptr(static__1a4e7b47a_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1a4e784bb_ptr(jule::Ptr<_1a3eda4c9_Ptr> _10623_p) {
	;
	if (_1a3edae9c_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1a4e7b47a_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1a4e78763_enumDecl(jule::Ptr<_1a31dbbc6_Enum> _11728_e) {
	return static__1a4e7b47a_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1a4e78a0a_typeEnumDecl(jule::Ptr<_1a31dd2c1_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1a4e78ca2_asSlice(jule::Ptr<_1a3ecdc09_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1a4e7b47a_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1a4e79049_slice(jule::Ptr<_1a3ed78c2_Slc> _13425_s) {
	return static__1a4e78ca2_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1a4e792e1_mapType(jule::Ptr<_1a3ed8e78_Map> _13927_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1a4e7b47a_kind(_13927_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1a4e7b47a_kind(_13927_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1a4e79588_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1a4e79830_traitDecl(jule::Ptr<_1a31d9a81_Trait> _15625_t) {
	return static__1a4e79588_traitIdent(static__1a4dd16bb_traitDecl(_15625_t));
}



inline jule::Str static__1a4e79ac7_structure(jule::Ptr<_1a30e9b8e_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1a4e7e170_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1a4dd1c0a_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1a4e79d6e_structureIns(jule::Ptr<_1a312ad46_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1a4dd1ea2_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1a79406ab:;
				if (it != expr.end()) {
					jule::Ptr<_1a3ecc4cc_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1a4e7b47a_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1a79406ab:;
					++it;
					goto _iter_begin_1a79406ab;
				}
				_iter_end_1a79406ab:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1a30c5a27_Directive> _18317_d = _1a4e7dcda_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1a4e758b4_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1a4dd1ea2_structureIns(_17132_s);
}



inline jule::Str static__1a4e7a116_array(jule::Ptr<_1a3ed9a6c_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1a4e7b47a_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1a3e1e1aa_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1a4e7a655_paramIns(jule::Ptr<_1a31c99a5_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1a4e7b47a_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1a4e7b47a_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1a4e7ab94_funcInsResult(jule::Ptr<_1a31ca874_FnIns>& _24934_f) {
	if (_1a31c8135_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a4e7b47a_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1a4e7b47a_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1a4e7ae3b_anonFunc(jule::Ptr<_1a31ca874_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1a4e7ab94_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1a794c6da:;
			if (it != expr.end()) {
				jule::Ptr<_1a31c99a5_ParamIns> _26625_param = *it;
				{
					if (_1a31c69b3_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1a794c6da;
					};
					_26317_decl+=static__1a4e7a655_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1a794c6da:;
				++it;
				goto _iter_begin_1a794c6da;
			}
			_iter_end_1a794c6da:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1a4e7b1d3_func(jule::Ptr<_1a31ca874_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1a4e7ae3b_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1a4e7b47a_kind(jule::Ptr<_1a3ecdc09_TypeKind> _29024_k) {
	{
		
		if (_1a3ece8b9_CppLinked(_29024_k.ptr())) {
			_case_begin_1a79502e2:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_1a3ed0d1b_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a7950479:;
			{
				return static__1a4e77696_prim(_1a3ed0d1b_Prim(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed29aa_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a79504e0:;
			{
				return static__1a4e7793d_tuple(_1a3ed29aa_Tup(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed1080_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a7950567:;
			{
				return static__1a4e78224_sptr(_1a3ed1080_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed12e4_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a79505de:;
			{
				return static__1a4e784bb_ptr(_1a3ed12e4_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed1558_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a7950666:;
			{
				return static__1a4e78763_enumDecl(_1a3ed1558_Enum(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed17bc_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a79506dd:;
			{
				return static__1a4e78a0a_typeEnumDecl(_1a3ed17bc_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed1c95_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a7950765:;
			{
				return static__1a4e79049_slice(_1a3ed1c95_Slc(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed2746_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a79507dc:;
			{
				return static__1a4e792e1_mapType(_1a3ed2746_Map(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed24d2_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a7950864:;
			{
				return static__1a4e79830_traitDecl(_1a3ed24d2_Trait(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed226d_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a79508db:;
			{
				return static__1a4e79d6e_structureIns(_1a3ed226d_Struct(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed1a31_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a7950963:;
			{
				return static__1a4e7a116_array(_1a3ed1a31_Arr(_29024_k.ptr()));
			}
		}
		else if ((_1a3ed2009_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1a79509da:;
			{
				return static__1a4e7b1d3_func(_1a3ed2009_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1a7950204:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a4e765c9_customType>>()) {
			_case_begin_1a79583c7:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1a4e765c9_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1a795854d:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1a7958691:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e76dc1_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7730d70_Name(_1a795951b_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1a7730ea2_What(_1a795951b_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1a795994a_Reset(_1a795951b_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1a7959a7c_Short(_1a795951b_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a795951b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a795cd7c_Name(_1a795d366_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1a795d652_What(_1a795d366_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1a795d784_Reset(_1a795d366_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1a795d8b6_Short(_1a795d366_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a795d366_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a79619b8_Name(_1a7961ea2_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1a796228d_What(_1a7961ea2_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1a79623c0_Reset(_1a7961ea2_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1a7962502_Short(_1a7961ea2_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7961ea2_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a7965648_Name(_1a7965b32_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1a7965e1d_What(_1a7965b32_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1a7966050_Reset(_1a7965b32_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1a7966182_Short(_1a7965b32_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7965b32_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a7969284_Name(_1a796976d_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1a7969a59_What(_1a796976d_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1a7969b8b_Reset(_1a796976d_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1a7969cbd_Short(_1a796976d_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a796976d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4eac368_FlagSet> static__1a4eac654_New(void) {
	return jule::new_ptr<_1a4eac368_FlagSet>(_1a4eac368_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a4cb984b_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1a4cb984b_CommonFlag> _1a4eacad8_FindFlag(_1a4eac368_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1a7975658:;
		if (it != expr.end()) {
			jule::Trait<_1a4cb984b_CommonFlag> _7221_flag = *it;
			{
				if ((_1a4cb984b_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a4c89640_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1a7975658:;
			++it;
			goto _iter_begin_1a7975658;
		}
		_iter_end_1a7975658:;
	};
	return nullptr;
}



inline jule::Trait<_1a4cb984b_CommonFlag> _1a4eacde6_FindFlagShort(_1a4eac368_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1a7975b0e:;
		if (it != expr.end()) {
			jule::Trait<_1a4cb984b_CommonFlag> _8221_flag = *it;
			{
				if ((_1a4cb984b_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a4cb9719_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1a7975b0e:;
			++it;
			goto _iter_begin_1a7975b0e;
		}
		_iter_end_1a7975b0e:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1a4cb984b_CommonFlag>> _1a4ead15a_Flags(_1a4eac368_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a4ead468_Parse(_1a4eac368_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a4eaea41_argParser _11617_ap = _1a4eaea41_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1a4eb0e2c_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1a4ead644_Reset(_1a4eac368_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1a7979041:;
		if (it != expr.end()) {
			jule::Trait<_1a4cb984b_CommonFlag> _12616_f = *it;
			{
				_1a4cb984b_CommonFlag_mptr_data[(_12616_f).type_offset]._1a4eaaa1a_Reset(_12616_f);
			}
			_iter_next_1a7979041:;
			++it;
			goto _iter_begin_1a7979041;
		}
		_iter_end_1a7979041:;
	};
}



inline jule::Ptr<_1a796976d_Flag> _1a79e0e87_addFlagCommon(_1a4eac368_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a79e29c2:;
			{
				goto _match_end_1a79e2928;
			}
		}
		_match_end_1a79e2928:;
	};
	if ((_1a4eacad8_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a4eacde6_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a796976d_Flag> _14817_flag = jule::new_ptr<_1a796976d_Flag>(_1a796976d_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1a4cb984b_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1a7965b32_Flag> _1a79e9de7_addFlagCommon(_1a4eac368_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a79eb9cb:;
			{
				goto _match_end_1a79eb932;
			}
		}
		_match_end_1a79eb932:;
	};
	if ((_1a4eacad8_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a4eacde6_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a7965b32_Flag> _14817_flag = jule::new_ptr<_1a7965b32_Flag>(_1a7965b32_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1a4cb984b_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1a79de23d_AddVar(_1a4eac368_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a796976d_Flag> _17617_flag = _1a79e0e87_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1a79e81d1_AddVar(_1a4eac368_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a7965b32_Flag> _17617_flag = _1a79e9de7_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4eac368_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1a4380b6b_IR>,jule::Slice<_1b9db24ab_Log>> static__1ba919ad4_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_1a4156cc7_JuleImporter> _2817_importer = static__1a41b38a0_New(_1a44d2e55_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a30c48a0_Ast>> _2918_files;;
	jule::Slice<_1b9db24ab_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _1a42d6ece_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1a3e37008_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _1a4000b93_AnalyzePackage(_2918_files,jule::Trait<_1a3e31431_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_1a4380b6b_IR> _4417_ir = jule::new_ptr<_1a4380b6b_IR>(_1a4380b6b_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a41c5285_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1a44c8676_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _1c78dc36e_appendStructs(_1a4380b6b_IR* _self_, jule::Ptr<_1a3e37008_Package>& _5633_p, jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a738b5d0:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1a738bcc8:;
					if (it != expr.end()) {
						jule::Ptr<_1a30e9b8e_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1a738bcc8:;
						++it;
						goto _iter_begin_1a738bcc8;
					}
					_iter_end_1a738bcc8:;
				};
			}
			_iter_next_1a738b5d0:;
			++it;
			goto _iter_begin_1a738b5d0;
		}
		_iter_end_1a738b5d0:;
	};
}



inline jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _1c7ddb9c2_GetAllStructures(_1a4380b6b_IR* _self_) {
	jule::Slice<jule::Ptr<_1a30e9b8e_Struct>> _6917_buffer = nullptr;;
	_1c78dc36e_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1a738c56a:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1c78dc36e_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1a738c56a:;
			++it;
			goto _iter_begin_1a738c56a;
		}
		_iter_end_1a738c56a:;
	};
	return _6917_buffer;
}



inline void _1c828959a_appendGlobals(_1a4380b6b_IR* _self_, jule::Ptr<_1a3e37008_Package>& _7933_p, jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a738e946:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1a739012d:;
					if (it != expr.end()) {
						jule::Ptr<_1a3e59e4e_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1a739012d:;
						++it;
						goto _iter_begin_1a739012d;
					}
					_iter_end_1a739012d:;
				};
			}
			_iter_next_1a738e946:;
			++it;
			goto _iter_begin_1a738e946;
		}
		_iter_end_1a738e946:;
	};
}



inline jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _1a435bd23_GetAllGlobals(_1a4380b6b_IR* _self_) {
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _9217_buffer = nullptr;;
	_1c828959a_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1a739064a:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1c828959a_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1a739064a:;
			++it;
			goto _iter_begin_1a739064a;
		}
		_iter_end_1a739064a:;
	};
	return _9217_buffer;
}



inline void _1a4370aa1_Order(_1a4380b6b_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1c7ddb9c2_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1a435bd23_GetAllGlobals(&(*_self_));
	static__1a4517dbe_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1a451e139_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1a4380b6b_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a30eb872_Str(_1a312ad46_StructIns* _self_) {
	jule::Str _24917_kind = jule::Str();;
	_24917_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24917_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1a62b2d54:;
			if (it != expr.end()) {
				jule::Ptr<_1a3ecc4cc_InsGeneric> &_25320_g = *it;
				{
					_24917_kind+=_1a3ece105_Str(_25320_g.get()._field_Kind.ptr());
					_24917_kind+=jule::Str(",", 1);
				}
				_iter_next_1a62b2d54:;
				++it;
				goto _iter_begin_1a62b2d54;
			}
			_iter_end_1a62b2d54:;
		};
		(_24917_kind).mut_slice(0LL,(_24917_kind.len() - 1LL));;
		_24917_kind+=jule::Str("]", 1);
	};
	return _24917_kind;
}



inline jule::Bool _1a30ec9d8_Equals(jule::Ptr<_1a312ad46_StructIns> _self_, jule::Ptr<_1a3ecdc09_TypeKind> _26422_other) {
	jule::Ptr<_1a312ad46_StructIns> _26513_s = _1a3ed226d_Struct(_26422_other.ptr());;
	if ((_26513_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _26513_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _26513_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27817_i = 0LL;;
	for (; (_27817_i < _self_.get()._field_Generics.len()); (_27817_i)++) {
		{
			if ((!(_1a3ece413_Equals(_self_.get()._field_Generics[_27817_i].get()._field_Kind, _26513_s.get()._field_Generics[_27817_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1a62b67a3:;
	}
	_iter_end_1a62b67a3:;;
	return true;
}



inline jule::Bool _1a30eed3c_Same(_1a312ad46_StructIns* _self_, jule::Ptr<_1a312ad46_StructIns> _29219_s) {
	if ((((*_self_)._field_Decl != _29219_s.get()._field_Decl) || (_29219_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a62b8e9d:;
		if (it != expr.end()) {
			jule::I64 _29613_i = it - expr.begin();
			jule::Ptr<_1a3ecc4cc_InsGeneric> &_29616_g = *it;
			{
				if ((!(_1a3ece413_Equals(_29616_g.get()._field_Kind, _29219_s.get()._field_Generics[_29613_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1a62b8e9d:;
			++it;
			_29613_i++;
			goto _iter_begin_1a62b8e9d;
		}
		_iter_end_1a62b8e9d:;
	};
	return true;
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a310115c_FindMethod(_1a312ad46_StructIns* _self_, jule::Str _30629_ident, jule::Bool _30641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a62bac6e:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _30721_f = *it;
			{
				if (((_30721_f.get()._field_Statically == _30641_statically) && (_30721_f.get()._field_Ident == _30629_ident))) {
					return _30721_f;
				};
			}
			_iter_next_1a62bac6e:;
			++it;
			goto _iter_begin_1a62bac6e;
		}
		_iter_end_1a62bac6e:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3102306_FieldIns> _1a3103b76_FindField(_1a312ad46_StructIns* _self_, jule::Str _31728_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a62bbdd5:;
		if (it != expr.end()) {
			jule::Ptr<_1a3102306_FieldIns> _31821_f = *it;
			{
				if ((_31821_f.get()._field_Decl.get()._field_Ident == _31728_ident)) {
					return _31821_f;
				};
			}
			_iter_next_1a62bbdd5:;
			++it;
			goto _iter_begin_1a62bbdd5;
		}
		_iter_end_1a62bbdd5:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3e59e4e_Var> _1a30ca169_FindStatic(_1a312ad46_StructIns* _self_, jule::Str _32829_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1a62bc534:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _32921_v = *it;
			{
				if ((_32921_v.get()._field_Ident == _32829_ident)) {
					return _32921_v;
				};
			}
			_iter_next_1a62bc534:;
			++it;
			goto _iter_begin_1a62bc534;
		}
		_iter_end_1a62bc534:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a312ad46_StructIns _Src) {
	_Stream << _1a30eb872_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a48000b8_ObjectDeadCode> static__1a4800519_new(jule::Ptr<_1a4380b6b_IR>& _3424_ir) {
	return jule::new_ptr<_1a48000b8_ObjectDeadCode>(_1a48000b8_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1a73cd06c_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a31d9a81_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1a31d9a81_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a73d016d:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1a73ced82:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1a73d01d4:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1a73d01d4:;
			++it;
			_5213_i++;
			goto _iter_begin_1a73d01d4;
		}
		_iter_end_1a73d01d4:;
	};
	return false;
}

inline jule::Bool _1a73d3490_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a31ca874_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1a31ca874_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a73d596a:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1a73d58b0:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1a73d5915:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1a73d5915:;
			++it;
			_5213_i++;
			goto _iter_begin_1a73d5915;
		}
		_iter_end_1a73d5915:;
	};
	return false;
}

inline jule::Bool _1a73dcbd6_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a312ad46_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1a312ad46_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a73decd7:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1a73dea62:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1a73e0502:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1a73e0502:;
			++it;
			_5213_i++;
			goto _iter_begin_1a73e0502;
		}
		_iter_end_1a73e0502:;
	};
	return false;
}

inline jule::Bool _1a73e28ab_isLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a3e59e4e_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a73e479d:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1a73e467c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1a73e46d2:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1a73e46d2:;
			++it;
			_5213_i++;
			goto _iter_begin_1a73e46d2;
		}
		_iter_end_1a73e46d2:;
	};
	return false;
}



inline void _1a73d1658_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a31d9a81_Trait> _6035_t) {
	{
		
{
			_case_begin_1a73d246c:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1a73d233a:;
	};
}

inline void _1a73d7829_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a31ca874_FnIns> _6035_t) {
	{
		
{
			_case_begin_1a73d851c:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1a73d84b7:;
	};
}

inline void _1a73dab4b_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a312ad46_StructIns> _6035_t) {
	{
		
{
			_case_begin_1a73dc411:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1a73dc345:;
	};
}

inline void _1a73e63b5_pushLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a3e59e4e_Var> _6035_t) {
	{
		
{
			_case_begin_1a73e6e21:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1a73e7053:;
	};
}



inline void _1a48310e9_setReferencesAsLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a31cd745_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1a31cddb6_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1a31ce1c4_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1a31d9a81_Trait>>()) {
					_case_begin_1a73cc027:;
					{
						jule::Ptr<_1a31d9a81_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1a31d9a81_Trait>();;
						if (_1a73cd06c_isLive(_self_, _8225_t)) {
							goto _iter_next_1a73cb367;
						};
						_1a73d1658_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1a73d0d1c:;
							if (it != expr.end()) {
								jule::Ptr<_1a31c7bc3_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1a73d1bec:;
										if (it != expr.end()) {
											jule::Ptr<_1a31ca874_FnIns> _8833_mins = *it;
											{
												if (_1a73d3490_isLive(_self_, _8833_mins)) {
													goto _iter_next_1a73d1bec;
												};
												_1a73d7829_pushLive(_self_, _8833_mins);
												_1a48310e9_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1a73d1bec:;
											++it;
											goto _iter_begin_1a73d1bec;
										}
										_iter_end_1a73d1bec:;
									};
								}
								_iter_next_1a73d0d1c:;
								++it;
								goto _iter_begin_1a73d0d1c;
							}
							_iter_end_1a73d0d1c:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a31ca874_FnIns>>()) {
					_case_begin_1a73cc08d:;
					{
						jule::Ptr<_1a31ca874_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1a31ca874_FnIns>();;
						if (_1a73d3490_isLive(_self_, _9725_f)) {
							goto _match_end_1a73cbe6c;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1a73dcbd6_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1a73dab4b_pushLive(_self_, _9725_f.get()._field_Owner);
								_1a48310e9_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1a73d7829_pushLive(_self_, _9725_f);
						_1a48310e9_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
					_case_begin_1a73cc214:;
					{
						jule::Ptr<_1a3e59e4e_Var> _11025_v = _7921_ref.operator jule::Ptr<_1a3e59e4e_Var>();;
						if (_1a73e28ab_isLive(_self_, _11025_v)) {
							goto _match_end_1a73cbe6c;
						};
						_1a73e63b5_pushLive(_self_, _11025_v);
						_1a48310e9_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a312ad46_StructIns>>()) {
					_case_begin_1a73cc27a:;
					{
						jule::Ptr<_1a312ad46_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1a312ad46_StructIns>();;
						if (_1a73dcbd6_isLive(_self_, _11725_s)) {
							goto _match_end_1a73cbe6c;
						};
						_1a73dab4b_pushLive(_self_, _11725_s);
						_1a48310e9_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1a73ea463:;
							if (it != expr.end()) {
								jule::Ptr<_1a31c7bc3_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1a73eb013:;
										if (it != expr.end()) {
											jule::Ptr<_1a31ca874_FnIns> _12433_mins = *it;
											{
												if (_1a73d3490_isLive(_self_, _12433_mins)) {
													goto _iter_next_1a73eb013;
												};
												_1a73d7829_pushLive(_self_, _12433_mins);
												_1a48310e9_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1a73eb013:;
											++it;
											goto _iter_begin_1a73eb013;
										}
										_iter_end_1a73eb013:;
									};
								}
								_iter_next_1a73ea463:;
								++it;
								goto _iter_begin_1a73ea463;
							}
							_iter_end_1a73ea463:;
						};
					}
				}
				_match_end_1a73cbe6c:;
			};
		}
	_iter_next_1a73cb367:;
	}
	_iter_end_1a73cb367:;;
}



inline void _1a483136e_inits(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a3e37008_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a73cb796:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1a73ed796:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1a31ca874_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1a48310e9_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1a73ed796:;
						++it;
						goto _iter_begin_1a73ed796;
					}
					_iter_end_1a73ed796:;
				};
			}
			_iter_next_1a73cb796:;
			++it;
			goto _iter_begin_1a73cb796;
		}
		_iter_end_1a73cb796:;
	};
}



inline void _1a48315e4_collectLivePackage(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a3e37008_Package>& _14843_pkg) {
	_1a483136e_inits(_self_, _14843_pkg);
	if (_1d28c668e_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1a7400e3b:;
			if (it != expr.end()) {
				jule::Ptr<_1a3e9d14b_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1a7401843:;
						if (it != expr.end()) {
							jule::Ptr<_1a31c7bc3_Fn> _15529_f = *it;
							{
								if (_1a4838464_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1a31ca874_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1a48310e9_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1a7401843:;
							++it;
							goto _iter_begin_1a7401843;
						}
						_iter_end_1a7401843:;
					};
				}
				_iter_next_1a7400e3b:;
				++it;
				goto _iter_begin_1a7400e3b;
			}
			_iter_end_1a7400e3b:;
		};
	};
}



inline void _1a483664e_collectLive(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1a73d1a54:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1a48315e4_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1a73d1a54:;
			++it;
			goto _iter_begin_1a73d1a54;
		}
		_iter_end_1a73d1a54:;
	};
	_1a48315e4_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1a31c7bc3_Fn> _17517_main = _1a3e387ac_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1a31ca874_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1a48310e9_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1a48368a2_removeDeadGlobals(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1a3e59e4e_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1a73e28ab_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1a7406b67;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1a7406b67:;
	}
	_iter_end_1a7406b67:;;
}



inline void _1a4836b27_removeDeadFns(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1a31c7bc3_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a31ca874_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1a73d3490_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1a740a385;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1a740a385:;
			}
			_iter_end_1a740a385:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1a7407151;
			};
			(_19417_i)++;
		}
	_iter_next_1a7407151:;
	}
	_iter_end_1a7407151:;;
}



inline void _1a4836d9c_removeDeadStructs(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a30e9b8e_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1a30e9b8e_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a312ad46_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1a4836b27_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1a73dcbd6_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1a740e7c9;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1a740e7c9:;
			}
			_iter_end_1a740e7c9:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1a740d5ca;
			};
			(_21517_i)++;
		}
	_iter_next_1a740d5ca:;
	}
	_iter_end_1a740d5ca:;;
}



inline void _1a4837122_removeDeadTraits(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a31d9a81_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1a31d9a81_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1a73cd06c_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1a74134e2;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1a30e9b8e_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1a7414191;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1a7414191:;
			}
			_iter_end_1a7414191:;;
			(_23717_i)++;
		}
	_iter_next_1a74134e2:;
	}
	_iter_end_1a74134e2:;;
}



inline void _1a4837397_removeDeadsFile(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a3e9d14b_SymbolTable>& _25740_file) {
	_1a4836b27_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1a4836d9c_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1a4837122_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1a48368a2_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1a483761c_removeDeadsPackage(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_, jule::Ptr<_1a3e37008_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a74190db:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _26521_file = *it;
			{
				_1a4837397_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1a74190db:;
			++it;
			goto _iter_begin_1a74190db;
		}
		_iter_end_1a74190db:;
	};
}



inline void _1a48377e8_removeDeads(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1a7419806:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1a483761c_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1a7419806:;
			++it;
			goto _iter_begin_1a7419806;
		}
		_iter_end_1a7419806:;
	};
	_1a483761c_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1a48379c4_elimanate(jule::Ptr<_1a48000b8_ObjectDeadCode> _self_) {
	_1a483664e_collectLive(_self_);
	_1a48377e8_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a48000b8_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4e72619_ObjectCoder> static__1a4e127da_New(jule::Ptr<_1a4380b6b_IR>& _7224_ir, _1a4dd833d_SerializationInfo _7233_info) {
	jule::Ptr<_1a4e72619_ObjectCoder> _7317_oc = jule::new_ptr<_1a4e72619_ObjectCoder>(_1a4e72619_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__1a4dbd6b9_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1a4db5b23_new(_7317_oc);
	return _7317_oc;
}



inline void _1a4e16e3d_write(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1a4e49dd8_addIndent(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1a4e4a7bd_doneIndent(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1a4dd7815_indent(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1a4e07c64_findTypeOffset(_1a4e72619_ObjectCoder* _self_, jule::Ptr<_1a31d9a81_Trait> _10229_t, jule::Ptr<_1a3ecdc09_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1a312ad46_StructIns> _10617_s = nullptr;;
	if ((_1a3ed1080_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_1a3ed1080_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_1a3ed226d_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1a3ed226d_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1a785e223:;
		if (it != expr.end()) {
			jule::Ptr<_1a4e7242c_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1a785e223:;
			++it;
			goto _iter_begin_1a785e223;
		}
		_iter_end_1a785e223:;
	};
	return -1LL;
}



inline void _1a4e47468_locInfo(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1ba1dbeab_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_1d28c71b7_Production) {
		{
			
			if (_1b9d2b8ed_HasPrefix(_12414_loc,_1b9deb1d7_PathStdlib)) {
				_case_begin_1a7861a0b:;
				{
					_1a4e16e3d_write(_self_, _1a4dc9ce1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1b9d36d15_Dir(_1b9deb1d7_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1b9d2b8ed_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1a78617ca:;
				{
					_1a4e16e3d_write(_self_, _1a4dc9ce1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1b9d36d15_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1a7861423:;
				{
					_1a4e16e3d_write(_self_, _1a4dc9ce1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1a7861346:;
		};
	} else {
		_1a4e16e3d_write(_self_, _1a4dc9ce1_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1a4e16e3d_write(_self_, jule::Str(":", 1));
	_1a4e16e3d_write(_self_, _1a3e1e1aa_Itoa(_12328_t.get()._field_Row));
	_1a4e16e3d_write(_self_, jule::Str(":", 1));
	_1a4e16e3d_write(_self_, _1a3e1e1aa_Itoa(_12328_t.get()._field_Column));
}



inline void _1a4e47996_head(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e6a3c0_Time _15013_time = static__1a4e6a964_Now();;
	_1a4e69c2c_AbsTime _15113_abs = _1a4e6c0a3_Abs(&_15013_time);;
	_1a4e16e3d_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a4e16e3d_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a4e16e3d_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1a4e16e3d_write(_self_, jule::Str("\n", 1));
	_1a4e16e3d_write(_self_, jule::Str("// Date: ", 9));
	_1a4e16e3d_write(_self_, _1a3e1de46_FmtUint(_15113_abs._field_Day,10LL));
	_1a4e16e3d_write(_self_, jule::Str("/", 1));
	_1a4e16e3d_write(_self_, _1a3e1de46_FmtUint(_15113_abs._field_Month,10LL));
	_1a4e16e3d_write(_self_, jule::Str("/", 1));
	_1a4e16e3d_write(_self_, _1a3e1de46_FmtUint(_15113_abs._field_Year,10LL));
	_1a4e16e3d_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a4e16e3d_write(_self_, _self_.get()._field_info._field_Compiler);
	_1a4e16e3d_write(_self_, jule::Str(" ", 1));
	_1a4e16e3d_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	if (_1d28c71b7_Production) {
		_1a4e16e3d_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1d28c698b_RC))) {
		_1a4e16e3d_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1d28c6da9_Safety))) {
		_1a4e16e3d_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a4e16e3d_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a4e16e3d_write(_self_, _1b9e0b093_PathApi);
	_1a4e16e3d_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a4dd852a_links(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1a786d100:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1a786e046:;
						{
							goto _iter_next_1a786d100;
						}
					}
					else if (_1b9da5889_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1a786e288:;
						{
							_1a4e16e3d_write(_self_, jule::Str("#include ", 9));
							_1a4e16e3d_write(_self_, _18316_used.get()._field_Path);
							_1a4e16e3d_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1a786dba0:;
						{
							_1a4e16e3d_write(_self_, jule::Str("#include \"", 10));
							_1a4e16e3d_write(_self_, _18316_used.get()._field_Path);
							_1a4e16e3d_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1a786dac3:;
				};
			}
			_iter_next_1a786d100:;
			++it;
			goto _iter_begin_1a786d100;
		}
		_iter_end_1a786d100:;
	};
}



inline void _1a4e0b592_prepareStructures(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a7870410:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1a4e75694_prepareStructure(_20021_s);
				};
			}
			_iter_next_1a7870410:;
			++it;
			goto _iter_begin_1a7870410;
		}
		_iter_end_1a7870410:;
	};
}



inline void _1a4e133ce_iterPackages(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1a78725bb:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1a78725bb:;
			++it;
			goto _iter_begin_1a78725bb;
		}
		_iter_end_1a78725bb:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1a4e13962_buildTraitMap(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e133ce_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>([=](jule::Ptr<_1a3e37008_Package>& _21735_pkg) mutable -> void {
		_1a4e75562_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>([=](jule::Ptr<_1a3e9d14b_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1a7875ba7:;
				if (it != expr.end()) {
					jule::Ptr<_1a31d9a81_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a4e7242c_traitHash>(_1a4e7242c_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1a7875ba7;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1a7877d96:;
							if (it != expr.end()) {
								jule::Ptr<_1a30e9b8e_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1a7878638:;
										if (it != expr.end()) {
											jule::Ptr<_1a312ad46_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a4e7242c_traitHash>(_1a4e7242c_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1a7878638:;
											++it;
											goto _iter_begin_1a7878638;
										}
										_iter_end_1a7878638:;
									};
								}
								_iter_next_1a7877d96:;
								++it;
								goto _iter_begin_1a7877d96;
							}
							_iter_end_1a7877d96:;
						};
					}
					_iter_next_1a7875ba7:;
					++it;
					goto _iter_begin_1a7875ba7;
				}
				_iter_end_1a7875ba7:;
			};
		}));
	}));
}



inline void _1a4e14831_traitDecls(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e133ce_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>([=](jule::Ptr<_1a3e37008_Package>& _24835_pkg) mutable -> void {
		_1a4e75562_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>([=](jule::Ptr<_1a3e9d14b_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1a787a99d:;
				if (it != expr.end()) {
					jule::Ptr<_1a31d9a81_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a4dd7815_indent(_self_);
						_1a4e16e3d_write(_self_, jule::Str("struct ", 7));
						_1a4e16e3d_write(_self_, static__1a4dd16bb_traitDecl(_25029_t));
						_1a4e16e3d_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1a787a99d:;
					++it;
					goto _iter_begin_1a787a99d;
				}
				_iter_end_1a787a99d:;
			};
		}));
	}));
}



inline void _1a4e14ee6_structurePlainDecl(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a30e9b8e_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a787a54c:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _26421_ins = *it;
			{
				_1a4e16e3d_write(_self_, jule::Str("struct ", 7));
				_1a4e16e3d_write(_self_, static__1a4dd1ea2_structureIns(_26421_ins));
				_1a4e16e3d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a787a54c:;
			++it;
			goto _iter_begin_1a787a54c;
		}
		_iter_end_1a787a54c:;
	};
}



inline void _1a4e156ab_structurePlainDecls(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a787dd58:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1a4e14ee6_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1a787dd58:;
			++it;
			goto _iter_begin_1a787dd58;
		}
		_iter_end_1a787dd58:;
	};
}



inline void _1a4e50c68_fieldDecl(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a3102306_FieldIns>& _27934_f) {
	_1a4e16e3d_write(_self_, static__1a4e7b47a_kind(_27934_f.get()._field_Kind));
	_1a4e16e3d_write(_self_, jule::Str(" ", 1));
	_1a4e16e3d_write(_self_, static__1a4dd2249_field(_27934_f.get()._field_Decl));
	_1a4e16e3d_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_1a4dc940b_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_1a4dc8e11_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1a4e16e3d_write(_self_, jule::Str(";", 1));
}



inline void _1a4e15d71_structureDestructor(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _29444_s) {
	;
	jule::Ptr<_1a31c7bc3_Fn> _29713_disposeMethod = _1a310115c_FindMethod(_29444_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _29817_disposed = static__1a3e5b36d_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_1a4e16e3d_write(_self_, jule::Str("~", 1));
	_1a4e16e3d_write(_self_, static__1a4dd1ea2_structureIns(_29444_s));
	_1a4e16e3d_write(_self_, jule::Str("(void) { ", 9));
	_1a4e16e3d_write(_self_, static__1a4dd117c_func(_29713_disposeMethod));
	_1a4e16e3d_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a4e49943_structureDeriveDefsDecls(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _31045_s) {
	if (_1a30da9a4_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, static__1a4dcbc16_cloneFuncDecl(_31045_s.get()._field_Decl));
		_1a4e16e3d_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a4e0c95b_structureOperatorEq(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_1a312ad46_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1a4e72ce0_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1a4dd7815_indent(_self_);
	if (_1c84179c0_Inline) {
		_1a4e16e3d_write(_self_, jule::Str("inline ", 7));
	};
	_1a4e16e3d_write(_self_, jule::Str("bool operator==(", 16));
	_1a4e16e3d_write(_self_, _31840_ident);
	_1a4e16e3d_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_1a4e49dd8_addIndent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("\n", 1));
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("return ", 7));
		_1a4e49dd8_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1a788bdaa:;
			if (it != expr.end()) {
				jule::Ptr<_1a3102306_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_1a312ad46_StructIns> _34121_strct = _1a3ed226d_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1a788bdaa;
					};
					if (_33821_writed) {
						_1a4e16e3d_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_1a4e16e3d_write(_self_, jule::Str("\n", 1));
					_1a4dd7815_indent(_self_);
					_1a4e16e3d_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__1a4dd2249_field(_33925_f.get()._field_Decl);;
					_1a4e16e3d_write(_self_, _35321_fIdent);
					_1a4e16e3d_write(_self_, jule::Str(" == _other.", 11));
					_1a4e16e3d_write(_self_, _35321_fIdent);
				}
				_iter_next_1a788bdaa:;
				++it;
				goto _iter_begin_1a788bdaa;
			}
			_iter_end_1a788bdaa:;
		};
		_1a4e4a7bd_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_1a4e16e3d_write(_self_, jule::Str("true", 4));
		};
		_1a4e16e3d_write(_self_, jule::Str(";\n", 2));
		_1a4e4a7bd_doneIndent(_self_);
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("}", 1));
	} else {
		_1a4e16e3d_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a4e72bad_structureOperatorNotEq(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_1a312ad46_StructIns>& _37260_s) {
	_1a4dd7815_indent(_self_);
	if (_1c84179c0_Inline) {
		_1a4e16e3d_write(_self_, jule::Str("inline ", 7));
	};
	_1a4e16e3d_write(_self_, jule::Str("bool operator!=(", 16));
	_1a4e16e3d_write(_self_, _37243_ident);
	_1a4e16e3d_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a4e72ce0_structureOperator(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_1a31ca874_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _1a31c8135_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_1a4dd7815_indent(_self_);
	if (_1c84179c0_Inline) {
		_1a4e16e3d_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_1a4e16e3d_write(_self_, _38338_ident);
		_1a4e16e3d_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1a3ed0d1b_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_1a4e16e3d_write(_self_, _38338_ident);
		} else {
			_1a4e16e3d_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a4e16e3d_write(_self_, jule::Str(" operator", 9));
	_1a4e16e3d_write(_self_, _38366_op);
	_1a4e16e3d_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_1a31c99a5_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_1a4e16e3d_write(_self_, static__1a4e7a655_paramIns(_41121_p));
		_1a4e16e3d_write(_self_, jule::Str(" _other", 7));
	};
	_1a4e16e3d_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_1a4e16e3d_write(_self_, jule::Str("return ", 7));
	};
	_1a4e16e3d_write(_self_, static__1a4dd1424_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_1a4e16e3d_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_1a4e16e3d_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a4e16e3d_write(_self_, jule::Str("}", 1));
	} else {
		_1a4e16e3d_write(_self_, jule::Str("(this); }", 9));
	};
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a4e72e22_structureOperators(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__1a4dd1ea2_structureIns(_43243_s);;
	_1a4e0c95b_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_1a4e72bad_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1a4e72ce0_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1a4e73054_structureInsDecl(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1a78ab8ad:;
			if (it != expr.end()) {
				jule::Ptr<_1a31c7bc3_Fn> _47325_m = *it;
				{
					_1a4e7365e_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_1a78ab8ad:;
				++it;
				goto _iter_begin_1a78ab8ad;
			}
			_iter_end_1a78ab8ad:;
		};
	};
	_1a4e16e3d_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__1a4dd1ea2_structureIns(_47141_s);;
	_1a4e16e3d_write(_self_, _47913_outIdent);
	_1a4e16e3d_write(_self_, jule::Str(" {\n", 3));
	_1a4e49dd8_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1a78ad3e8:;
		if (it != expr.end()) {
			jule::Ptr<_1a3102306_FieldIns> _48521_f = *it;
			{
				_1a4dd7815_indent(_self_);
				_1a4e50c68_fieldDecl(_self_, _48521_f);
				_1a4e16e3d_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1a78ad3e8:;
			++it;
			goto _iter_begin_1a78ad3e8;
		}
		_iter_end_1a78ad3e8:;
	};
	_1a4dd7815_indent(_self_);
	_1a4e15d71_structureDestructor(_self_, _47141_s);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4dd7815_indent(_self_);
	_1a4e16e3d_write(_self_, _47913_outIdent);
	_1a4e16e3d_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1a4e49943_structureDeriveDefsDecls(_self_, _47141_s);
	_1a4e72e22_structureOperators(_self_, _47141_s);
	_1a4e16e3d_write(_self_, jule::Str("\n", 1));
	_1a4e4a7bd_doneIndent(_self_);
	_1a4dd7815_indent(_self_);
	_1a4e16e3d_write(_self_, jule::Str("};", 2));
}



inline void _1a4e73186_structureDecl(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a30e9b8e_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a78b2e69:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _51121_ins = *it;
			{
				_1a4e73054_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_1a78b2e69:;
			++it;
			goto _iter_begin_1a78b2e69;
		}
		_iter_end_1a78b2e69:;
	};
}



inline void _1a4e732b8_structureDecls(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a78b3684:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_1a4e73186_structureDecl(_self_, _51721_s);
					_1a4e16e3d_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1a78b3684:;
			++it;
			goto _iter_begin_1a78b3684;
		}
		_iter_end_1a78b3684:;
	};
}



inline void _1a4e733ea_paramsDecls(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_1a4e16e3d_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a4e16e3d_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_1a78b62ad:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1a31c99a5_ParamIns> _53221_p = *it;
			{
				_1a4e16e3d_write(_self_, static__1a4e7a655_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_1a4e16e3d_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a78b62ad:;
			++it;
			_53214_i++;
			goto _iter_begin_1a78b62ad;
		}
		_iter_end_1a78b62ad:;
	};
	_1a4e16e3d_write(_self_, jule::Str(")", 1));
}



inline void _1a4e7352c_funcHead(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a31ca874_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _1c84179c0_Inline) && (!(_1a31c860d_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_1a4e16e3d_write(_self_, jule::Str("inline ", 7));
	};
	_1a4e16e3d_write(_self_, static__1a4e7ab94_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_1a4e16e3d_write(_self_, jule::Str("(*", 2));
		_1a4e16e3d_write(_self_, static__1a4dd1424_funcIns(_54233_f));
		_1a4e16e3d_write(_self_, jule::Str(")", 1));
	} else {
		_1a4e16e3d_write(_self_, jule::Str(" ", 1));
		_1a4e16e3d_write(_self_, static__1a4dd1424_funcIns(_54233_f));
	};
}



inline void _1a4e7365e_funcDecl(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a31c7bc3_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a78c174c:;
		if (it != expr.end()) {
			jule::Ptr<_1a31ca874_FnIns> _55821_c = *it;
			{
				_1a4dd7815_indent(_self_);
				_1a4e7352c_funcHead(_self_, _55821_c,_55741_ptr);
				_1a4e733ea_paramsDecls(_self_, _55821_c.get()._field_Params);
				_1a4e16e3d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a78c174c:;
			++it;
			goto _iter_begin_1a78c174c;
		}
		_iter_end_1a78c174c:;
	};
}



inline void _1a4e73791_funcDecls(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e133ce_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>([=](jule::Ptr<_1a3e37008_Package>& _56735_pkg) mutable -> void {
		_1a4e75562_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>([=](jule::Ptr<_1a3e9d14b_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1a78c5036:;
				if (it != expr.end()) {
					jule::Ptr<_1a31c7bc3_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_1a4e7365e_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_1a78c5036:;
					++it;
					goto _iter_begin_1a78c5036;
				}
				_iter_end_1a78c5036:;
			};
		}));
	}));
}



inline void _1a4e738c3_traitDataTypes(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e133ce_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>([=](jule::Ptr<_1a3e37008_Package>& _57935_pkg) mutable -> void {
		_1a4e75562_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>([=](jule::Ptr<_1a3e9d14b_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1a78c7e5c:;
				if (it != expr.end()) {
					jule::Ptr<_1a31d9a81_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a4e16e3d_write(_self_, jule::Str("struct ", 7));
						_1a4e16e3d_write(_self_, static__1a4dd16bb_traitDecl(_58129_t));
						_1a4e16e3d_write(_self_, jule::Str("MptrData", 8));
						_1a4e16e3d_write(_self_, jule::Str(" {\n", 3));
						_1a4e49dd8_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1a78c9cd8:;
							if (it != expr.end()) {
								jule::Ptr<_1a31c7bc3_Fn> _59033_m = *it;
								{
									jule::Ptr<_1a31ca874_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1a31c99a5_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1a78cc35c:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_1a31c99a5_ParamIns> _59637_ip = *it;
											{
												if (_1ba1de9e7_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1a3e1e1aa_Itoa(_59630_i));
												};
											}
											_iter_next_1a78cc35c:;
											++it;
											_59630_i++;
											goto _iter_begin_1a78cc35c;
										}
										_iter_end_1a78cc35c:;
									};
									if ((!(_1d28c71b7_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a4e765c9_customType>(_1a4e765c9_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1a4e7365e_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_1a78c9cd8:;
								++it;
								goto _iter_begin_1a78c9cd8;
							}
							_iter_end_1a78c9cd8:;
						};
						_1a4e4a7bd_doneIndent(_self_);
						_1a4dd7815_indent(_self_);
						_1a4e16e3d_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1a78c7e5c:;
					++it;
					goto _iter_begin_1a78c7e5c;
				}
				_iter_end_1a78c7e5c:;
			};
		}));
	}));
}



inline void _1a4e73a05_paramIns(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a31c99a5_ParamIns>& _62333_p) {
	_1a4e16e3d_write(_self_, static__1a4e7a655_paramIns(_62333_p));
	_1a4e16e3d_write(_self_, jule::Str(" ", 1));
	_1a4e16e3d_write(_self_, static__1a4dd1963_param(_62333_p.get()._field_Decl));
}



inline void _1a4e73b37_paramsIns(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_1a4e16e3d_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a4e16e3d_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_1a78d20ba:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1a31c99a5_ParamIns> _63521_p = *it;
			{
				_1a4e73a05_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_1a4e16e3d_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a78d20ba:;
			++it;
			_63514_i++;
			goto _iter_begin_1a78d20ba;
		}
		_iter_end_1a78d20ba:;
	};
	_1a4e16e3d_write(_self_, jule::Str(")", 1));
}



inline void _1a4e73c69_varInitExpr(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a3e59e4e_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_1a4e16e3d_write(_self_, jule::Str("static ", 7));
	};
	_1a4e16e3d_write(_self_, static__1a4e7b47a_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_1a4e16e3d_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_1a4e16e3d_write(_self_, jule::Str("&", 1));
	};
	_1a4e16e3d_write(_self_, static__1a4dd24e1_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_1a4e16e3d_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_1a4e16e3d_write(_self_, jule::Str(";", 1));
}



inline void _1a4e73d9b_var(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a3e59e4e_Var> _66227_v) {
	if (_1ba1de750_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1a4e73c69_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1a4dc9186_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_1a4e73c69_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_1a4e73c69_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1a4dc940b_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _1a4e73ecd_func(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a31c7bc3_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a78db57a:;
		if (it != expr.end()) {
			jule::Ptr<_1a31ca874_FnIns> _67821_ins = *it;
			{
				_1a4e7352c_funcHead(_self_, _67821_ins,false);
				_1a4e73b37_paramsIns(_self_, _67821_ins.get()._field_Params);
				_1a4e16e3d_write(_self_, jule::Str(" ", 1));
				_1a4dba980_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1a78db57a:;
			++it;
			goto _iter_begin_1a78db57a;
		}
		_iter_end_1a78db57a:;
	};
}



inline void _1a4e74110_traitWrappers(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1a78ddabb:;
		if (it != expr.end()) {
			jule::Ptr<_1a4e7242c_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1a78de2a3:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _1a3e1e1aa_Itoa(_69021_hash.get()._field_i));
							_1a4e73ecd_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_1d28c71b7_Production) {
									_1a4e16e3d_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1a4e16e3d_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1a78de2a3;
							};
							jule::Bool _70821_ptr = (!(_1a31c6c27_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1a31c7bc3_Fn> _71025_sm = _1a310115c_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1a78de2a3;
							};
							_1a4e49dd8_addIndent(_self_);
							_1a4e16e3d_write(_self_, jule::Str("{\n", 2));
							_1a4dd7815_indent(_self_);
							if ((_71025_sm.get()._field_Exceptional || (!(_1a31c8135_IsVoid(_71025_sm.ptr()))))) {
								_1a4e16e3d_write(_self_, jule::Str("return ", 7));
							};
							_1a4e16e3d_write(_self_, static__1a4dd117c_func(_71025_sm));
							_1a4e16e3d_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_1a4e16e3d_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1a4e16e3d_write(_self_, static__1a4e79d6e_structureIns(_69021_hash.get()._field_s));
								_1a4e16e3d_write(_self_, jule::Str(">(", 2));
								if ((!(_1d28c71b7_Production))) {
									_1a4e16e3d_write(_self_, jule::Str("_00___file", 10));
								};
								_1a4e16e3d_write(_self_, jule::Str(")", 1));
							} else {
								_1a4e16e3d_write(_self_, jule::Str("_self_.data.as<", 15));
								_1a4e16e3d_write(_self_, static__1a4e79ac7_structure(_71025_sm.get()._field_Owner));
								_1a4e16e3d_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1a78e8ee4:;
								if (it != expr.end()) {
									jule::Ptr<_1a31c6386_Param> _73624_mp = *it;
									{
										_1a4e16e3d_write(_self_, jule::Str(", ", 2));
										_1a4e16e3d_write(_self_, static__1a4dd1963_param(_73624_mp));
									}
									_iter_next_1a78e8ee4:;
									++it;
									goto _iter_begin_1a78e8ee4;
								}
								_iter_end_1a78e8ee4:;
							};
							_1a4e16e3d_write(_self_, jule::Str(");\n}\n", 5));
							_1a4e4a7bd_doneIndent(_self_);
						}
						_iter_next_1a78de2a3:;
						++it;
						goto _iter_begin_1a78de2a3;
					}
					_iter_end_1a78de2a3:;
				};
			}
			_iter_next_1a78ddabb:;
			++it;
			goto _iter_begin_1a78ddabb;
		}
		_iter_end_1a78ddabb:;
	};
}



inline void _1a4e74242_traitDatas(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	jule::Ptr<_1a31d9a81_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1a78ea9a7:;
		if (it != expr.end()) {
			jule::Ptr<_1a4e7242c_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__1a4dd16bb_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_1a4e4a7bd_doneIndent(_self_);
						_1a4dd7815_indent(_self_);
						_1a4e16e3d_write(_self_, jule::Str("};\n", 3));
					};
					_1a4e16e3d_write(_self_, jule::Str("static ", 7));
					_1a4e16e3d_write(_self_, _74917_ident);
					_1a4e16e3d_write(_self_, jule::Str("MptrData ", 9));
					_1a4e16e3d_write(_self_, _74917_ident);
					_1a4e16e3d_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_1a4e49dd8_addIndent(_self_);
				};
				_1a4dd7815_indent(_self_);
				_1a4e16e3d_write(_self_, jule::Str("{\n", 2));
				_1a4e49dd8_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1a78eeb32:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__1a4dd117c_func(_76725_m);;
							_1a4dd7815_indent(_self_);
							_1a4e16e3d_write(_self_, jule::Str(".", 1));
							_1a4e16e3d_write(_self_, _76821_mIdent);
							_1a4e16e3d_write(_self_, jule::Str("=", 1));
							_1a4e16e3d_write(_self_, _76821_mIdent);
							_1a4e16e3d_write(_self_, jule::Str("_", 1));
							_1a4e16e3d_write(_self_, _1a3e1e1aa_Itoa(_74821_hash.get()._field_i));
							_1a4e16e3d_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1a78eeb32:;
						++it;
						goto _iter_begin_1a78eeb32;
					}
					_iter_end_1a78eeb32:;
				};
				_1a4e4a7bd_doneIndent(_self_);
				_1a4dd7815_indent(_self_);
				_1a4e16e3d_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1a78ea9a7:;
			++it;
			goto _iter_begin_1a78ea9a7;
		}
		_iter_end_1a78ea9a7:;
	};
	if ((_74717_old != nullptr)) {
		_1a4e4a7bd_doneIndent(_self_);
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a4e74374_globals(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1a78eb018:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e59e4e_Var> _79021_v = *it;
			{
				_1a4e16e3d_write(_self_, static__1a4e7b47a_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_1a4e16e3d_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_1a4e16e3d_write(_self_, jule::Str("&", 1));
				};
				_1a4e16e3d_write(_self_, static__1a4dd24e1_var(_79021_v));
				_1a4e16e3d_write(_self_, jule::Str(" = ", 3));
				_1a4dc9186_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_1a4e16e3d_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a78eb018:;
			++it;
			goto _iter_begin_1a78eb018;
		}
		_iter_end_1a78eb018:;
	};
}



inline void _1a4e744a6_decls(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e14831_traitDecls(_self_);
	_1a4e156ab_structurePlainDecls(_self_);
	_1a4e732b8_structureDecls(_self_);
	_1a4e73791_funcDecls(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4e738c3_traitDataTypes(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4e74110_traitWrappers(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4e74242_traitDatas(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4e74374_globals(_self_);
}



inline void _1a4e745d8_structureMethods(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a790a885:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _81921_f = *it;
			{
				_1a4e73ecd_func(_self_, _81921_f);
				_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a790a885:;
			++it;
			goto _iter_begin_1a790a885;
		}
		_iter_end_1a790a885:;
	};
}



inline void _1a4e7471a_structureDeriveDefs(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _82544_s) {
	if (_1a30da9a4_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a4e16e3d_write(_self_, static__1a4dcbead_cloneFuncDef(_82544_s.get()._field_Decl));
		_1a4e16e3d_write(_self_, jule::Str("{\n", 2));
		_1a4e49dd8_addIndent(_self_);
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, static__1a4e79d6e_structureIns(_82544_s));
		_1a4e16e3d_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1a790d008:;
			if (it != expr.end()) {
				jule::Ptr<_1a3102306_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__1a4dd2249_field(_83320_f.get()._field_Decl);;
					_1a4dd7815_indent(_self_);
					_1a4e16e3d_write(_self_, jule::Str("clone.", 6));
					_1a4e16e3d_write(_self_, _83421_ident);
					_1a4e16e3d_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a4e16e3d_write(_self_, _83421_ident);
					_1a4e16e3d_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1a790d008:;
				++it;
				goto _iter_begin_1a790d008;
			}
			_iter_end_1a790d008:;
		};
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("return clone;\n", 14));
		_1a4e4a7bd_doneIndent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a4e7484c_structureOstream(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _84941_s) {
	_1a4dd7815_indent(_self_);
	_1a4e16e3d_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a4e16e3d_write(_self_, static__1a4dd1ea2_structureIns(_84941_s));
	_1a4e16e3d_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a4e49dd8_addIndent(_self_);
	_1a4dd7815_indent(_self_);
	jule::Ptr<_1a31c7bc3_Fn> _85717_fts = _1a310115c_FindMethod(_84941_s.ptr(), jule::Str("Str", 3),false);;
	if (static__1a3e5b615_Str(_85717_fts)) {
		_1a4e16e3d_write(_self_, jule::Str("_Stream << ", 11));
		_1a4e16e3d_write(_self_, static__1a4dd117c_func(_85717_fts));
		_1a4e16e3d_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a4e16e3d_write(_self_, jule::Str("_Stream << \"", 12));
		_1a4e16e3d_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_1a4e16e3d_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1a79167c5:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_1a3102306_FieldIns> _86725_f = *it;
				{
					_1a4dd7815_indent(_self_);
					_1a4e16e3d_write(_self_, jule::Str("_Stream << \"", 12));
					_1a4e16e3d_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_1a4e16e3d_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1a312ad46_StructIns> _87421_strct = _1a3ed226d_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1a4e16e3d_write(_self_, jule::Str(" cpp.", 5));
						_1a4e16e3d_write(_self_, static__1a4dd2249_field(_86725_f.get()._field_Decl));
						_1a4e16e3d_write(_self_, jule::Str("\"", 1));
					} else {
						_1a4e16e3d_write(_self_, jule::Str("\" << _Src.", 10));
						_1a4e16e3d_write(_self_, static__1a4dd2249_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_1a4e16e3d_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a4e16e3d_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1a79167c5:;
				++it;
				_86718_i++;
				goto _iter_begin_1a79167c5;
			}
			_iter_end_1a79167c5:;
		};
		_1a4dd7815_indent(_self_);
		_1a4e16e3d_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a4dd7815_indent(_self_);
	_1a4e16e3d_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a4e4a7bd_doneIndent(_self_);
	_1a4e16e3d_write(_self_, jule::Str("}", 1));
}



inline void _1a4e7497e_structureIns(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a312ad46_StructIns>& _90037_s) {
	_1a4e745d8_structureMethods(_self_, _90037_s);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4e7471a_structureDeriveDefs(_self_, _90037_s);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
	_1a4e7484c_structureOstream(_self_, _90037_s);
}



inline void _1a4e74ab1_structure(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a30e9b8e_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a791eec6:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _90921_ins = *it;
			{
				_1a4e7497e_structureIns(_self_, _90921_ins);
				_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a791eec6:;
			++it;
			goto _iter_begin_1a791eec6;
		}
		_iter_end_1a791eec6:;
	};
}



inline void _1a4e74be3_structures(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1a7920724:;
		if (it != expr.end()) {
			jule::Ptr<_1a30e9b8e_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_1a4e74ab1_structure(_self_, _91621_s);
					_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1a7920724:;
			++it;
			goto _iter_begin_1a7920724;
		}
		_iter_end_1a7920724:;
	};
}



inline void _1a4e74d25_funcs(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e133ce_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>([=](jule::Ptr<_1a3e37008_Package>& _92535_pkg) mutable -> void {
		_1a4e75562_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>([=](jule::Ptr<_1a3e9d14b_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1a7924739:;
				if (it != expr.end()) {
					jule::Ptr<_1a31c7bc3_Fn> _92729_f = *it;
					{
						if (((!(_1d28c668e_Test)) && _1a4e7e170_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1a7924739;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_1a4e73ecd_func(_self_, _92729_f);
							_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1a7924739:;
					++it;
					goto _iter_begin_1a7924739;
				}
				_iter_end_1a7924739:;
			};
		}));
	}));
}



inline void _1a4e74e57_pushInit(jule::Ptr<_1a4e72619_ObjectCoder> _self_, jule::Ptr<_1a3e37008_Package>& _94033_pkg) {
	_1a4e75562_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)>([=](jule::Ptr<_1a3e9d14b_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1a7927264:;
			if (it != expr.end()) {
				jule::Ptr<_1a31c7bc3_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_1a4dd7815_indent(_self_);
						_1a4e16e3d_write(_self_, static__1a4dd117c_func(_94220_f));
						_1a4e16e3d_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1a7927264:;
				++it;
				goto _iter_begin_1a7927264;
			}
			_iter_end_1a7927264:;
		};
	}));
}



inline void _1a4e75089_initCaller(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e16e3d_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a4e49dd8_addIndent(_self_);
	_1a4e133ce_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e37008_Package>&)>([=](jule::Ptr<_1a3e37008_Package>& _95535_pkg) mutable -> void {
		_1a4e74e57_pushInit(_self_, _95535_pkg);
	}));
	_1a4e4a7bd_doneIndent(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n}", 2));
}



inline void _1a4e751bb_end(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e16e3d_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1d28c668e_Test) {
		_1a4e16e3d_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a4e16e3d_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a4e16e3d_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a4e752ed_serializeHead(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e0b592_prepareStructures(_self_);
	_1a4e13962_buildTraitMap(_self_);
	_1a4e47996_head(_self_);
	_1a4dd852a_links(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n", 1));
	_1a4e744a6_decls(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n", 1));
	_1a4e74be3_structures(_self_);
	_1a4e74d25_funcs(_self_);
	_1a4e75089_initCaller(_self_);
	_1a4e16e3d_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a4e75430_Serialize(jule::Ptr<_1a4e72619_ObjectCoder> _self_) {
	_1a4e752ed_serializeHead(_self_);
	_1a4e751bb_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e72619_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1a797e057_parseInteger(_1a4eaea41_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1a7981ec2:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1a7981d5c:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1a7981b70:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1a7982236:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1a798229c:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1a79817c9:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1a79816ec:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1a798733a_parseInteger(_1a4eaea41_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1a798a261:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1a798a0eb:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1a7989e0e:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1b9d2b8ed_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1a798a4c5:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1a798a53b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1a7989a68:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1a798998b:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _1a4eb0338_getData(_1a4eaea41_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1a4eb057a_processFlag(_1a4eaea41_argParser* _self_, jule::Trait<_1a4cb984b_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a7965b32_Flag>>()) {
			_case_begin_1a797ae33:;
			{
				jule::Ptr<_1a7965b32_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1a7965b32_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1a797adab:;
	};
	jule::Str _22513_data = _1a4eb0338_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1a4cb984b_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a4c89640_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a795951b_Flag>>()) {
			_case_begin_1a797c671:;
			{
				jule::Ptr<_1a795951b_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1a795951b_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _1a797e057_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1a3b27cb5_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a4cb984b_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a4c89640_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a795d366_Flag>>()) {
			_case_begin_1a797d100:;
			{
				jule::Ptr<_1a795d366_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1a795d366_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _1a798733a_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1a3a962c7_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a4cb984b_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a4c89640_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7961ea2_Flag>>()) {
			_case_begin_1a797d166:;
			{
				jule::Ptr<_1a7961ea2_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1a7961ea2_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1a3bb1a74_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a4cb984b_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a4c89640_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a796976d_Flag>>()) {
			_case_begin_1a797d1cc:;
			{
				(*(_21735_flag.operator jule::Ptr<_1a796976d_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1a797c5b6:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a4eb0800_singleDash(_1a4eaea41_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1a7992532:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1a4cb984b_CommonFlag> _26321_flag = _1a4eacde6_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1a4eb057a_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1a7992532:;
			++it;
			goto _iter_begin_1a7992532;
		}
		_iter_end_1a7992532:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a4eb0a75_doubleDash(_1a4eaea41_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1a4cb984b_CommonFlag> _27617_flag = _1a4eacad8_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1a4eb057a_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a4eb0c51_tryArg(_1a4eaea41_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1a4eb0a75_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a4eb0800_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a4eb0e2c_parse(_1a4eaea41_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a4eb0c51_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1a799ac88:;
	}
	_iter_end_1a799ac88:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a4eaea41_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d37066ee_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1d3730d88_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6924_s);
	};
}



inline jule::I64 _1d295a844_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _1d3737d6d_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));
}



inline jule::I64 _1d3738258_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));
}



inline jule::U8* _1d3738599_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));
}



inline DIR* _1d3738a72_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));
}



inline struct dirent* _1d3738d19_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);
}



inline jule::I64 _1d37390b1_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));
}



inline jule::I64 _1d3739941_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));
}



inline jule::I64 _1d3739bd8_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));
}



inline jule::I64 _1d3739e80_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));
}



inline jule::I64 _1d3740c99_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _1d3741184_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _1d3741508_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _1d37418e3_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _1d3741b02_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _1d388199a_getLastOsError(void) {
	jule::I64 _309_err = _1d295a844_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a5047db5:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a5047711:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a5047788:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a5047810:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a5047a96:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a5047b0c:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a5047b73:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1a5047568:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a5047513:;
	};
}



inline jule::Slice<jule::Str> _1d38a82a7_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1d38a872a_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1d38a90dd_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1d38a90dd_getwd(void) {
	jule::U8* _1113_buff = _1d3738599_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_1d388199a_getLastOsError());
	};
	jule::Str _159_pwd = _1d3730d88_BytePtrToStr(_1113_buff);;
	{
		_1d37066ee_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Bool _1b9bc0709_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1b9c3ea53__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _1b9c4850c_isExcludingLatin(_1b9bca67b_Letter,_7613_r);
}



inline jule::Bool _1b9c47929_is16(jule::Slice<_1b9c45d67_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1a563d499:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1b9c45d67_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1a563d499:;
				++it;
				_19313_i++;
				goto _iter_begin_1a563d499;
			}
			_iter_end_1a563d499:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1b9c45d67_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1a563cbe6:;
	}
	_iter_end_1a563cbe6:;;
	return false;
}



inline jule::Bool _1b9c47c6a_is32(jule::Slice<_1b9c462da_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a5644d74:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1b9c462da_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1a5644d74:;
				++it;
				_23013_i++;
				goto _iter_begin_1a5644d74;
			}
			_iter_end_1a5644d74:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1b9c462da_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1a5642ba7:;
	}
	_iter_end_1a5642ba7:;;
	return false;
}



inline jule::Bool _1b9c4850c_isExcludingLatin(jule::Ptr<_1b9c4675d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1b9c45d67_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _1b9c47929_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_1b9c462da_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _1b9c47c6a_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _1b9c487a4_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1b9c3ea53__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _1b9c4850c_isExcludingLatin(_1b9bd271b_Upper,_29512_r);
}



inline std::tuple<jule::I32,jule::I64> _1b9d0b2a1_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1b9d0a14b_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1b9d0a6bd_acceptRange _1969_accept = _1b9d0aa31_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _1b9d0b5c0_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1b9d0a14b_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1b9d0a6bd_acceptRange _2439_accept = _1b9d0aa31_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _1b9d0b867_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1b9d0d23c_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1a568d50a;
			};
		}
	_iter_next_1a568d50a:;
	}
	_iter_end_1a568d50a:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _1b9d0b2a1_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::Slice<jule::U8> _1b9d0c615_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _1b9d0c956_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _1b9d0c956_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a56a3a70:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a56a3d8e:;
			{
				_41242_r=128LL;
				goto _case_begin_1a56a24ca;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a56a24ca:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1a56a19b3:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_1a56a194c:;
	};
}



inline jule::I64 _1b9d0ce95_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a56ab25e;
			};
			jule::U8 _48213_x = _1b9d0a14b_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a56ab25e;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a56ab25e;
			};
			_1b9d0a6bd_acceptRange _49213_accept = _1b9d0aa31_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a56ab25e:;
	}
	_iter_end_1a56ab25e:;;
	return _47327_n;
}



inline jule::Bool _1b9d0d23c_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::Slice<jule::U8> _1b9d2ac2c_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline void _1b9d2b37b_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _1b9d2a15a_FindLastByte(jule::Slice<jule::U8> _2617_s, jule::U8 _2628_b) {
	jule::U8* _279_first = (&(_2617_s[0LL]));;
	jule::U8* _2813_it = (&(_2617_s[(_2617_s.len() - 1LL)]));;
	for (; (_2813_it >= _279_first); (_2813_it)--) {
		{
			{
				if (((*(_2813_it)) == _2628_b)) {
					return static_cast<jule::I64>(((jule::I64)((_2813_it - _279_first))));
				};
			};
		}
	_iter_next_1a56d4dc0:;
	}
	_iter_end_1a56d4dc0:;;
	return -1LL;
}



inline jule::I64 _1b9d2b788_FindLastByteStr(jule::Str& _4521_s, jule::U8 _4529_b) {
	return static_cast<jule::I64>(_1b9d2a15a_FindLastByte(_1b9d2ac2c_Stobs(_4521_s),_4529_b));
}



inline jule::Str _1b9d1351c_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1a56e9e07:;
	}
	_iter_end_1a56e9e07:;;
	return _2013_ss;
}



inline jule::Bool _1b9d0e925_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); std::tie(_3213_i,_2738_start) = std::make_tuple(static_cast<jule::I64>((_3213_i + 1LL)),static_cast<jule::I64>((_2738_start + 1LL)))) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;
			};
		}
	_iter_next_1a56ed14c:;
	}
	_iter_end_1a56ed14c:;;
	return true;
}



inline jule::Bool _1b9d2b8ed_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1b9d0e925_hasPrefix(_4214_s,_4222_sub,0LL);
}



inline jule::Bool _1b9d2baa7_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1a570024d:;
	}
	_iter_end_1a570024d:;;
	return true;
}



inline jule::Bool _1b9d2bdb5_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1b9d2baa7_hasSuffix(_6214_s,_6222_sub,0LL);
}



inline jule::I64 _1b9d2c2a0_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1b9d0e925_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;
			};
		}
	_iter_next_1a5709466:;
	}
	_iter_end_1a5709466:;;
	return -1LL;
}



inline jule::I64 _1b9d2cadb_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); std::tie(_10017_k,_10117_z) = std::make_tuple(static_cast<jule::I64>((_10017_k + 1LL)),static_cast<jule::I64>((_10117_z + 1LL)))) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1a570b4ce;
					};
				}
			_iter_next_1a570d514:;
			}
			_iter_end_1a570d514:;;
			return _9413_j;
		}
	_iter_next_1a570b4ce:;
	}
	_iter_end_1a570b4ce:;;
	return -1LL;
}



inline jule::I64 _1b9d2ce2c_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_1b9d2cadb_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));
}



inline jule::I64 _1b9d2e1c5_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br;;
			jule::I64 _17418_n;;
			std::tie(_17414_br,_17418_n) = _1b9d0b2a1_DecodeRune(_17114_s.slice(_17213_i));
			if ((_17125_r == _17414_br)) {
				return _17213_i;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1a5716286:;
	}
	_iter_end_1a5716286:;;
	return -1LL;
}



inline jule::I64 _1b9d2ea11_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_1b9d2b788_FindLastByteStr(_19317_s,_19325_b));
}



inline jule::I64 _1b9d30825_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _1b9d2ac2c_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _1b9d2ac2c_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r;;
			jule::I64 _23317_n;;
			std::tie(_23314_r,_23317_n) = _1b9d0b2a1_DecodeRune(_2299_sb.slice(_23113_i));
			if ((_1b9d2e1c5_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1a571c446:;
	}
	_iter_end_1a571c446:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1b9d31051_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL,_26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _1b9d2c2a0_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1a57242b6;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1a57242b6:;
	}
	_iter_end_1a57242b6:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;
}



inline jule::Bool _1b9d31392_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1b9d2c2a0_FindAt(_29013_s,_29021_sub,0LL) != -1LL);
}



inline jule::Bool _1b9d31d65_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1b9d30825_FindAny(_30616_s,_30624_runes) != -1LL);
}



inline jule::I64 _1b9d321a6_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _1b9d2c2a0_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1a5729ce4;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1a5729ce4:;
	}
	_iter_end_1a5729ce4:;;
	return _31613_n;
}



inline jule::Str _1b9d3263a_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;
	};
	jule::I64 _3379_m = _1b9d321a6_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _1b9d2c2a0_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1a572de6e;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1a572de6e:;
	}
	_iter_end_1a572de6e:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;
}



inline void _1b9d2e69d_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r;;
			jule::I64 _39117_n;;
			std::tie(_39114_r,_39117_n) = _1b9d0b2a1_DecodeRune(_38818_s.slice(_38913_i));
			if ((_1b9d2e1c5_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1a5733ec9:;
	}
	_iter_end_1a5733ec9:;;
	_38818_s=nullptr;
}



inline jule::Str _1b9d336e6_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _1b9d2ac2c_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _1b9d2ac2c_Stobs(_40321_cutset);;
	_1b9d2e69d_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);
}



inline void _1b9d3399e_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r;;
			jule::I64 _41317_n;;
			std::tie(_41314_r,_41317_n) = _1b9d0b867_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
			if ((_1b9d2e1c5_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1a573721e:;
	}
	_iter_end_1a573721e:;;
	_41019_s=nullptr;
}



inline jule::Str _1b9d34131_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _1b9d2ac2c_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _1b9d2ac2c_Stobs(_43417_cutset);;
	_1b9d2e69d_trimLeft(_43513_bytes,_4369_bcutset);
	_1b9d3399e_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);
}



inline jule::Str _1b9d34472_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a573baa3:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a573bb19:;
			{
				return _4449_parts[0LL];
			}
		}
		_match_end_1a573b883:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a573aa08:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_1a573aa08:;
			++it;
			goto _iter_begin_1a573aa08;
		}
		_iter_end_1a573aa08:;
	};
	return _45113_s;
}



inline jule::Str _1b9d35808_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1b9d38531_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1b9d37e9d_IsPathSep(_1099_originalPath[0LL])) && _1b9d37e9d_IsPathSep(_1099_originalPath[1LL]))) {
			return _1b9d35d8b_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1b9d37e9d_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1b9d34a49_lazyBuff _12713_out = _1b9d34a49_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1b9d35242_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1b9d37e9d_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1a574e9b7:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1b9d37e9d_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1a574c4a9:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1b9d37e9d_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1a575049b:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1a5753504:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1b9d37e9d_IsPathSep(static_cast<jule::U8>(_1b9d34ebc_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a5754060:;
									}
									_iter_end_1a5754060:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a575356a:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1b9d35242_append(&_12713_out, 47LLU);
									};
									_1b9d35242_append(&_12713_out, '.');
									_1b9d35242_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a5753427:;
						};
					}
				}
				else {
					_case_begin_1a5749c15:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1b9d35242_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_1b9d37e9d_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1b9d35242_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1a574cad6:;
						}
						_iter_end_1a574cad6:;;
					}
				}
				_match_end_1a5749b38:;
			};
		}
	_iter_next_1a574a52e:;
	}
	_iter_end_1a574a52e:;;
	if ((_12713_out._field_w == 0LL)) {
		_1b9d35242_append(&_12713_out, '.');
	};
	return _1b9d35d8b_FromSlash(_1b9d354a6_string(&_12713_out));
}



inline jule::Str _1b9d35d8b_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;
	};
}



inline jule::Str _1b9d361aa_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1b9d38ae7_join(_2259_elem);
}



inline jule::Str _1b9d36452_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1b9d37e9d_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_1a5758493:;
	}
	_iter_end_1a5758493:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1b9d366e9_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1b9d38850_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1b9d36991_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _1b9d37e9d_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1a575a9c3:;
	}
	_iter_end_1a575a9c3:;;
	(_25413_path).mut_slice(_1b9d370ac_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1b9d37e9d_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a575c233:;
	}
	_iter_end_1a575c233:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25413_path;
}



inline jule::Str _1b9d36d15_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1b9d370ac_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1b9d37e9d_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a575e5dc:;
	}
	_iter_end_1a575e5dc:;;
	jule::Str _2919_dir = _1b9d35808_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1b9d370ac_VolumeName(jule::Str _30315_path) {
	return _1b9d35d8b_FromSlash(_30315_path.slice(0LL,_1b9d38531_volumeNameLen(_30315_path)));
}



inline jule::Bool _1b9d37e9d_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);
}



inline jule::Bool _1b9d38289_IsAbs(jule::Str _5310_path) {
	return _1b9d2b8ed_HasPrefix(_5310_path,jule::Str("/", 1));
}



inline jule::I64 _1b9d38531_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1b9d38850_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = jule::Bool();
	if (_1b9d38289_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_1b9d35808_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _1d38a872a_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_1b9d38ae7_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _1b9d38ae7_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1a5769d45:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _1b9d35808_Clean(_1b9d34472_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_1a5769d45:;
			++it;
			_749_i++;
			goto _iter_begin_1a5769d45;
		}
		_iter_end_1a5769d45:;
	};
	return jule::Str();
}



inline jule::I64 _1d2977ee3_getLastFsError(void) {
	jule::I64 _729_err = _1d295a844_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a57782a4:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a577765a:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a5778194:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a5777b00:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a5777b66:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a5777bcc:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1a5777c43:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a57783c5:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a577843b:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a57784b3:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a577853a:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a57785b2:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a5778639:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a57786b1:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a5778738:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a57787b0:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a5778837:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a57788ae:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a5778936:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a57789ad:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a5778a35:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a5778aac:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a5778b34:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a5778bab:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a5778c33:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1a5778caa:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1a5778d32:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1a5778da9:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1a5777957:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a5777902:;
	};
}



inline jule::I64 _1b9e0c4b2_getLastProcessError(void) {
	jule::I64 _429_err = _1d295a844_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a57a161d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a57a09c4:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a57a0e69:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a57a0ed0:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a57a1057:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a57a10ce:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a57a1310:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a57a1387:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a57a140e:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_1a57a1486:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a57a150d:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1a57a0cc1:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a57a0c6b:;
	};
}



inline jule::Slice<char*> _1b9e10718_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2024_s.len() + 1LL));;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1a57ad130:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1a57ad130:;
			++it;
			_229_i++;
			goto _iter_begin_1a57ad130;
		}
		_iter_end_1a57ad130:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _1b9e10b69_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _1b9e10718_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _1b9e11054_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _1b9e10718_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _1b9e10718_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _1b9e11b6a_Exit(jule::I64 _129_code) {
	_1d3741b02_Exit(_129_code);
}



inline jule::Str _1b9e11d68_Executable(void) {
	return jule::executable();
}



inline jule::Bool _1b9da5889_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1b9da59bb_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _1d28d0b3d_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1a57e450c:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1a57e450c:;
			++it;
			goto _iter_begin_1a57e450c;
		}
		_iter_end_1a57e450c:;
	};
	return false;
}



inline jule::Bool _1b9da5c1e_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1b9da426c_CppExts;
		auto it = expr.begin();
		_iter_begin_1a57e56a6:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1a57e56a6:;
			++it;
			goto _iter_begin_1a57e56a6;
		}
		_iter_end_1a57e56a6:;
	};
	{
		auto &expr = _1b9da579b_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1a57e661e:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1a57e661e:;
			++it;
			goto _iter_begin_1a57e661e;
		}
		_iter_end_1a57e661e:;
	};
	return false;
}



inline jule::Str _1b9db28eb_Logf(jule::Str _2959_fmt, jule::Slice<jule::Any> _29522_args) {
	return _1b9db3314_applyFmt(_2959_fmt,jule::Any(_29522_args));
}



inline jule::Str _1b9db2bd7_argToStr(jule::Any _29913_arg) {
	{
		auto &_match_expr{ _29913_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a57e760e:;
			{
				return _29913_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a57e7675:;
			{
				return static_cast<jule::Str>(_29913_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a57e76db:;
			{
				return static_cast<jule::Str>(_29913_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1a57e7554:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1a57e74ee:;
	};
}



inline jule::I64 _1b9db2e7e_findNextFmt(jule::Str _31216_fmt) {
	{
		auto &expr = _31216_fmt;
		auto it = expr.begin();
		_iter_begin_1a57e81d1:;
		if (it != expr.end()) {
			jule::I64 _3139_i = it - expr.begin();
			jule::U8 &_31312_b = *it;
			{
				if ((_31312_b == '@')) {
					return _3139_i;
				};
			}
			_iter_next_1a57e81d1:;
			++it;
			_3139_i++;
			goto _iter_begin_1a57e81d1;
		}
		_iter_end_1a57e81d1:;
	};
	return -1LL;
}



inline jule::Str _1b9db3314_applyFmt(jule::Str _32117_fmt, jule::Slice<jule::Any> _32127_args) {
	jule::Str _32213_s = jule::Str();;
	{
		auto &expr = _32127_args;
		auto it = expr.begin();
		_iter_begin_1a57ea337:;
		if (it != expr.end()) {
			jule::Any &_32312_arg = *it;
			{
				jule::I64 _32413_i = _1b9db2e7e_findNextFmt(_32117_fmt);;
				if ((_32413_i == -1LL)) {
					goto _iter_end_1a57ea337;
				};
				_32213_s+=_32117_fmt.slice(0LL,_32413_i);
				_32213_s+=_1b9db2bd7_argToStr(jule::Any(_32312_arg));
				(_32117_fmt).mut_slice((_32413_i + 1LL));;
			}
			_iter_next_1a57ea337:;
			++it;
			goto _iter_begin_1a57ea337;
		}
		_iter_end_1a57ea337:;
	};
	_32213_s+=_32117_fmt;
	return _32213_s;
}



inline jule::Bool _1b9db43d1_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _1b9db5811_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _1b9db5ab9_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _1b9db5d61_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _1b9db6180_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _1b9db6427_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1b9db66be_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1b9db6966_IsUnix(jule::Str _5511_os) {
	return (_1b9db5ab9_IsDarwin(_5511_os) || _1b9db5d61_IsLinux(_5511_os));
}



inline jule::Bool _1b9db6cda_Is32Bit(jule::Str _5812_arch) {
	return _1b9db6180_IsI386(_5812_arch);
}



inline jule::Bool _1b9db7082_Is64Bit(jule::Str _6112_arch) {
	return (_1b9db6427_IsAmd64(_6112_arch) || _1b9db66be_IsArm64(_6112_arch));
}



inline void _1b9dc419e_init(void) {
	jule::Str _2513_path = _1b9e11d68_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1b9e00818_PathWd=({
			auto except = _1d38a872a_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1b9ded096_PathExec=_1b9d36d15_Dir(_2513_path);
		_1b9deb1d7_PathStdlib=_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1b9ded096_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1b9e0b093_PathApi=_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1b9ded096_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1ba1dc6b5_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _1ba13eace_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1a584520b:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;
				};
			}
			_iter_next_1a584520b:;
			++it;
			goto _iter_begin_1a584520b;
		}
		_iter_end_1a584520b:;
	};
	return false;
}



inline jule::Bool _1ba1dc9a1_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _1ba13ee20_BinOps;
		auto it = expr.begin();
		_iter_begin_1a5845b24:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;
				};
			}
			_iter_next_1a5845b24:;
			++it;
			goto _iter_begin_1a5845b24;
		}
		_iter_end_1a5845b24:;
	};
	return false;
}



inline jule::Bool _1ba1dd067_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _1ba1dd30e_IsRawStr(_34210_k)));
}



inline jule::Bool _1ba1dd30e_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));
}



inline jule::Bool _1ba1dd5a6_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));
}



inline jule::Bool _1ba1ddbc2_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));
}



inline jule::Bool _1ba1dde69_IsFloat(jule::Str _35812_k) {
	if (_1b9d2b8ed_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _1b9d31d65_ContainsAny(_35812_k,jule::Str(".pP", 3));
	};
	return _1b9d31d65_ContainsAny(_35812_k,jule::Str(".eE", 3));
}



inline jule::Bool _1ba1de211_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));
}



inline jule::Bool _1ba1de750_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));
}



inline jule::Bool _1ba1de9e7_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1ba1e0036_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _1ba13e86a_Spaces;
		auto it = expr.begin();
		_iter_begin_1a584ebc7:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;
				};
			}
			_iter_next_1a584ebc7:;
			++it;
			goto _iter_begin_1a584ebc7;
		}
		_iter_end_1a584ebc7:;
	};
	return false;
}



inline jule::Bool _1ba1e0487_IsLetter(jule::I32 _40713_r) {
	return _1b9bc0709_IsLetter(_40713_r);
}



inline jule::Bool _1ba1e09c6_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));
}



inline jule::Bool _1ba1e0c6d_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));
}



inline jule::Bool _1ba1e1015_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));
}



inline jule::Bool _1ba1e12ac_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1a5854b11:;
			{
				return true;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1a58543c4:;
			{
				return true;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1a585443a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a585435d:;
			{
				return false;
			}
		}
		_match_end_1a5853b10:;
	};
}



inline jule::Bool _1ba1e1554_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1ba1e17eb_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _1ba1d647d_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1a5856272:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;
				};
			}
			_iter_next_1a5856272:;
			++it;
			goto _iter_begin_1a5856272;
		}
		_iter_end_1a5856272:;
	};
	return false;
}



inline jule::Bool _1ba1e1a93_IsAssignOp(jule::Str _47215_kind) {
	if (_1ba1e17eb_IsPostfixOp(_47215_kind)) {
		return true;
	};
	{
		auto &expr = _1ba1d67be_AssignOps;
		auto it = expr.begin();
		_iter_begin_1a5859022:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;
				};
			}
			_iter_next_1a5859022:;
			++it;
			goto _iter_begin_1a5859022;
		}
		_iter_end_1a5859022:;
	};
	return false;
}



inline jule::Ptr<_1ba1e2346_File> _1ba1e3875_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1ba1e2346_File>(_1ba1e2346_File{._field_Path=_6315_path, });
}



inline _1b9db24ab_Log _1ba1e51a1_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_1ba1e2346_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_1b9db28eb_Logf(_11143_fmt,jule::Any(_11156_args)), };
}



inline jule::Bool _1ba1e5536_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1a5869395:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1a5869395:;
			++it;
			_1259_i++;
			goto _iter_begin_1a5869395;
		}
		_iter_end_1a5869395:;
	};
	return true;
}



inline jule::Str _1ba1e5877_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str _13342_lit = jule::Str();
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return _13342_lit;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return _13342_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return _13342_lit;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return _13342_lit;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_1ba1e09c6_IsDecimal(_13913_b))))) {
				goto _iter_end_1a586d410;
			};
		}
	_iter_next_1a586d410:;
	}
	_iter_end_1a586d410:;;
	if ((_13332_i == _1539_first)) {
		_13342_lit = jule::Str();
		return _13342_lit;
	};
	_13342_lit = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return _13342_lit;
}



inline jule::Str _1ba1e5c0c_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _1ba1e5877_floatFmtE(_16715_txt,_16728_i);
}



inline jule::Str _1ba1e604d_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1ba1e09c6_IsDecimal(_17913_b)) {
					_case_begin_1a58717dc:;
					{
						goto _iter_next_1a58700e3;
					}
				}
				else if (_1ba1e7802_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1a5871853:;
					{
						return _1ba1e5c0c_floatFmtP(_17119_txt,_17136_i);
					}
				}
				else {
					_case_begin_1a5871776:;
					{
						goto _iter_end_1a58700e3;
					}
				}
				_match_end_1a5871710:;
			};
		}
	_iter_next_1a58700e3:;
	}
	_iter_end_1a58700e3:;;
	return jule::Str();
}



inline jule::Str _1ba1e638e_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _1ba1e5877_floatFmtE(_19219_txt,_19236_i);
}



inline jule::Str _1ba1e66d0_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _1ba1e5877_floatFmtE(_19718_txt,_19735_i);
}



inline jule::Str _1ba1e6b31_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str _20241_lit = jule::Str();
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		_20241_lit = static_cast<jule::Str>(_20214_txt);
		return _20241_lit;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return _20241_lit;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20241_lit = _1ba1e5877_floatFmtE(_20214_txt,_20231_i);
				return _20241_lit;
			};
			if (((_21213_b != '_') && (!(_1ba1e09c6_IsDecimal(_21213_b))))) {
				goto _iter_end_1a58751e7;
			};
		}
	_iter_next_1a58751e7:;
	}
	_iter_end_1a58751e7:;;
	if ((_20231_i == 1LL)) {
		return _20241_lit;
	};
	_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return _20241_lit;
}



inline jule::Str _1ba1e6dc8_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str _22730_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1a5878a58:;
					{
						_22730_lit = _1ba1e6b31_floatNum(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1a5878ad0:;
					{
						goto _iter_next_1a5877c99;
					}
				}
				else if (_1ba1e74b1_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1a5878b57:;
					{
						_22730_lit = _1ba1e5877_floatFmtE(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((!(_1ba1e09c6_IsDecimal(_23113_b)))) {
					_case_begin_1a5878bce:;
					{
						goto _iter_end_1a5877c99;
					}
				}
				_match_end_1a587897b:;
			};
		}
	_iter_next_1a5877c99:;
	}
	_iter_end_1a5877c99:;;
	if ((_22813_i == 0LL)) {
		return _22730_lit;
	};
	_22730_lit = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return _22730_lit;
}



inline jule::Str _1ba1e7170_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str _25030_lit = jule::Str();
	if ((!(_1ba1e5536_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		_25030_lit = jule::Str();
		return _25030_lit;
	};
	if ((_25015_txt.len() < 2LL)) {
		return _25030_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_1ba1e0c6d_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1a587c41e;
			};
		}
	_iter_next_1a587c41e:;
	}
	_iter_end_1a587c41e:;;
	if ((_25913_i == 2LL)) {
		return _25030_lit;
	};
	_25030_lit = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return _25030_lit;
}



inline jule::Bool _1ba1e74b1_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));
}



inline jule::Bool _1ba1e7802_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));
}



inline jule::Bool _1ba1e7b43_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1ba1e09c6_IsDecimal(_28713_b)) {
					_case_begin_1a5881e18:;
					{
						goto _iter_next_1a587ed8e;
					}
				}
				else if (_1ba1e7802_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1a5881e7e:;
					{
						return true;
					}
				}
				else {
					_case_begin_1a5881da2:;
					{
						goto _iter_end_1a587ed8e;
					}
				}
				_match_end_1a5881d3b:;
			};
		}
	_iter_next_1a587ed8e:;
	}
	_iter_end_1a587ed8e:;;
	return false;
}



inline jule::Bool _1ba1e7e84_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1a5883ca5:;
			{
				goto _case_begin_1a5883568;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1a5883568:;
			{
				goto _case_begin_1a58835ce;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1a58835ce:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a5883502:;
			{
				return true;
			}
		}
		_match_end_1a5883425:;
	};
}



inline jule::Bool _1ba1e82c5_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1a58861b4:;
			{
				goto _case_begin_1a58859cc;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1a58859cc:;
			{
				goto _case_begin_1a5885a43;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1a5885a43:;
			{
				goto _case_begin_1a5885aa9;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1a5885aa9:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a58854d2:;
			{
				return true;
			}
		}
		_match_end_1a5885405:;
	};
}



inline jule::Str _1ba1e8726_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str _32929_lit = jule::Str();
	if ((_32914_txt[0LL] != '0')) {
		_32929_lit = jule::Str();
		return _32929_lit;
	};
	if ((_32914_txt.len() < 2LL)) {
		return _32929_lit;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return _32929_lit;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32929_lit = jule::Str();
					return _32929_lit;
				};
				_32929_lit = _1ba1e6b31_floatNum(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (_1ba1e74b1_isFloatFmtE(_35013_b,_34813_i)) {
				_32929_lit = _1ba1e5877_floatFmtE(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (((_35013_b != '_') && (!(_1ba1e1015_IsOctal(_35013_b))))) {
				goto _iter_end_1a588b20d;
			};
		}
	_iter_next_1a588b20d:;
	}
	_iter_end_1a588b20d:;;
	if ((_34813_i == _33713_octalStart)) {
		return _32929_lit;
	};
	_32929_lit = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return _32929_lit;
}



inline jule::Str _1ba1e89bd_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str _37127_lit = jule::Str();
	if ((_37112_txt.len() < 3LL)) {
		return _37127_lit;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return _37127_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_1ba1e7e84_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1a5891ed3:;
					{
						_37127_lit = _1ba1e66d0_floatFmtDotp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1ba1e82c5_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1a589205a:;
					{
						_37127_lit = _1ba1e638e_floatFmtDotfp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1ba1e7802_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1a58920d2:;
					{
						_37127_lit = _1ba1e5c0c_floatFmtP(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1ba1e7b43_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1a5892159:;
					{
						_37127_lit = _1ba1e604d_floatFmtDotnp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1ba1e12ac_IsHex(_38313_b))))) {
					_case_begin_1a58921d1:;
					{
						goto _iter_end_1a589118b;
					}
				}
				_match_end_1a5891de5:;
			};
		}
	_iter_next_1a589118b:;
	}
	_iter_end_1a589118b:;;
	if ((_38013_i == 2LL)) {
		return _37127_lit;
	};
	_37127_lit = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return _37127_lit;
}



inline jule::Str _1ba1e8d0e_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str _40438_seq = jule::Str();
	if ((_40415_txt.len() < _40428_n)) {
		return _40438_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1ba1e12ac_IsHex(_40415_txt[_41013_i])))) {
				return _40438_seq;
			};
		}
	_iter_next_1a5894db5:;
	}
	_iter_end_1a5894db5:;;
	_40438_seq=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return _40438_seq;
}



inline jule::Str _1ba1e90a6_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _1ba1e8d0e_hexEscape(_42227_txt,10LL);
}



inline jule::Str _1ba1e9370_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _1ba1e8d0e_hexEscape(_42730_txt,6LL);
}



inline jule::Str _1ba1e9529_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _1ba1e8d0e_hexEscape(_43219_txt,4LL);
}



inline jule::Str _1ba1e97b0_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str _43731_seq = jule::Str();
	if ((_43716_txt.len() < 4LL)) {
		return _43731_seq;
	};
	if ((((!(_1ba1e1015_IsOctal(_43716_txt[1LL]))) || (!(_1ba1e1015_IsOctal(_43716_txt[2LL])))) || (!(_1ba1e1015_IsOctal(_43716_txt[3LL]))))) {
		return _43731_seq;
	};
	_43731_seq = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return _43731_seq;
}



inline jule::Slice<_1b9db24ab_Log> _1ba1ee2a9_Lex(jule::Ptr<_1ba1e2346_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;
	};
	_1ba1e9e97_lex _83113_lex = _1ba1e9e97_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1ba1eca38_newLine(&_83113_lex);
	_1ba1eaa36_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;
}



inline void _1a31be99a_lshiftUnsig(_1a31618e8_Const& _58721_c, _1a31618e8_Const& _58732_x) {
	jule::U64 _5889_l = _1a31b89e9_AsU64(&_58721_c);;
	jule::U64 _5899_r = _1a31b89e9_AsU64(&_58732_x);;
	_1a31b9258_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1a31bec97_rshiftUnsig(_1a31618e8_Const& _59321_c, _1a31618e8_Const& _59332_x) {
	jule::U64 _5949_l = _1a31b89e9_AsU64(&_59321_c);;
	jule::U64 _5959_r = _1a31b89e9_AsU64(&_59332_x);;
	_1a31b9258_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1a3dcb62e_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1a3dd3d40_Len64(_6119_x)));
}



inline jule::I64 _1a3dcc685_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1a3dcd323_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _1a3dcd07b_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a3dcbcd3__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1a3dcd323_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a3dcc432__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1a3dd3a98_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _1a3dd3d40_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _1a3dd4a00_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1a3dd6183_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _1a3d02a0b_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _1a3d02ce7_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _1a3d0308e_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _1a3d033ad_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1a3d059ba_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a5a9588a:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_1a3d6b536_IsInf(_4714_f,0LL) || _1a3d64232_IsNaN(_4714_f)) {
			_case_begin_1a5a95912:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_1a5a9579c:;
	};
	std::tie(_4714_f,_4735_exp) = _1a3d6cb42_normalize(_4714_f);
	jule::U64 _5613_x = _1a3d0308e_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_1a3d033ad_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _1a3d632ec_NaN(void) {
	return static_cast<jule::F64>(_1a3d033ad_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _1a3d64232_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _1a3d65bc3_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a3d033ad_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1a3d033ad_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _1a3d6b536_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1a3d6cb42_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1a3d895dc_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1a3d7cd0b_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a3d64232_IsNaN(_1118_x) || _1a3d6b536_IsInf(_1118_x,1LL)) {
			_case_begin_1a5ad9c97:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a5ad9d1e:;
			{
				return static_cast<jule::F64>(_1a3d632ec_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a5ad9d96:;
			{
				return static_cast<jule::F64>(_1a3d65bc3_Inf(-1LL));
			}
		}
		_match_end_1a5ad9bcb:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1a3d059ba_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1a3d895dc_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1a3d033ad_F64FromBits(static_cast<jule::U64>((_1a3d0308e_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1a3ddeeb1_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _1a3d895dc_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1a410d113:;
		}
		_iter_end_1a410d113:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _1a3de0775_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1a3d059ba_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1a3d7cd0b_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1a384e3b0_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1a3863a67_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_1a39e8070_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _1a3863a67_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1a39e1b3a_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a5d081b3:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a3d02a0b_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1a39e1b3a_floatInfo>)((&(_1a383e339_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a5d07987:;
			{
				_8313_bits=static_cast<jule::U64>(_1a3d0308e_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1a39e1b3a_floatInfo>)((&(_1a38447c3_f64info))));
			}
		}
		else {
			_case_begin_1a5d07877:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a5d07b1e:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1a5d0c3c6:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a5d0e1ec:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1a5d0e164:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1a5d0d11e:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1a5d0d042:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a5d07d2d:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a5d08306:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a5d0ba8a:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1a39059e9_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1a39be40e_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1a38e393d_decimalSlice _13213_digs = _1a38e393d_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1a38a977d_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a5d13421:;
				{
					_8258_prec=static_cast<jule::I64>(_1a39e8070_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a5d134cb:;
				{
					_8258_prec=static_cast<jule::I64>(_1a39e8070_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a5d13542:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a5d12750:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a5d15b93:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a5d1517b:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1a5d15676:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a5d15621:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a3c86770_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a3cdd035_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1a38bb6e6_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1a38e30e1_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _1a38bb6e6_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1a39e1b3a_floatInfo& _18327_flt) {
	_1a3e1c384_decimal _18413_d = _1a3e1c384_decimal{};;
	_1a3e1c571_assign(&_18413_d, _1835_mant);
	_1a3e1c6a3_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1a38e393d_decimalSlice _18713_digs = _1a38e393d_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1a38e52ad_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1a38e393d_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a5d1aabb:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a5d1d54c:;
				{
					_18233_prec=static_cast<jule::I64>(_1a39e8070_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a5d1d5b3:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a5d1d481:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a5d1ee00:;
				{
					_1a3e1ca49_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a5d1ee77:;
				{
					_1a3e1ca49_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a5d1eeee:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1a3e1ca49_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1a5d201ca:;
		};
		_18713_digs=_1a38e393d_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1a38e30e1_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _1a38e30e1_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1a38e393d_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a5d238e8:;
			{
				return _1a39043aa_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a5d2395e:;
			{
				return _1a3904a5e_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a5d239c5:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1a39043aa_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1a3904a5e_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1a39e8070_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1a5d237b6:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1a38e52ad_roundShortest(_1a3e1c384_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1a39e1b3a_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1a3e1c384_decimal _28713_upper = _1a3e1c384_decimal{};;
	_1a3e1c571_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1a3e1c6a3_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1a3e1c384_decimal _30613_lower = _1a3e1c384_decimal{};;
	_1a3e1c571_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1a3e1c6a3_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1a5d31e9a;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1a5d37566:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1a5d375dd:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1a5d37665:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a5d3749a:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1a5d3a877:;
					{
						_1a3e1ca49_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a5d3a8ee:;
					{
						_1a3e1c7d5_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a5d3a976:;
					{
						_1a3e1c917_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1a5d3a800:;
			};
		}
	_iter_next_1a5d31e9a:;
	}
	_iter_end_1a5d31e9a:;;
}



inline jule::Slice<jule::U8> _1a39043aa_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1a38e393d_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1a39e2b91_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1a5d41152:;
		}
		_iter_end_1a5d41152:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a5d44908:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a5d43099:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1a5d42ecd:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1a5d41bd0:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _1a3904a5e_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1a38e393d_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1a39e2b91_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1a5d47147:;
		}
		_iter_end_1a5d47147:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1a5d48da2:;
		}
		_iter_end_1a5d48da2:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _1a39059e9_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1a39e1b3a_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _1a3e1e551_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _1a3e1e551_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _1a39be40e_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1a39e1b3a_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a5d4e319:;
	}
	_iter_end_1a5d4e319:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1a5d55320:;
		}
		_iter_end_1a5d55320:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1a5d56a91:;
		}
		_iter_end_1a5d56a91:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1a3a53ce0_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a5d5b766:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a5d58dc3:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1a5d59555:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1a5d59489:;
	};
	return _50613_dst;
}



inline jule::I64 _1a39e2b91_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1a39e8070_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1a3a53ce0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));
}



inline std::tuple<jule::U64,jule::I64> _1a3a73c33_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1a5d6146e:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1a5d6131a:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1a3a53ce0_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1a5d63053:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1a3a53ce0_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1a5d6342c:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1a3a53ce0_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1a5d63493:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a5d62bac:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1a5d62ad0:;
					};
				};
			}
		}
		else {
			_case_begin_1a5d60539:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1a5d604d4:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a5d6818a:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a5d680ad:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a5d67992:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1a5d6780a:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a5d67a4c:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a5d69246:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a5d67c4a:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1a5d6a3ce:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a5d6b952:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1a3a53ce0_lower(_10912_c)) && (_1a3a53ce0_lower(_10912_c) <= 'z'))) {
						_case_begin_1a5d6b820:;
						{
							_11017_d=static_cast<jule::U8>(((_1a3a53ce0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a5d6b886:;
						{
							goto _iter_next_1a5d6a3ce;
						}
					}
					else {
						_case_begin_1a5d6b38b:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1a5d6b325:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1a5d6a3ce:;
			++it;
			goto _iter_begin_1a5d6a3ce;
		}
		_iter_end_1a5d6a3ce:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1a3a962c7_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1a3a73c33_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1a3b27cb5_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1a3a73c33_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1a3840417_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_1a3d033ad_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _1a3dcb62e_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _1a3dd6183_Mul64(_4122_man,_1a38ce6c6_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _1a3dd6183_Mul64(_4122_man,_1a38ce6c6_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_1a3d033ad_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a3be2e6d_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_1a3d02ce7_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _1a3dcb62e_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1a3dd6183_Mul64(_11022_man,_1a38ce6c6_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1a3dd6183_Mul64(_11022_man,_1a38ce6c6_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_1a3d02ce7_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _1a3ad83d5_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1a5d94958:;
	}
	_iter_end_1a5d94958:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a3903321_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a5d991cc:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1a5d99254;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a5d99254:;
			{
				jule::I64 _8317_caseN = _1a3ad83d5_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1a3d65bc3_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a5d992cb:;
			{
				if ((_1a3ad83d5_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1a3d632ec_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1a5d99111:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a3c36269_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1a5da0656:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1a5da06bc:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1a5d9e149:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_1a3a53ce0_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1a5da6c67:;
					{
						goto _iter_next_1a5da611d;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1a5da6cde:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1a5da611d;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1a5da6d66:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1a5da611d;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1a5da611d;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1a3a53ce0_lower(_13313_c))) && (_1a3a53ce0_lower(_13313_c) <= 'f'))) {
					_case_begin_1a5da6ddd:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_1a3a53ce0_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1a5da611d;
					}
				}
				_match_end_1a5da6b8a:;
			};
			goto _iter_end_1a5da611d;
		}
	_iter_next_1a5da611d:;
	}
	_iter_end_1a5da611d:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_1a3a53ce0_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1a5db1a1e;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1a5db1a1e:;
		}
		_iter_end_1a5db1a1e:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a3885ca9_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1a38447c3_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1a5dbc5da:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1a5dbc662:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1a393297c_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1a393297c_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1a5dbc6d9:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1a393297c_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1a5dbc51e:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a38c989c_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1a383e339_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1a5dc28cb:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1a5dc2953:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1a39496ec_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1a39496ec_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1a5dc29ca:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1a39496ec_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1a5dc2810:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1a39293e1_atofHex(jule::Str _55112_s, _1a39e1b3a_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1a5dc7c44:;
	}
	_iter_end_1a5dc7c44:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a5dc9bbe:;
	}
	_iter_end_1a5dc9bbe:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a5dca65e:;
	}
	_iter_end_1a5dca65e:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1a383e339_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1a3d02ce7_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1a3d033ad_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1a3a9c9b5_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1a3903321_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1a3c36269_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1a39293e1_atofHex(_61611_s.slice(0LL,_61629_n),_1a383e339_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1a38c989c_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1a3be2e6d_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _1a3be2e6d_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1a3e1c384_decimal _66213_d = _1a3e1c384_decimal{};;
	if ((!(_1a3c84ad1_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1a3903b90_floatBits(&_66213_d, _1a383e339_f32info);
	_61621_f=static_cast<jule::F32>(_1a3d02ce7_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a3b283d1_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1a3903321_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1a3c36269_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1a39293e1_atofHex(_67411_s.slice(0LL,_67429_n),_1a38447c3_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1a3885ca9_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1a3840417_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _1a3840417_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1a3e1c384_decimal _71913_d = _1a3e1c384_decimal{};;
	if ((!(_1a3c84ad1_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1a3903b90_floatBits(&_71913_d, _1a38447c3_f64info);
	_67421_f=static_cast<jule::F64>(_1a3d033ad_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a3b73d00_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1a3a9c9b5_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1a3b283d1_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1a3bb1a74_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1a3b73d00_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1a3c86770_ryuFtoaFixed32(_1a38e393d_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1a3dd3a98_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1a39928aa_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1a3e1b570_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1a3e1b7d4_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1a3ce4877_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1a3cdd035_ryuFtoaFixed64(_1a38e393d_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1a3dd3d40_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1a39928aa_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1a3e1b6a2_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a3e1b7d4_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1a3ce4877_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1a3ce4877_formatDecimal(_1a38e393d_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1a39e2124_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a5e1935c:;
	}
	_iter_end_1a5e1935c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1a5e1ce54:;
	}
	_iter_end_1a5e1ce54:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a5e23d28:;
	}
	_iter_end_1a5e23d28:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1a38a977d_ryuFtoaShortest(_1a38e393d_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a39e1b3a_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a3dcd323_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1a3e1b30b_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1a3e1b0b9_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_1a3e1b30b_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1a39928aa_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1a383e339_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1a3e1b570_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1a3e1b570_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1a3e1b570_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1a3e1b6a2_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1a3e1b6a2_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1a3e1b6a2_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1a3e1b7d4_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1a3e1b7d4_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1a3e1b7d4_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1a3e1b30b_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1a39928aa_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _1a3a1ea58_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a3e1b0b9_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a39e1b3a_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LL * _39518_mant)),static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LL * _39518_mant)),static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1a3e1b30b_ryuDigits(_1a38e393d_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1a3e1b916_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1a3e1b916_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1a3e1b916_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_1a3e1b43d_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1a3e1b43d_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1a5e44772:;
		}
		_iter_end_1a5e44772:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1a3e1b43d_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1a5e47324:;
	}
	_iter_end_1a5e47324:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1a5e44497:;
	}
	_iter_end_1a5e44497:;;
}



inline void _1a3e1b43d_ryuDigits32(_1a38e393d_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1a5e4a778;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1a5e4a778:;
	}
	_iter_end_1a5e4a778:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1a5e524b6:;
	}
	_iter_end_1a5e524b6:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a3e1b570_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1a38ce6c6_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1a3dd6183_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_1a3a1ea58_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a3e1b6a2_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1a38ce6c6_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a3a1ea58_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1a3dd6183_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1a3dd6183_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1a3dd4a00_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _1a3e1b7d4_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1a5e626a2:;
	}
	_iter_end_1a5e626a2:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1a3e1b916_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1a3e1cde0_trim(_1a3e1c384_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1a5e66772:;
	}
	_iter_end_1a5e66772:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1a3e1d022_rightShift(_1a3e1c384_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1a5e6a226:;
				}
				_iter_end_1a5e6a226:;;
				goto _iter_end_1a5e68a4e;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1a5e68a4e:;
	}
	_iter_end_1a5e68a4e:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1a5e69951:;
	}
	_iter_end_1a5e69951:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1a5e6dd51:;
	}
	_iter_end_1a5e6dd51:;;
	_46320_a._field_nd=_46513_w;
	_1a3e1cde0_trim(_46320_a);
}



inline jule::Bool _1a3e1d154_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1a5e72607:;
	}
	_iter_end_1a5e72607:;;
	return false;
}



inline void _1a3e1d286_leftShift(_1a3e1c384_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1a39e3b5e_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1a3e1d154_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1a39e3b5e_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1a5e76122:;
	}
	_iter_end_1a5e76122:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1a5e78d39:;
	}
	_iter_end_1a5e78d39:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1a3e1cde0_trim(_53119_a);
}



inline jule::Bool _1a3e1d3b8_shouldRoundUp(_1a3e1c384_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _1a3e1de46_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1a3e1e2dc_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1a3e1e551_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _1a3e1e078_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1a3e1e2dc_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1a3e1e551_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1a3e1e1aa_Itoa(jule::I64 _809_i) {
	return _1a3e1e078_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _1a3e1e2dc_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1a3e1e41e_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a3e1e551_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1a5eb98c4:;
		}
		_iter_end_1a5eb98c4:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1a3e1e41e_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1a3dcc685_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1a5eb91cb:;
		}
		_iter_end_1a5eb91cb:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1a5ec64e6:;
		}
		_iter_end_1a5ec64e6:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _1a32e367e_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a5eddbd4:;
			{
				return _1a32c1c67_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a5ee2347:;
			{
				return _1a331633e_SysUint;
			}
		}
		else {
			_case_begin_1a5ee216b:;
			{
				return _4515_kind;
			}
		}
		_match_end_1a5ede454:;
	};
}



inline jule::I64 _1a32e9db1_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a5ee3535:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a5ee359b:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a5ee3612:;
			{
				return 32LLU;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a5ee38ba:;
			{
				return 64LLU;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1a5ee3931:;
			{
				return _1a32c1739_BitSize;
			}
		}
		else {
			_case_begin_1a5ee3458:;
			{
				return -1LL;
			}
		}
		_match_end_1a5ee316c:;
	};
}



inline jule::Str _1a331e149_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a5ee525c:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a5ee52c3:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a5ee5339:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a5ee5a32:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1a5ee5191:;
			{
				return jule::Str();
			}
		}
		_match_end_1a5ee5724:;
	};
}



inline jule::Str _1a333105c_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a5ee6c42:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a5ee6ca8:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a5ee6d1e:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a5ee70d8:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1a5ee6a99:;
			{
				return jule::Str();
			}
		}
		_match_end_1a5ee6956:;
	};
}



inline jule::Str _1a335a4e8_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a5ee82c6:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a5ee833c:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1a5ee8150:;
			{
				return jule::Str();
			}
		}
		_match_end_1a5ee800c:;
	};
}



inline jule::Bool _1a3652801_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1a3bb1a74_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1a36724e1_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a5eedd7b:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_1a5eecde1:;
			{
				return 64LLU;
			}
		}
		_match_end_1a5eecd36:;
	};
}



inline jule::I64 _1a3728a1a_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1a5eeed49:;
			{
				return 8LLU;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1a5eeedb0:;
			{
				return 16LLU;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1a5eeee26:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_1a5eee1de:;
			{
				return 64LLU;
			}
		}
		_match_end_1a5eee123:;
	};
}



inline jule::I64 _1a37417ad_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1a6001d18:;
			{
				return 8LLU;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1a6001d7e:;
			{
				return 16LLU;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1a6001de5:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_1a6001235:;
			{
				return 64LLU;
			}
		}
		_match_end_1a6000d17:;
	};
}



inline void _1a3741ed9_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1b9dead52_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a600207c:;
				{
					_1a32c1739_BitSize=64LLU;
					_1a32c1c67_SysInt=jule::Str("i64", 3);
					_1a331633e_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a60020e3:;
				{
					_1a32c1739_BitSize=32LLU;
					_1a32c1c67_SysInt=jule::Str("i32", 3);
					_1a331633e_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1a600304a:;
		};
	};
}



inline void _1a374e59b_init(void) {
	_1a3741ed9_UpdateTarget();
}



inline jule::F64 _1a37c8b75_Min(jule::Str _6112_k) {
	_6112_k=_1a32e367e_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a6005aec:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a6005514:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a600557a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a60055e1:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a6005657:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a60057bc:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1a6003259:;
			{
				return 0LL;
			}
		}
		_match_end_1a6003468:;
	};
}



inline jule::F64 _1a37d19a2_Max(jule::Str _8312_k) {
	_8312_k=_1a32e367e_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a60072d5:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a600734b:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a60073b2:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a6007428:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a600769d:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a6007714:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a600777a:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a60077e1:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a6007857:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a60078bd:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1a6006cc9:;
			{
				return 0LL;
			}
		}
		_match_end_1a6005c2e:;
	};
}



inline jule::Bool _1a37dd5d5_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _1a37e9d1c_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _1a3820282_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _1a382684e_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _1a3271bb2_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _1a32c0914_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _1a3347da9_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _1a3348926_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _1a3693ec4_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _1a3695107_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _1a36a00bd_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a6011014:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a6011278:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a60112de:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a6011355:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a60113bb:;
			{
				return _1a37dd5d5_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a6011432:;
			{
				return _1a37e9d1c_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a6011498:;
			{
				return _1a3820282_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a601150e:;
			{
				return _1a382684e_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a6011597:;
			{
				return _1a3271bb2_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a601160d:;
			{
				return _1a32c0914_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a6011674:;
			{
				return _1a3347da9_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a60116eb:;
			{
				return _1a3348926_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a6011773:;
			{
				return _1a3693ec4_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a60117ea:;
			{
				return _1a3695107_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a6011872:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a60118e9:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1a6010d16:;
			{
				return false;
			}
		}
		_match_end_1a6010354:;
	};
}



inline jule::Bool _1a36a5227_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _1a38206e4_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _1a32c29b0_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _1a365215d_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _1a3e20013_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _1a3e20145_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _1a3e20277_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _1a3e203a9_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _1a3e204db_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a60199e0:;
			{
				return _1a3e2092b_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a6019a56:;
			{
				return _1a3e20a5d_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a6019c87:;
			{
				return _1a3e20a5d_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a6019ced:;
			{
				return _1a36a5227_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a6019d64:;
			{
				return _1a38206e4_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a6019dca:;
			{
				return _1a32c29b0_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a6019e41:;
			{
				return _1a365215d_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a6019ea7:;
			{
				return _1a3e20013_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a601a02e:;
			{
				return _1a3e20145_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a601a0a6:;
			{
				return _1a3e20277_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a601a12d:;
			{
				return _1a3e203a9_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a601a1a5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a60197d1:;
			{
				return false;
			}
		}
		_match_end_1a6019726:;
	};
}



inline jule::Bool _1a3e2092b_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _1a3e20a5d_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1a3e20b90_IsInt(jule::Str _4610_k) {
	return (_1a3e2092b_IsSigInt(_4610_k) || _1a3e20a5d_IsUnsigInt(_4610_k));
}



inline jule::Bool _1a3e20cc2_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _1a3e20e04_IsNum(jule::Str _5610_k) {
	return (_1a3e20b90_IsInt(_5610_k) || _1a3e20cc2_IsFloat(_5610_k));
}



inline jule::Bool _1a3e21036_IsSigNum(jule::Str _6113_k) {
	return (_1a3e2092b_IsSigInt(_6113_k) || _1a3e20cc2_IsFloat(_6113_k));
}



inline jule::Bool _1a3e73495_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _1a3e735c7_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1a3e8b425_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1b9d0b2a1_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _1a3e8aab7_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _1a3e8ad70_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1a3e8b766_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1b9d0b2a1_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1b9d0c615_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1a6028614:;
	}
	_iter_end_1a6028614:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a3e8b117_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a602cbe0:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a602cc56:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a602ccbc:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a602cd44:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a602cdbb:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a602ce43:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a602ceba:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a602d042:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a602d0b9:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a602d141:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1a602cabe:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _1a3e8b425_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _1a3e8b117_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1a6033a81:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1a3a962c7_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a6033e6b:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1a3a962c7_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a6032431:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a3a962c7_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1a603295e:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a3a962c7_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1a603284e:;
	};
}



inline jule::Slice<jule::U8> _1a3e8b766_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1a3e8b425_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _1a4086d17_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r;;
			jule::I64 _1317_size;;
			std::tie(_1314_r,_1317_size) = _1b9d0b2a1_DecodeRune(_1022_bytes.slice(_1113_i));
			if ((_1314_r == '{')) {
				return _1113_i;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1a6071e98:;
	}
	_iter_end_1a6071e98:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a408cb0e_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r;;
			jule::I64 _3117_size;;
			std::tie(_3114_r,_3117_size) = _1b9d0b2a1_DecodeRune(_2737_bytes.slice(_2724_i));
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1a6074c37:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a6074c9d:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);
						};
					}
				}
				_match_end_1a6074891:;
			};
		}
	_iter_next_1a6073dac:;
	}
	_iter_end_1a6073dac:;;
	return nullptr;
}



inline void _1a408cdb7_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1a60765eb:;
			{
				_4722_buf+=_1a384e3b0_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.operator jule::F32())),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a6076c06:;
			{
				_4722_buf+=_1a384e3b0_FmtFloat(static_cast<jule::F64>(_4733_arg.operator jule::F64()),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1a6076cc2:;
			{
				_4722_buf+=_1a3e1e078_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1a6076a4c:;
			{
				_4722_buf+=_1a3e1e078_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a6075166:;
			{
				_4722_buf+=_1a3e1e078_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a6076772:;
			{
				_4722_buf+=_1a3e1e078_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a60767d8:;
			{
				_4722_buf+=_1a3e1de46_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1a6076d49:;
			{
				_4722_buf+=_1a3e1de46_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1a6076db0:;
			{
				_4722_buf+=_1a3e1de46_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a6076e26:;
			{
				_4722_buf+=_1a3e1de46_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a6076e8c:;
			{
				_4722_buf+=_4733_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a6077003:;
			{
				if (_4733_arg.operator jule::Bool()) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1a6076585:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_1a6075c9e:;
	};
}



inline void _1a408d291_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_1a408cdb7_FmtByDefault(_8627_buf,_879_arg);
}



inline void _1a408d68c_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_1a408d291_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if (((_9418_fmt.len() == 4LL) && (_9418_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_1b9d2b37b_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _1a408d99a_Format(jule::Str& _10912_fmt, jule::Slice<jule::Any> _10922_args) {
	if ((_10922_args.len() == 0LL)) {
		return _10912_fmt;
	};
	jule::Slice<jule::U8> _11313_fmtBytes = _1b9d2ac2c_Stobs(_10912_fmt);;
	jule::Str _11413_buf = jule::Str::alloc(0LL, _10912_fmt.len());;
	jule::I64 _11513_j = 0LL;;
	jule::I64 _11613_last = 0LL;;
	jule::I64 _11713_i = _1a4086d17_findFormatPrefix(_11313_fmtBytes,_11613_last);;
	for (; (_11713_i != -1LL); _11713_i=static_cast<jule::I64>(_1a4086d17_findFormatPrefix(_11313_fmtBytes,_11713_i))) {
		{
			_1b9d2b37b_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last,_11713_i));
			jule::Slice<jule::U8> _12017_format = _1a408cb0e_getFormatRange(_11713_i,_11313_fmtBytes);;
			if ((_12017_format == nullptr)) {
				goto _iter_next_1a6082937;
			};
			_1a408d68c_applyFmt(_12017_format,_11413_buf,_11513_j,_10922_args);
			if ((_11513_j >= _10922_args.len())) {
				_1b9d2b37b_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11713_i));
				_11613_last=static_cast<jule::I64>(_11313_fmtBytes.len());
				goto _iter_end_1a6082937;
			};
			_11613_last=_11713_i;
		}
	_iter_next_1a6082937:;
	}
	_iter_end_1a6082937:;;
	if ((_11613_last < _11313_fmtBytes.len())) {
		_1b9d2b37b_PushToStrBuffer(_11413_buf,_11313_fmtBytes.slice(_11613_last));
	};
	return _11413_buf;
}



inline jule::Str _1a408e094_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1a408d99a_Format(_3011_fmt,jule::Any(_3021_args));
}



inline jule::Bool _1a31cc986_parameterUsesGenerics(jule::Ptr<_1a31c6386_Param>& _37427_p, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>& _37439_generics) {
	if (_1a31c69b3_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _1a3eea42e_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_1a3ed2d62_TypeSymbol> _1a31cee61_buildType(jule::Ptr<_1a3109462_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_1a3ea3eed_Value> _1a31d024c_buildExpr(jule::Ptr<_1a310d983_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a31d04e4_buildTypeAlias(jule::Ptr<_1a3125923_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a3ecd016_TypeAlias>(_1a3ecd016_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1a31cee61_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_1a30dc038_Field> _1a31d0813_buildField(jule::Ptr<_1a312900e_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a30dc038_Field>(_1a30dc038_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1a31cee61_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_1a30dc038_Field>> _1a31d0aaa_buildFields(jule::Slice<jule::Ptr<_1a312900e_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1a30dc038_Field>> _13513_fields = jule::Slice<jule::Ptr<_1a30dc038_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1a62eaee1:;
		if (it != expr.end()) {
			jule::Ptr<_1a312900e_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1a31d0813_buildField(_13617_decl));;
			}
			_iter_next_1a62eaee1:;
			++it;
			goto _iter_begin_1a62eaee1;
		}
		_iter_end_1a62eaee1:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a31d0d52_buildStruct(jule::Ptr<_1a312986c_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a30e9b8e_Struct>(_1a30e9b8e_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1a31d0aaa_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_1a31c6386_Param> _1a31d10e9_buildParam(jule::Ptr<_1a3119e56_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1a31cee61_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_1a31c6386_Param>> _1a31d146d_buildParams(jule::Slice<jule::Ptr<_1a3119e56_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1a31c6386_Param>> _16613_params = jule::Slice<jule::Ptr<_1a31c6386_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1a62ede39:;
		if (it != expr.end()) {
			jule::Ptr<_1a3119e56_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1a31d10e9_buildParam(_16717_decl));;
			}
			_iter_next_1a62ede39:;
			++it;
			goto _iter_begin_1a62ede39;
		}
		_iter_end_1a62ede39:;
	};
	return _16613_params;
}



inline jule::Ptr<_1a31c5b6b_RetType> _1a31d1715_buildRetType(jule::Ptr<_1a310c575_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1a31c5b6b_RetType>(_1a31c5b6b_RetType{._field_Kind=_1a31cee61_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a31d19ac_buildFn(jule::Ptr<_1a31210d3_FnDecl> _18316_decl) {
	return jule::new_ptr<_1a31c7bc3_Fn>(_1a31c7bc3_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1a31d1715_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1a31d146d_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _1a31d1c54_buildMethods(jule::Slice<jule::Ptr<_1a31210d3_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1a31c7bc3_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1a6302d83:;
		if (it != expr.end()) {
			jule::Ptr<_1a31210d3_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1a31d19ac_buildFn(_20317_decl));;
			}
			_iter_next_1a6302d83:;
			++it;
			goto _iter_begin_1a6302d83;
		}
		_iter_end_1a6302d83:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1a31d9a81_Trait> _1a31d1eeb_buildTrait(jule::Ptr<_1a3129e77_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1a31d9a81_Trait>(_1a31d9a81_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1a31d1c54_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_1a31db1d1_EnumItem> _1a31d2293_buildEnumItem(jule::Ptr<_1a3127282_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1a31db1d1_EnumItem>(_1a31db1d1_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1a31d024c_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>> _1a31d253a_buildEnumItems(jule::Slice<jule::Ptr<_1a3127282_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1a31db1d1_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1a630557d:;
		if (it != expr.end()) {
			jule::Ptr<_1a3127282_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1a31d2293_buildEnumItem(_22817_decl));;
			}
			_iter_next_1a630557d:;
			++it;
			goto _iter_begin_1a630557d;
		}
		_iter_end_1a630557d:;
	};
	return _22713_items;
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a31d27d2_buildEnum(jule::Ptr<_1a3127caa_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1a31dbbc6_Enum>(_1a31dbbc6_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1a31cee61_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1a31d253a_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_1a31dcc0a_TypeEnumItem> _1a31d2c33_buildTypeEnumItem(jule::Ptr<_1a31287b1_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1a31dcc0a_TypeEnumItem>(_1a31dcc0a_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1a31cee61_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>> _1a31d2eca_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a31287b1_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1a31dcc0a_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1a6307eed:;
		if (it != expr.end()) {
			jule::Ptr<_1a31287b1_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1a31d2c33_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1a6307eed:;
			++it;
			goto _iter_begin_1a6307eed;
		}
		_iter_end_1a6307eed:;
	};
	return _25313_items;
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a31d3272_buildTypeEnum(jule::Ptr<_1a31289ae_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1a31dd2c1_TypeEnum>(_1a31dd2c1_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1a31d2eca_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_1a3e59e4e_Var> _1a31d3519_buildVar(jule::Ptr<_1a31220b2_VarDecl> _26917_decl) {
	return jule::new_ptr<_1a3e59e4e_Var>(_1a3e59e4e_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1a31cee61_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1a31d024c_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1a31cda31_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _1a31d37b1_buildVars(jule::Slice<jule::Ptr<_1a31220b2_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1a3e59e4e_Var>> _28713_vars = jule::Slice<jule::Ptr<_1a3e59e4e_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1a630b441:;
		if (it != expr.end()) {
			jule::Ptr<_1a31220b2_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1a31d3519_buildVar(_28817_decl));;
			}
			_iter_next_1a630b441:;
			++it;
			goto _iter_begin_1a630b441;
		}
		_iter_end_1a630b441:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1a326e41d_Impl> _1a31d3a58_buildImpl(jule::Ptr<_1a312a582_Impl> _29418_decl) {
	return jule::new_ptr<_1a326e41d_Impl>(_1a326e41d_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1a31d1c54_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1a31d37b1_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _1a324b5c6_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1a3ecdc09_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1a63712ec:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _14513_prim = _1a3ed0d1b_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _1a3e21036_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1a6371363:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _15113_prim = _1a3ed0d1b_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _1a3e20a5d_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1a63713c9:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _15713_prim = _1a3ed0d1b_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _1a3e20cc2_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1a637151c:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _16313_prim = _1a3ed0d1b_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _1a3e20e04_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1a6371594:;
			{
				return _1a3ed0106_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1a637161b:;
			{
				return (!(_1a3ed0106_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1a6371693:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1a637171a:;
			{
				jule::Ptr<_1a3ed36d1_Prim> _17513_prim = _1a3ed0d1b_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1a3e20e04_IsNum(_17513_prim.get()._field_Kind) || _1a3ed6915_IsStr(_17513_prim.ptr()));
				};
				if ((_1a3ed12e4_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1a312ad46_StructIns> _18213_s = _1a3ed226d_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_1a31dbbc6_Enum> _18913_enm = _1a3ed1558_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1a3e20e04_IsNum(_1a3ece105_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1a637061a:;
			{
				return false;
			}
		}
		_match_end_1a6370560:;
	};
}



inline jule::Bool _1a324d1bb_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1a32067b2_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1a637a328:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1a637a328:;
			++it;
			goto _iter_begin_1a637a328;
		}
		_iter_end_1a637a328:;
	};
	return false;
}



inline jule::Ptr<_1a3e2427b_scopeChecker> _1a325748e_newScopeCheckerBase(jule::Ptr<_1a3e3c1ea_Sema>& _5929_s, jule::Ptr<_1a31ca874_FnIns> _5943_owner) {
	return jule::new_ptr<_1a3e2427b_scopeChecker>(_1a3e2427b_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_1a3e9d14b_SymbolTable>(), });
}



inline jule::Ptr<_1a3e2427b_scopeChecker> _1a325801c_newScopeChecker(jule::Ptr<_1a3e3c1ea_Sema>& _6725_s, jule::Ptr<_1a31ca874_FnIns> _6739_owner) {
	jule::Ptr<_1a3e2427b_scopeChecker> _6813_base = _1a325748e_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e23da2_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e2408e_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1a3e23da2_scopeLabel> _1a3258dca_findLabelParent(jule::Str _7720_ident, jule::Ptr<_1a3e2427b_scopeChecker> _7736_scope) {
	jule::Ptr<_1a3e23da2_scopeLabel> _7813_label = _1a3e259ec_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_1a3e259ec_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_1a6391c57:;
	}
	_iter_end_1a6391c57:;;
	return _7813_label;
}



inline jule::Bool _1a324d023_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_1a3e21344_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
			_case_begin_1a6393be3:;
			{
				jule::Ptr<_1a31c0c76_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_1a31c0c76_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a6393c6a:;
			{
				jule::Ptr<_1a3ea2e75_Data> _9913_d = _9121_Model.operator jule::Ptr<_1a3ea2e75_Data>();;
				return _1a324d023_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_1a639386e:;
	};
	return false;
}



inline jule::Bool _1a3259d98_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_1a3e21344_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e21344_Scope>>()) {
			_case_begin_1a6395ec0:;
			{
				return (_10521_stmt.operator jule::Ptr<_1a3e21344_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21ae7_InfIter>>()) {
			_case_begin_1a6396036:;
			{
				return (_10521_stmt.operator jule::Ptr<_1a3e21ae7_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e22103_RangeIter>>()) {
			_case_begin_1a639609c:;
			{
				jule::Ptr<_1a3e22103_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_1a3e22103_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _1a324d023_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e21cd4_WhileIter>>()) {
			_case_begin_1a639618a:;
			{
				jule::Ptr<_1a3e21cd4_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_1a3e21cd4_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _1a324d023_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _1a324d023_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e23159_Match>>()) {
			_case_begin_1a6396212:;
			{
				jule::Ptr<_1a3e23159_Match> _12013_m = _10521_stmt.operator jule::Ptr<_1a3e23159_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1a6399e6e:;
					if (it != expr.end()) {
						jule::Ptr<_1a3e236a9_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1a639ad1b:;
								if (it != expr.end()) {
									jule::Ptr<_1a3ea2e75_Data> &_12520_expr = *it;
									{
										if (_1a324d023_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_1a639ad1b:;
									++it;
									goto _iter_begin_1a639ad1b;
								}
								_iter_end_1a639ad1b:;
							};
						}
						_iter_next_1a6399e6e:;
						++it;
						goto _iter_begin_1a6399e6e;
					}
					_iter_end_1a6399e6e:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3e2190a_Conditional>>()) {
			_case_begin_1a6396289:;
			{
				jule::Ptr<_1a3e2190a_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_1a3e2190a_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1a639c669:;
					if (it != expr.end()) {
						jule::Ptr<_1a3e21531_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _1a324d023_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_1a639c669:;
						++it;
						goto _iter_begin_1a639c669;
					}
					_iter_end_1a639c669:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a6396311:;
			{
				jule::Ptr<_1a3ea2e75_Data> _14113_d = _10521_stmt.operator jule::Ptr<_1a3ea2e75_Data>();;
				return _1a324d023_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_1a63941aa:;
			{
				return false;
			}
		}
		_match_end_1a6395909:;
	};
}



inline jule::I64 _1a325ac56_countMatchType(jule::Ptr<_1a3e23159_Match>& _14820_m, jule::Ptr<_1a3ecdc09_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1a3ece105_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1a639ee63:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e236a9_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1a639ee63;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1a63a121c:;
					if (it != expr.end()) {
						jule::Ptr<_1a3ea2e75_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1a639ee63;
							};
							if ((_1509_kind == _1a3ece105_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_1a3ecdc09_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1a63a121c:;
						++it;
						goto _iter_begin_1a63a121c;
					}
					_iter_end_1a63a121c:;
				};
			}
			_iter_next_1a639ee63:;
			++it;
			goto _iter_begin_1a639ee63;
		}
		_iter_end_1a639ee63:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _1a3268a11_getDatasFromTupleData(jule::Ptr<_1a3ea2e75_Data>& _17231_d) {
	if ((_1a3ed29aa_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a31c299d_TupleExprModel>>()) {
				_case_begin_1a63a53ec:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_1a31c299d_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1a63a2c68:;
				{
					jule::Ptr<_1a3ed8450_Tuple> _17821_t = _1a3ed29aa_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1a3ea2e75_Data>> _17921_r = jule::Slice<jule::Ptr<_1a3ea2e75_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1a63a4011:;
						if (it != expr.end()) {
							jule::Ptr<_1a3ecdc09_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1a63a4011:;
							++it;
							goto _iter_begin_1a63a4011;
						}
						_iter_end_1a63a4011:;
					};
					return _17921_r;
				}
			}
			_match_end_1a63a2e44:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a3ea2e75_Data>>::make({_17231_d});
	};
}



inline jule::Bool _1a326c493_checkMut(jule::Ptr<_1a3e3c1ea_Sema>& _20718_s, jule::Ptr<_1a3ea2e75_Data>& _20729_left, jule::Ptr<_1a3ea2e75_Data> _20746_right, jule::Ptr<_1ba1dbeab_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_1a63a8a60:;
			{
				_1a3e3edac_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _1a3ed0106_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_1a63a8b70:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_1a3ed226d_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_1a3e3edac_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_1a63a8433:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_1a63a8356:;
	};
}



inline jule::Bool _1a326d021_checkAssign(jule::Ptr<_1a3e3c1ea_Sema>& _22621_s, jule::Ptr<_1a3ea2e75_Data>& _22636_left, jule::Ptr<_1a3ea2e75_Data> _22653_right, jule::Ptr<_1ba1dbeab_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_1a31ca874_FnIns> _2279_f = _1a3ed2009_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_1a3e3edac_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_1a3ea3838_IsConst(_22636_left.ptr())) {
			_case_begin_1a63addd9:;
			{
				_1a3e3edac_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1a3e401cb_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_1a63adeb6:;
			{
				_1a3e3edac_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_1a326c493_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_1a63ae03d:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_1a63ad78a:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_1a63ad647:;
	};
}



inline jule::Bool _1a326868c_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_1a31181da_AssignSt>>()) {
			_case_begin_1a63b0b11:;
			{
				return (!(_24831_n.operator jule::Ptr<_1a31181da_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a310d983_Expr>>()) {
			_case_begin_1a63b0b77:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a63b0a67:;
			{
				return false;
			}
		}
		_match_end_1a63b0a12:;
	};
}



inline jule::Bool _1a321a496_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e22a93_Postfix>>() || _match_expr.type_is<jule::Ptr<_1a3e22c80_Assign>>() || _match_expr.type_is<jule::Ptr<_1a3e22e6c_MultiAssign>>()) {
			_case_begin_1a63b154b:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a63b15b2:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_1a3ea2e75_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a31c0c76_FnCallExprModel>>()) {
						_case_begin_1a63b31b8:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a63b3152:;
						{
							return false;
						}
					}
					_match_end_1a63b2e10:;
				};
			}
		}
		else {
			_case_begin_1a63b14a2:;
			{
				return false;
			}
		}
		_match_end_1a63b1cbb:;
	};
}



inline jule::Bool _1a3256c52_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a63b3ad1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a63b2805:;
			{
				return false;
			}
		}
		_match_end_1a63b27a0:;
	};
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3e317b6_findVarInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1a652b6d8:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a3e59e4e_Var> _4817_v = _1a3e9dd2d_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1a652b6d8:;
			++it;
			goto _iter_begin_1a652b6d8;
		}
		_iter_end_1a652b6d8:;
	};
	return nullptr;
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a3e31be5_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1a652cd16:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a3ecd016_TypeAlias> _6017_ta = _1a3e9e1d5_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1a652cd16:;
			++it;
			goto _iter_begin_1a652cd16;
		}
		_iter_end_1a652cd16:;
	};
	return nullptr;
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3e320d0_findStructInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1a652e433:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1a30e9b8e_Struct> _7217_s = _1a3e9e58c_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1a652e433:;
			++it;
			goto _iter_begin_1a652e433;
		}
		_iter_end_1a652e433:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31c7bc3_Fn> _1a3e32542_findFnInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1a6530a50:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a31c7bc3_Fn> _8417_f = _1a3e9e944_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1a6530a50:;
			++it;
			goto _iter_begin_1a6530a50;
		}
		_iter_end_1a6530a50:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31d9a81_Trait> _1a3e32850_findTraitInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1a6531149:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a31d9a81_Trait> _9617_t = _1a3e9ec52_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1a6531149:;
			++it;
			goto _iter_begin_1a6531149;
		}
		_iter_end_1a6531149:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31dbbc6_Enum> _1a3e32b91_findEnumInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1a6532579:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a31dbbc6_Enum> _10817_e = _1a3ea0060_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1a6532579:;
			++it;
			goto _iter_begin_1a6532579;
		}
		_iter_end_1a6532579:;
	};
	return nullptr;
}



inline jule::Ptr<_1a31dd2c1_TypeEnum> _1a3e32ed2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1a6533998:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1a31dd2c1_TypeEnum> _12017_e = _1a3ea036d_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1a6533998:;
			++it;
			goto _iter_begin_1a6533998;
		}
		_iter_end_1a6533998:;
	};
	return nullptr;
}



inline jule::Any _1a3e334cc_defByIdentPackage(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_1a6535e40:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1a3ea11e8_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return jule::Any(_13117_def);
				};
			}
			_iter_next_1a6535e40:;
			++it;
			goto _iter_begin_1a6535e40;
		}
		_iter_end_1a6535e40:;
	};
	return nullptr;
}



inline jule::Bool _1a3e395d2_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _1b9d2b8ed_HasPrefix(_36117_f,_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1b9deb1d7_PathStdlib,_36125_p})));
}



inline jule::Bool _1a3e3a33b_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a6547d97:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a6547e0d:;
			{
				jule::Ptr<_1a31c200d_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>();;
				return _1a3e3a33b_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>>()) {
			_case_begin_1a6547e74:;
			{
				jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_1a31c1ae0_TraitSubIdentExprModel>();;
				return _1a3e3a33b_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c02d6_UnaryExprModel>>()) {
			_case_begin_1a654810b:;
			{
				jule::Ptr<_1a31c02d6_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_1a31c02d6_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1a3ed12e4_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1a3ed1080_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _1a3e3a33b_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1a654766b:;
			{
				return false;
			}
		}
		_match_end_1a6547935:;
	};
}



inline _1b9db24ab_Log _1a3e3a7d1_compilerErr(jule::Ptr<_1ba1dbeab_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1b9db24ab_Log _4213_log = _1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_1b9db28eb_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_1ba1e3523_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _1a3e3ab22_impIsLookupable(jule::Ptr<_1a3e3409e_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1a3e36975_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _1a3e3ae1e_appendRetVars(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _6723_dest, jule::Ptr<_1a31ca874_FnIns>& _6742_f) {
	if ((_1a31c8135_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3ecdc09_TypeKind>> _7213_types = _1a31cb996_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1a655193e:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _7317_ident = *it;
			{
				if ((_1ba1de750_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1ba1de9e7_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1a655193e;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1a3e59e4e_Var>(_1a3e59e4e_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Data=jule::new_ptr<_1a3ea2e75_Data>()}), }));;
			}
			_iter_next_1a655193e:;
			++it;
			_7310_i++;
			goto _iter_begin_1a655193e;
		}
		_iter_end_1a655193e:;
	};
}



inline void _1a3e3b1c7_appendParamVars(jule::Slice<jule::Ptr<_1a3e59e4e_Var>>& _9325_dest, jule::Ptr<_1a31ca874_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1a6553567:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c99a5_ParamIns> _9817_p = *it;
			{
				if ((_1ba1de750_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _1ba1de9e7_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1a6553567;
				};
				jule::Ptr<_1a3e59e4e_Var> _10317_v = jule::new_ptr<_1a3e59e4e_Var>(_1a3e59e4e_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Data=jule::new_ptr<_1a3ea2e75_Data>()}), });;
				{
					
					if (_1a31c69b3_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1a65577be:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_1a31c6c27_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_1a31c6c27_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed6e65_Sptr>(_1a3ed6e65_Sptr{._field_Elem=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1a6557a11:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed78c2_Slc>(_1a3ed78c2_Slc{._field_Elem=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1a655514b:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1a655722a:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1a6553567:;
			++it;
			goto _iter_begin_1a6553567;
		}
		_iter_end_1a6553567:;
	};
}



inline void _1a3e3b4a2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a3ecd016_TypeAlias>>& _15334_dest, jule::Ptr<_1a31ca874_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1a655d1dc:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_1a3ecc4cc_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_1a3116a46_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1a3ecd016_TypeAlias>(_1a3ecd016_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1a655d1dc:;
			++it;
			_16310_i++;
			goto _iter_begin_1a655d1dc;
		}
		_iter_end_1a655d1dc:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1a312ad46_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1a655e7b5:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_1a3ecc4cc_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_1a3116a46_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1a3ecd016_TypeAlias>(_1a3ecd016_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1a655e7b5:;
				++it;
				_17714_i++;
				goto _iter_begin_1a655e7b5;
			}
			_iter_end_1a655e7b5:;
		};
	};
}



inline jule::Ptr<_1a3e9d14b_SymbolTable> _1a3e3b804_findFile(jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>& _19118_files, jule::Ptr<_1ba1e2346_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1a65610d0:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1a65610d0:;
			++it;
			goto _iter_begin_1a65610d0;
		}
		_iter_end_1a65610d0:;
	};
	return nullptr;
}



inline void _1a3e3bc66_pushSugggestion(_1b9db24ab_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_1b9db28eb_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _1a3e7be3d_traitHasReferenceReceiver(jule::Ptr<_1a31d9a81_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1a67a66aa:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1a67a66aa;
				};
				jule::Ptr<_1a31c6386_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1a31c6c27_IsRef(_3313_p.ptr()) && _1a31c69b3_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1a67a66aa:;
			++it;
			goto _iter_begin_1a67a66aa;
		}
		_iter_end_1a67a66aa:;
	};
	return false;
}



inline jule::Bool _1a3e738b3_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1a3ea2e75_Data>& _4132_d) {
	jule::Str _429_value = _1a384e3b0_FmtFloat(static_cast<jule::F64>(_1a31b8c5d_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1a3652801_CheckBitFloat(_429_value,static_cast<jule::I64>(_1a32e9db1_BitsizeOf(_4120_kind)));
}



inline jule::Bool _1a3e739e5_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1a3ea2e75_Data>& _4630_d) {
	jule::F64 _479_min = _1a37c8b75_Min(_4618_kind);;
	jule::F64 _489_max = _1a37d19a2_Max(_4618_kind);;
	{
		
		if (_1a31ba8b9_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1a67ac6d3:;
			{
				jule::F64 _5113_x = _1a31b8521_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1a3ddeeb1_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1a31ba17c_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1a67ac749:;
			{
				jule::F64 _5813_x = _1a31b8c5d_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1a31b9e18_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1a67ac7b0:;
			{
				jule::F64 _6313_x = _1a31b8c5d_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1a67ac590:;
	};
	return false;
}



inline jule::Bool _1a3e8a7a9_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1a3ea2e75_Data>& _6932_d) {
	jule::F64 _709_max = _1a37d19a2_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1a3e73495_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1a31b7a70_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_1a31ba8b9_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1a67b2b8e:;
			{
				jule::F64 _7713_x = _1a31b8521_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1a3ddeeb1_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1a31ba17c_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1a67b2c16:;
			{
				jule::F64 _8713_x = _1a31b8c5d_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1a31b9e18_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1a67b2c8d:;
			{
				jule::F64 _9213_x = _1a31b8c5d_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1a67b1dad:;
	};
	return false;
}



inline jule::Bool _1a3e8a8db_intAssignable(jule::Str _9818_kind, jule::Ptr<_1a3ea2e75_Data>& _9830_d) {
	{
		
		if (_1a3e2092b_IsSigInt(_9818_kind)) {
			_case_begin_1a67b79b8:;
			{
				return _1a3e739e5_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_1a3e20a5d_IsUnsigInt(_9818_kind)) {
			_case_begin_1a67b7a40:;
			{
				return _1a3e8a7a9_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1a67b3453:;
			{
				return false;
			}
		}
		_match_end_1a67b3376:;
	};
}



inline jule::Ptr<_1a3ecdc09_TypeKind> _1a3e9c1c2_lenKind(void) {
	return jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)});
}



inline jule::Ptr<_1a30c5a27_Directive> _1a3ec83a7_findDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _409323_directives, jule::Str _409354_d) {
	{
		auto &expr = _409323_directives;
		auto it = expr.begin();
		_iter_begin_1a68ddccb:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _409417_dr = *it;
			{
				if ((_409417_dr.get()._field_Tag.get()._field_Kind == _409354_d)) {
					return _409417_dr;
				};
			}
			_iter_next_1a68ddccb:;
			++it;
			goto _iter_begin_1a68ddccb;
		}
		_iter_end_1a68ddccb:;
	};
	return nullptr;
}



inline jule::Any _1a3ec873c_findBuiltinsImport(jule::Str _410223_ident, jule::Ptr<_1a3e3409e_ImportInfo> _410235_imp) {
	return jule::Any(_1a4012787_findPackageBuiltinDef(_410235_imp.get()._field_LinkPath,_410223_ident));
}



inline void _1a3ec894b_fitBitsize(jule::Ptr<_1a3ea2e75_Data>& _410920_d) {
	jule::Ptr<_1a3ed36d1_Prim> _411013_prim = _1a3ed0d1b_Prim(_410920_d.get()._field_Kind.ptr());;
	jule::I64 _41119_z = _1a32e9db1_BitsizeOf(_1a3ed3a44_Str(_411013_prim.ptr()));;
	if ((_41119_z == 64LLU)) {
		return;;
	};
	jule::I64 _411613_k = 0LL;;
	{
		
		if (_1a31b9e18_IsI64(_410920_d.get()._field_Constant.ptr())) {
			_case_begin_1a68e1c9b:;
			{
				_411613_k=static_cast<jule::I64>(_1a3728a1a_BitsizeOfInt(static_cast<jule::I64>(_1a31b7a70_ReadI64(_410920_d.get()._field_Constant.ptr()))));
				if ((_411613_k > _41119_z)) {
					_411013_prim.get()._field_Kind=_1a331e149_IntFromBits(_411613_k);
				};
			}
		}
		else if (_1a31ba17c_IsU64(_410920_d.get()._field_Constant.ptr())) {
			_case_begin_1a68e1d23:;
			{
				_411613_k=static_cast<jule::I64>(_1a37417ad_BitsizeOfUint(static_cast<jule::U64>(_1a31b7cd4_ReadU64(_410920_d.get()._field_Constant.ptr()))));
				if ((_411613_k > _41119_z)) {
					_411013_prim.get()._field_Kind=_1a333105c_UintFromBits(_411613_k);
				};
			}
		}
		else if (_1a31ba8b9_IsF64(_410920_d.get()._field_Constant.ptr())) {
			_case_begin_1a68e1d9a:;
			{
				_411613_k=static_cast<jule::I64>(_1a36724e1_BitsizeOfFloat(static_cast<jule::F64>(_1a31b8521_ReadF64(_410920_d.get()._field_Constant.ptr()))));
				if ((_411613_k > _41119_z)) {
					_411013_prim.get()._field_Kind=_1a335a4e8_FloatFromBits(_411613_k);
				};
			}
		}
		_match_end_1a68e1bd0:;
	};
}



inline void _1a3ec8c48_makeStructLitAlloc(jule::Ptr<_1a3ea2e75_Data>& _413628_d, jule::Ptr<_1a31c06b0_StructLitExprModel>& _413643_lit) {
	_413628_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed6e65_Sptr>(_1a3ed6e65_Sptr{._field_Elem=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_413643_lit.get()._field_Strct, 0)})}), 7)});
	_413628_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c089c_AllocStructLitExprModel>(_1a31c089c_AllocStructLitExprModel{._field_Lit=_413643_lit}));
}



inline jule::Ptr<_1a3e59e4e_Var> _1a3ec9089_buildErrorVar(jule::Ptr<_1a3e21344_Scope>& _414723_s, jule::Ptr<_1a3112c51_FnCallExpr>& _414739_fc) {
	return jule::new_ptr<_1a3e59e4e_Var>(_1a3e59e4e_Var{._field_Scope=_414723_s, ._field_Token=_414739_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1a3ea3eed_Value>(_1a3ea3eed_Value{._field_Data=jule::new_ptr<_1a3ea2e75_Data>()}), });
}



inline jule::Any _1a3ec93ca_findBuiltinsSema(jule::Str _416621_ident, jule::Ptr<_1a3e3c1ea_Sema> _416637_s) {
	{
		auto &expr = _416637_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1a68e6a1a:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _416717_imp = *it;
			{
				if ((_416717_imp.get()._field_ImportAll || _1a3e36975_existIdent(_416717_imp.ptr(), _416621_ident))) {
					jule::Any _416921_def = _1a3ec873c_findBuiltinsImport(_416621_ident,_416717_imp);;
					if ((_416921_def != nullptr)) {
						return jule::Any(_416921_def);
					};
				};
			}
			_iter_next_1a68e6a1a:;
			++it;
			goto _iter_begin_1a68e6a1a;
		}
		_iter_end_1a68e6a1a:;
	};
	jule::Str _417713_ppath = _1ba1e2c3c_Dir(_416637_s.get()._field_file.get()._field_File.ptr());;
	if (_1b9d2b8ed_HasPrefix(_417713_ppath,_1b9deb1d7_PathStdlib)) {
		(_417713_ppath).mut_slice(_1b9deb1d7_PathStdlib.len());;
		_417713_ppath=(jule::Str("std", 3) + _1b9d3263a_Replace(_417713_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1a4012787_findPackageBuiltinDef(_417713_ppath,_416621_ident));
	};
	return nullptr;
}



inline jule::Bool _1a3ec9672_isOkForShifting(jule::Ptr<_1a3ea2e75_Data>& _419125_d) {
	if (_1a3ea3838_IsConst(_419125_d.ptr())) {
		{
			
			if (_1a31b9e18_IsI64(_419125_d.get()._field_Constant.ptr())) {
				_case_begin_1a68eb965:;
				{
					return (_1a31b7a70_ReadI64(_419125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_1a31ba17c_IsU64(_419125_d.get()._field_Constant.ptr())) {
				_case_begin_1a68eb228:;
				{
					return true;
				}
			}
			else if (_1a31ba8b9_IsF64(_419125_d.get()._field_Constant.ptr())) {
				_case_begin_1a68eb28e:;
				{
					return (_1a31b8521_ReadF64(_419125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1a68eb1b2:;
				{
					return false;
				}
			}
			_match_end_1a68eb0d5:;
		};
	};
	jule::Ptr<_1a3ed36d1_Prim> _42049_prim = _1a3ed0d1b_Prim(_419125_d.get()._field_Kind.ptr());;
	return ((_42049_prim != nullptr) && _1a3e20b90_IsInt(_1a3ed3a44_Str(_42049_prim.ptr())));
}



inline jule::Bool _1a3ec9a29_isInstancedStruct(jule::Ptr<_1a312ad46_StructIns> _420822_s) {
	return (_420822_s.get()._field_Decl.get()._field_Generics.len() == _420822_s.get()._field_Generics.len());
}



inline jule::Bool _1a3ec9d8c_isPtrArithmeticCompatible(jule::Ptr<_1a3ea2e75_Data>& _421235_l, jule::Ptr<_1a3ea2e75_Data>& _421250_r) {
	jule::Ptr<_1a3eda4c9_Ptr> _42139_ptr = _1a3ed12e4_Ptr(_421250_r.get()._field_Kind.ptr());;
	if ((_42139_ptr != nullptr)) {
		return _1a3ece413_Equals(_1a3ed12e4_Ptr(_421235_l.get()._field_Kind.ptr()).get()._field_Elem, _42139_ptr.get()._field_Elem);
	};
	if (_1a3ea3838_IsConst(_421250_r.ptr())) {
		return _1a3e8a8db_intAssignable(jule::Str("int", 3),_421250_r);
	};
	_1a3e8bb1d_typeCompatibilityChecker _422013_tcc = _1a3e8bb1d_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_421250_r.get()._field_Kind, };;
	return _1a3e8d207_check(&_422013_tcc);
}



inline void _1a3eca0ce_applyCastKindModel(jule::Ptr<_1a3ea2e75_Data>& _422928_d, jule::Ptr<_1a3ecdc09_TypeKind>& _422943_t) {
	_422928_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c0a89_CastingExprModel>(_1a31c0a89_CastingExprModel{._field_Expr=_422928_d.get()._field_Model, ._field_Kind=_422943_t, ._field_ExprKind=_422928_d.get()._field_Kind}));
}



inline void _1a3eca387_applyCastKind(jule::Ptr<_1a3ea2e75_Data>& _423723_d, jule::Ptr<_1a3ecdc09_TypeKind>& _423738_t) {
	_1a3eca0ce_applyCastKindModel(_423723_d,_423738_t);
	_423723_d.get()._field_Kind=_423738_t;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a3eca585_buildVoidData(void) {
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _1a3eca84e_checkDataForIntegerIndexing(jule::Ptr<_1a3ea2e75_Data>& _425037_d) {
	jule::Str _425049_err_fmt = jule::Str();
	if ((_425037_d == nullptr)) {
		_425049_err_fmt = jule::Str();
		return _425049_err_fmt;
	};
	{
		
		if ((_1a3ed0d1b_Prim(_425037_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a69044a6:;
			{
				_425049_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _425049_err_fmt;
			}
		}
		else if ((!(_1a3e20b90_IsInt(_1a3ed3a44_Str(_1a3ed0d1b_Prim(_425037_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a690451c:;
			{
				_425049_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _425049_err_fmt;
			}
		}
		else if (_1a3ea3838_IsConst(_425037_d.ptr())) {
			_case_begin_1a6904583:;
			{
				if ((_1a31b8c5d_AsF64(_425037_d.get()._field_Constant.ptr()) < 0LL)) {
					_425049_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _425049_err_fmt;
				};
			}
		}
		else if ((_1a3ed0d1b_Prim(_425037_d.get()._field_Kind.ptr()) == nullptr) || _1a3ea3838_IsConst(_425037_d.ptr()) || (_1a32e367e_RealKindOf(_1a3ed3a44_Str(_1a3ed0d1b_Prim(_425037_d.get()._field_Kind.ptr()).ptr())) != _1a32e367e_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1a69045e9:;
			{
				jule::Ptr<_1a3ecdc09_TypeKind> _426717_t = jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)});;
				_1a3eca387_applyCastKind(_425037_d,_426717_t);
			}
		}
		_match_end_1a6903e56:;
	};
	_425049_err_fmt = jule::Str();
	return _425049_err_fmt;
}



inline void _1a3ecab18_applyCastModelByEnum(jule::Ptr<_1a3ea2e75_Data>& _427630_d, jule::Ptr<_1a31dbbc6_Enum> _427644_e) {
	if ((_427644_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3ed36d1_Prim> _42809_p = _1a3ed0d1b_Prim(_427644_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1a3ed6915_IsStr(_42809_p.ptr())) {
		return;;
	};
	_1a3eca0ce_applyCastKindModel(_427630_d,_427644_e.get()._field_Kind.get()._field_Kind);
}



inline void _1a3ecadc1_castConstByType(jule::Str& _428721_t, jule::Ptr<_1a3ea2e75_Data>& _428734_d) {
	{
		
		if (_1a3e2092b_IsSigInt(_428721_t)) {
			_case_begin_1a690a215:;
			{
				{
					auto _match_expr{ _1a32e9db1_BitsizeOf(_1a32e367e_RealKindOf(_428721_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a690ae3b:;
						{
							_1a31b8ed3_SetI64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a31b8785_AsI64(_428734_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a690aea2:;
						{
							_1a31b8ed3_SetI64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a31b8785_AsI64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a690b018:;
						{
							_1a31b8ed3_SetI64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a31b8785_AsI64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a690b07e:;
						{
							_1a31b8ed3_SetI64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a31b8785_AsI64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a690a49b:;
				};
			}
		}
		else if (_1a3e20a5d_IsUnsigInt(_428721_t)) {
			_case_begin_1a690a28c:;
			{
				{
					auto _match_expr{ _1a32e9db1_BitsizeOf(_1a32e367e_RealKindOf(_428721_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a690e868:;
						{
							_1a31b9258_SetU64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a31b89e9_AsU64(_428734_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a690e8ce:;
						{
							_1a31b9258_SetU64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a31b89e9_AsU64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a690e945:;
						{
							_1a31b9258_SetU64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a31b89e9_AsU64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a690e9ab:;
						{
							_1a31b9258_SetU64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a31b89e9_AsU64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a690da43:;
				};
			}
		}
		else if (_1a3e20cc2_IsFloat(_428721_t)) {
			_case_begin_1a690a314:;
			{
				{
					auto _match_expr{ _1a32e9db1_BitsizeOf(_1a32e367e_RealKindOf(_428721_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a6910acd:;
						{
							_1a31b99c8_SetF64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a31b8c5d_AsF64(_428734_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a6913295:;
						{
							_1a31b99c8_SetF64(_428734_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a31b8c5d_AsF64(_428734_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a6912470:;
				};
			}
		}
		_match_end_1a690a0d3:;
	};
}



inline void _1a3ecb3cc_updateModelToGenericIns(jule::Any& _432133_m, jule::Ptr<_1a31ca874_FnIns>& _432152_f) {
	{
		auto &_match_expr{ _432133_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a31ca874_FnIns>>()) {
			_case_begin_1a690a7cb:;
			{
				_432133_m=static_cast<jule::Any>(_432152_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a690a842:;
			{
				_432133_m.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>().get()._field_Method=_432152_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c21ea_StructStaticIdentExprModel>>()) {
			_case_begin_1a690a8a8:;
			{
				_432133_m.operator jule::Ptr<_1a31c21ea_StructStaticIdentExprModel>().get()._field_Method=_432152_f;
			}
		}
		_match_end_1a691452c:;
	};
}



inline jule::Bool _1a3ecb61e_pushSubIdentFromExpr(jule::Any _433229_expr, jule::Ptr<_1a310a177_SubIdentTypeDecl>& _433250_t) {
	{
		auto &_match_expr{ _433229_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a31109eb_IdentExpr>>()) {
			_case_begin_1a6916694:;
			{
				jule::Ptr<_1a31109eb_IdentExpr> _433517_e = _433229_expr.operator jule::Ptr<_1a31109eb_IdentExpr>();;
				_433250_t.get()._field_Idents = jule::alloc_for_append(_433250_t.get()._field_Idents,1);_433250_t.get()._field_Idents.__push(jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_433517_e.get()._field_Token, ._field_Ident=_433517_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a311228e_SubIdentExpr>>()) {
			_case_begin_1a691670a:;
			{
				jule::Ptr<_1a311228e_SubIdentExpr> _434117_e = _433229_expr.operator jule::Ptr<_1a311228e_SubIdentExpr>();;
				if ((!(_1a3ecb61e_pushSubIdentFromExpr(_434117_e.get()._field_Expr.get()._field_Kind,_433250_t)))) {
					return false;
				};
				_433250_t.get()._field_Idents = jule::alloc_for_append(_433250_t.get()._field_Idents,1);_433250_t.get()._field_Idents.__push(jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_434117_e.get()._field_Ident, ._field_Ident=_434117_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1a69165a6:;
			{
				return false;
			}
		}
		_match_end_1a691585d:;
	};
	return true;
}



inline jule::Bool _1a3eea42e_kindUsesGenerics(jule::Any& _157222_k, jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>& _157240_generics) {
	{
		auto &expr = _157240_generics;
		auto it = expr.begin();
		_iter_begin_1a6c45a7d:;
		if (it != expr.end()) {
			jule::Ptr<_1a3116a46_GenericDecl> &_157312_g = *it;
			{
				if (static__1a3eea033_exist(_157312_g.get()._field_Ident,_157222_k)) {
					return true;
				};
			}
			_iter_next_1a6c45a7d:;
			++it;
			goto _iter_begin_1a6c45a7d;
		}
		_iter_end_1a6c45a7d:;
	};
	return false;
}



inline jule::Bool _1a3eea7b4_hasDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _158222_directives, jule::Str _158253_tag) {
	{
		auto &expr = _158222_directives;
		auto it = expr.begin();
		_iter_begin_1a6c461dd:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _158317_dr = *it;
			{
				if ((_158317_dr.get()._field_Tag.get()._field_Kind == _158253_tag)) {
					return true;
				};
			}
			_iter_next_1a6c461dd:;
			++it;
			goto _iter_begin_1a6c461dd;
		}
		_iter_end_1a6c461dd:;
	};
	return false;
}



inline jule::Bool _1a3eeaa5b_canGetPtr(jule::Ptr<_1a3ea2e75_Data>& _159119_d) {
	if (((!(_159119_d.get()._field_Lvalue)) || _1a3ea3838_IsConst(_159119_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1a3ed2009_Fn(_159119_d.get()._field_Kind.ptr()) != nullptr) || (_1a3ed1558_Enum(_159119_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1a6c4890a:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a6c481bd:;
			{
				return true;
			}
		}
		_match_end_1a6c48168:;
	};
}



inline jule::Bool _1a3eead7a_isValidForSptrType(jule::Ptr<_1a3ecdc09_TypeKind>& _160428_t) {
	jule::Ptr<_1a312ad46_StructIns> _160513_s = _1a3ed226d_Struct(_160428_t.ptr());;
	if ((((_160513_s != nullptr) && (_160513_s.get()._field_Decl != nullptr)) && _160513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1a3eeb122_isValidForRef(jule::Ptr<_1a3ecdc09_TypeKind>& _161323_t) {
	return (_1a3ed2009_Fn(_161323_t.ptr()) == nullptr);
}



inline jule::Bool _1a3eeb3db_isBuiltinStrConvertable(jule::Ptr<_1a3ecdc09_TypeKind>& _161633_t) {
	return (((!(_1a3eced92_Void(_161633_t.ptr()))) && (_1a3ed2009_Fn(_161633_t.ptr()) == nullptr)) && (_1a3ed29aa_Tup(_161633_t.ptr()) == nullptr));
}



inline jule::Str _1a3eeb661_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _162027_tokens) {
	jule::Str _162113_s = _162027_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162027_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a6c4c8ed:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_162212_token = *it;
			{
				_162113_s+=jule::Str("::", 2);
				_162113_s+=_162212_token.get()._field_Kind;
			}
			_iter_next_1a6c4c8ed:;
			++it;
			goto _iter_begin_1a6c4c8ed;
		}
		_iter_end_1a6c4c8ed:;
	};
	return _162113_s;
}



inline jule::Ptr<_1a3ed36d1_Prim> _1a3eeba18_buildPrimType(jule::Str _162918_kind) {
	return jule::new_ptr<_1a3ed36d1_Prim>(_1a3ed36d1_Prim{._field_Kind=_162918_kind});
}



inline jule::Ptr<_1a30e9b8e_Struct> _1a3eebcb0_getStructFromKind(jule::Ptr<_1a3ecdc09_TypeKind> _163526_k) {
	{
		
		if ((_163526_k == nullptr)) {
			_case_begin_1a6c4dc40:;
			{
				return nullptr;
			}
		}
		else if ((_1a3ed226d_Struct(_163526_k.ptr()) != nullptr)) {
			_case_begin_1a6c4dca6:;
			{
				return _1a3ed226d_Struct(_163526_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_1a3ed1080_Sptr(_163526_k.ptr()) != nullptr)) {
			_case_begin_1a6c4dd1c:;
			{
				return _1a3eebcb0_getStructFromKind(_1a3ed1080_Sptr(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1a3ed1c95_Slc(_163526_k.ptr()) != nullptr)) {
			_case_begin_1a6c4dd83:;
			{
				return _1a3eebcb0_getStructFromKind(_1a3ed1c95_Slc(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1a3ed1a31_Arr(_163526_k.ptr()) != nullptr)) {
			_case_begin_1a6c4e14c:;
			{
				return _1a3eebcb0_getStructFromKind(_1a3ed1a31_Arr(_163526_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1a3ed12e4_Ptr(_163526_k.ptr()) != nullptr)) {
			_case_begin_1a6c4e1b3:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1a6c4dbc9:;
			{
				return nullptr;
			}
		}
		_match_end_1a6c4d954:;
	};
}



inline jule::Bool _1a3eec057_isPrim(jule::Str _165811_kind) {
	return ((((((((((((((((_165811_kind == jule::Str("i8", 2)) || (_165811_kind == jule::Str("i16", 3))) || (_165811_kind == jule::Str("i32", 3))) || (_165811_kind == jule::Str("i64", 3))) || (_165811_kind == jule::Str("u8", 2))) || (_165811_kind == jule::Str("u16", 3))) || (_165811_kind == jule::Str("u32", 3))) || (_165811_kind == jule::Str("u64", 3))) || (_165811_kind == jule::Str("f32", 3))) || (_165811_kind == jule::Str("f64", 3))) || (_165811_kind == jule::Str("int", 3))) || (_165811_kind == jule::Str("uint", 4))) || (_165811_kind == jule::Str("uintptr", 7))) || (_165811_kind == jule::Str("bool", 4))) || (_165811_kind == jule::Str("str", 3))) || (_165811_kind == jule::Str("any", 3)));
}



inline void _1a3eec310_applyImplicitCast(jule::Ptr<_1a3ecdc09_TypeKind>& _167727_dest, jule::Ptr<_1a3ea2e75_Data>& _167749_d) {
	if (_1a3eceb2d_IsNil(_167749_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a3ed36d1_Prim> _16819_destPrim = _1a3ed0d1b_Prim(_167727_dest.ptr());;
	jule::Ptr<_1a3ed36d1_Prim> _16829_prim = _1a3ed0d1b_Prim(_167749_d.get()._field_Kind.ptr());;
	if ((_16819_destPrim != nullptr)) {
		if (_1a3ed6b79_IsAny(_16819_destPrim.ptr())) {
			_1a3eca387_applyCastKind(_167749_d,_167727_dest);
			return;;
		};
		if (((((((!(_1a3ece8b9_CppLinked(_167749_d.get()._field_Kind.ptr()))) && (!(_167749_d.get()._field_Kind.get()._field_Variadic))) && (!(_167749_d.get()._field_Lvalue))) && (!(_1a3ea3838_IsConst(_167749_d.ptr())))) && (_16829_prim != nullptr)) && _1a3e20e04_IsNum(_16829_prim.get()._field_Kind))) {
			_1a3eca387_applyCastKind(_167749_d,_167727_dest);
		};
		return;;
	};
	if (((_1a3ed24d2_Trait(_167727_dest.ptr()) != nullptr) && (_1a3ed24d2_Trait(_167749_d.get()._field_Kind.ptr()) == nullptr))) {
		_1a3eca0ce_applyCastKindModel(_167749_d,_167727_dest);
		return;;
	};
	if (((_1a3ed17bc_TypeEnum(_167727_dest.ptr()) != nullptr) && (_1a3ed17bc_TypeEnum(_167749_d.get()._field_Kind.ptr()) == nullptr))) {
		_1a3eca0ce_applyCastKindModel(_167749_d,_167727_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1a3e9d14b_SymbolTable>,jule::Slice<_1b9db24ab_Log>> _1a4000379_buildSymbols(jule::Ptr<_1a30c48a0_Ast>& _1622_ast, jule::Trait<_1a3e31431_Importer>& _1638_importer, jule::Ptr<_1a31d40a8_symbolBuilder> _1662_owner) {
	jule::Ptr<_1a31d40a8_symbolBuilder> _1713_sb = jule::new_ptr<_1a31d40a8_symbolBuilder>(_1a31d40a8_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_1a31d9058_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1713_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1713_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1a3e37008_Package>,jule::Slice<_1b9db24ab_Log>> _1a40007a8_analyzePackage(jule::Slice<jule::Ptr<_1a30c48a0_Ast>>& _3024_files, jule::Trait<_1a3e31431_Importer>& _3044_importer, jule::I64& _3065_flags) {
	jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1a3e9d14b_SymbolTable>>::alloc(0LL,_3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_1a6d5e922:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c48a0_Ast> _3317_f = *it;
			{
				jule::Ptr<_1a3e9d14b_SymbolTable> _3418_table;;
				jule::Slice<_1b9db24ab_Log> _3429_errors;;
				std::tie(_3418_table,_3429_errors) = _1a4000379_buildSymbols(_3317_f,_3044_importer,nullptr);
				if ((_3429_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3429_errors);
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1a6d5e922:;
			++it;
			goto _iter_begin_1a6d5e922;
		}
		_iter_end_1a6d5e922:;
	};
	jule::Ptr<_1a3e3c1ea_Sema> _4113_sema = jule::new_ptr<_1a3e3c1ea_Sema>(_1a3e3c1ea_Sema{._field_flags=_3065_flags});;
	_1a3e56e6d_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4113_sema.get()._field_errors);
	};
	jule::Ptr<_1a3e37008_Package> _4913_pkg = jule::new_ptr<_1a3e37008_Package>(_1a3e37008_Package{._field_Files=_4113_sema.get()._field_files});;
	return std::make_tuple(_4913_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1a3e37008_Package>,jule::Slice<_1b9db24ab_Log>> _1a4000b93_AnalyzePackage(jule::Slice<jule::Ptr<_1a30c48a0_Ast>> _7323_files, jule::Trait<_1a3e31431_Importer> _7342_importer, jule::I64 _7362_flags) {
	if ((_7323_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1a3e37008_Package> _7714_package;;
	jule::Slice<_1b9db24ab_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1a40007a8_analyzePackage(_7323_files,_7342_importer,_7362_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1a31ca874_FnIns> _1a400bcc0_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1a6d695ca:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _2620_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40901e9_builtinCallerOut), });;
				return _2620_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1a6d69641:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _2920_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40905d4_builtinCallerOutln), });;
				return _2920_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1a6d696a7:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _3220_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40909be_builtinCallerNew), });;
				return _3220_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1a6d6971d:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _3520_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4090da9_builtinCallerPanic), });;
				return _3520_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1a6d6991b:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _3820_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40914c5_builtinCallerMake), });;
				return _3820_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1a6d69982:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _4120_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40918b0_builtinCallerAppend), });;
				return _4120_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1a6d699e8:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _4420_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40926b3_builtinCallerCopy), });;
				return _4420_f;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a6d69a5e:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _4720_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40938b2_builtinCallerLen), });;
				return _4720_f;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a6d69ad6:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _5020_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a409442e_builtinCallerCap), });;
				return _5020_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1a6d69b5d:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _5320_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4094819_builtinCallerClone), });;
				return _5320_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1a6d69c18:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _5620_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4094c04_builtinCallerAssert), });;
				return _5620_f;
			}
		}
		else {
			_case_begin_1a6d69454:;
			{
				return nullptr;
			}
		}
		_match_end_1a6d69399:;
	};
}



inline jule::Ptr<_1a3ecd016_TypeAlias> _1a400e08b_findBuiltinTypeAlias(jule::Str _6325_ident) {
	{
		auto &_match_expr{ _6325_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1a6d71b87:;
			{
				static jule::Ptr<_1a3ecd016_TypeAlias> _6620_t = jule::new_ptr<_1a3ecd016_TypeAlias>(_1a3ecd016_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6620_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1a6d71bed:;
			{
				static jule::Ptr<_1a3ecd016_TypeAlias> _7620_t = jule::new_ptr<_1a3ecd016_TypeAlias>(_1a3ecd016_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a3ed2d62_TypeSymbol>(_1a3ed2d62_TypeSymbol{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7620_t;
			}
		}
		else {
			_case_begin_1a6d71b21:;
			{
				return nullptr;
			}
		}
		_match_end_1a6d715b0:;
	};
}



inline jule::Any _1a400eb4c_findBuiltinDef(jule::Str _9019_ident) {
	jule::Ptr<_1a31ca874_FnIns> _9113_f = _1a400bcc0_findBuiltinFn(_9019_ident);;
	if ((_9113_f != nullptr)) {
		return jule::Any(_9113_f);
	};
	jule::Ptr<_1a3ecd016_TypeAlias> _9513_ta = _1a400e08b_findBuiltinTypeAlias(_9019_ident);;
	if ((_9513_ta != nullptr)) {
		return jule::Any(_9513_ta);
	};
	return nullptr;
}



inline jule::Any _1a4010664_findBuiltinDefStdDebug(jule::Str _10227_ident) {
	{
		auto &_match_expr{ _10227_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1a6d756c4:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _10520_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a409681b_builtinCallerStdDebugOut), });;
				return jule::Any(_10520_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1a6d7573a:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _10820_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4096c06_builtinCallerStdDebugOutln), });;
				return jule::Any(_10820_f);
			}
		}
		else {
			_case_begin_1a6d75295:;
			{
				return nullptr;
			}
		}
		_match_end_1a6d75581:;
	};
}



inline jule::Any _1a4013403_findBuiltinDefStdMem(jule::Str _11525_ident) {
	{
		auto &_match_expr{ _11525_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1a6d772b9:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _11820_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4095111_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11820_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1a6d77330:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _12120_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40956e9_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1a6d77396:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _12420_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4095a7e_builtinCallerStdMemFree), });;
				return jule::Any(_12420_f);
			}
		}
		else {
			_case_begin_1a6d75b36:;
			{
				return nullptr;
			}
		}
		_match_end_1a6d766e7:;
	};
}



inline jule::Any _1a40125de_findBuiltinDefStdJuleIntegrated(jule::Str _13136_ident) {
	{
		auto &_match_expr{ _13136_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1a6d79783:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _13420_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a4095ead_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13420_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1a6d797e9:;
			{
				static jule::Ptr<_1a31ca874_FnIns> _13720_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Decl=jule::new_ptr<_1a31c7bc3_Fn>(_1a31c7bc3_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a3116a46_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a40963cb_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13720_f);
			}
		}
		else {
			_case_begin_1a6d78452:;
			{
				return nullptr;
			}
		}
		_match_end_1a6d78c05:;
	};
}



inline jule::Any _1a4012787_findPackageBuiltinDef(jule::Str _14926_link_path, jule::Str _14942_ident) {
	{
		auto &_match_expr{ _14926_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1a6d7b93e:;
			{
				return jule::Any(_1a4010664_findBuiltinDefStdDebug(_14942_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1a6d7b9a5:;
			{
				return jule::Any(_1a4013403_findBuiltinDefStdMem(_14942_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1a6d7ba1b:;
			{
				return jule::Any(_1a40125de_findBuiltinDefStdJuleIntegrated(_14942_ident));
			}
		}
		else {
			_case_begin_1a6d7b6b9:;
			{
				return nullptr;
			}
		}
		_match_end_1a6d79bd4:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a408e25e_builtinCallerCommonPlain(jule::Ptr<_1a3ea49e3_Eval>& _16234_e, jule::Ptr<_1a3112c51_FnCallExpr>& _16249_fc, jule::Ptr<_1a3ea2e75_Data>& _16271_d) {
	jule::Ptr<_1a31ca874_FnIns> _16313_f = _1a3ed2009_Fn(_16271_d.get()._field_Kind.ptr());;
	_1a3e9495b_fnCallArgChecker _16513_fcac = _1a3e9495b_fnCallArgChecker{._field_e=_16234_e, ._field_args=_16249_fc.get()._field_Args, ._field_errorToken=_16249_fc.get()._field_Token, ._field_f=_16313_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1a3e96d26_check(&_16513_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1a31c0c76_FnCallExprModel> _17613_model = jule::new_ptr<_1a31c0c76_FnCallExprModel>(_1a31c0c76_FnCallExprModel{._field_Token=_16249_fc.get()._field_Token, ._field_Func=_16313_f, ._field_Expr=_16271_d.get()._field_Model, ._field_Args=_16513_fcac._field_argModels, });;
	if ((_16313_f.get()._field_Result == nullptr)) {
		_16271_d=_1a3eca585_buildVoidData();
	} else {
		_16271_d=jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=_16313_f.get()._field_Result, });
	};
	_16271_d.get()._field_Model=static_cast<jule::Any>(_17613_model);
	return _16271_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a408e5d3_builtinCallerCommon(jule::Ptr<_1a3ea49e3_Eval>& _19529_e, jule::Ptr<_1a3112c51_FnCallExpr>& _19544_fc, jule::Ptr<_1a3ea2e75_Data>& _19566_d) {
	return _1a408e25e_builtinCallerCommonPlain(_19529_e,_19544_fc,_19566_d);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a408e9bd_builtinCallerCommonMut(jule::Ptr<_1a3ea49e3_Eval>& _19932_e, jule::Ptr<_1a3112c51_FnCallExpr>& _19947_fc, jule::Ptr<_1a3ea2e75_Data>& _19969_d) {
	if ((!(_19969_d.get()._field_Mutable))) {
		_1a3ea4eee_pushErr(_19932_e.ptr(), _19947_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1a408e5d3_builtinCallerCommon(_19932_e,_19947_fc,_19969_d);
}



inline jule::Ptr<_1a3ea2e75_Data> _1a408ed0e_builtinCallerError(jule::Ptr<_1a3ea49e3_Eval>& _20628_e, jule::Ptr<_1a3112c51_FnCallExpr>& _20643_fc) {
	if ((_20643_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_20628_e.ptr(), _20643_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20643_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_20628_e.ptr(), _20643_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _21413_expr = _1a3ec0404_evalExpr(_20628_e, _20643_fc.get()._field_Args[0LL]);;
	if ((_21413_expr == nullptr)) {
		return nullptr;
	};
	if (_1a3ea3360_IsNil(_21413_expr.ptr())) {
		_1a3ea4eee_pushErr(_20628_e.ptr(), _20643_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _22313_d = _1a3eca585_buildVoidData();;
	_22313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c453d_BuiltinErrorCallExprModel>(_1a31c453d_BuiltinErrorCallExprModel{._field_Err=_21413_expr.get()._field_Model}));
	return _22313_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40901e9_builtinCallerOut(jule::Ptr<_1a3ea49e3_Eval>& _23126_e, jule::Ptr<_1a3112c51_FnCallExpr>& _23141_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	if ((_23141_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23141_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _24013_expr = _1a3ec0404_evalExpr(_23126_e, _23141_fc.get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1a3eeb3db_isBuiltinStrConvertable(_24013_expr.get()._field_Kind)))) {
		_1a3ea4eee_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _25013_d = _1a3eca585_buildVoidData();;
	_25013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c2b8a_BuiltinOutCallExprModel>(_1a31c2b8a_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }));
	return _25013_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40905d4_builtinCallerOutln(jule::Ptr<_1a3ea49e3_Eval>& _25528_e, jule::Ptr<_1a3112c51_FnCallExpr>& _25543_fc, jule::Ptr<_1a3ea2e75_Data>& _25565_d) {
	_25565_d=_1a40901e9_builtinCallerOut(_25528_e,_25543_fc,_25565_d);
	if ((_25565_d == nullptr)) {
		return nullptr;
	};
	_25565_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c2d77_BuiltinOutlnCallExprModel>(_1a31c2d77_BuiltinOutlnCallExprModel{._field_Expr=_25565_d.get()._field_Model.operator jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _25565_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40909be_builtinCallerNew(jule::Ptr<_1a3ea49e3_Eval>& _26726_e, jule::Ptr<_1a3112c51_FnCallExpr>& _26741_fc, jule::Ptr<_1a3ea2e75_Data>& _26763_d) {
	if ((_26741_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26741_fc.get()._field_Args.len() > 2LL)) {
		_1a3ea4eee_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _27613_t = _1a3ebecd8_evalExprKind(_26726_e, _26741_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1a3ea4eee_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1a3eead7a_isValidForSptrType(_27613_t.get()._field_Kind)))) {
		jule::Ptr<_1a312ad46_StructIns> _28717_s = _1a3ed226d_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1a3ea4eee_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26763_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a3ed6e65_Sptr>(_1a3ed6e65_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if ((_26741_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a3ecdc09_TypeKind> _30117_old = _26726_e.get()._field_prefix;;
		_26726_e.get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1a3ea2e75_Data> _30417_init = _1a3ec0404_evalExpr(_26726_e, _26741_fc.get()._field_Args[1LL]);;
		_26726_e.get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_1ba1dbeab_Token> _30921_token = _26741_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1a3e499cc_checkValidityForInitExpr(_26726_e.get()._field_s, (!(_26726_e.get()._field_immutable)),false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_1a3e46c93_checkAssignType(_26726_e.get()._field_s, false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_26763_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3251_BuiltinNewCallExprModel>(_1a31c3251_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}));
		};
	} else {
		_26763_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3251_BuiltinNewCallExprModel>(_1a31c3251_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }));
	};
	return _26763_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4090da9_builtinCallerPanic(jule::Ptr<_1a3ea49e3_Eval>& _32928_e, jule::Ptr<_1a3112c51_FnCallExpr>& _32943_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	if ((_32943_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32943_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _33813_expr = _1a3ec0404_evalExpr(_32928_e, _32943_fc.get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a3ed0d1b_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ed6915_IsStr(_1a3ed0d1b_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1a3ea4eee_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _34713_d = _1a3eca585_buildVoidData();;
	_34713_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c343d_BuiltinPanicCallExprModel>(_1a31c343d_BuiltinPanicCallExprModel{._field_Token=_32943_fc.get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}));
	return _34713_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40914c5_builtinCallerMake(jule::Ptr<_1a3ea49e3_Eval>& _35527_e, jule::Ptr<_1a3112c51_FnCallExpr>& _35542_fc, jule::Ptr<_1a3ea2e75_Data>& _35564_d) {
	if ((_35542_fc.get()._field_Args.len() < 2LL)) {
		if ((_35542_fc.get()._field_Args.len() == 1LL)) {
			_1a3ea4eee_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1a3ea4eee_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _36513_t = _1a3ebecd8_evalExprKind(_35527_e, _35542_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1a3ea4eee_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_35542_fc.get()._field_Args.len() > 3LL)) {
		_1a3ea4eee_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;
	};
	_35564_d.get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1a3ea2e75_Data> _38113_lenExpr = _1a3ec0404_evalExpr(_1a3e4648a_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;
	};
	_1a3ead5e0_checkIntegerIndexingByData(_35527_e.ptr(), _38113_lenExpr,_35542_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1a31c3817_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1a31c3817_BuiltinMakeCallExprModel>(_1a31c3817_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	_35564_d.get()._field_Model=static_cast<jule::Any>(_38813_model);
	if ((_35542_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1a3ea2e75_Data> _39417_capExpr = _1a3ec0404_evalExpr(_1a3e4648a_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return _35564_d;
		};
		_1a3ead5e0_checkIntegerIndexingByData(_35527_e.ptr(), _39417_capExpr,_35542_fc.get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return _35564_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40918b0_builtinCallerAppend(jule::Ptr<_1a3ea49e3_Eval>& _40429_e, jule::Ptr<_1a3112c51_FnCallExpr>& _40444_fc, jule::Ptr<_1a3ea2e75_Data>& _40466_d) {
	if ((_40444_fc.get()._field_Args.len() < 2LL)) {
		if ((_40444_fc.get()._field_Args.len() == 1LL)) {
			_1a3ea4eee_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1a3ea4eee_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _41413_t = _1a3ec0404_evalExpr(_40429_e, _40444_fc.get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;
	};
	if ((_1a3ed1c95_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1a3ea4eee_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a31ca874_FnIns> _42413_f = jule::new_ptr<_1a31ca874_FnIns>(_1a31ca874_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a31c99a5_ParamIns>>::make({jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1a31c99a5_ParamIns>(_1a31c99a5_ParamIns{._field_Decl=jule::new_ptr<_1a31c6386_Param>(_1a31c6386_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1a3ed1c95_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1a3ea2e75_Data>(jule::Ptr<_1a3ea49e3_Eval>&,jule::Ptr<_1a3112c51_FnCallExpr>&,jule::Ptr<_1a3ea2e75_Data>&)>(_1a408e25e_builtinCallerCommonPlain), });;
	_40466_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_42413_f, 1)});
	_40466_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c25c4_CommonIdentExprModel>(_1a31c25c4_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40466_d=_1a408e25e_builtinCallerCommonPlain(_40429_e,_40444_fc,_40466_d);
	if ((_40466_d != nullptr)) {
		jule::Ptr<_1a31c0c76_FnCallExprModel> _45217_model = _40466_d.get()._field_Model.operator jule::Ptr<_1a31c0c76_FnCallExprModel>();;
		_40466_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3a04_BuiltinAppendCallExprModel>(_1a31c3a04_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}));
	};
	return _40466_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4091d44_callerCopySlice(jule::Ptr<_1a3ea2e75_Data>& _46125_dest, jule::Ptr<_1a3ea49e3_Eval>& _46143_e, jule::Ptr<_1a3112c51_FnCallExpr>& _46158_fc, jule::Ptr<_1a3ea2e75_Data>& _46180_d) {
	if ((!(_46125_dest.get()._field_Mutable))) {
		_1a3ea4eee_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _46613_src = _1a3ec0404_evalExpr(_46143_e, _46158_fc.get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a3ed78c2_Slc> _47013_slc = _1a3ed1c95_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1a3ed0106_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1a3ea4eee_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1a3ece413_Equals(_46125_dest.get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1a3ea4eee_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_46125_dest.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_46613_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1a3ed36d1_Prim> _48013_destPrim = _1a3ed0d1b_Prim(_1a3ed1c95_Slc(_46125_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1a3ed36d1_Prim> _48113_prim = _1a3ed0d1b_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1a3ed6915_IsStr(_48113_prim.ptr())))) || (!(_1a3ed4eda_IsU8(_48013_destPrim.ptr()))))) {
			_1a3ea4eee_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_46125_dest.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_46613_src.get()._field_Kind.ptr()))}));
		};
	};
	_46180_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)});
	_46180_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c1ccc_BuiltinCopyCallExprModel>(_1a31c1ccc_BuiltinCopyCallExprModel{._field_Dest=_46125_dest, ._field_Src=_46613_src}));
	return _46180_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40922c8_callerCopyStr(jule::Ptr<_1a3ea2e75_Data>& _49523_dest, jule::Ptr<_1a3ea49e3_Eval>& _49541_e, jule::Ptr<_1a3112c51_FnCallExpr>& _49556_fc, jule::Ptr<_1a3ea2e75_Data>& _49578_d) {
	if ((!(_49523_dest.get()._field_Mutable))) {
		_1a3ea4eee_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _50013_src = _1a3ec0404_evalExpr(_49541_e, _49556_fc.get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1a3ed0d1b_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6dbe8e9:;
			{
				if (_1a3ed6915_IsStr(_1a3ed0d1b_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1a3ed1c95_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6dbe597:;
			{
				jule::Ptr<_1a3ed78c2_Slc> _51017_slc = _1a3ed1c95_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1a3ed0d1b_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1a3ed4eda_IsU8(_1a3ed0d1b_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1a6dbe861:;
	};
	_1a3ea4eee_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_49523_dest.get()._field_Kind.ptr())),jule::Any(_1a3ece105_Str(_50013_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49578_d.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("int", 3)), 6)});
	_49578_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c1ccc_BuiltinCopyCallExprModel>(_1a31c1ccc_BuiltinCopyCallExprModel{._field_Dest=_49523_dest, ._field_Src=_50013_src}));
	return _49578_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40926b3_builtinCallerCopy(jule::Ptr<_1a3ea49e3_Eval>& _52527_e, jule::Ptr<_1a3112c51_FnCallExpr>& _52542_fc, jule::Ptr<_1a3ea2e75_Data>& _52564_d) {
	if ((_52542_fc.get()._field_Args.len() < 2LL)) {
		if ((_52542_fc.get()._field_Args.len() == 1LL)) {
			_1a3ea4eee_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1a3ea4eee_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52542_fc.get()._field_Args.len() > 2LL)) {
		_1a3ea4eee_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _53813_dest = _1a3ec0404_evalExpr(_52527_e, _52542_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1a6dc93e8:;
			{
				return nullptr;
			}
		}
		else if ((_1a3ed1c95_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6dc945e:;
			{
				return _1a4091d44_callerCopySlice(_53813_dest,_52527_e,_52542_fc,_52564_d);
			}
		}
		else if (((_1a3ed0d1b_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1a3ed6915_IsStr(_1a3ed0d1b_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6dc94c5:;
			{
				return _1a40922c8_callerCopyStr(_53813_dest,_52527_e,_52542_fc,_52564_d);
			}
		}
		else {
			_case_begin_1a6dc933d:;
			{
				_1a3ea4eee_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6dc92d8:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4092a04_callerLenSlice(jule::Ptr<_1a3ea2e75_Data>& _55224_expr, jule::Ptr<_1a3ea2e75_Data>& _55242_d) {
	_55242_d.get()._field_Kind=_1a3e9c1c2_lenKind();
	_55242_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3be1_BuiltinLenCallExprModel>(_1a31c3be1_BuiltinLenCallExprModel{._field_Expr=_55224_expr}));
	return _55242_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4092d45_callerLenMap(jule::Ptr<_1a3ea2e75_Data>& _56022_expr, jule::Ptr<_1a3ea2e75_Data>& _56040_d) {
	_56040_d.get()._field_Kind=_1a3e9c1c2_lenKind();
	_56040_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3be1_BuiltinLenCallExprModel>(_1a31c3be1_BuiltinLenCallExprModel{._field_Expr=_56022_expr}));
	return _56040_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4093186_callerLenArr(jule::Ptr<_1a3ea2e75_Data>& _56822_expr, jule::Ptr<_1a3ea2e75_Data>& _56840_d) {
	_56840_d.get()._field_Kind=_1a3e9c1c2_lenKind();
	_56840_d.get()._field_Constant=static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a3ed1a31_Arr(_56822_expr.get()._field_Kind.ptr()).get()._field_N)));
	_56840_d.get()._field_Model=static_cast<jule::Any>(_56840_d.get()._field_Constant);
	return _56840_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40934c7_callerLenStr(jule::Ptr<_1a3ea2e75_Data>& _57522_expr, jule::Ptr<_1a3ea2e75_Data>& _57540_d) {
	_57540_d.get()._field_Kind=_1a3e9c1c2_lenKind();
	if (_1a3ea3838_IsConst(_57522_expr.ptr())) {
		_57540_d.get()._field_Constant=static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a31b82ac_ReadStr(_57522_expr.get()._field_Constant.ptr()).len())));
		_57540_d.get()._field_Model=static_cast<jule::Any>(_57540_d.get()._field_Constant);
	} else {
		_57540_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3be1_BuiltinLenCallExprModel>(_1a31c3be1_BuiltinLenCallExprModel{._field_Expr=_57522_expr}));
	};
	return _57540_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40938b2_builtinCallerLen(jule::Ptr<_1a3ea49e3_Eval>& _58826_e, jule::Ptr<_1a3112c51_FnCallExpr>& _58841_fc, jule::Ptr<_1a3ea2e75_Data>& _58863_d) {
	if ((_58841_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_58841_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _59613_dest = _1a3ec0404_evalExpr(_58826_e, _58841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1a6dd4bb7:;
			{
				return nullptr;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1a6dd4c2d:;
			{
				_1a3ea4eee_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a3ed1c95_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6dd4c94:;
			{
				return _1a4092a04_callerLenSlice(_59613_dest,_58863_d);
			}
		}
		else if ((_1a3ed1a31_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6dd5998:;
			{
				return _1a4093186_callerLenArr(_59613_dest,_58863_d);
			}
		}
		else if ((_1a3ed2746_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6dd5a0e:;
			{
				return _1a4092d45_callerLenMap(_59613_dest,_58863_d);
			}
		}
		else if (((_1a3ed0d1b_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1a3ed6915_IsStr(_1a3ed0d1b_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6dd5a75:;
			{
				return _1a40934c7_callerLenStr(_59613_dest,_58863_d);
			}
		}
		else {
			_case_begin_1a6dd4ac9:;
			{
				_1a3ea4eee_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6dd4a74:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4093c03_callerCapSlice(jule::Ptr<_1a3ea2e75_Data>& _61724_expr, jule::Ptr<_1a3ea2e75_Data>& _61742_d) {
	_61742_d.get()._field_Kind=_1a3e9c1c2_lenKind();
	_61742_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3dcd_BuiltinCapCallExprModel>(_1a31c3dcd_BuiltinCapCallExprModel{._field_Expr=_61724_expr}));
	return _61742_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4094044_callerCapStr(jule::Ptr<_1a3ea2e75_Data>& _62522_expr, jule::Ptr<_1a3ea2e75_Data>& _62540_d) {
	_62540_d.get()._field_Kind=_1a3e9c1c2_lenKind();
	if (_1a3ea3838_IsConst(_62522_expr.ptr())) {
		_62540_d.get()._field_Constant=static__1a31b6970_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a31b82ac_ReadStr(_62522_expr.get()._field_Constant.ptr()).cap())));
		_62540_d.get()._field_Model=static_cast<jule::Any>(_62540_d.get()._field_Constant);
	} else {
		_62540_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3dcd_BuiltinCapCallExprModel>(_1a31c3dcd_BuiltinCapCallExprModel{._field_Expr=_62522_expr}));
	};
	return _62540_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a409442e_builtinCallerCap(jule::Ptr<_1a3ea49e3_Eval>& _63826_e, jule::Ptr<_1a3112c51_FnCallExpr>& _63841_fc, jule::Ptr<_1a3ea2e75_Data>& _63863_d) {
	if ((_63841_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;
	};
	if ((_63841_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _64613_dest = _1a3ec0404_evalExpr(_63826_e, _63841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1a6de0365:;
			{
				return nullptr;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1a6de03cb:;
			{
				_1a3ea4eee_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a3ed1c95_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a6de0442:;
			{
				return _1a4093c03_callerCapSlice(_64613_dest,_63863_d);
			}
		}
		else if (((_1a3ed0d1b_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1a3ed6915_IsStr(_1a3ed0d1b_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a6de1168:;
			{
				return _1a4094044_callerCapStr(_64613_dest,_63863_d);
			}
		}
		else {
			_case_begin_1a6de0299:;
			{
				_1a3ea4eee_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a6de0244:;
	};
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4094819_builtinCallerClone(jule::Ptr<_1a3ea49e3_Eval>& _66328_e, jule::Ptr<_1a3112c51_FnCallExpr>& _66343_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	if ((_66343_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_66328_e.ptr(), _66343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_66343_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_66328_e.ptr(), _66343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _67213_d = _1a3ebecd8_evalExprKind(_66328_e, _66343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a3ed0843_SupportsCloning(_67213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1a3ed1c95_Slc(_67213_d.get()._field_Kind.ptr()) != nullptr) || (_1a3ed2746_Map(_67213_d.get()._field_Kind.ptr()) != nullptr) || (_1a3ed1a31_Arr(_67213_d.get()._field_Kind.ptr()) != nullptr) || (_1a3ed1080_Sptr(_67213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a6de779b:;
				{
					{
						_1a3ea4eee_pushErr(_66328_e.ptr(), _66343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_67213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_1a3ed226d_Struct(_67213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a6de713b:;
				{
					{
						_1a3ea4eee_pushErr(_66328_e.ptr(), _66343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_67213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1a6de70c5:;
				{
					{
						_1a3ea4eee_pushErr(_66328_e.ptr(), _66343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1a3ece105_Str(_67213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1a6de6987:;
		};
	};
	_67213_d.get()._field_Mutable=true;
	_67213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c3064_BuiltinCloneCallExprModel>(_1a31c3064_BuiltinCloneCallExprModel{._field_Expr=_67213_d.get()._field_Model}));
	return _67213_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4094c04_builtinCallerAssert(jule::Ptr<_1a3ea49e3_Eval>& _70529_e, jule::Ptr<_1a3112c51_FnCallExpr>& _70544_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	if ((_70544_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_70529_e.ptr(), _70544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70544_fc.get()._field_Args.len() > 2LL)) {
		_1a3ea4eee_pushErr(_70529_e.ptr(), _70544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _71413_expr = _1a3ec0404_evalExpr(_70529_e, _70544_fc.get()._field_Args[0LL]);;
	if ((_71413_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a3ed0d1b_Prim(_71413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ed66a1_IsBool(_1a3ed0d1b_Prim(_71413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1a3ea4eee_pushErr(_70529_e.ptr(), _70544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a31c362a_BuiltinAssertCallExprModel> _72313_model = jule::new_ptr<_1a31c362a_BuiltinAssertCallExprModel>(_1a31c362a_BuiltinAssertCallExprModel{._field_Token=_70544_fc.get()._field_Token, ._field_Expr=_71413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_70544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a3ea2e75_Data> _73117_log = _1a3ec0404_evalExpr(_70529_e, _70544_fc.get()._field_Args[1LL]);;
		if ((_73117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1a3ea3838_IsConst(_73117_log.ptr()))) || (_1a3ed0d1b_Prim(_73117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1a3ed6915_IsStr(_1a3ed0d1b_Prim(_73117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1a3ea4eee_pushErr(_70529_e.ptr(), _70544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1a3ece105_Str(_73117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_72313_model.get()._field_Log=_1a31b82ac_ReadStr(_73117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1a3ea2e75_Data> _74413_d = _1a3eca585_buildVoidData();;
	_74413_d.get()._field_Model=static_cast<jule::Any>(_72313_model);
	return _74413_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4095111_builtinCallerStdMemSizeOf(jule::Ptr<_1a3ea49e3_Eval>& _74935_e, jule::Ptr<_1a3112c51_FnCallExpr>& _74950_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	jule::Ptr<_1a3ea2e75_Data> _75013_result = jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_74950_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_74935_e.ptr(), _74950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _75013_result;
	};
	if ((_74950_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_74935_e.ptr(), _74950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _76213_d = _1a3ebecd8_evalExprKind(_74935_e, _74950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_76213_d == nullptr)) {
		return _75013_result;
	};
	_75013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c472a_SizeofExprModel>(_1a31c472a_SizeofExprModel{._field_Expr=_76213_d.get()._field_Model}));
	return _75013_result;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40956e9_builtinCallerStdMemAlignOf(jule::Ptr<_1a3ea49e3_Eval>& _77136_e, jule::Ptr<_1a3112c51_FnCallExpr>& _77151_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	jule::Ptr<_1a3ea2e75_Data> _77213_result = jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_77151_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_77136_e.ptr(), _77151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _77213_result;
	};
	if ((_77151_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_77136_e.ptr(), _77151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _78413_d = _1a3ebecd8_evalExprKind(_77136_e, _77151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_78413_d == nullptr)) {
		return _77213_result;
	};
	_77213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c4917_AlignofExprModel>(_1a31c4917_AlignofExprModel{._field_Expr=_78413_d.get()._field_Model}));
	return _77213_result;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4095a7e_builtinCallerStdMemFree(jule::Ptr<_1a3ea49e3_Eval>& _79333_e, jule::Ptr<_1a3112c51_FnCallExpr>& _79348_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	if ((_79348_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_79333_e.ptr(), _79348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_79348_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_79333_e.ptr(), _79348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _80213_d = _1a3ebecd8_evalExprKind(_79333_e, _79348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_80213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a3ed05ce_PerformsRC(_80213_d.get()._field_Kind.ptr())))) {
		_1a3ea4eee_pushErr(_79333_e.ptr(), _79348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _81113_result = _1a3eca585_buildVoidData();;
	_81113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c51ba_FreeExprModel>(_1a31c51ba_FreeExprModel{._field_Expr=_80213_d.get()._field_Model}));
	return _81113_result;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4095ead_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a3ea49e3_Eval>& _81645_e, jule::Ptr<_1a3112c51_FnCallExpr>& _81660_fc, jule::Ptr<_1a3ea2e75_Data>& ) {
	if ((_81660_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_81645_e.ptr(), _81660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_81660_fc.get()._field_Args.len() > 1LL)) {
		_1a3ea4eee_pushErr(_81645_e.ptr(), _81660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3ea2e75_Data> _82513_d = _1a3ebecd8_evalExprKind(_81645_e, _81660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_82513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a3eeb3db_isBuiltinStrConvertable(_82513_d.get()._field_Kind)))) {
		_1a3ea4eee_pushErr(_81645_e.ptr(), _81660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a3ea2e75_Data>(_1a3ea2e75_Data{._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(_1a3eeba18_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a31c4ce1_IntegratedToStrExprModel>(_1a31c4ce1_IntegratedToStrExprModel{._field_Expr=_82513_d.get()._field_Model})), });
}



inline jule::Ptr<_1a3ea2e75_Data> _1a40963cb_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a3ea49e3_Eval>& _84344_e, jule::Ptr<_1a3112c51_FnCallExpr>& _84359_fc, jule::Ptr<_1a3ea2e75_Data>& _84381_d) {
	if ((!(_1a3ea5939_isUnsafe(_84344_e.ptr())))) {
		_1a3ea4eee_pushErr(_84344_e.ptr(), _84359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_84359_fc.get()._field_Args.len() < 1LL)) {
		_1a3ea4eee_pushErr(_84344_e.ptr(), _84359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _85313_argd = _1a3ec0404_evalExpr(_84344_e, _84359_fc.get()._field_Args[0LL]);;
	if ((_85313_argd == nullptr)) {
		return nullptr;
	};
	if (((_1a3ed0d1b_Prim(_85313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1a3ed6915_IsStr(_1a3ed0d1b_Prim(_85313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1a3ea4eee_pushErr(_84344_e.ptr(), _84359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a3ece105_Str(_85313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1a3ea3838_IsConst(_85313_argd.ptr()))) || (!(_1a31ba655_IsStr(_85313_argd.get()._field_Constant.ptr()))))) {
		_1a3ea4eee_pushErr(_84344_e.ptr(), _84359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a3ea2e75_Data> _86813_r = _1a3eca585_buildVoidData();;
	jule::Ptr<_1a31ca874_FnIns> _87013_f = _1a3ed2009_Fn(_84381_d.get()._field_Kind.ptr());;
	if ((_87013_f.get()._field_Generics.len() > 0LL)) {
		_86813_r.get()._field_Kind=_87013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1a31c4ecd_BackendEmitExprModel> _87513_model = jule::new_ptr<_1a31c4ecd_BackendEmitExprModel>(_1a31c4ecd_BackendEmitExprModel{._field_Code=_1a31b82ac_ReadStr(_85313_argd.get()._field_Constant.ptr()), });;
	if ((_84359_fc.get()._field_Args.len() > 1LL)) {
		_87513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_84359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _84359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1a6e28700:;
			if (it != expr.end()) {
				jule::Ptr<_1a310d983_Expr> _88121_arg = *it;
				{
					_85313_argd=_1a3ebecd8_evalExprKind(_84344_e, _88121_arg.get()._field_Kind);
					if ((_85313_argd == nullptr)) {
						return nullptr;
					};
					_87513_model.get()._field_Exprs = jule::alloc_for_append(_87513_model.get()._field_Exprs,1);_87513_model.get()._field_Exprs.__push(_85313_argd.get()._field_Model);;
				}
				_iter_next_1a6e28700:;
				++it;
				goto _iter_begin_1a6e28700;
			}
			_iter_end_1a6e28700:;
		};
	};
	_86813_r.get()._field_Model=static_cast<jule::Any>(_87513_model);
	return _86813_r;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a409681b_builtinCallerStdDebugOut(jule::Ptr<_1a3ea49e3_Eval>& _89434_e, jule::Ptr<_1a3112c51_FnCallExpr>& _89449_fc, jule::Ptr<_1a3ea2e75_Data>& _89471_d) {
	_89471_d=_1a40901e9_builtinCallerOut(_89434_e,_89449_fc,_89471_d);
	if ((_89471_d == nullptr)) {
		return nullptr;
	};
	_89471_d.get()._field_Model.operator jule::Ptr<_1a31c2b8a_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _89471_d;
}



inline jule::Ptr<_1a3ea2e75_Data> _1a4096c06_builtinCallerStdDebugOutln(jule::Ptr<_1a3ea49e3_Eval>& _90336_e, jule::Ptr<_1a3112c51_FnCallExpr>& _90351_fc, jule::Ptr<_1a3ea2e75_Data>& _90373_d) {
	_90373_d=_1a40905d4_builtinCallerOutln(_90336_e,_90351_fc,_90373_d);
	if ((_90373_d == nullptr)) {
		return nullptr;
	};
	_90373_d.get()._field_Model.operator jule::Ptr<_1a31c2d77_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _90373_d;
}



inline jule::Bool _1c82b1cdc_FindModuleFile(jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1a6e2dccc:;
		if (it != expr.end()) {
			jule::Ptr<_1d2a84044_DirEntry> &_1312_d = *it;
			{
				if (((!(_1d299dc3e_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1a6e2dccc:;
			++it;
			goto _iter_begin_1a6e2dccc;
		}
		_iter_end_1a6e2dccc:;
	};
	return false;
}



inline jule::Str _1c82b1e1e_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d2a84044_DirEntry>> _2617_dirents = ({
				auto except = static__1b9d3908c_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a6e2ebbd;
				} jule::Slice<jule::Ptr<_1d2a84044_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1c82b1cdc_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1b9d36d15_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1a6e2ebbd;
			};
		}
	_iter_next_1a6e2ebbd:;
	}
	_iter_end_1a6e2ebbd:;;
	return jule::Str();
}



inline jule::Slice<_1b9db24ab_Log> _1c82b21a5_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1d2999212_Read(_1b9d361aa_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1b9db24ab_Log>::make({_1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _1b9d34131_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1b9db24ab_Log>::make({_1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1a46a7b0d_FileInfo> _1a46aa7d1_ParseFile(jule::Ptr<_1ba1e2346_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a46a7b0d_FileInfo> _2713_finf = jule::new_ptr<_1a46a7b0d_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _1a47079b5_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1a30c48a0_Ast>,jule::Slice<_1b9db24ab_Log>> _1a47079b5_parseFileset(jule::Ptr<_1ba1e2346_File> _5521_f) {
	jule::Ptr<_1a4726462_parser> _5613_p = jule::new_ptr<_1a4726462_parser>();;
	_1a4735d34_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_1a3119780_ScopeTree> _1a47083bc_newScope(void) {
	return jule::new_ptr<_1a3119780_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1a47086ca_isSt(jule::Ptr<_1ba1dbeab_Token> _509_current, jule::Ptr<_1ba1dbeab_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _1a4708a1b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1ba1dbeab_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1ba1dc9a1_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1a4708da1_nextStPos(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1ba1dbeab_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1a6eb4d85:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a6eb6dcb:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_1a4708a1b_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1a47086ca_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_1a6eb5803:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1a47086ca_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1a6eb5638:;
						};
						goto _iter_next_1a6eb3548;
					}
				}
				_match_end_1a6eb4c42:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_1a6eb3548;
			};
			if ((_7313_i > _7133_start)) {
				if (_1a4708a1b_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_1a6eb3548;
				};
				std::tie(_7517_ok,_7617_terminated) = _1a47086ca_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1a47086ca_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1a6eb3548;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1a6eb3548:;
	}
	_iter_end_1a6eb3548:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::Bool> _1a47091e2_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _1a4708da1_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _1a47091e2_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1a47094de_stmt>> _1a4709885_splitStmts(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_1a47094de_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1a47094de_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1a47091e2_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1a47094de_stmt>(_1a47094de_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1a6ebeb3c:;
	}
	_iter_end_1a6ebeb3c:;;
	return _15613_stmts;
}



inline jule::Bool _1a4721072_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));
}



inline jule::Bool _1a472135d_isTypeRange(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_1a70899d7:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_1a708ae28:;
							if (it != expr.end()) {
								jule::Ptr<_1ba1dbeab_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1a708c743:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1a708d106:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1a708ae28;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1a708d17d:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1a708ae28;
														}
													}
													_match_end_1a708ce08:;
												};
											}
										}
										_match_end_1a708c4e0:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1a4721072_isTypeOp(_90524_lToken.get()._field_Kind);
									};
								}
								_iter_next_1a708ae28:;
								++it;
								goto _iter_begin_1a708ae28;
							}
							_iter_end_1a708ae28:;
						};
						return true;
					};
				};
				if ((!(_1a4721072_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;
				};
				_89613_op=true;
			}
			_iter_next_1a70899d7:;
			++it;
			_8979_i++;
			goto _iter_begin_1a70899d7;
		}
		_iter_end_1a70899d7:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _1a4721605_getBlockExpr(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_1a708eb30:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1a7090a10:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a7090a87:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a7091835:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1a70919de;
										};
										return _93322_tokens.slice(0LL,_9369_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a709203e:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1a7091acc:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1a70919de:;
							};
						}
					}
					_match_end_1a708e525:;
				};
			}
			_iter_next_1a708eb30:;
			++it;
			_9369_i++;
			goto _iter_begin_1a708eb30;
		}
		_iter_end_1a708eb30:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a472198a_splitDelim(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_1a709379e:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a709441a:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a7094a8b:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1a709379e;
									}
								}
								else {
									_case_begin_1a7094d22:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1a7094b57:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1a7094492:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								return std::make_tuple(_98025_l,_98125_r);
							};
						}
					}
					_match_end_1a70941a6:;
				};
			}
			_iter_next_1a709379e:;
			++it;
			_9669_i++;
			goto _iter_begin_1a709379e;
		}
		_iter_end_1a709379e:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1a4721c32_findLowestPrecOp(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_1a7097d69:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1a7098b8e:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a709981b:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1a709a08b;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a709a08b:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1a7099aa2:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1a70998d7:;
							};
							goto _iter_next_1a7097d69;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1a7098c16:;
						{
							goto _iter_next_1a7097d69;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1a7098c8d:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1a7097d69;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1a7098d15:;
						{
							goto _iter_next_1a7097d69;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1a7098d8c:;
						{
							goto _iter_next_1a7097d69;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1a7098e14:;
						{
							goto _iter_next_1a7097d69;
						}
					}
					_match_end_1a7098a29:;
				};
				jule::Ptr<_1ba1dbeab_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1a7097d69;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1ba1dbeab_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1a7097d69;
						};
					};
				};
				jule::U8 _104513_p = _1ba1dc363_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1a7097d69:;
			++it;
			_10019_i++;
			goto _iter_begin_1a7097d69;
		}
		_iter_end_1a7097d69:;
	};
	return _99713_precPos;
}



inline jule::Ptr<_1a31109eb_IdentExpr> _1a4721ec9_buildIdentExpr(jule::Ptr<_1ba1dbeab_Token>& _105424_token) {
	return jule::new_ptr<_1a31109eb_IdentExpr>(_1a31109eb_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::I64> _1a4722271_getRangeExprTokens(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _106228_tokens) {
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_1ba1dbeab_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a70a2b76:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1a70a357d:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1a70a335d:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				return std::make_tuple(_106228_tokens.slice(0LL,_106413_i),_106313_rangeN);
			};
		}
	_iter_next_1a70a22e6:;
	}
	_iter_end_1a70a22e6:;;
	return std::make_tuple(nullptr,_106313_rangeN);
}



inline jule::Bool _1a4722eca_checkAssignTokens(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1ba1e1554_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1a714c061:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a714cb88:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1a714ce74:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1a714cc54:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1a714c061;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1ba1e1a93_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1a714c061:;
			++it;
			goto _iter_begin_1a714c061;
		}
		_iter_end_1a714c061:;
	};
	return false;
}



inline _1b9db24ab_Log _1a47241eb_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1ba1e2346_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_1b9db28eb_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _1a47246c4_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1ba1dbeab_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1ba1dbeab_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1a7154266:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1a71542dd:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1a7154002:;
				};
			};
		}
	_iter_next_1a71529c3:;
	}
	_iter_end_1a71529c3:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>,jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _1a472496b_rangeLast(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _10319_tokens) {
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _10339_cutted = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _10357_cut = jule::Slice<jule::Ptr<_1ba1dbeab_Token>>();
	if ((_10319_tokens.len() == 0LL)) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10339_cutted = _10319_tokens;
		_10357_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10357_cut);
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1ba1dbeab_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a7157ae9:;
						{
							(_10913_braceN)++;
							goto _iter_next_1a7155366;
						}
					}
					else {
						_case_begin_1a7158534:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1a7158314:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				_10339_cutted = _10319_tokens.slice(0LL,_11013_i);
				_10357_cut = _10319_tokens.slice(_11013_i);
				return std::make_tuple(_10339_cutted,_10357_cut);
			};
		}
	_iter_next_1a7155366:;
	}
	_iter_end_1a7155366:;;
	_10339_cutted = _10319_tokens;
	_10357_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10357_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>,jule::Slice<_1b9db24ab_Log>> _1a4724d56_partsKind(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	if ((_13219_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _13713_parts = nullptr;;
	jule::Slice<_1b9db24ab_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_1a715bda6:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a715ce0c:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1a715bda6;
							}
						}
						else {
							_case_begin_1a715d1e8:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1a715cec8:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1a715bda6;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_1b9db24ab_Log _16121_err = _1a47241eb_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1a715bda6:;
			++it;
			_1429_i++;
			goto _iter_begin_1a715bda6;
		}
		_iter_end_1a715bda6:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>());;
	};
	return std::make_tuple(_13713_parts,_13813_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>>,jule::Slice<_1b9db24ab_Log>> _1a4725241_parts(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	if ((_18415_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ba1dbeab_Token>>> _18913_parts = nullptr;;
	jule::Slice<_1b9db24ab_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_1a7163b38:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_1ba1dbeab_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7164b8e:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1a7163b38;
							}
						}
						else {
							_case_begin_1a7164e7a:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1a7164c5a:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1a7163b38;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_1b9db24ab_Log _21321_err = _1a47241eb_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1a7163b38:;
			++it;
			_1949_i++;
			goto _iter_begin_1a7163b38;
		}
		_iter_end_1a7163b38:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>());;
	};
	return std::make_tuple(_18913_parts,_19013_errors);
}



inline jule::Str _1a47254d8_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a7164573:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a71645d9:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a7164650:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1a71644b8:;
			{
				return jule::Str();
			}
		}
		_match_end_1a71684bc:;
	};
}



inline _1b9db24ab_Log _1a47258c3_compilerErr(jule::Ptr<_1ba1dbeab_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_1b9db28eb_Logf(_24333_fmt,jule::Any(_24346_args)), ._field_Line=_1ba1e3523_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };
}



inline void _1a4725d02_pushSuggestion(_1b9db24ab_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_1b9db28eb_Logf(_25441_fmt,jule::Any(_25454_args));
}



inline jule::Str _1a4726099_tokstoa(jule::Slice<jule::Ptr<_1ba1dbeab_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1a716bcc8:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_1a716bcc8:;
			++it;
			goto _iter_begin_1a716bcc8;
		}
		_iter_end_1a716bcc8:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1a716c68b:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_1a716c68b:;
			++it;
			goto _iter_begin_1a716c68b;
		}
		_iter_end_1a716c68b:;
	};
	return _26313_s;
}



inline jule::Bool _1a473610e_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r;;
	std::tie(_203610_r,std::ignore) = _1b9d0b5c0_DecodeRuneStr(_203511_ident);
	return _1b9c487a4_IsUpper(_203610_r);
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a473697d_buildVoidType(void) {
	return jule::new_ptr<_1a3109462_TypeDecl>();
}



inline jule::Ptr<_1a3109462_TypeDecl> _1a4736be2_buildPrimType(jule::Ptr<_1ba1dbeab_Token> _2322_t) {
	return jule::new_ptr<_1a3109462_TypeDecl>(_1a3109462_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1a3109a28_IdentTypeDecl>(_1a3109a28_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline std::tuple<jule::Bool,jule::Bool> _1c829c1d4_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a73365d0:;
			{
				_924_ok=_1b9db5811_IsWindows(_1b9e0b879_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a73361d4:;
			{
				_924_ok=_1b9db5ab9_IsDarwin(_1b9e0b879_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a7335eb4:;
			{
				_924_ok=_1b9db5d61_IsLinux(_1b9e0b879_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1a733602a:;
			{
				_924_ok=_1b9db6966_IsUnix(_1b9e0b879_Os);
			}
		}
		else {
			_case_begin_1a7335766:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1a7335b84:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1c828a9b9_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a7338bdc:;
			{
				_2826_ok=_1b9db6180_IsI386(_1b9dead52_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a73387e1:;
			{
				_2826_ok=_1b9db6427_IsAmd64(_1b9dead52_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a73385c1:;
			{
				_2826_ok=_1b9db66be_IsArm64(_1b9dead52_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1a7338637:;
			{
				_2826_ok=_1b9db7082_Is64Bit(_1b9dead52_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1a733869d:;
			{
				_2826_ok=_1b9db6cda_Is32Bit(_1b9dead52_Arch);
			}
		}
		else {
			_case_begin_1a7337d73:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1a7338291:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _1ba8ebb3d_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1b9d36991_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _1b9d36452_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1b9d2ea11_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _1c829c1d4_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _1c828a9b9_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_1b9d2ea11_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _1c829c1d4_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _1c828a9b9_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _1c828a9b9_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _1c829c1d4_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _1c829c1d4_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _1c82a0b44_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_1b9e0b879_Os);;
	if (_1b9db6966_IsUnix(_1b9e0b879_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1c82a0d97_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_1b9dead52_Arch);;
	if (_1b9db7082_Is64Bit(_1b9dead52_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_1b9db6cda_Is32Bit(_1b9dead52_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1c82a1150_initVars(jule::Slice<jule::Str>& _5518_vars, _1c82a0836_CompileInfo& _5532_info) {
	_1c82a0b44_setOsVars(_5518_vars);
	_1c82a0d97_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a734a490:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a7349912:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1a7349c20:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a734b0b7:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a734b12d:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a734b194:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1a734ac21:;
	};
}



inline jule::Slice<jule::U8> _1c837517a_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d2999212_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1b9e11b6a_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1b9db24ab_Log _1a4151365_flatCompilerErr(jule::Str _4120_text) {
	return _1b9db24ab_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _1a4377778_pushPasses(jule::Ptr<_1a3e37008_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a73800a7:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1a7380c89:;
					if (it != expr.end()) {
						_1a31ceb0e_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1a7380c89;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1a73816d5:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1a7380c89;
										};
									}
									_iter_next_1a73816d5:;
									++it;
									goto _iter_begin_1a73816d5;
								}
								_iter_end_1a73816d5:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1a7380c89:;
						++it;
						goto _iter_begin_1a7380c89;
					}
					_iter_end_1a7380c89:;
				};
			}
			_iter_next_1a73800a7:;
			++it;
			goto _iter_begin_1a73800a7;
		}
		_iter_end_1a73800a7:;
	};
}



inline jule::Slice<jule::Str> _1a44c8676_getAllUniquePasses(jule::Ptr<_1a3e37008_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1a3e3409e_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a4377778_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1a7383297:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1a4377778_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1a7383297:;
			++it;
			goto _iter_begin_1a7383297;
		}
		_iter_end_1a7383297:;
	};
	return _12913_passes;
}



inline _1c82a0836_CompileInfo _1a44d2e55_buildCompileInfo(void) {
	_1c82a0836_CompileInfo _14213_info = _1c82a0836_CompileInfo{._field_Prod=_1d28c71b7_Production, ._field_Test=_1d28c668e_Test, };;
	{
		auto &_match_expr{ _1d28c5946_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a738482b:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a7384892:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1a73847b5:;
	};
	{
		auto &_match_expr{ _1d28c5e1e_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a7384078:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a7385398:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a738540e:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1a738519a:;
	};
	return _14213_info;
}



inline void _1a4837c8d_EliminateDefines(jule::Ptr<_1a4380b6b_IR>& _28526_ir) {
	jule::Ptr<_1a48000b8_ObjectDeadCode> _28613_ocd = static__1a4800519_new(_28526_ir);;
	_1a48379c4_elimanate(_28613_ocd);
}



inline jule::Ptr<_1a30c5a27_Directive> _1a4838123_findDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1a73c8cc1:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1a73c8cc1:;
			++it;
			goto _iter_begin_1a73c8cc1;
		}
		_iter_end_1a73c8cc1:;
	};
	return nullptr;
}



inline jule::Bool _1a4838464_hasDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1a4838123_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _1a483c0b1_eliminateDeadCodeOfScope(jule::Ptr<_1a3e21344_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1a3e226b9_Label>> _2429_labels = jule::Slice<jule::Ptr<_1a3e226b9_Label>>::alloc(0LL,16LLU);;
	jule::Slice<jule::Ptr<_1a3e228a6_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1a3e228a6_GotoSt>>::alloc(0LL,16LLU);;
	jule::Ptr<_1a48391ac_scopeDeadCode> _24413_sdc = jule::new_ptr<_1a48391ac_scopeDeadCode>(_1a48391ac_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a3e226b9_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a3e228a6_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1a483bcc5_optimizeStmts(_24413_sdc);
	};
}



inline void _1a483c347_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a31c7bc3_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1a741e6eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a31c7bc3_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1a741ed5b:;
					if (it != expr.end()) {
						jule::Ptr<_1a31ca874_FnIns> _25621_ins = *it;
						{
							_1a483c0b1_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1a741ed5b:;
						++it;
						goto _iter_begin_1a741ed5b;
					}
					_iter_end_1a741ed5b:;
				};
			}
			_iter_next_1a741e6eb:;
			++it;
			goto _iter_begin_1a741e6eb;
		}
		_iter_end_1a741e6eb:;
	};
}



inline void _1a483c589_eliminateFunctionsScopePackage(jule::Ptr<_1a3e37008_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a74202ac:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _26317_f = *it;
			{
				_1a483c347_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1a74202ac:;
			++it;
			goto _iter_begin_1a74202ac;
		}
		_iter_end_1a74202ac:;
	};
}



inline void _1a483c831_eliminateScopePackage(jule::Ptr<_1a3e37008_Package>& _26831_pkg) {
	_1a483c589_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a483ca40_EliminateScopes(jule::Ptr<_1a4380b6b_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1a3e3409e_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1a483c831_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1a7422017:;
	}
	_iter_end_1a7422017:;;
	_1a483c831_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1c8473b08_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _1b9d2b8ed_HasPrefix(_39917_f,_1b9d361aa_Join(jule::Slice<jule::Str>::make({_1b9deb1d7_PathStdlib,_39925_p})));
}



inline jule::Bool _1a3000ad9_isConstantValidConditionalCase(jule::Ptr<_1a3e21531_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a74a031a:;
			{
				jule::Ptr<_1a31618e8_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_1a31618e8_Const>();;
				return (_1a31ba3e1_IsBool(_40613_c.ptr()) && _1a31b8048_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1a74a0969:;
	};
	return false;
}



inline jule::Bool _1c8476688_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a74a0ccc:;
			{
				jule::Ptr<_1a31618e8_Const> _41513_c = _41223_expr.operator jule::Ptr<_1a31618e8_Const>();;
				return (_1a31ba3e1_IsBool(_41513_c.ptr()) && (!(_1a31b8048_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c00e9_BinopExprModel>>()) {
			_case_begin_1a74a0d43:;
			{
				jule::Ptr<_1a31c00e9_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_1a31c00e9_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1c8476688_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _1c8476688_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1a74a1926:;
	};
	return false;
}



inline jule::Bool _1c844a0eb_isConstantValidMatchCase(jule::Ptr<_1a3e236a9_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a74a188d:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ea2e75_Data> &_42812_expr = *it;
			{
				if (((_1a3ea3838_IsConst(_42812_expr.ptr()) && _1a31ba3e1_IsBool(_42812_expr.get()._field_Constant.ptr())) && _1a31b8048_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1a74a188d:;
			++it;
			goto _iter_begin_1a74a188d;
		}
		_iter_end_1a74a188d:;
	};
	return false;
}



inline jule::Bool _1c83949d5_isUnreachableConditionalCase(jule::Ptr<_1a3e21531_If>& _43634_i) {
	return _1c8476688_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _1c8411b73_isUnreachableMatchCase(jule::Ptr<_1a3e236a9_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1a74a5c6b:;
		if (it != expr.end()) {
			jule::Ptr<_1a3ea2e75_Data> &_44112_expr = *it;
			{
				if ((!(_1c8476688_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1a74a5c6b:;
			++it;
			goto _iter_begin_1a74a5c6b;
		}
		_iter_end_1a74a5c6b:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1a4099b2c_checkForBitShiftOpt(jule::Ptr<_1a31bee0c_OperandExprModel>& _44125_l, jule::Ptr<_1a31bee0c_OperandExprModel>& _44148_r) {
	jule::Bool _44172_ok = jule::Bool();
	jule::U64 _44182_x = jule::U64();
	if (((!(_1a3e20b90_IsInt(_1a3ece105_Str(_44125_l.get()._field_Kind.ptr())))) || (!(_1a3e20b90_IsInt(_1a3ece105_Str(_44148_r.get()._field_Kind.ptr())))))) {
		_44172_ok = false;
		_44182_x = 0LLU;
		return std::make_tuple(_44172_ok,_44182_x);
	};
	{
		auto &_match_expr{ _44148_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31618e8_Const>>()) {
			_case_begin_1a74e23d4:;
			{
				goto _match_end_1a74e30a5;
			}
		}
		else {
			_case_begin_1a74e310a:;
			{
				_44172_ok = false;
				_44182_x = 0LLU;
				return std::make_tuple(_44172_ok,_44182_x);
			}
		}
		_match_end_1a74e30a5:;
	};
	_44182_x=static_cast<jule::U64>(_1a31b89e9_AsU64(_44148_r.get()._field_Model.operator jule::Ptr<_1a31618e8_Const>().ptr()));
	if (((_44182_x == 0LLU) || ((_44182_x & 1LL) != 0LLU))) {
		_44172_ok = false;
		_44182_x = 0LLU;
		return std::make_tuple(_44172_ok,_44182_x);
	};
	jule::F64 _4559_j = _1a3de0775_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_44182_x)));;
	jule::U64 _4569_z = static_cast<jule::U64>(_4559_j);;
	if ((static_cast<jule::F64>(_4569_z) != _4559_j)) {
		_44172_ok = false;
		_44182_x = 0LLU;
		return std::make_tuple(_44172_ok,_44182_x);
	};
	_44172_ok = true;
	_44182_x = _4569_z;
	return std::make_tuple(_44172_ok,_44182_x);
}



inline void _1a409ab2d_PushOptLevel(jule::I64 _3217_level) {
	_1c83c22c6_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c83c5d46_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c83e4727_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c83e6361_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c841523c_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c84179c0_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c8435070_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c8448418_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1a47b2531_detectEnabled(void) {
	_1a473ce4b_exprEnabled=(((_1c8435070_Ptr || _1c83e6361_Math) || _1c841523c_Access) || _1c8448418_Cond);
	_1a473e0a1_scopeEnabled=((_1c8448418_Cond || _1c83e4727_Append) || _1c83c22c6_Copy);
}



inline void _1a484a81c_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1b9e11b6a_Exit(1LL);
}



inline jule::U64 _1a4e6c35b_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1a4e6c669_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1a4e6c9ee_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1a757bd53:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a757be96:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a757c00c:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a757c073:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a757c0d9:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a757c150:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a757c1b6:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a757c22c:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a757c293:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1a757c31a:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a757c392:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1a757bced:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;
}



inline jule::Bool _1a4dbacd2_isCopyOptimizable(jule::Ptr<_1a3ea2e75_Data>& _77123_expr) {
	if ((!(_77123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _77123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c1903_SlicingExprModel>>()) {
			_case_begin_1a76291db:;
			{
				return false;
			}
		}
		_match_end_1a7629186:;
	};
	return true;
}



inline jule::Bool _1a4dbb167_isIterCopyOptimizable(jule::Ptr<_1a3ea2e75_Data>& _78227_expr, jule::Ptr<_1a3e59e4e_Var>& _78241_v) {
	if (((!(_78227_expr.get()._field_Lvalue)) && (!(_1a3ed0106_Mutable(_78227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_78241_v.get()._field_Mutable)) && (!(_78227_expr.get()._field_Mutable)));
}



inline jule::Str _1a4dc975d_decomposeCommonEsq(jule::U8 _116223_b) {
	{
		auto &_match_expr{ _116223_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a76dca0d:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a76dca74:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a76dccb6:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a76dcd2c:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a76dcd93:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a76dce09:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a76dce81:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a76dd008:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a76dd080:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a76dd118:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1a76dc854:;
			{
				return jule::Str();
			}
		}
		_match_end_1a76dc700:;
	};
}



inline jule::Str _1a4dc9a49_sbtoa(jule::U8 _118910_b) {
	if ((_118910_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_118910_b < 128LLU)) {
		jule::Str _119413_seq = _1a4dc975d_decomposeCommonEsq(_118910_b);;
		if ((!(_119413_seq.empty()))) {
			return _119413_seq;
		};
		if (((32LL <= _118910_b) && (_118910_b <= 126LLU))) {
			return static_cast<jule::Str>(_118910_b);
		};
	};
	jule::Str _12029_seq = _1a3e1de46_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_118910_b)),8LL);;
	if ((_12029_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _12029_seq);
	};
	return (jule::Str("\\", 1) + _12029_seq);
}



inline jule::Str _1a4dc9ce1_cstrBytes(jule::Slice<jule::U8> _120914_bytes) {
	jule::Str _121013_lit = jule::Str::alloc(0LL, _120914_bytes.len());;
	{
		auto &expr = _120914_bytes;
		auto it = expr.begin();
		_iter_begin_1a76e4163:;
		if (it != expr.end()) {
			jule::U8 &_121112_b = *it;
			{
				_121013_lit+=_1a4dc9a49_sbtoa(_121112_b);
			}
			_iter_next_1a76e4163:;
			++it;
			goto _iter_begin_1a76e4163;
		}
		_iter_end_1a76e4163:;
	};
	return _121013_lit;
}



inline jule::Str _1a4dca110_cstrLit(jule::Slice<jule::U8> _121712_bytes) {
	return ((jule::Str("\"", 1) + _1a4dc9ce1_cstrBytes(_121712_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1a4dca41d_ftoa(jule::F64 _12219_f, jule::I64 _122117_bitsize) {
	if ((_122117_bitsize != 32LL)) {
		if ((_12219_f == static_cast<jule::F64>(static_cast<jule::I64>(_12219_f)))) {
			return _1a4dca6b5_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12219_f)));
		};
		if ((_12219_f == static_cast<jule::F64>(static_cast<jule::U64>(_12219_f)))) {
			return _1a4dca95c_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12219_f)));
		};
	};
	jule::Str _123013_m = _1a384e3b0_FmtFloat(_12219_f,'f',-1LL,_122117_bitsize);;
	if ((!(_1b9d31392_Contains(_123013_m,jule::Str(".", 1))))) {
		_123013_m+=jule::Str(".0", 2);
	};
	return _123013_m;
}



inline jule::Str _1a4dca6b5_itoa(jule::I64 _12379_x) {
	{
		
		if ((_12379_x == jule::MAX_I64)) {
			_case_begin_1a76e7a4b:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12379_x == jule::MIN_I64)) {
			_case_begin_1a76e7ac3:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1a76e792a:;
	};
	jule::Str _12459_fmt = _1a3e1e078_FmtInt(_12379_x,10LL);;
	if (_1b9db7082_Is64Bit(jule::Str("arm64", 5))) {
		return (_12459_fmt + jule::Str("LL", 2));
	};
	return (_12459_fmt + jule::Str("L", 1));
}



inline jule::Str _1a4dca95c_utoa(jule::U64 _12529_x) {
	{
		
		if ((_12529_x == jule::MAX_U64)) {
			_case_begin_1a76e98c7:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1a76e980b:;
	};
	jule::Str _12589_fmt = _1a3e1de46_FmtUint(_12529_x,10LL);;
	if (_1b9db7082_Is64Bit(jule::Str("arm64", 5))) {
		return (_12589_fmt + jule::Str("LLU", 3));
	};
	return (_12589_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1a4dcad14_isForwarded(jule::Ptr<_1a3e21344_Scope>& _126517_s) {
	jule::Any _12669_last = _126517_s.get()._field_Stmts[(_126517_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12669_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a3ea2e75_Data>>()) {
			_case_begin_1a76ebcb4:;
			{
				{
					auto &_match_expr{ _12669_last.operator jule::Ptr<_1a3ea2e75_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a31c453d_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a76ec8b9:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a76ec853:;
						{
							return false;
						}
					}
					_match_end_1a76ec59a:;
				};
			}
		}
		else {
			_case_begin_1a76ebbd7:;
			{
				return true;
			}
		}
		_match_end_1a76ebb82:;
	};
}



inline jule::Bool _1a4dcb0cd_isBuiltinCallHasDebuginf(jule::Ptr<_1a31c0c76_FnCallExprModel>& _128030_m) {
	if ((!(_1a31cbc0a_IsBuiltin(_128030_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _128030_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>>()) {
			_case_begin_1a76ed766:;
			{
				jule::Ptr<_1a31c27b1_CommonSubIdentExprModel> _128613_csie = _128030_m.get()._field_Expr.operator jule::Ptr<_1a31c27b1_CommonSubIdentExprModel>();;
				return (_128613_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1a76ed689:;
			{
				return false;
			}
		}
		_match_end_1a76ed05c:;
	};
}



inline jule::Bool _1a4dcb30e_isExprComesFromBind(jule::Ptr<_1a3ea2e75_Data>& _129325_d) {
	{
		auto &_match_expr{ _129325_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a3e59e4e_Var>>()) {
			_case_begin_1a76ee79a:;
			{
				return _129325_d.get()._field_Model.operator jule::Ptr<_1a3e59e4e_Var>().get()._field_CppLinked;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a31c200d_StructSubIdentExprModel>>()) {
			_case_begin_1a76ee811:;
			{
				return _129325_d.get()._field_Model.operator jule::Ptr<_1a31c200d_StructSubIdentExprModel>().get()._field_Owner.get()._field_Decl.get()._field_CppLinked;
			}
		}
		else {
			_case_begin_1a76edc94:;
			{
				return false;
			}
		}
		_match_end_1a76eeca6:;
	};
}



inline void _1a4e75562_iterFiles(jule::Ptr<_1a3e37008_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_1a3e9d14b_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1a7851c2c:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e9d14b_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_1a7851c2c:;
			++it;
			goto _iter_begin_1a7851c2c;
		}
		_iter_end_1a7851c2c:;
	};
}



inline void _1a4e75694_prepareStructure(jule::Ptr<_1a30e9b8e_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1a7852469:;
		if (it != expr.end()) {
			jule::Ptr<_1a312ad46_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1a7853129:;
					if (it != expr.end()) {
						jule::Ptr<_1a31c7bc3_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_1a7853129;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1a7853e71:;
								if (it != expr.end()) {
									jule::Ptr<_1a31ca874_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_1a31c99a5_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_1a31c6c27_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a4e765c9_customType>(_1a4e765c9_customType{._field_kind=static__1a4e77e7c_asPtr(static__1a4e7b47a_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_1a3ecdc09_TypeKind>(_1a3ecdc09_TypeKind{._field_Kind=jule::Trait<_1a3ecd7ca_Kind>(jule::new_ptr<_1a4e765c9_customType>(_1a4e765c9_customType{._field_kind=static__1a4e7b47a_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1a7853e71:;
									++it;
									goto _iter_begin_1a7853e71;
								}
								_iter_end_1a7853e71:;
							};
						}
						_iter_next_1a7853129:;
						++it;
						goto _iter_begin_1a7853129;
					}
					_iter_end_1a7853129:;
				};
			}
			_iter_next_1a7852469:;
			++it;
			goto _iter_begin_1a7852469;
		}
		_iter_end_1a7852469:;
	};
}



inline jule::Str _1a4e758b4_concatAllParts(jule::Slice<jule::Ptr<_1ba1dbeab_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1a7853734:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_1a7853734:;
			++it;
			goto _iter_begin_1a7853734;
		}
		_iter_end_1a7853734:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(0LL, _103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1a7857b01:;
		if (it != expr.end()) {
			jule::Ptr<_1ba1dbeab_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_1a7857b01:;
			++it;
			goto _iter_begin_1a7857b01;
		}
		_iter_end_1a7857b01:;
	};
	return _104313_s;
}



inline jule::Ptr<_1a30c5a27_Directive> _1a4e7dcda_findDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1a7930789:;
		if (it != expr.end()) {
			jule::Ptr<_1a30c5a27_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1a7930789:;
			++it;
			goto _iter_begin_1a7930789;
		}
		_iter_end_1a7930789:;
	};
	return nullptr;
}



inline jule::Bool _1a4e7e170_hasDirective(jule::Slice<jule::Ptr<_1a30c5a27_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1a4e7dcda_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _1b9d81678_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1b9d94ceb_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1b9d81678_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1b9d94180_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _1b9d94180_HelpMap;
		auto it = expr.begin();
		_iter_begin_1a79aa3e6:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1a79aa3e6:;
			++it;
			goto _iter_begin_1a79aa3e6;
		}
		_iter_end_1a79aa3e6:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1b9d94180_HelpMap;
		auto it = expr.begin();
		_iter_begin_1a79abe64:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1b9d1351c_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1a79abe64:;
			++it;
			_519_i++;
			goto _iter_begin_1a79abe64;
		}
		_iter_end_1a79abe64:;
	};
	jule::outln(_4913_s);
}



inline void _1b9d95549_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1b9d81678_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _1b9d96dec_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1b9d9764a_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1b9d97d98_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_1b9d81678_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1a79b4499:;
			{
				_1b9d96dec_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1a79b4158:;
			{
				_1b9d9764a_toolDistarch();
			}
		}
		else {
			_case_begin_1a79b2860:;
			{
				_1b9d81678_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1a79b40e2:;
	};
}



inline void _1b9d8257a_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_1b9d81678_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _1d28c5946_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1d28c5e1e_CppStd));
}



inline void _1b9da4756_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_1b9d81678_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1a79b8beb:;
			{
				({
					auto except = static__1d299a048_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1b9d81678_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a79b7436:;
			{
				_1b9d81678_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1a79b8789:;
	};
}



inline jule::Bool _1b9d988d2_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1a79ba02c:;
			{
				_1b9d94ceb_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1a79ba093:;
			{
				_1b9d95549_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1a79ba11a:;
			{
				_1b9d97d98_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1a79ba77a:;
			{
				_1b9d8257a_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1a79ba7e1:;
			{
				_1b9da4756_mod(_15320_args);
			}
		}
		else {
			_case_begin_1a79b9e50:;
			{
				return false;
			}
		}
		_match_end_1a79b9d73:;
	};
	return true;
}



inline void _1b9e0b22a_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1d38a82a7_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1b9e0b22a_showInfo();
		return;;
	};
	if (_1b9d988d2_processCommand(_18913_args)) {
		return;;
	};
	_1a4eb1856_compileCommand(_18913_args);
}



inline void _1a4b90414_init(void) {
	_1d28c5946_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1d29727a1_File> _1a4e82283_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _1b9d36d15_Dir(_4316_path);;
	({
		auto except = static__1d299388d_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1b9d3929b_Create(_449_dir);
				if (!except.ok()) {
					_1a484a81c_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d2998453_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1a484a81c_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1a4e83d34_clearObjects(void) {
	({
		auto except = static__1d297a28c_Remove(_1a4ea3e42_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1b9d394aa_Remove(_1a4c89211_OutDir);
}



inline void _1a4e9001b_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1b9e0cc43_Cmd> _7313_cmd = static__1b9e0d172_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_1b9d31051_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _1b9e0d3d6_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1a79c2c27:;
					{
						static__1a48480bc_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1a79c32cc:;
					{
						static__1a48480bc_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1a79c2e9c:;
					{
						static__1a48480bc_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1a79c3013:;
					{
						static__1a48480bc_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a79c2d6a:;
					{
						static__1a48480bc_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1a79c2cb0:;
			};
			_1a484a81c_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1d28c5946_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a48480bc_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1a484a81c_Throw(jule::Str());
	};
	_1a4e83d34_clearObjects();
}



inline jule::Bool _1a491a656_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _1b9d2ea11_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _1b9da5c1e_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _1a4b8c268_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1d28c5e1e_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a79c7ed5:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a79c804b:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a79c81a0:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a79c7d81:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_1d28c71b7_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1a4e805e4_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1d28c5e1e_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a79ca779:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a79ca7e0:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a79ca944:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a79ca625:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_1d28c71b7_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1a4d90504_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1a4380b6b_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _1d28c5baa_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _1d28c5946_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a79cd1c7:;
			{
				_1a4e805e4_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a79cd7c1:;
			{
				_1a4b8c268_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1a79cd76b:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1a79ce294:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1a79ce294:;
			++it;
			goto _iter_begin_1a79ce294;
		}
		_iter_end_1a79ce294:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1a79cd480:;
		if (it != expr.end()) {
			jule::Ptr<_1a3e3409e_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1a491a656_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1a79cd480:;
			++it;
			goto _iter_begin_1a79cd480;
		}
		_iter_end_1a79cd480:;
	};
	if ((!(_1a4e8003e_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1a4e8003e_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1a4ea3e42_getCompilePath(void) {
	return _1b9d361aa_Join(jule::Slice<jule::Str>::make({_1a4c89211_OutDir,_1a4cb543a_OutName}));
}



inline void _1a4d7b820_applyTargetIndependentOptimizations(jule::Ptr<_1a4380b6b_IR>& _20545_ir) {
	jule::Ptr<_1a480a337_Optimizer> _20713_opt = static__1a475b4db_New(_20545_ir);;
	_1a47a9182_Optimize(_20713_opt.ptr());
}



inline void _1a4ce4348_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1d28c5946_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a79d20ee:;
			{
				_1a484a81c_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a79d2891:;
			{
				if (_1d28c5baa_CompilerPath.empty()) {
					_1d28c5baa_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a79d2907:;
			{
				if (_1d28c5baa_CompilerPath.empty()) {
					_1d28c5baa_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1a79d282a:;
			{
				_1a484a81c_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1d28c5946_Compiler));
			}
		}
		_match_end_1a79d21ed:;
	};
}



inline void _1a4911d34_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1a484a81c_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1a4e8acc5_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1a484a81c_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1a4e7e846_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1a484a81c_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _1b9d31051_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1a484a81c_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1a4e8acc5_checkTargetOs(_25410_os);
		_1b9e0b879_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1a4911d34_checkTargetArch(_25414_arch);
		_1b9dead52_Arch=_25414_arch;
	};
	_1a3741ed9_UpdateTarget();
}



inline void _1a4e7e978_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1a484a81c_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1a79da778:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1a79dabb8:;
			{
				_1a409ab2d_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1a79da4c0:;
			{
				_1a484a81c_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1a79da46a:;
	};
}



inline void _1a4eb137d_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1d28c5e1e_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a79dc109:;
			{
				goto _match_end_1a79db9cc;
			}
		}
		else {
			_case_begin_1a79db6ad:;
			{
				_1a484a81c_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1d28c5e1e_CppStd));
			}
		}
		_match_end_1a79db9cc:;
	};
}



inline jule::Slice<jule::Str> _1a4eb14b0_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a4eac368_FlagSet> _29613_fs = static__1a4eac654_New();;
	_1a79de23d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1a79de23d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1a79de23d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a4e8003e_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d28c6183_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d28c63e7_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1a79de23d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d28c5946_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1a79de23d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d28c5baa_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d28c71b7_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d28c698b_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d28c6da9_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1a79de23d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d28c5e1e_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c83c22c6_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c83c5d46_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c83e4727_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c83e6361_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c841523c_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c84179c0_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c8435070_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1a79e81d1_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c8448418_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1a4ead468_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1a484a81c_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1a4ce4348_checkCompilerFlag();
	_1a4eb137d_checkCppStdFlag();
	_1a4e7e846_checkTargetFlag(_29413_target);
	_1a4e7e978_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1a4eb15e2_setupSemaFlags(jule::I64& _33124_flags) {
	if (_1d28c6183_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a4380b6b_IR> _1a4eb1724_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1a4eb14b0_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1a4eb15e2_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1a484a81c_Throw(_1b9db28eb_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1a484a81c_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _1b9d366e9_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_1a484a81c_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d29915b1_Status> _3549_inf = ({
		auto except = static__1d299388d_Of(_1b9deb1d7_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a484a81c_Throw(_1b9db28eb_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_1d29915b1_Status>();});
	});;
	if ((!(_1d299dc3e_IsDir(_3549_inf.ptr())))) {
		_1a484a81c_Throw(_1b9db28eb_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a4380b6b_IR> _36214_ir;;
	jule::Slice<_1b9db24ab_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__1ba919ad4_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1a484a81c_Throw(_1b9db28eb_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1a4849d9e_PrintLogs(_36218_logs);
		_1a484a81c_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1a4eb1856_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_1d28c668e_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1a4380b6b_IR> _38313_ir = _1a4eb1724_buildIr(_37724_args);;
	;
	if ((!(_1d28c668e_Test))) {
		jule::Ptr<_1a31c7bc3_Fn> _38817_main = _1a3e387ac_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1a484a81c_Throw(_1b9db28eb_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1a4d7b820_applyTargetIndependentOptimizations(_38313_ir);
	_1a4370aa1_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1a4d90504_genCompileCmd(_1a4ea3e42_getCompilePath(),_38313_ir);
	jule::Ptr<_1a4e72619_ObjectCoder> _40113_oc = static__1a4e127da_New(_38313_ir,_1a4dd833d_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_1d28c668e_Test) {
		jule::Ptr<_1a4dccd8d_TestCoder> _40617_tc = static__1a4dcd311_New(_40113_oc);;
		_1a4dce543_Serialize(_40617_tc);
	} else {
		_1a4e75430_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1a4ea3e42_getCompilePath();;
	jule::Ptr<_1d29727a1_File> _41313_file = _1a4e82283_openOutput(_4129_path);;
	({
		auto except = _1d297ae4c_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1a484a81c_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1d299c5ab_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_1d28c63e7_Transpilation))) {
		_1a4e9001b_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1b9dc419e_init();
	_1a374e59b_init();
	_1a4b90414_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}